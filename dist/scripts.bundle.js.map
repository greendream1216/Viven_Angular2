{"version":3,"sources":["webpack:///./~/jquery/dist/jquery.min.js?48d1","webpack:///./~/mdbootstrap/js/bootstrap.min.js?5479","webpack:///./~/mdbootstrap/js/tether.min.js?e9f8","webpack:///./~/onsenui/js/onsenui.js?778c","webpack:///./~/jquery/dist/jquery.min.js","webpack:///./~/mdbootstrap/js/bootstrap.min.js","webpack:///./~/mdbootstrap/js/tether.min.js","webpack:///./~/onsenui/js/onsenui.js","webpack:///./~/script-loader/addScript.js"],"names":[],"mappings":"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","file":"scripts.bundle.js","sourcesContent":["require(\"!!/Users/info.tech.jjy/Documents/Job/viven-health/node_modules/script-loader/addScript.js\")(require(\"!!/Users/info.tech.jjy/Documents/Job/viven-health/node_modules/raw-loader/index.js!/Users/info.tech.jjy/Documents/Job/viven-health/node_modules/jquery/dist/jquery.min.js\"))\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/script-loader!./~/jquery/dist/jquery.min.js\n// module id = 491\n// module chunks = 3","require(\"!!/Users/info.tech.jjy/Documents/Job/viven-health/node_modules/script-loader/addScript.js\")(require(\"!!/Users/info.tech.jjy/Documents/Job/viven-health/node_modules/raw-loader/index.js!/Users/info.tech.jjy/Documents/Job/viven-health/node_modules/mdbootstrap/js/bootstrap.min.js\"))\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/script-loader!./~/mdbootstrap/js/bootstrap.min.js\n// module id = 492\n// module chunks = 3","require(\"!!/Users/info.tech.jjy/Documents/Job/viven-health/node_modules/script-loader/addScript.js\")(require(\"!!/Users/info.tech.jjy/Documents/Job/viven-health/node_modules/raw-loader/index.js!/Users/info.tech.jjy/Documents/Job/viven-health/node_modules/mdbootstrap/js/tether.min.js\"))\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/script-loader!./~/mdbootstrap/js/tether.min.js\n// module id = 493\n// module chunks = 3","require(\"!!/Users/info.tech.jjy/Documents/Job/viven-health/node_modules/script-loader/addScript.js\")(require(\"!!/Users/info.tech.jjy/Documents/Job/viven-health/node_modules/raw-loader/index.js!/Users/info.tech.jjy/Documents/Job/viven-health/node_modules/onsenui/js/onsenui.js\"))\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/script-loader!./~/onsenui/js/onsenui.js\n// module id = 494\n// module chunks = 3","module.exports = \"/*! jQuery v3.2.1 | (c) JS Foundation and other contributors | jquery.org/license */\\n!function(a,b){\\\"use strict\\\";\\\"object\\\"==typeof module&&\\\"object\\\"==typeof module.exports?module.exports=a.document?b(a,!0):function(a){if(!a.document)throw new Error(\\\"jQuery requires a window with a document\\\");return b(a)}:b(a)}(\\\"undefined\\\"!=typeof window?window:this,function(a,b){\\\"use strict\\\";var c=[],d=a.document,e=Object.getPrototypeOf,f=c.slice,g=c.concat,h=c.push,i=c.indexOf,j={},k=j.toString,l=j.hasOwnProperty,m=l.toString,n=m.call(Object),o={};function p(a,b){b=b||d;var c=b.createElement(\\\"script\\\");c.text=a,b.head.appendChild(c).parentNode.removeChild(c)}var q=\\\"3.2.1\\\",r=function(a,b){return new r.fn.init(a,b)},s=/^[\\\\s\\\\uFEFF\\\\xA0]+|[\\\\s\\\\uFEFF\\\\xA0]+$/g,t=/^-ms-/,u=/-([a-z])/g,v=function(a,b){return b.toUpperCase()};r.fn=r.prototype={jquery:q,constructor:r,length:0,toArray:function(){return f.call(this)},get:function(a){return null==a?f.call(this):a<0?this[a+this.length]:this[a]},pushStack:function(a){var b=r.merge(this.constructor(),a);return b.prevObject=this,b},each:function(a){return r.each(this,a)},map:function(a){return this.pushStack(r.map(this,function(b,c){return a.call(b,c,b)}))},slice:function(){return this.pushStack(f.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(a){var b=this.length,c=+a+(a<0?b:0);return this.pushStack(c>=0&&c<b?[this[c]]:[])},end:function(){return this.prevObject||this.constructor()},push:h,sort:c.sort,splice:c.splice},r.extend=r.fn.extend=function(){var a,b,c,d,e,f,g=arguments[0]||{},h=1,i=arguments.length,j=!1;for(\\\"boolean\\\"==typeof g&&(j=g,g=arguments[h]||{},h++),\\\"object\\\"==typeof g||r.isFunction(g)||(g={}),h===i&&(g=this,h--);h<i;h++)if(null!=(a=arguments[h]))for(b in a)c=g[b],d=a[b],g!==d&&(j&&d&&(r.isPlainObject(d)||(e=Array.isArray(d)))?(e?(e=!1,f=c&&Array.isArray(c)?c:[]):f=c&&r.isPlainObject(c)?c:{},g[b]=r.extend(j,f,d)):void 0!==d&&(g[b]=d));return g},r.extend({expando:\\\"jQuery\\\"+(q+Math.random()).replace(/\\\\D/g,\\\"\\\"),isReady:!0,error:function(a){throw new Error(a)},noop:function(){},isFunction:function(a){return\\\"function\\\"===r.type(a)},isWindow:function(a){return null!=a&&a===a.window},isNumeric:function(a){var b=r.type(a);return(\\\"number\\\"===b||\\\"string\\\"===b)&&!isNaN(a-parseFloat(a))},isPlainObject:function(a){var b,c;return!(!a||\\\"[object Object]\\\"!==k.call(a))&&(!(b=e(a))||(c=l.call(b,\\\"constructor\\\")&&b.constructor,\\\"function\\\"==typeof c&&m.call(c)===n))},isEmptyObject:function(a){var b;for(b in a)return!1;return!0},type:function(a){return null==a?a+\\\"\\\":\\\"object\\\"==typeof a||\\\"function\\\"==typeof a?j[k.call(a)]||\\\"object\\\":typeof a},globalEval:function(a){p(a)},camelCase:function(a){return a.replace(t,\\\"ms-\\\").replace(u,v)},each:function(a,b){var c,d=0;if(w(a)){for(c=a.length;d<c;d++)if(b.call(a[d],d,a[d])===!1)break}else for(d in a)if(b.call(a[d],d,a[d])===!1)break;return a},trim:function(a){return null==a?\\\"\\\":(a+\\\"\\\").replace(s,\\\"\\\")},makeArray:function(a,b){var c=b||[];return null!=a&&(w(Object(a))?r.merge(c,\\\"string\\\"==typeof a?[a]:a):h.call(c,a)),c},inArray:function(a,b,c){return null==b?-1:i.call(b,a,c)},merge:function(a,b){for(var c=+b.length,d=0,e=a.length;d<c;d++)a[e++]=b[d];return a.length=e,a},grep:function(a,b,c){for(var d,e=[],f=0,g=a.length,h=!c;f<g;f++)d=!b(a[f],f),d!==h&&e.push(a[f]);return e},map:function(a,b,c){var d,e,f=0,h=[];if(w(a))for(d=a.length;f<d;f++)e=b(a[f],f,c),null!=e&&h.push(e);else for(f in a)e=b(a[f],f,c),null!=e&&h.push(e);return g.apply([],h)},guid:1,proxy:function(a,b){var c,d,e;if(\\\"string\\\"==typeof b&&(c=a[b],b=a,a=c),r.isFunction(a))return d=f.call(arguments,2),e=function(){return a.apply(b||this,d.concat(f.call(arguments)))},e.guid=a.guid=a.guid||r.guid++,e},now:Date.now,support:o}),\\\"function\\\"==typeof Symbol&&(r.fn[Symbol.iterator]=c[Symbol.iterator]),r.each(\\\"Boolean Number String Function Array Date RegExp Object Error Symbol\\\".split(\\\" \\\"),function(a,b){j[\\\"[object \\\"+b+\\\"]\\\"]=b.toLowerCase()});function w(a){var b=!!a&&\\\"length\\\"in a&&a.length,c=r.type(a);return\\\"function\\\"!==c&&!r.isWindow(a)&&(\\\"array\\\"===c||0===b||\\\"number\\\"==typeof b&&b>0&&b-1 in a)}var x=function(a){var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u=\\\"sizzle\\\"+1*new Date,v=a.document,w=0,x=0,y=ha(),z=ha(),A=ha(),B=function(a,b){return a===b&&(l=!0),0},C={}.hasOwnProperty,D=[],E=D.pop,F=D.push,G=D.push,H=D.slice,I=function(a,b){for(var c=0,d=a.length;c<d;c++)if(a[c]===b)return c;return-1},J=\\\"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped\\\",K=\\\"[\\\\\\\\x20\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\f]\\\",L=\\\"(?:\\\\\\\\\\\\\\\\.|[\\\\\\\\w-]|[^\\\\0-\\\\\\\\xa0])+\\\",M=\\\"\\\\\\\\[\\\"+K+\\\"*(\\\"+L+\\\")(?:\\\"+K+\\\"*([*^$|!~]?=)\\\"+K+\\\"*(?:'((?:\\\\\\\\\\\\\\\\.|[^\\\\\\\\\\\\\\\\'])*)'|\\\\\\\"((?:\\\\\\\\\\\\\\\\.|[^\\\\\\\\\\\\\\\\\\\\\\\"])*)\\\\\\\"|(\\\"+L+\\\"))|)\\\"+K+\\\"*\\\\\\\\]\\\",N=\\\":(\\\"+L+\\\")(?:\\\\\\\\((('((?:\\\\\\\\\\\\\\\\.|[^\\\\\\\\\\\\\\\\'])*)'|\\\\\\\"((?:\\\\\\\\\\\\\\\\.|[^\\\\\\\\\\\\\\\\\\\\\\\"])*)\\\\\\\")|((?:\\\\\\\\\\\\\\\\.|[^\\\\\\\\\\\\\\\\()[\\\\\\\\]]|\\\"+M+\\\")*)|.*)\\\\\\\\)|)\\\",O=new RegExp(K+\\\"+\\\",\\\"g\\\"),P=new RegExp(\\\"^\\\"+K+\\\"+|((?:^|[^\\\\\\\\\\\\\\\\])(?:\\\\\\\\\\\\\\\\.)*)\\\"+K+\\\"+$\\\",\\\"g\\\"),Q=new RegExp(\\\"^\\\"+K+\\\"*,\\\"+K+\\\"*\\\"),R=new RegExp(\\\"^\\\"+K+\\\"*([>+~]|\\\"+K+\\\")\\\"+K+\\\"*\\\"),S=new RegExp(\\\"=\\\"+K+\\\"*([^\\\\\\\\]'\\\\\\\"]*?)\\\"+K+\\\"*\\\\\\\\]\\\",\\\"g\\\"),T=new RegExp(N),U=new RegExp(\\\"^\\\"+L+\\\"$\\\"),V={ID:new RegExp(\\\"^#(\\\"+L+\\\")\\\"),CLASS:new RegExp(\\\"^\\\\\\\\.(\\\"+L+\\\")\\\"),TAG:new RegExp(\\\"^(\\\"+L+\\\"|[*])\\\"),ATTR:new RegExp(\\\"^\\\"+M),PSEUDO:new RegExp(\\\"^\\\"+N),CHILD:new RegExp(\\\"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\\\\\(\\\"+K+\\\"*(even|odd|(([+-]|)(\\\\\\\\d*)n|)\\\"+K+\\\"*(?:([+-]|)\\\"+K+\\\"*(\\\\\\\\d+)|))\\\"+K+\\\"*\\\\\\\\)|)\\\",\\\"i\\\"),bool:new RegExp(\\\"^(?:\\\"+J+\\\")$\\\",\\\"i\\\"),needsContext:new RegExp(\\\"^\\\"+K+\\\"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\\\\\(\\\"+K+\\\"*((?:-\\\\\\\\d)?\\\\\\\\d*)\\\"+K+\\\"*\\\\\\\\)|)(?=[^-]|$)\\\",\\\"i\\\")},W=/^(?:input|select|textarea|button)$/i,X=/^h\\\\d$/i,Y=/^[^{]+\\\\{\\\\s*\\\\[native \\\\w/,Z=/^(?:#([\\\\w-]+)|(\\\\w+)|\\\\.([\\\\w-]+))$/,$=/[+~]/,_=new RegExp(\\\"\\\\\\\\\\\\\\\\([\\\\\\\\da-f]{1,6}\\\"+K+\\\"?|(\\\"+K+\\\")|.)\\\",\\\"ig\\\"),aa=function(a,b,c){var d=\\\"0x\\\"+b-65536;return d!==d||c?b:d<0?String.fromCharCode(d+65536):String.fromCharCode(d>>10|55296,1023&d|56320)},ba=/([\\\\0-\\\\x1f\\\\x7f]|^-?\\\\d)|^-$|[^\\\\0-\\\\x1f\\\\x7f-\\\\uFFFF\\\\w-]/g,ca=function(a,b){return b?\\\"\\\\0\\\"===a?\\\"\\\\ufffd\\\":a.slice(0,-1)+\\\"\\\\\\\\\\\"+a.charCodeAt(a.length-1).toString(16)+\\\" \\\":\\\"\\\\\\\\\\\"+a},da=function(){m()},ea=ta(function(a){return a.disabled===!0&&(\\\"form\\\"in a||\\\"label\\\"in a)},{dir:\\\"parentNode\\\",next:\\\"legend\\\"});try{G.apply(D=H.call(v.childNodes),v.childNodes),D[v.childNodes.length].nodeType}catch(fa){G={apply:D.length?function(a,b){F.apply(a,H.call(b))}:function(a,b){var c=a.length,d=0;while(a[c++]=b[d++]);a.length=c-1}}}function ga(a,b,d,e){var f,h,j,k,l,o,r,s=b&&b.ownerDocument,w=b?b.nodeType:9;if(d=d||[],\\\"string\\\"!=typeof a||!a||1!==w&&9!==w&&11!==w)return d;if(!e&&((b?b.ownerDocument||b:v)!==n&&m(b),b=b||n,p)){if(11!==w&&(l=Z.exec(a)))if(f=l[1]){if(9===w){if(!(j=b.getElementById(f)))return d;if(j.id===f)return d.push(j),d}else if(s&&(j=s.getElementById(f))&&t(b,j)&&j.id===f)return d.push(j),d}else{if(l[2])return G.apply(d,b.getElementsByTagName(a)),d;if((f=l[3])&&c.getElementsByClassName&&b.getElementsByClassName)return G.apply(d,b.getElementsByClassName(f)),d}if(c.qsa&&!A[a+\\\" \\\"]&&(!q||!q.test(a))){if(1!==w)s=b,r=a;else if(\\\"object\\\"!==b.nodeName.toLowerCase()){(k=b.getAttribute(\\\"id\\\"))?k=k.replace(ba,ca):b.setAttribute(\\\"id\\\",k=u),o=g(a),h=o.length;while(h--)o[h]=\\\"#\\\"+k+\\\" \\\"+sa(o[h]);r=o.join(\\\",\\\"),s=$.test(a)&&qa(b.parentNode)||b}if(r)try{return G.apply(d,s.querySelectorAll(r)),d}catch(x){}finally{k===u&&b.removeAttribute(\\\"id\\\")}}}return i(a.replace(P,\\\"$1\\\"),b,d,e)}function ha(){var a=[];function b(c,e){return a.push(c+\\\" \\\")>d.cacheLength&&delete b[a.shift()],b[c+\\\" \\\"]=e}return b}function ia(a){return a[u]=!0,a}function ja(a){var b=n.createElement(\\\"fieldset\\\");try{return!!a(b)}catch(c){return!1}finally{b.parentNode&&b.parentNode.removeChild(b),b=null}}function ka(a,b){var c=a.split(\\\"|\\\"),e=c.length;while(e--)d.attrHandle[c[e]]=b}function la(a,b){var c=b&&a,d=c&&1===a.nodeType&&1===b.nodeType&&a.sourceIndex-b.sourceIndex;if(d)return d;if(c)while(c=c.nextSibling)if(c===b)return-1;return a?1:-1}function ma(a){return function(b){var c=b.nodeName.toLowerCase();return\\\"input\\\"===c&&b.type===a}}function na(a){return function(b){var c=b.nodeName.toLowerCase();return(\\\"input\\\"===c||\\\"button\\\"===c)&&b.type===a}}function oa(a){return function(b){return\\\"form\\\"in b?b.parentNode&&b.disabled===!1?\\\"label\\\"in b?\\\"label\\\"in b.parentNode?b.parentNode.disabled===a:b.disabled===a:b.isDisabled===a||b.isDisabled!==!a&&ea(b)===a:b.disabled===a:\\\"label\\\"in b&&b.disabled===a}}function pa(a){return ia(function(b){return b=+b,ia(function(c,d){var e,f=a([],c.length,b),g=f.length;while(g--)c[e=f[g]]&&(c[e]=!(d[e]=c[e]))})})}function qa(a){return a&&\\\"undefined\\\"!=typeof a.getElementsByTagName&&a}c=ga.support={},f=ga.isXML=function(a){var b=a&&(a.ownerDocument||a).documentElement;return!!b&&\\\"HTML\\\"!==b.nodeName},m=ga.setDocument=function(a){var b,e,g=a?a.ownerDocument||a:v;return g!==n&&9===g.nodeType&&g.documentElement?(n=g,o=n.documentElement,p=!f(n),v!==n&&(e=n.defaultView)&&e.top!==e&&(e.addEventListener?e.addEventListener(\\\"unload\\\",da,!1):e.attachEvent&&e.attachEvent(\\\"onunload\\\",da)),c.attributes=ja(function(a){return a.className=\\\"i\\\",!a.getAttribute(\\\"className\\\")}),c.getElementsByTagName=ja(function(a){return a.appendChild(n.createComment(\\\"\\\")),!a.getElementsByTagName(\\\"*\\\").length}),c.getElementsByClassName=Y.test(n.getElementsByClassName),c.getById=ja(function(a){return o.appendChild(a).id=u,!n.getElementsByName||!n.getElementsByName(u).length}),c.getById?(d.filter.ID=function(a){var b=a.replace(_,aa);return function(a){return a.getAttribute(\\\"id\\\")===b}},d.find.ID=function(a,b){if(\\\"undefined\\\"!=typeof b.getElementById&&p){var c=b.getElementById(a);return c?[c]:[]}}):(d.filter.ID=function(a){var b=a.replace(_,aa);return function(a){var c=\\\"undefined\\\"!=typeof a.getAttributeNode&&a.getAttributeNode(\\\"id\\\");return c&&c.value===b}},d.find.ID=function(a,b){if(\\\"undefined\\\"!=typeof b.getElementById&&p){var c,d,e,f=b.getElementById(a);if(f){if(c=f.getAttributeNode(\\\"id\\\"),c&&c.value===a)return[f];e=b.getElementsByName(a),d=0;while(f=e[d++])if(c=f.getAttributeNode(\\\"id\\\"),c&&c.value===a)return[f]}return[]}}),d.find.TAG=c.getElementsByTagName?function(a,b){return\\\"undefined\\\"!=typeof b.getElementsByTagName?b.getElementsByTagName(a):c.qsa?b.querySelectorAll(a):void 0}:function(a,b){var c,d=[],e=0,f=b.getElementsByTagName(a);if(\\\"*\\\"===a){while(c=f[e++])1===c.nodeType&&d.push(c);return d}return f},d.find.CLASS=c.getElementsByClassName&&function(a,b){if(\\\"undefined\\\"!=typeof b.getElementsByClassName&&p)return b.getElementsByClassName(a)},r=[],q=[],(c.qsa=Y.test(n.querySelectorAll))&&(ja(function(a){o.appendChild(a).innerHTML=\\\"<a id='\\\"+u+\\\"'></a><select id='\\\"+u+\\\"-\\\\r\\\\\\\\' msallowcapture=''><option selected=''></option></select>\\\",a.querySelectorAll(\\\"[msallowcapture^='']\\\").length&&q.push(\\\"[*^$]=\\\"+K+\\\"*(?:''|\\\\\\\"\\\\\\\")\\\"),a.querySelectorAll(\\\"[selected]\\\").length||q.push(\\\"\\\\\\\\[\\\"+K+\\\"*(?:value|\\\"+J+\\\")\\\"),a.querySelectorAll(\\\"[id~=\\\"+u+\\\"-]\\\").length||q.push(\\\"~=\\\"),a.querySelectorAll(\\\":checked\\\").length||q.push(\\\":checked\\\"),a.querySelectorAll(\\\"a#\\\"+u+\\\"+*\\\").length||q.push(\\\".#.+[+~]\\\")}),ja(function(a){a.innerHTML=\\\"<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>\\\";var b=n.createElement(\\\"input\\\");b.setAttribute(\\\"type\\\",\\\"hidden\\\"),a.appendChild(b).setAttribute(\\\"name\\\",\\\"D\\\"),a.querySelectorAll(\\\"[name=d]\\\").length&&q.push(\\\"name\\\"+K+\\\"*[*^$|!~]?=\\\"),2!==a.querySelectorAll(\\\":enabled\\\").length&&q.push(\\\":enabled\\\",\\\":disabled\\\"),o.appendChild(a).disabled=!0,2!==a.querySelectorAll(\\\":disabled\\\").length&&q.push(\\\":enabled\\\",\\\":disabled\\\"),a.querySelectorAll(\\\"*,:x\\\"),q.push(\\\",.*:\\\")})),(c.matchesSelector=Y.test(s=o.matches||o.webkitMatchesSelector||o.mozMatchesSelector||o.oMatchesSelector||o.msMatchesSelector))&&ja(function(a){c.disconnectedMatch=s.call(a,\\\"*\\\"),s.call(a,\\\"[s!='']:x\\\"),r.push(\\\"!=\\\",N)}),q=q.length&&new RegExp(q.join(\\\"|\\\")),r=r.length&&new RegExp(r.join(\\\"|\\\")),b=Y.test(o.compareDocumentPosition),t=b||Y.test(o.contains)?function(a,b){var c=9===a.nodeType?a.documentElement:a,d=b&&b.parentNode;return a===d||!(!d||1!==d.nodeType||!(c.contains?c.contains(d):a.compareDocumentPosition&&16&a.compareDocumentPosition(d)))}:function(a,b){if(b)while(b=b.parentNode)if(b===a)return!0;return!1},B=b?function(a,b){if(a===b)return l=!0,0;var d=!a.compareDocumentPosition-!b.compareDocumentPosition;return d?d:(d=(a.ownerDocument||a)===(b.ownerDocument||b)?a.compareDocumentPosition(b):1,1&d||!c.sortDetached&&b.compareDocumentPosition(a)===d?a===n||a.ownerDocument===v&&t(v,a)?-1:b===n||b.ownerDocument===v&&t(v,b)?1:k?I(k,a)-I(k,b):0:4&d?-1:1)}:function(a,b){if(a===b)return l=!0,0;var c,d=0,e=a.parentNode,f=b.parentNode,g=[a],h=[b];if(!e||!f)return a===n?-1:b===n?1:e?-1:f?1:k?I(k,a)-I(k,b):0;if(e===f)return la(a,b);c=a;while(c=c.parentNode)g.unshift(c);c=b;while(c=c.parentNode)h.unshift(c);while(g[d]===h[d])d++;return d?la(g[d],h[d]):g[d]===v?-1:h[d]===v?1:0},n):n},ga.matches=function(a,b){return ga(a,null,null,b)},ga.matchesSelector=function(a,b){if((a.ownerDocument||a)!==n&&m(a),b=b.replace(S,\\\"='$1']\\\"),c.matchesSelector&&p&&!A[b+\\\" \\\"]&&(!r||!r.test(b))&&(!q||!q.test(b)))try{var d=s.call(a,b);if(d||c.disconnectedMatch||a.document&&11!==a.document.nodeType)return d}catch(e){}return ga(b,n,null,[a]).length>0},ga.contains=function(a,b){return(a.ownerDocument||a)!==n&&m(a),t(a,b)},ga.attr=function(a,b){(a.ownerDocument||a)!==n&&m(a);var e=d.attrHandle[b.toLowerCase()],f=e&&C.call(d.attrHandle,b.toLowerCase())?e(a,b,!p):void 0;return void 0!==f?f:c.attributes||!p?a.getAttribute(b):(f=a.getAttributeNode(b))&&f.specified?f.value:null},ga.escape=function(a){return(a+\\\"\\\").replace(ba,ca)},ga.error=function(a){throw new Error(\\\"Syntax error, unrecognized expression: \\\"+a)},ga.uniqueSort=function(a){var b,d=[],e=0,f=0;if(l=!c.detectDuplicates,k=!c.sortStable&&a.slice(0),a.sort(B),l){while(b=a[f++])b===a[f]&&(e=d.push(f));while(e--)a.splice(d[e],1)}return k=null,a},e=ga.getText=function(a){var b,c=\\\"\\\",d=0,f=a.nodeType;if(f){if(1===f||9===f||11===f){if(\\\"string\\\"==typeof a.textContent)return a.textContent;for(a=a.firstChild;a;a=a.nextSibling)c+=e(a)}else if(3===f||4===f)return a.nodeValue}else while(b=a[d++])c+=e(b);return c},d=ga.selectors={cacheLength:50,createPseudo:ia,match:V,attrHandle:{},find:{},relative:{\\\">\\\":{dir:\\\"parentNode\\\",first:!0},\\\" \\\":{dir:\\\"parentNode\\\"},\\\"+\\\":{dir:\\\"previousSibling\\\",first:!0},\\\"~\\\":{dir:\\\"previousSibling\\\"}},preFilter:{ATTR:function(a){return a[1]=a[1].replace(_,aa),a[3]=(a[3]||a[4]||a[5]||\\\"\\\").replace(_,aa),\\\"~=\\\"===a[2]&&(a[3]=\\\" \\\"+a[3]+\\\" \\\"),a.slice(0,4)},CHILD:function(a){return a[1]=a[1].toLowerCase(),\\\"nth\\\"===a[1].slice(0,3)?(a[3]||ga.error(a[0]),a[4]=+(a[4]?a[5]+(a[6]||1):2*(\\\"even\\\"===a[3]||\\\"odd\\\"===a[3])),a[5]=+(a[7]+a[8]||\\\"odd\\\"===a[3])):a[3]&&ga.error(a[0]),a},PSEUDO:function(a){var b,c=!a[6]&&a[2];return V.CHILD.test(a[0])?null:(a[3]?a[2]=a[4]||a[5]||\\\"\\\":c&&T.test(c)&&(b=g(c,!0))&&(b=c.indexOf(\\\")\\\",c.length-b)-c.length)&&(a[0]=a[0].slice(0,b),a[2]=c.slice(0,b)),a.slice(0,3))}},filter:{TAG:function(a){var b=a.replace(_,aa).toLowerCase();return\\\"*\\\"===a?function(){return!0}:function(a){return a.nodeName&&a.nodeName.toLowerCase()===b}},CLASS:function(a){var b=y[a+\\\" \\\"];return b||(b=new RegExp(\\\"(^|\\\"+K+\\\")\\\"+a+\\\"(\\\"+K+\\\"|$)\\\"))&&y(a,function(a){return b.test(\\\"string\\\"==typeof a.className&&a.className||\\\"undefined\\\"!=typeof a.getAttribute&&a.getAttribute(\\\"class\\\")||\\\"\\\")})},ATTR:function(a,b,c){return function(d){var e=ga.attr(d,a);return null==e?\\\"!=\\\"===b:!b||(e+=\\\"\\\",\\\"=\\\"===b?e===c:\\\"!=\\\"===b?e!==c:\\\"^=\\\"===b?c&&0===e.indexOf(c):\\\"*=\\\"===b?c&&e.indexOf(c)>-1:\\\"$=\\\"===b?c&&e.slice(-c.length)===c:\\\"~=\\\"===b?(\\\" \\\"+e.replace(O,\\\" \\\")+\\\" \\\").indexOf(c)>-1:\\\"|=\\\"===b&&(e===c||e.slice(0,c.length+1)===c+\\\"-\\\"))}},CHILD:function(a,b,c,d,e){var f=\\\"nth\\\"!==a.slice(0,3),g=\\\"last\\\"!==a.slice(-4),h=\\\"of-type\\\"===b;return 1===d&&0===e?function(a){return!!a.parentNode}:function(b,c,i){var j,k,l,m,n,o,p=f!==g?\\\"nextSibling\\\":\\\"previousSibling\\\",q=b.parentNode,r=h&&b.nodeName.toLowerCase(),s=!i&&!h,t=!1;if(q){if(f){while(p){m=b;while(m=m[p])if(h?m.nodeName.toLowerCase()===r:1===m.nodeType)return!1;o=p=\\\"only\\\"===a&&!o&&\\\"nextSibling\\\"}return!0}if(o=[g?q.firstChild:q.lastChild],g&&s){m=q,l=m[u]||(m[u]={}),k=l[m.uniqueID]||(l[m.uniqueID]={}),j=k[a]||[],n=j[0]===w&&j[1],t=n&&j[2],m=n&&q.childNodes[n];while(m=++n&&m&&m[p]||(t=n=0)||o.pop())if(1===m.nodeType&&++t&&m===b){k[a]=[w,n,t];break}}else if(s&&(m=b,l=m[u]||(m[u]={}),k=l[m.uniqueID]||(l[m.uniqueID]={}),j=k[a]||[],n=j[0]===w&&j[1],t=n),t===!1)while(m=++n&&m&&m[p]||(t=n=0)||o.pop())if((h?m.nodeName.toLowerCase()===r:1===m.nodeType)&&++t&&(s&&(l=m[u]||(m[u]={}),k=l[m.uniqueID]||(l[m.uniqueID]={}),k[a]=[w,t]),m===b))break;return t-=e,t===d||t%d===0&&t/d>=0}}},PSEUDO:function(a,b){var c,e=d.pseudos[a]||d.setFilters[a.toLowerCase()]||ga.error(\\\"unsupported pseudo: \\\"+a);return e[u]?e(b):e.length>1?(c=[a,a,\\\"\\\",b],d.setFilters.hasOwnProperty(a.toLowerCase())?ia(function(a,c){var d,f=e(a,b),g=f.length;while(g--)d=I(a,f[g]),a[d]=!(c[d]=f[g])}):function(a){return e(a,0,c)}):e}},pseudos:{not:ia(function(a){var b=[],c=[],d=h(a.replace(P,\\\"$1\\\"));return d[u]?ia(function(a,b,c,e){var f,g=d(a,null,e,[]),h=a.length;while(h--)(f=g[h])&&(a[h]=!(b[h]=f))}):function(a,e,f){return b[0]=a,d(b,null,f,c),b[0]=null,!c.pop()}}),has:ia(function(a){return function(b){return ga(a,b).length>0}}),contains:ia(function(a){return a=a.replace(_,aa),function(b){return(b.textContent||b.innerText||e(b)).indexOf(a)>-1}}),lang:ia(function(a){return U.test(a||\\\"\\\")||ga.error(\\\"unsupported lang: \\\"+a),a=a.replace(_,aa).toLowerCase(),function(b){var c;do if(c=p?b.lang:b.getAttribute(\\\"xml:lang\\\")||b.getAttribute(\\\"lang\\\"))return c=c.toLowerCase(),c===a||0===c.indexOf(a+\\\"-\\\");while((b=b.parentNode)&&1===b.nodeType);return!1}}),target:function(b){var c=a.location&&a.location.hash;return c&&c.slice(1)===b.id},root:function(a){return a===o},focus:function(a){return a===n.activeElement&&(!n.hasFocus||n.hasFocus())&&!!(a.type||a.href||~a.tabIndex)},enabled:oa(!1),disabled:oa(!0),checked:function(a){var b=a.nodeName.toLowerCase();return\\\"input\\\"===b&&!!a.checked||\\\"option\\\"===b&&!!a.selected},selected:function(a){return a.parentNode&&a.parentNode.selectedIndex,a.selected===!0},empty:function(a){for(a=a.firstChild;a;a=a.nextSibling)if(a.nodeType<6)return!1;return!0},parent:function(a){return!d.pseudos.empty(a)},header:function(a){return X.test(a.nodeName)},input:function(a){return W.test(a.nodeName)},button:function(a){var b=a.nodeName.toLowerCase();return\\\"input\\\"===b&&\\\"button\\\"===a.type||\\\"button\\\"===b},text:function(a){var b;return\\\"input\\\"===a.nodeName.toLowerCase()&&\\\"text\\\"===a.type&&(null==(b=a.getAttribute(\\\"type\\\"))||\\\"text\\\"===b.toLowerCase())},first:pa(function(){return[0]}),last:pa(function(a,b){return[b-1]}),eq:pa(function(a,b,c){return[c<0?c+b:c]}),even:pa(function(a,b){for(var c=0;c<b;c+=2)a.push(c);return a}),odd:pa(function(a,b){for(var c=1;c<b;c+=2)a.push(c);return a}),lt:pa(function(a,b,c){for(var d=c<0?c+b:c;--d>=0;)a.push(d);return a}),gt:pa(function(a,b,c){for(var d=c<0?c+b:c;++d<b;)a.push(d);return a})}},d.pseudos.nth=d.pseudos.eq;for(b in{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})d.pseudos[b]=ma(b);for(b in{submit:!0,reset:!0})d.pseudos[b]=na(b);function ra(){}ra.prototype=d.filters=d.pseudos,d.setFilters=new ra,g=ga.tokenize=function(a,b){var c,e,f,g,h,i,j,k=z[a+\\\" \\\"];if(k)return b?0:k.slice(0);h=a,i=[],j=d.preFilter;while(h){c&&!(e=Q.exec(h))||(e&&(h=h.slice(e[0].length)||h),i.push(f=[])),c=!1,(e=R.exec(h))&&(c=e.shift(),f.push({value:c,type:e[0].replace(P,\\\" \\\")}),h=h.slice(c.length));for(g in d.filter)!(e=V[g].exec(h))||j[g]&&!(e=j[g](e))||(c=e.shift(),f.push({value:c,type:g,matches:e}),h=h.slice(c.length));if(!c)break}return b?h.length:h?ga.error(a):z(a,i).slice(0)};function sa(a){for(var b=0,c=a.length,d=\\\"\\\";b<c;b++)d+=a[b].value;return d}function ta(a,b,c){var d=b.dir,e=b.next,f=e||d,g=c&&\\\"parentNode\\\"===f,h=x++;return b.first?function(b,c,e){while(b=b[d])if(1===b.nodeType||g)return a(b,c,e);return!1}:function(b,c,i){var j,k,l,m=[w,h];if(i){while(b=b[d])if((1===b.nodeType||g)&&a(b,c,i))return!0}else while(b=b[d])if(1===b.nodeType||g)if(l=b[u]||(b[u]={}),k=l[b.uniqueID]||(l[b.uniqueID]={}),e&&e===b.nodeName.toLowerCase())b=b[d]||b;else{if((j=k[f])&&j[0]===w&&j[1]===h)return m[2]=j[2];if(k[f]=m,m[2]=a(b,c,i))return!0}return!1}}function ua(a){return a.length>1?function(b,c,d){var e=a.length;while(e--)if(!a[e](b,c,d))return!1;return!0}:a[0]}function va(a,b,c){for(var d=0,e=b.length;d<e;d++)ga(a,b[d],c);return c}function wa(a,b,c,d,e){for(var f,g=[],h=0,i=a.length,j=null!=b;h<i;h++)(f=a[h])&&(c&&!c(f,d,e)||(g.push(f),j&&b.push(h)));return g}function xa(a,b,c,d,e,f){return d&&!d[u]&&(d=xa(d)),e&&!e[u]&&(e=xa(e,f)),ia(function(f,g,h,i){var j,k,l,m=[],n=[],o=g.length,p=f||va(b||\\\"*\\\",h.nodeType?[h]:h,[]),q=!a||!f&&b?p:wa(p,m,a,h,i),r=c?e||(f?a:o||d)?[]:g:q;if(c&&c(q,r,h,i),d){j=wa(r,n),d(j,[],h,i),k=j.length;while(k--)(l=j[k])&&(r[n[k]]=!(q[n[k]]=l))}if(f){if(e||a){if(e){j=[],k=r.length;while(k--)(l=r[k])&&j.push(q[k]=l);e(null,r=[],j,i)}k=r.length;while(k--)(l=r[k])&&(j=e?I(f,l):m[k])>-1&&(f[j]=!(g[j]=l))}}else r=wa(r===g?r.splice(o,r.length):r),e?e(null,g,r,i):G.apply(g,r)})}function ya(a){for(var b,c,e,f=a.length,g=d.relative[a[0].type],h=g||d.relative[\\\" \\\"],i=g?1:0,k=ta(function(a){return a===b},h,!0),l=ta(function(a){return I(b,a)>-1},h,!0),m=[function(a,c,d){var e=!g&&(d||c!==j)||((b=c).nodeType?k(a,c,d):l(a,c,d));return b=null,e}];i<f;i++)if(c=d.relative[a[i].type])m=[ta(ua(m),c)];else{if(c=d.filter[a[i].type].apply(null,a[i].matches),c[u]){for(e=++i;e<f;e++)if(d.relative[a[e].type])break;return xa(i>1&&ua(m),i>1&&sa(a.slice(0,i-1).concat({value:\\\" \\\"===a[i-2].type?\\\"*\\\":\\\"\\\"})).replace(P,\\\"$1\\\"),c,i<e&&ya(a.slice(i,e)),e<f&&ya(a=a.slice(e)),e<f&&sa(a))}m.push(c)}return ua(m)}function za(a,b){var c=b.length>0,e=a.length>0,f=function(f,g,h,i,k){var l,o,q,r=0,s=\\\"0\\\",t=f&&[],u=[],v=j,x=f||e&&d.find.TAG(\\\"*\\\",k),y=w+=null==v?1:Math.random()||.1,z=x.length;for(k&&(j=g===n||g||k);s!==z&&null!=(l=x[s]);s++){if(e&&l){o=0,g||l.ownerDocument===n||(m(l),h=!p);while(q=a[o++])if(q(l,g||n,h)){i.push(l);break}k&&(w=y)}c&&((l=!q&&l)&&r--,f&&t.push(l))}if(r+=s,c&&s!==r){o=0;while(q=b[o++])q(t,u,g,h);if(f){if(r>0)while(s--)t[s]||u[s]||(u[s]=E.call(i));u=wa(u)}G.apply(i,u),k&&!f&&u.length>0&&r+b.length>1&&ga.uniqueSort(i)}return k&&(w=y,j=v),t};return c?ia(f):f}return h=ga.compile=function(a,b){var c,d=[],e=[],f=A[a+\\\" \\\"];if(!f){b||(b=g(a)),c=b.length;while(c--)f=ya(b[c]),f[u]?d.push(f):e.push(f);f=A(a,za(e,d)),f.selector=a}return f},i=ga.select=function(a,b,c,e){var f,i,j,k,l,m=\\\"function\\\"==typeof a&&a,n=!e&&g(a=m.selector||a);if(c=c||[],1===n.length){if(i=n[0]=n[0].slice(0),i.length>2&&\\\"ID\\\"===(j=i[0]).type&&9===b.nodeType&&p&&d.relative[i[1].type]){if(b=(d.find.ID(j.matches[0].replace(_,aa),b)||[])[0],!b)return c;m&&(b=b.parentNode),a=a.slice(i.shift().value.length)}f=V.needsContext.test(a)?0:i.length;while(f--){if(j=i[f],d.relative[k=j.type])break;if((l=d.find[k])&&(e=l(j.matches[0].replace(_,aa),$.test(i[0].type)&&qa(b.parentNode)||b))){if(i.splice(f,1),a=e.length&&sa(i),!a)return G.apply(c,e),c;break}}}return(m||h(a,n))(e,b,!p,c,!b||$.test(a)&&qa(b.parentNode)||b),c},c.sortStable=u.split(\\\"\\\").sort(B).join(\\\"\\\")===u,c.detectDuplicates=!!l,m(),c.sortDetached=ja(function(a){return 1&a.compareDocumentPosition(n.createElement(\\\"fieldset\\\"))}),ja(function(a){return a.innerHTML=\\\"<a href='#'></a>\\\",\\\"#\\\"===a.firstChild.getAttribute(\\\"href\\\")})||ka(\\\"type|href|height|width\\\",function(a,b,c){if(!c)return a.getAttribute(b,\\\"type\\\"===b.toLowerCase()?1:2)}),c.attributes&&ja(function(a){return a.innerHTML=\\\"<input/>\\\",a.firstChild.setAttribute(\\\"value\\\",\\\"\\\"),\\\"\\\"===a.firstChild.getAttribute(\\\"value\\\")})||ka(\\\"value\\\",function(a,b,c){if(!c&&\\\"input\\\"===a.nodeName.toLowerCase())return a.defaultValue}),ja(function(a){return null==a.getAttribute(\\\"disabled\\\")})||ka(J,function(a,b,c){var d;if(!c)return a[b]===!0?b.toLowerCase():(d=a.getAttributeNode(b))&&d.specified?d.value:null}),ga}(a);r.find=x,r.expr=x.selectors,r.expr[\\\":\\\"]=r.expr.pseudos,r.uniqueSort=r.unique=x.uniqueSort,r.text=x.getText,r.isXMLDoc=x.isXML,r.contains=x.contains,r.escapeSelector=x.escape;var y=function(a,b,c){var d=[],e=void 0!==c;while((a=a[b])&&9!==a.nodeType)if(1===a.nodeType){if(e&&r(a).is(c))break;d.push(a)}return d},z=function(a,b){for(var c=[];a;a=a.nextSibling)1===a.nodeType&&a!==b&&c.push(a);return c},A=r.expr.match.needsContext;function B(a,b){return a.nodeName&&a.nodeName.toLowerCase()===b.toLowerCase()}var C=/^<([a-z][^\\\\/\\\\0>:\\\\x20\\\\t\\\\r\\\\n\\\\f]*)[\\\\x20\\\\t\\\\r\\\\n\\\\f]*\\\\/?>(?:<\\\\/\\\\1>|)$/i,D=/^.[^:#\\\\[\\\\.,]*$/;function E(a,b,c){return r.isFunction(b)?r.grep(a,function(a,d){return!!b.call(a,d,a)!==c}):b.nodeType?r.grep(a,function(a){return a===b!==c}):\\\"string\\\"!=typeof b?r.grep(a,function(a){return i.call(b,a)>-1!==c}):D.test(b)?r.filter(b,a,c):(b=r.filter(b,a),r.grep(a,function(a){return i.call(b,a)>-1!==c&&1===a.nodeType}))}r.filter=function(a,b,c){var d=b[0];return c&&(a=\\\":not(\\\"+a+\\\")\\\"),1===b.length&&1===d.nodeType?r.find.matchesSelector(d,a)?[d]:[]:r.find.matches(a,r.grep(b,function(a){return 1===a.nodeType}))},r.fn.extend({find:function(a){var b,c,d=this.length,e=this;if(\\\"string\\\"!=typeof a)return this.pushStack(r(a).filter(function(){for(b=0;b<d;b++)if(r.contains(e[b],this))return!0}));for(c=this.pushStack([]),b=0;b<d;b++)r.find(a,e[b],c);return d>1?r.uniqueSort(c):c},filter:function(a){return this.pushStack(E(this,a||[],!1))},not:function(a){return this.pushStack(E(this,a||[],!0))},is:function(a){return!!E(this,\\\"string\\\"==typeof a&&A.test(a)?r(a):a||[],!1).length}});var F,G=/^(?:\\\\s*(<[\\\\w\\\\W]+>)[^>]*|#([\\\\w-]+))$/,H=r.fn.init=function(a,b,c){var e,f;if(!a)return this;if(c=c||F,\\\"string\\\"==typeof a){if(e=\\\"<\\\"===a[0]&&\\\">\\\"===a[a.length-1]&&a.length>=3?[null,a,null]:G.exec(a),!e||!e[1]&&b)return!b||b.jquery?(b||c).find(a):this.constructor(b).find(a);if(e[1]){if(b=b instanceof r?b[0]:b,r.merge(this,r.parseHTML(e[1],b&&b.nodeType?b.ownerDocument||b:d,!0)),C.test(e[1])&&r.isPlainObject(b))for(e in b)r.isFunction(this[e])?this[e](b[e]):this.attr(e,b[e]);return this}return f=d.getElementById(e[2]),f&&(this[0]=f,this.length=1),this}return a.nodeType?(this[0]=a,this.length=1,this):r.isFunction(a)?void 0!==c.ready?c.ready(a):a(r):r.makeArray(a,this)};H.prototype=r.fn,F=r(d);var I=/^(?:parents|prev(?:Until|All))/,J={children:!0,contents:!0,next:!0,prev:!0};r.fn.extend({has:function(a){var b=r(a,this),c=b.length;return this.filter(function(){for(var a=0;a<c;a++)if(r.contains(this,b[a]))return!0})},closest:function(a,b){var c,d=0,e=this.length,f=[],g=\\\"string\\\"!=typeof a&&r(a);if(!A.test(a))for(;d<e;d++)for(c=this[d];c&&c!==b;c=c.parentNode)if(c.nodeType<11&&(g?g.index(c)>-1:1===c.nodeType&&r.find.matchesSelector(c,a))){f.push(c);break}return this.pushStack(f.length>1?r.uniqueSort(f):f)},index:function(a){return a?\\\"string\\\"==typeof a?i.call(r(a),this[0]):i.call(this,a.jquery?a[0]:a):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(a,b){return this.pushStack(r.uniqueSort(r.merge(this.get(),r(a,b))))},addBack:function(a){return this.add(null==a?this.prevObject:this.prevObject.filter(a))}});function K(a,b){while((a=a[b])&&1!==a.nodeType);return a}r.each({parent:function(a){var b=a.parentNode;return b&&11!==b.nodeType?b:null},parents:function(a){return y(a,\\\"parentNode\\\")},parentsUntil:function(a,b,c){return y(a,\\\"parentNode\\\",c)},next:function(a){return K(a,\\\"nextSibling\\\")},prev:function(a){return K(a,\\\"previousSibling\\\")},nextAll:function(a){return y(a,\\\"nextSibling\\\")},prevAll:function(a){return y(a,\\\"previousSibling\\\")},nextUntil:function(a,b,c){return y(a,\\\"nextSibling\\\",c)},prevUntil:function(a,b,c){return y(a,\\\"previousSibling\\\",c)},siblings:function(a){return z((a.parentNode||{}).firstChild,a)},children:function(a){return z(a.firstChild)},contents:function(a){return B(a,\\\"iframe\\\")?a.contentDocument:(B(a,\\\"template\\\")&&(a=a.content||a),r.merge([],a.childNodes))}},function(a,b){r.fn[a]=function(c,d){var e=r.map(this,b,c);return\\\"Until\\\"!==a.slice(-5)&&(d=c),d&&\\\"string\\\"==typeof d&&(e=r.filter(d,e)),this.length>1&&(J[a]||r.uniqueSort(e),I.test(a)&&e.reverse()),this.pushStack(e)}});var L=/[^\\\\x20\\\\t\\\\r\\\\n\\\\f]+/g;function M(a){var b={};return r.each(a.match(L)||[],function(a,c){b[c]=!0}),b}r.Callbacks=function(a){a=\\\"string\\\"==typeof a?M(a):r.extend({},a);var b,c,d,e,f=[],g=[],h=-1,i=function(){for(e=e||a.once,d=b=!0;g.length;h=-1){c=g.shift();while(++h<f.length)f[h].apply(c[0],c[1])===!1&&a.stopOnFalse&&(h=f.length,c=!1)}a.memory||(c=!1),b=!1,e&&(f=c?[]:\\\"\\\")},j={add:function(){return f&&(c&&!b&&(h=f.length-1,g.push(c)),function d(b){r.each(b,function(b,c){r.isFunction(c)?a.unique&&j.has(c)||f.push(c):c&&c.length&&\\\"string\\\"!==r.type(c)&&d(c)})}(arguments),c&&!b&&i()),this},remove:function(){return r.each(arguments,function(a,b){var c;while((c=r.inArray(b,f,c))>-1)f.splice(c,1),c<=h&&h--}),this},has:function(a){return a?r.inArray(a,f)>-1:f.length>0},empty:function(){return f&&(f=[]),this},disable:function(){return e=g=[],f=c=\\\"\\\",this},disabled:function(){return!f},lock:function(){return e=g=[],c||b||(f=c=\\\"\\\"),this},locked:function(){return!!e},fireWith:function(a,c){return e||(c=c||[],c=[a,c.slice?c.slice():c],g.push(c),b||i()),this},fire:function(){return j.fireWith(this,arguments),this},fired:function(){return!!d}};return j};function N(a){return a}function O(a){throw a}function P(a,b,c,d){var e;try{a&&r.isFunction(e=a.promise)?e.call(a).done(b).fail(c):a&&r.isFunction(e=a.then)?e.call(a,b,c):b.apply(void 0,[a].slice(d))}catch(a){c.apply(void 0,[a])}}r.extend({Deferred:function(b){var c=[[\\\"notify\\\",\\\"progress\\\",r.Callbacks(\\\"memory\\\"),r.Callbacks(\\\"memory\\\"),2],[\\\"resolve\\\",\\\"done\\\",r.Callbacks(\\\"once memory\\\"),r.Callbacks(\\\"once memory\\\"),0,\\\"resolved\\\"],[\\\"reject\\\",\\\"fail\\\",r.Callbacks(\\\"once memory\\\"),r.Callbacks(\\\"once memory\\\"),1,\\\"rejected\\\"]],d=\\\"pending\\\",e={state:function(){return d},always:function(){return f.done(arguments).fail(arguments),this},\\\"catch\\\":function(a){return e.then(null,a)},pipe:function(){var a=arguments;return r.Deferred(function(b){r.each(c,function(c,d){var e=r.isFunction(a[d[4]])&&a[d[4]];f[d[1]](function(){var a=e&&e.apply(this,arguments);a&&r.isFunction(a.promise)?a.promise().progress(b.notify).done(b.resolve).fail(b.reject):b[d[0]+\\\"With\\\"](this,e?[a]:arguments)})}),a=null}).promise()},then:function(b,d,e){var f=0;function g(b,c,d,e){return function(){var h=this,i=arguments,j=function(){var a,j;if(!(b<f)){if(a=d.apply(h,i),a===c.promise())throw new TypeError(\\\"Thenable self-resolution\\\");j=a&&(\\\"object\\\"==typeof a||\\\"function\\\"==typeof a)&&a.then,r.isFunction(j)?e?j.call(a,g(f,c,N,e),g(f,c,O,e)):(f++,j.call(a,g(f,c,N,e),g(f,c,O,e),g(f,c,N,c.notifyWith))):(d!==N&&(h=void 0,i=[a]),(e||c.resolveWith)(h,i))}},k=e?j:function(){try{j()}catch(a){r.Deferred.exceptionHook&&r.Deferred.exceptionHook(a,k.stackTrace),b+1>=f&&(d!==O&&(h=void 0,i=[a]),c.rejectWith(h,i))}};b?k():(r.Deferred.getStackHook&&(k.stackTrace=r.Deferred.getStackHook()),a.setTimeout(k))}}return r.Deferred(function(a){c[0][3].add(g(0,a,r.isFunction(e)?e:N,a.notifyWith)),c[1][3].add(g(0,a,r.isFunction(b)?b:N)),c[2][3].add(g(0,a,r.isFunction(d)?d:O))}).promise()},promise:function(a){return null!=a?r.extend(a,e):e}},f={};return r.each(c,function(a,b){var g=b[2],h=b[5];e[b[1]]=g.add,h&&g.add(function(){d=h},c[3-a][2].disable,c[0][2].lock),g.add(b[3].fire),f[b[0]]=function(){return f[b[0]+\\\"With\\\"](this===f?void 0:this,arguments),this},f[b[0]+\\\"With\\\"]=g.fireWith}),e.promise(f),b&&b.call(f,f),f},when:function(a){var b=arguments.length,c=b,d=Array(c),e=f.call(arguments),g=r.Deferred(),h=function(a){return function(c){d[a]=this,e[a]=arguments.length>1?f.call(arguments):c,--b||g.resolveWith(d,e)}};if(b<=1&&(P(a,g.done(h(c)).resolve,g.reject,!b),\\\"pending\\\"===g.state()||r.isFunction(e[c]&&e[c].then)))return g.then();while(c--)P(e[c],h(c),g.reject);return g.promise()}});var Q=/^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;r.Deferred.exceptionHook=function(b,c){a.console&&a.console.warn&&b&&Q.test(b.name)&&a.console.warn(\\\"jQuery.Deferred exception: \\\"+b.message,b.stack,c)},r.readyException=function(b){a.setTimeout(function(){throw b})};var R=r.Deferred();r.fn.ready=function(a){return R.then(a)[\\\"catch\\\"](function(a){r.readyException(a)}),this},r.extend({isReady:!1,readyWait:1,ready:function(a){(a===!0?--r.readyWait:r.isReady)||(r.isReady=!0,a!==!0&&--r.readyWait>0||R.resolveWith(d,[r]))}}),r.ready.then=R.then;function S(){d.removeEventListener(\\\"DOMContentLoaded\\\",S),\\na.removeEventListener(\\\"load\\\",S),r.ready()}\\\"complete\\\"===d.readyState||\\\"loading\\\"!==d.readyState&&!d.documentElement.doScroll?a.setTimeout(r.ready):(d.addEventListener(\\\"DOMContentLoaded\\\",S),a.addEventListener(\\\"load\\\",S));var T=function(a,b,c,d,e,f,g){var h=0,i=a.length,j=null==c;if(\\\"object\\\"===r.type(c)){e=!0;for(h in c)T(a,b,h,c[h],!0,f,g)}else if(void 0!==d&&(e=!0,r.isFunction(d)||(g=!0),j&&(g?(b.call(a,d),b=null):(j=b,b=function(a,b,c){return j.call(r(a),c)})),b))for(;h<i;h++)b(a[h],c,g?d:d.call(a[h],h,b(a[h],c)));return e?a:j?b.call(a):i?b(a[0],c):f},U=function(a){return 1===a.nodeType||9===a.nodeType||!+a.nodeType};function V(){this.expando=r.expando+V.uid++}V.uid=1,V.prototype={cache:function(a){var b=a[this.expando];return b||(b={},U(a)&&(a.nodeType?a[this.expando]=b:Object.defineProperty(a,this.expando,{value:b,configurable:!0}))),b},set:function(a,b,c){var d,e=this.cache(a);if(\\\"string\\\"==typeof b)e[r.camelCase(b)]=c;else for(d in b)e[r.camelCase(d)]=b[d];return e},get:function(a,b){return void 0===b?this.cache(a):a[this.expando]&&a[this.expando][r.camelCase(b)]},access:function(a,b,c){return void 0===b||b&&\\\"string\\\"==typeof b&&void 0===c?this.get(a,b):(this.set(a,b,c),void 0!==c?c:b)},remove:function(a,b){var c,d=a[this.expando];if(void 0!==d){if(void 0!==b){Array.isArray(b)?b=b.map(r.camelCase):(b=r.camelCase(b),b=b in d?[b]:b.match(L)||[]),c=b.length;while(c--)delete d[b[c]]}(void 0===b||r.isEmptyObject(d))&&(a.nodeType?a[this.expando]=void 0:delete a[this.expando])}},hasData:function(a){var b=a[this.expando];return void 0!==b&&!r.isEmptyObject(b)}};var W=new V,X=new V,Y=/^(?:\\\\{[\\\\w\\\\W]*\\\\}|\\\\[[\\\\w\\\\W]*\\\\])$/,Z=/[A-Z]/g;function $(a){return\\\"true\\\"===a||\\\"false\\\"!==a&&(\\\"null\\\"===a?null:a===+a+\\\"\\\"?+a:Y.test(a)?JSON.parse(a):a)}function _(a,b,c){var d;if(void 0===c&&1===a.nodeType)if(d=\\\"data-\\\"+b.replace(Z,\\\"-$&\\\").toLowerCase(),c=a.getAttribute(d),\\\"string\\\"==typeof c){try{c=$(c)}catch(e){}X.set(a,b,c)}else c=void 0;return c}r.extend({hasData:function(a){return X.hasData(a)||W.hasData(a)},data:function(a,b,c){return X.access(a,b,c)},removeData:function(a,b){X.remove(a,b)},_data:function(a,b,c){return W.access(a,b,c)},_removeData:function(a,b){W.remove(a,b)}}),r.fn.extend({data:function(a,b){var c,d,e,f=this[0],g=f&&f.attributes;if(void 0===a){if(this.length&&(e=X.get(f),1===f.nodeType&&!W.get(f,\\\"hasDataAttrs\\\"))){c=g.length;while(c--)g[c]&&(d=g[c].name,0===d.indexOf(\\\"data-\\\")&&(d=r.camelCase(d.slice(5)),_(f,d,e[d])));W.set(f,\\\"hasDataAttrs\\\",!0)}return e}return\\\"object\\\"==typeof a?this.each(function(){X.set(this,a)}):T(this,function(b){var c;if(f&&void 0===b){if(c=X.get(f,a),void 0!==c)return c;if(c=_(f,a),void 0!==c)return c}else this.each(function(){X.set(this,a,b)})},null,b,arguments.length>1,null,!0)},removeData:function(a){return this.each(function(){X.remove(this,a)})}}),r.extend({queue:function(a,b,c){var d;if(a)return b=(b||\\\"fx\\\")+\\\"queue\\\",d=W.get(a,b),c&&(!d||Array.isArray(c)?d=W.access(a,b,r.makeArray(c)):d.push(c)),d||[]},dequeue:function(a,b){b=b||\\\"fx\\\";var c=r.queue(a,b),d=c.length,e=c.shift(),f=r._queueHooks(a,b),g=function(){r.dequeue(a,b)};\\\"inprogress\\\"===e&&(e=c.shift(),d--),e&&(\\\"fx\\\"===b&&c.unshift(\\\"inprogress\\\"),delete f.stop,e.call(a,g,f)),!d&&f&&f.empty.fire()},_queueHooks:function(a,b){var c=b+\\\"queueHooks\\\";return W.get(a,c)||W.access(a,c,{empty:r.Callbacks(\\\"once memory\\\").add(function(){W.remove(a,[b+\\\"queue\\\",c])})})}}),r.fn.extend({queue:function(a,b){var c=2;return\\\"string\\\"!=typeof a&&(b=a,a=\\\"fx\\\",c--),arguments.length<c?r.queue(this[0],a):void 0===b?this:this.each(function(){var c=r.queue(this,a,b);r._queueHooks(this,a),\\\"fx\\\"===a&&\\\"inprogress\\\"!==c[0]&&r.dequeue(this,a)})},dequeue:function(a){return this.each(function(){r.dequeue(this,a)})},clearQueue:function(a){return this.queue(a||\\\"fx\\\",[])},promise:function(a,b){var c,d=1,e=r.Deferred(),f=this,g=this.length,h=function(){--d||e.resolveWith(f,[f])};\\\"string\\\"!=typeof a&&(b=a,a=void 0),a=a||\\\"fx\\\";while(g--)c=W.get(f[g],a+\\\"queueHooks\\\"),c&&c.empty&&(d++,c.empty.add(h));return h(),e.promise(b)}});var aa=/[+-]?(?:\\\\d*\\\\.|)\\\\d+(?:[eE][+-]?\\\\d+|)/.source,ba=new RegExp(\\\"^(?:([+-])=|)(\\\"+aa+\\\")([a-z%]*)$\\\",\\\"i\\\"),ca=[\\\"Top\\\",\\\"Right\\\",\\\"Bottom\\\",\\\"Left\\\"],da=function(a,b){return a=b||a,\\\"none\\\"===a.style.display||\\\"\\\"===a.style.display&&r.contains(a.ownerDocument,a)&&\\\"none\\\"===r.css(a,\\\"display\\\")},ea=function(a,b,c,d){var e,f,g={};for(f in b)g[f]=a.style[f],a.style[f]=b[f];e=c.apply(a,d||[]);for(f in b)a.style[f]=g[f];return e};function fa(a,b,c,d){var e,f=1,g=20,h=d?function(){return d.cur()}:function(){return r.css(a,b,\\\"\\\")},i=h(),j=c&&c[3]||(r.cssNumber[b]?\\\"\\\":\\\"px\\\"),k=(r.cssNumber[b]||\\\"px\\\"!==j&&+i)&&ba.exec(r.css(a,b));if(k&&k[3]!==j){j=j||k[3],c=c||[],k=+i||1;do f=f||\\\".5\\\",k/=f,r.style(a,b,k+j);while(f!==(f=h()/i)&&1!==f&&--g)}return c&&(k=+k||+i||0,e=c[1]?k+(c[1]+1)*c[2]:+c[2],d&&(d.unit=j,d.start=k,d.end=e)),e}var ga={};function ha(a){var b,c=a.ownerDocument,d=a.nodeName,e=ga[d];return e?e:(b=c.body.appendChild(c.createElement(d)),e=r.css(b,\\\"display\\\"),b.parentNode.removeChild(b),\\\"none\\\"===e&&(e=\\\"block\\\"),ga[d]=e,e)}function ia(a,b){for(var c,d,e=[],f=0,g=a.length;f<g;f++)d=a[f],d.style&&(c=d.style.display,b?(\\\"none\\\"===c&&(e[f]=W.get(d,\\\"display\\\")||null,e[f]||(d.style.display=\\\"\\\")),\\\"\\\"===d.style.display&&da(d)&&(e[f]=ha(d))):\\\"none\\\"!==c&&(e[f]=\\\"none\\\",W.set(d,\\\"display\\\",c)));for(f=0;f<g;f++)null!=e[f]&&(a[f].style.display=e[f]);return a}r.fn.extend({show:function(){return ia(this,!0)},hide:function(){return ia(this)},toggle:function(a){return\\\"boolean\\\"==typeof a?a?this.show():this.hide():this.each(function(){da(this)?r(this).show():r(this).hide()})}});var ja=/^(?:checkbox|radio)$/i,ka=/<([a-z][^\\\\/\\\\0>\\\\x20\\\\t\\\\r\\\\n\\\\f]+)/i,la=/^$|\\\\/(?:java|ecma)script/i,ma={option:[1,\\\"<select multiple='multiple'>\\\",\\\"</select>\\\"],thead:[1,\\\"<table>\\\",\\\"</table>\\\"],col:[2,\\\"<table><colgroup>\\\",\\\"</colgroup></table>\\\"],tr:[2,\\\"<table><tbody>\\\",\\\"</tbody></table>\\\"],td:[3,\\\"<table><tbody><tr>\\\",\\\"</tr></tbody></table>\\\"],_default:[0,\\\"\\\",\\\"\\\"]};ma.optgroup=ma.option,ma.tbody=ma.tfoot=ma.colgroup=ma.caption=ma.thead,ma.th=ma.td;function na(a,b){var c;return c=\\\"undefined\\\"!=typeof a.getElementsByTagName?a.getElementsByTagName(b||\\\"*\\\"):\\\"undefined\\\"!=typeof a.querySelectorAll?a.querySelectorAll(b||\\\"*\\\"):[],void 0===b||b&&B(a,b)?r.merge([a],c):c}function oa(a,b){for(var c=0,d=a.length;c<d;c++)W.set(a[c],\\\"globalEval\\\",!b||W.get(b[c],\\\"globalEval\\\"))}var pa=/<|&#?\\\\w+;/;function qa(a,b,c,d,e){for(var f,g,h,i,j,k,l=b.createDocumentFragment(),m=[],n=0,o=a.length;n<o;n++)if(f=a[n],f||0===f)if(\\\"object\\\"===r.type(f))r.merge(m,f.nodeType?[f]:f);else if(pa.test(f)){g=g||l.appendChild(b.createElement(\\\"div\\\")),h=(ka.exec(f)||[\\\"\\\",\\\"\\\"])[1].toLowerCase(),i=ma[h]||ma._default,g.innerHTML=i[1]+r.htmlPrefilter(f)+i[2],k=i[0];while(k--)g=g.lastChild;r.merge(m,g.childNodes),g=l.firstChild,g.textContent=\\\"\\\"}else m.push(b.createTextNode(f));l.textContent=\\\"\\\",n=0;while(f=m[n++])if(d&&r.inArray(f,d)>-1)e&&e.push(f);else if(j=r.contains(f.ownerDocument,f),g=na(l.appendChild(f),\\\"script\\\"),j&&oa(g),c){k=0;while(f=g[k++])la.test(f.type||\\\"\\\")&&c.push(f)}return l}!function(){var a=d.createDocumentFragment(),b=a.appendChild(d.createElement(\\\"div\\\")),c=d.createElement(\\\"input\\\");c.setAttribute(\\\"type\\\",\\\"radio\\\"),c.setAttribute(\\\"checked\\\",\\\"checked\\\"),c.setAttribute(\\\"name\\\",\\\"t\\\"),b.appendChild(c),o.checkClone=b.cloneNode(!0).cloneNode(!0).lastChild.checked,b.innerHTML=\\\"<textarea>x</textarea>\\\",o.noCloneChecked=!!b.cloneNode(!0).lastChild.defaultValue}();var ra=d.documentElement,sa=/^key/,ta=/^(?:mouse|pointer|contextmenu|drag|drop)|click/,ua=/^([^.]*)(?:\\\\.(.+)|)/;function va(){return!0}function wa(){return!1}function xa(){try{return d.activeElement}catch(a){}}function ya(a,b,c,d,e,f){var g,h;if(\\\"object\\\"==typeof b){\\\"string\\\"!=typeof c&&(d=d||c,c=void 0);for(h in b)ya(a,h,c,d,b[h],f);return a}if(null==d&&null==e?(e=c,d=c=void 0):null==e&&(\\\"string\\\"==typeof c?(e=d,d=void 0):(e=d,d=c,c=void 0)),e===!1)e=wa;else if(!e)return a;return 1===f&&(g=e,e=function(a){return r().off(a),g.apply(this,arguments)},e.guid=g.guid||(g.guid=r.guid++)),a.each(function(){r.event.add(this,b,e,d,c)})}r.event={global:{},add:function(a,b,c,d,e){var f,g,h,i,j,k,l,m,n,o,p,q=W.get(a);if(q){c.handler&&(f=c,c=f.handler,e=f.selector),e&&r.find.matchesSelector(ra,e),c.guid||(c.guid=r.guid++),(i=q.events)||(i=q.events={}),(g=q.handle)||(g=q.handle=function(b){return\\\"undefined\\\"!=typeof r&&r.event.triggered!==b.type?r.event.dispatch.apply(a,arguments):void 0}),b=(b||\\\"\\\").match(L)||[\\\"\\\"],j=b.length;while(j--)h=ua.exec(b[j])||[],n=p=h[1],o=(h[2]||\\\"\\\").split(\\\".\\\").sort(),n&&(l=r.event.special[n]||{},n=(e?l.delegateType:l.bindType)||n,l=r.event.special[n]||{},k=r.extend({type:n,origType:p,data:d,handler:c,guid:c.guid,selector:e,needsContext:e&&r.expr.match.needsContext.test(e),namespace:o.join(\\\".\\\")},f),(m=i[n])||(m=i[n]=[],m.delegateCount=0,l.setup&&l.setup.call(a,d,o,g)!==!1||a.addEventListener&&a.addEventListener(n,g)),l.add&&(l.add.call(a,k),k.handler.guid||(k.handler.guid=c.guid)),e?m.splice(m.delegateCount++,0,k):m.push(k),r.event.global[n]=!0)}},remove:function(a,b,c,d,e){var f,g,h,i,j,k,l,m,n,o,p,q=W.hasData(a)&&W.get(a);if(q&&(i=q.events)){b=(b||\\\"\\\").match(L)||[\\\"\\\"],j=b.length;while(j--)if(h=ua.exec(b[j])||[],n=p=h[1],o=(h[2]||\\\"\\\").split(\\\".\\\").sort(),n){l=r.event.special[n]||{},n=(d?l.delegateType:l.bindType)||n,m=i[n]||[],h=h[2]&&new RegExp(\\\"(^|\\\\\\\\.)\\\"+o.join(\\\"\\\\\\\\.(?:.*\\\\\\\\.|)\\\")+\\\"(\\\\\\\\.|$)\\\"),g=f=m.length;while(f--)k=m[f],!e&&p!==k.origType||c&&c.guid!==k.guid||h&&!h.test(k.namespace)||d&&d!==k.selector&&(\\\"**\\\"!==d||!k.selector)||(m.splice(f,1),k.selector&&m.delegateCount--,l.remove&&l.remove.call(a,k));g&&!m.length&&(l.teardown&&l.teardown.call(a,o,q.handle)!==!1||r.removeEvent(a,n,q.handle),delete i[n])}else for(n in i)r.event.remove(a,n+b[j],c,d,!0);r.isEmptyObject(i)&&W.remove(a,\\\"handle events\\\")}},dispatch:function(a){var b=r.event.fix(a),c,d,e,f,g,h,i=new Array(arguments.length),j=(W.get(this,\\\"events\\\")||{})[b.type]||[],k=r.event.special[b.type]||{};for(i[0]=b,c=1;c<arguments.length;c++)i[c]=arguments[c];if(b.delegateTarget=this,!k.preDispatch||k.preDispatch.call(this,b)!==!1){h=r.event.handlers.call(this,b,j),c=0;while((f=h[c++])&&!b.isPropagationStopped()){b.currentTarget=f.elem,d=0;while((g=f.handlers[d++])&&!b.isImmediatePropagationStopped())b.rnamespace&&!b.rnamespace.test(g.namespace)||(b.handleObj=g,b.data=g.data,e=((r.event.special[g.origType]||{}).handle||g.handler).apply(f.elem,i),void 0!==e&&(b.result=e)===!1&&(b.preventDefault(),b.stopPropagation()))}return k.postDispatch&&k.postDispatch.call(this,b),b.result}},handlers:function(a,b){var c,d,e,f,g,h=[],i=b.delegateCount,j=a.target;if(i&&j.nodeType&&!(\\\"click\\\"===a.type&&a.button>=1))for(;j!==this;j=j.parentNode||this)if(1===j.nodeType&&(\\\"click\\\"!==a.type||j.disabled!==!0)){for(f=[],g={},c=0;c<i;c++)d=b[c],e=d.selector+\\\" \\\",void 0===g[e]&&(g[e]=d.needsContext?r(e,this).index(j)>-1:r.find(e,this,null,[j]).length),g[e]&&f.push(d);f.length&&h.push({elem:j,handlers:f})}return j=this,i<b.length&&h.push({elem:j,handlers:b.slice(i)}),h},addProp:function(a,b){Object.defineProperty(r.Event.prototype,a,{enumerable:!0,configurable:!0,get:r.isFunction(b)?function(){if(this.originalEvent)return b(this.originalEvent)}:function(){if(this.originalEvent)return this.originalEvent[a]},set:function(b){Object.defineProperty(this,a,{enumerable:!0,configurable:!0,writable:!0,value:b})}})},fix:function(a){return a[r.expando]?a:new r.Event(a)},special:{load:{noBubble:!0},focus:{trigger:function(){if(this!==xa()&&this.focus)return this.focus(),!1},delegateType:\\\"focusin\\\"},blur:{trigger:function(){if(this===xa()&&this.blur)return this.blur(),!1},delegateType:\\\"focusout\\\"},click:{trigger:function(){if(\\\"checkbox\\\"===this.type&&this.click&&B(this,\\\"input\\\"))return this.click(),!1},_default:function(a){return B(a.target,\\\"a\\\")}},beforeunload:{postDispatch:function(a){void 0!==a.result&&a.originalEvent&&(a.originalEvent.returnValue=a.result)}}}},r.removeEvent=function(a,b,c){a.removeEventListener&&a.removeEventListener(b,c)},r.Event=function(a,b){return this instanceof r.Event?(a&&a.type?(this.originalEvent=a,this.type=a.type,this.isDefaultPrevented=a.defaultPrevented||void 0===a.defaultPrevented&&a.returnValue===!1?va:wa,this.target=a.target&&3===a.target.nodeType?a.target.parentNode:a.target,this.currentTarget=a.currentTarget,this.relatedTarget=a.relatedTarget):this.type=a,b&&r.extend(this,b),this.timeStamp=a&&a.timeStamp||r.now(),void(this[r.expando]=!0)):new r.Event(a,b)},r.Event.prototype={constructor:r.Event,isDefaultPrevented:wa,isPropagationStopped:wa,isImmediatePropagationStopped:wa,isSimulated:!1,preventDefault:function(){var a=this.originalEvent;this.isDefaultPrevented=va,a&&!this.isSimulated&&a.preventDefault()},stopPropagation:function(){var a=this.originalEvent;this.isPropagationStopped=va,a&&!this.isSimulated&&a.stopPropagation()},stopImmediatePropagation:function(){var a=this.originalEvent;this.isImmediatePropagationStopped=va,a&&!this.isSimulated&&a.stopImmediatePropagation(),this.stopPropagation()}},r.each({altKey:!0,bubbles:!0,cancelable:!0,changedTouches:!0,ctrlKey:!0,detail:!0,eventPhase:!0,metaKey:!0,pageX:!0,pageY:!0,shiftKey:!0,view:!0,\\\"char\\\":!0,charCode:!0,key:!0,keyCode:!0,button:!0,buttons:!0,clientX:!0,clientY:!0,offsetX:!0,offsetY:!0,pointerId:!0,pointerType:!0,screenX:!0,screenY:!0,targetTouches:!0,toElement:!0,touches:!0,which:function(a){var b=a.button;return null==a.which&&sa.test(a.type)?null!=a.charCode?a.charCode:a.keyCode:!a.which&&void 0!==b&&ta.test(a.type)?1&b?1:2&b?3:4&b?2:0:a.which}},r.event.addProp),r.each({mouseenter:\\\"mouseover\\\",mouseleave:\\\"mouseout\\\",pointerenter:\\\"pointerover\\\",pointerleave:\\\"pointerout\\\"},function(a,b){r.event.special[a]={delegateType:b,bindType:b,handle:function(a){var c,d=this,e=a.relatedTarget,f=a.handleObj;return e&&(e===d||r.contains(d,e))||(a.type=f.origType,c=f.handler.apply(this,arguments),a.type=b),c}}}),r.fn.extend({on:function(a,b,c,d){return ya(this,a,b,c,d)},one:function(a,b,c,d){return ya(this,a,b,c,d,1)},off:function(a,b,c){var d,e;if(a&&a.preventDefault&&a.handleObj)return d=a.handleObj,r(a.delegateTarget).off(d.namespace?d.origType+\\\".\\\"+d.namespace:d.origType,d.selector,d.handler),this;if(\\\"object\\\"==typeof a){for(e in a)this.off(e,b,a[e]);return this}return b!==!1&&\\\"function\\\"!=typeof b||(c=b,b=void 0),c===!1&&(c=wa),this.each(function(){r.event.remove(this,a,c,b)})}});var za=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\\\\/\\\\0>\\\\x20\\\\t\\\\r\\\\n\\\\f]*)[^>]*)\\\\/>/gi,Aa=/<script|<style|<link/i,Ba=/checked\\\\s*(?:[^=]|=\\\\s*.checked.)/i,Ca=/^true\\\\/(.*)/,Da=/^\\\\s*<!(?:\\\\[CDATA\\\\[|--)|(?:\\\\]\\\\]|--)>\\\\s*$/g;function Ea(a,b){return B(a,\\\"table\\\")&&B(11!==b.nodeType?b:b.firstChild,\\\"tr\\\")?r(\\\">tbody\\\",a)[0]||a:a}function Fa(a){return a.type=(null!==a.getAttribute(\\\"type\\\"))+\\\"/\\\"+a.type,a}function Ga(a){var b=Ca.exec(a.type);return b?a.type=b[1]:a.removeAttribute(\\\"type\\\"),a}function Ha(a,b){var c,d,e,f,g,h,i,j;if(1===b.nodeType){if(W.hasData(a)&&(f=W.access(a),g=W.set(b,f),j=f.events)){delete g.handle,g.events={};for(e in j)for(c=0,d=j[e].length;c<d;c++)r.event.add(b,e,j[e][c])}X.hasData(a)&&(h=X.access(a),i=r.extend({},h),X.set(b,i))}}function Ia(a,b){var c=b.nodeName.toLowerCase();\\\"input\\\"===c&&ja.test(a.type)?b.checked=a.checked:\\\"input\\\"!==c&&\\\"textarea\\\"!==c||(b.defaultValue=a.defaultValue)}function Ja(a,b,c,d){b=g.apply([],b);var e,f,h,i,j,k,l=0,m=a.length,n=m-1,q=b[0],s=r.isFunction(q);if(s||m>1&&\\\"string\\\"==typeof q&&!o.checkClone&&Ba.test(q))return a.each(function(e){var f=a.eq(e);s&&(b[0]=q.call(this,e,f.html())),Ja(f,b,c,d)});if(m&&(e=qa(b,a[0].ownerDocument,!1,a,d),f=e.firstChild,1===e.childNodes.length&&(e=f),f||d)){for(h=r.map(na(e,\\\"script\\\"),Fa),i=h.length;l<m;l++)j=e,l!==n&&(j=r.clone(j,!0,!0),i&&r.merge(h,na(j,\\\"script\\\"))),c.call(a[l],j,l);if(i)for(k=h[h.length-1].ownerDocument,r.map(h,Ga),l=0;l<i;l++)j=h[l],la.test(j.type||\\\"\\\")&&!W.access(j,\\\"globalEval\\\")&&r.contains(k,j)&&(j.src?r._evalUrl&&r._evalUrl(j.src):p(j.textContent.replace(Da,\\\"\\\"),k))}return a}function Ka(a,b,c){for(var d,e=b?r.filter(b,a):a,f=0;null!=(d=e[f]);f++)c||1!==d.nodeType||r.cleanData(na(d)),d.parentNode&&(c&&r.contains(d.ownerDocument,d)&&oa(na(d,\\\"script\\\")),d.parentNode.removeChild(d));return a}r.extend({htmlPrefilter:function(a){return a.replace(za,\\\"<$1></$2>\\\")},clone:function(a,b,c){var d,e,f,g,h=a.cloneNode(!0),i=r.contains(a.ownerDocument,a);if(!(o.noCloneChecked||1!==a.nodeType&&11!==a.nodeType||r.isXMLDoc(a)))for(g=na(h),f=na(a),d=0,e=f.length;d<e;d++)Ia(f[d],g[d]);if(b)if(c)for(f=f||na(a),g=g||na(h),d=0,e=f.length;d<e;d++)Ha(f[d],g[d]);else Ha(a,h);return g=na(h,\\\"script\\\"),g.length>0&&oa(g,!i&&na(a,\\\"script\\\")),h},cleanData:function(a){for(var b,c,d,e=r.event.special,f=0;void 0!==(c=a[f]);f++)if(U(c)){if(b=c[W.expando]){if(b.events)for(d in b.events)e[d]?r.event.remove(c,d):r.removeEvent(c,d,b.handle);c[W.expando]=void 0}c[X.expando]&&(c[X.expando]=void 0)}}}),r.fn.extend({detach:function(a){return Ka(this,a,!0)},remove:function(a){return Ka(this,a)},text:function(a){return T(this,function(a){return void 0===a?r.text(this):this.empty().each(function(){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||(this.textContent=a)})},null,a,arguments.length)},append:function(){return Ja(this,arguments,function(a){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var b=Ea(this,a);b.appendChild(a)}})},prepend:function(){return Ja(this,arguments,function(a){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var b=Ea(this,a);b.insertBefore(a,b.firstChild)}})},before:function(){return Ja(this,arguments,function(a){this.parentNode&&this.parentNode.insertBefore(a,this)})},after:function(){return Ja(this,arguments,function(a){this.parentNode&&this.parentNode.insertBefore(a,this.nextSibling)})},empty:function(){for(var a,b=0;null!=(a=this[b]);b++)1===a.nodeType&&(r.cleanData(na(a,!1)),a.textContent=\\\"\\\");return this},clone:function(a,b){return a=null!=a&&a,b=null==b?a:b,this.map(function(){return r.clone(this,a,b)})},html:function(a){return T(this,function(a){var b=this[0]||{},c=0,d=this.length;if(void 0===a&&1===b.nodeType)return b.innerHTML;if(\\\"string\\\"==typeof a&&!Aa.test(a)&&!ma[(ka.exec(a)||[\\\"\\\",\\\"\\\"])[1].toLowerCase()]){a=r.htmlPrefilter(a);try{for(;c<d;c++)b=this[c]||{},1===b.nodeType&&(r.cleanData(na(b,!1)),b.innerHTML=a);b=0}catch(e){}}b&&this.empty().append(a)},null,a,arguments.length)},replaceWith:function(){var a=[];return Ja(this,arguments,function(b){var c=this.parentNode;r.inArray(this,a)<0&&(r.cleanData(na(this)),c&&c.replaceChild(b,this))},a)}}),r.each({appendTo:\\\"append\\\",prependTo:\\\"prepend\\\",insertBefore:\\\"before\\\",insertAfter:\\\"after\\\",replaceAll:\\\"replaceWith\\\"},function(a,b){r.fn[a]=function(a){for(var c,d=[],e=r(a),f=e.length-1,g=0;g<=f;g++)c=g===f?this:this.clone(!0),r(e[g])[b](c),h.apply(d,c.get());return this.pushStack(d)}});var La=/^margin/,Ma=new RegExp(\\\"^(\\\"+aa+\\\")(?!px)[a-z%]+$\\\",\\\"i\\\"),Na=function(b){var c=b.ownerDocument.defaultView;return c&&c.opener||(c=a),c.getComputedStyle(b)};!function(){function b(){if(i){i.style.cssText=\\\"box-sizing:border-box;position:relative;display:block;margin:auto;border:1px;padding:1px;top:1%;width:50%\\\",i.innerHTML=\\\"\\\",ra.appendChild(h);var b=a.getComputedStyle(i);c=\\\"1%\\\"!==b.top,g=\\\"2px\\\"===b.marginLeft,e=\\\"4px\\\"===b.width,i.style.marginRight=\\\"50%\\\",f=\\\"4px\\\"===b.marginRight,ra.removeChild(h),i=null}}var c,e,f,g,h=d.createElement(\\\"div\\\"),i=d.createElement(\\\"div\\\");i.style&&(i.style.backgroundClip=\\\"content-box\\\",i.cloneNode(!0).style.backgroundClip=\\\"\\\",o.clearCloneStyle=\\\"content-box\\\"===i.style.backgroundClip,h.style.cssText=\\\"border:0;width:8px;height:0;top:0;left:-9999px;padding:0;margin-top:1px;position:absolute\\\",h.appendChild(i),r.extend(o,{pixelPosition:function(){return b(),c},boxSizingReliable:function(){return b(),e},pixelMarginRight:function(){return b(),f},reliableMarginLeft:function(){return b(),g}}))}();function Oa(a,b,c){var d,e,f,g,h=a.style;return c=c||Na(a),c&&(g=c.getPropertyValue(b)||c[b],\\\"\\\"!==g||r.contains(a.ownerDocument,a)||(g=r.style(a,b)),!o.pixelMarginRight()&&Ma.test(g)&&La.test(b)&&(d=h.width,e=h.minWidth,f=h.maxWidth,h.minWidth=h.maxWidth=h.width=g,g=c.width,h.width=d,h.minWidth=e,h.maxWidth=f)),void 0!==g?g+\\\"\\\":g}function Pa(a,b){return{get:function(){return a()?void delete this.get:(this.get=b).apply(this,arguments)}}}var Qa=/^(none|table(?!-c[ea]).+)/,Ra=/^--/,Sa={position:\\\"absolute\\\",visibility:\\\"hidden\\\",display:\\\"block\\\"},Ta={letterSpacing:\\\"0\\\",fontWeight:\\\"400\\\"},Ua=[\\\"Webkit\\\",\\\"Moz\\\",\\\"ms\\\"],Va=d.createElement(\\\"div\\\").style;function Wa(a){if(a in Va)return a;var b=a[0].toUpperCase()+a.slice(1),c=Ua.length;while(c--)if(a=Ua[c]+b,a in Va)return a}function Xa(a){var b=r.cssProps[a];return b||(b=r.cssProps[a]=Wa(a)||a),b}function Ya(a,b,c){var d=ba.exec(b);return d?Math.max(0,d[2]-(c||0))+(d[3]||\\\"px\\\"):b}function Za(a,b,c,d,e){var f,g=0;for(f=c===(d?\\\"border\\\":\\\"content\\\")?4:\\\"width\\\"===b?1:0;f<4;f+=2)\\\"margin\\\"===c&&(g+=r.css(a,c+ca[f],!0,e)),d?(\\\"content\\\"===c&&(g-=r.css(a,\\\"padding\\\"+ca[f],!0,e)),\\\"margin\\\"!==c&&(g-=r.css(a,\\\"border\\\"+ca[f]+\\\"Width\\\",!0,e))):(g+=r.css(a,\\\"padding\\\"+ca[f],!0,e),\\\"padding\\\"!==c&&(g+=r.css(a,\\\"border\\\"+ca[f]+\\\"Width\\\",!0,e)));return g}function $a(a,b,c){var d,e=Na(a),f=Oa(a,b,e),g=\\\"border-box\\\"===r.css(a,\\\"boxSizing\\\",!1,e);return Ma.test(f)?f:(d=g&&(o.boxSizingReliable()||f===a.style[b]),\\\"auto\\\"===f&&(f=a[\\\"offset\\\"+b[0].toUpperCase()+b.slice(1)]),f=parseFloat(f)||0,f+Za(a,b,c||(g?\\\"border\\\":\\\"content\\\"),d,e)+\\\"px\\\")}r.extend({cssHooks:{opacity:{get:function(a,b){if(b){var c=Oa(a,\\\"opacity\\\");return\\\"\\\"===c?\\\"1\\\":c}}}},cssNumber:{animationIterationCount:!0,columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{\\\"float\\\":\\\"cssFloat\\\"},style:function(a,b,c,d){if(a&&3!==a.nodeType&&8!==a.nodeType&&a.style){var e,f,g,h=r.camelCase(b),i=Ra.test(b),j=a.style;return i||(b=Xa(h)),g=r.cssHooks[b]||r.cssHooks[h],void 0===c?g&&\\\"get\\\"in g&&void 0!==(e=g.get(a,!1,d))?e:j[b]:(f=typeof c,\\\"string\\\"===f&&(e=ba.exec(c))&&e[1]&&(c=fa(a,b,e),f=\\\"number\\\"),null!=c&&c===c&&(\\\"number\\\"===f&&(c+=e&&e[3]||(r.cssNumber[h]?\\\"\\\":\\\"px\\\")),o.clearCloneStyle||\\\"\\\"!==c||0!==b.indexOf(\\\"background\\\")||(j[b]=\\\"inherit\\\"),g&&\\\"set\\\"in g&&void 0===(c=g.set(a,c,d))||(i?j.setProperty(b,c):j[b]=c)),void 0)}},css:function(a,b,c,d){var e,f,g,h=r.camelCase(b),i=Ra.test(b);return i||(b=Xa(h)),g=r.cssHooks[b]||r.cssHooks[h],g&&\\\"get\\\"in g&&(e=g.get(a,!0,c)),void 0===e&&(e=Oa(a,b,d)),\\\"normal\\\"===e&&b in Ta&&(e=Ta[b]),\\\"\\\"===c||c?(f=parseFloat(e),c===!0||isFinite(f)?f||0:e):e}}),r.each([\\\"height\\\",\\\"width\\\"],function(a,b){r.cssHooks[b]={get:function(a,c,d){if(c)return!Qa.test(r.css(a,\\\"display\\\"))||a.getClientRects().length&&a.getBoundingClientRect().width?$a(a,b,d):ea(a,Sa,function(){return $a(a,b,d)})},set:function(a,c,d){var e,f=d&&Na(a),g=d&&Za(a,b,d,\\\"border-box\\\"===r.css(a,\\\"boxSizing\\\",!1,f),f);return g&&(e=ba.exec(c))&&\\\"px\\\"!==(e[3]||\\\"px\\\")&&(a.style[b]=c,c=r.css(a,b)),Ya(a,c,g)}}}),r.cssHooks.marginLeft=Pa(o.reliableMarginLeft,function(a,b){if(b)return(parseFloat(Oa(a,\\\"marginLeft\\\"))||a.getBoundingClientRect().left-ea(a,{marginLeft:0},function(){return a.getBoundingClientRect().left}))+\\\"px\\\"}),r.each({margin:\\\"\\\",padding:\\\"\\\",border:\\\"Width\\\"},function(a,b){r.cssHooks[a+b]={expand:function(c){for(var d=0,e={},f=\\\"string\\\"==typeof c?c.split(\\\" \\\"):[c];d<4;d++)e[a+ca[d]+b]=f[d]||f[d-2]||f[0];return e}},La.test(a)||(r.cssHooks[a+b].set=Ya)}),r.fn.extend({css:function(a,b){return T(this,function(a,b,c){var d,e,f={},g=0;if(Array.isArray(b)){for(d=Na(a),e=b.length;g<e;g++)f[b[g]]=r.css(a,b[g],!1,d);return f}return void 0!==c?r.style(a,b,c):r.css(a,b)},a,b,arguments.length>1)}});function _a(a,b,c,d,e){return new _a.prototype.init(a,b,c,d,e)}r.Tween=_a,_a.prototype={constructor:_a,init:function(a,b,c,d,e,f){this.elem=a,this.prop=c,this.easing=e||r.easing._default,this.options=b,this.start=this.now=this.cur(),this.end=d,this.unit=f||(r.cssNumber[c]?\\\"\\\":\\\"px\\\")},cur:function(){var a=_a.propHooks[this.prop];return a&&a.get?a.get(this):_a.propHooks._default.get(this)},run:function(a){var b,c=_a.propHooks[this.prop];return this.options.duration?this.pos=b=r.easing[this.easing](a,this.options.duration*a,0,1,this.options.duration):this.pos=b=a,this.now=(this.end-this.start)*b+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),c&&c.set?c.set(this):_a.propHooks._default.set(this),this}},_a.prototype.init.prototype=_a.prototype,_a.propHooks={_default:{get:function(a){var b;return 1!==a.elem.nodeType||null!=a.elem[a.prop]&&null==a.elem.style[a.prop]?a.elem[a.prop]:(b=r.css(a.elem,a.prop,\\\"\\\"),b&&\\\"auto\\\"!==b?b:0)},set:function(a){r.fx.step[a.prop]?r.fx.step[a.prop](a):1!==a.elem.nodeType||null==a.elem.style[r.cssProps[a.prop]]&&!r.cssHooks[a.prop]?a.elem[a.prop]=a.now:r.style(a.elem,a.prop,a.now+a.unit)}}},_a.propHooks.scrollTop=_a.propHooks.scrollLeft={set:function(a){a.elem.nodeType&&a.elem.parentNode&&(a.elem[a.prop]=a.now)}},r.easing={linear:function(a){return a},swing:function(a){return.5-Math.cos(a*Math.PI)/2},_default:\\\"swing\\\"},r.fx=_a.prototype.init,r.fx.step={};var ab,bb,cb=/^(?:toggle|show|hide)$/,db=/queueHooks$/;function eb(){bb&&(d.hidden===!1&&a.requestAnimationFrame?a.requestAnimationFrame(eb):a.setTimeout(eb,r.fx.interval),r.fx.tick())}function fb(){return a.setTimeout(function(){ab=void 0}),ab=r.now()}function gb(a,b){var c,d=0,e={height:a};for(b=b?1:0;d<4;d+=2-b)c=ca[d],e[\\\"margin\\\"+c]=e[\\\"padding\\\"+c]=a;return b&&(e.opacity=e.width=a),e}function hb(a,b,c){for(var d,e=(kb.tweeners[b]||[]).concat(kb.tweeners[\\\"*\\\"]),f=0,g=e.length;f<g;f++)if(d=e[f].call(c,b,a))return d}function ib(a,b,c){var d,e,f,g,h,i,j,k,l=\\\"width\\\"in b||\\\"height\\\"in b,m=this,n={},o=a.style,p=a.nodeType&&da(a),q=W.get(a,\\\"fxshow\\\");c.queue||(g=r._queueHooks(a,\\\"fx\\\"),null==g.unqueued&&(g.unqueued=0,h=g.empty.fire,g.empty.fire=function(){g.unqueued||h()}),g.unqueued++,m.always(function(){m.always(function(){g.unqueued--,r.queue(a,\\\"fx\\\").length||g.empty.fire()})}));for(d in b)if(e=b[d],cb.test(e)){if(delete b[d],f=f||\\\"toggle\\\"===e,e===(p?\\\"hide\\\":\\\"show\\\")){if(\\\"show\\\"!==e||!q||void 0===q[d])continue;p=!0}n[d]=q&&q[d]||r.style(a,d)}if(i=!r.isEmptyObject(b),i||!r.isEmptyObject(n)){l&&1===a.nodeType&&(c.overflow=[o.overflow,o.overflowX,o.overflowY],j=q&&q.display,null==j&&(j=W.get(a,\\\"display\\\")),k=r.css(a,\\\"display\\\"),\\\"none\\\"===k&&(j?k=j:(ia([a],!0),j=a.style.display||j,k=r.css(a,\\\"display\\\"),ia([a]))),(\\\"inline\\\"===k||\\\"inline-block\\\"===k&&null!=j)&&\\\"none\\\"===r.css(a,\\\"float\\\")&&(i||(m.done(function(){o.display=j}),null==j&&(k=o.display,j=\\\"none\\\"===k?\\\"\\\":k)),o.display=\\\"inline-block\\\")),c.overflow&&(o.overflow=\\\"hidden\\\",m.always(function(){o.overflow=c.overflow[0],o.overflowX=c.overflow[1],o.overflowY=c.overflow[2]})),i=!1;for(d in n)i||(q?\\\"hidden\\\"in q&&(p=q.hidden):q=W.access(a,\\\"fxshow\\\",{display:j}),f&&(q.hidden=!p),p&&ia([a],!0),m.done(function(){p||ia([a]),W.remove(a,\\\"fxshow\\\");for(d in n)r.style(a,d,n[d])})),i=hb(p?q[d]:0,d,m),d in q||(q[d]=i.start,p&&(i.end=i.start,i.start=0))}}function jb(a,b){var c,d,e,f,g;for(c in a)if(d=r.camelCase(c),e=b[d],f=a[c],Array.isArray(f)&&(e=f[1],f=a[c]=f[0]),c!==d&&(a[d]=f,delete a[c]),g=r.cssHooks[d],g&&\\\"expand\\\"in g){f=g.expand(f),delete a[d];for(c in f)c in a||(a[c]=f[c],b[c]=e)}else b[d]=e}function kb(a,b,c){var d,e,f=0,g=kb.prefilters.length,h=r.Deferred().always(function(){delete i.elem}),i=function(){if(e)return!1;for(var b=ab||fb(),c=Math.max(0,j.startTime+j.duration-b),d=c/j.duration||0,f=1-d,g=0,i=j.tweens.length;g<i;g++)j.tweens[g].run(f);return h.notifyWith(a,[j,f,c]),f<1&&i?c:(i||h.notifyWith(a,[j,1,0]),h.resolveWith(a,[j]),!1)},j=h.promise({elem:a,props:r.extend({},b),opts:r.extend(!0,{specialEasing:{},easing:r.easing._default},c),originalProperties:b,originalOptions:c,startTime:ab||fb(),duration:c.duration,tweens:[],createTween:function(b,c){var d=r.Tween(a,j.opts,b,c,j.opts.specialEasing[b]||j.opts.easing);return j.tweens.push(d),d},stop:function(b){var c=0,d=b?j.tweens.length:0;if(e)return this;for(e=!0;c<d;c++)j.tweens[c].run(1);return b?(h.notifyWith(a,[j,1,0]),h.resolveWith(a,[j,b])):h.rejectWith(a,[j,b]),this}}),k=j.props;for(jb(k,j.opts.specialEasing);f<g;f++)if(d=kb.prefilters[f].call(j,a,k,j.opts))return r.isFunction(d.stop)&&(r._queueHooks(j.elem,j.opts.queue).stop=r.proxy(d.stop,d)),d;return r.map(k,hb,j),r.isFunction(j.opts.start)&&j.opts.start.call(a,j),j.progress(j.opts.progress).done(j.opts.done,j.opts.complete).fail(j.opts.fail).always(j.opts.always),r.fx.timer(r.extend(i,{elem:a,anim:j,queue:j.opts.queue})),j}r.Animation=r.extend(kb,{tweeners:{\\\"*\\\":[function(a,b){var c=this.createTween(a,b);return fa(c.elem,a,ba.exec(b),c),c}]},tweener:function(a,b){r.isFunction(a)?(b=a,a=[\\\"*\\\"]):a=a.match(L);for(var c,d=0,e=a.length;d<e;d++)c=a[d],kb.tweeners[c]=kb.tweeners[c]||[],kb.tweeners[c].unshift(b)},prefilters:[ib],prefilter:function(a,b){b?kb.prefilters.unshift(a):kb.prefilters.push(a)}}),r.speed=function(a,b,c){var d=a&&\\\"object\\\"==typeof a?r.extend({},a):{complete:c||!c&&b||r.isFunction(a)&&a,duration:a,easing:c&&b||b&&!r.isFunction(b)&&b};return r.fx.off?d.duration=0:\\\"number\\\"!=typeof d.duration&&(d.duration in r.fx.speeds?d.duration=r.fx.speeds[d.duration]:d.duration=r.fx.speeds._default),null!=d.queue&&d.queue!==!0||(d.queue=\\\"fx\\\"),d.old=d.complete,d.complete=function(){r.isFunction(d.old)&&d.old.call(this),d.queue&&r.dequeue(this,d.queue)},d},r.fn.extend({fadeTo:function(a,b,c,d){return this.filter(da).css(\\\"opacity\\\",0).show().end().animate({opacity:b},a,c,d)},animate:function(a,b,c,d){var e=r.isEmptyObject(a),f=r.speed(b,c,d),g=function(){var b=kb(this,r.extend({},a),f);(e||W.get(this,\\\"finish\\\"))&&b.stop(!0)};return g.finish=g,e||f.queue===!1?this.each(g):this.queue(f.queue,g)},stop:function(a,b,c){var d=function(a){var b=a.stop;delete a.stop,b(c)};return\\\"string\\\"!=typeof a&&(c=b,b=a,a=void 0),b&&a!==!1&&this.queue(a||\\\"fx\\\",[]),this.each(function(){var b=!0,e=null!=a&&a+\\\"queueHooks\\\",f=r.timers,g=W.get(this);if(e)g[e]&&g[e].stop&&d(g[e]);else for(e in g)g[e]&&g[e].stop&&db.test(e)&&d(g[e]);for(e=f.length;e--;)f[e].elem!==this||null!=a&&f[e].queue!==a||(f[e].anim.stop(c),b=!1,f.splice(e,1));!b&&c||r.dequeue(this,a)})},finish:function(a){return a!==!1&&(a=a||\\\"fx\\\"),this.each(function(){var b,c=W.get(this),d=c[a+\\\"queue\\\"],e=c[a+\\\"queueHooks\\\"],f=r.timers,g=d?d.length:0;for(c.finish=!0,r.queue(this,a,[]),e&&e.stop&&e.stop.call(this,!0),b=f.length;b--;)f[b].elem===this&&f[b].queue===a&&(f[b].anim.stop(!0),f.splice(b,1));for(b=0;b<g;b++)d[b]&&d[b].finish&&d[b].finish.call(this);delete c.finish})}}),r.each([\\\"toggle\\\",\\\"show\\\",\\\"hide\\\"],function(a,b){var c=r.fn[b];r.fn[b]=function(a,d,e){return null==a||\\\"boolean\\\"==typeof a?c.apply(this,arguments):this.animate(gb(b,!0),a,d,e)}}),r.each({slideDown:gb(\\\"show\\\"),slideUp:gb(\\\"hide\\\"),slideToggle:gb(\\\"toggle\\\"),fadeIn:{opacity:\\\"show\\\"},fadeOut:{opacity:\\\"hide\\\"},fadeToggle:{opacity:\\\"toggle\\\"}},function(a,b){r.fn[a]=function(a,c,d){return this.animate(b,a,c,d)}}),r.timers=[],r.fx.tick=function(){var a,b=0,c=r.timers;for(ab=r.now();b<c.length;b++)a=c[b],a()||c[b]!==a||c.splice(b--,1);c.length||r.fx.stop(),ab=void 0},r.fx.timer=function(a){r.timers.push(a),r.fx.start()},r.fx.interval=13,r.fx.start=function(){bb||(bb=!0,eb())},r.fx.stop=function(){bb=null},r.fx.speeds={slow:600,fast:200,_default:400},r.fn.delay=function(b,c){return b=r.fx?r.fx.speeds[b]||b:b,c=c||\\\"fx\\\",this.queue(c,function(c,d){var e=a.setTimeout(c,b);d.stop=function(){a.clearTimeout(e)}})},function(){var a=d.createElement(\\\"input\\\"),b=d.createElement(\\\"select\\\"),c=b.appendChild(d.createElement(\\\"option\\\"));a.type=\\\"checkbox\\\",o.checkOn=\\\"\\\"!==a.value,o.optSelected=c.selected,a=d.createElement(\\\"input\\\"),a.value=\\\"t\\\",a.type=\\\"radio\\\",o.radioValue=\\\"t\\\"===a.value}();var lb,mb=r.expr.attrHandle;r.fn.extend({attr:function(a,b){return T(this,r.attr,a,b,arguments.length>1)},removeAttr:function(a){return this.each(function(){r.removeAttr(this,a)})}}),r.extend({attr:function(a,b,c){var d,e,f=a.nodeType;if(3!==f&&8!==f&&2!==f)return\\\"undefined\\\"==typeof a.getAttribute?r.prop(a,b,c):(1===f&&r.isXMLDoc(a)||(e=r.attrHooks[b.toLowerCase()]||(r.expr.match.bool.test(b)?lb:void 0)),void 0!==c?null===c?void r.removeAttr(a,b):e&&\\\"set\\\"in e&&void 0!==(d=e.set(a,c,b))?d:(a.setAttribute(b,c+\\\"\\\"),c):e&&\\\"get\\\"in e&&null!==(d=e.get(a,b))?d:(d=r.find.attr(a,b),\\nnull==d?void 0:d))},attrHooks:{type:{set:function(a,b){if(!o.radioValue&&\\\"radio\\\"===b&&B(a,\\\"input\\\")){var c=a.value;return a.setAttribute(\\\"type\\\",b),c&&(a.value=c),b}}}},removeAttr:function(a,b){var c,d=0,e=b&&b.match(L);if(e&&1===a.nodeType)while(c=e[d++])a.removeAttribute(c)}}),lb={set:function(a,b,c){return b===!1?r.removeAttr(a,c):a.setAttribute(c,c),c}},r.each(r.expr.match.bool.source.match(/\\\\w+/g),function(a,b){var c=mb[b]||r.find.attr;mb[b]=function(a,b,d){var e,f,g=b.toLowerCase();return d||(f=mb[g],mb[g]=e,e=null!=c(a,b,d)?g:null,mb[g]=f),e}});var nb=/^(?:input|select|textarea|button)$/i,ob=/^(?:a|area)$/i;r.fn.extend({prop:function(a,b){return T(this,r.prop,a,b,arguments.length>1)},removeProp:function(a){return this.each(function(){delete this[r.propFix[a]||a]})}}),r.extend({prop:function(a,b,c){var d,e,f=a.nodeType;if(3!==f&&8!==f&&2!==f)return 1===f&&r.isXMLDoc(a)||(b=r.propFix[b]||b,e=r.propHooks[b]),void 0!==c?e&&\\\"set\\\"in e&&void 0!==(d=e.set(a,c,b))?d:a[b]=c:e&&\\\"get\\\"in e&&null!==(d=e.get(a,b))?d:a[b]},propHooks:{tabIndex:{get:function(a){var b=r.find.attr(a,\\\"tabindex\\\");return b?parseInt(b,10):nb.test(a.nodeName)||ob.test(a.nodeName)&&a.href?0:-1}}},propFix:{\\\"for\\\":\\\"htmlFor\\\",\\\"class\\\":\\\"className\\\"}}),o.optSelected||(r.propHooks.selected={get:function(a){var b=a.parentNode;return b&&b.parentNode&&b.parentNode.selectedIndex,null},set:function(a){var b=a.parentNode;b&&(b.selectedIndex,b.parentNode&&b.parentNode.selectedIndex)}}),r.each([\\\"tabIndex\\\",\\\"readOnly\\\",\\\"maxLength\\\",\\\"cellSpacing\\\",\\\"cellPadding\\\",\\\"rowSpan\\\",\\\"colSpan\\\",\\\"useMap\\\",\\\"frameBorder\\\",\\\"contentEditable\\\"],function(){r.propFix[this.toLowerCase()]=this});function pb(a){var b=a.match(L)||[];return b.join(\\\" \\\")}function qb(a){return a.getAttribute&&a.getAttribute(\\\"class\\\")||\\\"\\\"}r.fn.extend({addClass:function(a){var b,c,d,e,f,g,h,i=0;if(r.isFunction(a))return this.each(function(b){r(this).addClass(a.call(this,b,qb(this)))});if(\\\"string\\\"==typeof a&&a){b=a.match(L)||[];while(c=this[i++])if(e=qb(c),d=1===c.nodeType&&\\\" \\\"+pb(e)+\\\" \\\"){g=0;while(f=b[g++])d.indexOf(\\\" \\\"+f+\\\" \\\")<0&&(d+=f+\\\" \\\");h=pb(d),e!==h&&c.setAttribute(\\\"class\\\",h)}}return this},removeClass:function(a){var b,c,d,e,f,g,h,i=0;if(r.isFunction(a))return this.each(function(b){r(this).removeClass(a.call(this,b,qb(this)))});if(!arguments.length)return this.attr(\\\"class\\\",\\\"\\\");if(\\\"string\\\"==typeof a&&a){b=a.match(L)||[];while(c=this[i++])if(e=qb(c),d=1===c.nodeType&&\\\" \\\"+pb(e)+\\\" \\\"){g=0;while(f=b[g++])while(d.indexOf(\\\" \\\"+f+\\\" \\\")>-1)d=d.replace(\\\" \\\"+f+\\\" \\\",\\\" \\\");h=pb(d),e!==h&&c.setAttribute(\\\"class\\\",h)}}return this},toggleClass:function(a,b){var c=typeof a;return\\\"boolean\\\"==typeof b&&\\\"string\\\"===c?b?this.addClass(a):this.removeClass(a):r.isFunction(a)?this.each(function(c){r(this).toggleClass(a.call(this,c,qb(this),b),b)}):this.each(function(){var b,d,e,f;if(\\\"string\\\"===c){d=0,e=r(this),f=a.match(L)||[];while(b=f[d++])e.hasClass(b)?e.removeClass(b):e.addClass(b)}else void 0!==a&&\\\"boolean\\\"!==c||(b=qb(this),b&&W.set(this,\\\"__className__\\\",b),this.setAttribute&&this.setAttribute(\\\"class\\\",b||a===!1?\\\"\\\":W.get(this,\\\"__className__\\\")||\\\"\\\"))})},hasClass:function(a){var b,c,d=0;b=\\\" \\\"+a+\\\" \\\";while(c=this[d++])if(1===c.nodeType&&(\\\" \\\"+pb(qb(c))+\\\" \\\").indexOf(b)>-1)return!0;return!1}});var rb=/\\\\r/g;r.fn.extend({val:function(a){var b,c,d,e=this[0];{if(arguments.length)return d=r.isFunction(a),this.each(function(c){var e;1===this.nodeType&&(e=d?a.call(this,c,r(this).val()):a,null==e?e=\\\"\\\":\\\"number\\\"==typeof e?e+=\\\"\\\":Array.isArray(e)&&(e=r.map(e,function(a){return null==a?\\\"\\\":a+\\\"\\\"})),b=r.valHooks[this.type]||r.valHooks[this.nodeName.toLowerCase()],b&&\\\"set\\\"in b&&void 0!==b.set(this,e,\\\"value\\\")||(this.value=e))});if(e)return b=r.valHooks[e.type]||r.valHooks[e.nodeName.toLowerCase()],b&&\\\"get\\\"in b&&void 0!==(c=b.get(e,\\\"value\\\"))?c:(c=e.value,\\\"string\\\"==typeof c?c.replace(rb,\\\"\\\"):null==c?\\\"\\\":c)}}}),r.extend({valHooks:{option:{get:function(a){var b=r.find.attr(a,\\\"value\\\");return null!=b?b:pb(r.text(a))}},select:{get:function(a){var b,c,d,e=a.options,f=a.selectedIndex,g=\\\"select-one\\\"===a.type,h=g?null:[],i=g?f+1:e.length;for(d=f<0?i:g?f:0;d<i;d++)if(c=e[d],(c.selected||d===f)&&!c.disabled&&(!c.parentNode.disabled||!B(c.parentNode,\\\"optgroup\\\"))){if(b=r(c).val(),g)return b;h.push(b)}return h},set:function(a,b){var c,d,e=a.options,f=r.makeArray(b),g=e.length;while(g--)d=e[g],(d.selected=r.inArray(r.valHooks.option.get(d),f)>-1)&&(c=!0);return c||(a.selectedIndex=-1),f}}}}),r.each([\\\"radio\\\",\\\"checkbox\\\"],function(){r.valHooks[this]={set:function(a,b){if(Array.isArray(b))return a.checked=r.inArray(r(a).val(),b)>-1}},o.checkOn||(r.valHooks[this].get=function(a){return null===a.getAttribute(\\\"value\\\")?\\\"on\\\":a.value})});var sb=/^(?:focusinfocus|focusoutblur)$/;r.extend(r.event,{trigger:function(b,c,e,f){var g,h,i,j,k,m,n,o=[e||d],p=l.call(b,\\\"type\\\")?b.type:b,q=l.call(b,\\\"namespace\\\")?b.namespace.split(\\\".\\\"):[];if(h=i=e=e||d,3!==e.nodeType&&8!==e.nodeType&&!sb.test(p+r.event.triggered)&&(p.indexOf(\\\".\\\")>-1&&(q=p.split(\\\".\\\"),p=q.shift(),q.sort()),k=p.indexOf(\\\":\\\")<0&&\\\"on\\\"+p,b=b[r.expando]?b:new r.Event(p,\\\"object\\\"==typeof b&&b),b.isTrigger=f?2:3,b.namespace=q.join(\\\".\\\"),b.rnamespace=b.namespace?new RegExp(\\\"(^|\\\\\\\\.)\\\"+q.join(\\\"\\\\\\\\.(?:.*\\\\\\\\.|)\\\")+\\\"(\\\\\\\\.|$)\\\"):null,b.result=void 0,b.target||(b.target=e),c=null==c?[b]:r.makeArray(c,[b]),n=r.event.special[p]||{},f||!n.trigger||n.trigger.apply(e,c)!==!1)){if(!f&&!n.noBubble&&!r.isWindow(e)){for(j=n.delegateType||p,sb.test(j+p)||(h=h.parentNode);h;h=h.parentNode)o.push(h),i=h;i===(e.ownerDocument||d)&&o.push(i.defaultView||i.parentWindow||a)}g=0;while((h=o[g++])&&!b.isPropagationStopped())b.type=g>1?j:n.bindType||p,m=(W.get(h,\\\"events\\\")||{})[b.type]&&W.get(h,\\\"handle\\\"),m&&m.apply(h,c),m=k&&h[k],m&&m.apply&&U(h)&&(b.result=m.apply(h,c),b.result===!1&&b.preventDefault());return b.type=p,f||b.isDefaultPrevented()||n._default&&n._default.apply(o.pop(),c)!==!1||!U(e)||k&&r.isFunction(e[p])&&!r.isWindow(e)&&(i=e[k],i&&(e[k]=null),r.event.triggered=p,e[p](),r.event.triggered=void 0,i&&(e[k]=i)),b.result}},simulate:function(a,b,c){var d=r.extend(new r.Event,c,{type:a,isSimulated:!0});r.event.trigger(d,null,b)}}),r.fn.extend({trigger:function(a,b){return this.each(function(){r.event.trigger(a,b,this)})},triggerHandler:function(a,b){var c=this[0];if(c)return r.event.trigger(a,b,c,!0)}}),r.each(\\\"blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu\\\".split(\\\" \\\"),function(a,b){r.fn[b]=function(a,c){return arguments.length>0?this.on(b,null,a,c):this.trigger(b)}}),r.fn.extend({hover:function(a,b){return this.mouseenter(a).mouseleave(b||a)}}),o.focusin=\\\"onfocusin\\\"in a,o.focusin||r.each({focus:\\\"focusin\\\",blur:\\\"focusout\\\"},function(a,b){var c=function(a){r.event.simulate(b,a.target,r.event.fix(a))};r.event.special[b]={setup:function(){var d=this.ownerDocument||this,e=W.access(d,b);e||d.addEventListener(a,c,!0),W.access(d,b,(e||0)+1)},teardown:function(){var d=this.ownerDocument||this,e=W.access(d,b)-1;e?W.access(d,b,e):(d.removeEventListener(a,c,!0),W.remove(d,b))}}});var tb=a.location,ub=r.now(),vb=/\\\\?/;r.parseXML=function(b){var c;if(!b||\\\"string\\\"!=typeof b)return null;try{c=(new a.DOMParser).parseFromString(b,\\\"text/xml\\\")}catch(d){c=void 0}return c&&!c.getElementsByTagName(\\\"parsererror\\\").length||r.error(\\\"Invalid XML: \\\"+b),c};var wb=/\\\\[\\\\]$/,xb=/\\\\r?\\\\n/g,yb=/^(?:submit|button|image|reset|file)$/i,zb=/^(?:input|select|textarea|keygen)/i;function Ab(a,b,c,d){var e;if(Array.isArray(b))r.each(b,function(b,e){c||wb.test(a)?d(a,e):Ab(a+\\\"[\\\"+(\\\"object\\\"==typeof e&&null!=e?b:\\\"\\\")+\\\"]\\\",e,c,d)});else if(c||\\\"object\\\"!==r.type(b))d(a,b);else for(e in b)Ab(a+\\\"[\\\"+e+\\\"]\\\",b[e],c,d)}r.param=function(a,b){var c,d=[],e=function(a,b){var c=r.isFunction(b)?b():b;d[d.length]=encodeURIComponent(a)+\\\"=\\\"+encodeURIComponent(null==c?\\\"\\\":c)};if(Array.isArray(a)||a.jquery&&!r.isPlainObject(a))r.each(a,function(){e(this.name,this.value)});else for(c in a)Ab(c,a[c],b,e);return d.join(\\\"&\\\")},r.fn.extend({serialize:function(){return r.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var a=r.prop(this,\\\"elements\\\");return a?r.makeArray(a):this}).filter(function(){var a=this.type;return this.name&&!r(this).is(\\\":disabled\\\")&&zb.test(this.nodeName)&&!yb.test(a)&&(this.checked||!ja.test(a))}).map(function(a,b){var c=r(this).val();return null==c?null:Array.isArray(c)?r.map(c,function(a){return{name:b.name,value:a.replace(xb,\\\"\\\\r\\\\n\\\")}}):{name:b.name,value:c.replace(xb,\\\"\\\\r\\\\n\\\")}}).get()}});var Bb=/%20/g,Cb=/#.*$/,Db=/([?&])_=[^&]*/,Eb=/^(.*?):[ \\\\t]*([^\\\\r\\\\n]*)$/gm,Fb=/^(?:about|app|app-storage|.+-extension|file|res|widget):$/,Gb=/^(?:GET|HEAD)$/,Hb=/^\\\\/\\\\//,Ib={},Jb={},Kb=\\\"*/\\\".concat(\\\"*\\\"),Lb=d.createElement(\\\"a\\\");Lb.href=tb.href;function Mb(a){return function(b,c){\\\"string\\\"!=typeof b&&(c=b,b=\\\"*\\\");var d,e=0,f=b.toLowerCase().match(L)||[];if(r.isFunction(c))while(d=f[e++])\\\"+\\\"===d[0]?(d=d.slice(1)||\\\"*\\\",(a[d]=a[d]||[]).unshift(c)):(a[d]=a[d]||[]).push(c)}}function Nb(a,b,c,d){var e={},f=a===Jb;function g(h){var i;return e[h]=!0,r.each(a[h]||[],function(a,h){var j=h(b,c,d);return\\\"string\\\"!=typeof j||f||e[j]?f?!(i=j):void 0:(b.dataTypes.unshift(j),g(j),!1)}),i}return g(b.dataTypes[0])||!e[\\\"*\\\"]&&g(\\\"*\\\")}function Ob(a,b){var c,d,e=r.ajaxSettings.flatOptions||{};for(c in b)void 0!==b[c]&&((e[c]?a:d||(d={}))[c]=b[c]);return d&&r.extend(!0,a,d),a}function Pb(a,b,c){var d,e,f,g,h=a.contents,i=a.dataTypes;while(\\\"*\\\"===i[0])i.shift(),void 0===d&&(d=a.mimeType||b.getResponseHeader(\\\"Content-Type\\\"));if(d)for(e in h)if(h[e]&&h[e].test(d)){i.unshift(e);break}if(i[0]in c)f=i[0];else{for(e in c){if(!i[0]||a.converters[e+\\\" \\\"+i[0]]){f=e;break}g||(g=e)}f=f||g}if(f)return f!==i[0]&&i.unshift(f),c[f]}function Qb(a,b,c,d){var e,f,g,h,i,j={},k=a.dataTypes.slice();if(k[1])for(g in a.converters)j[g.toLowerCase()]=a.converters[g];f=k.shift();while(f)if(a.responseFields[f]&&(c[a.responseFields[f]]=b),!i&&d&&a.dataFilter&&(b=a.dataFilter(b,a.dataType)),i=f,f=k.shift())if(\\\"*\\\"===f)f=i;else if(\\\"*\\\"!==i&&i!==f){if(g=j[i+\\\" \\\"+f]||j[\\\"* \\\"+f],!g)for(e in j)if(h=e.split(\\\" \\\"),h[1]===f&&(g=j[i+\\\" \\\"+h[0]]||j[\\\"* \\\"+h[0]])){g===!0?g=j[e]:j[e]!==!0&&(f=h[0],k.unshift(h[1]));break}if(g!==!0)if(g&&a[\\\"throws\\\"])b=g(b);else try{b=g(b)}catch(l){return{state:\\\"parsererror\\\",error:g?l:\\\"No conversion from \\\"+i+\\\" to \\\"+f}}}return{state:\\\"success\\\",data:b}}r.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:tb.href,type:\\\"GET\\\",isLocal:Fb.test(tb.protocol),global:!0,processData:!0,async:!0,contentType:\\\"application/x-www-form-urlencoded; charset=UTF-8\\\",accepts:{\\\"*\\\":Kb,text:\\\"text/plain\\\",html:\\\"text/html\\\",xml:\\\"application/xml, text/xml\\\",json:\\\"application/json, text/javascript\\\"},contents:{xml:/\\\\bxml\\\\b/,html:/\\\\bhtml/,json:/\\\\bjson\\\\b/},responseFields:{xml:\\\"responseXML\\\",text:\\\"responseText\\\",json:\\\"responseJSON\\\"},converters:{\\\"* text\\\":String,\\\"text html\\\":!0,\\\"text json\\\":JSON.parse,\\\"text xml\\\":r.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(a,b){return b?Ob(Ob(a,r.ajaxSettings),b):Ob(r.ajaxSettings,a)},ajaxPrefilter:Mb(Ib),ajaxTransport:Mb(Jb),ajax:function(b,c){\\\"object\\\"==typeof b&&(c=b,b=void 0),c=c||{};var e,f,g,h,i,j,k,l,m,n,o=r.ajaxSetup({},c),p=o.context||o,q=o.context&&(p.nodeType||p.jquery)?r(p):r.event,s=r.Deferred(),t=r.Callbacks(\\\"once memory\\\"),u=o.statusCode||{},v={},w={},x=\\\"canceled\\\",y={readyState:0,getResponseHeader:function(a){var b;if(k){if(!h){h={};while(b=Eb.exec(g))h[b[1].toLowerCase()]=b[2]}b=h[a.toLowerCase()]}return null==b?null:b},getAllResponseHeaders:function(){return k?g:null},setRequestHeader:function(a,b){return null==k&&(a=w[a.toLowerCase()]=w[a.toLowerCase()]||a,v[a]=b),this},overrideMimeType:function(a){return null==k&&(o.mimeType=a),this},statusCode:function(a){var b;if(a)if(k)y.always(a[y.status]);else for(b in a)u[b]=[u[b],a[b]];return this},abort:function(a){var b=a||x;return e&&e.abort(b),A(0,b),this}};if(s.promise(y),o.url=((b||o.url||tb.href)+\\\"\\\").replace(Hb,tb.protocol+\\\"//\\\"),o.type=c.method||c.type||o.method||o.type,o.dataTypes=(o.dataType||\\\"*\\\").toLowerCase().match(L)||[\\\"\\\"],null==o.crossDomain){j=d.createElement(\\\"a\\\");try{j.href=o.url,j.href=j.href,o.crossDomain=Lb.protocol+\\\"//\\\"+Lb.host!=j.protocol+\\\"//\\\"+j.host}catch(z){o.crossDomain=!0}}if(o.data&&o.processData&&\\\"string\\\"!=typeof o.data&&(o.data=r.param(o.data,o.traditional)),Nb(Ib,o,c,y),k)return y;l=r.event&&o.global,l&&0===r.active++&&r.event.trigger(\\\"ajaxStart\\\"),o.type=o.type.toUpperCase(),o.hasContent=!Gb.test(o.type),f=o.url.replace(Cb,\\\"\\\"),o.hasContent?o.data&&o.processData&&0===(o.contentType||\\\"\\\").indexOf(\\\"application/x-www-form-urlencoded\\\")&&(o.data=o.data.replace(Bb,\\\"+\\\")):(n=o.url.slice(f.length),o.data&&(f+=(vb.test(f)?\\\"&\\\":\\\"?\\\")+o.data,delete o.data),o.cache===!1&&(f=f.replace(Db,\\\"$1\\\"),n=(vb.test(f)?\\\"&\\\":\\\"?\\\")+\\\"_=\\\"+ub++ +n),o.url=f+n),o.ifModified&&(r.lastModified[f]&&y.setRequestHeader(\\\"If-Modified-Since\\\",r.lastModified[f]),r.etag[f]&&y.setRequestHeader(\\\"If-None-Match\\\",r.etag[f])),(o.data&&o.hasContent&&o.contentType!==!1||c.contentType)&&y.setRequestHeader(\\\"Content-Type\\\",o.contentType),y.setRequestHeader(\\\"Accept\\\",o.dataTypes[0]&&o.accepts[o.dataTypes[0]]?o.accepts[o.dataTypes[0]]+(\\\"*\\\"!==o.dataTypes[0]?\\\", \\\"+Kb+\\\"; q=0.01\\\":\\\"\\\"):o.accepts[\\\"*\\\"]);for(m in o.headers)y.setRequestHeader(m,o.headers[m]);if(o.beforeSend&&(o.beforeSend.call(p,y,o)===!1||k))return y.abort();if(x=\\\"abort\\\",t.add(o.complete),y.done(o.success),y.fail(o.error),e=Nb(Jb,o,c,y)){if(y.readyState=1,l&&q.trigger(\\\"ajaxSend\\\",[y,o]),k)return y;o.async&&o.timeout>0&&(i=a.setTimeout(function(){y.abort(\\\"timeout\\\")},o.timeout));try{k=!1,e.send(v,A)}catch(z){if(k)throw z;A(-1,z)}}else A(-1,\\\"No Transport\\\");function A(b,c,d,h){var j,m,n,v,w,x=c;k||(k=!0,i&&a.clearTimeout(i),e=void 0,g=h||\\\"\\\",y.readyState=b>0?4:0,j=b>=200&&b<300||304===b,d&&(v=Pb(o,y,d)),v=Qb(o,v,y,j),j?(o.ifModified&&(w=y.getResponseHeader(\\\"Last-Modified\\\"),w&&(r.lastModified[f]=w),w=y.getResponseHeader(\\\"etag\\\"),w&&(r.etag[f]=w)),204===b||\\\"HEAD\\\"===o.type?x=\\\"nocontent\\\":304===b?x=\\\"notmodified\\\":(x=v.state,m=v.data,n=v.error,j=!n)):(n=x,!b&&x||(x=\\\"error\\\",b<0&&(b=0))),y.status=b,y.statusText=(c||x)+\\\"\\\",j?s.resolveWith(p,[m,x,y]):s.rejectWith(p,[y,x,n]),y.statusCode(u),u=void 0,l&&q.trigger(j?\\\"ajaxSuccess\\\":\\\"ajaxError\\\",[y,o,j?m:n]),t.fireWith(p,[y,x]),l&&(q.trigger(\\\"ajaxComplete\\\",[y,o]),--r.active||r.event.trigger(\\\"ajaxStop\\\")))}return y},getJSON:function(a,b,c){return r.get(a,b,c,\\\"json\\\")},getScript:function(a,b){return r.get(a,void 0,b,\\\"script\\\")}}),r.each([\\\"get\\\",\\\"post\\\"],function(a,b){r[b]=function(a,c,d,e){return r.isFunction(c)&&(e=e||d,d=c,c=void 0),r.ajax(r.extend({url:a,type:b,dataType:e,data:c,success:d},r.isPlainObject(a)&&a))}}),r._evalUrl=function(a){return r.ajax({url:a,type:\\\"GET\\\",dataType:\\\"script\\\",cache:!0,async:!1,global:!1,\\\"throws\\\":!0})},r.fn.extend({wrapAll:function(a){var b;return this[0]&&(r.isFunction(a)&&(a=a.call(this[0])),b=r(a,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&b.insertBefore(this[0]),b.map(function(){var a=this;while(a.firstElementChild)a=a.firstElementChild;return a}).append(this)),this},wrapInner:function(a){return r.isFunction(a)?this.each(function(b){r(this).wrapInner(a.call(this,b))}):this.each(function(){var b=r(this),c=b.contents();c.length?c.wrapAll(a):b.append(a)})},wrap:function(a){var b=r.isFunction(a);return this.each(function(c){r(this).wrapAll(b?a.call(this,c):a)})},unwrap:function(a){return this.parent(a).not(\\\"body\\\").each(function(){r(this).replaceWith(this.childNodes)}),this}}),r.expr.pseudos.hidden=function(a){return!r.expr.pseudos.visible(a)},r.expr.pseudos.visible=function(a){return!!(a.offsetWidth||a.offsetHeight||a.getClientRects().length)},r.ajaxSettings.xhr=function(){try{return new a.XMLHttpRequest}catch(b){}};var Rb={0:200,1223:204},Sb=r.ajaxSettings.xhr();o.cors=!!Sb&&\\\"withCredentials\\\"in Sb,o.ajax=Sb=!!Sb,r.ajaxTransport(function(b){var c,d;if(o.cors||Sb&&!b.crossDomain)return{send:function(e,f){var g,h=b.xhr();if(h.open(b.type,b.url,b.async,b.username,b.password),b.xhrFields)for(g in b.xhrFields)h[g]=b.xhrFields[g];b.mimeType&&h.overrideMimeType&&h.overrideMimeType(b.mimeType),b.crossDomain||e[\\\"X-Requested-With\\\"]||(e[\\\"X-Requested-With\\\"]=\\\"XMLHttpRequest\\\");for(g in e)h.setRequestHeader(g,e[g]);c=function(a){return function(){c&&(c=d=h.onload=h.onerror=h.onabort=h.onreadystatechange=null,\\\"abort\\\"===a?h.abort():\\\"error\\\"===a?\\\"number\\\"!=typeof h.status?f(0,\\\"error\\\"):f(h.status,h.statusText):f(Rb[h.status]||h.status,h.statusText,\\\"text\\\"!==(h.responseType||\\\"text\\\")||\\\"string\\\"!=typeof h.responseText?{binary:h.response}:{text:h.responseText},h.getAllResponseHeaders()))}},h.onload=c(),d=h.onerror=c(\\\"error\\\"),void 0!==h.onabort?h.onabort=d:h.onreadystatechange=function(){4===h.readyState&&a.setTimeout(function(){c&&d()})},c=c(\\\"abort\\\");try{h.send(b.hasContent&&b.data||null)}catch(i){if(c)throw i}},abort:function(){c&&c()}}}),r.ajaxPrefilter(function(a){a.crossDomain&&(a.contents.script=!1)}),r.ajaxSetup({accepts:{script:\\\"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript\\\"},contents:{script:/\\\\b(?:java|ecma)script\\\\b/},converters:{\\\"text script\\\":function(a){return r.globalEval(a),a}}}),r.ajaxPrefilter(\\\"script\\\",function(a){void 0===a.cache&&(a.cache=!1),a.crossDomain&&(a.type=\\\"GET\\\")}),r.ajaxTransport(\\\"script\\\",function(a){if(a.crossDomain){var b,c;return{send:function(e,f){b=r(\\\"<script>\\\").prop({charset:a.scriptCharset,src:a.url}).on(\\\"load error\\\",c=function(a){b.remove(),c=null,a&&f(\\\"error\\\"===a.type?404:200,a.type)}),d.head.appendChild(b[0])},abort:function(){c&&c()}}}});var Tb=[],Ub=/(=)\\\\?(?=&|$)|\\\\?\\\\?/;r.ajaxSetup({jsonp:\\\"callback\\\",jsonpCallback:function(){var a=Tb.pop()||r.expando+\\\"_\\\"+ub++;return this[a]=!0,a}}),r.ajaxPrefilter(\\\"json jsonp\\\",function(b,c,d){var e,f,g,h=b.jsonp!==!1&&(Ub.test(b.url)?\\\"url\\\":\\\"string\\\"==typeof b.data&&0===(b.contentType||\\\"\\\").indexOf(\\\"application/x-www-form-urlencoded\\\")&&Ub.test(b.data)&&\\\"data\\\");if(h||\\\"jsonp\\\"===b.dataTypes[0])return e=b.jsonpCallback=r.isFunction(b.jsonpCallback)?b.jsonpCallback():b.jsonpCallback,h?b[h]=b[h].replace(Ub,\\\"$1\\\"+e):b.jsonp!==!1&&(b.url+=(vb.test(b.url)?\\\"&\\\":\\\"?\\\")+b.jsonp+\\\"=\\\"+e),b.converters[\\\"script json\\\"]=function(){return g||r.error(e+\\\" was not called\\\"),g[0]},b.dataTypes[0]=\\\"json\\\",f=a[e],a[e]=function(){g=arguments},d.always(function(){void 0===f?r(a).removeProp(e):a[e]=f,b[e]&&(b.jsonpCallback=c.jsonpCallback,Tb.push(e)),g&&r.isFunction(f)&&f(g[0]),g=f=void 0}),\\\"script\\\"}),o.createHTMLDocument=function(){var a=d.implementation.createHTMLDocument(\\\"\\\").body;return a.innerHTML=\\\"<form></form><form></form>\\\",2===a.childNodes.length}(),r.parseHTML=function(a,b,c){if(\\\"string\\\"!=typeof a)return[];\\\"boolean\\\"==typeof b&&(c=b,b=!1);var e,f,g;return b||(o.createHTMLDocument?(b=d.implementation.createHTMLDocument(\\\"\\\"),e=b.createElement(\\\"base\\\"),e.href=d.location.href,b.head.appendChild(e)):b=d),f=C.exec(a),g=!c&&[],f?[b.createElement(f[1])]:(f=qa([a],b,g),g&&g.length&&r(g).remove(),r.merge([],f.childNodes))},r.fn.load=function(a,b,c){var d,e,f,g=this,h=a.indexOf(\\\" \\\");return h>-1&&(d=pb(a.slice(h)),a=a.slice(0,h)),r.isFunction(b)?(c=b,b=void 0):b&&\\\"object\\\"==typeof b&&(e=\\\"POST\\\"),g.length>0&&r.ajax({url:a,type:e||\\\"GET\\\",dataType:\\\"html\\\",data:b}).done(function(a){f=arguments,g.html(d?r(\\\"<div>\\\").append(r.parseHTML(a)).find(d):a)}).always(c&&function(a,b){g.each(function(){c.apply(this,f||[a.responseText,b,a])})}),this},r.each([\\\"ajaxStart\\\",\\\"ajaxStop\\\",\\\"ajaxComplete\\\",\\\"ajaxError\\\",\\\"ajaxSuccess\\\",\\\"ajaxSend\\\"],function(a,b){r.fn[b]=function(a){return this.on(b,a)}}),r.expr.pseudos.animated=function(a){return r.grep(r.timers,function(b){return a===b.elem}).length},r.offset={setOffset:function(a,b,c){var d,e,f,g,h,i,j,k=r.css(a,\\\"position\\\"),l=r(a),m={};\\\"static\\\"===k&&(a.style.position=\\\"relative\\\"),h=l.offset(),f=r.css(a,\\\"top\\\"),i=r.css(a,\\\"left\\\"),j=(\\\"absolute\\\"===k||\\\"fixed\\\"===k)&&(f+i).indexOf(\\\"auto\\\")>-1,j?(d=l.position(),g=d.top,e=d.left):(g=parseFloat(f)||0,e=parseFloat(i)||0),r.isFunction(b)&&(b=b.call(a,c,r.extend({},h))),null!=b.top&&(m.top=b.top-h.top+g),null!=b.left&&(m.left=b.left-h.left+e),\\\"using\\\"in b?b.using.call(a,m):l.css(m)}},r.fn.extend({offset:function(a){if(arguments.length)return void 0===a?this:this.each(function(b){r.offset.setOffset(this,a,b)});var b,c,d,e,f=this[0];if(f)return f.getClientRects().length?(d=f.getBoundingClientRect(),b=f.ownerDocument,c=b.documentElement,e=b.defaultView,{top:d.top+e.pageYOffset-c.clientTop,left:d.left+e.pageXOffset-c.clientLeft}):{top:0,left:0}},position:function(){if(this[0]){var a,b,c=this[0],d={top:0,left:0};return\\\"fixed\\\"===r.css(c,\\\"position\\\")?b=c.getBoundingClientRect():(a=this.offsetParent(),b=this.offset(),B(a[0],\\\"html\\\")||(d=a.offset()),d={top:d.top+r.css(a[0],\\\"borderTopWidth\\\",!0),left:d.left+r.css(a[0],\\\"borderLeftWidth\\\",!0)}),{top:b.top-d.top-r.css(c,\\\"marginTop\\\",!0),left:b.left-d.left-r.css(c,\\\"marginLeft\\\",!0)}}},offsetParent:function(){return this.map(function(){var a=this.offsetParent;while(a&&\\\"static\\\"===r.css(a,\\\"position\\\"))a=a.offsetParent;return a||ra})}}),r.each({scrollLeft:\\\"pageXOffset\\\",scrollTop:\\\"pageYOffset\\\"},function(a,b){var c=\\\"pageYOffset\\\"===b;r.fn[a]=function(d){return T(this,function(a,d,e){var f;return r.isWindow(a)?f=a:9===a.nodeType&&(f=a.defaultView),void 0===e?f?f[b]:a[d]:void(f?f.scrollTo(c?f.pageXOffset:e,c?e:f.pageYOffset):a[d]=e)},a,d,arguments.length)}}),r.each([\\\"top\\\",\\\"left\\\"],function(a,b){r.cssHooks[b]=Pa(o.pixelPosition,function(a,c){if(c)return c=Oa(a,b),Ma.test(c)?r(a).position()[b]+\\\"px\\\":c})}),r.each({Height:\\\"height\\\",Width:\\\"width\\\"},function(a,b){r.each({padding:\\\"inner\\\"+a,content:b,\\\"\\\":\\\"outer\\\"+a},function(c,d){r.fn[d]=function(e,f){var g=arguments.length&&(c||\\\"boolean\\\"!=typeof e),h=c||(e===!0||f===!0?\\\"margin\\\":\\\"border\\\");return T(this,function(b,c,e){var f;return r.isWindow(b)?0===d.indexOf(\\\"outer\\\")?b[\\\"inner\\\"+a]:b.document.documentElement[\\\"client\\\"+a]:9===b.nodeType?(f=b.documentElement,Math.max(b.body[\\\"scroll\\\"+a],f[\\\"scroll\\\"+a],b.body[\\\"offset\\\"+a],f[\\\"offset\\\"+a],f[\\\"client\\\"+a])):void 0===e?r.css(b,c,h):r.style(b,c,e,h)},b,g?e:void 0,g)}})}),r.fn.extend({bind:function(a,b,c){return this.on(a,null,b,c)},unbind:function(a,b){return this.off(a,null,b)},delegate:function(a,b,c,d){return this.on(b,a,c,d)},undelegate:function(a,b,c){return 1===arguments.length?this.off(a,\\\"**\\\"):this.off(b,a||\\\"**\\\",c)}}),r.holdReady=function(a){a?r.readyWait++:r.ready(!0)},r.isArray=Array.isArray,r.parseJSON=JSON.parse,r.nodeName=B,\\\"function\\\"==typeof define&&define.amd&&define(\\\"jquery\\\",[],function(){return r});var Vb=a.jQuery,Wb=a.$;return r.noConflict=function(b){return a.$===r&&(a.$=Wb),b&&a.jQuery===r&&(a.jQuery=Vb),r},b||(a.jQuery=a.$=r),r});\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/raw-loader!./~/jquery/dist/jquery.min.js\n// module id = 661\n// module chunks = 3","module.exports = \"/*!\\n * Bootstrap v4.0.0-alpha.6 (https://getbootstrap.com)\\n * Copyright 2011-2017 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)\\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\\n */\\nif(\\\"undefined\\\"==typeof jQuery)throw new Error(\\\"Bootstrap's JavaScript requires jQuery. jQuery must be included before Bootstrap's JavaScript.\\\");+function(t){var e=t.fn.jquery.split(\\\" \\\")[0].split(\\\".\\\");if(e[0]<2&&e[1]<9||1==e[0]&&9==e[1]&&e[2]<1||e[0]>=4)throw new Error(\\\"Bootstrap's JavaScript requires at least jQuery v1.9.1 but less than v4.0.0\\\")}(jQuery),+function(){function t(t,e){if(!t)throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\");return!e||\\\"object\\\"!=typeof e&&\\\"function\\\"!=typeof e?t:e}function e(t,e){if(\\\"function\\\"!=typeof e&&null!==e)throw new TypeError(\\\"Super expression must either be null or a function, not \\\"+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}function n(t,e){if(!(t instanceof e))throw new TypeError(\\\"Cannot call a class as a function\\\")}var i=\\\"function\\\"==typeof Symbol&&\\\"symbol\\\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\\\"function\\\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\\\"symbol\\\":typeof t},o=function(){function t(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,\\\"value\\\"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,n,i){return n&&t(e.prototype,n),i&&t(e,i),e}}(),r=function(t){function e(t){return{}.toString.call(t).match(/\\\\s([a-zA-Z]+)/)[1].toLowerCase()}function n(t){return(t[0]||t).nodeType}function i(){return{bindType:a.end,delegateType:a.end,handle:function(e){if(t(e.target).is(this))return e.handleObj.handler.apply(this,arguments)}}}function o(){if(window.QUnit)return!1;var t=document.createElement(\\\"bootstrap\\\");for(var e in h)if(void 0!==t.style[e])return{end:h[e]};return!1}function r(e){var n=this,i=!1;return t(this).one(c.TRANSITION_END,function(){i=!0}),setTimeout(function(){i||c.triggerTransitionEnd(n)},e),this}function s(){a=o(),t.fn.emulateTransitionEnd=r,c.supportsTransitionEnd()&&(t.event.special[c.TRANSITION_END]=i())}var a=!1,l=1e6,h={WebkitTransition:\\\"webkitTransitionEnd\\\",MozTransition:\\\"transitionend\\\",OTransition:\\\"oTransitionEnd otransitionend\\\",transition:\\\"transitionend\\\"},c={TRANSITION_END:\\\"bsTransitionEnd\\\",getUID:function(t){do t+=~~(Math.random()*l);while(document.getElementById(t));return t},getSelectorFromElement:function(t){var e=t.getAttribute(\\\"data-target\\\");return e||(e=t.getAttribute(\\\"href\\\")||\\\"\\\",e=/^#[a-z]/i.test(e)?e:null),e},reflow:function(t){return t.offsetHeight},triggerTransitionEnd:function(e){t(e).trigger(a.end)},supportsTransitionEnd:function(){return Boolean(a)},typeCheckConfig:function(t,i,o){for(var r in o)if(o.hasOwnProperty(r)){var s=o[r],a=i[r],l=a&&n(a)?\\\"element\\\":e(a);if(!new RegExp(s).test(l))throw new Error(t.toUpperCase()+\\\": \\\"+('Option \\\"'+r+'\\\" provided type \\\"'+l+'\\\" ')+('but expected type \\\"'+s+'\\\".'))}}};return s(),c}(jQuery),s=(function(t){var e=\\\"alert\\\",i=\\\"4.0.0-alpha.6\\\",s=\\\"bs.alert\\\",a=\\\".\\\"+s,l=\\\".data-api\\\",h=t.fn[e],c=150,u={DISMISS:'[data-dismiss=\\\"alert\\\"]'},d={CLOSE:\\\"close\\\"+a,CLOSED:\\\"closed\\\"+a,CLICK_DATA_API:\\\"click\\\"+a+l},f={ALERT:\\\"alert\\\",FADE:\\\"fade\\\",SHOW:\\\"show\\\"},_=function(){function e(t){n(this,e),this._element=t}return e.prototype.close=function(t){t=t||this._element;var e=this._getRootElement(t),n=this._triggerCloseEvent(e);n.isDefaultPrevented()||this._removeElement(e)},e.prototype.dispose=function(){t.removeData(this._element,s),this._element=null},e.prototype._getRootElement=function(e){var n=r.getSelectorFromElement(e),i=!1;return n&&(i=t(n)[0]),i||(i=t(e).closest(\\\".\\\"+f.ALERT)[0]),i},e.prototype._triggerCloseEvent=function(e){var n=t.Event(d.CLOSE);return t(e).trigger(n),n},e.prototype._removeElement=function(e){var n=this;return t(e).removeClass(f.SHOW),r.supportsTransitionEnd()&&t(e).hasClass(f.FADE)?void t(e).one(r.TRANSITION_END,function(t){return n._destroyElement(e,t)}).emulateTransitionEnd(c):void this._destroyElement(e)},e.prototype._destroyElement=function(e){t(e).detach().trigger(d.CLOSED).remove()},e._jQueryInterface=function(n){return this.each(function(){var i=t(this),o=i.data(s);o||(o=new e(this),i.data(s,o)),\\\"close\\\"===n&&o[n](this)})},e._handleDismiss=function(t){return function(e){e&&e.preventDefault(),t.close(this)}},o(e,null,[{key:\\\"VERSION\\\",get:function(){return i}}]),e}();return t(document).on(d.CLICK_DATA_API,u.DISMISS,_._handleDismiss(new _)),t.fn[e]=_._jQueryInterface,t.fn[e].Constructor=_,t.fn[e].noConflict=function(){return t.fn[e]=h,_._jQueryInterface},_}(jQuery),function(t){var e=\\\"button\\\",i=\\\"4.0.0-alpha.6\\\",r=\\\"bs.button\\\",s=\\\".\\\"+r,a=\\\".data-api\\\",l=t.fn[e],h={ACTIVE:\\\"active\\\",BUTTON:\\\"btn\\\",FOCUS:\\\"focus\\\"},c={DATA_TOGGLE_CARROT:'[data-toggle^=\\\"button\\\"]',DATA_TOGGLE:'[data-toggle=\\\"buttons\\\"]',INPUT:\\\"input\\\",ACTIVE:\\\".active\\\",BUTTON:\\\".btn\\\"},u={CLICK_DATA_API:\\\"click\\\"+s+a,FOCUS_BLUR_DATA_API:\\\"focus\\\"+s+a+\\\" \\\"+(\\\"blur\\\"+s+a)},d=function(){function e(t){n(this,e),this._element=t}return e.prototype.toggle=function(){var e=!0,n=t(this._element).closest(c.DATA_TOGGLE)[0];if(n){var i=t(this._element).find(c.INPUT)[0];if(i){if(\\\"radio\\\"===i.type)if(i.checked&&t(this._element).hasClass(h.ACTIVE))e=!1;else{var o=t(n).find(c.ACTIVE)[0];o&&t(o).removeClass(h.ACTIVE)}e&&(i.checked=!t(this._element).hasClass(h.ACTIVE),t(i).trigger(\\\"change\\\")),i.focus()}}this._element.setAttribute(\\\"aria-pressed\\\",!t(this._element).hasClass(h.ACTIVE)),e&&t(this._element).toggleClass(h.ACTIVE)},e.prototype.dispose=function(){t.removeData(this._element,r),this._element=null},e._jQueryInterface=function(n){return this.each(function(){var i=t(this).data(r);i||(i=new e(this),t(this).data(r,i)),\\\"toggle\\\"===n&&i[n]()})},o(e,null,[{key:\\\"VERSION\\\",get:function(){return i}}]),e}();return t(document).on(u.CLICK_DATA_API,c.DATA_TOGGLE_CARROT,function(e){e.preventDefault();var n=e.target;t(n).hasClass(h.BUTTON)||(n=t(n).closest(c.BUTTON)),d._jQueryInterface.call(t(n),\\\"toggle\\\")}).on(u.FOCUS_BLUR_DATA_API,c.DATA_TOGGLE_CARROT,function(e){var n=t(e.target).closest(c.BUTTON)[0];t(n).toggleClass(h.FOCUS,/^focus(in)?$/.test(e.type))}),t.fn[e]=d._jQueryInterface,t.fn[e].Constructor=d,t.fn[e].noConflict=function(){return t.fn[e]=l,d._jQueryInterface},d}(jQuery),function(t){var e=\\\"carousel\\\",s=\\\"4.0.0-alpha.6\\\",a=\\\"bs.carousel\\\",l=\\\".\\\"+a,h=\\\".data-api\\\",c=t.fn[e],u=600,d=37,f=39,_={interval:5e3,keyboard:!0,slide:!1,pause:\\\"hover\\\",wrap:!0},g={interval:\\\"(number|boolean)\\\",keyboard:\\\"boolean\\\",slide:\\\"(boolean|string)\\\",pause:\\\"(string|boolean)\\\",wrap:\\\"boolean\\\"},p={NEXT:\\\"next\\\",PREV:\\\"prev\\\",LEFT:\\\"left\\\",RIGHT:\\\"right\\\"},m={SLIDE:\\\"slide\\\"+l,SLID:\\\"slid\\\"+l,KEYDOWN:\\\"keydown\\\"+l,MOUSEENTER:\\\"mouseenter\\\"+l,MOUSELEAVE:\\\"mouseleave\\\"+l,LOAD_DATA_API:\\\"load\\\"+l+h,CLICK_DATA_API:\\\"click\\\"+l+h},E={CAROUSEL:\\\"carousel\\\",ACTIVE:\\\"active\\\",SLIDE:\\\"slide\\\",RIGHT:\\\"carousel-item-right\\\",LEFT:\\\"carousel-item-left\\\",NEXT:\\\"carousel-item-next\\\",PREV:\\\"carousel-item-prev\\\",ITEM:\\\"carousel-item\\\"},v={ACTIVE:\\\".active\\\",ACTIVE_ITEM:\\\".active.carousel-item\\\",ITEM:\\\".carousel-item\\\",NEXT_PREV:\\\".carousel-item-next, .carousel-item-prev\\\",INDICATORS:\\\".carousel-indicators\\\",DATA_SLIDE:\\\"[data-slide], [data-slide-to]\\\",DATA_RIDE:'[data-ride=\\\"carousel\\\"]'},T=function(){function h(e,i){n(this,h),this._items=null,this._interval=null,this._activeElement=null,this._isPaused=!1,this._isSliding=!1,this._config=this._getConfig(i),this._element=t(e)[0],this._indicatorsElement=t(this._element).find(v.INDICATORS)[0],this._addEventListeners()}return h.prototype.next=function(){if(this._isSliding)throw new Error(\\\"Carousel is sliding\\\");this._slide(p.NEXT)},h.prototype.nextWhenVisible=function(){document.hidden||this.next()},h.prototype.prev=function(){if(this._isSliding)throw new Error(\\\"Carousel is sliding\\\");this._slide(p.PREVIOUS)},h.prototype.pause=function(e){e||(this._isPaused=!0),t(this._element).find(v.NEXT_PREV)[0]&&r.supportsTransitionEnd()&&(r.triggerTransitionEnd(this._element),this.cycle(!0)),clearInterval(this._interval),this._interval=null},h.prototype.cycle=function(t){t||(this._isPaused=!1),this._interval&&(clearInterval(this._interval),this._interval=null),this._config.interval&&!this._isPaused&&(this._interval=setInterval((document.visibilityState?this.nextWhenVisible:this.next).bind(this),this._config.interval))},h.prototype.to=function(e){var n=this;this._activeElement=t(this._element).find(v.ACTIVE_ITEM)[0];var i=this._getItemIndex(this._activeElement);if(!(e>this._items.length-1||e<0)){if(this._isSliding)return void t(this._element).one(m.SLID,function(){return n.to(e)});if(i===e)return this.pause(),void this.cycle();var o=e>i?p.NEXT:p.PREVIOUS;this._slide(o,this._items[e])}},h.prototype.dispose=function(){t(this._element).off(l),t.removeData(this._element,a),this._items=null,this._config=null,this._element=null,this._interval=null,this._isPaused=null,this._isSliding=null,this._activeElement=null,this._indicatorsElement=null},h.prototype._getConfig=function(n){return n=t.extend({},_,n),r.typeCheckConfig(e,n,g),n},h.prototype._addEventListeners=function(){var e=this;this._config.keyboard&&t(this._element).on(m.KEYDOWN,function(t){return e._keydown(t)}),\\\"hover\\\"!==this._config.pause||\\\"ontouchstart\\\"in document.documentElement||t(this._element).on(m.MOUSEENTER,function(t){return e.pause(t)}).on(m.MOUSELEAVE,function(t){return e.cycle(t)})},h.prototype._keydown=function(t){if(!/input|textarea/i.test(t.target.tagName))switch(t.which){case d:t.preventDefault(),this.prev();break;case f:t.preventDefault(),this.next();break;default:return}},h.prototype._getItemIndex=function(e){return this._items=t.makeArray(t(e).parent().find(v.ITEM)),this._items.indexOf(e)},h.prototype._getItemByDirection=function(t,e){var n=t===p.NEXT,i=t===p.PREVIOUS,o=this._getItemIndex(e),r=this._items.length-1,s=i&&0===o||n&&o===r;if(s&&!this._config.wrap)return e;var a=t===p.PREVIOUS?-1:1,l=(o+a)%this._items.length;return l===-1?this._items[this._items.length-1]:this._items[l]},h.prototype._triggerSlideEvent=function(e,n){var i=t.Event(m.SLIDE,{relatedTarget:e,direction:n});return t(this._element).trigger(i),i},h.prototype._setActiveIndicatorElement=function(e){if(this._indicatorsElement){t(this._indicatorsElement).find(v.ACTIVE).removeClass(E.ACTIVE);var n=this._indicatorsElement.children[this._getItemIndex(e)];n&&t(n).addClass(E.ACTIVE)}},h.prototype._slide=function(e,n){var i=this,o=t(this._element).find(v.ACTIVE_ITEM)[0],s=n||o&&this._getItemByDirection(e,o),a=Boolean(this._interval),l=void 0,h=void 0,c=void 0;if(e===p.NEXT?(l=E.LEFT,h=E.NEXT,c=p.LEFT):(l=E.RIGHT,h=E.PREV,c=p.RIGHT),s&&t(s).hasClass(E.ACTIVE))return void(this._isSliding=!1);var d=this._triggerSlideEvent(s,c);if(!d.isDefaultPrevented()&&o&&s){this._isSliding=!0,a&&this.pause(),this._setActiveIndicatorElement(s);var f=t.Event(m.SLID,{relatedTarget:s,direction:c});r.supportsTransitionEnd()&&t(this._element).hasClass(E.SLIDE)?(t(s).addClass(h),r.reflow(s),t(o).addClass(l),t(s).addClass(l),t(o).one(r.TRANSITION_END,function(){t(s).removeClass(l+\\\" \\\"+h).addClass(E.ACTIVE),t(o).removeClass(E.ACTIVE+\\\" \\\"+h+\\\" \\\"+l),i._isSliding=!1,setTimeout(function(){return t(i._element).trigger(f)},0)}).emulateTransitionEnd(u)):(t(o).removeClass(E.ACTIVE),t(s).addClass(E.ACTIVE),this._isSliding=!1,t(this._element).trigger(f)),a&&this.cycle()}},h._jQueryInterface=function(e){return this.each(function(){var n=t(this).data(a),o=t.extend({},_,t(this).data());\\\"object\\\"===(\\\"undefined\\\"==typeof e?\\\"undefined\\\":i(e))&&t.extend(o,e);var r=\\\"string\\\"==typeof e?e:o.slide;if(n||(n=new h(this,o),t(this).data(a,n)),\\\"number\\\"==typeof e)n.to(e);else if(\\\"string\\\"==typeof r){if(void 0===n[r])throw new Error('No method named \\\"'+r+'\\\"');n[r]()}else o.interval&&(n.pause(),n.cycle())})},h._dataApiClickHandler=function(e){var n=r.getSelectorFromElement(this);if(n){var i=t(n)[0];if(i&&t(i).hasClass(E.CAROUSEL)){var o=t.extend({},t(i).data(),t(this).data()),s=this.getAttribute(\\\"data-slide-to\\\");s&&(o.interval=!1),h._jQueryInterface.call(t(i),o),s&&t(i).data(a).to(s),e.preventDefault()}}},o(h,null,[{key:\\\"VERSION\\\",get:function(){return s}},{key:\\\"Default\\\",get:function(){return _}}]),h}();return t(document).on(m.CLICK_DATA_API,v.DATA_SLIDE,T._dataApiClickHandler),t(window).on(m.LOAD_DATA_API,function(){t(v.DATA_RIDE).each(function(){var e=t(this);T._jQueryInterface.call(e,e.data())})}),t.fn[e]=T._jQueryInterface,t.fn[e].Constructor=T,t.fn[e].noConflict=function(){return t.fn[e]=c,T._jQueryInterface},T}(jQuery),function(t){var e=\\\"collapse\\\",s=\\\"4.0.0-alpha.6\\\",a=\\\"bs.collapse\\\",l=\\\".\\\"+a,h=\\\".data-api\\\",c=t.fn[e],u=600,d={toggle:!0,parent:\\\"\\\"},f={toggle:\\\"boolean\\\",parent:\\\"string\\\"},_={SHOW:\\\"show\\\"+l,SHOWN:\\\"shown\\\"+l,HIDE:\\\"hide\\\"+l,HIDDEN:\\\"hidden\\\"+l,CLICK_DATA_API:\\\"click\\\"+l+h},g={SHOW:\\\"show\\\",COLLAPSE:\\\"collapse\\\",COLLAPSING:\\\"collapsing\\\",COLLAPSED:\\\"collapsed\\\"},p={WIDTH:\\\"width\\\",HEIGHT:\\\"height\\\"},m={ACTIVES:\\\".card > .show, .card > .collapsing\\\",DATA_TOGGLE:'[data-toggle=\\\"collapse\\\"]'},E=function(){function l(e,i){n(this,l),this._isTransitioning=!1,this._element=e,this._config=this._getConfig(i),this._triggerArray=t.makeArray(t('[data-toggle=\\\"collapse\\\"][href=\\\"#'+e.id+'\\\"],'+('[data-toggle=\\\"collapse\\\"][data-target=\\\"#'+e.id+'\\\"]'))),this._parent=this._config.parent?this._getParent():null,this._config.parent||this._addAriaAndCollapsedClass(this._element,this._triggerArray),this._config.toggle&&this.toggle()}return l.prototype.toggle=function(){t(this._element).hasClass(g.SHOW)?this.hide():this.show()},l.prototype.show=function(){var e=this;if(this._isTransitioning)throw new Error(\\\"Collapse is transitioning\\\");if(!t(this._element).hasClass(g.SHOW)){var n=void 0,i=void 0;if(this._parent&&(n=t.makeArray(t(this._parent).find(m.ACTIVES)),n.length||(n=null)),!(n&&(i=t(n).data(a),i&&i._isTransitioning))){var o=t.Event(_.SHOW);if(t(this._element).trigger(o),!o.isDefaultPrevented()){n&&(l._jQueryInterface.call(t(n),\\\"hide\\\"),i||t(n).data(a,null));var s=this._getDimension();t(this._element).removeClass(g.COLLAPSE).addClass(g.COLLAPSING),this._element.style[s]=0,this._element.setAttribute(\\\"aria-expanded\\\",!0),this._triggerArray.length&&t(this._triggerArray).removeClass(g.COLLAPSED).attr(\\\"aria-expanded\\\",!0),this.setTransitioning(!0);var h=function(){t(e._element).removeClass(g.COLLAPSING).addClass(g.COLLAPSE).addClass(g.SHOW),e._element.style[s]=\\\"\\\",e.setTransitioning(!1),t(e._element).trigger(_.SHOWN)};if(!r.supportsTransitionEnd())return void h();var c=s[0].toUpperCase()+s.slice(1),d=\\\"scroll\\\"+c;t(this._element).one(r.TRANSITION_END,h).emulateTransitionEnd(u),this._element.style[s]=this._element[d]+\\\"px\\\"}}}},l.prototype.hide=function(){var e=this;if(this._isTransitioning)throw new Error(\\\"Collapse is transitioning\\\");if(t(this._element).hasClass(g.SHOW)){var n=t.Event(_.HIDE);if(t(this._element).trigger(n),!n.isDefaultPrevented()){var i=this._getDimension(),o=i===p.WIDTH?\\\"offsetWidth\\\":\\\"offsetHeight\\\";this._element.style[i]=this._element[o]+\\\"px\\\",r.reflow(this._element),t(this._element).addClass(g.COLLAPSING).removeClass(g.COLLAPSE).removeClass(g.SHOW),this._element.setAttribute(\\\"aria-expanded\\\",!1),this._triggerArray.length&&t(this._triggerArray).addClass(g.COLLAPSED).attr(\\\"aria-expanded\\\",!1),this.setTransitioning(!0);var s=function(){e.setTransitioning(!1),t(e._element).removeClass(g.COLLAPSING).addClass(g.COLLAPSE).trigger(_.HIDDEN)};return this._element.style[i]=\\\"\\\",r.supportsTransitionEnd()?void t(this._element).one(r.TRANSITION_END,s).emulateTransitionEnd(u):void s()}}},l.prototype.setTransitioning=function(t){this._isTransitioning=t},l.prototype.dispose=function(){t.removeData(this._element,a),this._config=null,this._parent=null,this._element=null,this._triggerArray=null,this._isTransitioning=null},l.prototype._getConfig=function(n){return n=t.extend({},d,n),n.toggle=Boolean(n.toggle),r.typeCheckConfig(e,n,f),n},l.prototype._getDimension=function(){var e=t(this._element).hasClass(p.WIDTH);return e?p.WIDTH:p.HEIGHT},l.prototype._getParent=function(){var e=this,n=t(this._config.parent)[0],i='[data-toggle=\\\"collapse\\\"][data-parent=\\\"'+this._config.parent+'\\\"]';return t(n).find(i).each(function(t,n){e._addAriaAndCollapsedClass(l._getTargetFromElement(n),[n])}),n},l.prototype._addAriaAndCollapsedClass=function(e,n){if(e){var i=t(e).hasClass(g.SHOW);e.setAttribute(\\\"aria-expanded\\\",i),n.length&&t(n).toggleClass(g.COLLAPSED,!i).attr(\\\"aria-expanded\\\",i)}},l._getTargetFromElement=function(e){var n=r.getSelectorFromElement(e);return n?t(n)[0]:null},l._jQueryInterface=function(e){return this.each(function(){var n=t(this),o=n.data(a),r=t.extend({},d,n.data(),\\\"object\\\"===(\\\"undefined\\\"==typeof e?\\\"undefined\\\":i(e))&&e);if(!o&&r.toggle&&/show|hide/.test(e)&&(r.toggle=!1),o||(o=new l(this,r),n.data(a,o)),\\\"string\\\"==typeof e){if(void 0===o[e])throw new Error('No method named \\\"'+e+'\\\"');o[e]()}})},o(l,null,[{key:\\\"VERSION\\\",get:function(){return s}},{key:\\\"Default\\\",get:function(){return d}}]),l}();return t(document).on(_.CLICK_DATA_API,m.DATA_TOGGLE,function(e){e.preventDefault();var n=E._getTargetFromElement(this),i=t(n).data(a),o=i?\\\"toggle\\\":t(this).data();E._jQueryInterface.call(t(n),o)}),t.fn[e]=E._jQueryInterface,t.fn[e].Constructor=E,t.fn[e].noConflict=function(){return t.fn[e]=c,E._jQueryInterface},E}(jQuery),function(t){var e=\\\"dropdown\\\",i=\\\"4.0.0-alpha.6\\\",s=\\\"bs.dropdown\\\",a=\\\".\\\"+s,l=\\\".data-api\\\",h=t.fn[e],c=27,u=38,d=40,f=3,_={HIDE:\\\"hide\\\"+a,HIDDEN:\\\"hidden\\\"+a,SHOW:\\\"show\\\"+a,SHOWN:\\\"shown\\\"+a,CLICK:\\\"click\\\"+a,CLICK_DATA_API:\\\"click\\\"+a+l,FOCUSIN_DATA_API:\\\"focusin\\\"+a+l,KEYDOWN_DATA_API:\\\"keydown\\\"+a+l},g={BACKDROP:\\\"dropdown-backdrop\\\",DISABLED:\\\"disabled\\\",SHOW:\\\"show\\\"},p={BACKDROP:\\\".dropdown-backdrop\\\",DATA_TOGGLE:'[data-toggle=\\\"dropdown\\\"]',FORM_CHILD:\\\".dropdown form\\\",ROLE_MENU:'[role=\\\"menu\\\"]',ROLE_LISTBOX:'[role=\\\"listbox\\\"]',NAVBAR_NAV:\\\".navbar-nav\\\",VISIBLE_ITEMS:'[role=\\\"menu\\\"] li:not(.disabled) a, [role=\\\"listbox\\\"] li:not(.disabled) a'},m=function(){function e(t){n(this,e),this._element=t,this._addEventListeners()}return e.prototype.toggle=function(){if(this.disabled||t(this).hasClass(g.DISABLED))return!1;var n=e._getParentFromElement(this),i=t(n).hasClass(g.SHOW);if(e._clearMenus(),i)return!1;if(\\\"ontouchstart\\\"in document.documentElement&&!t(n).closest(p.NAVBAR_NAV).length){var o=document.createElement(\\\"div\\\");o.className=g.BACKDROP,t(o).insertBefore(this),t(o).on(\\\"click\\\",e._clearMenus)}var r={relatedTarget:this},s=t.Event(_.SHOW,r);return t(n).trigger(s),!s.isDefaultPrevented()&&(this.focus(),this.setAttribute(\\\"aria-expanded\\\",!0),t(n).toggleClass(g.SHOW),t(n).trigger(t.Event(_.SHOWN,r)),!1)},e.prototype.dispose=function(){t.removeData(this._element,s),t(this._element).off(a),this._element=null},e.prototype._addEventListeners=function(){t(this._element).on(_.CLICK,this.toggle)},e._jQueryInterface=function(n){return this.each(function(){var i=t(this).data(s);if(i||(i=new e(this),t(this).data(s,i)),\\\"string\\\"==typeof n){if(void 0===i[n])throw new Error('No method named \\\"'+n+'\\\"');i[n].call(this)}})},e._clearMenus=function(n){if(!n||n.which!==f){var i=t(p.BACKDROP)[0];i&&i.parentNode.removeChild(i);for(var o=t.makeArray(t(p.DATA_TOGGLE)),r=0;r<o.length;r++){var s=e._getParentFromElement(o[r]),a={relatedTarget:o[r]};if(t(s).hasClass(g.SHOW)&&!(n&&(\\\"click\\\"===n.type&&/input|textarea/i.test(n.target.tagName)||\\\"focusin\\\"===n.type)&&t.contains(s,n.target))){var l=t.Event(_.HIDE,a);t(s).trigger(l),l.isDefaultPrevented()||(o[r].setAttribute(\\\"aria-expanded\\\",\\\"false\\\"),t(s).removeClass(g.SHOW).trigger(t.Event(_.HIDDEN,a)))}}}},e._getParentFromElement=function(e){var n=void 0,i=r.getSelectorFromElement(e);return i&&(n=t(i)[0]),n||e.parentNode},e._dataApiKeydownHandler=function(n){if(/(38|40|27|32)/.test(n.which)&&!/input|textarea/i.test(n.target.tagName)&&(n.preventDefault(),n.stopPropagation(),!this.disabled&&!t(this).hasClass(g.DISABLED))){var i=e._getParentFromElement(this),o=t(i).hasClass(g.SHOW);if(!o&&n.which!==c||o&&n.which===c){if(n.which===c){var r=t(i).find(p.DATA_TOGGLE)[0];t(r).trigger(\\\"focus\\\")}return void t(this).trigger(\\\"click\\\")}var s=t(i).find(p.VISIBLE_ITEMS).get();if(s.length){var a=s.indexOf(n.target);n.which===u&&a>0&&a--,n.which===d&&a<s.length-1&&a++,a<0&&(a=0),s[a].focus()}}},o(e,null,[{key:\\\"VERSION\\\",get:function(){return i}}]),e}();return t(document).on(_.KEYDOWN_DATA_API,p.DATA_TOGGLE,m._dataApiKeydownHandler).on(_.KEYDOWN_DATA_API,p.ROLE_MENU,m._dataApiKeydownHandler).on(_.KEYDOWN_DATA_API,p.ROLE_LISTBOX,m._dataApiKeydownHandler).on(_.CLICK_DATA_API+\\\" \\\"+_.FOCUSIN_DATA_API,m._clearMenus).on(_.CLICK_DATA_API,p.DATA_TOGGLE,m.prototype.toggle).on(_.CLICK_DATA_API,p.FORM_CHILD,function(t){t.stopPropagation()}),t.fn[e]=m._jQueryInterface,t.fn[e].Constructor=m,t.fn[e].noConflict=function(){return t.fn[e]=h,m._jQueryInterface},m}(jQuery),function(t){var e=\\\"modal\\\",s=\\\"4.0.0-alpha.6\\\",a=\\\"bs.modal\\\",l=\\\".\\\"+a,h=\\\".data-api\\\",c=t.fn[e],u=300,d=150,f=27,_={backdrop:!0,keyboard:!0,focus:!0,show:!0},g={backdrop:\\\"(boolean|string)\\\",keyboard:\\\"boolean\\\",focus:\\\"boolean\\\",show:\\\"boolean\\\"},p={HIDE:\\\"hide\\\"+l,HIDDEN:\\\"hidden\\\"+l,SHOW:\\\"show\\\"+l,SHOWN:\\\"shown\\\"+l,FOCUSIN:\\\"focusin\\\"+l,RESIZE:\\\"resize\\\"+l,CLICK_DISMISS:\\\"click.dismiss\\\"+l,KEYDOWN_DISMISS:\\\"keydown.dismiss\\\"+l,MOUSEUP_DISMISS:\\\"mouseup.dismiss\\\"+l,MOUSEDOWN_DISMISS:\\\"mousedown.dismiss\\\"+l,CLICK_DATA_API:\\\"click\\\"+l+h},m={SCROLLBAR_MEASURER:\\\"modal-scrollbar-measure\\\",BACKDROP:\\\"modal-backdrop\\\",OPEN:\\\"modal-open\\\",FADE:\\\"fade\\\",SHOW:\\\"show\\\"},E={DIALOG:\\\".modal-dialog\\\",DATA_TOGGLE:'[data-toggle=\\\"modal\\\"]',DATA_DISMISS:'[data-dismiss=\\\"modal\\\"]',FIXED_CONTENT:\\\".fixed-top, .fixed-bottom, .is-fixed, .sticky-top\\\"},v=function(){function h(e,i){n(this,h),this._config=this._getConfig(i),this._element=e,this._dialog=t(e).find(E.DIALOG)[0],this._backdrop=null,this._isShown=!1,this._isBodyOverflowing=!1,this._ignoreBackdropClick=!1,this._isTransitioning=!1,this._originalBodyPadding=0,this._scrollbarWidth=0}return h.prototype.toggle=function(t){return this._isShown?this.hide():this.show(t)},h.prototype.show=function(e){var n=this;if(this._isTransitioning)throw new Error(\\\"Modal is transitioning\\\");r.supportsTransitionEnd()&&t(this._element).hasClass(m.FADE)&&(this._isTransitioning=!0);var i=t.Event(p.SHOW,{relatedTarget:e});t(this._element).trigger(i),this._isShown||i.isDefaultPrevented()||(this._isShown=!0,this._checkScrollbar(),this._setScrollbar(),t(document.body).addClass(m.OPEN),this._setEscapeEvent(),this._setResizeEvent(),t(this._element).on(p.CLICK_DISMISS,E.DATA_DISMISS,function(t){return n.hide(t)}),t(this._dialog).on(p.MOUSEDOWN_DISMISS,function(){t(n._element).one(p.MOUSEUP_DISMISS,function(e){t(e.target).is(n._element)&&(n._ignoreBackdropClick=!0)})}),this._showBackdrop(function(){return n._showElement(e)}))},h.prototype.hide=function(e){var n=this;if(e&&e.preventDefault(),this._isTransitioning)throw new Error(\\\"Modal is transitioning\\\");var i=r.supportsTransitionEnd()&&t(this._element).hasClass(m.FADE);i&&(this._isTransitioning=!0);var o=t.Event(p.HIDE);t(this._element).trigger(o),this._isShown&&!o.isDefaultPrevented()&&(this._isShown=!1,this._setEscapeEvent(),this._setResizeEvent(),t(document).off(p.FOCUSIN),t(this._element).removeClass(m.SHOW),t(this._element).off(p.CLICK_DISMISS),t(this._dialog).off(p.MOUSEDOWN_DISMISS),i?t(this._element).one(r.TRANSITION_END,function(t){return n._hideModal(t)}).emulateTransitionEnd(u):this._hideModal())},h.prototype.dispose=function(){t.removeData(this._element,a),t(window,document,this._element,this._backdrop).off(l),this._config=null,this._element=null,this._dialog=null,this._backdrop=null,this._isShown=null,this._isBodyOverflowing=null,this._ignoreBackdropClick=null,this._originalBodyPadding=null,this._scrollbarWidth=null},h.prototype._getConfig=function(n){return n=t.extend({},_,n),r.typeCheckConfig(e,n,g),n},h.prototype._showElement=function(e){var n=this,i=r.supportsTransitionEnd()&&t(this._element).hasClass(m.FADE);this._element.parentNode&&this._element.parentNode.nodeType===Node.ELEMENT_NODE||document.body.appendChild(this._element),this._element.style.display=\\\"block\\\",this._element.removeAttribute(\\\"aria-hidden\\\"),this._element.scrollTop=0,i&&r.reflow(this._element),t(this._element).addClass(m.SHOW),this._config.focus&&this._enforceFocus();var o=t.Event(p.SHOWN,{relatedTarget:e}),s=function(){n._config.focus&&n._element.focus(),n._isTransitioning=!1,t(n._element).trigger(o)};i?t(this._dialog).one(r.TRANSITION_END,s).emulateTransitionEnd(u):s()},h.prototype._enforceFocus=function(){var e=this;t(document).off(p.FOCUSIN).on(p.FOCUSIN,function(n){document===n.target||e._element===n.target||t(e._element).has(n.target).length||e._element.focus()})},h.prototype._setEscapeEvent=function(){var e=this;this._isShown&&this._config.keyboard?t(this._element).on(p.KEYDOWN_DISMISS,function(t){t.which===f&&e.hide()}):this._isShown||t(this._element).off(p.KEYDOWN_DISMISS)},h.prototype._setResizeEvent=function(){var e=this;this._isShown?t(window).on(p.RESIZE,function(t){return e._handleUpdate(t)}):t(window).off(p.RESIZE)},h.prototype._hideModal=function(){var e=this;this._element.style.display=\\\"none\\\",this._element.setAttribute(\\\"aria-hidden\\\",\\\"true\\\"),this._isTransitioning=!1,this._showBackdrop(function(){t(document.body).removeClass(m.OPEN),e._resetAdjustments(),e._resetScrollbar(),t(e._element).trigger(p.HIDDEN)})},h.prototype._removeBackdrop=function(){this._backdrop&&(t(this._backdrop).remove(),this._backdrop=null)},h.prototype._showBackdrop=function(e){var n=this,i=t(this._element).hasClass(m.FADE)?m.FADE:\\\"\\\";if(this._isShown&&this._config.backdrop){var o=r.supportsTransitionEnd()&&i;if(this._backdrop=document.createElement(\\\"div\\\"),this._backdrop.className=m.BACKDROP,i&&t(this._backdrop).addClass(i),t(this._backdrop).appendTo(document.body),t(this._element).on(p.CLICK_DISMISS,function(t){return n._ignoreBackdropClick?void(n._ignoreBackdropClick=!1):void(t.target===t.currentTarget&&(\\\"static\\\"===n._config.backdrop?n._element.focus():n.hide()))}),o&&r.reflow(this._backdrop),t(this._backdrop).addClass(m.SHOW),!e)return;if(!o)return void e();t(this._backdrop).one(r.TRANSITION_END,e).emulateTransitionEnd(d)}else if(!this._isShown&&this._backdrop){t(this._backdrop).removeClass(m.SHOW);var s=function(){n._removeBackdrop(),e&&e()};r.supportsTransitionEnd()&&t(this._element).hasClass(m.FADE)?t(this._backdrop).one(r.TRANSITION_END,s).emulateTransitionEnd(d):s()}else e&&e()},h.prototype._handleUpdate=function(){this._adjustDialog()},h.prototype._adjustDialog=function(){var t=this._element.scrollHeight>document.documentElement.clientHeight;!this._isBodyOverflowing&&t&&(this._element.style.paddingLeft=this._scrollbarWidth+\\\"px\\\"),this._isBodyOverflowing&&!t&&(this._element.style.paddingRight=this._scrollbarWidth+\\\"px\\\")},h.prototype._resetAdjustments=function(){this._element.style.paddingLeft=\\\"\\\",this._element.style.paddingRight=\\\"\\\"},h.prototype._checkScrollbar=function(){this._isBodyOverflowing=document.body.clientWidth<window.innerWidth,this._scrollbarWidth=this._getScrollbarWidth()},h.prototype._setScrollbar=function(){var e=parseInt(t(E.FIXED_CONTENT).css(\\\"padding-right\\\")||0,10);this._originalBodyPadding=document.body.style.paddingRight||\\\"\\\",this._isBodyOverflowing&&(document.body.style.paddingRight=e+this._scrollbarWidth+\\\"px\\\")},h.prototype._resetScrollbar=function(){document.body.style.paddingRight=this._originalBodyPadding},h.prototype._getScrollbarWidth=function(){var t=document.createElement(\\\"div\\\");t.className=m.SCROLLBAR_MEASURER,document.body.appendChild(t);var e=t.offsetWidth-t.clientWidth;return document.body.removeChild(t),e},h._jQueryInterface=function(e,n){return this.each(function(){var o=t(this).data(a),r=t.extend({},h.Default,t(this).data(),\\\"object\\\"===(\\\"undefined\\\"==typeof e?\\\"undefined\\\":i(e))&&e);if(o||(o=new h(this,r),t(this).data(a,o)),\\\"string\\\"==typeof e){if(void 0===o[e])throw new Error('No method named \\\"'+e+'\\\"');o[e](n)}else r.show&&o.show(n)})},o(h,null,[{key:\\\"VERSION\\\",get:function(){return s}},{key:\\\"Default\\\",get:function(){return _}}]),h}();return t(document).on(p.CLICK_DATA_API,E.DATA_TOGGLE,function(e){var n=this,i=void 0,o=r.getSelectorFromElement(this);o&&(i=t(o)[0]);var s=t(i).data(a)?\\\"toggle\\\":t.extend({},t(i).data(),t(this).data());\\\"A\\\"!==this.tagName&&\\\"AREA\\\"!==this.tagName||e.preventDefault();var l=t(i).one(p.SHOW,function(e){e.isDefaultPrevented()||l.one(p.HIDDEN,function(){t(n).is(\\\":visible\\\")&&n.focus()})});v._jQueryInterface.call(t(i),s,this)}),t.fn[e]=v._jQueryInterface,t.fn[e].Constructor=v,t.fn[e].noConflict=function(){return t.fn[e]=c,v._jQueryInterface},v}(jQuery),function(t){var e=\\\"scrollspy\\\",s=\\\"4.0.0-alpha.6\\\",a=\\\"bs.scrollspy\\\",l=\\\".\\\"+a,h=\\\".data-api\\\",c=t.fn[e],u={offset:10,method:\\\"auto\\\",target:\\\"\\\"},d={offset:\\\"number\\\",method:\\\"string\\\",target:\\\"(string|element)\\\"},f={ACTIVATE:\\\"activate\\\"+l,SCROLL:\\\"scroll\\\"+l,LOAD_DATA_API:\\\"load\\\"+l+h},_={DROPDOWN_ITEM:\\\"dropdown-item\\\",DROPDOWN_MENU:\\\"dropdown-menu\\\",NAV_LINK:\\\"nav-link\\\",NAV:\\\"nav\\\",ACTIVE:\\\"active\\\"},g={DATA_SPY:'[data-spy=\\\"scroll\\\"]',ACTIVE:\\\".active\\\",LIST_ITEM:\\\".list-item\\\",LI:\\\"li\\\",LI_DROPDOWN:\\\"li.dropdown\\\",NAV_LINKS:\\\".nav-link\\\",DROPDOWN:\\\".dropdown\\\",DROPDOWN_ITEMS:\\\".dropdown-item\\\",DROPDOWN_TOGGLE:\\\".dropdown-toggle\\\"},p={OFFSET:\\\"offset\\\",POSITION:\\\"position\\\"},m=function(){function h(e,i){var o=this;n(this,h),this._element=e,this._scrollElement=\\\"BODY\\\"===e.tagName?window:e,this._config=this._getConfig(i),this._selector=this._config.target+\\\" \\\"+g.NAV_LINKS+\\\",\\\"+(this._config.target+\\\" \\\"+g.DROPDOWN_ITEMS),this._offsets=[],this._targets=[],this._activeTarget=null,this._scrollHeight=0,t(this._scrollElement).on(f.SCROLL,function(t){return o._process(t)}),this.refresh(),this._process()}return h.prototype.refresh=function(){var e=this,n=this._scrollElement!==this._scrollElement.window?p.POSITION:p.OFFSET,i=\\\"auto\\\"===this._config.method?n:this._config.method,o=i===p.POSITION?this._getScrollTop():0;this._offsets=[],this._targets=[],this._scrollHeight=this._getScrollHeight();var s=t.makeArray(t(this._selector));s.map(function(e){var n=void 0,s=r.getSelectorFromElement(e);return s&&(n=t(s)[0]),n&&(n.offsetWidth||n.offsetHeight)?[t(n)[i]().top+o,s]:null}).filter(function(t){return t}).sort(function(t,e){return t[0]-e[0]}).forEach(function(t){e._offsets.push(t[0]),e._targets.push(t[1])})},h.prototype.dispose=function(){t.removeData(this._element,a),t(this._scrollElement).off(l),this._element=null,this._scrollElement=null,this._config=null,this._selector=null,this._offsets=null,this._targets=null,this._activeTarget=null,this._scrollHeight=null},h.prototype._getConfig=function(n){if(n=t.extend({},u,n),\\\"string\\\"!=typeof n.target){var i=t(n.target).attr(\\\"id\\\");i||(i=r.getUID(e),t(n.target).attr(\\\"id\\\",i)),n.target=\\\"#\\\"+i}return r.typeCheckConfig(e,n,d),n},h.prototype._getScrollTop=function(){return this._scrollElement===window?this._scrollElement.pageYOffset:this._scrollElement.scrollTop},h.prototype._getScrollHeight=function(){return this._scrollElement.scrollHeight||Math.max(document.body.scrollHeight,document.documentElement.scrollHeight)},h.prototype._getOffsetHeight=function(){return this._scrollElement===window?window.innerHeight:this._scrollElement.offsetHeight},h.prototype._process=function(){var t=this._getScrollTop()+this._config.offset,e=this._getScrollHeight(),n=this._config.offset+e-this._getOffsetHeight();if(this._scrollHeight!==e&&this.refresh(),t>=n){var i=this._targets[this._targets.length-1];return void(this._activeTarget!==i&&this._activate(i))}if(this._activeTarget&&t<this._offsets[0]&&this._offsets[0]>0)return this._activeTarget=null,void this._clear();for(var o=this._offsets.length;o--;){var r=this._activeTarget!==this._targets[o]&&t>=this._offsets[o]&&(void 0===this._offsets[o+1]||t<this._offsets[o+1]);r&&this._activate(this._targets[o])}},h.prototype._activate=function(e){this._activeTarget=e,this._clear();var n=this._selector.split(\\\",\\\");n=n.map(function(t){return t+'[data-target=\\\"'+e+'\\\"],'+(t+'[href=\\\"'+e+'\\\"]')});var i=t(n.join(\\\",\\\"));i.hasClass(_.DROPDOWN_ITEM)?(i.closest(g.DROPDOWN).find(g.DROPDOWN_TOGGLE).addClass(_.ACTIVE),i.addClass(_.ACTIVE)):i.parents(g.LI).find(\\\"> \\\"+g.NAV_LINKS).addClass(_.ACTIVE),t(this._scrollElement).trigger(f.ACTIVATE,{relatedTarget:e})},h.prototype._clear=function(){t(this._selector).filter(g.ACTIVE).removeClass(_.ACTIVE)},h._jQueryInterface=function(e){return this.each(function(){var n=t(this).data(a),o=\\\"object\\\"===(\\\"undefined\\\"==typeof e?\\\"undefined\\\":i(e))&&e;\\nif(n||(n=new h(this,o),t(this).data(a,n)),\\\"string\\\"==typeof e){if(void 0===n[e])throw new Error('No method named \\\"'+e+'\\\"');n[e]()}})},o(h,null,[{key:\\\"VERSION\\\",get:function(){return s}},{key:\\\"Default\\\",get:function(){return u}}]),h}();return t(window).on(f.LOAD_DATA_API,function(){for(var e=t.makeArray(t(g.DATA_SPY)),n=e.length;n--;){var i=t(e[n]);m._jQueryInterface.call(i,i.data())}}),t.fn[e]=m._jQueryInterface,t.fn[e].Constructor=m,t.fn[e].noConflict=function(){return t.fn[e]=c,m._jQueryInterface},m}(jQuery),function(t){var e=\\\"tab\\\",i=\\\"4.0.0-alpha.6\\\",s=\\\"bs.tab\\\",a=\\\".\\\"+s,l=\\\".data-api\\\",h=t.fn[e],c=150,u={HIDE:\\\"hide\\\"+a,HIDDEN:\\\"hidden\\\"+a,SHOW:\\\"show\\\"+a,SHOWN:\\\"shown\\\"+a,CLICK_DATA_API:\\\"click\\\"+a+l},d={DROPDOWN_MENU:\\\"dropdown-menu\\\",ACTIVE:\\\"active\\\",DISABLED:\\\"disabled\\\",FADE:\\\"fade\\\",SHOW:\\\"show\\\"},f={A:\\\"a\\\",LI:\\\"li\\\",DROPDOWN:\\\".dropdown\\\",LIST:\\\"ul:not(.dropdown-menu), ol:not(.dropdown-menu), nav:not(.dropdown-menu)\\\",FADE_CHILD:\\\"> .nav-item .fade, > .fade\\\",ACTIVE:\\\".active\\\",ACTIVE_CHILD:\\\"> .nav-item > .active, > .active\\\",DATA_TOGGLE:'[data-toggle=\\\"tab\\\"], [data-toggle=\\\"pill\\\"]',DROPDOWN_TOGGLE:\\\".dropdown-toggle\\\",DROPDOWN_ACTIVE_CHILD:\\\"> .dropdown-menu .active\\\"},_=function(){function e(t){n(this,e),this._element=t}return e.prototype.show=function(){var e=this;if(!(this._element.parentNode&&this._element.parentNode.nodeType===Node.ELEMENT_NODE&&t(this._element).hasClass(d.ACTIVE)||t(this._element).hasClass(d.DISABLED))){var n=void 0,i=void 0,o=t(this._element).closest(f.LIST)[0],s=r.getSelectorFromElement(this._element);o&&(i=t.makeArray(t(o).find(f.ACTIVE)),i=i[i.length-1]);var a=t.Event(u.HIDE,{relatedTarget:this._element}),l=t.Event(u.SHOW,{relatedTarget:i});if(i&&t(i).trigger(a),t(this._element).trigger(l),!l.isDefaultPrevented()&&!a.isDefaultPrevented()){s&&(n=t(s)[0]),this._activate(this._element,o);var h=function(){var n=t.Event(u.HIDDEN,{relatedTarget:e._element}),o=t.Event(u.SHOWN,{relatedTarget:i});t(i).trigger(n),t(e._element).trigger(o)};n?this._activate(n,n.parentNode,h):h()}}},e.prototype.dispose=function(){t.removeClass(this._element,s),this._element=null},e.prototype._activate=function(e,n,i){var o=this,s=t(n).find(f.ACTIVE_CHILD)[0],a=i&&r.supportsTransitionEnd()&&(s&&t(s).hasClass(d.FADE)||Boolean(t(n).find(f.FADE_CHILD)[0])),l=function(){return o._transitionComplete(e,s,a,i)};s&&a?t(s).one(r.TRANSITION_END,l).emulateTransitionEnd(c):l(),s&&t(s).removeClass(d.SHOW)},e.prototype._transitionComplete=function(e,n,i,o){if(n){t(n).removeClass(d.ACTIVE);var s=t(n.parentNode).find(f.DROPDOWN_ACTIVE_CHILD)[0];s&&t(s).removeClass(d.ACTIVE),n.setAttribute(\\\"aria-expanded\\\",!1)}if(t(e).addClass(d.ACTIVE),e.setAttribute(\\\"aria-expanded\\\",!0),i?(r.reflow(e),t(e).addClass(d.SHOW)):t(e).removeClass(d.FADE),e.parentNode&&t(e.parentNode).hasClass(d.DROPDOWN_MENU)){var a=t(e).closest(f.DROPDOWN)[0];a&&t(a).find(f.DROPDOWN_TOGGLE).addClass(d.ACTIVE),e.setAttribute(\\\"aria-expanded\\\",!0)}o&&o()},e._jQueryInterface=function(n){return this.each(function(){var i=t(this),o=i.data(s);if(o||(o=new e(this),i.data(s,o)),\\\"string\\\"==typeof n){if(void 0===o[n])throw new Error('No method named \\\"'+n+'\\\"');o[n]()}})},o(e,null,[{key:\\\"VERSION\\\",get:function(){return i}}]),e}();return t(document).on(u.CLICK_DATA_API,f.DATA_TOGGLE,function(e){e.preventDefault(),_._jQueryInterface.call(t(this),\\\"show\\\")}),t.fn[e]=_._jQueryInterface,t.fn[e].Constructor=_,t.fn[e].noConflict=function(){return t.fn[e]=h,_._jQueryInterface},_}(jQuery),function(t){if(\\\"undefined\\\"==typeof Tether)throw new Error(\\\"Bootstrap tooltips require Tether (http://tether.io/)\\\");var e=\\\"tooltip\\\",s=\\\"4.0.0-alpha.6\\\",a=\\\"bs.tooltip\\\",l=\\\".\\\"+a,h=t.fn[e],c=150,u=\\\"bs-tether\\\",d={animation:!0,template:'<div class=\\\"tooltip\\\" role=\\\"tooltip\\\"><div class=\\\"tooltip-inner\\\"></div></div>',trigger:\\\"hover focus\\\",title:\\\"\\\",delay:0,html:!1,selector:!1,placement:\\\"top\\\",offset:\\\"0 0\\\",constraints:[],container:!1},f={animation:\\\"boolean\\\",template:\\\"string\\\",title:\\\"(string|element|function)\\\",trigger:\\\"string\\\",delay:\\\"(number|object)\\\",html:\\\"boolean\\\",selector:\\\"(string|boolean)\\\",placement:\\\"(string|function)\\\",offset:\\\"string\\\",constraints:\\\"array\\\",container:\\\"(string|element|boolean)\\\"},_={TOP:\\\"bottom center\\\",RIGHT:\\\"middle left\\\",BOTTOM:\\\"top center\\\",LEFT:\\\"middle right\\\"},g={SHOW:\\\"show\\\",OUT:\\\"out\\\"},p={HIDE:\\\"hide\\\"+l,HIDDEN:\\\"hidden\\\"+l,SHOW:\\\"show\\\"+l,SHOWN:\\\"shown\\\"+l,INSERTED:\\\"inserted\\\"+l,CLICK:\\\"click\\\"+l,FOCUSIN:\\\"focusin\\\"+l,FOCUSOUT:\\\"focusout\\\"+l,MOUSEENTER:\\\"mouseenter\\\"+l,MOUSELEAVE:\\\"mouseleave\\\"+l},m={FADE:\\\"fade\\\",SHOW:\\\"show\\\"},E={TOOLTIP:\\\".tooltip\\\",TOOLTIP_INNER:\\\".tooltip-inner\\\"},v={element:!1,enabled:!1},T={HOVER:\\\"hover\\\",FOCUS:\\\"focus\\\",CLICK:\\\"click\\\",MANUAL:\\\"manual\\\"},I=function(){function h(t,e){n(this,h),this._isEnabled=!0,this._timeout=0,this._hoverState=\\\"\\\",this._activeTrigger={},this._isTransitioning=!1,this._tether=null,this.element=t,this.config=this._getConfig(e),this.tip=null,this._setListeners()}return h.prototype.enable=function(){this._isEnabled=!0},h.prototype.disable=function(){this._isEnabled=!1},h.prototype.toggleEnabled=function(){this._isEnabled=!this._isEnabled},h.prototype.toggle=function(e){if(e){var n=this.constructor.DATA_KEY,i=t(e.currentTarget).data(n);i||(i=new this.constructor(e.currentTarget,this._getDelegateConfig()),t(e.currentTarget).data(n,i)),i._activeTrigger.click=!i._activeTrigger.click,i._isWithActiveTrigger()?i._enter(null,i):i._leave(null,i)}else{if(t(this.getTipElement()).hasClass(m.SHOW))return void this._leave(null,this);this._enter(null,this)}},h.prototype.dispose=function(){clearTimeout(this._timeout),this.cleanupTether(),t.removeData(this.element,this.constructor.DATA_KEY),t(this.element).off(this.constructor.EVENT_KEY),t(this.element).closest(\\\".modal\\\").off(\\\"hide.bs.modal\\\"),this.tip&&t(this.tip).remove(),this._isEnabled=null,this._timeout=null,this._hoverState=null,this._activeTrigger=null,this._tether=null,this.element=null,this.config=null,this.tip=null},h.prototype.show=function(){var e=this;if(\\\"none\\\"===t(this.element).css(\\\"display\\\"))throw new Error(\\\"Please use show on visible elements\\\");var n=t.Event(this.constructor.Event.SHOW);if(this.isWithContent()&&this._isEnabled){if(this._isTransitioning)throw new Error(\\\"Tooltip is transitioning\\\");t(this.element).trigger(n);var i=t.contains(this.element.ownerDocument.documentElement,this.element);if(n.isDefaultPrevented()||!i)return;var o=this.getTipElement(),s=r.getUID(this.constructor.NAME);o.setAttribute(\\\"id\\\",s),this.element.setAttribute(\\\"aria-describedby\\\",s),this.setContent(),this.config.animation&&t(o).addClass(m.FADE);var a=\\\"function\\\"==typeof this.config.placement?this.config.placement.call(this,o,this.element):this.config.placement,l=this._getAttachment(a),c=this.config.container===!1?document.body:t(this.config.container);t(o).data(this.constructor.DATA_KEY,this).appendTo(c),t(this.element).trigger(this.constructor.Event.INSERTED),this._tether=new Tether({attachment:l,element:o,target:this.element,classes:v,classPrefix:u,offset:this.config.offset,constraints:this.config.constraints,addTargetClasses:!1}),r.reflow(o),this._tether.position(),t(o).addClass(m.SHOW);var d=function(){var n=e._hoverState;e._hoverState=null,e._isTransitioning=!1,t(e.element).trigger(e.constructor.Event.SHOWN),n===g.OUT&&e._leave(null,e)};if(r.supportsTransitionEnd()&&t(this.tip).hasClass(m.FADE))return this._isTransitioning=!0,void t(this.tip).one(r.TRANSITION_END,d).emulateTransitionEnd(h._TRANSITION_DURATION);d()}},h.prototype.hide=function(e){var n=this,i=this.getTipElement(),o=t.Event(this.constructor.Event.HIDE);if(this._isTransitioning)throw new Error(\\\"Tooltip is transitioning\\\");var s=function(){n._hoverState!==g.SHOW&&i.parentNode&&i.parentNode.removeChild(i),n.element.removeAttribute(\\\"aria-describedby\\\"),t(n.element).trigger(n.constructor.Event.HIDDEN),n._isTransitioning=!1,n.cleanupTether(),e&&e()};t(this.element).trigger(o),o.isDefaultPrevented()||(t(i).removeClass(m.SHOW),this._activeTrigger[T.CLICK]=!1,this._activeTrigger[T.FOCUS]=!1,this._activeTrigger[T.HOVER]=!1,r.supportsTransitionEnd()&&t(this.tip).hasClass(m.FADE)?(this._isTransitioning=!0,t(i).one(r.TRANSITION_END,s).emulateTransitionEnd(c)):s(),this._hoverState=\\\"\\\")},h.prototype.isWithContent=function(){return Boolean(this.getTitle())},h.prototype.getTipElement=function(){return this.tip=this.tip||t(this.config.template)[0]},h.prototype.setContent=function(){var e=t(this.getTipElement());this.setElementContent(e.find(E.TOOLTIP_INNER),this.getTitle()),e.removeClass(m.FADE+\\\" \\\"+m.SHOW),this.cleanupTether()},h.prototype.setElementContent=function(e,n){var o=this.config.html;\\\"object\\\"===(\\\"undefined\\\"==typeof n?\\\"undefined\\\":i(n))&&(n.nodeType||n.jquery)?o?t(n).parent().is(e)||e.empty().append(n):e.text(t(n).text()):e[o?\\\"html\\\":\\\"text\\\"](n)},h.prototype.getTitle=function(){var t=this.element.getAttribute(\\\"data-original-title\\\");return t||(t=\\\"function\\\"==typeof this.config.title?this.config.title.call(this.element):this.config.title),t},h.prototype.cleanupTether=function(){this._tether&&this._tether.destroy()},h.prototype._getAttachment=function(t){return _[t.toUpperCase()]},h.prototype._setListeners=function(){var e=this,n=this.config.trigger.split(\\\" \\\");n.forEach(function(n){if(\\\"click\\\"===n)t(e.element).on(e.constructor.Event.CLICK,e.config.selector,function(t){return e.toggle(t)});else if(n!==T.MANUAL){var i=n===T.HOVER?e.constructor.Event.MOUSEENTER:e.constructor.Event.FOCUSIN,o=n===T.HOVER?e.constructor.Event.MOUSELEAVE:e.constructor.Event.FOCUSOUT;t(e.element).on(i,e.config.selector,function(t){return e._enter(t)}).on(o,e.config.selector,function(t){return e._leave(t)})}t(e.element).closest(\\\".modal\\\").on(\\\"hide.bs.modal\\\",function(){return e.hide()})}),this.config.selector?this.config=t.extend({},this.config,{trigger:\\\"manual\\\",selector:\\\"\\\"}):this._fixTitle()},h.prototype._fixTitle=function(){var t=i(this.element.getAttribute(\\\"data-original-title\\\"));(this.element.getAttribute(\\\"title\\\")||\\\"string\\\"!==t)&&(this.element.setAttribute(\\\"data-original-title\\\",this.element.getAttribute(\\\"title\\\")||\\\"\\\"),this.element.setAttribute(\\\"title\\\",\\\"\\\"))},h.prototype._enter=function(e,n){var i=this.constructor.DATA_KEY;return n=n||t(e.currentTarget).data(i),n||(n=new this.constructor(e.currentTarget,this._getDelegateConfig()),t(e.currentTarget).data(i,n)),e&&(n._activeTrigger[\\\"focusin\\\"===e.type?T.FOCUS:T.HOVER]=!0),t(n.getTipElement()).hasClass(m.SHOW)||n._hoverState===g.SHOW?void(n._hoverState=g.SHOW):(clearTimeout(n._timeout),n._hoverState=g.SHOW,n.config.delay&&n.config.delay.show?void(n._timeout=setTimeout(function(){n._hoverState===g.SHOW&&n.show()},n.config.delay.show)):void n.show())},h.prototype._leave=function(e,n){var i=this.constructor.DATA_KEY;if(n=n||t(e.currentTarget).data(i),n||(n=new this.constructor(e.currentTarget,this._getDelegateConfig()),t(e.currentTarget).data(i,n)),e&&(n._activeTrigger[\\\"focusout\\\"===e.type?T.FOCUS:T.HOVER]=!1),!n._isWithActiveTrigger())return clearTimeout(n._timeout),n._hoverState=g.OUT,n.config.delay&&n.config.delay.hide?void(n._timeout=setTimeout(function(){n._hoverState===g.OUT&&n.hide()},n.config.delay.hide)):void n.hide()},h.prototype._isWithActiveTrigger=function(){for(var t in this._activeTrigger)if(this._activeTrigger[t])return!0;return!1},h.prototype._getConfig=function(n){return n=t.extend({},this.constructor.Default,t(this.element).data(),n),n.delay&&\\\"number\\\"==typeof n.delay&&(n.delay={show:n.delay,hide:n.delay}),r.typeCheckConfig(e,n,this.constructor.DefaultType),n},h.prototype._getDelegateConfig=function(){var t={};if(this.config)for(var e in this.config)this.constructor.Default[e]!==this.config[e]&&(t[e]=this.config[e]);return t},h._jQueryInterface=function(e){return this.each(function(){var n=t(this).data(a),o=\\\"object\\\"===(\\\"undefined\\\"==typeof e?\\\"undefined\\\":i(e))&&e;if((n||!/dispose|hide/.test(e))&&(n||(n=new h(this,o),t(this).data(a,n)),\\\"string\\\"==typeof e)){if(void 0===n[e])throw new Error('No method named \\\"'+e+'\\\"');n[e]()}})},o(h,null,[{key:\\\"VERSION\\\",get:function(){return s}},{key:\\\"Default\\\",get:function(){return d}},{key:\\\"NAME\\\",get:function(){return e}},{key:\\\"DATA_KEY\\\",get:function(){return a}},{key:\\\"Event\\\",get:function(){return p}},{key:\\\"EVENT_KEY\\\",get:function(){return l}},{key:\\\"DefaultType\\\",get:function(){return f}}]),h}();return t.fn[e]=I._jQueryInterface,t.fn[e].Constructor=I,t.fn[e].noConflict=function(){return t.fn[e]=h,I._jQueryInterface},I}(jQuery));(function(r){var a=\\\"popover\\\",l=\\\"4.0.0-alpha.6\\\",h=\\\"bs.popover\\\",c=\\\".\\\"+h,u=r.fn[a],d=r.extend({},s.Default,{placement:\\\"right\\\",trigger:\\\"click\\\",content:\\\"\\\",template:'<div class=\\\"popover\\\" role=\\\"tooltip\\\"><h3 class=\\\"popover-title\\\"></h3><div class=\\\"popover-content\\\"></div></div>'}),f=r.extend({},s.DefaultType,{content:\\\"(string|element|function)\\\"}),_={FADE:\\\"fade\\\",SHOW:\\\"show\\\"},g={TITLE:\\\".popover-title\\\",CONTENT:\\\".popover-content\\\"},p={HIDE:\\\"hide\\\"+c,HIDDEN:\\\"hidden\\\"+c,SHOW:\\\"show\\\"+c,SHOWN:\\\"shown\\\"+c,INSERTED:\\\"inserted\\\"+c,CLICK:\\\"click\\\"+c,FOCUSIN:\\\"focusin\\\"+c,FOCUSOUT:\\\"focusout\\\"+c,MOUSEENTER:\\\"mouseenter\\\"+c,MOUSELEAVE:\\\"mouseleave\\\"+c},m=function(s){function u(){return n(this,u),t(this,s.apply(this,arguments))}return e(u,s),u.prototype.isWithContent=function(){return this.getTitle()||this._getContent()},u.prototype.getTipElement=function(){return this.tip=this.tip||r(this.config.template)[0]},u.prototype.setContent=function(){var t=r(this.getTipElement());this.setElementContent(t.find(g.TITLE),this.getTitle()),this.setElementContent(t.find(g.CONTENT),this._getContent()),t.removeClass(_.FADE+\\\" \\\"+_.SHOW),this.cleanupTether()},u.prototype._getContent=function(){return this.element.getAttribute(\\\"data-content\\\")||(\\\"function\\\"==typeof this.config.content?this.config.content.call(this.element):this.config.content)},u._jQueryInterface=function(t){return this.each(function(){var e=r(this).data(h),n=\\\"object\\\"===(\\\"undefined\\\"==typeof t?\\\"undefined\\\":i(t))?t:null;if((e||!/destroy|hide/.test(t))&&(e||(e=new u(this,n),r(this).data(h,e)),\\\"string\\\"==typeof t)){if(void 0===e[t])throw new Error('No method named \\\"'+t+'\\\"');e[t]()}})},o(u,null,[{key:\\\"VERSION\\\",get:function(){return l}},{key:\\\"Default\\\",get:function(){return d}},{key:\\\"NAME\\\",get:function(){return a}},{key:\\\"DATA_KEY\\\",get:function(){return h}},{key:\\\"Event\\\",get:function(){return p}},{key:\\\"EVENT_KEY\\\",get:function(){return c}},{key:\\\"DefaultType\\\",get:function(){return f}}]),u}(s);return r.fn[a]=m._jQueryInterface,r.fn[a].Constructor=m,r.fn[a].noConflict=function(){return r.fn[a]=u,m._jQueryInterface},m})(jQuery)}();\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/raw-loader!./~/mdbootstrap/js/bootstrap.min.js\n// module id = 662\n// module chunks = 3","module.exports = \"!function(t,e){\\\"function\\\"==typeof define&&define.amd?define(e):\\\"object\\\"==typeof exports?module.exports=e(require,exports,module):t.Tether=e()}(this,function(t,e,o){\\\"use strict\\\";function i(t,e){if(!(t instanceof e))throw new TypeError(\\\"Cannot call a class as a function\\\")}function n(t){var e=getComputedStyle(t)||{},o=e.position;if(\\\"fixed\\\"===o)return t;for(var i=t;i=i.parentNode;){var n=void 0;try{n=getComputedStyle(i)}catch(r){}if(\\\"undefined\\\"==typeof n||null===n)return i;var s=n,a=s.overflow,f=s.overflowX,h=s.overflowY;if(/(auto|scroll)/.test(a+h+f)&&(\\\"absolute\\\"!==o||[\\\"relative\\\",\\\"absolute\\\",\\\"fixed\\\"].indexOf(n.position)>=0))return i}return document.body}function r(t){var e=void 0;t===document?(e=document,t=document.documentElement):e=t.ownerDocument;var o=e.documentElement,i={},n=t.getBoundingClientRect();for(var r in n)i[r]=n[r];var s=x(e);return i.top-=s.top,i.left-=s.left,\\\"undefined\\\"==typeof i.width&&(i.width=document.body.scrollWidth-i.left-i.right),\\\"undefined\\\"==typeof i.height&&(i.height=document.body.scrollHeight-i.top-i.bottom),i.top=i.top-o.clientTop,i.left=i.left-o.clientLeft,i.right=e.body.clientWidth-i.width-i.left,i.bottom=e.body.clientHeight-i.height-i.top,i}function s(t){return t.offsetParent||document.documentElement}function a(){var t=document.createElement(\\\"div\\\");t.style.width=\\\"100%\\\",t.style.height=\\\"200px\\\";var e=document.createElement(\\\"div\\\");f(e.style,{position:\\\"absolute\\\",top:0,left:0,pointerEvents:\\\"none\\\",visibility:\\\"hidden\\\",width:\\\"200px\\\",height:\\\"150px\\\",overflow:\\\"hidden\\\"}),e.appendChild(t),document.body.appendChild(e);var o=t.offsetWidth;e.style.overflow=\\\"scroll\\\";var i=t.offsetWidth;o===i&&(i=e.clientWidth),document.body.removeChild(e);var n=o-i;return{width:n,height:n}}function f(){var t=arguments.length<=0||void 0===arguments[0]?{}:arguments[0],e=[];return Array.prototype.push.apply(e,arguments),e.slice(1).forEach(function(e){if(e)for(var o in e)({}).hasOwnProperty.call(e,o)&&(t[o]=e[o])}),t}function h(t,e){if(\\\"undefined\\\"!=typeof t.classList)e.split(\\\" \\\").forEach(function(e){e.trim()&&t.classList.remove(e)});else{var o=new RegExp(\\\"(^| )\\\"+e.split(\\\" \\\").join(\\\"|\\\")+\\\"( |$)\\\",\\\"gi\\\"),i=u(t).replace(o,\\\" \\\");p(t,i)}}function l(t,e){if(\\\"undefined\\\"!=typeof t.classList)e.split(\\\" \\\").forEach(function(e){e.trim()&&t.classList.add(e)});else{h(t,e);var o=u(t)+(\\\" \\\"+e);p(t,o)}}function d(t,e){if(\\\"undefined\\\"!=typeof t.classList)return t.classList.contains(e);var o=u(t);return new RegExp(\\\"(^| )\\\"+e+\\\"( |$)\\\",\\\"gi\\\").test(o)}function u(t){return t.className instanceof SVGAnimatedString?t.className.baseVal:t.className}function p(t,e){t.setAttribute(\\\"class\\\",e)}function c(t,e,o){o.forEach(function(o){-1===e.indexOf(o)&&d(t,o)&&h(t,o)}),e.forEach(function(e){d(t,e)||l(t,e)})}function i(t,e){if(!(t instanceof e))throw new TypeError(\\\"Cannot call a class as a function\\\")}function g(t,e){var o=arguments.length<=2||void 0===arguments[2]?1:arguments[2];return t+o>=e&&e>=t-o}function m(){return\\\"undefined\\\"!=typeof performance&&\\\"undefined\\\"!=typeof performance.now?performance.now():+new Date}function v(){for(var t={top:0,left:0},e=arguments.length,o=Array(e),i=0;e>i;i++)o[i]=arguments[i];return o.forEach(function(e){var o=e.top,i=e.left;\\\"string\\\"==typeof o&&(o=parseFloat(o,10)),\\\"string\\\"==typeof i&&(i=parseFloat(i,10)),t.top+=o,t.left+=i}),t}function y(t,e){return\\\"string\\\"==typeof t.left&&-1!==t.left.indexOf(\\\"%\\\")&&(t.left=parseFloat(t.left,10)/100*e.width),\\\"string\\\"==typeof t.top&&-1!==t.top.indexOf(\\\"%\\\")&&(t.top=parseFloat(t.top,10)/100*e.height),t}function b(t,e){return\\\"scrollParent\\\"===e?e=t.scrollParent:\\\"window\\\"===e&&(e=[pageXOffset,pageYOffset,innerWidth+pageXOffset,innerHeight+pageYOffset]),e===document&&(e=e.documentElement),\\\"undefined\\\"!=typeof e.nodeType&&!function(){var t=r(e),o=t,i=getComputedStyle(e);e=[o.left,o.top,t.width+o.left,t.height+o.top],U.forEach(function(t,o){t=t[0].toUpperCase()+t.substr(1),\\\"Top\\\"===t||\\\"Left\\\"===t?e[o]+=parseFloat(i[\\\"border\\\"+t+\\\"Width\\\"]):e[o]-=parseFloat(i[\\\"border\\\"+t+\\\"Width\\\"])})}(),e}var w=function(){function t(t,e){for(var o=0;o<e.length;o++){var i=e[o];i.enumerable=i.enumerable||!1,i.configurable=!0,\\\"value\\\"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,o,i){return o&&t(e.prototype,o),i&&t(e,i),e}}(),C=void 0;\\\"undefined\\\"==typeof C&&(C={modules:[]});var O=function(){var t=0;return function(){return++t}}(),E={},x=function(t){var e=t._tetherZeroElement;\\\"undefined\\\"==typeof e&&(e=t.createElement(\\\"div\\\"),e.setAttribute(\\\"data-tether-id\\\",O()),f(e.style,{top:0,left:0,position:\\\"absolute\\\"}),t.body.appendChild(e),t._tetherZeroElement=e);var o=e.getAttribute(\\\"data-tether-id\\\");if(\\\"undefined\\\"==typeof E[o]){E[o]={};var i=e.getBoundingClientRect();for(var n in i)E[o][n]=i[n];T(function(){delete E[o]})}return E[o]},A=[],T=function(t){A.push(t)},S=function(){for(var t=void 0;t=A.pop();)t()},W=function(){function t(){i(this,t)}return w(t,[{key:\\\"on\\\",value:function(t,e,o){var i=arguments.length<=3||void 0===arguments[3]?!1:arguments[3];\\\"undefined\\\"==typeof this.bindings&&(this.bindings={}),\\\"undefined\\\"==typeof this.bindings[t]&&(this.bindings[t]=[]),this.bindings[t].push({handler:e,ctx:o,once:i})}},{key:\\\"once\\\",value:function(t,e,o){this.on(t,e,o,!0)}},{key:\\\"off\\\",value:function(t,e){if(\\\"undefined\\\"==typeof this.bindings||\\\"undefined\\\"==typeof this.bindings[t])if(\\\"undefined\\\"==typeof e)delete this.bindings[t];else for(var o=0;o<this.bindings[t].length;)this.bindings[t][o].handler===e?this.bindings[t].splice(o,1):++o}},{key:\\\"trigger\\\",value:function(t){if(\\\"undefined\\\"!=typeof this.bindings&&this.bindings[t]){for(var e=0,o=arguments.length,i=Array(o>1?o-1:0),n=1;o>n;n++)i[n-1]=arguments[n];for(;e<this.bindings[t].length;){var r=this.bindings[t][e],s=r.handler,a=r.ctx,f=r.once,h=a;\\\"undefined\\\"==typeof h&&(h=this),s.apply(h,i),f?this.bindings[t].splice(e,1):++e}}}}]),t}();C.Utils={getScrollParent:n,getBounds:r,getOffsetParent:s,extend:f,addClass:l,removeClass:h,hasClass:d,updateClasses:c,defer:T,flush:S,uniqueId:O,Evented:W,getScrollBarSize:a};var M=function(){function t(t,e){var o=[],i=!0,n=!1,r=void 0;try{for(var s,a=t[Symbol.iterator]();!(i=(s=a.next()).done)&&(o.push(s.value),!e||o.length!==e);i=!0);}catch(f){n=!0,r=f}finally{try{!i&&a[\\\"return\\\"]&&a[\\\"return\\\"]()}finally{if(n)throw r}}return o}return function(e,o){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return t(e,o);throw new TypeError(\\\"Invalid attempt to destructure non-iterable instance\\\")}}(),w=function(){function t(t,e){for(var o=0;o<e.length;o++){var i=e[o];i.enumerable=i.enumerable||!1,i.configurable=!0,\\\"value\\\"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,o,i){return o&&t(e.prototype,o),i&&t(e,i),e}}();if(\\\"undefined\\\"==typeof C)throw new Error(\\\"You must include the utils.js file before tether.js\\\");var P=C.Utils,n=P.getScrollParent,r=P.getBounds,s=P.getOffsetParent,f=P.extend,l=P.addClass,h=P.removeClass,c=P.updateClasses,T=P.defer,S=P.flush,a=P.getScrollBarSize,k=function(){if(\\\"undefined\\\"==typeof document)return\\\"\\\";for(var t=document.createElement(\\\"div\\\"),e=[\\\"transform\\\",\\\"webkitTransform\\\",\\\"OTransform\\\",\\\"MozTransform\\\",\\\"msTransform\\\"],o=0;o<e.length;++o){var i=e[o];if(void 0!==t.style[i])return i}}(),B=[],_=function(){B.forEach(function(t){t.position(!1)}),S()};!function(){var t=null,e=null,o=null,i=function n(){return\\\"undefined\\\"!=typeof e&&e>16?(e=Math.min(e-16,250),void(o=setTimeout(n,250))):void(\\\"undefined\\\"!=typeof t&&m()-t<10||(\\\"undefined\\\"!=typeof o&&(clearTimeout(o),o=null),t=m(),_(),e=m()-t))};\\\"undefined\\\"!=typeof window&&[\\\"resize\\\",\\\"scroll\\\",\\\"touchmove\\\"].forEach(function(t){window.addEventListener(t,i)})}();var z={center:\\\"center\\\",left:\\\"right\\\",right:\\\"left\\\"},F={middle:\\\"middle\\\",top:\\\"bottom\\\",bottom:\\\"top\\\"},L={top:0,left:0,middle:\\\"50%\\\",center:\\\"50%\\\",bottom:\\\"100%\\\",right:\\\"100%\\\"},Y=function(t,e){var o=t.left,i=t.top;return\\\"auto\\\"===o&&(o=z[e.left]),\\\"auto\\\"===i&&(i=F[e.top]),{left:o,top:i}},H=function(t){var e=t.left,o=t.top;return\\\"undefined\\\"!=typeof L[t.left]&&(e=L[t.left]),\\\"undefined\\\"!=typeof L[t.top]&&(o=L[t.top]),{left:e,top:o}},X=function(t){var e=t.split(\\\" \\\"),o=M(e,2),i=o[0],n=o[1];return{top:i,left:n}},j=X,N=function(){function t(e){var o=this;i(this,t),this.position=this.position.bind(this),B.push(this),this.history=[],this.setOptions(e,!1),C.modules.forEach(function(t){\\\"undefined\\\"!=typeof t.initialize&&t.initialize.call(o)}),this.position()}return w(t,[{key:\\\"getClass\\\",value:function(){var t=arguments.length<=0||void 0===arguments[0]?\\\"\\\":arguments[0],e=this.options.classes;return\\\"undefined\\\"!=typeof e&&e[t]?this.options.classes[t]:this.options.classPrefix?this.options.classPrefix+\\\"-\\\"+t:t}},{key:\\\"setOptions\\\",value:function(t){var e=this,o=arguments.length<=1||void 0===arguments[1]?!0:arguments[1],i={offset:\\\"0 0\\\",targetOffset:\\\"0 0\\\",targetAttachment:\\\"auto auto\\\",classPrefix:\\\"tether\\\"};this.options=f(i,t);var r=this.options,s=r.element,a=r.target,h=r.targetModifier;if(this.element=s,this.target=a,this.targetModifier=h,\\\"viewport\\\"===this.target?(this.target=document.body,this.targetModifier=\\\"visible\\\"):\\\"scroll-handle\\\"===this.target&&(this.target=document.body,this.targetModifier=\\\"scroll-handle\\\"),[\\\"element\\\",\\\"target\\\"].forEach(function(t){if(\\\"undefined\\\"==typeof e[t])throw new Error(\\\"Tether Error: Both element and target must be defined\\\");\\\"undefined\\\"!=typeof e[t].jquery?e[t]=e[t][0]:\\\"string\\\"==typeof e[t]&&(e[t]=document.querySelector(e[t]))}),l(this.element,this.getClass(\\\"element\\\")),this.options.addTargetClasses!==!1&&l(this.target,this.getClass(\\\"target\\\")),!this.options.attachment)throw new Error(\\\"Tether Error: You must provide an attachment\\\");this.targetAttachment=j(this.options.targetAttachment),this.attachment=j(this.options.attachment),this.offset=X(this.options.offset),this.targetOffset=X(this.options.targetOffset),\\\"undefined\\\"!=typeof this.scrollParent&&this.disable(),\\\"scroll-handle\\\"===this.targetModifier?this.scrollParent=this.target:this.scrollParent=n(this.target),this.options.enabled!==!1&&this.enable(o)}},{key:\\\"getTargetBounds\\\",value:function(){if(\\\"undefined\\\"==typeof this.targetModifier)return r(this.target);if(\\\"visible\\\"===this.targetModifier){if(this.target===document.body)return{top:pageYOffset,left:pageXOffset,height:innerHeight,width:innerWidth};var t=r(this.target),e={height:t.height,width:t.width,top:t.top,left:t.left};return e.height=Math.min(e.height,t.height-(pageYOffset-t.top)),e.height=Math.min(e.height,t.height-(t.top+t.height-(pageYOffset+innerHeight))),e.height=Math.min(innerHeight,e.height),e.height-=2,e.width=Math.min(e.width,t.width-(pageXOffset-t.left)),e.width=Math.min(e.width,t.width-(t.left+t.width-(pageXOffset+innerWidth))),e.width=Math.min(innerWidth,e.width),e.width-=2,e.top<pageYOffset&&(e.top=pageYOffset),e.left<pageXOffset&&(e.left=pageXOffset),e}if(\\\"scroll-handle\\\"===this.targetModifier){var t=void 0,o=this.target;o===document.body?(o=document.documentElement,t={left:pageXOffset,top:pageYOffset,height:innerHeight,width:innerWidth}):t=r(o);var i=getComputedStyle(o),n=o.scrollWidth>o.clientWidth||[i.overflow,i.overflowX].indexOf(\\\"scroll\\\")>=0||this.target!==document.body,s=0;n&&(s=15);var a=t.height-parseFloat(i.borderTopWidth)-parseFloat(i.borderBottomWidth)-s,e={width:15,height:.975*a*(a/o.scrollHeight),left:t.left+t.width-parseFloat(i.borderLeftWidth)-15},f=0;408>a&&this.target===document.body&&(f=-11e-5*Math.pow(a,2)-.00727*a+22.58),this.target!==document.body&&(e.height=Math.max(e.height,24));var h=this.target.scrollTop/(o.scrollHeight-a);return e.top=h*(a-e.height-f)+t.top+parseFloat(i.borderTopWidth),this.target===document.body&&(e.height=Math.max(e.height,24)),e}}},{key:\\\"clearCache\\\",value:function(){this._cache={}}},{key:\\\"cache\\\",value:function(t,e){return\\\"undefined\\\"==typeof this._cache&&(this._cache={}),\\\"undefined\\\"==typeof this._cache[t]&&(this._cache[t]=e.call(this)),this._cache[t]}},{key:\\\"enable\\\",value:function(){var t=arguments.length<=0||void 0===arguments[0]?!0:arguments[0];this.options.addTargetClasses!==!1&&l(this.target,this.getClass(\\\"enabled\\\")),l(this.element,this.getClass(\\\"enabled\\\")),this.enabled=!0,this.scrollParent!==document&&this.scrollParent.addEventListener(\\\"scroll\\\",this.position),t&&this.position()}},{key:\\\"disable\\\",value:function(){h(this.target,this.getClass(\\\"enabled\\\")),h(this.element,this.getClass(\\\"enabled\\\")),this.enabled=!1,\\\"undefined\\\"!=typeof this.scrollParent&&this.scrollParent.removeEventListener(\\\"scroll\\\",this.position)}},{key:\\\"destroy\\\",value:function(){var t=this;this.disable(),B.forEach(function(e,o){return e===t?void B.splice(o,1):void 0})}},{key:\\\"updateAttachClasses\\\",value:function(t,e){var o=this;t=t||this.attachment,e=e||this.targetAttachment;var i=[\\\"left\\\",\\\"top\\\",\\\"bottom\\\",\\\"right\\\",\\\"middle\\\",\\\"center\\\"];\\\"undefined\\\"!=typeof this._addAttachClasses&&this._addAttachClasses.length&&this._addAttachClasses.splice(0,this._addAttachClasses.length),\\\"undefined\\\"==typeof this._addAttachClasses&&(this._addAttachClasses=[]);var n=this._addAttachClasses;t.top&&n.push(this.getClass(\\\"element-attached\\\")+\\\"-\\\"+t.top),t.left&&n.push(this.getClass(\\\"element-attached\\\")+\\\"-\\\"+t.left),e.top&&n.push(this.getClass(\\\"target-attached\\\")+\\\"-\\\"+e.top),e.left&&n.push(this.getClass(\\\"target-attached\\\")+\\\"-\\\"+e.left);var r=[];i.forEach(function(t){r.push(o.getClass(\\\"element-attached\\\")+\\\"-\\\"+t),r.push(o.getClass(\\\"target-attached\\\")+\\\"-\\\"+t)}),T(function(){\\\"undefined\\\"!=typeof o._addAttachClasses&&(c(o.element,o._addAttachClasses,r),o.options.addTargetClasses!==!1&&c(o.target,o._addAttachClasses,r),delete o._addAttachClasses)})}},{key:\\\"position\\\",value:function(){var t=this,e=arguments.length<=0||void 0===arguments[0]?!0:arguments[0];if(this.enabled){this.clearCache();var o=Y(this.targetAttachment,this.attachment);this.updateAttachClasses(this.attachment,o);var i=this.cache(\\\"element-bounds\\\",function(){return r(t.element)}),n=i.width,f=i.height;if(0===n&&0===f&&\\\"undefined\\\"!=typeof this.lastSize){var h=this.lastSize;n=h.width,f=h.height}else this.lastSize={width:n,height:f};var l=this.cache(\\\"target-bounds\\\",function(){return t.getTargetBounds()}),d=l,u=y(H(this.attachment),{width:n,height:f}),p=y(H(o),d),c=y(this.offset,{width:n,height:f}),g=y(this.targetOffset,d);u=v(u,c),p=v(p,g);for(var m=l.left+p.left-u.left,b=l.top+p.top-u.top,w=0;w<C.modules.length;++w){var O=C.modules[w],E=O.position.call(this,{left:m,top:b,targetAttachment:o,targetPos:l,elementPos:i,offset:u,targetOffset:p,manualOffset:c,manualTargetOffset:g,scrollbarSize:A,attachment:this.attachment});if(E===!1)return!1;\\\"undefined\\\"!=typeof E&&\\\"object\\\"==typeof E&&(b=E.top,m=E.left)}var x={page:{top:b,left:m},viewport:{top:b-pageYOffset,bottom:pageYOffset-b-f+innerHeight,left:m-pageXOffset,right:pageXOffset-m-n+innerWidth}},A=void 0;return document.body.scrollWidth>window.innerWidth&&(A=this.cache(\\\"scrollbar-size\\\",a),x.viewport.bottom-=A.height),document.body.scrollHeight>window.innerHeight&&(A=this.cache(\\\"scrollbar-size\\\",a),x.viewport.right-=A.width),(-1===[\\\"\\\",\\\"static\\\"].indexOf(document.body.style.position)||-1===[\\\"\\\",\\\"static\\\"].indexOf(document.body.parentElement.style.position))&&(x.page.bottom=document.body.scrollHeight-b-f,x.page.right=document.body.scrollWidth-m-n),\\\"undefined\\\"!=typeof this.options.optimizations&&this.options.optimizations.moveElement!==!1&&\\\"undefined\\\"==typeof this.targetModifier&&!function(){var e=t.cache(\\\"target-offsetparent\\\",function(){return s(t.target)}),o=t.cache(\\\"target-offsetparent-bounds\\\",function(){return r(e)}),i=getComputedStyle(e),n=o,a={};if([\\\"Top\\\",\\\"Left\\\",\\\"Bottom\\\",\\\"Right\\\"].forEach(function(t){a[t.toLowerCase()]=parseFloat(i[\\\"border\\\"+t+\\\"Width\\\"])}),o.right=document.body.scrollWidth-o.left-n.width+a.right,o.bottom=document.body.scrollHeight-o.top-n.height+a.bottom,x.page.top>=o.top+a.top&&x.page.bottom>=o.bottom&&x.page.left>=o.left+a.left&&x.page.right>=o.right){var f=e.scrollTop,h=e.scrollLeft;x.offset={top:x.page.top-o.top+f-a.top,left:x.page.left-o.left+h-a.left}}}(),this.move(x),this.history.unshift(x),this.history.length>3&&this.history.pop(),e&&S(),!0}}},{key:\\\"move\\\",value:function(t){var e=this;if(\\\"undefined\\\"!=typeof this.element.parentNode){var o={};for(var i in t){o[i]={};for(var n in t[i]){for(var r=!1,a=0;a<this.history.length;++a){var h=this.history[a];if(\\\"undefined\\\"!=typeof h[i]&&!g(h[i][n],t[i][n])){r=!0;break}}r||(o[i][n]=!0)}}var l={top:\\\"\\\",left:\\\"\\\",right:\\\"\\\",bottom:\\\"\\\"},d=function(t,o){var i=\\\"undefined\\\"!=typeof e.options.optimizations,n=i?e.options.optimizations.gpu:null;if(n!==!1){var r=void 0,s=void 0;t.top?(l.top=0,r=o.top):(l.bottom=0,r=-o.bottom),t.left?(l.left=0,s=o.left):(l.right=0,s=-o.right),l[k]=\\\"translateX(\\\"+Math.round(s)+\\\"px) translateY(\\\"+Math.round(r)+\\\"px)\\\",\\\"msTransform\\\"!==k&&(l[k]+=\\\" translateZ(0)\\\")}else t.top?l.top=o.top+\\\"px\\\":l.bottom=o.bottom+\\\"px\\\",t.left?l.left=o.left+\\\"px\\\":l.right=o.right+\\\"px\\\"},u=!1;if((o.page.top||o.page.bottom)&&(o.page.left||o.page.right)?(l.position=\\\"absolute\\\",d(o.page,t.page)):(o.viewport.top||o.viewport.bottom)&&(o.viewport.left||o.viewport.right)?(l.position=\\\"fixed\\\",d(o.viewport,t.viewport)):\\\"undefined\\\"!=typeof o.offset&&o.offset.top&&o.offset.left?!function(){l.position=\\\"absolute\\\";var i=e.cache(\\\"target-offsetparent\\\",function(){return s(e.target)});s(e.element)!==i&&T(function(){e.element.parentNode.removeChild(e.element),i.appendChild(e.element)}),d(o.offset,t.offset),u=!0}():(l.position=\\\"absolute\\\",d({top:!0,left:!0},t.page)),!u){for(var p=!0,c=this.element.parentNode;c&&\\\"BODY\\\"!==c.tagName;){if(\\\"static\\\"!==getComputedStyle(c).position){p=!1;break}c=c.parentNode}p||(this.element.parentNode.removeChild(this.element),document.body.appendChild(this.element))}var m={},v=!1;for(var n in l){var y=l[n],b=this.element.style[n];\\\"\\\"!==b&&\\\"\\\"!==y&&[\\\"top\\\",\\\"left\\\",\\\"bottom\\\",\\\"right\\\"].indexOf(n)>=0&&(b=parseFloat(b),y=parseFloat(y)),b!==y&&(v=!0,m[n]=y)}v&&T(function(){f(e.element.style,m)})}}}]),t}();N.modules=[],C.position=_;var R=f(N,C),M=function(){function t(t,e){var o=[],i=!0,n=!1,r=void 0;try{for(var s,a=t[Symbol.iterator]();!(i=(s=a.next()).done)&&(o.push(s.value),!e||o.length!==e);i=!0);}catch(f){n=!0,r=f}finally{try{!i&&a[\\\"return\\\"]&&a[\\\"return\\\"]()}finally{if(n)throw r}}return o}return function(e,o){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return t(e,o);throw new TypeError(\\\"Invalid attempt to destructure non-iterable instance\\\")}}(),P=C.Utils,r=P.getBounds,f=P.extend,c=P.updateClasses,T=P.defer,U=[\\\"left\\\",\\\"top\\\",\\\"right\\\",\\\"bottom\\\"];C.modules.push({position:function(t){var e=this,o=t.top,i=t.left,n=t.targetAttachment;if(!this.options.constraints)return!0;var s=this.cache(\\\"element-bounds\\\",function(){return r(e.element)}),a=s.height,h=s.width;if(0===h&&0===a&&\\\"undefined\\\"!=typeof this.lastSize){var l=this.lastSize;h=l.width,a=l.height}var d=this.cache(\\\"target-bounds\\\",function(){return e.getTargetBounds()}),u=d.height,p=d.width,g=[this.getClass(\\\"pinned\\\"),this.getClass(\\\"out-of-bounds\\\")];this.options.constraints.forEach(function(t){var e=t.outOfBoundsClass,o=t.pinnedClass;e&&g.push(e),o&&g.push(o)}),g.forEach(function(t){[\\\"left\\\",\\\"top\\\",\\\"right\\\",\\\"bottom\\\"].forEach(function(e){g.push(t+\\\"-\\\"+e)})});var m=[],v=f({},n),y=f({},this.attachment);return this.options.constraints.forEach(function(t){var r=t.to,s=t.attachment,f=t.pin;\\\"undefined\\\"==typeof s&&(s=\\\"\\\");var l=void 0,d=void 0;if(s.indexOf(\\\" \\\")>=0){var c=s.split(\\\" \\\"),g=M(c,2);d=g[0],l=g[1]}else l=d=s;var w=b(e,r);(\\\"target\\\"===d||\\\"both\\\"===d)&&(o<w[1]&&\\\"top\\\"===v.top&&(o+=u,v.top=\\\"bottom\\\"),o+a>w[3]&&\\\"bottom\\\"===v.top&&(o-=u,v.top=\\\"top\\\")),\\\"together\\\"===d&&(o<w[1]&&\\\"top\\\"===v.top&&(\\\"bottom\\\"===y.top?(o+=u,v.top=\\\"bottom\\\",o+=a,y.top=\\\"top\\\"):\\\"top\\\"===y.top&&(o+=u,v.top=\\\"bottom\\\",o-=a,y.top=\\\"bottom\\\")),o+a>w[3]&&\\\"bottom\\\"===v.top&&(\\\"top\\\"===y.top?(o-=u,v.top=\\\"top\\\",o-=a,y.top=\\\"bottom\\\"):\\\"bottom\\\"===y.top&&(o-=u,v.top=\\\"top\\\",o+=a,y.top=\\\"top\\\")),\\\"middle\\\"===v.top&&(o+a>w[3]&&\\\"top\\\"===y.top?(o-=a,y.top=\\\"bottom\\\"):o<w[1]&&\\\"bottom\\\"===y.top&&(o+=a,y.top=\\\"top\\\"))),(\\\"target\\\"===l||\\\"both\\\"===l)&&(i<w[0]&&\\\"left\\\"===v.left&&(i+=p,v.left=\\\"right\\\"),i+h>w[2]&&\\\"right\\\"===v.left&&(i-=p,v.left=\\\"left\\\")),\\\"together\\\"===l&&(i<w[0]&&\\\"left\\\"===v.left?\\\"right\\\"===y.left?(i+=p,v.left=\\\"right\\\",i+=h,y.left=\\\"left\\\"):\\\"left\\\"===y.left&&(i+=p,v.left=\\\"right\\\",i-=h,y.left=\\\"right\\\"):i+h>w[2]&&\\\"right\\\"===v.left?\\\"left\\\"===y.left?(i-=p,v.left=\\\"left\\\",i-=h,y.left=\\\"right\\\"):\\\"right\\\"===y.left&&(i-=p,v.left=\\\"left\\\",i+=h,y.left=\\\"left\\\"):\\\"center\\\"===v.left&&(i+h>w[2]&&\\\"left\\\"===y.left?(i-=h,y.left=\\\"right\\\"):i<w[0]&&\\\"right\\\"===y.left&&(i+=h,y.left=\\\"left\\\"))),(\\\"element\\\"===d||\\\"both\\\"===d)&&(o<w[1]&&\\\"bottom\\\"===y.top&&(o+=a,y.top=\\\"top\\\"),o+a>w[3]&&\\\"top\\\"===y.top&&(o-=a,y.top=\\\"bottom\\\")),(\\\"element\\\"===l||\\\"both\\\"===l)&&(i<w[0]&&(\\\"right\\\"===y.left?(i+=h,y.left=\\\"left\\\"):\\\"center\\\"===y.left&&(i+=h/2,y.left=\\\"left\\\")),i+h>w[2]&&(\\\"left\\\"===y.left?(i-=h,y.left=\\\"right\\\"):\\\"center\\\"===y.left&&(i-=h/2,y.left=\\\"right\\\"))),\\\"string\\\"==typeof f?f=f.split(\\\",\\\").map(function(t){return t.trim()}):f===!0&&(f=[\\\"top\\\",\\\"left\\\",\\\"right\\\",\\\"bottom\\\"]),f=f||[];var C=[],O=[];o<w[1]&&(f.indexOf(\\\"top\\\")>=0?(o=w[1],C.push(\\\"top\\\")):O.push(\\\"top\\\")),o+a>w[3]&&(f.indexOf(\\\"bottom\\\")>=0?(o=w[3]-a,C.push(\\\"bottom\\\")):O.push(\\\"bottom\\\")),i<w[0]&&(f.indexOf(\\\"left\\\")>=0?(i=w[0],C.push(\\\"left\\\")):O.push(\\\"left\\\")),i+h>w[2]&&(f.indexOf(\\\"right\\\")>=0?(i=w[2]-h,C.push(\\\"right\\\")):O.push(\\\"right\\\")),C.length&&!function(){var t=void 0;t=\\\"undefined\\\"!=typeof e.options.pinnedClass?e.options.pinnedClass:e.getClass(\\\"pinned\\\"),m.push(t),C.forEach(function(e){m.push(t+\\\"-\\\"+e)})}(),O.length&&!function(){var t=void 0;t=\\\"undefined\\\"!=typeof e.options.outOfBoundsClass?e.options.outOfBoundsClass:e.getClass(\\\"out-of-bounds\\\"),m.push(t),O.forEach(function(e){m.push(t+\\\"-\\\"+e)})}(),(C.indexOf(\\\"left\\\")>=0||C.indexOf(\\\"right\\\")>=0)&&(y.left=v.left=!1),(C.indexOf(\\\"top\\\")>=0||C.indexOf(\\\"bottom\\\")>=0)&&(y.top=v.top=!1),(v.top!==n.top||v.left!==n.left||y.top!==e.attachment.top||y.left!==e.attachment.left)&&e.updateAttachClasses(y,v)}),T(function(){e.options.addTargetClasses!==!1&&c(e.target,m,g),c(e.element,m,g)}),{top:o,left:i}}});var P=C.Utils,r=P.getBounds,c=P.updateClasses,T=P.defer;C.modules.push({position:function(t){var e=this,o=t.top,i=t.left,n=this.cache(\\\"element-bounds\\\",function(){return r(e.element)}),s=n.height,a=n.width,f=this.getTargetBounds(),h=o+s,l=i+a,d=[];o<=f.bottom&&h>=f.top&&[\\\"left\\\",\\\"right\\\"].forEach(function(t){var e=f[t];(e===i||e===l)&&d.push(t)}),i<=f.right&&l>=f.left&&[\\\"top\\\",\\\"bottom\\\"].forEach(function(t){var e=f[t];(e===o||e===h)&&d.push(t)});var u=[],p=[],g=[\\\"left\\\",\\\"top\\\",\\\"right\\\",\\\"bottom\\\"];return u.push(this.getClass(\\\"abutted\\\")),g.forEach(function(t){u.push(e.getClass(\\\"abutted\\\")+\\\"-\\\"+t)}),d.length&&p.push(this.getClass(\\\"abutted\\\")),d.forEach(function(t){p.push(e.getClass(\\\"abutted\\\")+\\\"-\\\"+t)}),T(function(){e.options.addTargetClasses!==!1&&c(e.target,p,u),c(e.element,p,u)}),!0}});var M=function(){function t(t,e){var o=[],i=!0,n=!1,r=void 0;try{for(var s,a=t[Symbol.iterator]();!(i=(s=a.next()).done)&&(o.push(s.value),!e||o.length!==e);i=!0);}catch(f){n=!0,r=f}finally{try{!i&&a[\\\"return\\\"]&&a[\\\"return\\\"]()}finally{if(n)throw r}}return o}return function(e,o){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return t(e,o);throw new TypeError(\\\"Invalid attempt to destructure non-iterable instance\\\")}}();return C.modules.push({position:function(t){var e=t.top,o=t.left;if(this.options.shift){var i=this.options.shift;\\\"function\\\"==typeof this.options.shift&&(i=this.options.shift.call(this,{top:e,left:o}));var n=void 0,r=void 0;if(\\\"string\\\"==typeof i){i=i.split(\\\" \\\"),i[1]=i[1]||i[0];var s=i,a=M(s,2);n=a[0],r=a[1],n=parseFloat(n,10),r=parseFloat(r,10)}else n=i.top,r=i.left;return e+=n,o+=r,{top:e,left:o}}}}),R});\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/raw-loader!./~/mdbootstrap/js/tether.min.js\n// module id = 663\n// module chunks = 3","module.exports = \"/*! onsenui v2.2.4 - 2017-04-10 */\\nif (!window.CustomEvent) {\\n  (function() {\\n    var CustomEvent;\\n\\n    CustomEvent = function(event, params) {\\n      var evt;\\n      params = params || {\\n        bubbles: false,\\n        cancelable: false,\\n        detail: undefined\\n      };\\n      evt = document.createEvent(\\\"CustomEvent\\\");\\n      evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\\n      return evt;\\n    };\\n\\n    CustomEvent.prototype = window.Event.prototype;\\n\\n    window.CustomEvent = CustomEvent;\\n  })();\\n}\\n\\n/**\\n * @license\\n * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.\\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\\n * Code distributed by Google as part of the polymer project is also\\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\\n */\\n// @version 0.7.22\\nif (typeof WeakMap === \\\"undefined\\\") {\\n  (function() {\\n    var defineProperty = Object.defineProperty;\\n    var counter = Date.now() % 1e9;\\n    var WeakMap = function() {\\n      this.name = \\\"__st\\\" + (Math.random() * 1e9 >>> 0) + (counter++ + \\\"__\\\");\\n    };\\n    WeakMap.prototype = {\\n      set: function(key, value) {\\n        var entry = key[this.name];\\n        if (entry && entry[0] === key) entry[1] = value; else defineProperty(key, this.name, {\\n          value: [ key, value ],\\n          writable: true\\n        });\\n        return this;\\n      },\\n      get: function(key) {\\n        var entry;\\n        return (entry = key[this.name]) && entry[0] === key ? entry[1] : undefined;\\n      },\\n      \\\"delete\\\": function(key) {\\n        var entry = key[this.name];\\n        if (!entry || entry[0] !== key) return false;\\n        entry[0] = entry[1] = undefined;\\n        return true;\\n      },\\n      has: function(key) {\\n        var entry = key[this.name];\\n        if (!entry) return false;\\n        return entry[0] === key;\\n      }\\n    };\\n    window.WeakMap = WeakMap;\\n  })();\\n}\\n\\n(function(global) {\\n  if (global.JsMutationObserver) {\\n    return;\\n  }\\n  var registrationsTable = new WeakMap();\\n  var setImmediate;\\n  if (/Trident|Edge/.test(navigator.userAgent)) {\\n    setImmediate = setTimeout;\\n  } else if (window.setImmediate) {\\n    setImmediate = window.setImmediate;\\n  } else {\\n    var setImmediateQueue = [];\\n    var sentinel = String(Math.random());\\n    window.addEventListener(\\\"message\\\", function(e) {\\n      if (e.data === sentinel) {\\n        var queue = setImmediateQueue;\\n        setImmediateQueue = [];\\n        queue.forEach(function(func) {\\n          func();\\n        });\\n      }\\n    });\\n    setImmediate = function(func) {\\n      setImmediateQueue.push(func);\\n      window.postMessage(sentinel, \\\"*\\\");\\n    };\\n  }\\n  var isScheduled = false;\\n  var scheduledObservers = [];\\n  function scheduleCallback(observer) {\\n    scheduledObservers.push(observer);\\n    if (!isScheduled) {\\n      isScheduled = true;\\n      setImmediate(dispatchCallbacks);\\n    }\\n  }\\n  function wrapIfNeeded(node) {\\n    return window.ShadowDOMPolyfill && window.ShadowDOMPolyfill.wrapIfNeeded(node) || node;\\n  }\\n  function dispatchCallbacks() {\\n    isScheduled = false;\\n    var observers = scheduledObservers;\\n    scheduledObservers = [];\\n    observers.sort(function(o1, o2) {\\n      return o1.uid_ - o2.uid_;\\n    });\\n    var anyNonEmpty = false;\\n    observers.forEach(function(observer) {\\n      var queue = observer.takeRecords();\\n      removeTransientObserversFor(observer);\\n      if (queue.length) {\\n        observer.callback_(queue, observer);\\n        anyNonEmpty = true;\\n      }\\n    });\\n    if (anyNonEmpty) dispatchCallbacks();\\n  }\\n  function removeTransientObserversFor(observer) {\\n    observer.nodes_.forEach(function(node) {\\n      var registrations = registrationsTable.get(node);\\n      if (!registrations) return;\\n      registrations.forEach(function(registration) {\\n        if (registration.observer === observer) registration.removeTransientObservers();\\n      });\\n    });\\n  }\\n  function forEachAncestorAndObserverEnqueueRecord(target, callback) {\\n    for (var node = target; node; node = node.parentNode) {\\n      var registrations = registrationsTable.get(node);\\n      if (registrations) {\\n        for (var j = 0; j < registrations.length; j++) {\\n          var registration = registrations[j];\\n          var options = registration.options;\\n          if (node !== target && !options.subtree) continue;\\n          var record = callback(options);\\n          if (record) registration.enqueue(record);\\n        }\\n      }\\n    }\\n  }\\n  var uidCounter = 0;\\n  function JsMutationObserver(callback) {\\n    this.callback_ = callback;\\n    this.nodes_ = [];\\n    this.records_ = [];\\n    this.uid_ = ++uidCounter;\\n  }\\n  JsMutationObserver.prototype = {\\n    observe: function(target, options) {\\n      target = wrapIfNeeded(target);\\n      if (!options.childList && !options.attributes && !options.characterData || options.attributeOldValue && !options.attributes || options.attributeFilter && options.attributeFilter.length && !options.attributes || options.characterDataOldValue && !options.characterData) {\\n        throw new SyntaxError();\\n      }\\n      var registrations = registrationsTable.get(target);\\n      if (!registrations) registrationsTable.set(target, registrations = []);\\n      var registration;\\n      for (var i = 0; i < registrations.length; i++) {\\n        if (registrations[i].observer === this) {\\n          registration = registrations[i];\\n          registration.removeListeners();\\n          registration.options = options;\\n          break;\\n        }\\n      }\\n      if (!registration) {\\n        registration = new Registration(this, target, options);\\n        registrations.push(registration);\\n        this.nodes_.push(target);\\n      }\\n      registration.addListeners();\\n    },\\n    disconnect: function() {\\n      this.nodes_.forEach(function(node) {\\n        var registrations = registrationsTable.get(node);\\n        for (var i = 0; i < registrations.length; i++) {\\n          var registration = registrations[i];\\n          if (registration.observer === this) {\\n            registration.removeListeners();\\n            registrations.splice(i, 1);\\n            break;\\n          }\\n        }\\n      }, this);\\n      this.records_ = [];\\n    },\\n    takeRecords: function() {\\n      var copyOfRecords = this.records_;\\n      this.records_ = [];\\n      return copyOfRecords;\\n    }\\n  };\\n  function MutationRecord(type, target) {\\n    this.type = type;\\n    this.target = target;\\n    this.addedNodes = [];\\n    this.removedNodes = [];\\n    this.previousSibling = null;\\n    this.nextSibling = null;\\n    this.attributeName = null;\\n    this.attributeNamespace = null;\\n    this.oldValue = null;\\n  }\\n  function copyMutationRecord(original) {\\n    var record = new MutationRecord(original.type, original.target);\\n    record.addedNodes = original.addedNodes.slice();\\n    record.removedNodes = original.removedNodes.slice();\\n    record.previousSibling = original.previousSibling;\\n    record.nextSibling = original.nextSibling;\\n    record.attributeName = original.attributeName;\\n    record.attributeNamespace = original.attributeNamespace;\\n    record.oldValue = original.oldValue;\\n    return record;\\n  }\\n  var currentRecord, recordWithOldValue;\\n  function getRecord(type, target) {\\n    return currentRecord = new MutationRecord(type, target);\\n  }\\n  function getRecordWithOldValue(oldValue) {\\n    if (recordWithOldValue) return recordWithOldValue;\\n    recordWithOldValue = copyMutationRecord(currentRecord);\\n    recordWithOldValue.oldValue = oldValue;\\n    return recordWithOldValue;\\n  }\\n  function clearRecords() {\\n    currentRecord = recordWithOldValue = undefined;\\n  }\\n  function recordRepresentsCurrentMutation(record) {\\n    return record === recordWithOldValue || record === currentRecord;\\n  }\\n  function selectRecord(lastRecord, newRecord) {\\n    if (lastRecord === newRecord) return lastRecord;\\n    if (recordWithOldValue && recordRepresentsCurrentMutation(lastRecord)) return recordWithOldValue;\\n    return null;\\n  }\\n  function Registration(observer, target, options) {\\n    this.observer = observer;\\n    this.target = target;\\n    this.options = options;\\n    this.transientObservedNodes = [];\\n  }\\n  Registration.prototype = {\\n    enqueue: function(record) {\\n      var records = this.observer.records_;\\n      var length = records.length;\\n      if (records.length > 0) {\\n        var lastRecord = records[length - 1];\\n        var recordToReplaceLast = selectRecord(lastRecord, record);\\n        if (recordToReplaceLast) {\\n          records[length - 1] = recordToReplaceLast;\\n          return;\\n        }\\n      } else {\\n        scheduleCallback(this.observer);\\n      }\\n      records[length] = record;\\n    },\\n    addListeners: function() {\\n      this.addListeners_(this.target);\\n    },\\n    addListeners_: function(node) {\\n      var options = this.options;\\n      if (options.attributes) node.addEventListener(\\\"DOMAttrModified\\\", this, true);\\n      if (options.characterData) node.addEventListener(\\\"DOMCharacterDataModified\\\", this, true);\\n      if (options.childList) node.addEventListener(\\\"DOMNodeInserted\\\", this, true);\\n      if (options.childList || options.subtree) node.addEventListener(\\\"DOMNodeRemoved\\\", this, true);\\n    },\\n    removeListeners: function() {\\n      this.removeListeners_(this.target);\\n    },\\n    removeListeners_: function(node) {\\n      var options = this.options;\\n      if (options.attributes) node.removeEventListener(\\\"DOMAttrModified\\\", this, true);\\n      if (options.characterData) node.removeEventListener(\\\"DOMCharacterDataModified\\\", this, true);\\n      if (options.childList) node.removeEventListener(\\\"DOMNodeInserted\\\", this, true);\\n      if (options.childList || options.subtree) node.removeEventListener(\\\"DOMNodeRemoved\\\", this, true);\\n    },\\n    addTransientObserver: function(node) {\\n      if (node === this.target) return;\\n      this.addListeners_(node);\\n      this.transientObservedNodes.push(node);\\n      var registrations = registrationsTable.get(node);\\n      if (!registrations) registrationsTable.set(node, registrations = []);\\n      registrations.push(this);\\n    },\\n    removeTransientObservers: function() {\\n      var transientObservedNodes = this.transientObservedNodes;\\n      this.transientObservedNodes = [];\\n      transientObservedNodes.forEach(function(node) {\\n        this.removeListeners_(node);\\n        var registrations = registrationsTable.get(node);\\n        for (var i = 0; i < registrations.length; i++) {\\n          if (registrations[i] === this) {\\n            registrations.splice(i, 1);\\n            break;\\n          }\\n        }\\n      }, this);\\n    },\\n    handleEvent: function(e) {\\n      e.stopImmediatePropagation();\\n      switch (e.type) {\\n       case \\\"DOMAttrModified\\\":\\n        var name = e.attrName;\\n        var namespace = e.relatedNode.namespaceURI;\\n        var target = e.target;\\n        var record = new getRecord(\\\"attributes\\\", target);\\n        record.attributeName = name;\\n        record.attributeNamespace = namespace;\\n        var oldValue = e.attrChange === MutationEvent.ADDITION ? null : e.prevValue;\\n        forEachAncestorAndObserverEnqueueRecord(target, function(options) {\\n          if (!options.attributes) return;\\n          if (options.attributeFilter && options.attributeFilter.length && options.attributeFilter.indexOf(name) === -1 && options.attributeFilter.indexOf(namespace) === -1) {\\n            return;\\n          }\\n          if (options.attributeOldValue) return getRecordWithOldValue(oldValue);\\n          return record;\\n        });\\n        break;\\n\\n       case \\\"DOMCharacterDataModified\\\":\\n        var target = e.target;\\n        var record = getRecord(\\\"characterData\\\", target);\\n        var oldValue = e.prevValue;\\n        forEachAncestorAndObserverEnqueueRecord(target, function(options) {\\n          if (!options.characterData) return;\\n          if (options.characterDataOldValue) return getRecordWithOldValue(oldValue);\\n          return record;\\n        });\\n        break;\\n\\n       case \\\"DOMNodeRemoved\\\":\\n        this.addTransientObserver(e.target);\\n\\n       case \\\"DOMNodeInserted\\\":\\n        var changedNode = e.target;\\n        var addedNodes, removedNodes;\\n        if (e.type === \\\"DOMNodeInserted\\\") {\\n          addedNodes = [ changedNode ];\\n          removedNodes = [];\\n        } else {\\n          addedNodes = [];\\n          removedNodes = [ changedNode ];\\n        }\\n        var previousSibling = changedNode.previousSibling;\\n        var nextSibling = changedNode.nextSibling;\\n        var record = getRecord(\\\"childList\\\", e.target.parentNode);\\n        record.addedNodes = addedNodes;\\n        record.removedNodes = removedNodes;\\n        record.previousSibling = previousSibling;\\n        record.nextSibling = nextSibling;\\n        forEachAncestorAndObserverEnqueueRecord(e.relatedNode, function(options) {\\n          if (!options.childList) return;\\n          return record;\\n        });\\n      }\\n      clearRecords();\\n    }\\n  };\\n  global.JsMutationObserver = JsMutationObserver;\\n  if (!global.MutationObserver) {\\n    global.MutationObserver = JsMutationObserver;\\n    JsMutationObserver._isPolyfilled = true;\\n  }\\n})(self);\\n/*\\r\\n * childNode.remove method polyfill for IE.\\r\\n * https://developer.mozilla.org/en-US/docs/Web/API/ChildNode/remove\\r\\n */\\r\\n\\r\\n(function() {\\r\\n\\tif (!('remove' in Element.prototype)) {\\r\\n\\t  Element.prototype.remove = function() {\\r\\n\\t    if (this.parentNode) {\\r\\n\\t    \\tthis.parentNode.removeChild(this);\\r\\n\\t    }\\r\\n\\t  };\\r\\n\\t}\\r\\n})();\\r\\n\\n/*\\r\\n * classList.js: Cross-browser full element.classList implementation.\\r\\n * 1.1.20150312\\r\\n *\\r\\n * By Eli Grey, http://eligrey.com\\r\\n * License: Dedicated to the public domain.\\r\\n *   See https://github.com/eligrey/classList.js/blob/master/LICENSE.md\\r\\n */\\r\\n\\r\\n/*global self, document, DOMException */\\r\\n\\r\\n/*! @source http://purl.eligrey.com/github/classList.js/blob/master/classList.js */\\r\\n\\r\\nif (\\\"document\\\" in self) {\\r\\n\\r\\n// Full polyfill for browsers with no classList support\\r\\n// Including IE < Edge missing SVGElement.classList\\r\\nif (!(\\\"classList\\\" in document.createElement(\\\"_\\\"))\\r\\n  || document.createElementNS && !(\\\"classList\\\" in document.createElementNS(\\\"http://www.w3.org/2000/svg\\\",\\\"g\\\"))) {\\r\\n\\r\\n(function (view) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\nif (!('Element' in view)) return;\\r\\n\\r\\nvar\\r\\n    classListProp = \\\"classList\\\"\\r\\n  , protoProp = \\\"prototype\\\"\\r\\n  , elemCtrProto = view.Element[protoProp]\\r\\n  , objCtr = Object\\r\\n  , strTrim = String[protoProp].trim || function () {\\r\\n    return this.replace(/^\\\\s+|\\\\s+$/g, \\\"\\\");\\r\\n  }\\r\\n  , arrIndexOf = Array[protoProp].indexOf || function (item) {\\r\\n    var\\r\\n        i = 0\\r\\n      , len = this.length\\r\\n    ;\\r\\n    for (; i < len; i++) {\\r\\n      if (i in this && this[i] === item) {\\r\\n        return i;\\r\\n      }\\r\\n    }\\r\\n    return -1;\\r\\n  }\\r\\n  // Vendors: please allow content code to instantiate DOMExceptions\\r\\n  , DOMEx = function (type, message) {\\r\\n    this.name = type;\\r\\n    this.code = DOMException[type];\\r\\n    this.message = message;\\r\\n  }\\r\\n  , checkTokenAndGetIndex = function (classList, token) {\\r\\n    if (token === \\\"\\\") {\\r\\n      throw new DOMEx(\\r\\n          \\\"SYNTAX_ERR\\\"\\r\\n        , \\\"An invalid or illegal string was specified\\\"\\r\\n      );\\r\\n    }\\r\\n    if (/\\\\s/.test(token)) {\\r\\n      throw new DOMEx(\\r\\n          \\\"INVALID_CHARACTER_ERR\\\"\\r\\n        , \\\"String contains an invalid character\\\"\\r\\n      );\\r\\n    }\\r\\n    return arrIndexOf.call(classList, token);\\r\\n  }\\r\\n  , ClassList = function (elem) {\\r\\n    var\\r\\n        trimmedClasses = strTrim.call(elem.getAttribute(\\\"class\\\") || \\\"\\\")\\r\\n      , classes = trimmedClasses ? trimmedClasses.split(/\\\\s+/) : []\\r\\n      , i = 0\\r\\n      , len = classes.length\\r\\n    ;\\r\\n    for (; i < len; i++) {\\r\\n      this.push(classes[i]);\\r\\n    }\\r\\n    this._updateClassName = function () {\\r\\n      elem.setAttribute(\\\"class\\\", this.toString());\\r\\n    };\\r\\n  }\\r\\n  , classListProto = ClassList[protoProp] = []\\r\\n  , classListGetter = function () {\\r\\n    return new ClassList(this);\\r\\n  }\\r\\n;\\r\\n// Most DOMException implementations don't allow calling DOMException's toString()\\r\\n// on non-DOMExceptions. Error's toString() is sufficient here.\\r\\nDOMEx[protoProp] = Error[protoProp];\\r\\nclassListProto.item = function (i) {\\r\\n  return this[i] || null;\\r\\n};\\r\\nclassListProto.contains = function (token) {\\r\\n  token += \\\"\\\";\\r\\n  return checkTokenAndGetIndex(this, token) !== -1;\\r\\n};\\r\\nclassListProto.add = function () {\\r\\n  var\\r\\n      tokens = arguments\\r\\n    , i = 0\\r\\n    , l = tokens.length\\r\\n    , token\\r\\n    , updated = false\\r\\n  ;\\r\\n  do {\\r\\n    token = tokens[i] + \\\"\\\";\\r\\n    if (checkTokenAndGetIndex(this, token) === -1) {\\r\\n      this.push(token);\\r\\n      updated = true;\\r\\n    }\\r\\n  }\\r\\n  while (++i < l);\\r\\n\\r\\n  if (updated) {\\r\\n    this._updateClassName();\\r\\n  }\\r\\n};\\r\\nclassListProto.remove = function () {\\r\\n  var\\r\\n      tokens = arguments\\r\\n    , i = 0\\r\\n    , l = tokens.length\\r\\n    , token\\r\\n    , updated = false\\r\\n    , index\\r\\n  ;\\r\\n  do {\\r\\n    token = tokens[i] + \\\"\\\";\\r\\n    index = checkTokenAndGetIndex(this, token);\\r\\n    while (index !== -1) {\\r\\n      this.splice(index, 1);\\r\\n      updated = true;\\r\\n      index = checkTokenAndGetIndex(this, token);\\r\\n    }\\r\\n  }\\r\\n  while (++i < l);\\r\\n\\r\\n  if (updated) {\\r\\n    this._updateClassName();\\r\\n  }\\r\\n};\\r\\nclassListProto.toggle = function (token, force) {\\r\\n  token += \\\"\\\";\\r\\n\\r\\n  var\\r\\n      result = this.contains(token)\\r\\n    , method = result ?\\r\\n      force !== true && \\\"remove\\\"\\r\\n    :\\r\\n      force !== false && \\\"add\\\"\\r\\n  ;\\r\\n\\r\\n  if (method) {\\r\\n    this[method](token);\\r\\n  }\\r\\n\\r\\n  if (force === true || force === false) {\\r\\n    return force;\\r\\n  } else {\\r\\n    return !result;\\r\\n  }\\r\\n};\\r\\nclassListProto.toString = function () {\\r\\n  return this.join(\\\" \\\");\\r\\n};\\r\\n\\r\\nif (objCtr.defineProperty) {\\r\\n  var classListPropDesc = {\\r\\n      get: classListGetter\\r\\n    , enumerable: true\\r\\n    , configurable: true\\r\\n  };\\r\\n  try {\\r\\n    objCtr.defineProperty(elemCtrProto, classListProp, classListPropDesc);\\r\\n  } catch (ex) { // IE 8 doesn't support enumerable:true\\r\\n    if (ex.number === -0x7FF5EC54) {\\r\\n      classListPropDesc.enumerable = false;\\r\\n      objCtr.defineProperty(elemCtrProto, classListProp, classListPropDesc);\\r\\n    }\\r\\n  }\\r\\n} else if (objCtr[protoProp].__defineGetter__) {\\r\\n  elemCtrProto.__defineGetter__(classListProp, classListGetter);\\r\\n}\\r\\n\\r\\n}(self));\\r\\n\\r\\n} else {\\r\\n// There is full or partial native classList support, so just check if we need\\r\\n// to normalize the add/remove and toggle APIs.\\r\\n\\r\\n(function () {\\r\\n  \\\"use strict\\\";\\r\\n\\r\\n  var testElement = document.createElement(\\\"_\\\");\\r\\n\\r\\n  testElement.classList.add(\\\"c1\\\", \\\"c2\\\");\\r\\n\\r\\n  // Polyfill for IE 10/11 and Firefox <26, where classList.add and\\r\\n  // classList.remove exist but support only one argument at a time.\\r\\n  if (!testElement.classList.contains(\\\"c2\\\")) {\\r\\n    var createMethod = function(method) {\\r\\n      var original = DOMTokenList.prototype[method];\\r\\n\\r\\n      DOMTokenList.prototype[method] = function(token) {\\r\\n        var i, len = arguments.length;\\r\\n\\r\\n        for (i = 0; i < len; i++) {\\r\\n          token = arguments[i];\\r\\n          original.call(this, token);\\r\\n        }\\r\\n      };\\r\\n    };\\r\\n    createMethod('add');\\r\\n    createMethod('remove');\\r\\n  }\\r\\n\\r\\n  testElement.classList.toggle(\\\"c3\\\", false);\\r\\n\\r\\n  // Polyfill for IE 10 and Firefox <24, where classList.toggle does not\\r\\n  // support the second argument.\\r\\n  if (testElement.classList.contains(\\\"c3\\\")) {\\r\\n    var _toggle = DOMTokenList.prototype.toggle;\\r\\n\\r\\n    DOMTokenList.prototype.toggle = function(token, force) {\\r\\n      if (1 in arguments && !this.contains(token) === !force) {\\r\\n        return force;\\r\\n      } else {\\r\\n        return _toggle.call(this, token);\\r\\n      }\\r\\n    };\\r\\n\\r\\n  }\\r\\n\\r\\n  testElement = null;\\r\\n}());\\r\\n\\r\\n}\\r\\n\\r\\n}\\r\\n\\r\\n\\n;(function () {\\n\\t'use strict';\\n\\n\\t/**\\n\\t * @preserve FastClick: polyfill to remove click delays on browsers with touch UIs.\\n\\t *\\n\\t * @codingstandard ftlabs-jsv2\\n\\t * @copyright The Financial Times Limited [All Rights Reserved]\\n\\t * @license MIT License (see LICENSE.txt)\\n\\t */\\n\\n\\t/*jslint browser:true, node:true*/\\n\\t/*global define, Event, Node*/\\n\\n\\n\\t/**\\n\\t * Instantiate fast-clicking listeners on the specified layer.\\n\\t *\\n\\t * @constructor\\n\\t * @param {Element} layer The layer to listen on\\n\\t * @param {Object} [options={}] The options to override the defaults\\n\\t */\\n\\tfunction FastClick(layer, options) {\\n\\t\\tvar oldOnClick;\\n\\n\\t\\toptions = options || {};\\n\\n\\t\\t/**\\n\\t\\t * Whether a click is currently being tracked.\\n\\t\\t *\\n\\t\\t * @type boolean\\n\\t\\t */\\n\\t\\tthis.trackingClick = false;\\n\\n\\n\\t\\t/**\\n\\t\\t * Timestamp for when click tracking started.\\n\\t\\t *\\n\\t\\t * @type number\\n\\t\\t */\\n\\t\\tthis.trackingClickStart = 0;\\n\\n\\n\\t\\t/**\\n\\t\\t * The element being tracked for a click.\\n\\t\\t *\\n\\t\\t * @type EventTarget\\n\\t\\t */\\n\\t\\tthis.targetElement = null;\\n\\n\\n\\t\\t/**\\n\\t\\t * X-coordinate of touch start event.\\n\\t\\t *\\n\\t\\t * @type number\\n\\t\\t */\\n\\t\\tthis.touchStartX = 0;\\n\\n\\n\\t\\t/**\\n\\t\\t * Y-coordinate of touch start event.\\n\\t\\t *\\n\\t\\t * @type number\\n\\t\\t */\\n\\t\\tthis.touchStartY = 0;\\n\\n\\n\\t\\t/**\\n\\t\\t * ID of the last touch, retrieved from Touch.identifier.\\n\\t\\t *\\n\\t\\t * @type number\\n\\t\\t */\\n\\t\\tthis.lastTouchIdentifier = 0;\\n\\n\\n\\t\\t/**\\n\\t\\t * Touchmove boundary, beyond which a click will be cancelled.\\n\\t\\t *\\n\\t\\t * @type number\\n\\t\\t */\\n\\t\\tthis.touchBoundary = options.touchBoundary || 10;\\n\\n\\n\\t\\t/**\\n\\t\\t * The FastClick layer.\\n\\t\\t *\\n\\t\\t * @type Element\\n\\t\\t */\\n\\t\\tthis.layer = layer;\\n\\n\\t\\t/**\\n\\t\\t * The minimum time between tap(touchstart and touchend) events\\n\\t\\t *\\n\\t\\t * @type number\\n\\t\\t */\\n\\t\\tthis.tapDelay = options.tapDelay || 200;\\n\\n\\t\\t/**\\n\\t\\t * The maximum time for a tap\\n\\t\\t *\\n\\t\\t * @type number\\n\\t\\t */\\n\\t\\tthis.tapTimeout = options.tapTimeout || 700;\\n\\n\\t\\tif (FastClick.notNeeded(layer)) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\t// Some old versions of Android don't have Function.prototype.bind\\n\\t\\tfunction bind(method, context) {\\n\\t\\t\\treturn function() { return method.apply(context, arguments); };\\n\\t\\t}\\n\\n\\n\\t\\tvar methods = ['onMouse', 'onClick', 'onTouchStart', 'onTouchMove', 'onTouchEnd', 'onTouchCancel'];\\n\\t\\tvar context = this;\\n\\t\\tfor (var i = 0, l = methods.length; i < l; i++) {\\n\\t\\t\\tcontext[methods[i]] = bind(context[methods[i]], context);\\n\\t\\t}\\n\\n\\t\\t// Set up event handlers as required\\n\\t\\tif (deviceIsAndroid) {\\n\\t\\t\\tlayer.addEventListener('mouseover', this.onMouse, true);\\n\\t\\t\\tlayer.addEventListener('mousedown', this.onMouse, true);\\n\\t\\t\\tlayer.addEventListener('mouseup', this.onMouse, true);\\n\\t\\t}\\n\\n\\t\\tlayer.addEventListener('click', this.onClick, true);\\n\\t\\tlayer.addEventListener('touchstart', this.onTouchStart, false);\\n\\t\\tlayer.addEventListener('touchmove', this.onTouchMove, false);\\n\\t\\tlayer.addEventListener('touchend', this.onTouchEnd, false);\\n\\t\\tlayer.addEventListener('touchcancel', this.onTouchCancel, false);\\n\\n\\t\\t// Hack is required for browsers that don't support Event#stopImmediatePropagation (e.g. Android 2)\\n\\t\\t// which is how FastClick normally stops click events bubbling to callbacks registered on the FastClick\\n\\t\\t// layer when they are cancelled.\\n\\t\\tif (!Event.prototype.stopImmediatePropagation) {\\n\\t\\t\\tlayer.removeEventListener = function(type, callback, capture) {\\n\\t\\t\\t\\tvar rmv = Node.prototype.removeEventListener;\\n\\t\\t\\t\\tif (type === 'click') {\\n\\t\\t\\t\\t\\trmv.call(layer, type, callback.hijacked || callback, capture);\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\trmv.call(layer, type, callback, capture);\\n\\t\\t\\t\\t}\\n\\t\\t\\t};\\n\\n\\t\\t\\tlayer.addEventListener = function(type, callback, capture) {\\n\\t\\t\\t\\tvar adv = Node.prototype.addEventListener;\\n\\t\\t\\t\\tif (type === 'click') {\\n\\t\\t\\t\\t\\tadv.call(layer, type, callback.hijacked || (callback.hijacked = function(event) {\\n\\t\\t\\t\\t\\t\\tif (!event.propagationStopped) {\\n\\t\\t\\t\\t\\t\\t\\tcallback(event);\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}), capture);\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tadv.call(layer, type, callback, capture);\\n\\t\\t\\t\\t}\\n\\t\\t\\t};\\n\\t\\t}\\n\\n\\t\\t// If a handler is already declared in the element's onclick attribute, it will be fired before\\n\\t\\t// FastClick's onClick handler. Fix this by pulling out the user-defined handler function and\\n\\t\\t// adding it as listener.\\n\\t\\tif (typeof layer.onclick === 'function') {\\n\\n\\t\\t\\t// Android browser on at least 3.2 requires a new reference to the function in layer.onclick\\n\\t\\t\\t// - the old one won't work if passed to addEventListener directly.\\n\\t\\t\\toldOnClick = layer.onclick;\\n\\t\\t\\tlayer.addEventListener('click', function(event) {\\n\\t\\t\\t\\toldOnClick(event);\\n\\t\\t\\t}, false);\\n\\t\\t\\tlayer.onclick = null;\\n\\t\\t}\\n\\t}\\n\\n\\t/**\\n\\t* Windows Phone 8.1 fakes user agent string to look like Android and iPhone.\\n\\t*\\n\\t* @type boolean\\n\\t*/\\n\\tvar deviceIsWindowsPhone = navigator.userAgent.indexOf(\\\"Windows Phone\\\") >= 0;\\n\\n\\t/**\\n\\t * Android requires exceptions.\\n\\t *\\n\\t * @type boolean\\n\\t */\\n\\tvar deviceIsAndroid = navigator.userAgent.indexOf('Android') > 0 && !deviceIsWindowsPhone;\\n\\n\\n\\t/**\\n\\t * iOS requires exceptions.\\n\\t *\\n\\t * @type boolean\\n\\t */\\n\\tvar deviceIsIOS = /iP(ad|hone|od)/.test(navigator.userAgent) && !deviceIsWindowsPhone;\\n\\n\\n\\t/**\\n\\t * iOS 4 requires an exception for select elements.\\n\\t *\\n\\t * @type boolean\\n\\t */\\n\\tvar deviceIsIOS4 = deviceIsIOS && (/OS 4_\\\\d(_\\\\d)?/).test(navigator.userAgent);\\n\\n\\n\\t/**\\n\\t * iOS 6.0-7.* requires the target element to be manually derived\\n\\t *\\n\\t * @type boolean\\n\\t */\\n\\tvar deviceIsIOSWithBadTarget = deviceIsIOS && (/OS [6-7]_\\\\d/).test(navigator.userAgent);\\n\\n\\t/**\\n\\t * BlackBerry requires exceptions.\\n\\t *\\n\\t * @type boolean\\n\\t */\\n\\tvar deviceIsBlackBerry10 = navigator.userAgent.indexOf('BB10') > 0;\\n\\n\\t/**\\n\\t * Determine whether a given element requires a native click.\\n\\t *\\n\\t * @param {EventTarget|Element} target Target DOM element\\n\\t * @returns {boolean} Returns true if the element needs a native click\\n\\t */\\n\\tFastClick.prototype.needsClick = function(target) {\\n\\t\\tswitch (target.nodeName.toLowerCase()) {\\n\\n\\t\\t// Don't send a synthetic click to disabled inputs (issue #62)\\n\\t\\tcase 'button':\\n\\t\\tcase 'select':\\n\\t\\tcase 'textarea':\\n\\t\\t\\tif (target.disabled) {\\n\\t\\t\\t\\treturn true;\\n\\t\\t\\t}\\n\\n\\t\\t\\tbreak;\\n\\t\\tcase 'input':\\n\\n\\t\\t\\t// File inputs need real clicks on iOS 6 due to a browser bug (issue #68)\\n\\t\\t\\tif ((deviceIsIOS && target.type === 'file') || target.disabled) {\\n\\t\\t\\t\\treturn true;\\n\\t\\t\\t}\\n\\n\\t\\t\\tbreak;\\n\\t\\tcase 'label':\\n\\t\\tcase 'iframe': // iOS8 homescreen apps can prevent events bubbling into frames\\n\\t\\tcase 'video':\\n\\t\\t\\treturn true;\\n\\t\\t}\\n\\n\\t\\treturn (/\\\\bneedsclick\\\\b/).test(target.className);\\n\\t};\\n\\n\\n\\t/**\\n\\t * Determine whether a given element requires a call to focus to simulate click into element.\\n\\t *\\n\\t * @param {EventTarget|Element} target Target DOM element\\n\\t * @returns {boolean} Returns true if the element requires a call to focus to simulate native click.\\n\\t */\\n\\tFastClick.prototype.needsFocus = function(target) {\\n\\t\\tswitch (target.nodeName.toLowerCase()) {\\n\\t\\tcase 'textarea':\\n\\t\\t\\treturn true;\\n\\t\\tcase 'select':\\n\\t\\t\\treturn !deviceIsAndroid;\\n\\t\\tcase 'input':\\n\\t\\t\\tswitch (target.type) {\\n\\t\\t\\tcase 'button':\\n\\t\\t\\tcase 'checkbox':\\n\\t\\t\\tcase 'file':\\n\\t\\t\\tcase 'image':\\n\\t\\t\\tcase 'radio':\\n\\t\\t\\tcase 'submit':\\n\\t\\t\\t\\treturn false;\\n\\t\\t\\t}\\n\\n\\t\\t\\t// No point in attempting to focus disabled inputs\\n\\t\\t\\treturn !target.disabled && !target.readOnly;\\n\\t\\tdefault:\\n\\t\\t\\treturn (/\\\\bneedsfocus\\\\b/).test(target.className);\\n\\t\\t}\\n\\t};\\n\\n\\n\\t/**\\n\\t * Send a click event to the specified element.\\n\\t *\\n\\t * @param {EventTarget|Element} targetElement\\n\\t * @param {Event} event\\n\\t */\\n\\tFastClick.prototype.sendClick = function(targetElement, event) {\\n\\t\\tvar clickEvent, touch;\\n\\n\\t\\t// On some Android devices activeElement needs to be blurred otherwise the synthetic click will have no effect (#24)\\n\\t\\tif (document.activeElement && document.activeElement !== targetElement) {\\n\\t\\t\\tdocument.activeElement.blur();\\n\\t\\t}\\n\\n\\t\\ttouch = event.changedTouches[0];\\n\\n\\t\\t// Synthesize a click event, with an extra attribute so it can be tracked\\n\\t\\tclickEvent = document.createEvent('MouseEvents');\\n\\t\\tclickEvent.initMouseEvent(this.determineEventType(targetElement), true, true, window, 1, touch.screenX, touch.screenY, touch.clientX, touch.clientY, false, false, false, false, 0, null);\\n\\t\\tclickEvent.forwardedTouchEvent = true;\\n\\t\\ttargetElement.dispatchEvent(clickEvent);\\n\\t};\\n\\n\\tFastClick.prototype.determineEventType = function(targetElement) {\\n\\n\\t\\t//Issue #159: Android Chrome Select Box does not open with a synthetic click event\\n\\t\\tif (deviceIsAndroid && targetElement.tagName.toLowerCase() === 'select') {\\n\\t\\t\\treturn 'mousedown';\\n\\t\\t}\\n\\n\\t\\treturn 'click';\\n\\t};\\n\\n\\n\\t/**\\n\\t * @param {EventTarget|Element} targetElement\\n\\t */\\n\\tFastClick.prototype.focus = function(targetElement) {\\n\\t\\tvar length;\\n\\n\\t\\t// Issue #160: on iOS 7, some input elements (e.g. date datetime month) throw a vague TypeError on setSelectionRange. These elements don't have an integer value for the selectionStart and selectionEnd properties, but unfortunately that can't be used for detection because accessing the properties also throws a TypeError. Just check the type instead. Filed as Apple bug #15122724.\\n\\t\\tif (deviceIsIOS && targetElement.setSelectionRange && targetElement.type.indexOf('date') !== 0 && targetElement.type !== 'time' && targetElement.type !== 'month') {\\n\\t\\t\\tlength = targetElement.value.length;\\n\\t\\t\\ttargetElement.setSelectionRange(length, length);\\n\\t\\t} else {\\n\\t\\t\\ttargetElement.focus();\\n\\t\\t}\\n\\t};\\n\\n\\n\\t/**\\n\\t * Check whether the given target element is a child of a scrollable layer and if so, set a flag on it.\\n\\t *\\n\\t * @param {EventTarget|Element} targetElement\\n\\t */\\n\\tFastClick.prototype.updateScrollParent = function(targetElement) {\\n\\t\\tvar scrollParent, parentElement;\\n\\n\\t\\tscrollParent = targetElement.fastClickScrollParent;\\n\\n\\t\\t// Attempt to discover whether the target element is contained within a scrollable layer. Re-check if the\\n\\t\\t// target element was moved to another parent.\\n\\t\\tif (!scrollParent || !scrollParent.contains(targetElement)) {\\n\\t\\t\\tparentElement = targetElement;\\n\\t\\t\\tdo {\\n\\t\\t\\t\\tif (parentElement.scrollHeight > parentElement.offsetHeight) {\\n\\t\\t\\t\\t\\tscrollParent = parentElement;\\n\\t\\t\\t\\t\\ttargetElement.fastClickScrollParent = parentElement;\\n\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tparentElement = parentElement.parentElement;\\n\\t\\t\\t} while (parentElement);\\n\\t\\t}\\n\\n\\t\\t// Always update the scroll top tracker if possible.\\n\\t\\tif (scrollParent) {\\n\\t\\t\\tscrollParent.fastClickLastScrollTop = scrollParent.scrollTop;\\n\\t\\t}\\n\\t};\\n\\n\\n\\t/**\\n\\t * @param {EventTarget} targetElement\\n\\t * @returns {Element|EventTarget}\\n\\t */\\n\\tFastClick.prototype.getTargetElementFromEventTarget = function(eventTarget) {\\n\\n\\t\\t// On some older browsers (notably Safari on iOS 4.1 - see issue #56) the event target may be a text node.\\n\\t\\tif (eventTarget.nodeType === Node.TEXT_NODE) {\\n\\t\\t\\treturn eventTarget.parentNode;\\n\\t\\t}\\n\\n\\t\\treturn eventTarget;\\n\\t};\\n\\n\\n\\t/**\\n\\t * On touch start, record the position and scroll offset.\\n\\t *\\n\\t * @param {Event} event\\n\\t * @returns {boolean}\\n\\t */\\n\\tFastClick.prototype.onTouchStart = function(event) {\\n\\t\\tvar targetElement, touch, selection;\\n\\n\\t\\t// Ignore multiple touches, otherwise pinch-to-zoom is prevented if both fingers are on the FastClick element (issue #111).\\n\\t\\tif (event.targetTouches.length > 1) {\\n\\t\\t\\treturn true;\\n\\t\\t}\\n\\n\\t\\ttargetElement = this.getTargetElementFromEventTarget(event.target);\\n\\t\\ttouch = event.targetTouches[0];\\n\\n\\t\\t// Ignore touches on contenteditable elements to prevent conflict with text selection.\\n\\t\\t// (For details: https://github.com/ftlabs/fastclick/pull/211 )\\n\\t\\tif (targetElement.isContentEditable) {\\n\\t\\t\\treturn true;\\n\\t\\t}\\n\\n\\t\\tif (deviceIsIOS) {\\n\\n\\t\\t\\t// Only trusted events will deselect text on iOS (issue #49)\\n\\t\\t\\tselection = window.getSelection();\\n\\t\\t\\tif (selection.rangeCount && !selection.isCollapsed) {\\n\\t\\t\\t\\treturn true;\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (!deviceIsIOS4) {\\n\\n\\t\\t\\t\\t// Weird things happen on iOS when an alert or confirm dialog is opened from a click event callback (issue #23):\\n\\t\\t\\t\\t// when the user next taps anywhere else on the page, new touchstart and touchend events are dispatched\\n\\t\\t\\t\\t// with the same identifier as the touch event that previously triggered the click that triggered the alert.\\n\\t\\t\\t\\t// Sadly, there is an issue on iOS 4 that causes some normal touch events to have the same identifier as an\\n\\t\\t\\t\\t// immediately preceding touch event (issue #52), so this fix is unavailable on that platform.\\n\\t\\t\\t\\t// Issue 120: touch.identifier is 0 when Chrome dev tools 'Emulate touch events' is set with an iOS device UA string,\\n\\t\\t\\t\\t// which causes all touch events to be ignored. As this block only applies to iOS, and iOS identifiers are always long,\\n\\t\\t\\t\\t// random integers, it's safe to to continue if the identifier is 0 here.\\n\\t\\t\\t\\tif (touch.identifier && touch.identifier === this.lastTouchIdentifier) {\\n\\t\\t\\t\\t\\tevent.preventDefault();\\n\\t\\t\\t\\t\\treturn false;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tthis.lastTouchIdentifier = touch.identifier;\\n\\n\\t\\t\\t\\t// If the target element is a child of a scrollable layer (using -webkit-overflow-scrolling: touch) and:\\n\\t\\t\\t\\t// 1) the user does a fling scroll on the scrollable layer\\n\\t\\t\\t\\t// 2) the user stops the fling scroll with another tap\\n\\t\\t\\t\\t// then the event.target of the last 'touchend' event will be the element that was under the user's finger\\n\\t\\t\\t\\t// when the fling scroll was started, causing FastClick to send a click event to that layer - unless a check\\n\\t\\t\\t\\t// is made to ensure that a parent layer was not scrolled before sending a synthetic click (issue #42).\\n\\t\\t\\t\\tthis.updateScrollParent(targetElement);\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tthis.trackingClick = true;\\n\\t\\tthis.trackingClickStart = event.timeStamp;\\n\\t\\tthis.targetElement = targetElement;\\n\\n\\t\\tthis.touchStartX = touch.pageX;\\n\\t\\tthis.touchStartY = touch.pageY;\\n\\n\\t\\t// Prevent phantom clicks on fast double-tap (issue #36)\\n\\t\\tif ((event.timeStamp - this.lastClickTime) < this.tapDelay && (event.timeStamp - this.lastClickTime) > -1) {\\n\\t\\t\\tevent.preventDefault();\\n\\t\\t}\\n\\n\\t\\treturn true;\\n\\t};\\n\\n\\n\\t/**\\n\\t * Based on a touchmove event object, check whether the touch has moved past a boundary since it started.\\n\\t *\\n\\t * @param {Event} event\\n\\t * @returns {boolean}\\n\\t */\\n\\tFastClick.prototype.touchHasMoved = function(event) {\\n\\t\\tvar touch = event.changedTouches[0], boundary = this.touchBoundary;\\n\\n\\t\\tif (Math.abs(touch.pageX - this.touchStartX) > boundary || Math.abs(touch.pageY - this.touchStartY) > boundary) {\\n\\t\\t\\treturn true;\\n\\t\\t}\\n\\n\\t\\treturn false;\\n\\t};\\n\\n\\n\\t/**\\n\\t * Update the last position.\\n\\t *\\n\\t * @param {Event} event\\n\\t * @returns {boolean}\\n\\t */\\n\\tFastClick.prototype.onTouchMove = function(event) {\\n\\t\\tif (!this.trackingClick) {\\n\\t\\t\\treturn true;\\n\\t\\t}\\n\\n\\t\\t// If the touch has moved, cancel the click tracking\\n\\t\\tif (this.targetElement !== this.getTargetElementFromEventTarget(event.target) || this.touchHasMoved(event)) {\\n\\t\\t\\tthis.trackingClick = false;\\n\\t\\t\\tthis.targetElement = null;\\n\\t\\t}\\n\\n\\t\\treturn true;\\n\\t};\\n\\n\\n\\t/**\\n\\t * Attempt to find the labelled control for the given label element.\\n\\t *\\n\\t * @param {EventTarget|HTMLLabelElement} labelElement\\n\\t * @returns {Element|null}\\n\\t */\\n\\tFastClick.prototype.findControl = function(labelElement) {\\n\\n\\t\\t// Fast path for newer browsers supporting the HTML5 control attribute\\n\\t\\tif (labelElement.control !== undefined) {\\n\\t\\t\\treturn labelElement.control;\\n\\t\\t}\\n\\n\\t\\t// All browsers under test that support touch events also support the HTML5 htmlFor attribute\\n\\t\\tif (labelElement.htmlFor) {\\n\\t\\t\\treturn document.getElementById(labelElement.htmlFor);\\n\\t\\t}\\n\\n\\t\\t// If no for attribute exists, attempt to retrieve the first labellable descendant element\\n\\t\\t// the list of which is defined here: http://www.w3.org/TR/html5/forms.html#category-label\\n\\t\\treturn labelElement.querySelector('button, input:not([type=hidden]), keygen, meter, output, progress, select, textarea');\\n\\t};\\n\\n\\n\\t/**\\n\\t * On touch end, determine whether to send a click event at once.\\n\\t *\\n\\t * @param {Event} event\\n\\t * @returns {boolean}\\n\\t */\\n\\tFastClick.prototype.onTouchEnd = function(event) {\\n\\t\\tvar forElement, trackingClickStart, targetTagName, scrollParent, touch, targetElement = this.targetElement;\\n\\n\\t\\tif (!this.trackingClick) {\\n\\t\\t\\treturn true;\\n\\t\\t}\\n\\n\\t\\t// Prevent phantom clicks on fast double-tap (issue #36)\\n\\t\\tif ((event.timeStamp - this.lastClickTime) < this.tapDelay && (event.timeStamp - this.lastClickTime) > -1) {\\n\\t\\t\\tthis.cancelNextClick = true;\\n\\t\\t\\treturn true;\\n\\t\\t}\\n\\n\\t\\tif ((event.timeStamp - this.trackingClickStart) > this.tapTimeout) {\\n\\t\\t\\treturn true;\\n\\t\\t}\\n\\n\\t\\t// Reset to prevent wrong click cancel on input (issue #156).\\n\\t\\tthis.cancelNextClick = false;\\n\\n\\t\\tthis.lastClickTime = event.timeStamp;\\n\\n\\t\\ttrackingClickStart = this.trackingClickStart;\\n\\t\\tthis.trackingClick = false;\\n\\t\\tthis.trackingClickStart = 0;\\n\\n\\t\\t// On some iOS devices, the targetElement supplied with the event is invalid if the layer\\n\\t\\t// is performing a transition or scroll, and has to be re-detected manually. Note that\\n\\t\\t// for this to function correctly, it must be called *after* the event target is checked!\\n\\t\\t// See issue #57; also filed as rdar://13048589 .\\n\\t\\tif (deviceIsIOSWithBadTarget) {\\n\\t\\t\\ttouch = event.changedTouches[0];\\n\\n\\t\\t\\t// In certain cases arguments of elementFromPoint can be negative, so prevent setting targetElement to null\\n\\t\\t\\ttargetElement = document.elementFromPoint(touch.pageX - window.pageXOffset, touch.pageY - window.pageYOffset) || targetElement;\\n\\t\\t\\ttargetElement.fastClickScrollParent = this.targetElement.fastClickScrollParent;\\n\\t\\t}\\n\\n\\t\\ttargetTagName = targetElement.tagName.toLowerCase();\\n\\t\\tif (targetTagName === 'label') {\\n\\t\\t\\tforElement = this.findControl(targetElement);\\n\\t\\t\\tif (forElement) {\\n\\t\\t\\t\\tthis.focus(targetElement);\\n\\t\\t\\t\\tif (deviceIsAndroid) {\\n\\t\\t\\t\\t\\treturn false;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\ttargetElement = forElement;\\n\\t\\t\\t}\\n\\t\\t} else if (this.needsFocus(targetElement)) {\\n\\n\\t\\t\\t// Case 1: If the touch started a while ago (best guess is 100ms based on tests for issue #36) then focus will be triggered anyway. Return early and unset the target element reference so that the subsequent click will be allowed through.\\n\\t\\t\\t// Case 2: Without this exception for input elements tapped when the document is contained in an iframe, then any inputted text won't be visible even though the value attribute is updated as the user types (issue #37).\\n\\t\\t\\tif ((event.timeStamp - trackingClickStart) > 100 || (deviceIsIOS && window.top !== window && targetTagName === 'input')) {\\n\\t\\t\\t\\tthis.targetElement = null;\\n\\t\\t\\t\\treturn false;\\n\\t\\t\\t}\\n\\n\\t\\t\\tthis.focus(targetElement);\\n\\t\\t\\tthis.sendClick(targetElement, event);\\n\\n\\t\\t\\t// Select elements need the event to go through on iOS 4, otherwise the selector menu won't open.\\n\\t\\t\\t// Also this breaks opening selects when VoiceOver is active on iOS6, iOS7 (and possibly others)\\n\\t\\t\\tif (!deviceIsIOS || targetTagName !== 'select') {\\n\\t\\t\\t\\tthis.targetElement = null;\\n\\t\\t\\t\\tevent.preventDefault();\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn false;\\n\\t\\t}\\n\\n\\t\\tif (deviceIsIOS && !deviceIsIOS4) {\\n\\n\\t\\t\\t// Don't send a synthetic click event if the target element is contained within a parent layer that was scrolled\\n\\t\\t\\t// and this tap is being used to stop the scrolling (usually initiated by a fling - issue #42).\\n\\t\\t\\tscrollParent = targetElement.fastClickScrollParent;\\n\\t\\t\\tif (scrollParent && scrollParent.fastClickLastScrollTop !== scrollParent.scrollTop) {\\n\\t\\t\\t\\treturn true;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t// Prevent the actual click from going though - unless the target node is marked as requiring\\n\\t\\t// real clicks or if it is in the whitelist in which case only non-programmatic clicks are permitted.\\n\\t\\tif (!this.needsClick(targetElement)) {\\n\\t\\t\\tevent.preventDefault();\\n\\t\\t\\tthis.sendClick(targetElement, event);\\n\\t\\t}\\n\\n\\t\\treturn false;\\n\\t};\\n\\n\\n\\t/**\\n\\t * On touch cancel, stop tracking the click.\\n\\t *\\n\\t * @returns {void}\\n\\t */\\n\\tFastClick.prototype.onTouchCancel = function() {\\n\\t\\tthis.trackingClick = false;\\n\\t\\tthis.targetElement = null;\\n\\t};\\n\\n\\n\\t/**\\n\\t * Determine mouse events which should be permitted.\\n\\t *\\n\\t * @param {Event} event\\n\\t * @returns {boolean}\\n\\t */\\n\\tFastClick.prototype.onMouse = function(event) {\\n\\n\\t\\t// If a target element was never set (because a touch event was never fired) allow the event\\n\\t\\tif (!this.targetElement) {\\n\\t\\t\\treturn true;\\n\\t\\t}\\n\\n\\t\\tif (event.forwardedTouchEvent) {\\n\\t\\t\\treturn true;\\n\\t\\t}\\n\\n\\t\\t// Programmatically generated events targeting a specific element should be permitted\\n\\t\\tif (!event.cancelable) {\\n\\t\\t\\treturn true;\\n\\t\\t}\\n\\n\\t\\t// Derive and check the target element to see whether the mouse event needs to be permitted;\\n\\t\\t// unless explicitly enabled, prevent non-touch click events from triggering actions,\\n\\t\\t// to prevent ghost/doubleclicks.\\n\\t\\tif (!this.needsClick(this.targetElement) || this.cancelNextClick) {\\n\\n\\t\\t\\t// Prevent any user-added listeners declared on FastClick element from being fired.\\n\\t\\t\\tif (event.stopImmediatePropagation) {\\n\\t\\t\\t\\tevent.stopImmediatePropagation();\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t// Part of the hack for browsers that don't support Event#stopImmediatePropagation (e.g. Android 2)\\n\\t\\t\\t\\tevent.propagationStopped = true;\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Cancel the event\\n\\t\\t\\tevent.stopPropagation();\\n\\t\\t\\tevent.preventDefault();\\n\\n\\t\\t\\treturn false;\\n\\t\\t}\\n\\n\\t\\t// If the mouse event is permitted, return true for the action to go through.\\n\\t\\treturn true;\\n\\t};\\n\\n\\n\\t/**\\n\\t * On actual clicks, determine whether this is a touch-generated click, a click action occurring\\n\\t * naturally after a delay after a touch (which needs to be cancelled to avoid duplication), or\\n\\t * an actual click which should be permitted.\\n\\t *\\n\\t * @param {Event} event\\n\\t * @returns {boolean}\\n\\t */\\n\\tFastClick.prototype.onClick = function(event) {\\n\\t\\tvar permitted;\\n\\n\\t\\t// It's possible for another FastClick-like library delivered with third-party code to fire a click event before FastClick does (issue #44). In that case, set the click-tracking flag back to false and return early. This will cause onTouchEnd to return early.\\n\\t\\tif (this.trackingClick) {\\n\\t\\t\\tthis.targetElement = null;\\n\\t\\t\\tthis.trackingClick = false;\\n\\t\\t\\treturn true;\\n\\t\\t}\\n\\n\\t\\t// Very odd behavior on iOS (issue #18): if a submit element is present inside a form and the user hits enter in the iOS simulator or clicks the Go button on the pop-up OS keyboard the a kind of 'fake' click event will be triggered with the submit-type input element as the target.\\n\\t\\tif (event.target.type === 'submit' && event.detail === 0) {\\n\\t\\t\\treturn true;\\n\\t\\t}\\n\\n\\t\\tpermitted = this.onMouse(event);\\n\\n\\t\\t// Only unset targetElement if the click is not permitted. This will ensure that the check for !targetElement in onMouse fails and the browser's click doesn't go through.\\n\\t\\tif (!permitted) {\\n\\t\\t\\tthis.targetElement = null;\\n\\t\\t}\\n\\n\\t\\t// If clicks are permitted, return true for the action to go through.\\n\\t\\treturn permitted;\\n\\t};\\n\\n\\n\\t/**\\n\\t * Remove all FastClick's event listeners.\\n\\t *\\n\\t * @returns {void}\\n\\t */\\n\\tFastClick.prototype.destroy = function() {\\n\\t\\tvar layer = this.layer;\\n\\n\\t\\tif (deviceIsAndroid) {\\n\\t\\t\\tlayer.removeEventListener('mouseover', this.onMouse, true);\\n\\t\\t\\tlayer.removeEventListener('mousedown', this.onMouse, true);\\n\\t\\t\\tlayer.removeEventListener('mouseup', this.onMouse, true);\\n\\t\\t}\\n\\n\\t\\tlayer.removeEventListener('click', this.onClick, true);\\n\\t\\tlayer.removeEventListener('touchstart', this.onTouchStart, false);\\n\\t\\tlayer.removeEventListener('touchmove', this.onTouchMove, false);\\n\\t\\tlayer.removeEventListener('touchend', this.onTouchEnd, false);\\n\\t\\tlayer.removeEventListener('touchcancel', this.onTouchCancel, false);\\n\\t};\\n\\n\\n\\t/**\\n\\t * Check whether FastClick is needed.\\n\\t *\\n\\t * @param {Element} layer The layer to listen on\\n\\t */\\n\\tFastClick.notNeeded = function(layer) {\\n\\t\\tvar metaViewport;\\n\\t\\tvar chromeVersion;\\n\\t\\tvar blackberryVersion;\\n\\t\\tvar firefoxVersion;\\n\\n\\t\\t// Devices that don't support touch don't need FastClick\\n\\t\\tif (typeof window.ontouchstart === 'undefined') {\\n\\t\\t\\treturn true;\\n\\t\\t}\\n\\n\\t\\t// Chrome version - zero for other browsers\\n\\t\\tchromeVersion = +(/Chrome\\\\/([0-9]+)/.exec(navigator.userAgent) || [,0])[1];\\n\\n\\t\\tif (chromeVersion) {\\n\\n\\t\\t\\tif (deviceIsAndroid) {\\n\\t\\t\\t\\tmetaViewport = document.querySelector('meta[name=viewport]');\\n\\n\\t\\t\\t\\tif (metaViewport) {\\n\\t\\t\\t\\t\\t// Chrome on Android with user-scalable=\\\"no\\\" doesn't need FastClick (issue #89)\\n\\t\\t\\t\\t\\tif (metaViewport.content.indexOf('user-scalable=no') !== -1) {\\n\\t\\t\\t\\t\\t\\treturn true;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t// Chrome 32 and above with width=device-width or less don't need FastClick\\n\\t\\t\\t\\t\\tif (chromeVersion > 31 && document.documentElement.scrollWidth <= window.outerWidth) {\\n\\t\\t\\t\\t\\t\\treturn true;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t// Chrome desktop doesn't need FastClick (issue #15)\\n\\t\\t\\t} else {\\n\\t\\t\\t\\treturn true;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tif (deviceIsBlackBerry10) {\\n\\t\\t\\tblackberryVersion = navigator.userAgent.match(/Version\\\\/([0-9]*)\\\\.([0-9]*)/);\\n\\n\\t\\t\\t// BlackBerry 10.3+ does not require Fastclick library.\\n\\t\\t\\t// https://github.com/ftlabs/fastclick/issues/251\\n\\t\\t\\tif (blackberryVersion[1] >= 10 && blackberryVersion[2] >= 3) {\\n\\t\\t\\t\\tmetaViewport = document.querySelector('meta[name=viewport]');\\n\\n\\t\\t\\t\\tif (metaViewport) {\\n\\t\\t\\t\\t\\t// user-scalable=no eliminates click delay.\\n\\t\\t\\t\\t\\tif (metaViewport.content.indexOf('user-scalable=no') !== -1) {\\n\\t\\t\\t\\t\\t\\treturn true;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t// width=device-width (or less than device-width) eliminates click delay.\\n\\t\\t\\t\\t\\tif (document.documentElement.scrollWidth <= window.outerWidth) {\\n\\t\\t\\t\\t\\t\\treturn true;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t// IE10 with -ms-touch-action: none or manipulation, which disables double-tap-to-zoom (issue #97)\\n\\t\\tif (layer.style.msTouchAction === 'none' || layer.style.touchAction === 'manipulation') {\\n\\t\\t\\treturn true;\\n\\t\\t}\\n\\n\\t\\t// Firefox version - zero for other browsers\\n\\t\\tfirefoxVersion = +(/Firefox\\\\/([0-9]+)/.exec(navigator.userAgent) || [,0])[1];\\n\\n\\t\\tif (firefoxVersion >= 27) {\\n\\t\\t\\t// Firefox 27+ does not have tap delay if the content is not zoomable - https://bugzilla.mozilla.org/show_bug.cgi?id=922896\\n\\n\\t\\t\\tmetaViewport = document.querySelector('meta[name=viewport]');\\n\\t\\t\\tif (metaViewport && (metaViewport.content.indexOf('user-scalable=no') !== -1 || document.documentElement.scrollWidth <= window.outerWidth)) {\\n\\t\\t\\t\\treturn true;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t// IE11: prefixed -ms-touch-action is no longer supported and it's recommended to use non-prefixed version\\n\\t\\t// http://msdn.microsoft.com/en-us/library/windows/apps/Hh767313.aspx\\n\\t\\tif (layer.style.touchAction === 'none' || layer.style.touchAction === 'manipulation') {\\n\\t\\t\\treturn true;\\n\\t\\t}\\n\\n\\t\\treturn false;\\n\\t};\\n\\n\\n\\t/**\\n\\t * Factory method for creating a FastClick object\\n\\t *\\n\\t * @param {Element} layer The layer to listen on\\n\\t * @param {Object} [options={}] The options to override the defaults\\n\\t */\\n\\tFastClick.attach = function(layer, options) {\\n\\t\\treturn new FastClick(layer, options);\\n\\t};\\n\\n  window.FastClick = FastClick;\\n}());\\n\\n/**\\n * MicroEvent - to make any js object an event emitter (server or browser)\\n * \\n * - pure javascript - server compatible, browser compatible\\n * - dont rely on the browser doms\\n * - super simple - you get it immediately, no mystery, no magic involved\\n *\\n * - create a MicroEventDebug with goodies to debug\\n *   - make it safer to use\\n*/\\n\\n/** NOTE: This library is customized for Onsen UI. */\\n\\nvar MicroEvent  = function(){};\\nMicroEvent.prototype  = {\\n  on  : function(event, fct){\\n    this._events = this._events || {};\\n    this._events[event] = this._events[event] || [];\\n    this._events[event].push(fct);\\n  },\\n  once : function(event, fct){\\n    var self = this;\\n    var wrapper = function() {\\n      self.off(event, wrapper);\\n      return fct.apply(null, arguments);\\n    };\\n    this.on(event, wrapper);\\n  },\\n  off  : function(event, fct){\\n    this._events = this._events || {};\\n    if( event in this._events === false  )  return;\\n\\n    this._events[event] = this._events[event]\\n      .filter(function(_fct) {\\n        if (fct) {\\n           return fct !== _fct;\\n        }\\n        else {\\n          return false;\\n        }\\n      });\\n  },\\n  emit : function(event /* , args... */){\\n    this._events = this._events || {};\\n    if( event in this._events === false  )  return;\\n    for(var i = 0; i < this._events[event].length; i++){\\n      this._events[event][i].apply(this, Array.prototype.slice.call(arguments, 1));\\n    }\\n  }\\n};\\n\\n/**\\n * mixin will delegate all MicroEvent.js function in the destination object\\n *\\n * - require('MicroEvent').mixin(Foobar) will make Foobar able to use MicroEvent\\n *\\n * @param {Object} the object which will support MicroEvent\\n*/\\nMicroEvent.mixin  = function(destObject){\\n  var props = ['on', 'once', 'off', 'emit'];\\n  for(var i = 0; i < props.length; i ++){\\n    if( typeof destObject === 'function' ){\\n      destObject.prototype[props[i]]  = MicroEvent.prototype[props[i]];\\n    }else{\\n      destObject[props[i]] = MicroEvent.prototype[props[i]];\\n    }\\n  }\\n}\\n\\n// export in common js\\nif( typeof module !== \\\"undefined\\\" && ('exports' in module)){\\n  module.exports  = MicroEvent;\\n}\\n\\nwindow.MicroEvent = MicroEvent;\\n\\n(function (root) {\\n\\n  // Store setTimeout reference so promise-polyfill will be unaffected by\\n  // other code modifying setTimeout (like sinon.useFakeTimers())\\n  var setTimeoutFunc = setTimeout;\\n\\n  function noop() {}\\n  \\n  // Polyfill for Function.prototype.bind\\n  function bind(fn, thisArg) {\\n    return function () {\\n      fn.apply(thisArg, arguments);\\n    };\\n  }\\n\\n  function Promise(fn) {\\n    if (typeof this !== 'object') throw new TypeError('Promises must be constructed via new');\\n    if (typeof fn !== 'function') throw new TypeError('not a function');\\n    this._state = 0;\\n    this._handled = false;\\n    this._value = undefined;\\n    this._deferreds = [];\\n\\n    doResolve(fn, this);\\n  }\\n\\n  function handle(self, deferred) {\\n    while (self._state === 3) {\\n      self = self._value;\\n    }\\n    if (self._state === 0) {\\n      self._deferreds.push(deferred);\\n      return;\\n    }\\n    self._handled = true;\\n    Promise._immediateFn(function () {\\n      var cb = self._state === 1 ? deferred.onFulfilled : deferred.onRejected;\\n      if (cb === null) {\\n        (self._state === 1 ? resolve : reject)(deferred.promise, self._value);\\n        return;\\n      }\\n      var ret;\\n      try {\\n        ret = cb(self._value);\\n      } catch (e) {\\n        reject(deferred.promise, e);\\n        return;\\n      }\\n      resolve(deferred.promise, ret);\\n    });\\n  }\\n\\n  function resolve(self, newValue) {\\n    try {\\n      // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\\n      if (newValue === self) throw new TypeError('A promise cannot be resolved with itself.');\\n      if (newValue && (typeof newValue === 'object' || typeof newValue === 'function')) {\\n        var then = newValue.then;\\n        if (newValue instanceof Promise) {\\n          self._state = 3;\\n          self._value = newValue;\\n          finale(self);\\n          return;\\n        } else if (typeof then === 'function') {\\n          doResolve(bind(then, newValue), self);\\n          return;\\n        }\\n      }\\n      self._state = 1;\\n      self._value = newValue;\\n      finale(self);\\n    } catch (e) {\\n      reject(self, e);\\n    }\\n  }\\n\\n  function reject(self, newValue) {\\n    self._state = 2;\\n    self._value = newValue;\\n    finale(self);\\n  }\\n\\n  function finale(self) {\\n    if (self._state === 2 && self._deferreds.length === 0) {\\n      Promise._immediateFn(function() {\\n        if (!self._handled) {\\n          Promise._unhandledRejectionFn(self._value);\\n        }\\n      });\\n    }\\n\\n    for (var i = 0, len = self._deferreds.length; i < len; i++) {\\n      handle(self, self._deferreds[i]);\\n    }\\n    self._deferreds = null;\\n  }\\n\\n  function Handler(onFulfilled, onRejected, promise) {\\n    this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\\n    this.onRejected = typeof onRejected === 'function' ? onRejected : null;\\n    this.promise = promise;\\n  }\\n\\n  /**\\n   * Take a potentially misbehaving resolver function and make sure\\n   * onFulfilled and onRejected are only called once.\\n   *\\n   * Makes no guarantees about asynchrony.\\n   */\\n  function doResolve(fn, self) {\\n    var done = false;\\n    try {\\n      fn(function (value) {\\n        if (done) return;\\n        done = true;\\n        resolve(self, value);\\n      }, function (reason) {\\n        if (done) return;\\n        done = true;\\n        reject(self, reason);\\n      });\\n    } catch (ex) {\\n      if (done) return;\\n      done = true;\\n      reject(self, ex);\\n    }\\n  }\\n\\n  Promise.prototype['catch'] = function (onRejected) {\\n    return this.then(null, onRejected);\\n  };\\n\\n  Promise.prototype.then = function (onFulfilled, onRejected) {\\n    var prom = new (this.constructor)(noop);\\n\\n    handle(this, new Handler(onFulfilled, onRejected, prom));\\n    return prom;\\n  };\\n\\n  Promise.all = function (arr) {\\n    var args = Array.prototype.slice.call(arr);\\n\\n    return new Promise(function (resolve, reject) {\\n      if (args.length === 0) return resolve([]);\\n      var remaining = args.length;\\n\\n      function res(i, val) {\\n        try {\\n          if (val && (typeof val === 'object' || typeof val === 'function')) {\\n            var then = val.then;\\n            if (typeof then === 'function') {\\n              then.call(val, function (val) {\\n                res(i, val);\\n              }, reject);\\n              return;\\n            }\\n          }\\n          args[i] = val;\\n          if (--remaining === 0) {\\n            resolve(args);\\n          }\\n        } catch (ex) {\\n          reject(ex);\\n        }\\n      }\\n\\n      for (var i = 0; i < args.length; i++) {\\n        res(i, args[i]);\\n      }\\n    });\\n  };\\n\\n  Promise.resolve = function (value) {\\n    if (value && typeof value === 'object' && value.constructor === Promise) {\\n      return value;\\n    }\\n\\n    return new Promise(function (resolve) {\\n      resolve(value);\\n    });\\n  };\\n\\n  Promise.reject = function (value) {\\n    return new Promise(function (resolve, reject) {\\n      reject(value);\\n    });\\n  };\\n\\n  Promise.race = function (values) {\\n    return new Promise(function (resolve, reject) {\\n      for (var i = 0, len = values.length; i < len; i++) {\\n        values[i].then(resolve, reject);\\n      }\\n    });\\n  };\\n\\n  // Use polyfill for setImmediate for performance gains\\n  Promise._immediateFn = (typeof setImmediate === 'function' && function (fn) { setImmediate(fn); }) ||\\n    function (fn) {\\n      setTimeoutFunc(fn, 0);\\n    };\\n\\n  Promise._unhandledRejectionFn = function _unhandledRejectionFn(err) {\\n    if (typeof console !== 'undefined' && console) {\\n      console.warn('Possible Unhandled Promise Rejection:', err); // eslint-disable-line no-console\\n    }\\n  };\\n\\n  /**\\n   * Set the immediate function to execute callbacks\\n   * @param fn {function} Function to execute\\n   * @deprecated\\n   */\\n  Promise._setImmediateFn = function _setImmediateFn(fn) {\\n    Promise._immediateFn = fn;\\n  };\\n\\n  /**\\n   * Change the function to execute on unhandled rejection\\n   * @param {function} fn Function to execute on unhandled rejection\\n   * @deprecated\\n   */\\n  Promise._setUnhandledRejectionFn = function _setUnhandledRejectionFn(fn) {\\n    Promise._unhandledRejectionFn = fn;\\n  };\\n\\n  if (!window.Promise) {\\n    window.Promise = Promise;\\n  }\\n})(this);\\n\\n/*\\nCopyright (c) 2012 Barnesandnoble.com, llc, Donavon West, and Domenic Denicola\\n\\nPermission is hereby granted, free of charge, to any person obtaining\\na copy of this software and associated documentation files (the\\n\\\"Software\\\"), to deal in the Software without restriction, including\\nwithout limitation the rights to use, copy, modify, merge, publish,\\ndistribute, sublicense, and/or sell copies of the Software, and to\\npermit persons to whom the Software is furnished to do so, subject to\\nthe following conditions:\\n\\nThe above copyright notice and this permission notice shall be\\nincluded in all copies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND,\\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\\n\\n*/\\n(function (global, undefined) {\\n    \\\"use strict\\\";\\n\\n    if (global.setImmediate) {\\n        return;\\n    }\\n\\n    var nextHandle = 1; // Spec says greater than zero\\n    var tasksByHandle = {};\\n    var currentlyRunningATask = false;\\n    var doc = global.document;\\n    var setImmediate;\\n\\n    function addFromSetImmediateArguments(args) {\\n        tasksByHandle[nextHandle] = partiallyApplied.apply(undefined, args);\\n        return nextHandle++;\\n    }\\n\\n    // This function accepts the same arguments as setImmediate, but\\n    // returns a function that requires no arguments.\\n    function partiallyApplied(handler) {\\n        var args = [].slice.call(arguments, 1);\\n        return function() {\\n            if (typeof handler === \\\"function\\\") {\\n                handler.apply(undefined, args);\\n            } else {\\n                (new Function(\\\"\\\" + handler))();\\n            }\\n        };\\n    }\\n\\n    function runIfPresent(handle) {\\n        // From the spec: \\\"Wait until any invocations of this algorithm started before this one have completed.\\\"\\n        // So if we're currently running a task, we'll need to delay this invocation.\\n        if (currentlyRunningATask) {\\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\\n            // \\\"too much recursion\\\" error.\\n            setTimeout(partiallyApplied(runIfPresent, handle), 0);\\n        } else {\\n            var task = tasksByHandle[handle];\\n            if (task) {\\n                currentlyRunningATask = true;\\n                try {\\n                    task();\\n                } finally {\\n                    clearImmediate(handle);\\n                    currentlyRunningATask = false;\\n                }\\n            }\\n        }\\n    }\\n\\n    function clearImmediate(handle) {\\n        delete tasksByHandle[handle];\\n    }\\n\\n    function installNextTickImplementation() {\\n        setImmediate = function() {\\n            var handle = addFromSetImmediateArguments(arguments);\\n            process.nextTick(partiallyApplied(runIfPresent, handle));\\n            return handle;\\n        };\\n    }\\n\\n    function canUsePostMessage() {\\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\\n        if (global.postMessage && !global.importScripts) {\\n            var postMessageIsAsynchronous = true;\\n            var oldOnMessage = global.onmessage;\\n            global.onmessage = function() {\\n                postMessageIsAsynchronous = false;\\n            };\\n            global.postMessage(\\\"\\\", \\\"*\\\");\\n            global.onmessage = oldOnMessage;\\n            return postMessageIsAsynchronous;\\n        }\\n    }\\n\\n    function installPostMessageImplementation() {\\n        // Installs an event handler on `global` for the `message` event: see\\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\\n\\n        var messagePrefix = \\\"setImmediate$\\\" + Math.random() + \\\"$\\\";\\n        var onGlobalMessage = function(event) {\\n            if (event.source === global &&\\n                typeof event.data === \\\"string\\\" &&\\n                event.data.indexOf(messagePrefix) === 0) {\\n                runIfPresent(+event.data.slice(messagePrefix.length));\\n            }\\n        };\\n\\n        if (global.addEventListener) {\\n            global.addEventListener(\\\"message\\\", onGlobalMessage, false);\\n        } else {\\n            global.attachEvent(\\\"onmessage\\\", onGlobalMessage);\\n        }\\n\\n        setImmediate = function() {\\n            var handle = addFromSetImmediateArguments(arguments);\\n            global.postMessage(messagePrefix + handle, \\\"*\\\");\\n            return handle;\\n        };\\n    }\\n\\n    function installMessageChannelImplementation() {\\n        var channel = new MessageChannel();\\n        channel.port1.onmessage = function(event) {\\n            var handle = event.data;\\n            runIfPresent(handle);\\n        };\\n\\n        setImmediate = function() {\\n            var handle = addFromSetImmediateArguments(arguments);\\n            channel.port2.postMessage(handle);\\n            return handle;\\n        };\\n    }\\n\\n    function installReadyStateChangeImplementation() {\\n        var html = doc.documentElement;\\n        setImmediate = function() {\\n            var handle = addFromSetImmediateArguments(arguments);\\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\\n            var script = doc.createElement(\\\"script\\\");\\n            script.onreadystatechange = function () {\\n                runIfPresent(handle);\\n                script.onreadystatechange = null;\\n                html.removeChild(script);\\n                script = null;\\n            };\\n            html.appendChild(script);\\n            return handle;\\n        };\\n    }\\n\\n    function installSetTimeoutImplementation() {\\n        setImmediate = function() {\\n            var handle = addFromSetImmediateArguments(arguments);\\n            setTimeout(partiallyApplied(runIfPresent, handle), 0);\\n            return handle;\\n        };\\n    }\\n\\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\\n\\n    // Don't get fooled by e.g. browserify environments.\\n    if ({}.toString.call(global.process) === \\\"[object process]\\\") {\\n        // For Node.js before 0.9\\n        installNextTickImplementation();\\n\\n    } else if (canUsePostMessage()) {\\n        // For non-IE10 modern browsers\\n        installPostMessageImplementation();\\n\\n    } else if (global.MessageChannel) {\\n        // For web workers, where supported\\n        installMessageChannelImplementation();\\n\\n    } else if (doc && \\\"onreadystatechange\\\" in doc.createElement(\\\"script\\\")) {\\n        // For IE 6–8\\n        installReadyStateChangeImplementation();\\n\\n    } else {\\n        // For older browsers\\n        installSetTimeoutImplementation();\\n    }\\n\\n    attachTo.setImmediate = setImmediate;\\n    attachTo.clearImmediate = clearImmediate;\\n}(self));\\n\\n(function() {\\n    function Viewport() {\\n\\n        this.PRE_IOS7_VIEWPORT = \\\"initial-scale=1, maximum-scale=1, user-scalable=no\\\";\\n        this.IOS7_VIEWPORT = \\\"initial-scale=1, maximum-scale=1, user-scalable=no\\\";\\n        this.DEFAULT_VIEWPORT = \\\"initial-scale=1, maximum-scale=1, user-scalable=no\\\";\\n\\n        this.ensureViewportElement();\\n        this.platform = {};\\n        this.platform.name = this.getPlatformName();\\n        this.platform.version = this.getPlatformVersion();\\n\\n        return this;\\n    };\\n\\n    Viewport.prototype.ensureViewportElement = function(){\\n        this.viewportElement = document.querySelector('meta[name=viewport]');\\n        if(!this.viewportElement){\\n            this.viewportElement = document.createElement('meta');\\n            this.viewportElement.name = \\\"viewport\\\";\\n            document.head.appendChild(this.viewportElement);\\n        }\\n    },\\n\\n    Viewport.prototype.setup = function() {\\n        if (!this.viewportElement) {\\n            return;\\n        }\\n\\n        if (this.viewportElement.getAttribute('data-no-adjust') == \\\"true\\\") {\\n            return;\\n        }\\n\\n        if (!this.viewportElement.getAttribute('content')) {\\n            if (this.platform.name == 'ios') {\\n                if (this.platform.version >= 7 && isWebView()) {\\n                    this.viewportElement.setAttribute('content', this.IOS7_VIEWPORT);\\n                } else {\\n                    this.viewportElement.setAttribute('content', this.PRE_IOS7_VIEWPORT);\\n                }\\n            } else {\\n                this.viewportElement.setAttribute('content', this.DEFAULT_VIEWPORT);\\n            }\\n        }\\n\\n        function isWebView() {\\n            return !!(window.cordova || window.phonegap || window.PhoneGap);\\n        }\\n    };\\n\\n    Viewport.prototype.getPlatformName = function() {\\n        if (navigator.userAgent.match(/Android/i)) {\\n            return \\\"android\\\";\\n        }\\n\\n        if (navigator.userAgent.match(/iPhone|iPad|iPod/i)) {\\n            return \\\"ios\\\";\\n        }\\n\\n        // unknown\\n        return undefined;\\n    };\\n\\n    Viewport.prototype.getPlatformVersion = function() {\\n        var start = window.navigator.userAgent.indexOf('OS ');\\n        return window.Number(window.navigator.userAgent.substr(start + 3, 3).replace('_', '.'));\\n    };\\n\\n    window.Viewport = Viewport;\\n})();\\n\\n// Copyright (c) Microsoft Open Technologies, Inc.  All rights reserved.  Licensed under the Apache License, Version 2.0.  See License.txt in the project root for license information.\\n// JavaScript Dynamic Content shim for Windows Store apps\\n(function () {\\n\\n    if (window.MSApp && MSApp.execUnsafeLocalFunction) {\\n\\n        // Some nodes will have an \\\"attributes\\\" property which shadows the Node.prototype.attributes property\\n        //  and means we don't actually see the attributes of the Node (interestingly the VS debug console\\n        //  appears to suffer from the same issue).\\n        //\\n        var Element_setAttribute = Object.getOwnPropertyDescriptor(Element.prototype, \\\"setAttribute\\\").value;\\n        var Element_removeAttribute = Object.getOwnPropertyDescriptor(Element.prototype, \\\"removeAttribute\\\").value;\\n        var HTMLElement_insertAdjacentHTMLPropertyDescriptor = Object.getOwnPropertyDescriptor(HTMLElement.prototype, \\\"insertAdjacentHTML\\\");\\n        var Node_get_attributes = Object.getOwnPropertyDescriptor(Node.prototype, \\\"attributes\\\").get;\\n        var Node_get_childNodes = Object.getOwnPropertyDescriptor(Node.prototype, \\\"childNodes\\\").get;\\n        var detectionDiv = document.createElement(\\\"div\\\");\\n\\n        function getAttributes(element) {\\n            return Node_get_attributes.call(element);\\n        }\\n\\n        function setAttribute(element, attribute, value) {\\n            try {\\n                Element_setAttribute.call(element, attribute, value);\\n            } catch (e) {\\n                // ignore\\n            }\\n        }\\n\\n        function removeAttribute(element, attribute) {\\n            Element_removeAttribute.call(element, attribute);\\n        }\\n\\n        function childNodes(element) {\\n            return Node_get_childNodes.call(element);\\n        }\\n\\n        function empty(element) {\\n            while (element.childNodes.length) {\\n                element.removeChild(element.lastChild);\\n            }\\n        }\\n\\n        function insertAdjacentHTML(element, position, html) {\\n            HTMLElement_insertAdjacentHTMLPropertyDescriptor.value.call(element, position, html);\\n        }\\n\\n        function inUnsafeMode() {\\n            var isUnsafe = true;\\n            try {\\n                detectionDiv.innerHTML = \\\"<test/>\\\";\\n            }\\n            catch (ex) {\\n                isUnsafe = false;\\n            }\\n\\n            return isUnsafe;\\n        }\\n\\n        function cleanse(html, targetElement) {\\n            var cleaner = document.implementation.createHTMLDocument(\\\"cleaner\\\");\\n            empty(cleaner.documentElement);\\n            MSApp.execUnsafeLocalFunction(function () {\\n                insertAdjacentHTML(cleaner.documentElement, \\\"afterbegin\\\", html);\\n            });\\n\\n            var scripts = cleaner.documentElement.querySelectorAll(\\\"script\\\");\\n            Array.prototype.forEach.call(scripts, function (script) {\\n                switch (script.type.toLowerCase()) {\\n                    case \\\"\\\":\\n                        script.type = \\\"text/inert\\\";\\n                        break;\\n                    case \\\"text/javascript\\\":\\n                    case \\\"text/ecmascript\\\":\\n                    case \\\"text/x-javascript\\\":\\n                    case \\\"text/jscript\\\":\\n                    case \\\"text/livescript\\\":\\n                    case \\\"text/javascript1.1\\\":\\n                    case \\\"text/javascript1.2\\\":\\n                    case \\\"text/javascript1.3\\\":\\n                        script.type = \\\"text/inert-\\\" + script.type.slice(\\\"text/\\\".length);\\n                        break;\\n                    case \\\"application/javascript\\\":\\n                    case \\\"application/ecmascript\\\":\\n                    case \\\"application/x-javascript\\\":\\n                        script.type = \\\"application/inert-\\\" + script.type.slice(\\\"application/\\\".length);\\n                        break;\\n\\n                    default:\\n                        break;\\n                }\\n            });\\n\\n            function cleanseAttributes(element) {\\n                var attributes = getAttributes(element);\\n                if (attributes && attributes.length) {\\n                    // because the attributes collection is live it is simpler to queue up the renames\\n                    var events;\\n                    for (var i = 0, len = attributes.length; i < len; i++) {\\n                        var attribute = attributes[i];\\n                        var name = attribute.name;\\n                        if ((name[0] === \\\"o\\\" || name[0] === \\\"O\\\") &&\\n                            (name[1] === \\\"n\\\" || name[1] === \\\"N\\\")) {\\n                            events = events || [];\\n                            events.push({ name: attribute.name, value: attribute.value });\\n                        }\\n                    }\\n                    if (events) {\\n                        for (var i = 0, len = events.length; i < len; i++) {\\n                            var attribute = events[i];\\n                            removeAttribute(element, attribute.name);\\n                            setAttribute(element, \\\"x-\\\" + attribute.name, attribute.value);\\n                        }\\n                    }\\n                }\\n                var children = childNodes(element);\\n                for (var i = 0, len = children.length; i < len; i++) {\\n                    cleanseAttributes(children[i]);\\n                }\\n            }\\n            cleanseAttributes(cleaner.documentElement);\\n\\n            var cleanedNodes = [];\\n\\n            if (targetElement.tagName === 'HTML') {\\n                cleanedNodes = Array.prototype.slice.call(document.adoptNode(cleaner.documentElement).childNodes);\\n            } else {\\n                if (cleaner.head) {\\n                    cleanedNodes = cleanedNodes.concat(Array.prototype.slice.call(document.adoptNode(cleaner.head).childNodes));\\n                }\\n                if (cleaner.body) {\\n                    cleanedNodes = cleanedNodes.concat(Array.prototype.slice.call(document.adoptNode(cleaner.body).childNodes));\\n                }\\n            }\\n\\n            return cleanedNodes;\\n        }\\n\\n        function cleansePropertySetter(property, setter) {\\n            var propertyDescriptor = Object.getOwnPropertyDescriptor(HTMLElement.prototype, property);\\n            var originalSetter = propertyDescriptor.set;\\n            Object.defineProperty(HTMLElement.prototype, property, {\\n                get: propertyDescriptor.get,\\n                set: function (value) {\\n                    if(window.WinJS && window.WinJS._execUnsafe && inUnsafeMode()) {\\n                        originalSetter.call(this, value);\\n                    } else {\\n                        var that = this;\\n                        var nodes = cleanse(value, that);\\n                        MSApp.execUnsafeLocalFunction(function () {\\n                            setter(propertyDescriptor, that, nodes);\\n                        });\\n                    }\\n                },\\n                enumerable: propertyDescriptor.enumerable,\\n                configurable: propertyDescriptor.configurable,\\n            });\\n        }\\n        cleansePropertySetter(\\\"innerHTML\\\", function (propertyDescriptor, target, elements) {\\n            empty(target);\\n            for (var i = 0, len = elements.length; i < len; i++) {\\n                target.appendChild(elements[i]);\\n            }\\n        });\\n        cleansePropertySetter(\\\"outerHTML\\\", function (propertyDescriptor, target, elements) {\\n            for (var i = 0, len = elements.length; i < len; i++) {\\n                target.insertAdjacentElement(\\\"afterend\\\", elements[i]);\\n            }\\n            target.parentNode.removeChild(target);\\n        });\\n\\n    }\\n\\n}());\\n(function (global, factory) {\\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\\n    typeof define === 'function' && define.amd ? define(factory) :\\n    (global.ons = factory());\\n}(this, (function () { 'use strict';\\n\\n// For @webcomponents/custom-elements\\nif (window.customElements) {\\n    // even if native CE1 impl exists, use polyfill\\n    window.customElements.forcePolyfill = true;\\n}\\n\\n(function () {\\n  'use strict';\\n  var g = new function () {}();var aa = new Set(\\\"annotation-xml color-profile font-face font-face-src font-face-uri font-face-format font-face-name missing-glyph\\\".split(\\\" \\\"));function k(b) {\\n    var a = aa.has(b);b = /^[a-z][.0-9_a-z]*-[\\\\-.0-9_a-z]*$/.test(b);return !a && b;\\n  }function l(b) {\\n    var a = b.isConnected;if (void 0 !== a) return a;for (; b && !(b.__CE_isImportDocument || b instanceof Document);) {\\n      b = b.parentNode || (window.ShadowRoot && b instanceof ShadowRoot ? b.host : void 0);\\n    }return !(!b || !(b.__CE_isImportDocument || b instanceof Document));\\n  }\\n  function m(b, a) {\\n    for (; a && a !== b && !a.nextSibling;) {\\n      a = a.parentNode;\\n    }return a && a !== b ? a.nextSibling : null;\\n  }\\n  function n(b, a, e) {\\n    e = e ? e : new Set();for (var c = b; c;) {\\n      if (c.nodeType === Node.ELEMENT_NODE) {\\n        var d = c;a(d);var h = d.localName;if (\\\"link\\\" === h && \\\"import\\\" === d.getAttribute(\\\"rel\\\")) {\\n          c = d.import;if (c instanceof Node && !e.has(c)) for (e.add(c), c = c.firstChild; c; c = c.nextSibling) {\\n            n(c, a, e);\\n          }c = m(b, d);continue;\\n        } else if (\\\"template\\\" === h) {\\n          c = m(b, d);continue;\\n        }if (d = d.__CE_shadowRoot) for (d = d.firstChild; d; d = d.nextSibling) {\\n          n(d, a, e);\\n        }\\n      }c = c.firstChild ? c.firstChild : m(b, c);\\n    }\\n  }function q(b, a, e) {\\n    b[a] = e;\\n  }function r() {\\n    this.a = new Map();this.f = new Map();this.c = [];this.b = !1;\\n  }function ba(b, a, e) {\\n    b.a.set(a, e);b.f.set(e.constructor, e);\\n  }function t(b, a) {\\n    b.b = !0;b.c.push(a);\\n  }function v(b, a) {\\n    b.b && n(a, function (a) {\\n      return w(b, a);\\n    });\\n  }function w(b, a) {\\n    if (b.b && !a.__CE_patched) {\\n      a.__CE_patched = !0;for (var e = 0; e < b.c.length; e++) {\\n        b.c[e](a);\\n      }\\n    }\\n  }function x(b, a) {\\n    var e = [];n(a, function (b) {\\n      return e.push(b);\\n    });for (a = 0; a < e.length; a++) {\\n      var c = e[a];1 === c.__CE_state ? l(c) && b.connectedCallback(c) : y(b, c);\\n    }\\n  }\\n  function z(b, a) {\\n    var e = [];n(a, function (b) {\\n      return e.push(b);\\n    });for (a = 0; a < e.length; a++) {\\n      var c = e[a];1 === c.__CE_state && b.disconnectedCallback(c);\\n    }\\n  }\\n  function A(b, a, e) {\\n    e = e ? e : new Set();var c = [];n(a, function (d) {\\n      if (\\\"link\\\" === d.localName && \\\"import\\\" === d.getAttribute(\\\"rel\\\")) {\\n        var a = d.import;a instanceof Node && \\\"complete\\\" === a.readyState ? (a.__CE_isImportDocument = !0, a.__CE_hasRegistry = !0) : d.addEventListener(\\\"load\\\", function () {\\n          var a = d.import;a.__CE_documentLoadHandled || (a.__CE_documentLoadHandled = !0, a.__CE_isImportDocument = !0, a.__CE_hasRegistry = !0, new Set(e), e.delete(a), A(b, a, e));\\n        });\\n      } else c.push(d);\\n    }, e);if (b.b) for (a = 0; a < c.length; a++) {\\n      w(b, c[a]);\\n    }for (a = 0; a < c.length; a++) {\\n      y(b, c[a]);\\n    }\\n  }\\n  function y(b, a) {\\n    if (void 0 === a.__CE_state) {\\n      var e = b.a.get(a.localName);if (e) {\\n        e.constructionStack.push(a);var c = e.constructor;try {\\n          try {\\n            if (new c() !== a) throw Error(\\\"The custom element constructor did not produce the element being upgraded.\\\");\\n          } finally {\\n            e.constructionStack.pop();\\n          }\\n        } catch (f) {\\n          throw a.__CE_state = 2, f;\\n        }a.__CE_state = 1;a.__CE_definition = e;if (e.attributeChangedCallback) for (e = e.observedAttributes, c = 0; c < e.length; c++) {\\n          var d = e[c],\\n              h = a.getAttribute(d);null !== h && b.attributeChangedCallback(a, d, null, h, null);\\n        }l(a) && b.connectedCallback(a);\\n      }\\n    }\\n  }\\n  r.prototype.connectedCallback = function (b) {\\n    var a = b.__CE_definition;a.connectedCallback && a.connectedCallback.call(b);b.i = !0;\\n  };r.prototype.disconnectedCallback = function (b) {\\n    b.i || this.connectedCallback(b);var a = b.__CE_definition;a.disconnectedCallback && a.disconnectedCallback.call(b);b.i = void 0;\\n  };r.prototype.attributeChangedCallback = function (b, a, e, c, d) {\\n    var h = b.__CE_definition;h.attributeChangedCallback && -1 < h.observedAttributes.indexOf(a) && h.attributeChangedCallback.call(b, a, e, c, d);\\n  };function B(b, a) {\\n    this.c = b;this.a = a;this.b = void 0;A(this.c, this.a);\\\"loading\\\" === this.a.readyState && (this.b = new MutationObserver(this.f.bind(this)), this.b.observe(this.a, { childList: !0, subtree: !0 }));\\n  }function C(b) {\\n    b.b && b.b.disconnect();\\n  }B.prototype.f = function (b) {\\n    var a = this.a.readyState;\\\"interactive\\\" !== a && \\\"complete\\\" !== a || C(this);for (a = 0; a < b.length; a++) {\\n      for (var e = b[a].addedNodes, c = 0; c < e.length; c++) {\\n        A(this.c, e[c]);\\n      }\\n    }\\n  };function ca() {\\n    var b = this;this.b = this.a = void 0;this.c = new Promise(function (a) {\\n      b.b = a;b.a && a(b.a);\\n    });\\n  }function D(b) {\\n    if (b.a) throw Error(\\\"Already resolved.\\\");b.a = void 0;b.b && b.b(void 0);\\n  }function E(b) {\\n    this.f = !1;this.a = b;this.h = new Map();this.g = function (b) {\\n      return b();\\n    };this.b = !1;this.c = [];this.l = new B(b, document);\\n  }\\n  E.prototype.m = function (b, a) {\\n    var e = this;if (!(a instanceof Function)) throw new TypeError(\\\"Custom element constructors must be functions.\\\");if (!k(b)) throw new SyntaxError(\\\"The element name '\\\" + b + \\\"' is not valid.\\\");if (this.a.a.get(b)) throw Error(\\\"A custom element with name '\\\" + b + \\\"' has already been defined.\\\");if (this.f) throw Error(\\\"A custom element is already being defined.\\\");this.f = !0;var c, d, h, f, u;try {\\n      var p = function p(b) {\\n        var a = P[b];if (void 0 !== a && !(a instanceof Function)) throw Error(\\\"The '\\\" + b + \\\"' callback must be a function.\\\");\\n        return a;\\n      },\\n          P = a.prototype;if (!(P instanceof Object)) throw new TypeError(\\\"The custom element constructor's prototype is not an object.\\\");c = p(\\\"connectedCallback\\\");d = p(\\\"disconnectedCallback\\\");h = p(\\\"adoptedCallback\\\");f = p(\\\"attributeChangedCallback\\\");u = a.observedAttributes || [];\\n    } catch (va) {\\n      return;\\n    } finally {\\n      this.f = !1;\\n    }ba(this.a, b, { localName: b, constructor: a, connectedCallback: c, disconnectedCallback: d, adoptedCallback: h, attributeChangedCallback: f, observedAttributes: u, constructionStack: [] });this.c.push(b);this.b || (this.b = !0, this.g(function () {\\n      if (!1 !== e.b) for (e.b = !1, A(e.a, document); 0 < e.c.length;) {\\n        var b = e.c.shift();(b = e.h.get(b)) && D(b);\\n      }\\n    }));\\n  };E.prototype.get = function (b) {\\n    if (b = this.a.a.get(b)) return b.constructor;\\n  };E.prototype.s = function (b) {\\n    if (!k(b)) return Promise.reject(new SyntaxError(\\\"'\\\" + b + \\\"' is not a valid custom element name.\\\"));var a = this.h.get(b);if (a) return a.c;a = new ca();this.h.set(b, a);this.a.a.get(b) && -1 === this.c.indexOf(b) && D(a);return a.c;\\n  };E.prototype.o = function (b) {\\n    C(this.l);var a = this.g;this.g = function (e) {\\n      return b(function () {\\n        return a(e);\\n      });\\n    };\\n  };\\n  window.CustomElementRegistry = E;E.prototype.define = E.prototype.m;E.prototype.get = E.prototype.get;E.prototype.whenDefined = E.prototype.s;E.prototype.polyfillWrapFlushCallback = E.prototype.o;var F = window.Document.prototype.createElement,\\n      da = window.Document.prototype.createElementNS,\\n      ea = window.Document.prototype.importNode,\\n      fa = window.Document.prototype.prepend,\\n      ga = window.Document.prototype.append,\\n      G = window.Node.prototype.cloneNode,\\n      H = window.Node.prototype.appendChild,\\n      I = window.Node.prototype.insertBefore,\\n      J = window.Node.prototype.removeChild,\\n      K = window.Node.prototype.replaceChild,\\n      L = Object.getOwnPropertyDescriptor(window.Node.prototype, \\\"textContent\\\"),\\n      M = window.Element.prototype.attachShadow,\\n      N = Object.getOwnPropertyDescriptor(window.Element.prototype, \\\"innerHTML\\\"),\\n      O = window.Element.prototype.getAttribute,\\n      Q = window.Element.prototype.setAttribute,\\n      R = window.Element.prototype.removeAttribute,\\n      S = window.Element.prototype.getAttributeNS,\\n      T = window.Element.prototype.setAttributeNS,\\n      U = window.Element.prototype.removeAttributeNS,\\n      V = window.Element.prototype.insertAdjacentElement,\\n      ha = window.Element.prototype.prepend,\\n      ia = window.Element.prototype.append,\\n      ja = window.Element.prototype.before,\\n      ka = window.Element.prototype.after,\\n      la = window.Element.prototype.replaceWith,\\n      ma = window.Element.prototype.remove,\\n      na = window.HTMLElement,\\n      W = Object.getOwnPropertyDescriptor(window.HTMLElement.prototype, \\\"innerHTML\\\"),\\n      X = window.HTMLElement.prototype.insertAdjacentElement;function oa() {\\n    var b = Y;window.HTMLElement = function () {\\n      function a() {\\n        var a = this.constructor,\\n            c = b.f.get(a);if (!c) throw Error(\\\"The custom element being constructed was not registered with `customElements`.\\\");var d = c.constructionStack;if (!d.length) return d = F.call(document, c.localName), Object.setPrototypeOf(d, a.prototype), d.__CE_state = 1, d.__CE_definition = c, w(b, d), d;var c = d.length - 1,\\n            h = d[c];if (h === g) throw Error(\\\"The HTMLElement constructor was either called reentrantly for this constructor or called multiple times.\\\");\\n        d[c] = g;Object.setPrototypeOf(h, a.prototype);w(b, h);return h;\\n      }a.prototype = na.prototype;return a;\\n    }();\\n  }function pa(b, a, e) {\\n    a.prepend = function (a) {\\n      for (var d = [], c = 0; c < arguments.length; ++c) {\\n        d[c - 0] = arguments[c];\\n      }c = d.filter(function (b) {\\n        return b instanceof Node && l(b);\\n      });e.j.apply(this, d);for (var f = 0; f < c.length; f++) {\\n        z(b, c[f]);\\n      }if (l(this)) for (c = 0; c < d.length; c++) {\\n        f = d[c], f instanceof Element && x(b, f);\\n      }\\n    };a.append = function (a) {\\n      for (var d = [], c = 0; c < arguments.length; ++c) {\\n        d[c - 0] = arguments[c];\\n      }c = d.filter(function (b) {\\n        return b instanceof Node && l(b);\\n      });e.append.apply(this, d);for (var f = 0; f < c.length; f++) {\\n        z(b, c[f]);\\n      }if (l(this)) for (c = 0; c < d.length; c++) {\\n        f = d[c], f instanceof Element && x(b, f);\\n      }\\n    };\\n  }function qa() {\\n    var b = Y;q(Document.prototype, \\\"createElement\\\", function (a) {\\n      if (this.__CE_hasRegistry) {\\n        var e = b.a.get(a);if (e) return new e.constructor();\\n      }a = F.call(this, a);w(b, a);return a;\\n    });q(Document.prototype, \\\"importNode\\\", function (a, e) {\\n      a = ea.call(this, a, e);this.__CE_hasRegistry ? A(b, a) : v(b, a);return a;\\n    });q(Document.prototype, \\\"createElementNS\\\", function (a, e) {\\n      if (this.__CE_hasRegistry && (null === a || \\\"http://www.w3.org/1999/xhtml\\\" === a)) {\\n        var c = b.a.get(e);if (c) return new c.constructor();\\n      }a = da.call(this, a, e);w(b, a);return a;\\n    });\\n    pa(b, Document.prototype, { j: fa, append: ga });\\n  }function ra() {\\n    var b = Y;function a(a, c) {\\n      Object.defineProperty(a, \\\"textContent\\\", { enumerable: c.enumerable, configurable: !0, get: c.get, set: function set(a) {\\n          if (this.nodeType === Node.TEXT_NODE) c.set.call(this, a);else {\\n            var d = void 0;if (this.firstChild) {\\n              var e = this.childNodes,\\n                  u = e.length;if (0 < u && l(this)) for (var d = Array(u), p = 0; p < u; p++) {\\n                d[p] = e[p];\\n              }\\n            }c.set.call(this, a);if (d) for (a = 0; a < d.length; a++) {\\n              z(b, d[a]);\\n            }\\n          }\\n        } });\\n    }q(Node.prototype, \\\"insertBefore\\\", function (a, c) {\\n      if (a instanceof DocumentFragment) {\\n        var d = Array.prototype.slice.apply(a.childNodes);\\n        a = I.call(this, a, c);if (l(this)) for (c = 0; c < d.length; c++) {\\n          x(b, d[c]);\\n        }return a;\\n      }d = l(a);c = I.call(this, a, c);d && z(b, a);l(this) && x(b, a);return c;\\n    });q(Node.prototype, \\\"appendChild\\\", function (a) {\\n      if (a instanceof DocumentFragment) {\\n        var c = Array.prototype.slice.apply(a.childNodes);a = H.call(this, a);if (l(this)) for (var d = 0; d < c.length; d++) {\\n          x(b, c[d]);\\n        }return a;\\n      }c = l(a);d = H.call(this, a);c && z(b, a);l(this) && x(b, a);return d;\\n    });q(Node.prototype, \\\"cloneNode\\\", function (a) {\\n      a = G.call(this, a);this.ownerDocument.__CE_hasRegistry ? A(b, a) : v(b, a);\\n      return a;\\n    });q(Node.prototype, \\\"removeChild\\\", function (a) {\\n      var c = l(a),\\n          d = J.call(this, a);c && z(b, a);return d;\\n    });q(Node.prototype, \\\"replaceChild\\\", function (a, c) {\\n      if (a instanceof DocumentFragment) {\\n        var d = Array.prototype.slice.apply(a.childNodes);a = K.call(this, a, c);if (l(this)) for (z(b, c), c = 0; c < d.length; c++) {\\n          x(b, d[c]);\\n        }return a;\\n      }var d = l(a),\\n          e = K.call(this, a, c),\\n          f = l(this);f && z(b, c);d && z(b, a);f && x(b, a);return e;\\n    });L && L.get ? a(Node.prototype, L) : t(b, function (b) {\\n      a(b, { enumerable: !0, configurable: !0, get: function get() {\\n          for (var a = [], b = 0; b < this.childNodes.length; b++) {\\n            a.push(this.childNodes[b].textContent);\\n          }return a.join(\\\"\\\");\\n        }, set: function set(a) {\\n          for (; this.firstChild;) {\\n            J.call(this, this.firstChild);\\n          }H.call(this, document.createTextNode(a));\\n        } });\\n    });\\n  }function sa(b) {\\n    var a = Element.prototype;a.before = function (a) {\\n      for (var c = [], d = 0; d < arguments.length; ++d) {\\n        c[d - 0] = arguments[d];\\n      }d = c.filter(function (a) {\\n        return a instanceof Node && l(a);\\n      });ja.apply(this, c);for (var e = 0; e < d.length; e++) {\\n        z(b, d[e]);\\n      }if (l(this)) for (d = 0; d < c.length; d++) {\\n        e = c[d], e instanceof Element && x(b, e);\\n      }\\n    };a.after = function (a) {\\n      for (var c = [], d = 0; d < arguments.length; ++d) {\\n        c[d - 0] = arguments[d];\\n      }d = c.filter(function (a) {\\n        return a instanceof Node && l(a);\\n      });ka.apply(this, c);for (var e = 0; e < d.length; e++) {\\n        z(b, d[e]);\\n      }if (l(this)) for (d = 0; d < c.length; d++) {\\n        e = c[d], e instanceof Element && x(b, e);\\n      }\\n    };a.replaceWith = function (a) {\\n      for (var c = [], d = 0; d < arguments.length; ++d) {\\n        c[d - 0] = arguments[d];\\n      }var d = c.filter(function (a) {\\n        return a instanceof Node && l(a);\\n      }),\\n          e = l(this);la.apply(this, c);for (var f = 0; f < d.length; f++) {\\n        z(b, d[f]);\\n      }if (e) for (z(b, this), d = 0; d < c.length; d++) {\\n        e = c[d], e instanceof Element && x(b, e);\\n      }\\n    };a.remove = function () {\\n      var a = l(this);ma.call(this);a && z(b, this);\\n    };\\n  }function ta() {\\n    var b = Y;function a(a, c) {\\n      Object.defineProperty(a, \\\"innerHTML\\\", { enumerable: c.enumerable, configurable: !0, get: c.get, set: function set(a) {\\n          var d = this,\\n              e = void 0;l(this) && (e = [], n(this, function (a) {\\n            a !== d && e.push(a);\\n          }));c.set.call(this, a);if (e) for (var f = 0; f < e.length; f++) {\\n            var h = e[f];1 === h.__CE_state && b.disconnectedCallback(h);\\n          }this.ownerDocument.__CE_hasRegistry ? A(b, this) : v(b, this);return a;\\n        } });\\n    }function e(a, c) {\\n      q(a, \\\"insertAdjacentElement\\\", function (a, d) {\\n        var e = l(d);a = c.call(this, a, d);e && z(b, d);l(a) && x(b, d);\\n        return a;\\n      });\\n    }M ? q(Element.prototype, \\\"attachShadow\\\", function (a) {\\n      return this.__CE_shadowRoot = a = M.call(this, a);\\n    }) : console.warn(\\\"Custom Elements: `Element#attachShadow` was not patched.\\\");if (N && N.get) a(Element.prototype, N);else if (W && W.get) a(HTMLElement.prototype, W);else {\\n      var c = F.call(document, \\\"div\\\");t(b, function (b) {\\n        a(b, { enumerable: !0, configurable: !0, get: function get() {\\n            return G.call(this, !0).innerHTML;\\n          }, set: function set(a) {\\n            var b = \\\"template\\\" === this.localName ? this.content : this;for (c.innerHTML = a; 0 < b.childNodes.length;) {\\n              J.call(b, b.childNodes[0]);\\n            }for (; 0 < c.childNodes.length;) {\\n              H.call(b, c.childNodes[0]);\\n            }\\n          } });\\n      });\\n    }q(Element.prototype, \\\"setAttribute\\\", function (a, c) {\\n      if (1 !== this.__CE_state) return Q.call(this, a, c);var d = O.call(this, a);Q.call(this, a, c);c = O.call(this, a);b.attributeChangedCallback(this, a, d, c, null);\\n    });q(Element.prototype, \\\"setAttributeNS\\\", function (a, c, e) {\\n      if (1 !== this.__CE_state) return T.call(this, a, c, e);var d = S.call(this, a, c);T.call(this, a, c, e);e = S.call(this, a, c);b.attributeChangedCallback(this, c, d, e, a);\\n    });q(Element.prototype, \\\"removeAttribute\\\", function (a) {\\n      if (1 !== this.__CE_state) return R.call(this, a);var c = O.call(this, a);R.call(this, a);null !== c && b.attributeChangedCallback(this, a, c, null, null);\\n    });q(Element.prototype, \\\"removeAttributeNS\\\", function (a, c) {\\n      if (1 !== this.__CE_state) return U.call(this, a, c);var d = S.call(this, a, c);U.call(this, a, c);var e = S.call(this, a, c);d !== e && b.attributeChangedCallback(this, c, d, e, a);\\n    });X ? e(HTMLElement.prototype, X) : V ? e(Element.prototype, V) : console.warn(\\\"Custom Elements: `Element#insertAdjacentElement` was not patched.\\\");\\n    pa(b, Element.prototype, { j: ha, append: ia });sa(b);\\n  } /*\\n     Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\\n     This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\\n     The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\\n     The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\\n     Code distributed by Google as part of the polymer project is also\\n     subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\\n     */\\n  var Z = window.customElements;if (!Z || Z.forcePolyfill || \\\"function\\\" != typeof Z.define || \\\"function\\\" != typeof Z.get) {\\n    var Y = new r();oa();qa();ra();ta();document.__CE_hasRegistry = !0;var ua = new E(Y);Object.defineProperty(window, \\\"customElements\\\", { configurable: !0, enumerable: !0, value: ua });\\n  }\\n}).call(self);\\n\\nfunction createCommonjsModule(fn, module) {\\n\\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\\n}\\n\\nvar _global = createCommonjsModule(function (module) {\\n  // https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\\n  var global = module.exports = typeof window != 'undefined' && window.Math == Math ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();\\n  if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\\n});\\n\\nvar _core = createCommonjsModule(function (module) {\\n  var core = module.exports = { version: '2.4.0' };\\n  if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\\n});\\n\\nvar _typeof = typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\" ? function (obj) {\\n  return typeof obj;\\n} : function (obj) {\\n  return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj;\\n};\\n\\n\\n\\n\\n\\nvar asyncGenerator = function () {\\n  function AwaitValue(value) {\\n    this.value = value;\\n  }\\n\\n  function AsyncGenerator(gen) {\\n    var front, back;\\n\\n    function send(key, arg) {\\n      return new Promise(function (resolve, reject) {\\n        var request = {\\n          key: key,\\n          arg: arg,\\n          resolve: resolve,\\n          reject: reject,\\n          next: null\\n        };\\n\\n        if (back) {\\n          back = back.next = request;\\n        } else {\\n          front = back = request;\\n          resume(key, arg);\\n        }\\n      });\\n    }\\n\\n    function resume(key, arg) {\\n      try {\\n        var result = gen[key](arg);\\n        var value = result.value;\\n\\n        if (value instanceof AwaitValue) {\\n          Promise.resolve(value.value).then(function (arg) {\\n            resume(\\\"next\\\", arg);\\n          }, function (arg) {\\n            resume(\\\"throw\\\", arg);\\n          });\\n        } else {\\n          settle(result.done ? \\\"return\\\" : \\\"normal\\\", result.value);\\n        }\\n      } catch (err) {\\n        settle(\\\"throw\\\", err);\\n      }\\n    }\\n\\n    function settle(type, value) {\\n      switch (type) {\\n        case \\\"return\\\":\\n          front.resolve({\\n            value: value,\\n            done: true\\n          });\\n          break;\\n\\n        case \\\"throw\\\":\\n          front.reject(value);\\n          break;\\n\\n        default:\\n          front.resolve({\\n            value: value,\\n            done: false\\n          });\\n          break;\\n      }\\n\\n      front = front.next;\\n\\n      if (front) {\\n        resume(front.key, front.arg);\\n      } else {\\n        back = null;\\n      }\\n    }\\n\\n    this._invoke = send;\\n\\n    if (typeof gen.return !== \\\"function\\\") {\\n      this.return = undefined;\\n    }\\n  }\\n\\n  if (typeof Symbol === \\\"function\\\" && Symbol.asyncIterator) {\\n    AsyncGenerator.prototype[Symbol.asyncIterator] = function () {\\n      return this;\\n    };\\n  }\\n\\n  AsyncGenerator.prototype.next = function (arg) {\\n    return this._invoke(\\\"next\\\", arg);\\n  };\\n\\n  AsyncGenerator.prototype.throw = function (arg) {\\n    return this._invoke(\\\"throw\\\", arg);\\n  };\\n\\n  AsyncGenerator.prototype.return = function (arg) {\\n    return this._invoke(\\\"return\\\", arg);\\n  };\\n\\n  return {\\n    wrap: function (fn) {\\n      return function () {\\n        return new AsyncGenerator(fn.apply(this, arguments));\\n      };\\n    },\\n    await: function (value) {\\n      return new AwaitValue(value);\\n    }\\n  };\\n}();\\n\\n\\n\\n\\n\\nvar classCallCheck = function (instance, Constructor) {\\n  if (!(instance instanceof Constructor)) {\\n    throw new TypeError(\\\"Cannot call a class as a function\\\");\\n  }\\n};\\n\\nvar createClass = function () {\\n  function defineProperties(target, props) {\\n    for (var i = 0; i < props.length; i++) {\\n      var descriptor = props[i];\\n      descriptor.enumerable = descriptor.enumerable || false;\\n      descriptor.configurable = true;\\n      if (\\\"value\\\" in descriptor) descriptor.writable = true;\\n      Object.defineProperty(target, descriptor.key, descriptor);\\n    }\\n  }\\n\\n  return function (Constructor, protoProps, staticProps) {\\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\\n    if (staticProps) defineProperties(Constructor, staticProps);\\n    return Constructor;\\n  };\\n}();\\n\\n\\n\\n\\n\\n\\n\\nvar _extends = Object.assign || function (target) {\\n  for (var i = 1; i < arguments.length; i++) {\\n    var source = arguments[i];\\n\\n    for (var key in source) {\\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\\n        target[key] = source[key];\\n      }\\n    }\\n  }\\n\\n  return target;\\n};\\n\\nvar get$1 = function get$1(object, property, receiver) {\\n  if (object === null) object = Function.prototype;\\n  var desc = Object.getOwnPropertyDescriptor(object, property);\\n\\n  if (desc === undefined) {\\n    var parent = Object.getPrototypeOf(object);\\n\\n    if (parent === null) {\\n      return undefined;\\n    } else {\\n      return get$1(parent, property, receiver);\\n    }\\n  } else if (\\\"value\\\" in desc) {\\n    return desc.value;\\n  } else {\\n    var getter = desc.get;\\n\\n    if (getter === undefined) {\\n      return undefined;\\n    }\\n\\n    return getter.call(receiver);\\n  }\\n};\\n\\nvar inherits = function (subClass, superClass) {\\n  if (typeof superClass !== \\\"function\\\" && superClass !== null) {\\n    throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass);\\n  }\\n\\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\\n    constructor: {\\n      value: subClass,\\n      enumerable: false,\\n      writable: true,\\n      configurable: true\\n    }\\n  });\\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\\n};\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\nvar possibleConstructorReturn = function (self, call) {\\n  if (!self) {\\n    throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\");\\n  }\\n\\n  return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self;\\n};\\n\\n\\n\\nvar set$1 = function set$1(object, property, value, receiver) {\\n  var desc = Object.getOwnPropertyDescriptor(object, property);\\n\\n  if (desc === undefined) {\\n    var parent = Object.getPrototypeOf(object);\\n\\n    if (parent !== null) {\\n      set$1(parent, property, value, receiver);\\n    }\\n  } else if (\\\"value\\\" in desc && desc.writable) {\\n    desc.value = value;\\n  } else {\\n    var setter = desc.set;\\n\\n    if (setter !== undefined) {\\n      setter.call(receiver, value);\\n    }\\n  }\\n\\n  return value;\\n};\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\nvar toConsumableArray = function (arr) {\\n  if (Array.isArray(arr)) {\\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\\n\\n    return arr2;\\n  } else {\\n    return Array.from(arr);\\n  }\\n};\\n\\nvar _isObject = function _isObject(it) {\\n  return (typeof it === 'undefined' ? 'undefined' : _typeof(it)) === 'object' ? it !== null : typeof it === 'function';\\n};\\n\\nvar _anObject = function _anObject(it) {\\n  if (!_isObject(it)) throw TypeError(it + ' is not an object!');\\n  return it;\\n};\\n\\nvar _fails = function _fails(exec) {\\n  try {\\n    return !!exec();\\n  } catch (e) {\\n    return true;\\n  }\\n};\\n\\n// Thank's IE8 for his funny defineProperty\\nvar _descriptors = !_fails(function () {\\n  return Object.defineProperty({}, 'a', { get: function get() {\\n      return 7;\\n    } }).a != 7;\\n});\\n\\nvar document$1 = _global.document;\\nvar is = _isObject(document$1) && _isObject(document$1.createElement);\\nvar _domCreate = function _domCreate(it) {\\n  return is ? document$1.createElement(it) : {};\\n};\\n\\nvar _ie8DomDefine = !_descriptors && !_fails(function () {\\n  return Object.defineProperty(_domCreate('div'), 'a', { get: function get() {\\n      return 7;\\n    } }).a != 7;\\n});\\n\\n// 7.1.1 ToPrimitive(input [, PreferredType])\\n\\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\\n// and the second argument - flag - preferred type is a string\\nvar _toPrimitive = function _toPrimitive(it, S) {\\n  if (!_isObject(it)) return it;\\n  var fn, val;\\n  if (S && typeof (fn = it.toString) == 'function' && !_isObject(val = fn.call(it))) return val;\\n  if (typeof (fn = it.valueOf) == 'function' && !_isObject(val = fn.call(it))) return val;\\n  if (!S && typeof (fn = it.toString) == 'function' && !_isObject(val = fn.call(it))) return val;\\n  throw TypeError(\\\"Can't convert object to primitive value\\\");\\n};\\n\\nvar dP = Object.defineProperty;\\n\\nvar f$1 = _descriptors ? Object.defineProperty : function defineProperty(O, P, Attributes) {\\n  _anObject(O);\\n  P = _toPrimitive(P, true);\\n  _anObject(Attributes);\\n  if (_ie8DomDefine) try {\\n    return dP(O, P, Attributes);\\n  } catch (e) {/* empty */}\\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\\n  if ('value' in Attributes) O[P] = Attributes.value;\\n  return O;\\n};\\n\\nvar _objectDp = {\\n  f: f$1\\n};\\n\\nvar _propertyDesc = function _propertyDesc(bitmap, value) {\\n  return {\\n    enumerable: !(bitmap & 1),\\n    configurable: !(bitmap & 2),\\n    writable: !(bitmap & 4),\\n    value: value\\n  };\\n};\\n\\nvar _hide$1 = _descriptors ? function (object, key, value) {\\n  return _objectDp.f(object, key, _propertyDesc(1, value));\\n} : function (object, key, value) {\\n  object[key] = value;\\n  return object;\\n};\\n\\nvar hasOwnProperty = {}.hasOwnProperty;\\nvar _has = function _has(it, key) {\\n  return hasOwnProperty.call(it, key);\\n};\\n\\nvar id = 0;\\nvar px = Math.random();\\nvar _uid = function _uid(key) {\\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\\n};\\n\\nvar _redefine = createCommonjsModule(function (module) {\\n  var SRC = _uid('src'),\\n      TO_STRING = 'toString',\\n      $toString = Function[TO_STRING],\\n      TPL = ('' + $toString).split(TO_STRING);\\n\\n  _core.inspectSource = function (it) {\\n    return $toString.call(it);\\n  };\\n\\n  (module.exports = function (O, key, val, safe) {\\n    var isFunction = typeof val == 'function';\\n    if (isFunction) _has(val, 'name') || _hide$1(val, 'name', key);\\n    if (O[key] === val) return;\\n    if (isFunction) _has(val, SRC) || _hide$1(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));\\n    if (O === _global) {\\n      O[key] = val;\\n    } else {\\n      if (!safe) {\\n        delete O[key];\\n        _hide$1(O, key, val);\\n      } else {\\n        if (O[key]) O[key] = val;else _hide$1(O, key, val);\\n      }\\n    }\\n    // add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\\n  })(Function.prototype, TO_STRING, function toString() {\\n    return typeof this == 'function' && this[SRC] || $toString.call(this);\\n  });\\n});\\n\\nvar _aFunction = function _aFunction(it) {\\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\\n  return it;\\n};\\n\\n// optional / simple context binding\\n\\nvar _ctx = function _ctx(fn, that, length) {\\n  _aFunction(fn);\\n  if (that === undefined) return fn;\\n  switch (length) {\\n    case 1:\\n      return function (a) {\\n        return fn.call(that, a);\\n      };\\n    case 2:\\n      return function (a, b) {\\n        return fn.call(that, a, b);\\n      };\\n    case 3:\\n      return function (a, b, c) {\\n        return fn.call(that, a, b, c);\\n      };\\n  }\\n  return function () /* ...args */{\\n    return fn.apply(that, arguments);\\n  };\\n};\\n\\nvar PROTOTYPE = 'prototype';\\n\\nvar $export = function $export(type, name, source) {\\n  var IS_FORCED = type & $export.F,\\n      IS_GLOBAL = type & $export.G,\\n      IS_STATIC = type & $export.S,\\n      IS_PROTO = type & $export.P,\\n      IS_BIND = type & $export.B,\\n      target = IS_GLOBAL ? _global : IS_STATIC ? _global[name] || (_global[name] = {}) : (_global[name] || {})[PROTOTYPE],\\n      exports = IS_GLOBAL ? _core : _core[name] || (_core[name] = {}),\\n      expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {}),\\n      key,\\n      own,\\n      out,\\n      exp;\\n  if (IS_GLOBAL) source = name;\\n  for (key in source) {\\n    // contains in native\\n    own = !IS_FORCED && target && target[key] !== undefined;\\n    // export native or passed\\n    out = (own ? target : source)[key];\\n    // bind timers to global for call from export context\\n    exp = IS_BIND && own ? _ctx(out, _global) : IS_PROTO && typeof out == 'function' ? _ctx(Function.call, out) : out;\\n    // extend global\\n    if (target) _redefine(target, key, out, type & $export.U);\\n    // export\\n    if (exports[key] != out) _hide$1(exports, key, exp);\\n    if (IS_PROTO && expProto[key] != out) expProto[key] = out;\\n  }\\n};\\n_global.core = _core;\\n// type bitmap\\n$export.F = 1; // forced\\n$export.G = 2; // global\\n$export.S = 4; // static\\n$export.P = 8; // proto\\n$export.B = 16; // bind\\n$export.W = 32; // wrap\\n$export.U = 64; // safe\\n$export.R = 128; // real proto method for `library` \\nvar _export = $export;\\n\\nvar f$3 = {}.propertyIsEnumerable;\\n\\nvar _objectPie = {\\n\\tf: f$3\\n};\\n\\nvar toString$1 = {}.toString;\\n\\nvar _cof = function _cof(it) {\\n  return toString$1.call(it).slice(8, -1);\\n};\\n\\n// fallback for non-array-like ES3 and non-enumerable old V8 strings\\n\\nvar _iobject = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\\n  return _cof(it) == 'String' ? it.split('') : Object(it);\\n};\\n\\n// 7.2.1 RequireObjectCoercible(argument)\\nvar _defined = function _defined(it) {\\n  if (it == undefined) throw TypeError(\\\"Can't call method on  \\\" + it);\\n  return it;\\n};\\n\\n// to indexed object, toObject with fallback for non-array-like ES3 strings\\n\\nvar _toIobject = function _toIobject(it) {\\n  return _iobject(_defined(it));\\n};\\n\\nvar gOPD = Object.getOwnPropertyDescriptor;\\n\\nvar f$2 = _descriptors ? gOPD : function getOwnPropertyDescriptor(O, P) {\\n  O = _toIobject(O);\\n  P = _toPrimitive(P, true);\\n  if (_ie8DomDefine) try {\\n    return gOPD(O, P);\\n  } catch (e) {/* empty */}\\n  if (_has(O, P)) return _propertyDesc(!_objectPie.f.call(O, P), O[P]);\\n};\\n\\nvar _objectGopd = {\\n  f: f$2\\n};\\n\\n// Works with __proto__ only. Old v8 can't work with null proto objects.\\n/* eslint-disable no-proto */\\n\\nvar check = function check(O, proto) {\\n  _anObject(O);\\n  if (!_isObject(proto) && proto !== null) throw TypeError(proto + \\\": can't set as prototype!\\\");\\n};\\nvar _setProto = {\\n  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line\\n  function (test, buggy, set) {\\n    try {\\n      set = _ctx(Function.call, _objectGopd.f(Object.prototype, '__proto__').set, 2);\\n      set(test, []);\\n      buggy = !(test instanceof Array);\\n    } catch (e) {\\n      buggy = true;\\n    }\\n    return function setPrototypeOf(O, proto) {\\n      check(O, proto);\\n      if (buggy) O.__proto__ = proto;else set(O, proto);\\n      return O;\\n    };\\n  }({}, false) : undefined),\\n  check: check\\n};\\n\\n// 19.1.3.19 Object.setPrototypeOf(O, proto)\\n\\n_export(_export.S, 'Object', { setPrototypeOf: _setProto.set });\\n\\n// Caution:\\n// Do not replace this import statement with codes.\\n//\\n// If you replace this import statement with codes,\\n// the codes will be executed after the following polyfills are imported\\n// because import statements are hoisted during compilation.\\n// Polyfill Custom Elements v1 with global namespace pollution\\n// Polyfill `Object.setPrototypeOf` with global namespace pollution\\n\\n/*\\nCopyright 2013-2015 ASIAL CORPORATION\\n\\nLicensed under the Apache License, Version 2.0 (the \\\"License\\\");\\nyou may not use this file except in compliance with the License.\\nYou may obtain a copy of the License at\\n\\n   http://www.apache.org/licenses/LICENSE-2.0\\n\\nUnless required by applicable law or agreed to in writing, software\\ndistributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\nSee the License for the specific language governing permissions and\\nlimitations under the License.\\n\\n*/\\n\\n/**\\n * @object ons.platform\\n * @category util\\n * @description\\n *   [en]Utility methods to detect current platform.[/en]\\n *   [ja]現在実行されているプラットフォームを検知するためのユーティリティメソッドを収めたオブジェクトです。[/ja]\\n */\\nvar Platform = function () {\\n\\n  /**\\n   * All elements will be rendered as if the app was running on this platform.\\n   * @type {String}\\n   */\\n  function Platform() {\\n    classCallCheck(this, Platform);\\n\\n    this._renderPlatform = null;\\n  }\\n\\n  /**\\n   * @method select\\n   * @signature select(platform)\\n   * @param  {string} platform Name of the platform.\\n   *   [en]Possible values are: \\\"opera\\\", \\\"firefox\\\", \\\"safari\\\", \\\"chrome\\\", \\\"ie\\\", \\\"android\\\", \\\"blackberry\\\", \\\"ios\\\" or \\\"wp\\\".[/en]\\n   *   [ja]\\\"opera\\\", \\\"firefox\\\", \\\"safari\\\", \\\"chrome\\\", \\\"ie\\\", \\\"android\\\", \\\"blackberry\\\", \\\"ios\\\", \\\"wp\\\"のいずれかを指定します。[/ja]\\n   * @description\\n   *   [en]Sets the platform used to render the elements. Useful for testing.[/en]\\n   *   [ja]要素を描画するために利用するプラットフォーム名を設定します。テストに便利です。[/ja]\\n   */\\n\\n\\n  createClass(Platform, [{\\n    key: 'select',\\n    value: function select(platform) {\\n      if (typeof platform === 'string') {\\n        this._renderPlatform = platform.trim().toLowerCase();\\n      }\\n    }\\n\\n    /**\\n     * @method isWebView\\n     * @signature isWebView()\\n     * @description\\n     *   [en]Returns whether app is running in Cordova.[/en]\\n     *   [ja]Cordova内で実行されているかどうかを返します。[/ja]\\n     * @return {Boolean}\\n     */\\n\\n  }, {\\n    key: 'isWebView',\\n    value: function isWebView() {\\n      if (document.readyState === 'loading' || document.readyState == 'uninitialized') {\\n        throw new Error('isWebView() method is available after dom contents loaded.');\\n      }\\n\\n      return !!(window.cordova || window.phonegap || window.PhoneGap);\\n    }\\n\\n    /**\\n     * @method isIOS\\n     * @signature isIOS()\\n     * @description\\n     *   [en]Returns whether the OS is iOS.[/en]\\n     *   [ja]iOS上で実行されているかどうかを返します。[/ja]\\n     * @return {Boolean}\\n     */\\n\\n  }, {\\n    key: 'isIOS',\\n    value: function isIOS() {\\n      if (this._renderPlatform) {\\n        return this._renderPlatform === 'ios';\\n      } else if ((typeof device === 'undefined' ? 'undefined' : _typeof(device)) === 'object' && !/browser/i.test(device.platform)) {\\n        return (/iOS/i.test(device.platform)\\n        );\\n      } else {\\n        return (/iPhone|iPad|iPod/i.test(navigator.userAgent)\\n        );\\n      }\\n    }\\n\\n    /**\\n     * @method isAndroid\\n     * @signature isAndroid()\\n     * @description\\n     *   [en]Returns whether the OS is Android.[/en]\\n     *   [ja]Android上で実行されているかどうかを返します。[/ja]\\n     * @return {Boolean}\\n     */\\n\\n  }, {\\n    key: 'isAndroid',\\n    value: function isAndroid() {\\n      if (this._renderPlatform) {\\n        return this._renderPlatform === 'android';\\n      } else if ((typeof device === 'undefined' ? 'undefined' : _typeof(device)) === 'object' && !/browser/i.test(device.platform)) {\\n        return (/Android/i.test(device.platform)\\n        );\\n      } else {\\n        return (/Android/i.test(navigator.userAgent)\\n        );\\n      }\\n    }\\n\\n    /**\\n     * @method isAndroidPhone\\n     * @signature isAndroidPhone()\\n     * @description\\n     *   [en]Returns whether the device is Android phone.[/en]\\n     *   [ja]Android携帯上で実行されているかどうかを返します。[/ja]\\n     * @return {Boolean}\\n     */\\n\\n  }, {\\n    key: 'isAndroidPhone',\\n    value: function isAndroidPhone() {\\n      return (/Android/i.test(navigator.userAgent) && /Mobile/i.test(navigator.userAgent)\\n      );\\n    }\\n\\n    /**\\n     * @method isAndroidTablet\\n     * @signature isAndroidTablet()\\n     * @description\\n     *   [en]Returns whether the device is Android tablet.[/en]\\n     *   [ja]Androidタブレット上で実行されているかどうかを返します。[/ja]\\n     * @return {Boolean}\\n     */\\n\\n  }, {\\n    key: 'isAndroidTablet',\\n    value: function isAndroidTablet() {\\n      return (/Android/i.test(navigator.userAgent) && !/Mobile/i.test(navigator.userAgent)\\n      );\\n    }\\n\\n    /**\\n     * @return {Boolean}\\n     */\\n\\n  }, {\\n    key: 'isWP',\\n    value: function isWP() {\\n      if (this._renderPlatform) {\\n        return this._renderPlatform === 'wp';\\n      } else if ((typeof device === 'undefined' ? 'undefined' : _typeof(device)) === 'object' && !/browser/i.test(device.platform)) {\\n        return (/Win32NT|WinCE/i.test(device.platform)\\n        );\\n      } else {\\n        return (/Windows Phone|IEMobile|WPDesktop/i.test(navigator.userAgent)\\n        );\\n      }\\n    }\\n\\n    /**\\n     * @methos isIPhone\\n     * @signature isIPhone()\\n     * @description\\n     *   [en]Returns whether the device is iPhone.[/en]\\n     *   [ja]iPhone上で実行されているかどうかを返します。[/ja]\\n     * @return {Boolean}\\n     */\\n\\n  }, {\\n    key: 'isIPhone',\\n    value: function isIPhone() {\\n      return (/iPhone/i.test(navigator.userAgent)\\n      );\\n    }\\n\\n    /**\\n     * @method isIPad\\n     * @signature isIPad()\\n     * @description\\n     *   [en]Returns whether the device is iPad.[/en]\\n     *   [ja]iPad上で実行されているかどうかを返します。[/ja]\\n     * @return {Boolean}\\n     */\\n\\n  }, {\\n    key: 'isIPad',\\n    value: function isIPad() {\\n      return (/iPad/i.test(navigator.userAgent)\\n      );\\n    }\\n\\n    /**\\n     * @return {Boolean}\\n     */\\n\\n  }, {\\n    key: 'isIPod',\\n    value: function isIPod() {\\n      return (/iPod/i.test(navigator.userAgent)\\n      );\\n    }\\n\\n    /**\\n     * @method isBlackBerry\\n     * @signature isBlackBerry()\\n     * @description\\n     *   [en]Returns whether the device is BlackBerry.[/en]\\n     *   [ja]BlackBerry上で実行されているかどうかを返します。[/ja]\\n     * @return {Boolean}\\n     */\\n\\n  }, {\\n    key: 'isBlackBerry',\\n    value: function isBlackBerry() {\\n      if (this._renderPlatform) {\\n        return this._renderPlatform === 'blackberry';\\n      } else if ((typeof device === 'undefined' ? 'undefined' : _typeof(device)) === 'object' && !/browser/i.test(device.platform)) {\\n        return (/BlackBerry/i.test(device.platform)\\n        );\\n      } else {\\n        return (/BlackBerry|RIM Tablet OS|BB10/i.test(navigator.userAgent)\\n        );\\n      }\\n    }\\n\\n    /**\\n     * @method isOpera\\n     * @signature isOpera()\\n     * @description\\n     *   [en]Returns whether the browser is Opera.[/en]\\n     *   [ja]Opera上で実行されているかどうかを返します。[/ja]\\n     * @return {Boolean}\\n     */\\n\\n  }, {\\n    key: 'isOpera',\\n    value: function isOpera() {\\n      if (this._renderPlatform) {\\n        return this._renderPlatform === 'opera';\\n      } else {\\n        return !!window.opera || navigator.userAgent.indexOf(' OPR/') >= 0;\\n      }\\n    }\\n\\n    /**\\n     * @method isFirefox\\n     * @signature isFirefox()\\n     * @description\\n     *   [en]Returns whether the browser is Firefox.[/en]\\n     *   [ja]Firefox上で実行されているかどうかを返します。[/ja]\\n     * @return {Boolean}\\n     */\\n\\n  }, {\\n    key: 'isFirefox',\\n    value: function isFirefox() {\\n      if (this._renderPlatform) {\\n        return this._renderPlatform === 'firefox';\\n      } else {\\n        return typeof InstallTrigger !== 'undefined';\\n      }\\n    }\\n\\n    /**\\n     * @method isSafari\\n     * @signature isSafari()\\n     * @description\\n     *   [en]Returns whether the browser is Safari.[/en]\\n     *   [ja]Safari上で実行されているかどうかを返します。[/ja]\\n     * @return {Boolean}\\n     */\\n\\n  }, {\\n    key: 'isSafari',\\n    value: function isSafari() {\\n      if (this._renderPlatform) {\\n        return this._renderPlatform === 'safari';\\n      } else {\\n        return Object.prototype.toString.call(window.HTMLElement).indexOf('Constructor') > 0 || function (p) {\\n          return p.toString() === '[object SafariRemoteNotification]';\\n        }(!window['safari'] || safari.pushNotification);\\n      }\\n    }\\n\\n    /**\\n     * @method isChrome\\n     * @signature isChrome()\\n     * @description\\n     *   [en]Returns whether the browser is Chrome.[/en]\\n     *   [ja]Chrome上で実行されているかどうかを返します。[/ja]\\n     * @return {Boolean}\\n     */\\n\\n  }, {\\n    key: 'isChrome',\\n    value: function isChrome() {\\n      if (this._renderPlatform) {\\n        return this._renderPlatform === 'chrome';\\n      } else {\\n        return !!window.chrome && !(!!window.opera || navigator.userAgent.indexOf(' OPR/') >= 0) && !(navigator.userAgent.indexOf(' Edge/') >= 0);\\n      }\\n    }\\n\\n    /**\\n     * @method isIE\\n     * @signature isIE()\\n     * @description\\n     *   [en]Returns whether the browser is Internet Explorer.[/en]\\n     *   [ja]Internet Explorer上で実行されているかどうかを返します。[/ja]\\n     * @return {Boolean}\\n     */\\n\\n  }, {\\n    key: 'isIE',\\n    value: function isIE() {\\n      if (this._renderPlatform) {\\n        return this._renderPlatform === 'ie';\\n      } else {\\n        return false || !!document.documentMode;\\n      }\\n    }\\n\\n    /**\\n     * @method isEdge\\n     * @signature isEdge()\\n     * @description\\n     *   [en]Returns whether the browser is Edge.[/en]\\n     *   [ja]Edge上で実行されているかどうかを返します。[/ja]\\n     * @return {Boolean}\\n     */\\n\\n  }, {\\n    key: 'isEdge',\\n    value: function isEdge() {\\n      if (this._renderPlatform) {\\n        return this._renderPlatform === 'edge';\\n      } else {\\n        return navigator.userAgent.indexOf(' Edge/') >= 0;\\n      }\\n    }\\n\\n    /**\\n     * @method isIOS7above\\n     * @signature isIOS7above()\\n     * @description\\n     *   [en]Returns whether the iOS version is 7 or above.[/en]\\n     *   [ja]iOS7以上で実行されているかどうかを返します。[/ja]\\n     * @return {Boolean}\\n     */\\n\\n  }, {\\n    key: 'isIOS7above',\\n    value: function isIOS7above() {\\n      if ((typeof device === 'undefined' ? 'undefined' : _typeof(device)) === 'object' && !/browser/i.test(device.platform)) {\\n        return (/iOS/i.test(device.platform) && parseInt(device.version.split('.')[0]) >= 7\\n        );\\n      } else if (/iPhone|iPad|iPod/i.test(navigator.userAgent)) {\\n        var ver = (navigator.userAgent.match(/\\\\b[0-9]+_[0-9]+(?:_[0-9]+)?\\\\b/) || [''])[0].replace(/_/g, '.');\\n        return parseInt(ver.split('.')[0]) >= 7;\\n      }\\n      return false;\\n    }\\n\\n    /**\\n     * @return {String}\\n     */\\n\\n  }, {\\n    key: 'getMobileOS',\\n    value: function getMobileOS() {\\n      if (this.isAndroid()) {\\n        return 'android';\\n      } else if (this.isIOS()) {\\n        return 'ios';\\n      } else if (this.isWP()) {\\n        return 'wp';\\n      } else {\\n        return 'other';\\n      }\\n    }\\n\\n    /**\\n     * @return {String}\\n     */\\n\\n  }, {\\n    key: 'getIOSDevice',\\n    value: function getIOSDevice() {\\n      if (this.isIPhone()) {\\n        return 'iphone';\\n      } else if (this.isIPad()) {\\n        return 'ipad';\\n      } else if (this.isIPod()) {\\n        return 'ipod';\\n      } else {\\n        return 'na';\\n      }\\n    }\\n  }]);\\n  return Platform;\\n}();\\n\\nvar platform = new Platform();\\n\\n/*\\nCopyright 2013-2015 ASIAL CORPORATION\\n\\nLicensed under the Apache License, Version 2.0 (the \\\"License\\\");\\nyou may not use this file except in compliance with the License.\\nYou may obtain a copy of the License at\\n\\n   http://www.apache.org/licenses/LICENSE-2.0\\n\\nUnless required by applicable law or agreed to in writing, software\\ndistributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\nSee the License for the specific language governing permissions and\\nlimitations under the License.\\n\\n*/\\n\\nvar pageAttributeExpression = {\\n  _variables: {},\\n\\n  /**\\n   * Define a variable.\\n   *\\n   * @param {String} name Name of the variable\\n   * @param {String|Function} value Value of the variable. Can be a string or a function. The function must return a string.\\n   * @param {Boolean} overwrite If this value is false, an error will be thrown when trying to define a variable that has already been defined.\\n   */\\n  defineVariable: function defineVariable(name, value) {\\n    var overwrite = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\\n\\n    if (typeof name !== 'string') {\\n      throw new Error('Variable name must be a string.');\\n    } else if (typeof value !== 'string' && typeof value !== 'function') {\\n      throw new Error('Variable value must be a string or a function.');\\n    } else if (this._variables.hasOwnProperty(name) && !overwrite) {\\n      throw new Error('\\\"' + name + '\\\" is already defined.');\\n    }\\n    this._variables[name] = value;\\n  },\\n\\n  /**\\n   * Get a variable.\\n   *\\n   * @param {String} name Name of the variable.\\n   * @return {String|Function|null}\\n   */\\n  getVariable: function getVariable(name) {\\n    if (!this._variables.hasOwnProperty(name)) {\\n      return null;\\n    }\\n\\n    return this._variables[name];\\n  },\\n\\n  /**\\n   * Remove a variable.\\n   *\\n   * @param {String} name Name of the varaible.\\n   */\\n  removeVariable: function removeVariable(name) {\\n    delete this._variables[name];\\n  },\\n\\n  /**\\n   * Get all variables.\\n   *\\n   * @return {Object}\\n   */\\n  getAllVariables: function getAllVariables() {\\n    return this._variables;\\n  },\\n  _parsePart: function _parsePart(part) {\\n    var c = void 0,\\n        inInterpolation = false,\\n        currentIndex = 0;\\n\\n    var tokens = [];\\n\\n    if (part.length === 0) {\\n      throw new Error('Unable to parse empty string.');\\n    }\\n\\n    for (var i = 0; i < part.length; i++) {\\n      c = part.charAt(i);\\n\\n      if (c === '$' && part.charAt(i + 1) === '{') {\\n        if (inInterpolation) {\\n          throw new Error('Nested interpolation not supported.');\\n        }\\n\\n        var token = part.substring(currentIndex, i);\\n        if (token.length > 0) {\\n          tokens.push(part.substring(currentIndex, i));\\n        }\\n\\n        currentIndex = i;\\n        inInterpolation = true;\\n      } else if (c === '}') {\\n        if (!inInterpolation) {\\n          throw new Error('} must be preceeded by ${');\\n        }\\n\\n        var _token = part.substring(currentIndex, i + 1);\\n        if (_token.length > 0) {\\n          tokens.push(part.substring(currentIndex, i + 1));\\n        }\\n\\n        currentIndex = i + 1;\\n        inInterpolation = false;\\n      }\\n    }\\n\\n    if (inInterpolation) {\\n      throw new Error('Unterminated interpolation.');\\n    }\\n\\n    tokens.push(part.substring(currentIndex, part.length));\\n\\n    return tokens;\\n  },\\n  _replaceToken: function _replaceToken(token) {\\n    var re = /^\\\\${(.*?)}$/,\\n        match = token.match(re);\\n\\n    if (match) {\\n      var name = match[1].trim();\\n      var variable = this.getVariable(name);\\n\\n      if (variable === null) {\\n        throw new Error('Variable \\\"' + name + '\\\" does not exist.');\\n      } else if (typeof variable === 'string') {\\n        return variable;\\n      } else {\\n        var rv = variable();\\n\\n        if (typeof rv !== 'string') {\\n          throw new Error('Must return a string.');\\n        }\\n\\n        return rv;\\n      }\\n    } else {\\n      return token;\\n    }\\n  },\\n  _replaceTokens: function _replaceTokens(tokens) {\\n    return tokens.map(this._replaceToken.bind(this));\\n  },\\n  _parseExpression: function _parseExpression(expression) {\\n    return expression.split(',').map(function (part) {\\n      return part.trim();\\n    }).map(this._parsePart.bind(this)).map(this._replaceTokens.bind(this)).map(function (part) {\\n      return part.join('');\\n    });\\n  },\\n\\n  /**\\n   * Evaluate an expression.\\n   *\\n   * @param {String} expression An page attribute expression.\\n   * @return {Array}\\n   */\\n  evaluate: function evaluate(expression) {\\n    if (!expression) {\\n      return [];\\n    }\\n\\n    return this._parseExpression(expression);\\n  }\\n};\\n\\n// Define default variables.\\npageAttributeExpression.defineVariable('mobileOS', platform.getMobileOS());\\npageAttributeExpression.defineVariable('iOSDevice', platform.getIOSDevice());\\npageAttributeExpression.defineVariable('runtime', function () {\\n  return platform.isWebView() ? 'cordova' : 'browser';\\n});\\n\\n/*\\nCopyright 2013-2015 ASIAL CORPORATION\\n\\nLicensed under the Apache License, Version 2.0 (the \\\"License\\\");\\nyou may not use this file except in compliance with the License.\\nYou may obtain a copy of the License at\\n\\n   http://www.apache.org/licenses/LICENSE-2.0\\n\\nUnless required by applicable law or agreed to in writing, software\\ndistributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\nSee the License for the specific language governing permissions and\\nlimitations under the License.\\n\\n*/\\n\\nvar internal$1 = {};\\n\\ninternal$1.config = {\\n  autoStatusBarFill: true,\\n  animationsDisabled: false,\\n  warningsDisabled: false\\n};\\n\\ninternal$1.nullElement = window.document.createElement('div');\\n\\n/**\\n * @return {Boolean}\\n */\\ninternal$1.isEnabledAutoStatusBarFill = function () {\\n  return !!internal$1.config.autoStatusBarFill;\\n};\\n\\n/**\\n * @param {String} html\\n * @return {String}\\n */\\ninternal$1.normalizePageHTML = function (html) {\\n  html = ('' + html).trim();\\n\\n  if (!html.match(/^<ons-page/)) {\\n    html = '<ons-page _muted>' + html + '</ons-page>';\\n  }\\n\\n  return html;\\n};\\n\\ninternal$1.waitDOMContentLoaded = function (callback) {\\n  if (window.document.readyState === 'loading' || window.document.readyState == 'uninitialized') {\\n    window.document.addEventListener('DOMContentLoaded', callback);\\n  } else {\\n    setImmediate(callback);\\n  }\\n};\\n\\ninternal$1.autoStatusBarFill = function (action) {\\n  var onReady = function onReady() {\\n    if (internal$1.shouldFillStatusBar()) {\\n      action();\\n    }\\n    document.removeEventListener('deviceready', onReady);\\n    document.removeEventListener('DOMContentLoaded', onReady);\\n  };\\n\\n  if ((typeof device === 'undefined' ? 'undefined' : _typeof(device)) === 'object') {\\n    document.addEventListener('deviceready', onReady);\\n  } else if (['complete', 'interactive'].indexOf(document.readyState) === -1) {\\n    document.addEventListener('DOMContentLoaded', function () {\\n      onReady();\\n    });\\n  } else {\\n    onReady();\\n  }\\n};\\n\\ninternal$1.shouldFillStatusBar = function () {\\n  return internal$1.isEnabledAutoStatusBarFill() && platform.isWebView() && platform.isIOS7above();\\n};\\n\\ninternal$1.templateStore = {\\n  _storage: {},\\n\\n  /**\\n   * @param {String} key\\n   * @return {String/null} template\\n   */\\n  get: function get(key) {\\n    return internal$1.templateStore._storage[key] || null;\\n  },\\n\\n\\n  /**\\n   * @param {String} key\\n   * @param {String} template\\n   */\\n  set: function set(key, template) {\\n    internal$1.templateStore._storage[key] = template;\\n  }\\n};\\n\\nwindow.document.addEventListener('_templateloaded', function (e) {\\n  if (e.target.nodeName.toLowerCase() === 'ons-template') {\\n    internal$1.templateStore.set(e.templateId, e.template);\\n  }\\n}, false);\\n\\nwindow.document.addEventListener('DOMContentLoaded', function () {\\n  register('script[type=\\\"text/ons-template\\\"]');\\n  register('script[type=\\\"text/template\\\"]');\\n  register('script[type=\\\"text/ng-template\\\"]');\\n\\n  function register(query) {\\n    var templates = window.document.querySelectorAll(query);\\n    for (var i = 0; i < templates.length; i++) {\\n      internal$1.templateStore.set(templates[i].getAttribute('id'), templates[i].textContent);\\n    }\\n  }\\n}, false);\\n\\n/**\\n * @param {String} page\\n * @return {Promise}\\n */\\ninternal$1.getTemplateHTMLAsync = function (page) {\\n  return new Promise(function (resolve, reject) {\\n    setImmediate(function () {\\n      var cache = internal$1.templateStore.get(page);\\n\\n      if (cache) {\\n        var html = typeof cache === 'string' ? cache : cache[1];\\n        resolve(html);\\n      } else {\\n        var xhr = new XMLHttpRequest();\\n        xhr.open('GET', page, true);\\n        xhr.onload = function (response) {\\n          var html = xhr.responseText;\\n          if (xhr.status >= 400 && xhr.status < 600) {\\n            reject(html);\\n          } else {\\n            resolve(html);\\n          }\\n        };\\n        xhr.onerror = function () {\\n          throw new Error('The page is not found: ' + page);\\n        };\\n        xhr.send(null);\\n      }\\n    });\\n  });\\n};\\n\\n/**\\n * @param {String} page\\n * @return {Promise}\\n */\\ninternal$1.getPageHTMLAsync = function (page) {\\n  var pages = pageAttributeExpression.evaluate(page);\\n\\n  var getPage = function getPage(page) {\\n    if (typeof page !== 'string') {\\n      return Promise.reject('Must specify a page.');\\n    }\\n\\n    return internal$1.getTemplateHTMLAsync(page).then(function (html) {\\n      return internal$1.normalizePageHTML(html);\\n    }, function (error) {\\n      if (pages.length === 0) {\\n        return Promise.reject(error);\\n      }\\n\\n      return getPage(pages.shift());\\n    }).then(function (html) {\\n      return internal$1.normalizePageHTML(html);\\n    });\\n  };\\n\\n  return getPage(pages.shift());\\n};\\n\\n/*\\nCopyright 2013-2015 ASIAL CORPORATION\\n\\nLicensed under the Apache License, Version 2.0 (the \\\"License\\\");\\nyou may not use this file except in compliance with the License.\\nYou may obtain a copy of the License at\\n\\n   http://www.apache.org/licenses/LICENSE-2.0\\n\\nUnless required by applicable law or agreed to in writing, software\\ndistributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\nSee the License for the specific language governing permissions and\\nlimitations under the License.\\n\\n*/\\n\\nvar AnimatorFactory = function () {\\n\\n  /**\\n   * @param {Object} opts\\n   * @param {Object} opts.animators The dictionary for animator classes\\n   * @param {Function} opts.baseClass The base class of animators\\n   * @param {String} [opts.baseClassName] The name of the base class of animators\\n   * @param {String} [opts.defaultAnimation] The default animation name\\n   * @param {Object} [opts.defaultAnimationOptions] The default animation options\\n   */\\n  function AnimatorFactory(opts) {\\n    classCallCheck(this, AnimatorFactory);\\n\\n    this._animators = opts.animators;\\n    this._baseClass = opts.baseClass;\\n    this._baseClassName = opts.baseClassName || opts.baseClass.name;\\n    this._animation = opts.defaultAnimation || 'default';\\n    this._animationOptions = opts.defaultAnimationOptions || {};\\n\\n    if (!this._animators[this._animation]) {\\n      throw new Error('No such animation: ' + this._animation);\\n    }\\n  }\\n\\n  /**\\n   * @param {String} jsonString\\n   * @return {Object/null}\\n   */\\n\\n\\n  createClass(AnimatorFactory, [{\\n    key: 'setAnimationOptions',\\n\\n\\n    /**\\n     * @param {Object} options\\n     */\\n    value: function setAnimationOptions(options) {\\n      this._animationOptions = options;\\n    }\\n\\n    /**\\n     * @param {Object} options\\n     * @param {String} [options.animation] The animation name\\n     * @param {Object} [options.animationOptions] The animation options\\n     * @param {Object} defaultAnimator The default animator instance\\n     * @return {Object} An animator instance\\n     */\\n\\n  }, {\\n    key: 'newAnimator',\\n    value: function newAnimator() {\\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n      var defaultAnimator = arguments[1];\\n\\n\\n      var animator = null;\\n\\n      if (options.animation instanceof this._baseClass) {\\n        return options.animation;\\n      }\\n\\n      var Animator = null;\\n\\n      if (typeof options.animation === 'string') {\\n        Animator = this._animators[options.animation];\\n      }\\n\\n      if (!Animator && defaultAnimator) {\\n        animator = defaultAnimator;\\n      } else {\\n        Animator = Animator || this._animators[this._animation];\\n\\n        var animationOpts = util.extend({}, this._animationOptions, options.animationOptions || {}, internal$1.config.animationsDisabled ? { duration: 0, delay: 0 } : {});\\n\\n        animator = new Animator(animationOpts);\\n\\n        if (typeof animator === 'function') {\\n          animator = new animator(animationOpts); // eslint-disable-line new-cap\\n        }\\n      }\\n\\n      if (!(animator instanceof this._baseClass)) {\\n        throw new Error('\\\"animator\\\" is not an instance of ' + this._baseClassName + '.');\\n      }\\n\\n      return animator;\\n    }\\n  }], [{\\n    key: 'parseAnimationOptionsString',\\n    value: function parseAnimationOptionsString(jsonString) {\\n      try {\\n        if (typeof jsonString === 'string') {\\n          var result = util.animationOptionsParse(jsonString);\\n          if ((typeof result === 'undefined' ? 'undefined' : _typeof(result)) === 'object' && result !== null) {\\n            return result;\\n          } else {\\n            console.error('\\\"animation-options\\\" attribute must be a JSON object string: ' + jsonString);\\n          }\\n        }\\n        return {};\\n      } catch (e) {\\n        console.error('\\\"animation-options\\\" attribute must be a JSON object string: ' + jsonString);\\n        return {};\\n      }\\n    }\\n  }]);\\n  return AnimatorFactory;\\n}();\\n\\n/*\\nCopyright 2013-2015 ASIAL CORPORATION\\n\\nLicensed under the Apache License, Version 2.0 (the \\\"License\\\");\\nyou may not use this file except in compliance with the License.\\nYou may obtain a copy of the License at\\n\\n   http://www.apache.org/licenses/LICENSE-2.0\\n\\nUnless required by applicable law or agreed to in writing, software\\ndistributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\nSee the License for the specific language governing permissions and\\nlimitations under the License.\\n\\n*/\\n\\nvar ModifierUtil = function () {\\n  function ModifierUtil() {\\n    classCallCheck(this, ModifierUtil);\\n  }\\n\\n  createClass(ModifierUtil, null, [{\\n    key: 'diff',\\n\\n    /**\\n     * @param {String} last\\n     * @param {String} current\\n     */\\n    value: function diff(last, current) {\\n      last = makeDict(('' + last).trim());\\n      current = makeDict(('' + current).trim());\\n\\n      var removed = Object.keys(last).reduce(function (result, token) {\\n        if (!current[token]) {\\n          result.push(token);\\n        }\\n        return result;\\n      }, []);\\n\\n      var added = Object.keys(current).reduce(function (result, token) {\\n        if (!last[token]) {\\n          result.push(token);\\n        }\\n        return result;\\n      }, []);\\n\\n      return { added: added, removed: removed };\\n\\n      function makeDict(modifier) {\\n        var dict = {};\\n        ModifierUtil.split(modifier).forEach(function (token) {\\n          return dict[token] = token;\\n        });\\n        return dict;\\n      }\\n    }\\n\\n    /**\\n     * @param {Object} diff\\n     * @param {Array} diff.removed\\n     * @param {Array} diff.added\\n     * @param {Object} classList\\n     * @param {String} template\\n     */\\n\\n  }, {\\n    key: 'applyDiffToClassList',\\n    value: function applyDiffToClassList(diff, classList, template) {\\n      diff.added.map(function (modifier) {\\n        return template.replace(/\\\\*/g, modifier);\\n      }).forEach(function (klass) {\\n        return classList.add(klass);\\n      });\\n\\n      diff.removed.map(function (modifier) {\\n        return template.replace(/\\\\*/g, modifier);\\n      }).forEach(function (klass) {\\n        return classList.remove(klass);\\n      });\\n    }\\n\\n    /**\\n     * @param {Object} diff\\n     * @param {Array} diff.removed\\n     * @param {Array} diff.added\\n     * @param {HTMLElement} element\\n     * @param {Object} scheme\\n     */\\n\\n  }, {\\n    key: 'applyDiffToElement',\\n    value: function applyDiffToElement(diff, element, scheme) {\\n      for (var selector in scheme) {\\n        if (scheme.hasOwnProperty(selector)) {\\n          var targetElements = !selector || util.match(element, selector) ? [element] : element.querySelectorAll(selector);\\n          for (var i = 0; i < targetElements.length; i++) {\\n            ModifierUtil.applyDiffToClassList(diff, targetElements[i].classList, scheme[selector]);\\n          }\\n        }\\n      }\\n    }\\n\\n    /**\\n     * @param {String} last\\n     * @param {String} current\\n     * @param {HTMLElement} element\\n     * @param {Object} scheme\\n     */\\n\\n  }, {\\n    key: 'onModifierChanged',\\n    value: function onModifierChanged(last, current, element, scheme) {\\n      return ModifierUtil.applyDiffToElement(ModifierUtil.diff(last, current), element, scheme);\\n    }\\n\\n    /**\\n     * @param {HTMLElement} element\\n     * @param {Object} scheme\\n     */\\n\\n  }, {\\n    key: 'initModifier',\\n    value: function initModifier(element, scheme) {\\n      var modifier = element.getAttribute('modifier');\\n      if (typeof modifier !== 'string') {\\n        return;\\n      }\\n\\n      ModifierUtil.applyDiffToElement({\\n        removed: [],\\n        added: ModifierUtil.split(modifier)\\n      }, element, scheme);\\n    }\\n  }, {\\n    key: 'split',\\n    value: function split(modifier) {\\n      if (typeof modifier !== 'string') {\\n        return [];\\n      }\\n\\n      return modifier.trim().split(/ +/).filter(function (token) {\\n        return token !== '';\\n      });\\n    }\\n\\n    /**\\n     * Add modifier token to an element.\\n     */\\n\\n  }, {\\n    key: 'addModifier',\\n    value: function addModifier(element, modifierToken) {\\n      if (!element.hasAttribute('modifier')) {\\n        element.setAttribute('modifier', modifierToken);\\n      } else {\\n        var tokens = ModifierUtil.split(element.getAttribute('modifier'));\\n        if (tokens.indexOf(modifierToken) == -1) {\\n          tokens.push(modifierToken);\\n          element.setAttribute('modifier', tokens.join(' '));\\n        }\\n      }\\n    }\\n\\n    /**\\n     * Remove modifier token from an element.\\n     */\\n\\n  }, {\\n    key: 'removeModifier',\\n    value: function removeModifier(element, modifierToken) {\\n      if (element.hasAttribute('modifier')) {\\n        var tokens = ModifierUtil.split(element.getAttribute('modifier'));\\n        var index = tokens.indexOf(modifierToken);\\n        if (index !== -1) {\\n          tokens.splice(index, 1);\\n          element.setAttribute('modifier', tokens.join(' '));\\n        }\\n      }\\n    }\\n  }]);\\n  return ModifierUtil;\\n}();\\n\\n/*\\nCopyright 2013-2015 ASIAL CORPORATION\\n\\nLicensed under the Apache License, Version 2.0 (the \\\"License\\\");\\nyou may not use this file except in compliance with the License.\\nYou may obtain a copy of the License at\\n\\n   http://www.apache.org/licenses/LICENSE-2.0\\n\\nUnless required by applicable law or agreed to in writing, software\\ndistributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\nSee the License for the specific language governing permissions and\\nlimitations under the License.\\n\\n*/\\n\\nvar LazyRepeatDelegate = function () {\\n  function LazyRepeatDelegate(userDelegate) {\\n    var templateElement = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\\n    classCallCheck(this, LazyRepeatDelegate);\\n\\n    if ((typeof userDelegate === 'undefined' ? 'undefined' : _typeof(userDelegate)) !== 'object' || userDelegate === null) {\\n      throw Error('\\\"delegate\\\" parameter must be an object.');\\n    }\\n    this._userDelegate = userDelegate;\\n\\n    if (!(templateElement instanceof Element) && templateElement !== null) {\\n      throw Error('\\\"templateElement\\\" parameter must be an instance of Element or null.');\\n    }\\n    this._templateElement = templateElement;\\n  }\\n\\n  createClass(LazyRepeatDelegate, [{\\n    key: 'hasRenderFunction',\\n\\n\\n    /**\\n     * @return {Boolean}\\n     */\\n    value: function hasRenderFunction() {\\n      return this._userDelegate._render instanceof Function;\\n    }\\n\\n    /**\\n     * @return {void}\\n     */\\n\\n  }, {\\n    key: '_render',\\n    value: function _render() {\\n      this._userDelegate._render.apply(this._userDelegate, arguments);\\n    }\\n\\n    /**\\n     * @param {Number} index\\n     * @param {Function} done A function that take item object as parameter.\\n     */\\n\\n  }, {\\n    key: 'loadItemElement',\\n    value: function loadItemElement(index, done) {\\n      if (this._userDelegate.loadItemElement instanceof Function) {\\n        this._userDelegate.loadItemElement(index, done);\\n      } else {\\n        var element = this._userDelegate.createItemContent(index, this._templateElement);\\n        if (!(element instanceof Element)) {\\n          throw Error('createItemContent() must return an instance of Element.');\\n        }\\n\\n        done({ element: element });\\n      }\\n    }\\n\\n    /**\\n     * @return {Number}\\n     */\\n\\n  }, {\\n    key: 'countItems',\\n    value: function countItems() {\\n      var count = this._userDelegate.countItems();\\n      if (typeof count !== 'number') {\\n        throw Error('countItems() must return a number.');\\n      }\\n      return count;\\n    }\\n\\n    /**\\n     * @param {Number} index\\n     * @param {Object} item\\n     * @param {Element} item.element\\n     */\\n\\n  }, {\\n    key: 'updateItem',\\n    value: function updateItem(index, item) {\\n      if (this._userDelegate.updateItemContent instanceof Function) {\\n        this._userDelegate.updateItemContent(index, item);\\n      }\\n    }\\n\\n    /**\\n     * @return {Number}\\n     */\\n\\n  }, {\\n    key: 'calculateItemHeight',\\n    value: function calculateItemHeight(index) {\\n      if (this._userDelegate.calculateItemHeight instanceof Function) {\\n        var height = this._userDelegate.calculateItemHeight(index);\\n\\n        if (typeof height !== 'number') {\\n          throw Error('calculateItemHeight() must return a number.');\\n        }\\n\\n        return height;\\n      }\\n\\n      return 0;\\n    }\\n\\n    /**\\n     * @param {Number} index\\n     * @param {Object} item\\n     */\\n\\n  }, {\\n    key: 'destroyItem',\\n    value: function destroyItem(index, item) {\\n      if (this._userDelegate.destroyItem instanceof Function) {\\n        this._userDelegate.destroyItem(index, item);\\n      }\\n    }\\n\\n    /**\\n     * @return {void}\\n     */\\n\\n  }, {\\n    key: 'destroy',\\n    value: function destroy() {\\n      if (this._userDelegate.destroy instanceof Function) {\\n        this._userDelegate.destroy();\\n      }\\n\\n      this._userDelegate = this._templateElement = null;\\n    }\\n  }, {\\n    key: 'itemHeight',\\n    get: function get() {\\n      return this._userDelegate.itemHeight;\\n    }\\n  }]);\\n  return LazyRepeatDelegate;\\n}();\\n\\n/**\\n * This class provide core functions for ons-lazy-repeat.\\n */\\nvar LazyRepeatProvider = function () {\\n\\n  /**\\n   * @param {Element} wrapperElement\\n   * @param {LazyRepeatDelegate} delegate\\n   */\\n  function LazyRepeatProvider(wrapperElement, delegate) {\\n    classCallCheck(this, LazyRepeatProvider);\\n\\n    if (!(delegate instanceof LazyRepeatDelegate)) {\\n      throw Error('\\\"delegate\\\" parameter must be an instance of LazyRepeatDelegate.');\\n    }\\n\\n    this._wrapperElement = wrapperElement;\\n    this._delegate = delegate;\\n    this._insertIndex = this._wrapperElement.children[0] && this._wrapperElement.children[0].tagName === 'ONS-LAZY-REPEAT' ? 1 : 0;\\n\\n    if (wrapperElement.tagName.toLowerCase() === 'ons-list') {\\n      wrapperElement.classList.add('lazy-list');\\n    }\\n\\n    this._pageContent = this._findPageContentElement(wrapperElement);\\n\\n    if (!this._pageContent) {\\n      throw new Error('ons-lazy-repeat must be a descendant of an <ons-page> or an element.');\\n    }\\n\\n    this.lastScrollTop = this._pageContent.scrollTop;\\n    this.padding = 0;\\n    this._topPositions = [0];\\n    this._renderedItems = {};\\n\\n    if (!this._delegate.itemHeight && !this._delegate.calculateItemHeight(0)) {\\n      this._unknownItemHeight = true;\\n    }\\n\\n    this._addEventListeners();\\n    this._onChange();\\n  }\\n\\n  createClass(LazyRepeatProvider, [{\\n    key: '_findPageContentElement',\\n    value: function _findPageContentElement(wrapperElement) {\\n      var pageContent = util.findParent(wrapperElement, '.page__content');\\n\\n      if (pageContent) {\\n        return pageContent;\\n      }\\n\\n      var page = util.findParent(wrapperElement, 'ons-page');\\n      if (page) {\\n        var content = util.findChild(page, '.content');\\n        if (content) {\\n          return content;\\n        }\\n      }\\n\\n      return null;\\n    }\\n  }, {\\n    key: '_checkItemHeight',\\n    value: function _checkItemHeight(callback) {\\n      var _this = this;\\n\\n      this._delegate.loadItemElement(0, function (item) {\\n        if (!_this._unknownItemHeight) {\\n          throw Error('Invalid state');\\n        }\\n\\n        _this._wrapperElement.appendChild(item.element);\\n\\n        var done = function done() {\\n          _this._delegate.destroyItem(0, item);\\n          _this._wrapperElement.removeChild(item.element);\\n          delete _this._unknownItemHeight;\\n          callback();\\n        };\\n\\n        _this._itemHeight = item.element.offsetHeight;\\n\\n        if (_this._itemHeight > 0) {\\n          done();\\n          return;\\n        }\\n\\n        // retry to measure offset height\\n        // dirty fix for angular2 directive\\n        var lastVisibility = _this._wrapperElement.style.visibility;\\n        _this._wrapperElement.style.visibility = 'hidden';\\n        item.element.style.visibility = 'hidden';\\n\\n        setImmediate(function () {\\n          _this._itemHeight = item.element.offsetHeight;\\n          if (_this._itemHeight == 0) {\\n            throw Error('Invalid state: this._itemHeight must be greater than zero.');\\n          }\\n          _this._wrapperElement.style.visibility = lastVisibility;\\n          done();\\n        });\\n      });\\n    }\\n  }, {\\n    key: '_countItems',\\n    value: function _countItems() {\\n      return this._delegate.countItems();\\n    }\\n  }, {\\n    key: '_getItemHeight',\\n    value: function _getItemHeight(i) {\\n      // Item is rendered\\n      if (this._renderedItems.hasOwnProperty(i)) {\\n        if (!this._renderedItems[i].hasOwnProperty('height')) {\\n          this._renderedItems[i].height = this._renderedItems[i].element.offsetHeight;\\n        }\\n        return this._renderedItems[i].height;\\n      }\\n\\n      // Item is not rendered, scroll up\\n      if (this._topPositions[i + 1] && this._topPositions[i]) {\\n        return this._topPositions[i + 1] - this._topPositions[i];\\n      }\\n      // Item is not rendered, scroll down\\n      return this.staticItemHeight || this._delegate.calculateItemHeight(i);\\n    }\\n  }, {\\n    key: '_calculateRenderedHeight',\\n    value: function _calculateRenderedHeight() {\\n      var _this2 = this;\\n\\n      return Object.keys(this._renderedItems).reduce(function (a, b) {\\n        return a + _this2._getItemHeight(+b);\\n      }, 0);\\n    }\\n  }, {\\n    key: '_onChange',\\n    value: function _onChange() {\\n      this._render();\\n    }\\n  }, {\\n    key: '_lastItemRendered',\\n    value: function _lastItemRendered() {\\n      return Math.max.apply(Math, toConsumableArray(Object.keys(this._renderedItems)));\\n    }\\n  }, {\\n    key: '_firstItemRendered',\\n    value: function _firstItemRendered() {\\n      return Math.min.apply(Math, toConsumableArray(Object.keys(this._renderedItems)));\\n    }\\n  }, {\\n    key: 'refresh',\\n    value: function refresh() {\\n      var lastItemIndex = Math.min(this._lastItemRendered(), this._countItems() - 1);\\n      var firstItemIndex = this._firstItemRendered();\\n      this._wrapperElement.style.height = this._topPositions[firstItemIndex] + this._calculateRenderedHeight() + 'px';\\n      this.padding = this._topPositions[firstItemIndex];\\n      this._removeAllElements();\\n      this._render({ forceScrollDown: true, forceFirstIndex: firstItemIndex, forceLastIndex: lastItemIndex });\\n      this._wrapperElement.style.height = 'inherit';\\n    }\\n  }, {\\n    key: '_render',\\n    value: function _render() {\\n      var _this3 = this;\\n\\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\\n          _ref$forceScrollDown = _ref.forceScrollDown,\\n          forceScrollDown = _ref$forceScrollDown === undefined ? false : _ref$forceScrollDown,\\n          forceFirstIndex = _ref.forceFirstIndex,\\n          forceLastIndex = _ref.forceLastIndex;\\n\\n      if (this._unknownItemHeight) {\\n        return this._checkItemHeight(this._render.bind(this, arguments[0]));\\n      }\\n\\n      var isScrollUp = !forceScrollDown && this.lastScrollTop > this._pageContent.scrollTop;\\n      this.lastScrollTop = this._pageContent.scrollTop;\\n      var keep = {};\\n\\n      var offset = this._wrapperElement.getBoundingClientRect().top;\\n      var limit = 4 * window.innerHeight - offset;\\n      var count = this._countItems();\\n\\n      var items = [];\\n      var start = forceFirstIndex || Math.max(0, this._calculateStartIndex(offset) - 30);\\n      var i = start;\\n\\n      for (var top = this._topPositions[i]; i < count && top < limit; i++) {\\n        if (i >= this._topPositions.length) {\\n          // perf optimization\\n          this._topPositions.length += 100;\\n        }\\n\\n        this._topPositions[i] = top;\\n        top += this._getItemHeight(i);\\n      }\\n\\n      if (this._delegate.hasRenderFunction && this._delegate.hasRenderFunction()) {\\n        return this._delegate._render(start, i, function () {\\n          _this3.padding = _this3._topPositions[start];\\n        });\\n      }\\n\\n      if (isScrollUp) {\\n        for (var j = i - 1; j >= start; j--) {\\n          keep[j] = true;\\n          this._renderElement(j, isScrollUp);\\n        }\\n      } else {\\n        var lastIndex = forceLastIndex || Math.max.apply(Math, [i - 1].concat(toConsumableArray(Object.keys(this._renderedItems))));\\n        for (var _j = start; _j <= lastIndex; _j++) {\\n          keep[_j] = true;\\n          this._renderElement(_j, isScrollUp);\\n        }\\n      }\\n\\n      Object.keys(this._renderedItems).forEach(function (key) {\\n        return keep[key] || _this3._removeElement(key, isScrollUp);\\n      });\\n    }\\n\\n    /**\\n     * @param {Number} index\\n     * @param {Boolean} isScrollUp\\n     */\\n\\n  }, {\\n    key: '_renderElement',\\n    value: function _renderElement(index, isScrollUp) {\\n      var _this4 = this;\\n\\n      var item = this._renderedItems[index];\\n      if (item) {\\n        this._delegate.updateItem(index, item); // update if it exists\\n        return;\\n      }\\n\\n      this._delegate.loadItemElement(index, function (item) {\\n        if (isScrollUp) {\\n          _this4._wrapperElement.insertBefore(item.element, _this4._wrapperElement.children[_this4._insertIndex]);\\n          _this4.padding = _this4._topPositions[index];\\n          item.height = _this4._topPositions[index + 1] - _this4._topPositions[index];\\n        } else {\\n          _this4._wrapperElement.appendChild(item.element);\\n        }\\n\\n        _this4._renderedItems[index] = item;\\n      });\\n    }\\n\\n    /**\\n     * @param {Number} index\\n     * @param {Boolean} isScrollUp\\n     */\\n\\n  }, {\\n    key: '_removeElement',\\n    value: function _removeElement(index) {\\n      var isScrollUp = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\\n\\n      index = +index;\\n      var item = this._renderedItems[index];\\n      this._delegate.destroyItem(index, item);\\n\\n      if (isScrollUp) {\\n        this._topPositions[index + 1] = undefined;\\n      } else {\\n        this.padding = this.padding + this._getItemHeight(index);\\n      }\\n\\n      if (item.element.parentElement) {\\n        item.element.parentElement.removeChild(item.element);\\n      }\\n\\n      delete this._renderedItems[index];\\n    }\\n  }, {\\n    key: '_removeAllElements',\\n    value: function _removeAllElements() {\\n      var _this5 = this;\\n\\n      Object.keys(this._renderedItems).forEach(function (key) {\\n        return _this5._removeElement(key);\\n      });\\n    }\\n  }, {\\n    key: '_recalculateTopPositions',\\n    value: function _recalculateTopPositions(start, end) {\\n      for (var i = start; i <= end; i++) {\\n        this._topPositions[i + 1] = this._topPositions[i] + this._getItemHeight(i);\\n      }\\n    }\\n  }, {\\n    key: '_calculateStartIndex',\\n    value: function _calculateStartIndex(current) {\\n      var firstItemIndex = this._firstItemRendered();\\n      var lastItemIndex = this._lastItemRendered();\\n\\n      // Fix for Safari scroll and Angular 2\\n      this._recalculateTopPositions(firstItemIndex, lastItemIndex);\\n\\n      var start = 0;\\n      var end = this._countItems() - 1;\\n\\n      // Binary search for index at top of screen so we can speed up rendering.\\n      for (;;) {\\n        var middle = Math.floor((start + end) / 2);\\n        var value = current + this._topPositions[middle];\\n\\n        if (end < start) {\\n          return 0;\\n        } else if (value <= 0 && value + this._getItemHeight(middle) > 0) {\\n          return middle;\\n        } else if (isNaN(value) || value >= 0) {\\n          end = middle - 1;\\n        } else {\\n          start = middle + 1;\\n        }\\n      }\\n    }\\n  }, {\\n    key: '_debounce',\\n    value: function _debounce(func, wait, immediate) {\\n      var timeout = void 0;\\n      return function () {\\n        var _this6 = this,\\n            _arguments = arguments;\\n\\n        var callNow = immediate && !timeout;\\n        clearTimeout(timeout);\\n        if (callNow) {\\n          func.apply(this, arguments);\\n        } else {\\n          timeout = setTimeout(function () {\\n            timeout = null;\\n            func.apply(_this6, _arguments);\\n          }, wait);\\n        }\\n      };\\n    }\\n  }, {\\n    key: '_doubleFireOnTouchend',\\n    value: function _doubleFireOnTouchend() {\\n      this._render();\\n      this._debounce(this._render.bind(this), 100);\\n    }\\n  }, {\\n    key: '_addEventListeners',\\n    value: function _addEventListeners() {\\n      util.bindListeners(this, ['_onChange', '_doubleFireOnTouchend']);\\n\\n      if (platform.isIOS()) {\\n        this._boundOnChange = this._debounce(this._boundOnChange, 30);\\n      }\\n\\n      this._pageContent.addEventListener('scroll', this._boundOnChange, true);\\n\\n      if (platform.isIOS()) {\\n        this._pageContent.addEventListener('touchmove', this._boundOnChange, true);\\n        this._pageContent.addEventListener('touchend', this._boundDoubleFireOnTouchend, true);\\n      }\\n\\n      window.document.addEventListener('resize', this._boundOnChange, true);\\n    }\\n  }, {\\n    key: '_removeEventListeners',\\n    value: function _removeEventListeners() {\\n      this._pageContent.removeEventListener('scroll', this._boundOnChange, true);\\n\\n      if (platform.isIOS()) {\\n        this._pageContent.removeEventListener('touchmove', this._boundOnChange, true);\\n        this._pageContent.removeEventListener('touchend', this._boundDoubleFireOnTouchend, true);\\n      }\\n\\n      window.document.removeEventListener('resize', this._boundOnChange, true);\\n    }\\n  }, {\\n    key: 'destroy',\\n    value: function destroy() {\\n      this._removeAllElements();\\n      this._delegate.destroy();\\n      this._parentElement = this._delegate = this._renderedItems = null;\\n      this._removeEventListeners();\\n    }\\n  }, {\\n    key: 'padding',\\n    get: function get() {\\n      return parseInt(this._wrapperElement.style.paddingTop, 10);\\n    },\\n    set: function set(newValue) {\\n      this._wrapperElement.style.paddingTop = newValue + 'px';\\n    }\\n  }, {\\n    key: 'staticItemHeight',\\n    get: function get() {\\n      return this._delegate.itemHeight || this._itemHeight;\\n    }\\n  }]);\\n  return LazyRepeatProvider;\\n}();\\n\\n/*\\nCopyright 2013-2015 ASIAL CORPORATION\\n\\nLicensed under the Apache License, Version 2.0 (the \\\"License\\\");\\nyou may not use this file except in compliance with the License.\\nYou may obtain a copy of the License at\\n\\n   http://www.apache.org/licenses/LICENSE-2.0\\n\\nUnless required by applicable law or agreed to in writing, software\\ndistributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\nSee the License for the specific language governing permissions and\\nlimitations under the License.\\n\\n*/\\ninternal$1.AnimatorFactory = AnimatorFactory;\\ninternal$1.ModifierUtil = ModifierUtil;\\ninternal$1.LazyRepeatProvider = LazyRepeatProvider;\\ninternal$1.LazyRepeatDelegate = LazyRepeatDelegate;\\n\\n/*\\nCopyright 2013-2015 ASIAL CORPORATION\\n\\nLicensed under the Apache License, Version 2.0 (the \\\"License\\\");\\nyou may not use this file except in compliance with the License.\\nYou may obtain a copy of the License at\\n\\n   http://www.apache.org/licenses/LICENSE-2.0\\n\\nUnless required by applicable law or agreed to in writing, software\\ndistributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\nSee the License for the specific language governing permissions and\\nlimitations under the License.\\n\\n*/\\n\\nvar autoStyleEnabled = true;\\n\\n// Modifiers\\nvar modifiersMap = {\\n  'quiet': 'material--flat',\\n  'light': 'material--flat',\\n  'outline': 'material--flat',\\n  'cta': '',\\n  'large--quiet': 'material--flat large',\\n  'large--cta': 'large',\\n  'noborder': '',\\n  'chevron': '',\\n  'tappable': ''\\n};\\n\\nvar platforms = {};\\n\\nplatforms.android = function (element) {\\n\\n  if (!/ons-fab|ons-speed-dial|ons-progress/.test(element.tagName.toLowerCase()) && !/material/.test(element.getAttribute('modifier'))) {\\n\\n    var oldModifier = element.getAttribute('modifier') || '';\\n\\n    var newModifier = oldModifier.trim().split(/\\\\s+/).map(function (e) {\\n      return modifiersMap.hasOwnProperty(e) ? modifiersMap[e] : e;\\n    });\\n    newModifier.unshift('material');\\n\\n    element.setAttribute('modifier', newModifier.join(' ').trim());\\n  }\\n\\n  // Effects\\n  if (/ons-button|ons-list-item|ons-fab|ons-speed-dial|ons-tab$/.test(element.tagName.toLowerCase()) && !element.hasAttribute('ripple') && !element.querySelector('ons-ripple')) {\\n\\n    if (element.tagName.toLowerCase() === 'ons-list-item') {\\n      if (element.hasAttribute('tappable')) {\\n        element.setAttribute('ripple', '');\\n        element.removeAttribute('tappable');\\n      }\\n    } else {\\n      element.setAttribute('ripple', '');\\n    }\\n  }\\n};\\n\\nplatforms.ios = function (element) {\\n\\n  // Modifiers\\n  if (/material/.test(element.getAttribute('modifier'))) {\\n    util.removeModifier(element, 'material');\\n\\n    if (util.removeModifier(element, 'material--flat')) {\\n      util.addModifier(element, util.removeModifier(element, 'large') ? 'large--quiet' : 'quiet');\\n    }\\n\\n    if (!element.getAttribute('modifier')) {\\n      element.removeAttribute('modifier');\\n    }\\n  }\\n\\n  // Effects\\n  if (element.hasAttribute('ripple')) {\\n    if (element.tagName.toLowerCase() === 'ons-list-item') {\\n      element.setAttribute('tappable', '');\\n    }\\n\\n    element.removeAttribute('ripple');\\n  }\\n};\\n\\nvar unlocked = {\\n  android: true\\n};\\n\\nvar prepareAutoStyle = function prepareAutoStyle(element, force) {\\n  if (autoStyleEnabled && !element.hasAttribute('disable-auto-styling')) {\\n    var mobileOS = platform.getMobileOS();\\n    if (platforms.hasOwnProperty(mobileOS) && (unlocked.hasOwnProperty(mobileOS) || force)) {\\n      platforms[mobileOS](element);\\n    }\\n  }\\n};\\n\\nvar mapModifier = function mapModifier(modifier, element, force) {\\n  if (autoStyleEnabled && !element.hasAttribute('disable-auto-styling')) {\\n    var mobileOS = platform.getMobileOS();\\n    if (platforms.hasOwnProperty(mobileOS) && (unlocked.hasOwnProperty(mobileOS) || force)) {\\n      return modifiersMap.hasOwnProperty(modifier) ? modifiersMap[modifier] : modifier;\\n    }\\n  }\\n\\n  return modifier;\\n};\\n\\nvar autoStyle = {\\n  isEnabled: function isEnabled() {\\n    return autoStyleEnabled;\\n  },\\n  enable: function enable() {\\n    return autoStyleEnabled = true;\\n  },\\n  disable: function disable() {\\n    return autoStyleEnabled = false;\\n  },\\n  prepare: prepareAutoStyle,\\n  mapModifier: mapModifier\\n};\\n\\n/*\\nCopyright 2013-2015 ASIAL CORPORATION\\n\\nLicensed under the Apache License, Version 2.0 (the \\\"License\\\");\\nyou may not use this file except in compliance with the License.\\nYou may obtain a copy of the License at\\n\\n   http://www.apache.org/licenses/LICENSE-2.0\\n\\nUnless required by applicable law or agreed to in writing, software\\ndistributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\nSee the License for the specific language governing permissions and\\nlimitations under the License.\\n\\n*/\\n\\nvar unwrap = function unwrap(string) {\\n  return string.slice(1, -1);\\n};\\nvar isObjectString = function isObjectString(string) {\\n  return string.startsWith('{') && string.endsWith('}');\\n};\\nvar isArrayString = function isArrayString(string) {\\n  return string.startsWith('[') && string.endsWith(']');\\n};\\nvar isQuotedString = function isQuotedString(string) {\\n  return string.startsWith('\\\\'') && string.endsWith('\\\\'') || string.startsWith('\\\"') && string.endsWith('\\\"');\\n};\\n\\nvar error$1 = function error$1(token, string, originalString) {\\n  throw new Error('Unexpected token \\\\'' + token + '\\\\' at position ' + (originalString.length - string.length - 1) + ' in string: \\\\'' + originalString + '\\\\'');\\n};\\n\\nvar processToken = function processToken(token, string, originalString) {\\n  if (token === 'true' || token === 'false') {\\n    return token === 'true';\\n  } else if (isQuotedString(token)) {\\n    return unwrap(token);\\n  } else if (!isNaN(token)) {\\n    return +token;\\n  } else if (isObjectString(token)) {\\n    return parseObject(unwrap(token));\\n  } else if (isArrayString(token)) {\\n    return parseArray(unwrap(token));\\n  } else {\\n    error$1(token, string, originalString);\\n  }\\n};\\n\\nvar nextToken = function nextToken(string) {\\n  string = string.trimLeft();\\n  var limit = string.length;\\n\\n  if (string[0] === ':' || string[0] === ',') {\\n\\n    limit = 1;\\n  } else if (string[0] === '{' || string[0] === '[') {\\n\\n    var c = string.charCodeAt(0);\\n    var nestedObject = 1;\\n    for (var i = 1; i < string.length; i++) {\\n      if (string.charCodeAt(i) === c) {\\n        nestedObject++;\\n      } else if (string.charCodeAt(i) === c + 2) {\\n        nestedObject--;\\n        if (nestedObject === 0) {\\n          limit = i + 1;\\n          break;\\n        }\\n      }\\n    }\\n  } else if (string[0] === '\\\\'' || string[0] === '\\\\\\\"') {\\n\\n    for (var _i = 1; _i < string.length; _i++) {\\n      if (string[_i] === string[0]) {\\n        limit = _i + 1;\\n        break;\\n      }\\n    }\\n  } else {\\n\\n    for (var _i2 = 1; _i2 < string.length; _i2++) {\\n      if ([' ', ',', ':'].indexOf(string[_i2]) !== -1) {\\n        limit = _i2;\\n        break;\\n      }\\n    }\\n  }\\n\\n  return string.slice(0, limit);\\n};\\n\\nvar parseObject = function parseObject(string) {\\n  var isValidKey = function isValidKey(key) {\\n    return (/^[A-Z_\\\\$][A-Z0-9_\\\\$]*$/i.test(key)\\n    );\\n  };\\n\\n  string = string.trim();\\n  var originalString = string;\\n  var object = {};\\n  var readingKey = true,\\n      key = void 0,\\n      previousToken = void 0,\\n      token = void 0;\\n\\n  while (string.length > 0) {\\n    previousToken = token;\\n    token = nextToken(string);\\n    string = string.slice(token.length, string.length).trimLeft();\\n\\n    if (token === ':' && (!readingKey || !previousToken || previousToken === ',') || token === ',' && readingKey || token !== ':' && token !== ',' && previousToken && previousToken !== ',' && previousToken !== ':') {\\n      error$1(token, string, originalString);\\n    } else if (token === ':' && readingKey && previousToken) {\\n      if (isValidKey(previousToken)) {\\n        key = previousToken;\\n        readingKey = false;\\n      } else {\\n        throw new Error('Invalid key token \\\\'' + previousToken + '\\\\' at position 0 in string: \\\\'' + originalString + '\\\\'');\\n      }\\n    } else if (token === ',' && !readingKey && previousToken) {\\n      object[key] = processToken(previousToken, string, originalString);\\n      readingKey = true;\\n    }\\n  }\\n\\n  if (token) {\\n    object[key] = processToken(token, string, originalString);\\n  }\\n\\n  return object;\\n};\\n\\nvar parseArray = function parseArray(string) {\\n  string = string.trim();\\n  var originalString = string;\\n  var array = [];\\n  var previousToken = void 0,\\n      token = void 0;\\n\\n  while (string.length > 0) {\\n    previousToken = token;\\n    token = nextToken(string);\\n    string = string.slice(token.length, string.length).trimLeft();\\n\\n    if (token === ',' && (!previousToken || previousToken === ',')) {\\n      error$1(token, string, originalString);\\n    } else if (token === ',') {\\n      array.push(processToken(previousToken, string, originalString));\\n    }\\n  }\\n\\n  if (token) {\\n    if (token !== ',') {\\n      array.push(processToken(token, string, originalString));\\n    } else {\\n      error$1(token, string, originalString);\\n    }\\n  }\\n\\n  return array;\\n};\\n\\nvar parse = function parse(string) {\\n  string = string.trim();\\n\\n  if (isObjectString(string)) {\\n    return parseObject(unwrap(string));\\n  } else if (isArrayString(string)) {\\n    return parseArray(unwrap(string));\\n  } else {\\n    throw new Error('Provided string must be object or array like: ' + string);\\n  }\\n};\\n\\n/*\\nCopyright 2013-2015 ASIAL CORPORATION\\n\\nLicensed under the Apache License, Version 2.0 (the \\\"License\\\");\\nyou may not use this file except in compliance with the License.\\nYou may obtain a copy of the License at\\n\\n   http://www.apache.org/licenses/LICENSE-2.0\\n\\nUnless required by applicable law or agreed to in writing, software\\ndistributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\nSee the License for the specific language governing permissions and\\nlimitations under the License.\\n\\n*/\\n\\nvar util = {};\\n\\n/**\\n * @param {String/Function} query dot class name or node name or matcher function.\\n * @return {Function}\\n */\\nutil.prepareQuery = function (query) {\\n  return query instanceof Function ? query : function (element) {\\n    return util.match(element, query);\\n  };\\n};\\n\\n/**\\n * @param {Element} e\\n * @param {String/Function} s CSS Selector.\\n * @return {Boolean}\\n */\\nutil.match = function (e, s) {\\n  return (e.matches || e.webkitMatchesSelector || e.mozMatchesSelector || e.msMatchesSelector).call(e, s);\\n};\\n\\n/**\\n * @param {Element} element\\n * @param {String/Function} query dot class name or node name or matcher function.\\n * @return {HTMLElement/null}\\n */\\nutil.findChild = function (element, query) {\\n  var match = util.prepareQuery(query);\\n\\n  // Caution: `element.children` is `undefined` in some environments if `element` is `svg`\\n  for (var i = 0; i < element.childNodes.length; i++) {\\n    var node = element.childNodes[i];\\n    if (node.nodeType !== Node.ELEMENT_NODE) {\\n      // process only element nodes\\n      continue;\\n    }\\n    if (match(node)) {\\n      return node;\\n    }\\n  }\\n  return null;\\n};\\n\\n/**\\n * @param {Element} element\\n * @param {String/Function} query dot class name or node name or matcher function.\\n * @return {HTMLElement/null}\\n */\\nutil.findParent = function (element, query) {\\n  var match = util.prepareQuery(query);\\n\\n  var parent = element.parentNode;\\n  for (;;) {\\n    if (!parent || parent === document) {\\n      return null;\\n    }\\n    if (match(parent)) {\\n      return parent;\\n    }\\n    parent = parent.parentNode;\\n  }\\n};\\n\\n/**\\n * @param {Element} element\\n * @return {boolean}\\n */\\nutil.isAttached = function (element) {\\n  while (document.documentElement !== element) {\\n    if (!element) {\\n      return false;\\n    }\\n    element = element.parentNode;\\n  }\\n  return true;\\n};\\n\\n/**\\n * @param {Element} element\\n * @return {boolean}\\n */\\nutil.hasAnyComponentAsParent = function (element) {\\n  while (element && document.documentElement !== element) {\\n    element = element.parentNode;\\n    if (element && element.nodeName.toLowerCase().match(/(ons-navigator|ons-tabbar|ons-modal|ons-sliding-menu|ons-split-view)/)) {\\n      return true;\\n    }\\n  }\\n  return false;\\n};\\n\\n/**\\n * @param {Element} element\\n * @param {String} action to propagate\\n */\\nutil.propagateAction = function (element, action) {\\n  for (var i = 0; i < element.childNodes.length; i++) {\\n    var child = element.childNodes[i];\\n    if (child[action] instanceof Function) {\\n      child[action]();\\n    } else {\\n      util.propagateAction(child, action);\\n    }\\n  }\\n};\\n\\n/**\\n * @param {String} selector - tag and class only\\n * @param {Object} style\\n * @param {Element}\\n */\\nutil.create = function () {\\n  var selector = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\\n  var style = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\\n\\n  var classList = selector.split('.');\\n  var element = document.createElement(classList.shift() || 'div');\\n\\n  if (classList.length) {\\n    element.className = classList.join(' ');\\n  }\\n\\n  util.extend(element.style, style);\\n\\n  return element;\\n};\\n\\n/**\\n * @param {String} html\\n * @return {Element}\\n */\\nutil.createElement = function (html) {\\n  var wrapper = document.createElement('div');\\n  wrapper.innerHTML = html;\\n\\n  if (wrapper.children.length > 1) {\\n    throw new Error('\\\"html\\\" must be one wrapper element.');\\n  }\\n\\n  return wrapper.children[0];\\n};\\n\\n/**\\n * @param {String} html\\n * @return {HTMLFragment}\\n */\\nutil.createFragment = function (html) {\\n  var wrapper = document.createElement('div');\\n  wrapper.innerHTML = html;\\n  var fragment = document.createDocumentFragment();\\n\\n  while (wrapper.firstChild) {\\n    fragment.appendChild(wrapper.firstChild);\\n  }\\n\\n  return fragment;\\n};\\n\\n/*\\n * @param {Object} dst Destination object.\\n * @param {...Object} src Source object(s).\\n * @returns {Object} Reference to `dst`.\\n */\\nutil.extend = function (dst) {\\n  for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\\n    args[_key - 1] = arguments[_key];\\n  }\\n\\n  for (var i = 0; i < args.length; i++) {\\n    if (args[i]) {\\n      var keys = Object.keys(args[i]);\\n      for (var j = 0; j < keys.length; j++) {\\n        var key = keys[j];\\n        dst[key] = args[i][key];\\n      }\\n    }\\n  }\\n\\n  return dst;\\n};\\n\\n/**\\n * @param {Object} arrayLike\\n * @return {Array}\\n */\\nutil.arrayFrom = function (arrayLike) {\\n  return Array.prototype.slice.apply(arrayLike);\\n};\\n\\n/**\\n * @param {String} jsonString\\n * @param {Object} [failSafe]\\n * @return {Object}\\n */\\nutil.parseJSONObjectSafely = function (jsonString) {\\n  var failSafe = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\\n\\n  try {\\n    var result = JSON.parse('' + jsonString);\\n    if ((typeof result === 'undefined' ? 'undefined' : _typeof(result)) === 'object' && result !== null) {\\n      return result;\\n    }\\n  } catch (e) {\\n    return failSafe;\\n  }\\n  return failSafe;\\n};\\n\\n/**\\n * @param {String} path - path such as 'myApp.controllers.data.loadData'\\n * @return {Any} - whatever is located at that path\\n */\\nutil.findFromPath = function (path) {\\n  path = path.split('.');\\n  var el = window,\\n      key;\\n  while (key = path.shift()) {\\n    // eslint-disable-line no-cond-assign\\n    el = el[key];\\n  }\\n  return el;\\n};\\n\\n/**\\n * @param {HTMLElement} container - Page or page-container that implements 'topPage'\\n * @return {HTMLElement|null} - Visible page element or null if not found.\\n */\\nutil.getTopPage = function (container) {\\n  return container && (container.tagName.toLowerCase() === 'ons-page' ? container : container.topPage) || null;\\n};\\n\\n/**\\n * @param {HTMLElement} container - Element where the search begins\\n * @return {HTMLElement|null} - Page element that contains the visible toolbar or null.\\n */\\nutil.findToolbarPage = function (container) {\\n  var page = util.getTopPage(container);\\n\\n  if (page) {\\n    if (util.findChild(page, 'ons-toolbar')) {\\n      return page;\\n    }\\n\\n    for (var i = 0; i < page._contentElement.children.length; i++) {\\n      var nextPage = util.getTopPage(page._contentElement.children[i]);\\n      if (nextPage) {\\n        return util.findToolbarPage(nextPage);\\n      }\\n    }\\n  }\\n\\n  return null;\\n};\\n\\n/**\\n * @param {Element} element\\n * @param {String} eventName\\n * @param {Object} [detail]\\n * @return {CustomEvent}\\n */\\nutil.triggerElementEvent = function (target, eventName) {\\n  var detail = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\\n\\n\\n  var event = new CustomEvent(eventName, {\\n    bubbles: true,\\n    cancelable: true,\\n    detail: detail\\n  });\\n\\n  Object.keys(detail).forEach(function (key) {\\n    event[key] = detail[key];\\n  });\\n\\n  target.dispatchEvent(event);\\n\\n  return event;\\n};\\n\\n/**\\n * @param {Element} target\\n * @param {String} modifierName\\n * @return {Boolean}\\n */\\nutil.hasModifier = function (target, modifierName) {\\n  if (!target.hasAttribute('modifier')) {\\n    return false;\\n  }\\n  return target.getAttribute('modifier').split(/\\\\s+/).some(function (e) {\\n    return e === modifierName;\\n  });\\n};\\n\\n/**\\n * @param {Element} target\\n * @param {String} modifierName\\n * @param {Object} options.autoStyle Maps the modifierName to the corresponding styled modifier.\\n * @param {Object} options.forceAutoStyle Ignores platform limitation.\\n * @return {Boolean} Whether it was added or not.\\n */\\nutil.addModifier = function (target, modifierName) {\\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\\n\\n  if (options.autoStyle) {\\n    modifierName = autoStyle.mapModifier(modifierName, target, options.forceAutoStyle);\\n  }\\n\\n  if (util.hasModifier(target, modifierName)) {\\n    return false;\\n  }\\n\\n  modifierName = modifierName.trim();\\n  var modifierAttribute = target.getAttribute('modifier') || '';\\n  target.setAttribute('modifier', (modifierAttribute + ' ' + modifierName).trim());\\n  return true;\\n};\\n\\n/**\\n * @param {Element} target\\n * @param {String} modifierName\\n * @param {Object} options.autoStyle Maps the modifierName to the corresponding styled modifier.\\n * @param {Object} options.forceAutoStyle Ignores platform limitation.\\n * @return {Boolean} Whether it was found or not.\\n */\\nutil.removeModifier = function (target, modifierName) {\\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\\n\\n  if (!target.getAttribute('modifier')) {\\n    return false;\\n  }\\n\\n  if (options.autoStyle) {\\n    modifierName = autoStyle.mapModifier(modifierName, target, options.forceAutoStyle);\\n  }\\n\\n  var modifiers = target.getAttribute('modifier').split(/\\\\s+/);\\n\\n  var newModifiers = modifiers.filter(function (item) {\\n    return item && item !== modifierName;\\n  });\\n  target.setAttribute('modifier', newModifiers.join(' '));\\n\\n  return modifiers.length !== newModifiers.length;\\n};\\n\\n// TODO: FIX\\nutil.updateParentPosition = function (el) {\\n  if (!el._parentUpdated && el.parentElement) {\\n    if (window.getComputedStyle(el.parentElement).getPropertyValue('position') === 'static') {\\n      el.parentElement.style.position = 'relative';\\n    }\\n    el._parentUpdated = true;\\n  }\\n};\\n\\nutil.toggleAttribute = function (element, name, value) {\\n  if (value) {\\n    element.setAttribute(name, value);\\n  } else {\\n    element.removeAttribute(name);\\n  }\\n};\\n\\nutil.bindListeners = function (element, listenerNames) {\\n  listenerNames.forEach(function (name) {\\n    var boundName = name.replace(/^_[a-z]/, '_bound' + name[1].toUpperCase());\\n    element[boundName] = element[boundName] || element[name].bind(element);\\n  });\\n};\\n\\nutil.each = function (obj, f) {\\n  return Object.keys(obj).forEach(function (key) {\\n    return f(key, obj[key]);\\n  });\\n};\\n\\n/**\\n * @param {Element} target\\n * @param {Element} hasRipple\\n */\\nutil.updateRipple = function (target, hasRipple) {\\n  if (hasRipple === undefined) {\\n    hasRipple = target.hasAttribute('ripple');\\n  }\\n\\n  var rippleElement = util.findChild(target, 'ons-ripple');\\n\\n  if (hasRipple) {\\n    if (!rippleElement) {\\n      target.insertBefore(document.createElement('ons-ripple'), target.firstChild);\\n    }\\n  } else if (rippleElement) {\\n    rippleElement.remove();\\n  }\\n};\\n\\n/**\\n * @param {String}\\n * @return {Object}\\n */\\nutil.animationOptionsParse = parse;\\n\\n/**\\n * @param {*} value\\n */\\nutil.isInteger = function (value) {\\n  return typeof value === 'number' && isFinite(value) && Math.floor(value) === value;\\n};\\n\\n/**\\n * @return {Obejct} Deferred promise.\\n */\\nutil.defer = function () {\\n  var deferred = {};\\n  deferred.promise = new Promise(function (resolve, reject) {\\n    deferred.resolve = resolve;\\n    deferred.reject = reject;\\n  });\\n  return deferred;\\n};\\n\\n/**\\n * Show warnings when they are enabled.\\n *\\n * @param {*} arguments to console.warn\\n */\\nutil.warn = function () {\\n  if (!internal$1.config.warningsDisabled) {\\n    var _console;\\n\\n    (_console = console).warn.apply(_console, arguments);\\n  }\\n};\\n\\n/*\\nCopyright 2013-2015 ASIAL CORPORATION\\n\\nLicensed under the Apache License, Version 2.0 (the \\\"License\\\");\\nyou may not use this file except in compliance with the License.\\nYou may obtain a copy of the License at\\n\\n   http://www.apache.org/licenses/LICENSE-2.0\\n\\nUnless required by applicable law or agreed to in writing, software\\ndistributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\nSee the License for the specific language governing permissions and\\nlimitations under the License.\\n\\n*/\\n\\n/**\\n * Minimal animation library for managing css transition on mobile browsers.\\n */\\nvar TIMEOUT_RATIO = 1.4;\\n\\nvar util$2 = {};\\n\\n// capitalize string\\nutil$2.capitalize = function (str) {\\n  return str.charAt(0).toUpperCase() + str.slice(1);\\n};\\n\\n/**\\n * @param {Object} params\\n * @param {String} params.property\\n * @param {Float} params.duration\\n * @param {String} params.timing\\n */\\nutil$2.buildTransitionValue = function (params) {\\n  params.property = params.property || 'all';\\n  params.duration = params.duration || 0.4;\\n  params.timing = params.timing || 'linear';\\n\\n  var props = params.property.split(/ +/);\\n\\n  return props.map(function (prop) {\\n    return prop + ' ' + params.duration + 's ' + params.timing;\\n  }).join(', ');\\n};\\n\\n/**\\n * Add an event handler on \\\"transitionend\\\" event.\\n */\\nutil$2.onceOnTransitionEnd = function (element, callback) {\\n  if (!element) {\\n    return function () {};\\n  }\\n\\n  var fn = function fn(event) {\\n    if (element == event.target) {\\n      event.stopPropagation();\\n      removeListeners();\\n\\n      callback();\\n    }\\n  };\\n\\n  var removeListeners = function removeListeners() {\\n    util$2._transitionEndEvents.forEach(function (eventName) {\\n      element.removeEventListener(eventName, fn, false);\\n    });\\n  };\\n\\n  util$2._transitionEndEvents.forEach(function (eventName) {\\n    element.addEventListener(eventName, fn, false);\\n  });\\n\\n  return removeListeners;\\n};\\n\\nutil$2._transitionEndEvents = function () {\\n\\n  if ('ontransitionend' in window) {\\n    return ['transitionend'];\\n  }\\n\\n  if ('onwebkittransitionend' in window) {\\n    return ['webkitTransitionEnd'];\\n  }\\n\\n  if (util$2.vendorPrefix === 'webkit' || util$2.vendorPrefix === 'o' || util$2.vendorPrefix === 'moz' || util$2.vendorPrefix === 'ms') {\\n    return [util$2.vendorPrefix + 'TransitionEnd', 'transitionend'];\\n  }\\n\\n  return [];\\n}();\\n\\nutil$2._cssPropertyDict = function () {\\n  var styles = window.getComputedStyle(document.documentElement, '');\\n  var dict = {};\\n  var a = 'A'.charCodeAt(0);\\n  var z = 'z'.charCodeAt(0);\\n\\n  var upper = function upper(s) {\\n    return s.substr(1).toUpperCase();\\n  };\\n\\n  for (var i = 0; i < styles.length; i++) {\\n\\n    var key = styles[i].replace(/^[\\\\-]+/, '').replace(/[\\\\-][a-z]/g, upper).replace(/^moz/, 'Moz');\\n\\n    if (a <= key.charCodeAt(0) && z >= key.charCodeAt(0)) {\\n      if (key !== 'cssText' && key !== 'parentText') {\\n        dict[key] = true;\\n      }\\n    }\\n  }\\n\\n  return dict;\\n}();\\n\\nutil$2.hasCssProperty = function (name) {\\n  return name in util$2._cssPropertyDict;\\n};\\n\\n/**\\n * Vendor prefix for css property.\\n */\\nutil$2.vendorPrefix = function () {\\n  var styles = window.getComputedStyle(document.documentElement, ''),\\n      pre = (Array.prototype.slice.call(styles).join('').match(/-(moz|webkit|ms)-/) || styles.OLink === '' && ['', 'o'])[1];\\n  return pre;\\n}();\\n\\nutil$2.forceLayoutAtOnce = function (elements, callback) {\\n  this.batchImmediate(function () {\\n    elements.forEach(function (element) {\\n      // force layout\\n      element.offsetHeight;\\n    });\\n    callback();\\n  });\\n};\\n\\nutil$2.batchImmediate = function () {\\n  var callbacks = [];\\n\\n  return function (callback) {\\n    if (callbacks.length === 0) {\\n      setImmediate(function () {\\n        var concreateCallbacks = callbacks.slice(0);\\n        callbacks = [];\\n        concreateCallbacks.forEach(function (callback) {\\n          callback();\\n        });\\n      });\\n    }\\n\\n    callbacks.push(callback);\\n  };\\n}();\\n\\nutil$2.batchAnimationFrame = function () {\\n  var callbacks = [];\\n\\n  var raf = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {\\n    setTimeout(callback, 1000 / 60);\\n  };\\n\\n  return function (callback) {\\n    if (callbacks.length === 0) {\\n      raf(function () {\\n        var concreateCallbacks = callbacks.slice(0);\\n        callbacks = [];\\n        concreateCallbacks.forEach(function (callback) {\\n          callback();\\n        });\\n      });\\n    }\\n\\n    callbacks.push(callback);\\n  };\\n}();\\n\\nutil$2.transitionPropertyName = function () {\\n  if (util$2.hasCssProperty('transitionDuration')) {\\n    return 'transition';\\n  }\\n\\n  if (util$2.hasCssProperty(util$2.vendorPrefix + 'TransitionDuration')) {\\n    return util$2.vendorPrefix + 'Transition';\\n  }\\n\\n  throw new Error('Invalid state');\\n}();\\n\\n/**\\n * @param {HTMLElement} element\\n */\\nvar Animit = function Animit(element) {\\n  if (!(this instanceof Animit)) {\\n    return new Animit(element);\\n  }\\n\\n  if (element instanceof HTMLElement) {\\n    this.elements = [element];\\n  } else if (Object.prototype.toString.call(element) === '[object Array]') {\\n    this.elements = element;\\n  } else {\\n    throw new Error('First argument must be an array or an instance of HTMLElement.');\\n  }\\n\\n  this.transitionQueue = [];\\n  this.lastStyleAttributeDict = [];\\n};\\n\\nAnimit.prototype = {\\n\\n  /**\\n   * @property {Array}\\n   */\\n  transitionQueue: undefined,\\n\\n  /**\\n   * @property {Array}\\n   */\\n  elements: undefined,\\n\\n  /**\\n   * Start animation sequence with passed animations.\\n   *\\n   * @param {Function} callback\\n   */\\n  play: function play(callback) {\\n    if (typeof callback === 'function') {\\n      this.transitionQueue.push(function (done) {\\n        callback();\\n        done();\\n      });\\n    }\\n\\n    this.startAnimation();\\n\\n    return this;\\n  },\\n\\n  /**\\n   * Queue transition animations or other function.\\n   *\\n   * e.g. animit(elt).queue({color: 'red'})\\n   * e.g. animit(elt).queue({color: 'red'}, {duration: 0.4})\\n   * e.g. animit(elt).queue({css: {color: 'red'}, duration: 0.2})\\n   *\\n   * @param {Object|Animit.Transition|Function} transition\\n   * @param {Object} [options]\\n   */\\n  queue: function queue(transition, options) {\\n    var queue = this.transitionQueue;\\n\\n    if (transition && options) {\\n      options.css = transition;\\n      transition = new Animit.Transition(options);\\n    }\\n\\n    if (!(transition instanceof Function || transition instanceof Animit.Transition)) {\\n      if (transition.css) {\\n        transition = new Animit.Transition(transition);\\n      } else {\\n        transition = new Animit.Transition({\\n          css: transition\\n        });\\n      }\\n    }\\n\\n    if (transition instanceof Function) {\\n      queue.push(transition);\\n    } else if (transition instanceof Animit.Transition) {\\n      queue.push(transition.build());\\n    } else {\\n      throw new Error('Invalid arguments');\\n    }\\n\\n    return this;\\n  },\\n\\n  /**\\n   * Queue transition animations.\\n   *\\n   * @param {Float} seconds\\n   */\\n  wait: function wait(seconds) {\\n    if (seconds > 0) {\\n      this.transitionQueue.push(function (done) {\\n        setTimeout(done, 1000 * seconds);\\n      });\\n    }\\n\\n    return this;\\n  },\\n\\n  saveStyle: function saveStyle() {\\n\\n    this.transitionQueue.push(function (done) {\\n      this.elements.forEach(function (element, index) {\\n        var css = this.lastStyleAttributeDict[index] = {};\\n\\n        for (var i = 0; i < element.style.length; i++) {\\n          css[element.style[i]] = element.style[element.style[i]];\\n        }\\n      }.bind(this));\\n      done();\\n    }.bind(this));\\n\\n    return this;\\n  },\\n\\n  /**\\n   * Restore element's style.\\n   *\\n   * @param {Object} [options]\\n   * @param {Float} [options.duration]\\n   * @param {String} [options.timing]\\n   * @param {String} [options.transition]\\n   */\\n  restoreStyle: function restoreStyle(options) {\\n    options = options || {};\\n    var self = this;\\n\\n    if (options.transition && !options.duration) {\\n      throw new Error('\\\"options.duration\\\" is required when \\\"options.transition\\\" is enabled.');\\n    }\\n\\n    var transitionName = util$2.transitionPropertyName;\\n\\n    if (options.transition || options.duration && options.duration > 0) {\\n      var transitionValue = options.transition || 'all ' + options.duration + 's ' + (options.timing || 'linear');\\n\\n      this.transitionQueue.push(function (done) {\\n        var elements = this.elements;\\n        var timeoutId;\\n\\n        var clearTransition = function clearTransition() {\\n          elements.forEach(function (element) {\\n            element.style[transitionName] = '';\\n          });\\n        };\\n\\n        // add \\\"transitionend\\\" event handler\\n        var removeListeners = util$2.onceOnTransitionEnd(elements[0], function () {\\n          clearTimeout(timeoutId);\\n          clearTransition();\\n          done();\\n        });\\n\\n        // for fail safe.\\n        timeoutId = setTimeout(function () {\\n          removeListeners();\\n          clearTransition();\\n          done();\\n        }, options.duration * 1000 * TIMEOUT_RATIO);\\n\\n        // transition and style settings\\n        elements.forEach(function (element, index) {\\n\\n          var css = self.lastStyleAttributeDict[index];\\n\\n          if (!css) {\\n            throw new Error('restoreStyle(): The style is not saved. Invoke saveStyle() before.');\\n          }\\n\\n          self.lastStyleAttributeDict[index] = undefined;\\n\\n          var name;\\n          for (var i = 0, len = element.style.length; i < len; i++) {\\n            name = element.style[i];\\n            if (css[name] === undefined) {\\n              css[name] = '';\\n            }\\n          }\\n\\n          element.style[transitionName] = transitionValue;\\n\\n          Object.keys(css).forEach(function (key) {\\n            if (key !== transitionName) {\\n              element.style[key] = css[key];\\n            }\\n          });\\n\\n          element.style[transitionName] = transitionValue;\\n        });\\n      });\\n    } else {\\n      this.transitionQueue.push(function (done) {\\n        reset();\\n        done();\\n      });\\n    }\\n\\n    return this;\\n\\n    function reset() {\\n      // Clear transition animation settings.\\n      self.elements.forEach(function (element, index) {\\n        element.style[transitionName] = 'none';\\n\\n        var css = self.lastStyleAttributeDict[index];\\n\\n        if (!css) {\\n          throw new Error('restoreStyle(): The style is not saved. Invoke saveStyle() before.');\\n        }\\n\\n        self.lastStyleAttributeDict[index] = undefined;\\n\\n        for (var i = 0, name = ''; i < element.style.length; i++) {\\n          name = element.style[i];\\n          if (typeof css[element.style[i]] === 'undefined') {\\n            css[element.style[i]] = '';\\n          }\\n        }\\n\\n        Object.keys(css).forEach(function (key) {\\n          element.style[key] = css[key];\\n        });\\n      });\\n    }\\n  },\\n\\n  /**\\n   * Start animation sequence.\\n   */\\n  startAnimation: function startAnimation() {\\n    this._dequeueTransition();\\n\\n    return this;\\n  },\\n\\n  _dequeueTransition: function _dequeueTransition() {\\n    var transition = this.transitionQueue.shift();\\n    if (this._currentTransition) {\\n      throw new Error('Current transition exists.');\\n    }\\n    this._currentTransition = transition;\\n    var self = this;\\n    var called = false;\\n\\n    var done = function done() {\\n      if (!called) {\\n        called = true;\\n        self._currentTransition = undefined;\\n        self._dequeueTransition();\\n      } else {\\n        throw new Error('Invalid state: This callback is called twice.');\\n      }\\n    };\\n\\n    if (transition) {\\n      transition.call(this, done);\\n    }\\n  }\\n\\n};\\n\\n/**\\n * @param {Animit} arguments\\n */\\nAnimit.runAll = function () /* arguments... */{\\n  for (var i = 0; i < arguments.length; i++) {\\n    arguments[i].play();\\n  }\\n};\\n\\n/**\\n * @param {Object} options\\n * @param {Float} [options.duration]\\n * @param {String} [options.property]\\n * @param {String} [options.timing]\\n */\\nAnimit.Transition = function (options) {\\n  this.options = options || {};\\n  this.options.duration = this.options.duration || 0;\\n  this.options.timing = this.options.timing || 'linear';\\n  this.options.css = this.options.css || {};\\n  this.options.property = this.options.property || 'all';\\n};\\n\\nAnimit.Transition.prototype = {\\n\\n  /**\\n   * @param {HTMLElement} element\\n   * @return {Function}\\n   */\\n  build: function build() {\\n\\n    if (Object.keys(this.options.css).length === 0) {\\n      throw new Error('options.css is required.');\\n    }\\n\\n    var css = createActualCssProps(this.options.css);\\n\\n    if (this.options.duration > 0) {\\n      var transitionValue = util$2.buildTransitionValue(this.options);\\n      var self = this;\\n\\n      return function (callback) {\\n        var elements = this.elements;\\n        var timeout = self.options.duration * 1000 * TIMEOUT_RATIO;\\n        var timeoutId;\\n\\n        var removeListeners = util$2.onceOnTransitionEnd(elements[0], function () {\\n          clearTimeout(timeoutId);\\n          callback();\\n        });\\n\\n        timeoutId = setTimeout(function () {\\n          removeListeners();\\n          callback();\\n        }, timeout);\\n\\n        elements.forEach(function (element) {\\n          element.style[util$2.transitionPropertyName] = transitionValue;\\n\\n          Object.keys(css).forEach(function (name) {\\n            element.style[name] = css[name];\\n          });\\n        });\\n      };\\n    }\\n\\n    if (this.options.duration <= 0) {\\n      return function (callback) {\\n        var elements = this.elements;\\n\\n        elements.forEach(function (element) {\\n          element.style[util$2.transitionPropertyName] = '';\\n\\n          Object.keys(css).forEach(function (name) {\\n            element.style[name] = css[name];\\n          });\\n        });\\n\\n        if (elements.length > 0) {\\n          util$2.forceLayoutAtOnce(elements, function () {\\n            util$2.batchAnimationFrame(callback);\\n          });\\n        } else {\\n          util$2.batchAnimationFrame(callback);\\n        }\\n      };\\n    }\\n\\n    function createActualCssProps(css) {\\n      var result = {};\\n\\n      Object.keys(css).forEach(function (name) {\\n        var value = css[name];\\n\\n        if (util$2.hasCssProperty(name)) {\\n          result[name] = value;\\n          return;\\n        }\\n\\n        var prefixed = util$2.vendorPrefix + util$2.capitalize(name);\\n        if (util$2.hasCssProperty(prefixed)) {\\n          result[prefixed] = value;\\n        } else {\\n          result[prefixed] = value;\\n          result[name] = value;\\n        }\\n      });\\n\\n      return result;\\n    }\\n  }\\n};\\n\\n/*\\n * Gesture detector library that forked from github.com/EightMedia/hammer.js.\\n */\\n\\nvar Event$1;\\nvar Utils;\\nvar Detection;\\nvar PointerEvent;\\n\\n/**\\n * @object ons.GestureDetector\\n * @category gesture\\n * @description\\n *   [en]Utility class for gesture detection.[/en]\\n *   [ja]ジェスチャを検知するためのユーティリティクラスです。[/ja]\\n */\\n\\n/**\\n * @method constructor\\n * @signature constructor(element[, options])\\n * @description\\n *  [en]Create a new GestureDetector instance.[/en]\\n *  [ja]GestureDetectorのインスタンスを生成します。[/ja]\\n * @param {Element} element\\n *   [en]Name of the event.[/en]\\n *   [ja]ジェスチャを検知するDOM要素を指定します。[/ja]\\n * @param {Object} [options]\\n *   [en]Options object.[/en]\\n *   [ja]オプションを指定します。[/ja]\\n * @return {ons.GestureDetector.Instance}\\n */\\nvar GestureDetector = function GestureDetector(element, options) {\\n  return new GestureDetector.Instance(element, options || {});\\n};\\n\\n/**\\n * default settings.\\n * more settings are defined per gesture at `/gestures`. Each gesture can be disabled/enabled\\n * by setting it's name (like `swipe`) to false.\\n * You can set the defaults for all instances by changing this object before creating an instance.\\n * @example\\n * ````\\n *  GestureDetector.defaults.drag = false;\\n *  GestureDetector.defaults.behavior.touchAction = 'pan-y';\\n *  delete GestureDetector.defaults.behavior.userSelect;\\n * ````\\n * @property defaults\\n * @type {Object}\\n */\\nGestureDetector.defaults = {\\n  behavior: {\\n    // userSelect: 'none', // Also disables selection in `input` children\\n    touchAction: 'pan-y',\\n    touchCallout: 'none',\\n    contentZooming: 'none',\\n    userDrag: 'none',\\n    tapHighlightColor: 'rgba(0,0,0,0)'\\n  }\\n};\\n\\n/**\\n * GestureDetector document where the base events are added at\\n * @property DOCUMENT\\n * @type {HTMLElement}\\n * @default window.document\\n */\\nGestureDetector.DOCUMENT = document;\\n\\n/**\\n * detect support for pointer events\\n * @property HAS_POINTEREVENTS\\n * @type {Boolean}\\n */\\nGestureDetector.HAS_POINTEREVENTS = navigator.pointerEnabled || navigator.msPointerEnabled;\\n\\n/**\\n * detect support for touch events\\n * @property HAS_TOUCHEVENTS\\n * @type {Boolean}\\n */\\nGestureDetector.HAS_TOUCHEVENTS = 'ontouchstart' in window;\\n\\n/**\\n * detect mobile browsers\\n * @property IS_MOBILE\\n * @type {Boolean}\\n */\\nGestureDetector.IS_MOBILE = /mobile|tablet|ip(ad|hone|od)|android|silk/i.test(navigator.userAgent);\\n\\n/**\\n * detect if we want to support mouseevents at all\\n * @property NO_MOUSEEVENTS\\n * @type {Boolean}\\n */\\nGestureDetector.NO_MOUSEEVENTS = GestureDetector.HAS_TOUCHEVENTS && GestureDetector.IS_MOBILE || GestureDetector.HAS_POINTEREVENTS;\\n\\n/**\\n * interval in which GestureDetector recalculates current velocity/direction/angle in ms\\n * @property CALCULATE_INTERVAL\\n * @type {Number}\\n * @default 25\\n */\\nGestureDetector.CALCULATE_INTERVAL = 25;\\n\\n/**\\n * eventtypes per touchevent (start, move, end) are filled by `Event.determineEventTypes` on `setup`\\n * the object contains the DOM event names per type (`EVENT_START`, `EVENT_MOVE`, `EVENT_END`)\\n * @property EVENT_TYPES\\n * @private\\n * @writeOnce\\n * @type {Object}\\n */\\nvar EVENT_TYPES = {};\\n\\n/**\\n * direction strings, for safe comparisons\\n * @property DIRECTION_DOWN|LEFT|UP|RIGHT\\n * @final\\n * @type {String}\\n * @default 'down' 'left' 'up' 'right'\\n */\\nvar DIRECTION_DOWN = GestureDetector.DIRECTION_DOWN = 'down';\\nvar DIRECTION_LEFT = GestureDetector.DIRECTION_LEFT = 'left';\\nvar DIRECTION_UP = GestureDetector.DIRECTION_UP = 'up';\\nvar DIRECTION_RIGHT = GestureDetector.DIRECTION_RIGHT = 'right';\\n\\n/**\\n * pointertype strings, for safe comparisons\\n * @property POINTER_MOUSE|TOUCH|PEN\\n * @final\\n * @type {String}\\n * @default 'mouse' 'touch' 'pen'\\n */\\nvar POINTER_MOUSE = GestureDetector.POINTER_MOUSE = 'mouse';\\nvar POINTER_TOUCH = GestureDetector.POINTER_TOUCH = 'touch';\\nvar POINTER_PEN = GestureDetector.POINTER_PEN = 'pen';\\n\\n/**\\n * eventtypes\\n * @property EVENT_START|MOVE|END|RELEASE|TOUCH\\n * @final\\n * @type {String}\\n * @default 'start' 'change' 'move' 'end' 'release' 'touch'\\n */\\nvar EVENT_START = GestureDetector.EVENT_START = 'start';\\nvar EVENT_MOVE = GestureDetector.EVENT_MOVE = 'move';\\nvar EVENT_END = GestureDetector.EVENT_END = 'end';\\nvar EVENT_RELEASE = GestureDetector.EVENT_RELEASE = 'release';\\nvar EVENT_TOUCH = GestureDetector.EVENT_TOUCH = 'touch';\\n\\n/**\\n * if the window events are set...\\n * @property READY\\n * @writeOnce\\n * @type {Boolean}\\n * @default false\\n */\\nGestureDetector.READY = false;\\n\\n/**\\n * plugins namespace\\n * @property plugins\\n * @type {Object}\\n */\\nGestureDetector.plugins = GestureDetector.plugins || {};\\n\\n/**\\n * gestures namespace\\n * see `/gestures` for the definitions\\n * @property gestures\\n * @type {Object}\\n */\\nGestureDetector.gestures = GestureDetector.gestures || {};\\n\\n/**\\n * setup events to detect gestures on the document\\n * this function is called when creating an new instance\\n * @private\\n */\\nfunction setup() {\\n  if (GestureDetector.READY) {\\n    return;\\n  }\\n\\n  // find what eventtypes we add listeners to\\n  Event$1.determineEventTypes();\\n\\n  // Register all gestures inside GestureDetector.gestures\\n  Utils.each(GestureDetector.gestures, function (gesture) {\\n    Detection.register(gesture);\\n  });\\n\\n  // Add touch events on the document\\n  Event$1.onTouch(GestureDetector.DOCUMENT, EVENT_MOVE, Detection.detect);\\n  Event$1.onTouch(GestureDetector.DOCUMENT, EVENT_END, Detection.detect);\\n\\n  // GestureDetector is ready...!\\n  GestureDetector.READY = true;\\n}\\n\\n/**\\n * @module GestureDetector\\n *\\n * @class Utils\\n * @static\\n */\\nUtils = GestureDetector.utils = {\\n  /**\\n   * extend method, could also be used for cloning when `dest` is an empty object.\\n   * changes the dest object\\n   * @param {Object} dest\\n   * @param {Object} src\\n   * @param {Boolean} [merge=false]  do a merge\\n   * @return {Object} dest\\n   */\\n  extend: function extend(dest, src, merge) {\\n    for (var key in src) {\\n      if (src.hasOwnProperty(key) && (dest[key] === undefined || !merge)) {\\n        dest[key] = src[key];\\n      }\\n    }\\n    return dest;\\n  },\\n\\n  /**\\n   * simple addEventListener wrapper\\n   * @param {HTMLElement} element\\n   * @param {String} type\\n   * @param {Function} handler\\n   */\\n  on: function on(element, type, handler) {\\n    element.addEventListener(type, handler, false);\\n  },\\n\\n  /**\\n   * simple removeEventListener wrapper\\n   * @param {HTMLElement} element\\n   * @param {String} type\\n   * @param {Function} handler\\n   */\\n  off: function off(element, type, handler) {\\n    element.removeEventListener(type, handler, false);\\n  },\\n\\n  /**\\n   * forEach over arrays and objects\\n   * @param {Object|Array} obj\\n   * @param {Function} iterator\\n   * @param {any} iterator.item\\n   * @param {Number} iterator.index\\n   * @param {Object|Array} iterator.obj the source object\\n   * @param {Object} context value to use as `this` in the iterator\\n   */\\n  each: function each(obj, iterator, context) {\\n    var i, len;\\n\\n    // native forEach on arrays\\n    if ('forEach' in obj) {\\n      obj.forEach(iterator, context);\\n      // arrays\\n    } else if (obj.length !== undefined) {\\n      for (i = 0, len = obj.length; i < len; i++) {\\n        if (iterator.call(context, obj[i], i, obj) === false) {\\n          return;\\n        }\\n      }\\n      // objects\\n    } else {\\n      for (i in obj) {\\n        if (obj.hasOwnProperty(i) && iterator.call(context, obj[i], i, obj) === false) {\\n          return;\\n        }\\n      }\\n    }\\n  },\\n\\n  /**\\n   * find if a string contains the string using indexOf\\n   * @param {String} src\\n   * @param {String} find\\n   * @return {Boolean} found\\n   */\\n  inStr: function inStr(src, find) {\\n    return src.indexOf(find) > -1;\\n  },\\n\\n  /**\\n   * find if a array contains the object using indexOf or a simple polyfill\\n   * @param {String} src\\n   * @param {String} find\\n   * @return {Boolean|Number} false when not found, or the index\\n   */\\n  inArray: function inArray(src, find) {\\n    if (src.indexOf) {\\n      var index = src.indexOf(find);\\n      return index === -1 ? false : index;\\n    } else {\\n      for (var i = 0, len = src.length; i < len; i++) {\\n        if (src[i] === find) {\\n          return i;\\n        }\\n      }\\n      return false;\\n    }\\n  },\\n\\n  /**\\n   * convert an array-like object (`arguments`, `touchlist`) to an array\\n   * @param {Object} obj\\n   * @return {Array}\\n   */\\n  toArray: function toArray(obj) {\\n    return Array.prototype.slice.call(obj, 0);\\n  },\\n\\n  /**\\n   * find if a node is in the given parent\\n   * @param {HTMLElement} node\\n   * @param {HTMLElement} parent\\n   * @return {Boolean} found\\n   */\\n  hasParent: function hasParent(node, parent) {\\n    while (node) {\\n      if (node == parent) {\\n        return true;\\n      }\\n      node = node.parentNode;\\n    }\\n    return false;\\n  },\\n\\n  /**\\n   * get the center of all the touches\\n   * @param {Array} touches\\n   * @return {Object} center contains `pageX`, `pageY`, `clientX` and `clientY` properties\\n   */\\n  getCenter: function getCenter(touches) {\\n    var pageX = [],\\n        pageY = [],\\n        clientX = [],\\n        clientY = [],\\n        min = Math.min,\\n        max = Math.max;\\n\\n    // no need to loop when only one touch\\n    if (touches.length === 1) {\\n      return {\\n        pageX: touches[0].pageX,\\n        pageY: touches[0].pageY,\\n        clientX: touches[0].clientX,\\n        clientY: touches[0].clientY\\n      };\\n    }\\n\\n    Utils.each(touches, function (touch) {\\n      pageX.push(touch.pageX);\\n      pageY.push(touch.pageY);\\n      clientX.push(touch.clientX);\\n      clientY.push(touch.clientY);\\n    });\\n\\n    return {\\n      pageX: (min.apply(Math, pageX) + max.apply(Math, pageX)) / 2,\\n      pageY: (min.apply(Math, pageY) + max.apply(Math, pageY)) / 2,\\n      clientX: (min.apply(Math, clientX) + max.apply(Math, clientX)) / 2,\\n      clientY: (min.apply(Math, clientY) + max.apply(Math, clientY)) / 2\\n    };\\n  },\\n\\n  /**\\n   * calculate the velocity between two points. unit is in px per ms.\\n   * @param {Number} deltaTime\\n   * @param {Number} deltaX\\n   * @param {Number} deltaY\\n   * @return {Object} velocity `x` and `y`\\n   */\\n  getVelocity: function getVelocity(deltaTime, deltaX, deltaY) {\\n    return {\\n      x: Math.abs(deltaX / deltaTime) || 0,\\n      y: Math.abs(deltaY / deltaTime) || 0\\n    };\\n  },\\n\\n  /**\\n   * calculate the angle between two coordinates\\n   * @param {Touch} touch1\\n   * @param {Touch} touch2\\n   * @return {Number} angle\\n   */\\n  getAngle: function getAngle(touch1, touch2) {\\n    var x = touch2.clientX - touch1.clientX,\\n        y = touch2.clientY - touch1.clientY;\\n\\n    return Math.atan2(y, x) * 180 / Math.PI;\\n  },\\n\\n  /**\\n   * do a small comparison to get the direction between two touches.\\n   * @param {Touch} touch1\\n   * @param {Touch} touch2\\n   * @return {String} direction matches `DIRECTION_LEFT|RIGHT|UP|DOWN`\\n   */\\n  getDirection: function getDirection(touch1, touch2) {\\n    var x = Math.abs(touch1.clientX - touch2.clientX),\\n        y = Math.abs(touch1.clientY - touch2.clientY);\\n\\n    if (x >= y) {\\n      return touch1.clientX - touch2.clientX > 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\\n    }\\n    return touch1.clientY - touch2.clientY > 0 ? DIRECTION_UP : DIRECTION_DOWN;\\n  },\\n\\n  /**\\n   * calculate the distance between two touches\\n   * @param {Touch}touch1\\n   * @param {Touch} touch2\\n   * @return {Number} distance\\n   */\\n  getDistance: function getDistance(touch1, touch2) {\\n    var x = touch2.clientX - touch1.clientX,\\n        y = touch2.clientY - touch1.clientY;\\n\\n    return Math.sqrt(x * x + y * y);\\n  },\\n\\n  /**\\n   * calculate the scale factor between two touchLists\\n   * no scale is 1, and goes down to 0 when pinched together, and bigger when pinched out\\n   * @param {Array} start array of touches\\n   * @param {Array} end array of touches\\n   * @return {Number} scale\\n   */\\n  getScale: function getScale(start, end) {\\n    // need two fingers...\\n    if (start.length >= 2 && end.length >= 2) {\\n      return this.getDistance(end[0], end[1]) / this.getDistance(start[0], start[1]);\\n    }\\n    return 1;\\n  },\\n\\n  /**\\n   * calculate the rotation degrees between two touchLists\\n   * @param {Array} start array of touches\\n   * @param {Array} end array of touches\\n   * @return {Number} rotation\\n   */\\n  getRotation: function getRotation(start, end) {\\n    // need two fingers\\n    if (start.length >= 2 && end.length >= 2) {\\n      return this.getAngle(end[1], end[0]) - this.getAngle(start[1], start[0]);\\n    }\\n    return 0;\\n  },\\n\\n  /**\\n   * find out if the direction is vertical   *\\n   * @param {String} direction matches `DIRECTION_UP|DOWN`\\n   * @return {Boolean} is_vertical\\n   */\\n  isVertical: function isVertical(direction) {\\n    return direction == DIRECTION_UP || direction == DIRECTION_DOWN;\\n  },\\n\\n  /**\\n   * set css properties with their prefixes\\n   * @param {HTMLElement} element\\n   * @param {String} prop\\n   * @param {String} value\\n   * @param {Boolean} [toggle=true]\\n   * @return {Boolean}\\n   */\\n  setPrefixedCss: function setPrefixedCss(element, prop, value, toggle) {\\n    var prefixes = ['', 'Webkit', 'Moz', 'O', 'ms'];\\n    prop = Utils.toCamelCase(prop);\\n\\n    for (var i = 0; i < prefixes.length; i++) {\\n      var p = prop;\\n      // prefixes\\n      if (prefixes[i]) {\\n        p = prefixes[i] + p.slice(0, 1).toUpperCase() + p.slice(1);\\n      }\\n\\n      // test the style\\n      if (p in element.style) {\\n        element.style[p] = (toggle === null || toggle) && value || '';\\n        break;\\n      }\\n    }\\n  },\\n\\n  /**\\n   * toggle browser default behavior by setting css properties.\\n   * `userSelect='none'` also sets `element.onselectstart` to false\\n   * `userDrag='none'` also sets `element.ondragstart` to false\\n   *\\n   * @param {HtmlElement} element\\n   * @param {Object} props\\n   * @param {Boolean} [toggle=true]\\n   */\\n  toggleBehavior: function toggleBehavior(element, props, toggle) {\\n    if (!props || !element || !element.style) {\\n      return;\\n    }\\n\\n    // set the css properties\\n    Utils.each(props, function (value, prop) {\\n      Utils.setPrefixedCss(element, prop, value, toggle);\\n    });\\n\\n    var falseFn = toggle && function () {\\n      return false;\\n    };\\n\\n    // also the disable onselectstart\\n    if (props.userSelect == 'none') {\\n      element.onselectstart = falseFn;\\n    }\\n    // and disable ondragstart\\n    if (props.userDrag == 'none') {\\n      element.ondragstart = falseFn;\\n    }\\n  },\\n\\n  /**\\n   * convert a string with underscores to camelCase\\n   * so prevent_default becomes preventDefault\\n   * @param {String} str\\n   * @return {String} camelCaseStr\\n   */\\n  toCamelCase: function toCamelCase(str) {\\n    return str.replace(/[_-]([a-z])/g, function (s) {\\n      return s[1].toUpperCase();\\n    });\\n  }\\n};\\n\\n/**\\n * @module GestureDetector\\n */\\n/**\\n * @class Event\\n * @static\\n */\\nEvent$1 = GestureDetector.event = {\\n  /**\\n   * when touch events have been fired, this is true\\n   * this is used to stop mouse events\\n   * @property prevent_mouseevents\\n   * @private\\n   * @type {Boolean}\\n   */\\n  preventMouseEvents: false,\\n\\n  /**\\n   * if EVENT_START has been fired\\n   * @property started\\n   * @private\\n   * @type {Boolean}\\n   */\\n  started: false,\\n\\n  /**\\n   * when the mouse is hold down, this is true\\n   * @property should_detect\\n   * @private\\n   * @type {Boolean}\\n   */\\n  shouldDetect: false,\\n\\n  /**\\n   * simple event binder with a hook and support for multiple types\\n   * @param {HTMLElement} element\\n   * @param {String} type\\n   * @param {Function} handler\\n   * @param {Function} [hook]\\n   * @param {Object} hook.type\\n   */\\n  on: function on(element, type, handler, hook) {\\n    var types = type.split(' ');\\n    Utils.each(types, function (type) {\\n      Utils.on(element, type, handler);\\n      hook && hook(type);\\n    });\\n  },\\n\\n  /**\\n   * simple event unbinder with a hook and support for multiple types\\n   * @param {HTMLElement} element\\n   * @param {String} type\\n   * @param {Function} handler\\n   * @param {Function} [hook]\\n   * @param {Object} hook.type\\n   */\\n  off: function off(element, type, handler, hook) {\\n    var types = type.split(' ');\\n    Utils.each(types, function (type) {\\n      Utils.off(element, type, handler);\\n      hook && hook(type);\\n    });\\n  },\\n\\n  /**\\n   * the core touch event handler.\\n   * this finds out if we should to detect gestures\\n   * @param {HTMLElement} element\\n   * @param {String} eventType matches `EVENT_START|MOVE|END`\\n   * @param {Function} handler\\n   * @return onTouchHandler {Function} the core event handler\\n   */\\n  onTouch: function onTouch(element, eventType, handler) {\\n    var self = this;\\n\\n    var onTouchHandler = function onTouchHandler(ev) {\\n      var srcType = ev.type.toLowerCase(),\\n          isPointer = GestureDetector.HAS_POINTEREVENTS,\\n          isMouse = Utils.inStr(srcType, 'mouse'),\\n          triggerType;\\n\\n      // if we are in a mouseevent, but there has been a touchevent triggered in this session\\n      // we want to do nothing. simply break out of the event.\\n      if (isMouse && self.preventMouseEvents) {\\n        return;\\n\\n        // mousebutton must be down\\n      } else if (isMouse && eventType == EVENT_START && ev.button === 0) {\\n        self.preventMouseEvents = false;\\n        self.shouldDetect = true;\\n      } else if (isPointer && eventType == EVENT_START) {\\n        self.shouldDetect = ev.buttons === 1 || PointerEvent.matchType(POINTER_TOUCH, ev);\\n        // just a valid start event, but no mouse\\n      } else if (!isMouse && eventType == EVENT_START) {\\n        self.preventMouseEvents = true;\\n        self.shouldDetect = true;\\n      }\\n\\n      // update the pointer event before entering the detection\\n      if (isPointer && eventType != EVENT_END) {\\n        PointerEvent.updatePointer(eventType, ev);\\n      }\\n\\n      // we are in a touch/down state, so allowed detection of gestures\\n      if (self.shouldDetect) {\\n        triggerType = self.doDetect.call(self, ev, eventType, element, handler);\\n      }\\n\\n      // ...and we are done with the detection\\n      // so reset everything to start each detection totally fresh\\n      if (triggerType == EVENT_END) {\\n        self.preventMouseEvents = false;\\n        self.shouldDetect = false;\\n        PointerEvent.reset();\\n        // update the pointerevent object after the detection\\n      }\\n\\n      if (isPointer && eventType == EVENT_END) {\\n        PointerEvent.updatePointer(eventType, ev);\\n      }\\n    };\\n\\n    this.on(element, EVENT_TYPES[eventType], onTouchHandler);\\n    return onTouchHandler;\\n  },\\n\\n  /**\\n   * the core detection method\\n   * this finds out what GestureDetector-touch-events to trigger\\n   * @param {Object} ev\\n   * @param {String} eventType matches `EVENT_START|MOVE|END`\\n   * @param {HTMLElement} element\\n   * @param {Function} handler\\n   * @return {String} triggerType matches `EVENT_START|MOVE|END`\\n   */\\n  doDetect: function doDetect(ev, eventType, element, handler) {\\n    var touchList = this.getTouchList(ev, eventType);\\n    var touchListLength = touchList.length;\\n    var triggerType = eventType;\\n    var triggerChange = touchList.trigger; // used by fakeMultitouch plugin\\n    var changedLength = touchListLength;\\n\\n    // at each touchstart-like event we want also want to trigger a TOUCH event...\\n    if (eventType == EVENT_START) {\\n      triggerChange = EVENT_TOUCH;\\n      // ...the same for a touchend-like event\\n    } else if (eventType == EVENT_END) {\\n      triggerChange = EVENT_RELEASE;\\n\\n      // keep track of how many touches have been removed\\n      changedLength = touchList.length - (ev.changedTouches ? ev.changedTouches.length : 1);\\n    }\\n\\n    // after there are still touches on the screen,\\n    // we just want to trigger a MOVE event. so change the START or END to a MOVE\\n    // but only after detection has been started, the first time we actually want a START\\n    if (changedLength > 0 && this.started) {\\n      triggerType = EVENT_MOVE;\\n    }\\n\\n    // detection has been started, we keep track of this, see above\\n    this.started = true;\\n\\n    // generate some event data, some basic information\\n    var evData = this.collectEventData(element, triggerType, touchList, ev);\\n\\n    // trigger the triggerType event before the change (TOUCH, RELEASE) events\\n    // but the END event should be at last\\n    if (eventType != EVENT_END) {\\n      handler.call(Detection, evData);\\n    }\\n\\n    // trigger a change (TOUCH, RELEASE) event, this means the length of the touches changed\\n    if (triggerChange) {\\n      evData.changedLength = changedLength;\\n      evData.eventType = triggerChange;\\n\\n      handler.call(Detection, evData);\\n\\n      evData.eventType = triggerType;\\n      delete evData.changedLength;\\n    }\\n\\n    // trigger the END event\\n    if (triggerType == EVENT_END) {\\n      handler.call(Detection, evData);\\n\\n      // ...and we are done with the detection\\n      // so reset everything to start each detection totally fresh\\n      this.started = false;\\n    }\\n\\n    return triggerType;\\n  },\\n\\n  /**\\n   * we have different events for each device/browser\\n   * determine what we need and set them in the EVENT_TYPES constant\\n   * the `onTouch` method is bind to these properties.\\n   * @return {Object} events\\n   */\\n  determineEventTypes: function determineEventTypes() {\\n    var types;\\n    if (GestureDetector.HAS_POINTEREVENTS) {\\n      if (window.PointerEvent) {\\n        types = ['pointerdown', 'pointermove', 'pointerup pointercancel lostpointercapture'];\\n      } else {\\n        types = ['MSPointerDown', 'MSPointerMove', 'MSPointerUp MSPointerCancel MSLostPointerCapture'];\\n      }\\n    } else if (GestureDetector.NO_MOUSEEVENTS) {\\n      types = ['touchstart', 'touchmove', 'touchend touchcancel'];\\n    } else {\\n      types = ['touchstart mousedown', 'touchmove mousemove', 'touchend touchcancel mouseup'];\\n    }\\n\\n    EVENT_TYPES[EVENT_START] = types[0];\\n    EVENT_TYPES[EVENT_MOVE] = types[1];\\n    EVENT_TYPES[EVENT_END] = types[2];\\n    return EVENT_TYPES;\\n  },\\n\\n  /**\\n   * create touchList depending on the event\\n   * @param {Object} ev\\n   * @param {String} eventType\\n   * @return {Array} touches\\n   */\\n  getTouchList: function getTouchList(ev, eventType) {\\n    // get the fake pointerEvent touchlist\\n    if (GestureDetector.HAS_POINTEREVENTS) {\\n      return PointerEvent.getTouchList();\\n    }\\n\\n    // get the touchlist\\n    if (ev.touches) {\\n      if (eventType == EVENT_MOVE) {\\n        return ev.touches;\\n      }\\n\\n      var identifiers = [];\\n      var concat = [].concat(Utils.toArray(ev.touches), Utils.toArray(ev.changedTouches));\\n      var touchList = [];\\n\\n      Utils.each(concat, function (touch) {\\n        if (Utils.inArray(identifiers, touch.identifier) === false) {\\n          touchList.push(touch);\\n        }\\n        identifiers.push(touch.identifier);\\n      });\\n\\n      return touchList;\\n    }\\n\\n    // make fake touchList from mouse position\\n    ev.identifier = 1;\\n    return [ev];\\n  },\\n\\n  /**\\n   * collect basic event data\\n   * @param {HTMLElement} element\\n   * @param {String} eventType matches `EVENT_START|MOVE|END`\\n   * @param {Array} touches\\n   * @param {Object} ev\\n   * @return {Object} ev\\n   */\\n  collectEventData: function collectEventData(element, eventType, touches, ev) {\\n    // find out pointerType\\n    var pointerType = POINTER_TOUCH;\\n    if (Utils.inStr(ev.type, 'mouse') || PointerEvent.matchType(POINTER_MOUSE, ev)) {\\n      pointerType = POINTER_MOUSE;\\n    } else if (PointerEvent.matchType(POINTER_PEN, ev)) {\\n      pointerType = POINTER_PEN;\\n    }\\n\\n    return {\\n      center: Utils.getCenter(touches),\\n      timeStamp: Date.now(),\\n      target: ev.target,\\n      touches: touches,\\n      eventType: eventType,\\n      pointerType: pointerType,\\n      srcEvent: ev,\\n\\n      /**\\n       * prevent the browser default actions\\n       * mostly used to disable scrolling of the browser\\n       */\\n      preventDefault: function preventDefault() {\\n        var srcEvent = this.srcEvent;\\n        srcEvent.preventManipulation && srcEvent.preventManipulation();\\n        srcEvent.preventDefault && srcEvent.preventDefault();\\n      },\\n\\n      /**\\n       * stop bubbling the event up to its parents\\n       */\\n      stopPropagation: function stopPropagation() {\\n        this.srcEvent.stopPropagation();\\n      },\\n\\n      /**\\n       * immediately stop gesture detection\\n       * might be useful after a swipe was detected\\n       * @return {*}\\n       */\\n      stopDetect: function stopDetect() {\\n        return Detection.stopDetect();\\n      }\\n    };\\n  }\\n};\\n\\n/**\\n * @module GestureDetector\\n *\\n * @class PointerEvent\\n * @static\\n */\\nPointerEvent = GestureDetector.PointerEvent = {\\n  /**\\n   * holds all pointers, by `identifier`\\n   * @property pointers\\n   * @type {Object}\\n   */\\n  pointers: {},\\n\\n  /**\\n   * get the pointers as an array\\n   * @return {Array} touchlist\\n   */\\n  getTouchList: function getTouchList() {\\n    var touchlist = [];\\n    // we can use forEach since pointerEvents only is in IE10\\n    Utils.each(this.pointers, function (pointer) {\\n      touchlist.push(pointer);\\n    });\\n    return touchlist;\\n  },\\n\\n  /**\\n   * update the position of a pointer\\n   * @param {String} eventType matches `EVENT_START|MOVE|END`\\n   * @param {Object} pointerEvent\\n   */\\n  updatePointer: function updatePointer(eventType, pointerEvent) {\\n    if (eventType == EVENT_END || eventType != EVENT_END && pointerEvent.buttons !== 1) {\\n      delete this.pointers[pointerEvent.pointerId];\\n    } else {\\n      pointerEvent.identifier = pointerEvent.pointerId;\\n      this.pointers[pointerEvent.pointerId] = pointerEvent;\\n    }\\n  },\\n\\n  /**\\n   * check if ev matches pointertype\\n   * @param {String} pointerType matches `POINTER_MOUSE|TOUCH|PEN`\\n   * @param {PointerEvent} ev\\n   */\\n  matchType: function matchType(pointerType, ev) {\\n    if (!ev.pointerType) {\\n      return false;\\n    }\\n\\n    var pt = ev.pointerType,\\n        types = {};\\n\\n    types[POINTER_MOUSE] = pt === (ev.MSPOINTER_TYPE_MOUSE || POINTER_MOUSE);\\n    types[POINTER_TOUCH] = pt === (ev.MSPOINTER_TYPE_TOUCH || POINTER_TOUCH);\\n    types[POINTER_PEN] = pt === (ev.MSPOINTER_TYPE_PEN || POINTER_PEN);\\n    return types[pointerType];\\n  },\\n\\n  /**\\n   * reset the stored pointers\\n   */\\n  reset: function resetList() {\\n    this.pointers = {};\\n  }\\n};\\n\\n/**\\n * @module GestureDetector\\n *\\n * @class Detection\\n * @static\\n */\\nDetection = GestureDetector.detection = {\\n  // contains all registered GestureDetector.gestures in the correct order\\n  gestures: [],\\n\\n  // data of the current GestureDetector.gesture detection session\\n  current: null,\\n\\n  // the previous GestureDetector.gesture session data\\n  // is a full clone of the previous gesture.current object\\n  previous: null,\\n\\n  // when this becomes true, no gestures are fired\\n  stopped: false,\\n\\n  /**\\n   * start GestureDetector.gesture detection\\n   * @param {GestureDetector.Instance} inst\\n   * @param {Object} eventData\\n   */\\n  startDetect: function startDetect(inst, eventData) {\\n    // already busy with a GestureDetector.gesture detection on an element\\n    if (this.current) {\\n      return;\\n    }\\n\\n    this.stopped = false;\\n\\n    // holds current session\\n    this.current = {\\n      inst: inst, // reference to GestureDetectorInstance we're working for\\n      startEvent: Utils.extend({}, eventData), // start eventData for distances, timing etc\\n      lastEvent: false, // last eventData\\n      lastCalcEvent: false, // last eventData for calculations.\\n      futureCalcEvent: false, // last eventData for calculations.\\n      lastCalcData: {}, // last lastCalcData\\n      name: '' // current gesture we're in/detected, can be 'tap', 'hold' etc\\n    };\\n\\n    this.detect(eventData);\\n  },\\n\\n  /**\\n   * GestureDetector.gesture detection\\n   * @param {Object} eventData\\n   * @return {any}\\n   */\\n  detect: function detect(eventData) {\\n    if (!this.current || this.stopped) {\\n      return;\\n    }\\n\\n    // extend event data with calculations about scale, distance etc\\n    eventData = this.extendEventData(eventData);\\n\\n    // GestureDetector instance and instance options\\n    var inst = this.current.inst,\\n        instOptions = inst.options;\\n\\n    // call GestureDetector.gesture handlers\\n    Utils.each(this.gestures, function triggerGesture(gesture) {\\n      // only when the instance options have enabled this gesture\\n      if (!this.stopped && inst.enabled && instOptions[gesture.name]) {\\n        gesture.handler.call(gesture, eventData, inst);\\n      }\\n    }, this);\\n\\n    // store as previous event event\\n    if (this.current) {\\n      this.current.lastEvent = eventData;\\n    }\\n\\n    if (eventData.eventType == EVENT_END) {\\n      this.stopDetect();\\n    }\\n\\n    return eventData; // eslint-disable-line consistent-return\\n  },\\n\\n  /**\\n   * clear the GestureDetector.gesture vars\\n   * this is called on endDetect, but can also be used when a final GestureDetector.gesture has been detected\\n   * to stop other GestureDetector.gestures from being fired\\n   */\\n  stopDetect: function stopDetect() {\\n    // clone current data to the store as the previous gesture\\n    // used for the double tap gesture, since this is an other gesture detect session\\n    this.previous = Utils.extend({}, this.current);\\n\\n    // reset the current\\n    this.current = null;\\n    this.stopped = true;\\n  },\\n\\n  /**\\n   * calculate velocity, angle and direction\\n   * @param {Object} ev\\n   * @param {Object} center\\n   * @param {Number} deltaTime\\n   * @param {Number} deltaX\\n   * @param {Number} deltaY\\n   */\\n  getCalculatedData: function getCalculatedData(ev, center, deltaTime, deltaX, deltaY) {\\n    var cur = this.current,\\n        recalc = false,\\n        calcEv = cur.lastCalcEvent,\\n        calcData = cur.lastCalcData;\\n\\n    if (calcEv && ev.timeStamp - calcEv.timeStamp > GestureDetector.CALCULATE_INTERVAL) {\\n      center = calcEv.center;\\n      deltaTime = ev.timeStamp - calcEv.timeStamp;\\n      deltaX = ev.center.clientX - calcEv.center.clientX;\\n      deltaY = ev.center.clientY - calcEv.center.clientY;\\n      recalc = true;\\n    }\\n\\n    if (ev.eventType == EVENT_TOUCH || ev.eventType == EVENT_RELEASE) {\\n      cur.futureCalcEvent = ev;\\n    }\\n\\n    if (!cur.lastCalcEvent || recalc) {\\n      calcData.velocity = Utils.getVelocity(deltaTime, deltaX, deltaY);\\n      calcData.angle = Utils.getAngle(center, ev.center);\\n      calcData.direction = Utils.getDirection(center, ev.center);\\n\\n      cur.lastCalcEvent = cur.futureCalcEvent || ev;\\n      cur.futureCalcEvent = ev;\\n    }\\n\\n    ev.velocityX = calcData.velocity.x;\\n    ev.velocityY = calcData.velocity.y;\\n    ev.interimAngle = calcData.angle;\\n    ev.interimDirection = calcData.direction;\\n  },\\n\\n  /**\\n   * extend eventData for GestureDetector.gestures\\n   * @param {Object} ev\\n   * @return {Object} ev\\n   */\\n  extendEventData: function extendEventData(ev) {\\n    var cur = this.current,\\n        startEv = cur.startEvent,\\n        lastEv = cur.lastEvent || startEv;\\n\\n    // update the start touchlist to calculate the scale/rotation\\n    if (ev.eventType == EVENT_TOUCH || ev.eventType == EVENT_RELEASE) {\\n      startEv.touches = [];\\n      Utils.each(ev.touches, function (touch) {\\n        startEv.touches.push({\\n          clientX: touch.clientX,\\n          clientY: touch.clientY\\n        });\\n      });\\n    }\\n\\n    var deltaTime = ev.timeStamp - startEv.timeStamp,\\n        deltaX = ev.center.clientX - startEv.center.clientX,\\n        deltaY = ev.center.clientY - startEv.center.clientY;\\n\\n    this.getCalculatedData(ev, lastEv.center, deltaTime, deltaX, deltaY);\\n\\n    Utils.extend(ev, {\\n      startEvent: startEv,\\n\\n      deltaTime: deltaTime,\\n      deltaX: deltaX,\\n      deltaY: deltaY,\\n\\n      distance: Utils.getDistance(startEv.center, ev.center),\\n      angle: Utils.getAngle(startEv.center, ev.center),\\n      direction: Utils.getDirection(startEv.center, ev.center),\\n      scale: Utils.getScale(startEv.touches, ev.touches),\\n      rotation: Utils.getRotation(startEv.touches, ev.touches)\\n    });\\n\\n    return ev;\\n  },\\n\\n  /**\\n   * register new gesture\\n   * @param {Object} gesture object, see `gestures/` for documentation\\n   * @return {Array} gestures\\n   */\\n  register: function register(gesture) {\\n    // add an enable gesture options if there is no given\\n    var options = gesture.defaults || {};\\n    if (options[gesture.name] === undefined) {\\n      options[gesture.name] = true;\\n    }\\n\\n    // extend GestureDetector default options with the GestureDetector.gesture options\\n    Utils.extend(GestureDetector.defaults, options, true);\\n\\n    // set its index\\n    gesture.index = gesture.index || 1000;\\n\\n    // add GestureDetector.gesture to the list\\n    this.gestures.push(gesture);\\n\\n    // sort the list by index\\n    this.gestures.sort(function (a, b) {\\n      if (a.index < b.index) {\\n        return -1;\\n      }\\n      if (a.index > b.index) {\\n        return 1;\\n      }\\n      return 0;\\n    });\\n\\n    return this.gestures;\\n  }\\n};\\n\\n/**\\n * @module GestureDetector\\n */\\n\\n/**\\n * create new GestureDetector instance\\n * all methods should return the instance itself, so it is chainable.\\n *\\n * @class Instance\\n * @constructor\\n * @param {HTMLElement} element\\n * @param {Object} [options={}] options are merged with `GestureDetector.defaults`\\n * @return {GestureDetector.Instance}\\n */\\nGestureDetector.Instance = function (element, options) {\\n  var self = this;\\n\\n  // setup GestureDetectorJS window events and register all gestures\\n  // this also sets up the default options\\n  setup();\\n\\n  /**\\n   * @property element\\n   * @type {HTMLElement}\\n   */\\n  this.element = element;\\n\\n  /**\\n   * @property enabled\\n   * @type {Boolean}\\n   * @protected\\n   */\\n  this.enabled = true;\\n\\n  /**\\n   * options, merged with the defaults\\n   * options with an _ are converted to camelCase\\n   * @property options\\n   * @type {Object}\\n   */\\n  Utils.each(options, function (value, name) {\\n    delete options[name];\\n    options[Utils.toCamelCase(name)] = value;\\n  });\\n\\n  this.options = Utils.extend(Utils.extend({}, GestureDetector.defaults), options || {});\\n\\n  // add some css to the element to prevent the browser from doing its native behavior\\n  if (this.options.behavior) {\\n    Utils.toggleBehavior(this.element, this.options.behavior, true);\\n  }\\n\\n  /**\\n   * event start handler on the element to start the detection\\n   * @property eventStartHandler\\n   * @type {Object}\\n   */\\n  this.eventStartHandler = Event$1.onTouch(element, EVENT_START, function (ev) {\\n    if (self.enabled && ev.eventType == EVENT_START) {\\n      Detection.startDetect(self, ev);\\n    } else if (ev.eventType == EVENT_TOUCH) {\\n      Detection.detect(ev);\\n    }\\n  });\\n\\n  /**\\n   * keep a list of user event handlers which needs to be removed when calling 'dispose'\\n   * @property eventHandlers\\n   * @type {Array}\\n   */\\n  this.eventHandlers = [];\\n};\\n\\nGestureDetector.Instance.prototype = {\\n  /**\\n   * @method on\\n   * @signature on(gestures, handler)\\n   * @description\\n   *  [en]Adds an event handler for a gesture. Available gestures are: drag, dragleft, dragright, dragup, dragdown, hold, release, swipe, swipeleft, swiperight, swipeup, swipedown, tap, doubletap, touch, transform, pinch, pinchin, pinchout and rotate. [/en]\\n   *  [ja]ジェスチャに対するイベントハンドラを追加します。指定できるジェスチャ名は、drag dragleft dragright dragup dragdown hold release swipe swipeleft swiperight swipeup swipedown tap doubletap touch transform pinch pinchin pinchout rotate です。[/ja]\\n   * @param {String} gestures\\n   *   [en]A space separated list of gestures.[/en]\\n   *   [ja]検知するジェスチャ名を指定します。スペースで複数指定することができます。[/ja]\\n   * @param {Function} handler\\n   *   [en]An event handling function.[/en]\\n   *   [ja]イベントハンドラとなる関数オブジェクトを指定します。[/ja]\\n   */\\n  on: function onEvent(gestures, handler) {\\n    var self = this;\\n    Event$1.on(self.element, gestures, handler, function (type) {\\n      self.eventHandlers.push({ gesture: type, handler: handler });\\n    });\\n    return self;\\n  },\\n\\n  /**\\n   * @method off\\n   * @signature off(gestures, handler)\\n   * @description\\n   *  [en]Remove an event listener.[/en]\\n   *  [ja]イベントリスナーを削除します。[/ja]\\n   * @param {String} gestures\\n   *   [en]A space separated list of gestures.[/en]\\n   *   [ja]ジェスチャ名を指定します。スペースで複数指定することができます。[/ja]\\n   * @param {Function} handler\\n   *   [en]An event handling function.[/en]\\n   *   [ja]イベントハンドラとなる関数オブジェクトを指定します。[/ja]\\n   */\\n  off: function offEvent(gestures, handler) {\\n    var self = this;\\n\\n    Event$1.off(self.element, gestures, handler, function (type) {\\n      var index = Utils.inArray({ gesture: type, handler: handler });\\n      if (index !== false) {\\n        self.eventHandlers.splice(index, 1);\\n      }\\n    });\\n    return self;\\n  },\\n\\n  /**\\n   * trigger gesture event\\n   * @method trigger\\n   * @signature trigger(gesture, eventData)\\n   * @param {String} gesture\\n   * @param {Object} [eventData]\\n   */\\n  trigger: function triggerEvent(gesture, eventData) {\\n    // optional\\n    if (!eventData) {\\n      eventData = {};\\n    }\\n\\n    // create DOM event\\n    var event = GestureDetector.DOCUMENT.createEvent('Event');\\n    event.initEvent(gesture, true, true);\\n    event.gesture = eventData;\\n\\n    // trigger on the target if it is in the instance element,\\n    // this is for event delegation tricks\\n    var element = this.element;\\n    if (Utils.hasParent(eventData.target, element)) {\\n      element = eventData.target;\\n    }\\n\\n    element.dispatchEvent(event);\\n    return this;\\n  },\\n\\n  /**\\n   * @method enable\\n   * @signature enable(state)\\n   * @description\\n   *  [en]Enable or disable gesture detection.[/en]\\n   *  [ja]ジェスチャ検知を有効化/無効化します。[/ja]\\n   * @param {Boolean} state\\n   *   [en]Specify if it should be enabled or not.[/en]\\n   *   [ja]有効にするかどうかを指定します。[/ja]\\n   */\\n  enable: function enable(state) {\\n    this.enabled = state;\\n    return this;\\n  },\\n\\n  /**\\n   * @method dispose\\n   * @signature dispose()\\n   * @description\\n   *  [en]Remove and destroy all event handlers for this instance.[/en]\\n   *  [ja]このインスタンスでのジェスチャの検知や、イベントハンドラを全て解除して廃棄します。[/ja]\\n   */\\n  dispose: function dispose() {\\n    var i, eh;\\n\\n    // undo all changes made by stop_browser_behavior\\n    Utils.toggleBehavior(this.element, this.options.behavior, false);\\n\\n    // unbind all custom event handlers\\n    for (i = -1; eh = this.eventHandlers[++i];) {\\n      // eslint-disable-line no-cond-assign\\n      Utils.off(this.element, eh.gesture, eh.handler);\\n    }\\n\\n    this.eventHandlers = [];\\n\\n    // unbind the start event listener\\n    Event$1.off(this.element, EVENT_TYPES[EVENT_START], this.eventStartHandler);\\n\\n    return null;\\n  }\\n};\\n\\n/**\\n * @module gestures\\n */\\n/**\\n * Move with x fingers (default 1) around on the page.\\n * Preventing the default browser behavior is a good way to improve feel and working.\\n * ````\\n *  GestureDetectortime.on(\\\"drag\\\", function(ev) {\\n *    console.log(ev);\\n *    ev.gesture.preventDefault();\\n *  });\\n * ````\\n *\\n * @class Drag\\n * @static\\n */\\n/**\\n * @event drag\\n * @param {Object} ev\\n */\\n/**\\n * @event dragstart\\n * @param {Object} ev\\n */\\n/**\\n * @event dragend\\n * @param {Object} ev\\n */\\n/**\\n * @event drapleft\\n * @param {Object} ev\\n */\\n/**\\n * @event dragright\\n * @param {Object} ev\\n */\\n/**\\n * @event dragup\\n * @param {Object} ev\\n */\\n/**\\n * @event dragdown\\n * @param {Object} ev\\n */\\n\\n/**\\n * @param {String} name\\n */\\n(function (name) {\\n  var triggered = false;\\n\\n  function dragGesture(ev, inst) {\\n    var cur = Detection.current;\\n\\n    // max touches\\n    if (inst.options.dragMaxTouches > 0 && ev.touches.length > inst.options.dragMaxTouches) {\\n      return;\\n    }\\n\\n    switch (ev.eventType) {\\n      case EVENT_START:\\n        triggered = false;\\n        break;\\n\\n      case EVENT_MOVE:\\n        // when the distance we moved is too small we skip this gesture\\n        // or we can be already in dragging\\n        if (ev.distance < inst.options.dragMinDistance && cur.name != name) {\\n          return;\\n        }\\n\\n        var startCenter = cur.startEvent.center;\\n\\n        // we are dragging!\\n        if (cur.name != name) {\\n          cur.name = name;\\n          if (inst.options.dragDistanceCorrection && ev.distance > 0) {\\n            // When a drag is triggered, set the event center to dragMinDistance pixels from the original event center.\\n            // Without this correction, the dragged distance would jumpstart at dragMinDistance pixels instead of at 0.\\n            // It might be useful to save the original start point somewhere\\n            var factor = Math.abs(inst.options.dragMinDistance / ev.distance);\\n            startCenter.pageX += ev.deltaX * factor;\\n            startCenter.pageY += ev.deltaY * factor;\\n            startCenter.clientX += ev.deltaX * factor;\\n            startCenter.clientY += ev.deltaY * factor;\\n\\n            // recalculate event data using new start point\\n            ev = Detection.extendEventData(ev);\\n          }\\n        }\\n\\n        // lock drag to axis?\\n        if (cur.lastEvent.dragLockToAxis || inst.options.dragLockToAxis && inst.options.dragLockMinDistance <= ev.distance) {\\n          ev.dragLockToAxis = true;\\n        }\\n\\n        // keep direction on the axis that the drag gesture started on\\n        var lastDirection = cur.lastEvent.direction;\\n        if (ev.dragLockToAxis && lastDirection !== ev.direction) {\\n          if (Utils.isVertical(lastDirection)) {\\n            ev.direction = ev.deltaY < 0 ? DIRECTION_UP : DIRECTION_DOWN;\\n          } else {\\n            ev.direction = ev.deltaX < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\\n          }\\n        }\\n\\n        // first time, trigger dragstart event\\n        if (!triggered) {\\n          inst.trigger(name + 'start', ev);\\n          triggered = true;\\n        }\\n\\n        // trigger events\\n        inst.trigger(name, ev);\\n        inst.trigger(name + ev.direction, ev);\\n\\n        var isVertical = Utils.isVertical(ev.direction);\\n\\n        // block the browser events\\n        if (inst.options.dragBlockVertical && isVertical || inst.options.dragBlockHorizontal && !isVertical) {\\n          ev.preventDefault();\\n        }\\n        break;\\n\\n      case EVENT_RELEASE:\\n        if (triggered && ev.changedLength <= inst.options.dragMaxTouches) {\\n          inst.trigger(name + 'end', ev);\\n          triggered = false;\\n        }\\n        break;\\n\\n      case EVENT_END:\\n        triggered = false;\\n        break;\\n    }\\n  }\\n\\n  GestureDetector.gestures.Drag = {\\n    name: name,\\n    index: 50,\\n    handler: dragGesture,\\n    defaults: {\\n      /**\\n       * minimal movement that have to be made before the drag event gets triggered\\n       * @property dragMinDistance\\n       * @type {Number}\\n       * @default 10\\n       */\\n      dragMinDistance: 10,\\n\\n      /**\\n       * Set dragDistanceCorrection to true to make the starting point of the drag\\n       * be calculated from where the drag was triggered, not from where the touch started.\\n       * Useful to avoid a jerk-starting drag, which can make fine-adjustments\\n       * through dragging difficult, and be visually unappealing.\\n       * @property dragDistanceCorrection\\n       * @type {Boolean}\\n       * @default true\\n       */\\n      dragDistanceCorrection: true,\\n\\n      /**\\n       * set 0 for unlimited, but this can conflict with transform\\n       * @property dragMaxTouches\\n       * @type {Number}\\n       * @default 1\\n       */\\n      dragMaxTouches: 1,\\n\\n      /**\\n       * prevent default browser behavior when dragging occurs\\n       * be careful with it, it makes the element a blocking element\\n       * when you are using the drag gesture, it is a good practice to set this true\\n       * @property dragBlockHorizontal\\n       * @type {Boolean}\\n       * @default false\\n       */\\n      dragBlockHorizontal: false,\\n\\n      /**\\n       * same as `dragBlockHorizontal`, but for vertical movement\\n       * @property dragBlockVertical\\n       * @type {Boolean}\\n       * @default false\\n       */\\n      dragBlockVertical: false,\\n\\n      /**\\n       * dragLockToAxis keeps the drag gesture on the axis that it started on,\\n       * It disallows vertical directions if the initial direction was horizontal, and vice versa.\\n       * @property dragLockToAxis\\n       * @type {Boolean}\\n       * @default false\\n       */\\n      dragLockToAxis: false,\\n\\n      /**\\n       * drag lock only kicks in when distance > dragLockMinDistance\\n       * This way, locking occurs only when the distance has become large enough to reliably determine the direction\\n       * @property dragLockMinDistance\\n       * @type {Number}\\n       * @default 25\\n       */\\n      dragLockMinDistance: 25\\n    }\\n  };\\n})('drag');\\n\\n/**\\n * @module gestures\\n */\\n/**\\n * trigger a simple gesture event, so you can do anything in your handler.\\n * only usable if you know what your doing...\\n *\\n * @class Gesture\\n * @static\\n */\\n/**\\n * @event gesture\\n * @param {Object} ev\\n */\\nGestureDetector.gestures.Gesture = {\\n  name: 'gesture',\\n  index: 1337,\\n  handler: function releaseGesture(ev, inst) {\\n    inst.trigger(this.name, ev);\\n  }\\n};\\n\\n/**\\n * @module gestures\\n */\\n/**\\n * Touch stays at the same place for x time\\n *\\n * @class Hold\\n * @static\\n */\\n/**\\n * @event hold\\n * @param {Object} ev\\n */\\n\\n/**\\n * @param {String} name\\n */\\n(function (name) {\\n  var timer;\\n\\n  function holdGesture(ev, inst) {\\n    var options = inst.options,\\n        current = Detection.current;\\n\\n    switch (ev.eventType) {\\n      case EVENT_START:\\n        clearTimeout(timer);\\n\\n        // set the gesture so we can check in the timeout if it still is\\n        current.name = name;\\n\\n        // set timer and if after the timeout it still is hold,\\n        // we trigger the hold event\\n        timer = setTimeout(function () {\\n          if (current && current.name == name) {\\n            inst.trigger(name, ev);\\n          }\\n        }, options.holdTimeout);\\n        break;\\n\\n      case EVENT_MOVE:\\n        if (ev.distance > options.holdThreshold) {\\n          clearTimeout(timer);\\n        }\\n        break;\\n\\n      case EVENT_RELEASE:\\n        clearTimeout(timer);\\n        break;\\n    }\\n  }\\n\\n  GestureDetector.gestures.Hold = {\\n    name: name,\\n    index: 10,\\n    defaults: {\\n      /**\\n       * @property holdTimeout\\n       * @type {Number}\\n       * @default 500\\n       */\\n      holdTimeout: 500,\\n\\n      /**\\n       * movement allowed while holding\\n       * @property holdThreshold\\n       * @type {Number}\\n       * @default 2\\n       */\\n      holdThreshold: 2\\n    },\\n    handler: holdGesture\\n  };\\n})('hold');\\n\\n/**\\n * @module gestures\\n */\\n/**\\n * when a touch is being released from the page\\n *\\n * @class Release\\n * @static\\n */\\n/**\\n * @event release\\n * @param {Object} ev\\n */\\nGestureDetector.gestures.Release = {\\n  name: 'release',\\n  index: Infinity,\\n  handler: function releaseGesture(ev, inst) {\\n    if (ev.eventType == EVENT_RELEASE) {\\n      inst.trigger(this.name, ev);\\n    }\\n  }\\n};\\n\\n/**\\n * @module gestures\\n */\\n/**\\n * triggers swipe events when the end velocity is above the threshold\\n * for best usage, set `preventDefault` (on the drag gesture) to `true`\\n * ````\\n *  GestureDetectortime.on(\\\"dragleft swipeleft\\\", function(ev) {\\n *    console.log(ev);\\n *    ev.gesture.preventDefault();\\n *  });\\n * ````\\n *\\n * @class Swipe\\n * @static\\n */\\n/**\\n * @event swipe\\n * @param {Object} ev\\n */\\n/**\\n * @event swipeleft\\n * @param {Object} ev\\n */\\n/**\\n * @event swiperight\\n * @param {Object} ev\\n */\\n/**\\n * @event swipeup\\n * @param {Object} ev\\n */\\n/**\\n * @event swipedown\\n * @param {Object} ev\\n */\\nGestureDetector.gestures.Swipe = {\\n  name: 'swipe',\\n  index: 40,\\n  defaults: {\\n    /**\\n     * @property swipeMinTouches\\n     * @type {Number}\\n     * @default 1\\n     */\\n    swipeMinTouches: 1,\\n\\n    /**\\n     * @property swipeMaxTouches\\n     * @type {Number}\\n     * @default 1\\n     */\\n    swipeMaxTouches: 1,\\n\\n    /**\\n     * horizontal swipe velocity\\n     * @property swipeVelocityX\\n     * @type {Number}\\n     * @default 0.6\\n     */\\n    swipeVelocityX: 0.6,\\n\\n    /**\\n     * vertical swipe velocity\\n     * @property swipeVelocityY\\n     * @type {Number}\\n     * @default 0.6\\n     */\\n    swipeVelocityY: 0.6\\n  },\\n\\n  handler: function swipeGesture(ev, inst) {\\n    if (ev.eventType == EVENT_RELEASE) {\\n      var touches = ev.touches.length,\\n          options = inst.options;\\n\\n      // max touches\\n      if (touches < options.swipeMinTouches || touches > options.swipeMaxTouches) {\\n        return;\\n      }\\n\\n      // when the distance we moved is too small we skip this gesture\\n      // or we can be already in dragging\\n      if (ev.velocityX > options.swipeVelocityX || ev.velocityY > options.swipeVelocityY) {\\n        // trigger swipe events\\n        inst.trigger(this.name, ev);\\n        inst.trigger(this.name + ev.direction, ev);\\n      }\\n    }\\n  }\\n};\\n\\n/**\\n * @module gestures\\n */\\n/**\\n * Single tap and a double tap on a place\\n *\\n * @class Tap\\n * @static\\n */\\n/**\\n * @event tap\\n * @param {Object} ev\\n */\\n/**\\n * @event doubletap\\n * @param {Object} ev\\n */\\n\\n/**\\n * @param {String} name\\n */\\n(function (name) {\\n  var hasMoved = false;\\n\\n  function tapGesture(ev, inst) {\\n    var options = inst.options,\\n        current = Detection.current,\\n        prev = Detection.previous,\\n        sincePrev,\\n        didDoubleTap;\\n\\n    switch (ev.eventType) {\\n      case EVENT_START:\\n        hasMoved = false;\\n        break;\\n\\n      case EVENT_MOVE:\\n        hasMoved = hasMoved || ev.distance > options.tapMaxDistance;\\n        break;\\n\\n      case EVENT_END:\\n        if (!Utils.inStr(ev.srcEvent.type, 'cancel') && ev.deltaTime < options.tapMaxTime && !hasMoved) {\\n          // previous gesture, for the double tap since these are two different gesture detections\\n          sincePrev = prev && prev.lastEvent && ev.timeStamp - prev.lastEvent.timeStamp;\\n          didDoubleTap = false;\\n\\n          // check if double tap\\n          if (prev && prev.name == name && sincePrev && sincePrev < options.doubleTapInterval && ev.distance < options.doubleTapDistance) {\\n            inst.trigger('doubletap', ev);\\n            didDoubleTap = true;\\n          }\\n\\n          // do a single tap\\n          if (!didDoubleTap || options.tapAlways) {\\n            current.name = name;\\n            inst.trigger(current.name, ev);\\n          }\\n        }\\n        break;\\n    }\\n  }\\n\\n  GestureDetector.gestures.Tap = {\\n    name: name,\\n    index: 100,\\n    handler: tapGesture,\\n    defaults: {\\n      /**\\n       * max time of a tap, this is for the slow tappers\\n       * @property tapMaxTime\\n       * @type {Number}\\n       * @default 250\\n       */\\n      tapMaxTime: 250,\\n\\n      /**\\n       * max distance of movement of a tap, this is for the slow tappers\\n       * @property tapMaxDistance\\n       * @type {Number}\\n       * @default 10\\n       */\\n      tapMaxDistance: 10,\\n\\n      /**\\n       * always trigger the `tap` event, even while double-tapping\\n       * @property tapAlways\\n       * @type {Boolean}\\n       * @default true\\n       */\\n      tapAlways: true,\\n\\n      /**\\n       * max distance between two taps\\n       * @property doubleTapDistance\\n       * @type {Number}\\n       * @default 20\\n       */\\n      doubleTapDistance: 20,\\n\\n      /**\\n       * max time between two taps\\n       * @property doubleTapInterval\\n       * @type {Number}\\n       * @default 300\\n       */\\n      doubleTapInterval: 300\\n    }\\n  };\\n})('tap');\\n\\n/**\\n * @module gestures\\n */\\n/**\\n * when a touch is being touched at the page\\n *\\n * @class Touch\\n * @static\\n */\\n/**\\n * @event touch\\n * @param {Object} ev\\n */\\nGestureDetector.gestures.Touch = {\\n  name: 'touch',\\n  index: -Infinity,\\n  defaults: {\\n    /**\\n     * call preventDefault at touchstart, and makes the element blocking by disabling the scrolling of the page,\\n     * but it improves gestures like transforming and dragging.\\n     * be careful with using this, it can be very annoying for users to be stuck on the page\\n     * @property preventDefault\\n     * @type {Boolean}\\n     * @default false\\n     */\\n    preventDefault: false,\\n\\n    /**\\n     * disable mouse events, so only touch (or pen!) input triggers events\\n     * @property preventMouse\\n     * @type {Boolean}\\n     * @default false\\n     */\\n    preventMouse: false\\n  },\\n  handler: function touchGesture(ev, inst) {\\n    if (inst.options.preventMouse && ev.pointerType == POINTER_MOUSE) {\\n      ev.stopDetect();\\n      return;\\n    }\\n\\n    if (inst.options.preventDefault) {\\n      ev.preventDefault();\\n    }\\n\\n    if (ev.eventType == EVENT_TOUCH) {\\n      inst.trigger('touch', ev);\\n    }\\n  }\\n};\\n\\n/**\\n * @module gestures\\n */\\n/**\\n * User want to scale or rotate with 2 fingers\\n * Preventing the default browser behavior is a good way to improve feel and working. This can be done with the\\n * `preventDefault` option.\\n *\\n * @class Transform\\n * @static\\n */\\n/**\\n * @event transform\\n * @param {Object} ev\\n */\\n/**\\n * @event transformstart\\n * @param {Object} ev\\n */\\n/**\\n * @event transformend\\n * @param {Object} ev\\n */\\n/**\\n * @event pinchin\\n * @param {Object} ev\\n */\\n/**\\n * @event pinchout\\n * @param {Object} ev\\n */\\n/**\\n * @event rotate\\n * @param {Object} ev\\n */\\n\\n/**\\n * @param {String} name\\n */\\n(function (name) {\\n  var triggered = false;\\n\\n  function transformGesture(ev, inst) {\\n    switch (ev.eventType) {\\n      case EVENT_START:\\n        triggered = false;\\n        break;\\n\\n      case EVENT_MOVE:\\n        // at least multitouch\\n        if (ev.touches.length < 2) {\\n          return;\\n        }\\n\\n        var scaleThreshold = Math.abs(1 - ev.scale);\\n        var rotationThreshold = Math.abs(ev.rotation);\\n\\n        // when the distance we moved is too small we skip this gesture\\n        // or we can be already in dragging\\n        if (scaleThreshold < inst.options.transformMinScale && rotationThreshold < inst.options.transformMinRotation) {\\n          return;\\n        }\\n\\n        // we are transforming!\\n        Detection.current.name = name;\\n\\n        // first time, trigger dragstart event\\n        if (!triggered) {\\n          inst.trigger(name + 'start', ev);\\n          triggered = true;\\n        }\\n\\n        inst.trigger(name, ev); // basic transform event\\n\\n        // trigger rotate event\\n        if (rotationThreshold > inst.options.transformMinRotation) {\\n          inst.trigger('rotate', ev);\\n        }\\n\\n        // trigger pinch event\\n        if (scaleThreshold > inst.options.transformMinScale) {\\n          inst.trigger('pinch', ev);\\n          inst.trigger('pinch' + (ev.scale < 1 ? 'in' : 'out'), ev);\\n        }\\n        break;\\n\\n      case EVENT_RELEASE:\\n        if (triggered && ev.changedLength < 2) {\\n          inst.trigger(name + 'end', ev);\\n          triggered = false;\\n        }\\n        break;\\n    }\\n  }\\n\\n  GestureDetector.gestures.Transform = {\\n    name: name,\\n    index: 45,\\n    defaults: {\\n      /**\\n       * minimal scale factor, no scale is 1, zoomin is to 0 and zoomout until higher then 1\\n       * @property transformMinScale\\n       * @type {Number}\\n       * @default 0.01\\n       */\\n      transformMinScale: 0.01,\\n\\n      /**\\n       * rotation in degrees\\n       * @property transformMinRotation\\n       * @type {Number}\\n       * @default 1\\n       */\\n      transformMinRotation: 1\\n    },\\n\\n    handler: transformGesture\\n  };\\n})('transform');\\n\\n/*\\nCopyright 2013-2015 ASIAL CORPORATION\\n\\nLicensed under the Apache License, Version 2.0 (the \\\"License\\\");\\nyou may not use this file except in compliance with the License.\\nYou may obtain a copy of the License at\\n\\n   http://www.apache.org/licenses/LICENSE-2.0\\n\\nUnless required by applicable law or agreed to in writing, software\\ndistributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\nSee the License for the specific language governing permissions and\\nlimitations under the License.\\n\\n*/\\nvar readyMap = new WeakMap();\\nvar queueMap = new WeakMap();\\n\\nfunction isContentReady(element) {\\n  if (element.childNodes.length > 0) {\\n    setContentReady(element);\\n  }\\n  return readyMap.has(element);\\n}\\n\\nfunction setContentReady(element) {\\n  readyMap.set(element, true);\\n}\\n\\nfunction addCallback(element, fn) {\\n  if (!queueMap.has(element)) {\\n    queueMap.set(element, []);\\n  }\\n  queueMap.get(element).push(fn);\\n}\\n\\nfunction consumeQueue(element) {\\n  var callbacks = queueMap.get(element, []) || [];\\n  queueMap.delete(element);\\n  callbacks.forEach(function (callback) {\\n    return callback();\\n  });\\n}\\n\\nfunction contentReady(element) {\\n  var fn = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};\\n\\n  addCallback(element, fn);\\n\\n  if (isContentReady(element)) {\\n    consumeQueue(element);\\n    return;\\n  }\\n\\n  var observer = new MutationObserver(function (changes) {\\n    setContentReady(element);\\n    consumeQueue(element);\\n  });\\n  observer.observe(element, { childList: true, characterData: true });\\n\\n  // failback for elements has empty content.\\n  setImmediate(function () {\\n    setContentReady(element);\\n    consumeQueue(element);\\n  });\\n}\\n\\n/*\\nCopyright 2013-2015 ASIAL CORPORATION\\n\\nLicensed under the Apache License, Version 2.0 (the \\\"License\\\");\\nyou may not use this file except in compliance with the License.\\nYou may obtain a copy of the License at\\n\\n   http://www.apache.org/licenses/LICENSE-2.0\\n\\nUnless required by applicable law or agreed to in writing, software\\ndistributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\nSee the License for the specific language governing permissions and\\nlimitations under the License.\\n\\n*/\\n\\n/**\\n * @object ons.notification\\n * @category dialog\\n * @tutorial vanilla/Reference/dialog\\n * @description\\n *   [en]\\n *     Utility methods to create different kinds of alert dialogs. There are three methods available:\\n *\\n *     * `ons.notification.alert()`\\n *     * `ons.notification.confirm()`\\n *     * `ons.notification.prompt()`\\n *\\n *     It will automatically display a Material Design dialog on Android devices.\\n *   [/en]\\n *   [ja]いくつかの種類のアラートダイアログを作成するためのユーティリティメソッドを収めたオブジェクトです。[/ja]\\n * @example\\n * ons.notification.alert('Hello, world!');\\n *\\n * ons.notification.confirm('Are you ready?')\\n *   .then(\\n *     function(answer) {\\n *       if (answer === 1) {\\n *         ons.notification.alert('Let\\\\'s go!');\\n *       }\\n *     }\\n *   );\\n *\\n * ons.notification.prompt('How old are ?')\\n *   .then(\\n *     function(age) {\\n *       ons.notification.alert('You are ' + age + ' years old.');\\n *     }\\n *   );\\n */\\nvar notification = {};\\n\\nnotification._createAlertDialog = function (options) {\\n  // Prompt input string\\n  var inputString = '';\\n  if (options.isPrompt) {\\n    inputString = '\\\\n      <input\\\\n        class=\\\"text-input text-input--underbar\\\"\\\\n        type=\\\"' + (options.inputType || 'text') + '\\\"\\\\n        placeholder=\\\"' + (options.placeholder || '') + '\\\"\\\\n        value=\\\"' + (options.defaultValue || '') + '\\\"\\\\n        style=\\\"width: 100%; margin-top: 10px;\\\"\\\\n      />\\\\n    ';\\n  }\\n\\n  // Buttons string\\n  var buttons = '';\\n  options.buttonLabels.forEach(function (label, index) {\\n    buttons += '\\\\n      <button class=\\\"\\\\n        alert-dialog-button\\\\n        ' + (index === options.primaryButtonIndex ? ' alert-dialog-button--primal' : '') + '\\\\n        ' + (options.buttonLabels.length <= 2 ? ' alert-dialog-button--rowfooter' : '') + '\\\\n      \\\">\\\\n        ' + label + '\\\\n      </button>\\\\n    ';\\n  });\\n\\n  // Dialog Element\\n  var el = {};\\n  var _destroyDialog = function _destroyDialog() {\\n    if (el.dialog.onDialogCancel) {\\n      el.dialog.removeEventListener('dialog-cancel', el.dialog.onDialogCancel);\\n    }\\n\\n    Object.keys(el).forEach(function (key) {\\n      return delete el[key];\\n    });\\n    el = null;\\n\\n    if (options.destroy instanceof Function) {\\n      options.destroy();\\n    }\\n  };\\n\\n  el.dialog = document.createElement('ons-alert-dialog');\\n  el.dialog.innerHTML = '\\\\n    <div class=\\\"alert-dialog-mask\\\"></div>\\\\n    <div class=\\\"alert-dialog\\\">\\\\n      <div class=\\\"alert-dialog-container\\\">\\\\n        <div class=\\\"alert-dialog-title\\\">\\\\n          ' + (options.title || '') + '\\\\n        </div>\\\\n        <div class=\\\"alert-dialog-content\\\">\\\\n          ' + (options.message || options.messageHTML) + '\\\\n          ' + inputString + '\\\\n        </div>\\\\n        <div class=\\\"\\\\n          alert-dialog-footer\\\\n          ' + (options.buttonLabels.length <= 2 ? ' alert-dialog-footer--rowfooter' : '') + '\\\\n        \\\">\\\\n          ' + buttons + '\\\\n        </div>\\\\n      </div>\\\\n    </div>\\\\n  ';\\n  contentReady(el.dialog);\\n\\n  // Set attributes\\n  ['id', 'class', 'animation'].forEach(function (a) {\\n    return options.hasOwnProperty(a) && el.dialog.setAttribute(a, options[a]);\\n  });\\n  if (options.modifier) {\\n    util.addModifier(el.dialog, options.modifier);\\n  }\\n\\n  var deferred = util.defer();\\n\\n  // Prompt events\\n  if (options.isPrompt && options.submitOnEnter) {\\n    el.input = el.dialog.querySelector('.text-input');\\n    el.input.onkeypress = function (event) {\\n      if (event.keyCode === 13) {\\n        el.dialog.hide().then(function () {\\n          if (el) {\\n            var resolveValue = el.input.value;\\n            _destroyDialog();\\n            options.callback(resolveValue);\\n            deferred.resolve(resolveValue);\\n          }\\n        });\\n      }\\n    };\\n  }\\n\\n  // Button events\\n  el.footer = el.dialog.querySelector('.alert-dialog-footer');\\n  util.arrayFrom(el.dialog.querySelectorAll('.alert-dialog-button')).forEach(function (buttonElement, index) {\\n    buttonElement.onclick = function () {\\n      el.dialog.hide().then(function () {\\n        if (el) {\\n          var resolveValue = options.isPrompt ? el.input.value : index;\\n          el.dialog.remove();\\n          _destroyDialog();\\n          options.callback(resolveValue);\\n          deferred.resolve(resolveValue);\\n        }\\n      });\\n    };\\n\\n    el.footer.appendChild(buttonElement);\\n  });\\n\\n  // Cancel events\\n  if (options.cancelable) {\\n    el.dialog.cancelable = true;\\n    el.dialog.onDialogCancel = function () {\\n      setImmediate(function () {\\n        el.dialog.remove();\\n        _destroyDialog();\\n      });\\n      var resolveValue = options.isPrompt ? null : -1;\\n      options.callback(resolveValue);\\n      deferred.reject(resolveValue);\\n    };\\n    el.dialog.addEventListener('dialog-cancel', el.dialog.onDialogCancel, false);\\n  }\\n\\n  // Show dialog\\n  document.body.appendChild(el.dialog);\\n  options.compile(el.dialog);\\n  setImmediate(function () {\\n    el.dialog.show().then(function () {\\n      if (el.input && options.isPrompt && options.autofocus) {\\n        el.input.focus();\\n      }\\n    });\\n  });\\n\\n  return deferred.promise;\\n};\\n\\nvar _normalizeArguments = function _normalizeArguments(message) {\\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\\n  var defaults = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\\n\\n  typeof message === 'string' ? options.message = message : options = message;\\n  if (!options.message && !options.messageHTML) {\\n    throw new Error('Alert dialog must contain a message.');\\n  }\\n\\n  if (options.hasOwnProperty('buttonLabels') || options.hasOwnProperty('buttonLabel')) {\\n    options.buttonLabels = options.buttonLabels || options.buttonLabel;\\n    if (!Array.isArray(options.buttonLabels)) {\\n      options.buttonLabels = [options.buttonLabels || ''];\\n    }\\n  }\\n\\n  return util.extend({\\n    compile: function compile(param) {\\n      return param;\\n    },\\n    callback: function callback(param) {\\n      return param;\\n    },\\n    buttonLabels: ['OK'],\\n    primaryButtonIndex: 0,\\n    animation: 'default',\\n    cancelable: false\\n  }, defaults, options);\\n};\\n\\n/**\\n * @method alert\\n * @signature alert(message [, options] | options)\\n * @return {Promise}\\n *   [en]Will resolve when the dialog is closed.[/en]\\n *   [ja][/ja]\\n * @param {String} message\\n *   [en]Alert message. This argument is optional but if it's not defined either `options.message` or `options.messageHTML` must be defined instead.[/en]\\n *   [ja][/ja]\\n * @param {Object} options\\n *   [en]Parameter object.[/en]\\n *   [ja]オプションを指定するオブジェクトです。[/ja]\\n * @param {String} [options.message]\\n *   [en]Alert message.[/en]\\n *   [ja]アラートダイアログに表示する文字列を指定します。[/ja]\\n * @param {String} [options.messageHTML]\\n *   [en]Alert message in HTML.[/en]\\n *   [ja]アラートダイアログに表示するHTMLを指定します。[/ja]\\n * @param {String | Array} [options.buttonLabels]\\n *   [en]Labels for the buttons. Default is `\\\"OK\\\"`.[/en]\\n *   [ja]確認ボタンのラベルを指定します。\\\"OK\\\"がデフォルトです。[/ja]\\n * @param {Number} [options.primaryButtonIndex]\\n *   [en]Index of primary button. Default is `0`.[/en]\\n *   [ja]プライマリボタンのインデックスを指定します。デフォルトは 0 です。[/ja]\\n * @param {Boolean} [options.cancelable]\\n *   [en]Whether the dialog is cancelable or not. Default is `false`. If the dialog is cancelable it can be closed by clicking the background or pressing the Android back button.[/en]\\n *   [ja]ダイアログがキャンセル可能かどうかを指定します。[/ja]\\n * @param {String} [options.animation]\\n *   [en]Animation name. Available animations are `none` and `fade`. Default is `fade`.[/en]\\n *   [ja]アラートダイアログを表示する際のアニメーション名を指定します。\\\"none\\\", \\\"fade\\\"のいずれかを指定できます。[/ja]\\n * @param {String} [options.id]\\n *   [en]The `<ons-alert-dialog>` element's ID.[/en]\\n *   [ja]ons-alert-dialog要素のID。[/ja]\\n * @param {String} [options.class]\\n *   [en]The `<ons-alert-dialog>` element's class.[/en]\\n *   [ja]ons-alert-dialog要素のclass。[/ja]\\n * @param {String} [options.title]\\n *   [en]Dialog title. Default is `\\\"Alert\\\"`.[/en]\\n *   [ja]アラートダイアログの上部に表示するタイトルを指定します。\\\"Alert\\\"がデフォルトです。[/ja]\\n * @param {String} [options.modifier]\\n *   [en]Modifier for the dialog.[/en]\\n *   [ja]アラートダイアログのmodifier属性の値を指定します。[/ja]\\n * @param {Function} [options.callback]\\n *   [en]Function that executes after dialog has been closed.[/en]\\n *   [ja]アラートダイアログが閉じられた時に呼び出される関数オブジェクトを指定します。[/ja]\\n * @description\\n *   [en]\\n *     Display an alert dialog to show the user a message.\\n *\\n *     The content of the message can be either simple text or HTML.\\n *\\n *     It can be called in the following ways:\\n *\\n *     ```\\n *     ons.notification.alert(message, options);\\n *     ons.notification.alert(options);\\n *     ```\\n *\\n *     Must specify either `message` or `messageHTML`.\\n *   [/en]\\n *   [ja]\\n *     ユーザーへメッセージを見せるためのアラートダイアログを表示します。\\n *     表示するメッセージは、テキストかもしくはHTMLを指定できます。\\n *     このメソッドの引数には、options.messageもしくはoptions.messageHTMLのどちらかを必ず指定する必要があります。\\n *   [/ja]\\n */\\nnotification.alert = function (message, options) {\\n  options = _normalizeArguments(message, options, {\\n    title: 'Alert'\\n  });\\n\\n  return notification._createAlertDialog(options);\\n};\\n\\n/**\\n * @method confirm\\n * @signature confirm(message [, options] | options)\\n * @return {Promise}\\n *   [en]Will resolve to the index of the button that was pressed.[/en]\\n *   [ja][/ja]\\n * @param {String} message\\n *   [en]Alert message. This argument is optional but if it's not defined either `options.message` or `options.messageHTML` must be defined instead.[/en]\\n *   [ja][/ja]\\n * @param {Object} options\\n *   [en]Parameter object.[/en]\\n * @param {Array} [options.buttonLabels]\\n *   [en]Labels for the buttons. Default is `[\\\"Cancel\\\", \\\"OK\\\"]`.[/en]\\n *   [ja]ボタンのラベルの配列を指定します。[\\\"Cancel\\\", \\\"OK\\\"]がデフォルトです。[/ja]\\n * @param {Number} [options.primaryButtonIndex]\\n *   [en]Index of primary button. Default is `1`.[/en]\\n *   [ja]プライマリボタンのインデックスを指定します。デフォルトは 1 です。[/ja]\\n * @description\\n *   [en]\\n *     Display a dialog to ask the user for confirmation. Extends `alert()` parameters.\\n *     The default button labels are `\\\"Cancel\\\"` and `\\\"OK\\\"` but they can be customized.\\n *\\n *     It can be called in the following ways:\\n *\\n *     ```\\n *     ons.notification.confirm(message, options);\\n *     ons.notification.confirm(options);\\n *     ```\\n *\\n *     Must specify either `message` or `messageHTML`.\\n *   [/en]\\n *   [ja]\\n *     ユーザに確認を促すダイアログを表示します。\\n *     デオルとのボタンラベルは、\\\"Cancel\\\"と\\\"OK\\\"ですが、これはこのメソッドの引数でカスタマイズできます。\\n *     このメソッドの引数には、options.messageもしくはoptions.messageHTMLのどちらかを必ず指定する必要があります。\\n *   [/ja]\\n */\\nnotification.confirm = function (message, options) {\\n  options = _normalizeArguments(message, options, {\\n    buttonLabels: ['Cancel', 'OK'],\\n    primaryButtonIndex: 1,\\n    title: 'Confirm'\\n  });\\n\\n  return notification._createAlertDialog(options);\\n};\\n\\n/**\\n * @method prompt\\n * @signature prompt(message [, options] | options)\\n * @param {String} message\\n *   [en]Alert message. This argument is optional but if it's not defined either `options.message` or `options.messageHTML` must be defined instead.[/en]\\n *   [ja][/ja]\\n * @return {Promise}\\n *   [en]Will resolve to the input value when the dialog is closed.[/en]\\n *   [ja][/ja]\\n * @param {Object} options\\n *   [en]Parameter object.[/en]\\n *   [ja]オプションを指定するオブジェクトです。[/ja]\\n * @param {String | Array} [options.buttonLabels]\\n *   [en]Labels for the buttons. Default is `\\\"OK\\\"`.[/en]\\n *   [ja]確認ボタンのラベルを指定します。\\\"OK\\\"がデフォルトです。[/ja]\\n * @param {Number} [options.primaryButtonIndex]\\n *   [en]Index of primary button. Default is `0`.[/en]\\n *   [ja]プライマリボタンのインデックスを指定します。デフォルトは 0 です。[/ja]\\n * @param {String} [options.placeholder]\\n *   [en]Placeholder for the text input.[/en]\\n *   [ja]テキスト欄のプレースホルダに表示するテキストを指定します。[/ja]\\n * @param {String} [options.defaultValue]\\n *   [en]Default value for the text input.[/en]\\n *   [ja]テキスト欄のデフォルトの値を指定します。[/ja]\\n * @param {String} [options.inputType]\\n *   [en]Type of the input element (`password`, `date`...). Default is `text`.[/en]\\n *   [ja][/ja]\\n * @param {Boolean} [options.autofocus]\\n *   [en]Autofocus the input element. Default is `true`.[/en]\\n *   [ja]input要素に自動的にフォーカスするかどうかを指定します。デフォルトはtrueです。[/ja]\\n * @param {Boolean} [options.submitOnEnter]\\n *   [en]Submit automatically when enter is pressed. Default is `true`.[/en]\\n *   [ja]Enterが押された際にそのformをsubmitするかどうかを指定します。デフォルトはtrueです。[/ja]\\n * @description\\n *   [en]\\n *     Display a dialog with a prompt to ask the user a question. Extends `alert()` parameters.\\n *\\n *     It can be called in the following ways:\\n *\\n *     ```\\n *     ons.notification.prompt(message, options);\\n *     ons.notification.prompt(options);\\n *     ```\\n *\\n *     Must specify either `message` or `messageHTML`.\\n *   [/en]\\n *   [ja]\\n *     ユーザーに入力を促すダイアログを表示します。\\n *     このメソッドの引数には、options.messageもしくはoptions.messageHTMLのどちらかを必ず指定する必要があります。\\n *   [/ja]\\n */\\nnotification.prompt = function (message, options) {\\n  options = _normalizeArguments(message, options, {\\n    title: 'Alert',\\n    isPrompt: true,\\n    autofocus: true,\\n    submitOnEnter: true\\n  });\\n\\n  return notification._createAlertDialog(options);\\n};\\n\\n/*\\nCopyright 2013-2015 ASIAL CORPORATION\\n\\nLicensed under the Apache License, Version 2.0 (the \\\"License\\\");\\nyou may not use this file except in compliance with the License.\\nYou may obtain a copy of the License at\\n\\n   http://www.apache.org/licenses/LICENSE-2.0\\n\\nUnless required by applicable law or agreed to in writing, software\\ndistributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\nSee the License for the specific language governing permissions and\\nlimitations under the License.\\n\\n*/\\n\\nvar create = function create() {\\n\\n  /**\\n   * @object ons.orientation\\n   * @category util\\n   * @description\\n   *   [en]Utility methods for orientation detection.[/en]\\n   *   [ja]画面のオリエンテーション検知のためのユーティリティメソッドを収めているオブジェクトです。[/ja]\\n   */\\n  var obj = {\\n    /**\\n     * @event change\\n     * @description\\n     *   [en]Fired when the device orientation changes.[/en]\\n     *   [ja]デバイスのオリエンテーションが変化した際に発火します。[/ja]\\n     * @param {Object} event\\n     *   [en]Event object.[/en]\\n     *   [ja]イベントオブジェクトです。[/ja]\\n     * @param {Boolean} event.isPortrait\\n     *   [en]Will be true if the current orientation is portrait mode.[/en]\\n     *   [ja]現在のオリエンテーションがportraitの場合にtrueを返します。[/ja]\\n     */\\n\\n    /**\\n     * @method on\\n     * @signature on(eventName, listener)\\n     * @description\\n     *   [en]Add an event listener.[/en]\\n     *   [ja]イベントリスナーを追加します。[/ja]\\n     * @param {String} eventName\\n     *   [en]Name of the event.[/en]\\n     *   [ja]イベント名を指定します。[/ja]\\n     * @param {Function} listener\\n     *   [en]Function to execute when the event is triggered.[/en]\\n     *   [ja]このイベントが発火された際に呼び出される関数オブジェクトを指定します。[/ja]\\n     */\\n\\n    /**\\n     * @method once\\n     * @signature once(eventName, listener)\\n     * @description\\n     *  [en]Add an event listener that's only triggered once.[/en]\\n     *  [ja]一度だけ呼び出されるイベントリスナーを追加します。[/ja]\\n     * @param {String} eventName\\n     *   [en]Name of the event.[/en]\\n     *   [ja]イベント名を指定します。[/ja]\\n     * @param {Function} listener\\n     *   [en]Function to execute when the event is triggered.[/en]\\n     *   [ja]イベントが発火した際に呼び出される関数オブジェクトを指定します。[/ja]\\n     */\\n\\n    /**\\n     * @method off\\n     * @signature off(eventName, [listener])\\n     * @description\\n     *  [en]Remove an event listener. If the listener is not specified all listeners for the event type will be removed.[/en]\\n     *  [ja]イベントリスナーを削除します。もしイベントリスナーを指定しなかった場合には、そのイベントに紐づく全てのイベントリスナーが削除されます。[/ja]\\n     * @param {String} eventName\\n     *   [en]Name of the event.[/en]\\n     *   [ja]イベント名を指定します。[/ja]\\n     * @param {Function} listener\\n     *   [en]Function to execute when the event is triggered.[/en]\\n     *   [ja]削除するイベントリスナーを指定します。[/ja]\\n     */\\n\\n    // actual implementation to detect if whether current screen is portrait or not\\n    _isPortrait: false,\\n\\n    /**\\n     * @method isPortrait\\n     * @signature isPortrait()\\n     * @return {Boolean}\\n     *   [en]Will be true if the current orientation is portrait mode.[/en]\\n     *   [ja]オリエンテーションがportraitモードの場合にtrueになります。[/ja]\\n     * @description\\n     *   [en]Returns whether the current screen orientation is portrait or not.[/en]\\n     *   [ja]オリエンテーションがportraitモードかどうかを返します。[/ja]\\n     */\\n    isPortrait: function isPortrait() {\\n      return this._isPortrait();\\n    },\\n\\n    /**\\n     * @method isLandscape\\n     * @signature isLandscape()\\n     * @return {Boolean}\\n     *   [en]Will be true if the current orientation is landscape mode.[/en]\\n     *   [ja]オリエンテーションがlandscapeモードの場合にtrueになります。[/ja]\\n     * @description\\n     *   [en]Returns whether the current screen orientation is landscape or not.[/en]\\n     *   [ja]オリエンテーションがlandscapeモードかどうかを返します。[/ja]\\n     */\\n    isLandscape: function isLandscape() {\\n      return !this.isPortrait();\\n    },\\n\\n    _init: function _init() {\\n      document.addEventListener('DOMContentLoaded', this._onDOMContentLoaded.bind(this), false);\\n\\n      if ('orientation' in window) {\\n        window.addEventListener('orientationchange', this._onOrientationChange.bind(this), false);\\n      } else {\\n        window.addEventListener('resize', this._onResize.bind(this), false);\\n      }\\n\\n      this._isPortrait = function () {\\n        return window.innerHeight > window.innerWidth;\\n      };\\n\\n      return this;\\n    },\\n\\n    _onDOMContentLoaded: function _onDOMContentLoaded() {\\n      this._installIsPortraitImplementation();\\n      this.emit('change', { isPortrait: this.isPortrait() });\\n    },\\n\\n    _installIsPortraitImplementation: function _installIsPortraitImplementation() {\\n      var isPortrait = window.innerWidth < window.innerHeight;\\n\\n      if (!('orientation' in window)) {\\n        this._isPortrait = function () {\\n          return window.innerHeight > window.innerWidth;\\n        };\\n      } else if (window.orientation % 180 === 0) {\\n        this._isPortrait = function () {\\n          return Math.abs(window.orientation % 180) === 0 ? isPortrait : !isPortrait;\\n        };\\n      } else {\\n        this._isPortrait = function () {\\n          return Math.abs(window.orientation % 180) === 90 ? isPortrait : !isPortrait;\\n        };\\n      }\\n    },\\n\\n    _onOrientationChange: function _onOrientationChange() {\\n      var _this = this;\\n\\n      var isPortrait = this._isPortrait();\\n\\n      // Wait for the dimensions to change because\\n      // of Android inconsistency.\\n      var nIter = 0;\\n      var interval = setInterval(function () {\\n        nIter++;\\n\\n        var w = window.innerWidth;\\n        var h = window.innerHeight;\\n\\n        if (isPortrait && w <= h || !isPortrait && w >= h) {\\n          _this.emit('change', { isPortrait: isPortrait });\\n          clearInterval(interval);\\n        } else if (nIter === 50) {\\n          _this.emit('change', { isPortrait: isPortrait });\\n          clearInterval(interval);\\n        }\\n      }, 20);\\n    },\\n\\n    // Run on not mobile browser.\\n    _onResize: function _onResize() {\\n      this.emit('change', { isPortrait: this.isPortrait() });\\n    }\\n  };\\n\\n  MicroEvent.mixin(obj);\\n\\n  return obj;\\n};\\n\\nvar orientation = create()._init();\\n\\n/*\\nCopyright 2013-2015 ASIAL CORPORATION\\n\\nLicensed under the Apache License, Version 2.0 (the \\\"License\\\");\\nyou may not use this file except in compliance with the License.\\nYou may obtain a copy of the License at\\n\\n   http://www.apache.org/licenses/LICENSE-2.0\\n\\nUnless required by applicable law or agreed to in writing, software\\ndistributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\nSee the License for the specific language governing permissions and\\nlimitations under the License.\\n\\n*/\\n\\nvar softwareKeyboard = new MicroEvent();\\nsoftwareKeyboard._visible = false;\\n\\nvar onShow = function onShow() {\\n  softwareKeyboard._visible = true;\\n  softwareKeyboard.emit('show');\\n};\\n\\nvar onHide = function onHide() {\\n  softwareKeyboard._visible = false;\\n  softwareKeyboard.emit('hide');\\n};\\n\\nvar bindEvents = function bindEvents() {\\n  if (typeof Keyboard !== 'undefined') {\\n    // https://github.com/martinmose/cordova-keyboard/blob/95f3da3a38d8f8e1fa41fbf40145352c13535a00/README.md\\n    Keyboard.onshow = onShow;\\n    Keyboard.onhide = onHide;\\n    softwareKeyboard.emit('init', { visible: Keyboard.isVisible });\\n\\n    return true;\\n  } else if (typeof cordova.plugins !== 'undefined' && typeof cordova.plugins.Keyboard !== 'undefined') {\\n    // https://github.com/driftyco/ionic-plugins-keyboard/blob/ca27ecf/README.md\\n    window.addEventListener('native.keyboardshow', onShow);\\n    window.addEventListener('native.keyboardhide', onHide);\\n    softwareKeyboard.emit('init', { visible: cordova.plugins.Keyboard.isVisible });\\n\\n    return true;\\n  }\\n\\n  return false;\\n};\\n\\nvar noPluginError = function noPluginError() {\\n  util.warn('ons-keyboard: Cordova Keyboard plugin is not present.');\\n};\\n\\ndocument.addEventListener('deviceready', function () {\\n  if (!bindEvents()) {\\n    if (document.querySelector('[ons-keyboard-active]') || document.querySelector('[ons-keyboard-inactive]')) {\\n      noPluginError();\\n    }\\n\\n    softwareKeyboard.on = noPluginError;\\n  }\\n});\\n\\n/*\\nCopyright 2013-2015 ASIAL CORPORATION\\n\\nLicensed under the Apache License, Version 2.0 (the \\\"License\\\");\\nyou may not use this file except in compliance with the License.\\nYou may obtain a copy of the License at\\n\\n   http://www.apache.org/licenses/LICENSE-2.0\\n\\nUnless required by applicable law or agreed to in writing, software\\ndistributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\nSee the License for the specific language governing permissions and\\nlimitations under the License.\\n\\n*/\\n\\nvar util$3 = {\\n  _ready: false,\\n\\n  _domContentLoaded: false,\\n\\n  _onDOMContentLoaded: function _onDOMContentLoaded() {\\n    util$3._domContentLoaded = true;\\n\\n    if (platform.isWebView()) {\\n      window.document.addEventListener('deviceready', function () {\\n        util$3._ready = true;\\n      }, false);\\n    } else {\\n      util$3._ready = true;\\n    }\\n  },\\n\\n  addBackButtonListener: function addBackButtonListener(fn) {\\n    if (!this._domContentLoaded) {\\n      throw new Error('This method is available after DOMContentLoaded');\\n    }\\n\\n    if (this._ready) {\\n      window.document.addEventListener('backbutton', fn, false);\\n    } else {\\n      window.document.addEventListener('deviceready', function () {\\n        window.document.addEventListener('backbutton', fn, false);\\n      });\\n    }\\n  },\\n\\n  removeBackButtonListener: function removeBackButtonListener(fn) {\\n    if (!this._domContentLoaded) {\\n      throw new Error('This method is available after DOMContentLoaded');\\n    }\\n\\n    if (this._ready) {\\n      window.document.removeEventListener('backbutton', fn, false);\\n    } else {\\n      window.document.addEventListener('deviceready', function () {\\n        window.document.removeEventListener('backbutton', fn, false);\\n      });\\n    }\\n  }\\n};\\nwindow.addEventListener('DOMContentLoaded', function () {\\n  return util$3._onDOMContentLoaded();\\n}, false);\\n\\nvar HandlerRepository = {\\n  _store: {},\\n\\n  _genId: function () {\\n    var i = 0;\\n    return function () {\\n      return i++;\\n    };\\n  }(),\\n\\n  set: function set(element, handler) {\\n    if (element.dataset.deviceBackButtonHandlerId) {\\n      this.remove(element);\\n    }\\n    var id = element.dataset.deviceBackButtonHandlerId = HandlerRepository._genId();\\n    this._store[id] = handler;\\n  },\\n\\n  remove: function remove(element) {\\n    if (element.dataset.deviceBackButtonHandlerId) {\\n      delete this._store[element.dataset.deviceBackButtonHandlerId];\\n      delete element.dataset.deviceBackButtonHandlerId;\\n    }\\n  },\\n\\n  get: function get(element) {\\n    if (!element.dataset.deviceBackButtonHandlerId) {\\n      return undefined;\\n    }\\n\\n    var id = element.dataset.deviceBackButtonHandlerId;\\n\\n    if (!this._store[id]) {\\n      throw new Error();\\n    }\\n\\n    return this._store[id];\\n  },\\n\\n  has: function has(element) {\\n    if (!element.dataset) {\\n      return false;\\n    }\\n\\n    var id = element.dataset.deviceBackButtonHandlerId;\\n\\n    return !!this._store[id];\\n  }\\n};\\n\\nvar DeviceBackButtonDispatcher = function () {\\n  function DeviceBackButtonDispatcher() {\\n    classCallCheck(this, DeviceBackButtonDispatcher);\\n\\n    this._isEnabled = false;\\n    this._boundCallback = this._callback.bind(this);\\n  }\\n\\n  /**\\n   * Enable to handle 'backbutton' events.\\n   */\\n\\n\\n  createClass(DeviceBackButtonDispatcher, [{\\n    key: 'enable',\\n    value: function enable() {\\n      if (!this._isEnabled) {\\n        util$3.addBackButtonListener(this._boundCallback);\\n        this._isEnabled = true;\\n      }\\n    }\\n\\n    /**\\n     * Disable to handle 'backbutton' events.\\n     */\\n\\n  }, {\\n    key: 'disable',\\n    value: function disable() {\\n      if (this._isEnabled) {\\n        util$3.removeBackButtonListener(this._boundCallback);\\n        this._isEnabled = false;\\n      }\\n    }\\n\\n    /**\\n     * Fire a 'backbutton' event manually.\\n     */\\n\\n  }, {\\n    key: 'fireDeviceBackButtonEvent',\\n    value: function fireDeviceBackButtonEvent() {\\n      var event = document.createEvent('Event');\\n      event.initEvent('backbutton', true, true);\\n      document.dispatchEvent(event);\\n    }\\n  }, {\\n    key: '_callback',\\n    value: function _callback() {\\n      this._dispatchDeviceBackButtonEvent();\\n    }\\n\\n    /**\\n     * @param {HTMLElement} element\\n     * @param {Function} callback\\n     */\\n\\n  }, {\\n    key: 'createHandler',\\n    value: function createHandler(element, callback) {\\n      if (!(element instanceof HTMLElement)) {\\n        throw new Error('element must be an instance of HTMLElement');\\n      }\\n\\n      if (!(callback instanceof Function)) {\\n        throw new Error('callback must be an instance of Function');\\n      }\\n\\n      var handler = {\\n        _callback: callback,\\n        _element: element,\\n\\n        disable: function disable() {\\n          HandlerRepository.remove(element);\\n        },\\n\\n        setListener: function setListener(callback) {\\n          this._callback = callback;\\n        },\\n\\n        enable: function enable() {\\n          HandlerRepository.set(element, this);\\n        },\\n\\n        isEnabled: function isEnabled() {\\n          return HandlerRepository.get(element) === this;\\n        },\\n\\n        destroy: function destroy() {\\n          HandlerRepository.remove(element);\\n          this._callback = this._element = null;\\n        }\\n      };\\n\\n      handler.enable();\\n\\n      return handler;\\n    }\\n  }, {\\n    key: '_dispatchDeviceBackButtonEvent',\\n    value: function _dispatchDeviceBackButtonEvent() {\\n      var tree = this._captureTree();\\n\\n      var element = this._findHandlerLeafElement(tree);\\n\\n      var handler = HandlerRepository.get(element);\\n      handler._callback(createEvent(element));\\n\\n      function createEvent(element) {\\n        return {\\n          _element: element,\\n          callParentHandler: function callParentHandler() {\\n            var parent = this._element.parentNode;\\n\\n            while (parent) {\\n              handler = HandlerRepository.get(parent);\\n              if (handler) {\\n                return handler._callback(createEvent(parent));\\n              }\\n              parent = parent.parentNode;\\n            }\\n          }\\n        };\\n      }\\n    }\\n\\n    /**\\n     * @return {Object}\\n     */\\n\\n  }, {\\n    key: '_captureTree',\\n    value: function _captureTree() {\\n      return createTree(document.body);\\n\\n      function createTree(element) {\\n        var tree = {\\n          element: element,\\n          children: Array.prototype.concat.apply([], arrayOf(element.children).map(function (childElement) {\\n\\n            if (childElement.style.display === 'none') {\\n              return [];\\n            }\\n\\n            if (childElement.children.length === 0 && !HandlerRepository.has(childElement)) {\\n              return [];\\n            }\\n\\n            var result = createTree(childElement);\\n\\n            if (result.children.length === 0 && !HandlerRepository.has(result.element)) {\\n              return [];\\n            }\\n\\n            return [result];\\n          }))\\n        };\\n\\n        if (!HandlerRepository.has(tree.element)) {\\n          var _iteratorNormalCompletion = true;\\n          var _didIteratorError = false;\\n          var _iteratorError = undefined;\\n\\n          try {\\n            for (var _iterator = tree.children[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\\n              var subTree = _step.value;\\n\\n              if (HandlerRepository.has(subTree.element)) {\\n                return subTree;\\n              }\\n            }\\n          } catch (err) {\\n            _didIteratorError = true;\\n            _iteratorError = err;\\n          } finally {\\n            try {\\n              if (!_iteratorNormalCompletion && _iterator.return) {\\n                _iterator.return();\\n              }\\n            } finally {\\n              if (_didIteratorError) {\\n                throw _iteratorError;\\n              }\\n            }\\n          }\\n        }\\n\\n        return tree;\\n      }\\n\\n      function arrayOf(target) {\\n        var result = [];\\n        for (var i = 0; i < target.length; i++) {\\n          result.push(target[i]);\\n        }\\n        return result;\\n      }\\n    }\\n\\n    /**\\n     * @param {Object} tree\\n     * @return {HTMLElement}\\n     */\\n\\n  }, {\\n    key: '_findHandlerLeafElement',\\n    value: function _findHandlerLeafElement(tree) {\\n      return find(tree);\\n\\n      function find(node) {\\n        if (node.children.length === 0) {\\n          return node.element;\\n        }\\n\\n        if (node.children.length === 1) {\\n          return find(node.children[0]);\\n        }\\n\\n        return node.children.map(function (childNode) {\\n          return childNode.element;\\n        }).reduce(function (left, right) {\\n          if (!left) {\\n            return right;\\n          }\\n\\n          var leftZ = parseInt(window.getComputedStyle(left, '').zIndex, 10);\\n          var rightZ = parseInt(window.getComputedStyle(right, '').zIndex, 10);\\n\\n          if (!isNaN(leftZ) && !isNaN(rightZ)) {\\n            return leftZ > rightZ ? left : right;\\n          }\\n\\n          throw new Error('Capturing backbutton-handler is failure.');\\n        }, null);\\n      }\\n    }\\n  }]);\\n  return DeviceBackButtonDispatcher;\\n}();\\n\\nvar deviceBackButtonDispatcher = new DeviceBackButtonDispatcher();\\n\\n/*\\nCopyright 2013-2015 ASIAL CORPORATION\\n\\nLicensed under the Apache License, Version 2.0 (the \\\"License\\\");\\nyou may not use this file except in compliance with the License.\\nYou may obtain a copy of the License at\\n\\n   http://www.apache.org/licenses/LICENSE-2.0\\n\\nUnless required by applicable law or agreed to in writing, software\\ndistributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\nSee the License for the specific language governing permissions and\\nlimitations under the License.\\n\\n*/\\n\\nvar generateId = function () {\\n  var i = 0;\\n  return function () {\\n    return i++;\\n  };\\n}();\\n\\n/**\\n * Door locking system.\\n *\\n * @param {Object} [options]\\n * @param {Function} [options.log]\\n */\\n\\nvar DoorLock = function () {\\n  function DoorLock() {\\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n    classCallCheck(this, DoorLock);\\n\\n    this._lockList = [];\\n    this._waitList = [];\\n    this._log = options.log || function () {};\\n  }\\n\\n  /**\\n   * Register a lock.\\n   *\\n   * @return {Function} Callback for unlocking.\\n   */\\n\\n\\n  createClass(DoorLock, [{\\n    key: 'lock',\\n    value: function lock() {\\n      var _this = this;\\n\\n      var unlock = function unlock() {\\n        _this._unlock(unlock);\\n      };\\n      unlock.id = generateId();\\n      this._lockList.push(unlock);\\n      this._log('lock: ' + unlock.id);\\n\\n      return unlock;\\n    }\\n  }, {\\n    key: '_unlock',\\n    value: function _unlock(fn) {\\n      var index = this._lockList.indexOf(fn);\\n      if (index === -1) {\\n        throw new Error('This function is not registered in the lock list.');\\n      }\\n\\n      this._lockList.splice(index, 1);\\n      this._log('unlock: ' + fn.id);\\n\\n      this._tryToFreeWaitList();\\n    }\\n  }, {\\n    key: '_tryToFreeWaitList',\\n    value: function _tryToFreeWaitList() {\\n      while (!this.isLocked() && this._waitList.length > 0) {\\n        this._waitList.shift()();\\n      }\\n    }\\n\\n    /**\\n     * Register a callback for waiting unlocked door.\\n     *\\n     * @params {Function} callback Callback on unlocking the door completely.\\n     */\\n\\n  }, {\\n    key: 'waitUnlock',\\n    value: function waitUnlock(callback) {\\n      if (!(callback instanceof Function)) {\\n        throw new Error('The callback param must be a function.');\\n      }\\n\\n      if (this.isLocked()) {\\n        this._waitList.push(callback);\\n      } else {\\n        callback();\\n      }\\n    }\\n\\n    /**\\n     * @return {Boolean}\\n     */\\n\\n  }, {\\n    key: 'isLocked',\\n    value: function isLocked() {\\n      return this._lockList.length > 0;\\n    }\\n  }]);\\n  return DoorLock;\\n}();\\n\\n/*\\nCopyright 2013-2015 ASIAL CORPORATION\\n\\nLicensed under the Apache License, Version 2.0 (the \\\"License\\\");\\nyou may not use this file except in compliance with the License.\\nYou may obtain a copy of the License at\\n\\n   http://www.apache.org/licenses/LICENSE-2.0\\n\\nUnless required by applicable law or agreed to in writing, software\\ndistributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\nSee the License for the specific language governing permissions and\\nlimitations under the License.\\n\\n*/\\n// Default implementation for global PageLoader.\\nfunction loadPage(_ref, done) {\\n  var page = _ref.page,\\n      parent = _ref.parent,\\n      _ref$params = _ref.params,\\n      params = _ref$params === undefined ? {} : _ref$params;\\n\\n  internal$1.getPageHTMLAsync(page).then(function (html) {\\n    var pageElement = util.createElement(html.trim());\\n    parent.appendChild(pageElement);\\n\\n    done(pageElement);\\n  });\\n}\\n\\nfunction unloadPage(element) {\\n  if (element._destroy instanceof Function) {\\n    element._destroy();\\n  } else {\\n    element.remove();\\n  }\\n}\\n\\nvar PageLoader = function () {\\n  /**\\n   * @param {Function} [fn] Returns an object that has \\\"element\\\" property and \\\"unload\\\" function.\\n   */\\n  function PageLoader(loader, unloader) {\\n    classCallCheck(this, PageLoader);\\n\\n    this._loader = loader instanceof Function ? loader : loadPage;\\n    this._unloader = unloader instanceof Function ? unloader : unloadPage;\\n  }\\n\\n  /**\\n   * Set internal loader implementation.\\n   */\\n\\n\\n  createClass(PageLoader, [{\\n    key: 'load',\\n\\n\\n    /**\\n     * @param {any} options.page\\n     * @param {Element} options.parent A location to load page.\\n     * @param {Object} [options.params] Extra parameters for ons-page.\\n     * @param {Function} done Take an object that has \\\"element\\\" property and \\\"unload\\\" function.\\n     */\\n    value: function load(_ref2, done) {\\n      var page = _ref2.page,\\n          parent = _ref2.parent,\\n          _ref2$params = _ref2.params,\\n          params = _ref2$params === undefined ? {} : _ref2$params;\\n\\n      this._loader({ page: page, parent: parent, params: params }, function (pageElement) {\\n        if (!(pageElement instanceof Element)) {\\n          throw Error('pageElement must be an instance of Element.');\\n        }\\n\\n        done(pageElement);\\n      });\\n    }\\n  }, {\\n    key: 'unload',\\n    value: function unload(pageElement) {\\n      if (!(pageElement instanceof Element)) {\\n        throw Error('pageElement must be an instance of Element.');\\n      }\\n\\n      this._unloader(pageElement);\\n    }\\n  }, {\\n    key: 'internalLoader',\\n    set: function set(fn) {\\n      if (!(fn instanceof Function)) {\\n        throw Error('First parameter must be an instance of Function');\\n      }\\n      this._loader = fn;\\n    },\\n    get: function get() {\\n      return this._loader;\\n    }\\n  }]);\\n  return PageLoader;\\n}();\\n\\nvar defaultPageLoader = new PageLoader();\\n\\nvar instantPageLoader = new PageLoader(function (_ref3, done) {\\n  var page = _ref3.page,\\n      parent = _ref3.parent,\\n      _ref3$params = _ref3.params,\\n      params = _ref3$params === undefined ? {} : _ref3$params;\\n\\n  var element = util.createElement(page.trim());\\n  parent.appendChild(element);\\n\\n  done(element);\\n}, unloadPage);\\n\\n/*\\nCopyright 2013-2015 ASIAL CORPORATION\\n\\nLicensed under the Apache License, Version 2.0 (the \\\"License\\\");\\nyou may not use this file except in compliance with the License.\\nYou may obtain a copy of the License at\\n\\n   http://www.apache.org/licenses/LICENSE-2.0\\n\\nUnless required by applicable law or agreed to in writing, software\\ndistributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\nSee the License for the specific language governing permissions and\\nlimitations under the License.\\n\\n*/\\n\\nvar BaseAnimator = function () {\\n\\n  /**\\n   * @param {Object} options\\n   * @param {String} options.timing\\n   * @param {Number} options.duration\\n   * @param {Number} options.delay\\n   */\\n  function BaseAnimator() {\\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n    classCallCheck(this, BaseAnimator);\\n\\n    this.timing = options.timing || 'linear';\\n    this.duration = options.duration || 0;\\n    this.delay = options.delay || 0;\\n  }\\n\\n  createClass(BaseAnimator, null, [{\\n    key: 'extend',\\n    value: function extend() {\\n      var properties = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n\\n      var extendedAnimator = this;\\n      var newAnimator = function newAnimator() {\\n        extendedAnimator.apply(this, arguments);\\n        util.extend(this, properties);\\n      };\\n\\n      newAnimator.prototype = this.prototype;\\n      return newAnimator;\\n    }\\n  }]);\\n  return BaseAnimator;\\n}();\\n\\n/*\\nCopyright 2013-2015 ASIAL CORPORATION\\n\\nLicensed under the Apache License, Version 2.0 (the \\\"License\\\");\\nyou may not use this file except in compliance with the License.\\nYou may obtain a copy of the License at\\n\\n   http://www.apache.org/licenses/LICENSE-2.0\\n\\nUnless required by applicable law or agreed to in writing, software\\ndistributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\nSee the License for the specific language governing permissions and\\nlimitations under the License.\\n\\n*/\\n\\n/**\\n * @object ons\\n * @category util\\n * @description\\n *   [ja]Onsen UIで利用できるグローバルなオブジェクトです。[/ja]\\n *   [en]A global object that's used in Onsen UI. [/en]\\n */\\nvar ons$1 = {};\\n\\nons$1._util = util;\\nons$1.animit = Animit;\\nons$1._deviceBackButtonDispatcher = deviceBackButtonDispatcher;\\nons$1._internal = internal$1;\\nons$1.GestureDetector = GestureDetector;\\nons$1.platform = platform;\\nons$1.softwareKeyboard = softwareKeyboard;\\nons$1.pageAttributeExpression = pageAttributeExpression;\\nons$1.orientation = orientation;\\nons$1.notification = notification;\\nons$1._animationOptionsParser = parse;\\nons$1._autoStyle = autoStyle;\\nons$1._DoorLock = DoorLock;\\nons$1._contentReady = contentReady;\\nons$1.defaultPageLoader = defaultPageLoader;\\nons$1.PageLoader = PageLoader;\\nons$1._BaseAnimator = BaseAnimator;\\n\\nons$1._readyLock = new DoorLock();\\n\\nons$1.platform.select((window.location.search.match(/platform=([\\\\w-]+)/) || [])[1]);\\n\\nwaitDeviceReady();\\n\\n/**\\n * @method isReady\\n * @signature isReady()\\n * @return {Boolean}\\n *   [en]Will be true if Onsen UI is initialized.[/en]\\n *   [ja]初期化されているかどうかを返します。[/ja]\\n * @description\\n *   [en]Returns true if Onsen UI is initialized.[/en]\\n *   [ja]Onsen UIがすでに初期化されているかどうかを返すメソッドです。[/ja]\\n */\\nons$1.isReady = function () {\\n  return !ons$1._readyLock.isLocked();\\n};\\n\\n/**\\n * @method isWebView\\n * @signature isWebView()\\n * @return {Boolean}\\n *   [en]Will be true if the app is running in Cordova.[/en]\\n *   [ja]Cordovaで実行されている場合にtrueになります。[/ja]\\n * @description\\n *   [en]Returns true if running inside Cordova.[/en]\\n *   [ja]Cordovaで実行されているかどうかを返すメソッドです。[/ja]\\n */\\nons$1.isWebView = ons$1.platform.isWebView;\\n\\n/**\\n * @method ready\\n * @signature ready(callback)\\n * @description\\n *   [ja]アプリの初期化に利用するメソッドです。渡された関数は、Onsen UIの初期化が終了している時点で必ず呼ばれます。[/ja]\\n *   [en]Method used to wait for app initialization. The callback will not be executed until Onsen UI has been completely initialized.[/en]\\n * @param {Function} callback\\n *   [en]Function that executes after Onsen UI has been initialized.[/en]\\n *   [ja]Onsen UIが初期化が完了した後に呼び出される関数オブジェクトを指定します。[/ja]\\n */\\nons$1.ready = function (callback) {\\n  if (ons$1.isReady()) {\\n    callback();\\n  } else {\\n    ons$1._readyLock.waitUnlock(callback);\\n  }\\n};\\n\\n/**\\n * @method setDefaultDeviceBackButtonListener\\n * @signature setDefaultDeviceBackButtonListener(listener)\\n * @param {Function} listener\\n *   [en]Function that executes when device back button is pressed.[/en]\\n *   [ja]デバイスのバックボタンが押された時に実行される関数オブジェクトを指定します。[/ja]\\n * @description\\n *   [en]Set default handler for device back button.[/en]\\n *   [ja]デバイスのバックボタンのためのデフォルトのハンドラを設定します。[/ja]\\n */\\nons$1.setDefaultDeviceBackButtonListener = function (listener) {\\n  ons$1._defaultDeviceBackButtonHandler.setListener(listener);\\n};\\n\\n/**\\n * @method disableDeviceBackButtonHandler\\n * @signature disableDeviceBackButtonHandler()\\n * @description\\n * [en]Disable device back button event handler.[/en]\\n * [ja]デバイスのバックボタンのイベントを受け付けないようにします。[/ja]\\n */\\nons$1.disableDeviceBackButtonHandler = function () {\\n  ons$1._deviceBackButtonDispatcher.disable();\\n};\\n\\n/**\\n * @method enableDeviceBackButtonHandler\\n * @signature enableDeviceBackButtonHandler()\\n * @description\\n * [en]Enable device back button event handler.[/en]\\n * [ja]デバイスのバックボタンのイベントを受け付けるようにします。[/ja]\\n */\\nons$1.enableDeviceBackButtonHandler = function () {\\n  ons$1._deviceBackButtonDispatcher.enable();\\n};\\n\\n/**\\n * @method enableAutoStatusBarFill\\n * @signature enableAutoStatusBarFill()\\n * @description\\n *   [en]Enable status bar fill feature on iOS7 and above.[/en]\\n *   [ja]iOS7以上で、ステータスバー部分の高さを自動的に埋める処理を有効にします。[/ja]\\n */\\nons$1.enableAutoStatusBarFill = function () {\\n  if (ons$1.isReady()) {\\n    throw new Error('This method must be called before ons.isReady() is true.');\\n  }\\n  ons$1._internal.config.autoStatusBarFill = true;\\n};\\n\\n/**\\n * @method disableAutoStatusBarFill\\n * @signature disableAutoStatusBarFill()\\n * @description\\n *   [en]Disable status bar fill feature on iOS7 and above.[/en]\\n *   [ja]iOS7以上で、ステータスバー部分の高さを自動的に埋める処理を無効にします。[/ja]\\n */\\nons$1.disableAutoStatusBarFill = function () {\\n  if (ons$1.isReady()) {\\n    throw new Error('This method must be called before ons.isReady() is true.');\\n  }\\n  ons$1._internal.config.autoStatusBarFill = false;\\n};\\n\\n/**\\n * @method disableAnimations\\n * @signature disableAnimations()\\n * @description\\n *   [en]Disable all animations. Could be handy for testing and older devices.[/en]\\n *   [ja]アニメーションを全て無効にします。テストの際に便利です。[/ja]\\n */\\nons$1.disableAnimations = function () {\\n  ons$1._internal.config.animationsDisabled = true;\\n};\\n\\n/**\\n * @method enableAnimations\\n * @signature enableAnimations()\\n * @description\\n *   [en]Enable animations (default).[/en]\\n *   [ja]アニメーションを有効にします。[/ja]\\n */\\nons$1.enableAnimations = function () {\\n  ons$1._internal.config.animationsDisabled = false;\\n};\\n\\nons$1._disableWarnings = function () {\\n  ons$1._internal.config.warningsDisabled = true;\\n};\\n\\nons$1._enableWarnings = function () {\\n  ons$1._internal.config.warningsDisabled = false;\\n};\\n\\n/**\\n * @method disableAutoStyling\\n * @signature disableAutoStyling()\\n * @description\\n *   [en]Disable automatic styling.[/en]\\n *   [ja][/ja]\\n */\\nons$1.disableAutoStyling = ons$1._autoStyle.disable;\\n\\n/**\\n * @method enableAutoStyling\\n * @signature enableAutoStyling()\\n * @description\\n *   [en]Enable automatic styling based on OS (default).[/en]\\n *   [ja][/ja]\\n */\\nons$1.enableAutoStyling = ons$1._autoStyle.enable;\\n\\n/**\\n * @method forcePlatformStyling\\n * @signature forcePlatformStyling(platform)\\n * @description\\n *   [en]Refresh styling for the given platform.[/en]\\n *   [ja][/ja]\\n * @param {string} platform New platform to style the elements.\\n */\\nons$1.forcePlatformStyling = function (newPlatform) {\\n  ons$1.enableAutoStyling();\\n  ons$1.platform.select(newPlatform || 'ios');\\n\\n  ons$1._util.arrayFrom(document.querySelectorAll('*')).forEach(function (element) {\\n    if (element.tagName.toLowerCase() === 'ons-if') {\\n      element._platformUpdate();\\n    } else if (element.tagName.match(/^ons-/i)) {\\n      ons$1._autoStyle.prepare(element, true);\\n      if (element.tagName.toLowerCase() === 'ons-tabbar') {\\n        element._updatePosition();\\n      }\\n    }\\n  });\\n};\\n\\n/**\\n * @param {String} page\\n * @param {Object} [options]\\n * @param {Function} [options.link]\\n * @return {Promise}\\n */\\nons$1._createPopoverOriginal = function (page) {\\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\\n\\n\\n  if (!page) {\\n    throw new Error('Page url must be defined.');\\n  }\\n\\n  return ons$1._internal.getPageHTMLAsync(page).then(function (html) {\\n    html = html.match(/<ons-popover/gi) ? '<div>' + html + '</div>' : '<ons-popover>' + html + '</ons-popover>';\\n    var div = ons$1._util.createElement('<div>' + html + '</div>');\\n\\n    var popover = div.querySelector('ons-popover');\\n    document.body.appendChild(popover);\\n\\n    if (options.link instanceof Function) {\\n      options.link(popover);\\n    }\\n\\n    return popover;\\n  });\\n};\\n\\n/**\\n * @method createPopover\\n * @signature createPopover(page, [options])\\n * @param {String} page\\n *   [en]Page name. Can be either an HTML file or an <ons-template> containing a <ons-dialog> component.[/en]\\n *   [ja]pageのURLか、もしくはons-templateで宣言したテンプレートのid属性の値を指定できます。[/ja]\\n * @param {Object} [options]\\n *   [en]Parameter object.[/en]\\n *   [ja]オプションを指定するオブジェクト。[/ja]\\n * @param {Object} [options.parentScope]\\n *   [en]Parent scope of the dialog. Used to bind models and access scope methods from the dialog.[/en]\\n *   [ja]ダイアログ内で利用する親スコープを指定します。ダイアログからモデルやスコープのメソッドにアクセスするのに使います。このパラメータはAngularJSバインディングでのみ利用できます。[/ja]\\n * @return {Promise}\\n *   [en]Promise object that resolves to the popover component object.[/en]\\n *   [ja]ポップオーバーのコンポーネントオブジェクトを解決するPromiseオブジェクトを返します。[/ja]\\n * @description\\n *   [en]Create a popover instance from a template.[/en]\\n *   [ja]テンプレートからポップオーバーのインスタンスを生成します。[/ja]\\n */\\nons$1.createPopover = ons$1._createPopoverOriginal;\\n\\n/**\\n * @param {String} page\\n * @param {Object} [options]\\n * @param {Function} [options.link]\\n * @return {Promise}\\n */\\nons$1._createDialogOriginal = function (page) {\\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\\n\\n\\n  if (!page) {\\n    throw new Error('Page url must be defined.');\\n  }\\n\\n  return ons$1._internal.getPageHTMLAsync(page).then(function (html) {\\n    html = html.match(/<ons-dialog/gi) ? '<div>' + html + '</div>' : '<ons-dialog>' + html + '</ons-dialog>';\\n    var div = ons$1._util.createElement('<div>' + html + '</div>');\\n\\n    var dialog = div.querySelector('ons-dialog');\\n    document.body.appendChild(dialog);\\n\\n    if (options.link instanceof Function) {\\n      options.link(dialog);\\n    }\\n\\n    return dialog;\\n  });\\n};\\n\\n/**\\n * @method createDialog\\n * @signature createDialog(page, [options])\\n * @param {String} page\\n *   [en]Page name. Can be either an HTML file or an <ons-template> containing a <ons-dialog> component.[/en]\\n *   [ja]pageのURLか、もしくはons-templateで宣言したテンプレートのid属性の値を指定できます。[/ja]\\n * @param {Object} [options]\\n *   [en]Parameter object.[/en]\\n *   [ja]オプションを指定するオブジェクト。[/ja]\\n * @return {Promise}\\n *   [en]Promise object that resolves to the dialog component object.[/en]\\n *   [ja]ダイアログのコンポーネントオブジェクトを解決するPromiseオブジェクトを返します。[/ja]\\n * @description\\n *   [en]Create a dialog instance from a template.[/en]\\n *   [ja]テンプレートからダイアログのインスタンスを生成します。[/ja]\\n */\\nons$1.createDialog = ons$1._createDialogOriginal;\\n\\n/**\\n * @param {String} page\\n * @param {Object} [options]\\n * @param {Function} [options.link]\\n * @return {Promise}\\n */\\nons$1._createAlertDialogOriginal = function (page) {\\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\\n\\n\\n  if (!page) {\\n    throw new Error('Page url must be defined.');\\n  }\\n\\n  return ons$1._internal.getPageHTMLAsync(page).then(function (html) {\\n    html = html.match(/<ons-alert-dialog/gi) ? '<div>' + html + '</div>' : '<ons-alert-dialog>' + html + '</ons-alert-dialog>';\\n    var div = ons$1._util.createElement('<div>' + html + '</div>');\\n\\n    var alertDialog = div.querySelector('ons-alert-dialog');\\n    document.body.appendChild(alertDialog);\\n\\n    if (options.link instanceof Function) {\\n      options.link(alertDialog);\\n    }\\n\\n    return alertDialog;\\n  });\\n};\\n\\n/**\\n * @method createAlertDialog\\n * @signature createAlertDialog(page, [options])\\n * @param {String} page\\n *   [en]Page name. Can be either an HTML file or an <ons-template> containing a <ons-alert-dialog> component.[/en]\\n *   [ja]pageのURLか、もしくはons-templateで宣言したテンプレートのid属性の値を指定できます。[/ja]\\n * @param {Object} [options]\\n *   [en]Parameter object.[/en]\\n *   [ja]オプションを指定するオブジェクト。[/ja]\\n * @return {Promise}\\n *   [en]Promise object that resolves to the alert dialog component object.[/en]\\n *   [ja]ダイアログのコンポーネントオブジェクトを解決するPromiseオブジェクトを返します。[/ja]\\n * @description\\n *   [en]Create a alert dialog instance from a template.[/en]\\n *   [ja]テンプレートからアラートダイアログのインスタンスを生成します。[/ja]\\n */\\nons$1.createAlertDialog = ons$1._createAlertDialogOriginal;\\n\\n/**\\n * @param {String} page\\n * @param {Function} link\\n */\\nons$1._resolveLoadingPlaceholderOriginal = function (page, link) {\\n  var elements = ons$1._util.arrayFrom(window.document.querySelectorAll('[ons-loading-placeholder]'));\\n\\n  if (elements.length > 0) {\\n    elements.filter(function (element) {\\n      return !element.getAttribute('page');\\n    }).forEach(function (element) {\\n      element.setAttribute('ons-loading-placeholder', page);\\n      ons$1._resolveLoadingPlaceholder(element, page, link);\\n    });\\n  } else {\\n    throw new Error('No ons-loading-placeholder exists.');\\n  }\\n};\\n\\n/**\\n * @method resolveLoadingPlaceholder\\n * @signature resolveLoadingPlaceholder(page)\\n * @param {String} page\\n *   [en]Page name. Can be either an HTML file or an <ons-template> element.[/en]\\n *   [ja]pageのURLか、もしくはons-templateで宣言したテンプレートのid属性の値を指定できます。[/ja]\\n * @description\\n *   [en]If no page is defined for the `ons-loading-placeholder` attribute it will wait for this method being called before loading the page.[/en]\\n *   [ja]ons-loading-placeholderの属性値としてページが指定されていない場合は、ページロード前に呼ばれるons.resolveLoadingPlaceholder処理が行われるまで表示されません。[/ja]\\n */\\nons$1.resolveLoadingPlaceholder = ons$1._resolveLoadingPlaceholderOriginal;\\n\\nons$1._setupLoadingPlaceHolders = function () {\\n  ons$1.ready(function () {\\n    var elements = ons$1._util.arrayFrom(window.document.querySelectorAll('[ons-loading-placeholder]'));\\n\\n    elements.forEach(function (element) {\\n      var page = element.getAttribute('ons-loading-placeholder');\\n      if (typeof page === 'string') {\\n        ons$1._resolveLoadingPlaceholder(element, page);\\n      }\\n    });\\n  });\\n};\\n\\nons$1._resolveLoadingPlaceholder = function (element, page, link) {\\n  link = link || function (element, done) {\\n    done();\\n  };\\n  ons$1._internal.getPageHTMLAsync(page).then(function (html) {\\n\\n    while (element.firstChild) {\\n      element.removeChild(element.firstChild);\\n    }\\n\\n    var contentElement = ons$1._util.createElement('<div>' + html + '</div>');\\n    contentElement.style.display = 'none';\\n\\n    element.appendChild(contentElement);\\n\\n    link(contentElement, function () {\\n      contentElement.style.display = '';\\n    });\\n  }).catch(function (error) {\\n    throw new Error('Unabled to resolve placeholder: ' + error);\\n  });\\n};\\n\\nfunction waitDeviceReady() {\\n  var unlockDeviceReady = ons$1._readyLock.lock();\\n  window.addEventListener('DOMContentLoaded', function () {\\n    if (ons$1.isWebView()) {\\n      window.document.addEventListener('deviceready', unlockDeviceReady, false);\\n    } else {\\n      unlockDeviceReady();\\n    }\\n  }, false);\\n}\\n\\nwindow._superSecretOns = ons$1;\\n\\n/*\\nCopyright 2013-2015 ASIAL CORPORATION\\n\\nLicensed under the Apache License, Version 2.0 (the \\\"License\\\");\\nyou may not use this file except in compliance with the License.\\nYou may obtain a copy of the License at\\n\\n   http://www.apache.org/licenses/LICENSE-2.0\\n\\nUnless required by applicable law or agreed to in writing, software\\ndistributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\nSee the License for the specific language governing permissions and\\nlimitations under the License.\\n\\n*/\\n\\nfunction getElementClass() {\\n  if (typeof HTMLElement !== 'function') {\\n    // case of Safari\\n    var _BaseElement = function _BaseElement() {};\\n    _BaseElement.prototype = document.createElement('div');\\n    return _BaseElement;\\n  } else {\\n    return HTMLElement;\\n  }\\n}\\n\\nvar BaseElement = function (_getElementClass) {\\n  inherits(BaseElement, _getElementClass);\\n\\n  function BaseElement() {\\n    classCallCheck(this, BaseElement);\\n\\n    var _this = possibleConstructorReturn(this, (BaseElement.__proto__ || Object.getPrototypeOf(BaseElement)).call(this));\\n\\n    _this.init();\\n    return _this;\\n  }\\n\\n  createClass(BaseElement, [{\\n    key: 'init',\\n    value: function init() {}\\n  }]);\\n  return BaseElement;\\n}(getElementClass());\\n\\n/*\\nCopyright 2013-2015 ASIAL CORPORATION\\n\\nLicensed under the Apache License, Version 2.0 (the \\\"License\\\");\\nyou may not use this file except in compliance with the License.\\nYou may obtain a copy of the License at\\n\\n   http://www.apache.org/licenses/LICENSE-2.0\\n\\nUnless required by applicable law or agreed to in writing, software\\ndistributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\nSee the License for the specific language governing permissions and\\nlimitations under the License.\\n\\n*/\\n\\n/**\\n * @element ons-template\\n * @category util\\n * @description\\n *   [en]\\n *     Define a separate HTML fragment and use as a template.\\n *\\n *     These templates can be loaded as pages in `<ons-navigator>`, `<ons-tabbar>` and `<ons-splitter>`. They can also be used to generate dialogs.\\n *   [/en]\\n *   [ja]テンプレートとして使用するためのHTMLフラグメントを定義します。この要素でHTMLを宣言すると、id属性に指定した名前をpageのURLとしてons-navigatorなどのコンポーネントから参照できます。[/ja]\\n * @guide templates\\n *   [en]Defining multiple pages in single html[/en]\\n *   [ja]複数のページを1つのHTMLに記述する[/ja]\\n * @seealso ons-navigator\\n *   [en]The `<ons-navigator>` component enables stack based navigation.[/en]\\n *   [ja][/ja]\\n * @seealso ons-tabbar\\n *   [en]The `<ons-tabbar>` component is used to add tab navigation.[/en]\\n *   [ja][/ja]\\n * @seealso ons-splitter\\n *   [en]The `<ons-splitter>` component can be used to create a draggable menu or column based layout.[/en]\\n *   [ja][/ja]\\n * @example\\n * <ons-template id=\\\"foobar.html\\\">\\n *   <ons-page>\\n *     Page content\\n *   </ons-page>\\n * </ons-template>\\n *\\n * <ons-navigator page=\\\"foobar.html\\\">\\n * </ons-navigator>\\n */\\n\\nvar TemplateElement = function (_BaseElement) {\\n  inherits(TemplateElement, _BaseElement);\\n\\n  function TemplateElement() {\\n    classCallCheck(this, TemplateElement);\\n    return possibleConstructorReturn(this, (TemplateElement.__proto__ || Object.getPrototypeOf(TemplateElement)).apply(this, arguments));\\n  }\\n\\n  createClass(TemplateElement, [{\\n    key: 'init',\\n\\n\\n    /**\\n     * @property template\\n     * @type {String}\\n     * @description\\n     *  [en]Template content. This property can not be used with AngularJS bindings.[/en]\\n     *  [ja][/ja]\\n     */\\n\\n    value: function init() {\\n      this.template = this.innerHTML;\\n\\n      while (this.firstChild) {\\n        this.removeChild(this.firstChild);\\n      }\\n    }\\n  }, {\\n    key: 'connectedCallback',\\n    value: function connectedCallback() {\\n      if (this.parentNode) {\\n        // Note: this.parentNode is not set in some CE0/CE1 polyfills.\\n        // Show warning when the ons-template is not located just under document.body\\n        if (this.parentNode !== document.body) {\\n          // if the parent is not document.body\\n          util.warn('ons-template (id = ' + this.getAttribute('id') + ') must be located just under document.body' + (this.parentNode.outerHTML ? ':\\\\n\\\\n' + this.parentNode.outerHTML : '.'));\\n        }\\n      }\\n\\n      var event = new CustomEvent('_templateloaded', { bubbles: true, cancelable: true });\\n      event.template = this.template;\\n      event.templateId = this.getAttribute('id');\\n\\n      this.dispatchEvent(event);\\n    }\\n  }]);\\n  return TemplateElement;\\n}(BaseElement);\\n\\ncustomElements.define('ons-template', TemplateElement);\\n\\n/*\\nCopyright 2013-2015 ASIAL CORPORATION\\n\\nLicensed under the Apache License, Version 2.0 (the \\\"License\\\");\\nyou may not use this file except in compliance with the License.\\nYou may obtain a copy of the License at\\n\\n   http://www.apache.org/licenses/LICENSE-2.0\\n\\nUnless required by applicable law or agreed to in writing, software\\ndistributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\nSee the License for the specific language governing permissions and\\nlimitations under the License.\\n\\n*/\\n\\n/**\\n * @element ons-if\\n * @category conditional\\n * @tutorial vanilla/Reference/if\\n * @description\\n *   [en]\\n *     Conditionally display content depending on the platform, device orientation or both.\\n *\\n *     Sometimes it is useful to conditionally hide or show certain components based on platform. When running on iOS the `<ons-if>` element can be used to hide the `<ons-fab>` element.\\n *   [/en]\\n *   [ja][/ja]\\n * @guide cross-platform-styling [en]Information about cross platform styling[/en][ja]Information about cross platform styling[/ja]\\n * @example\\n * <ons-page>\\n *   <ons-if orientation=\\\"landscape\\\">\\n *     Landscape view!\\n *   </ons-if>\\n *   <ons-if platform=\\\"android\\\">\\n *     This is Android.\\n *   </ons-if>\\n *   <ons-if platform=\\\"ios other\\\">\\n *     This is not Android.\\n *   </ons-if>\\n * </ons-page>\\n */\\n\\nvar IfElement = function (_BaseElement) {\\n  inherits(IfElement, _BaseElement);\\n\\n  function IfElement() {\\n    classCallCheck(this, IfElement);\\n    return possibleConstructorReturn(this, (IfElement.__proto__ || Object.getPrototypeOf(IfElement)).apply(this, arguments));\\n  }\\n\\n  createClass(IfElement, [{\\n    key: 'init',\\n\\n\\n    /**\\n     * @attribute platform\\n     * @initonly\\n     * @type {string}\\n     * @description\\n     *  [en]Space-separated platform names. Possible values are `\\\"ios\\\"`, `\\\"android\\\"`, `\\\"windows\\\"` and `\\\"other\\\"`.[/en]\\n     *  [ja][/ja]\\n     */\\n\\n    /**\\n     * @attribute orientation\\n     * @type {string}\\n     * @description\\n     *  [en]Either `\\\"portrait\\\"` or `\\\"landscape\\\"`.[/en]\\n     *  [ja]portraitもしくはlandscapeを指定します[/ja]\\n     */\\n\\n    value: function init() {\\n      var _this2 = this;\\n\\n      contentReady(this, function () {\\n        if (platform._renderPlatform !== null) {\\n          _this2._platformUpdate();\\n        } else if (!_this2._isAllowedPlatform()) {\\n          while (_this2.childNodes[0]) {\\n            _this2.childNodes[0].remove();\\n          }\\n          _this2._platformUpdate();\\n        }\\n      });\\n\\n      this._onOrientationChange();\\n    }\\n  }, {\\n    key: 'connectedCallback',\\n    value: function connectedCallback() {\\n      orientation.on('change', this._onOrientationChange.bind(this));\\n    }\\n  }, {\\n    key: 'attributeChangedCallback',\\n    value: function attributeChangedCallback(name) {\\n      if (name === 'orientation') {\\n        this._onOrientationChange();\\n      }\\n    }\\n  }, {\\n    key: 'disconnectedCallback',\\n    value: function disconnectedCallback() {\\n      orientation.off('change', this._onOrientationChange);\\n    }\\n  }, {\\n    key: '_platformUpdate',\\n    value: function _platformUpdate() {\\n      this.style.display = this._isAllowedPlatform() ? '' : 'none';\\n    }\\n  }, {\\n    key: '_isAllowedPlatform',\\n    value: function _isAllowedPlatform() {\\n      return !this.getAttribute('platform') || this.getAttribute('platform').split(/\\\\s+/).indexOf(platform.getMobileOS()) >= 0;\\n    }\\n  }, {\\n    key: '_onOrientationChange',\\n    value: function _onOrientationChange() {\\n      if (this.hasAttribute('orientation') && this._isAllowedPlatform()) {\\n        var conditionalOrientation = this.getAttribute('orientation').toLowerCase();\\n        var currentOrientation = orientation.isPortrait() ? 'portrait' : 'landscape';\\n\\n        this.style.display = conditionalOrientation === currentOrientation ? '' : 'none';\\n      }\\n    }\\n  }], [{\\n    key: 'observedAttributes',\\n    get: function get() {\\n      return ['orientation'];\\n    }\\n  }]);\\n  return IfElement;\\n}(BaseElement);\\n\\ncustomElements.define('ons-if', IfElement);\\n\\n/*\\nCopyright 2013-2015 ASIAL CORPORATION\\n\\nLicensed under the Apache License, Version 2.0 (the \\\"License\\\");\\nyou may not use this file except in compliance with the License.\\nYou may obtain a copy of the License at\\n\\n   http://www.apache.org/licenses/LICENSE-2.0\\n\\nUnless required by applicable law or agreed to in writing, software\\ndistributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\nSee the License for the specific language governing permissions and\\nlimitations under the License.\\n\\n*/\\n\\nvar AlertDialogAnimator = function (_BaseAnimator) {\\n  inherits(AlertDialogAnimator, _BaseAnimator);\\n\\n  function AlertDialogAnimator() {\\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\\n        _ref$timing = _ref.timing,\\n        timing = _ref$timing === undefined ? 'linear' : _ref$timing,\\n        _ref$delay = _ref.delay,\\n        delay = _ref$delay === undefined ? 0 : _ref$delay,\\n        _ref$duration = _ref.duration,\\n        duration = _ref$duration === undefined ? 0.2 : _ref$duration;\\n\\n    classCallCheck(this, AlertDialogAnimator);\\n    return possibleConstructorReturn(this, (AlertDialogAnimator.__proto__ || Object.getPrototypeOf(AlertDialogAnimator)).call(this, { timing: timing, delay: delay, duration: duration }));\\n  }\\n\\n  /**\\n   * @param {HTMLElement} dialog\\n   * @param {Function} done\\n   */\\n\\n\\n  createClass(AlertDialogAnimator, [{\\n    key: 'show',\\n    value: function show(dialog, done) {\\n      done();\\n    }\\n\\n    /**\\n     * @param {HTMLElement} dialog\\n     * @param {Function} done\\n     */\\n\\n  }, {\\n    key: 'hide',\\n    value: function hide(dialog, done) {\\n      done();\\n    }\\n  }]);\\n  return AlertDialogAnimator;\\n}(BaseAnimator);\\n\\n/**\\n * Android style animator for alert dialog.\\n */\\nvar AndroidAlertDialogAnimator = function (_AlertDialogAnimator) {\\n  inherits(AndroidAlertDialogAnimator, _AlertDialogAnimator);\\n\\n  function AndroidAlertDialogAnimator() {\\n    var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\\n        _ref2$timing = _ref2.timing,\\n        timing = _ref2$timing === undefined ? 'cubic-bezier(.1, .7, .4, 1)' : _ref2$timing,\\n        _ref2$duration = _ref2.duration,\\n        duration = _ref2$duration === undefined ? 0.2 : _ref2$duration,\\n        _ref2$delay = _ref2.delay,\\n        delay = _ref2$delay === undefined ? 0 : _ref2$delay;\\n\\n    classCallCheck(this, AndroidAlertDialogAnimator);\\n    return possibleConstructorReturn(this, (AndroidAlertDialogAnimator.__proto__ || Object.getPrototypeOf(AndroidAlertDialogAnimator)).call(this, { duration: duration, timing: timing, delay: delay }));\\n  }\\n\\n  /**\\n   * @param {Object} dialog\\n   * @param {Function} callback\\n   */\\n\\n\\n  createClass(AndroidAlertDialogAnimator, [{\\n    key: 'show',\\n    value: function show(dialog, callback) {\\n      callback = callback ? callback : function () {};\\n\\n      Animit.runAll(Animit(dialog._mask).queue({\\n        opacity: 0\\n      }).wait(this.delay).queue({\\n        opacity: 1.0\\n      }, {\\n        duration: this.duration,\\n        timing: this.timing\\n      }), Animit(dialog._dialog).saveStyle().queue({\\n        css: {\\n          transform: 'translate3d(-50%, -50%, 0) scale3d(0.9, 0.9, 1.0)',\\n          opacity: 0.0\\n        },\\n        duration: 0\\n      }).wait(this.delay).queue({\\n        css: {\\n          transform: 'translate3d(-50%, -50%, 0) scale3d(1.0, 1.0, 1.0)',\\n          opacity: 1.0\\n        },\\n        duration: this.duration,\\n        timing: this.timing\\n      }).restoreStyle().queue(function (done) {\\n        callback();\\n        done();\\n      }));\\n    }\\n\\n    /**\\n     * @param {Object} dialog\\n     * @param {Function} callback\\n     */\\n\\n  }, {\\n    key: 'hide',\\n    value: function hide(dialog, callback) {\\n      callback = callback ? callback : function () {};\\n\\n      Animit.runAll(Animit(dialog._mask).queue({\\n        opacity: 1.0\\n      }).wait(this.delay).queue({\\n        opacity: 0\\n      }, {\\n        duration: this.duration,\\n        timing: this.timing\\n      }), Animit(dialog._dialog).saveStyle().queue({\\n        css: {\\n          transform: 'translate3d(-50%, -50%, 0) scale3d(1.0, 1.0, 1.0)',\\n          opacity: 1.0\\n        },\\n        duration: 0\\n      }).wait(this.delay).queue({\\n        css: {\\n          transform: 'translate3d(-50%, -50%, 0) scale3d(0.9, 0.9, 1.0)',\\n          opacity: 0.0\\n        },\\n        duration: this.duration,\\n        timing: this.timing\\n      }).restoreStyle().queue(function (done) {\\n        callback();\\n        done();\\n      }));\\n    }\\n  }]);\\n  return AndroidAlertDialogAnimator;\\n}(AlertDialogAnimator);\\n\\n/**\\n * iOS style animator for alert dialog.\\n */\\nvar IOSAlertDialogAnimator = function (_AlertDialogAnimator2) {\\n  inherits(IOSAlertDialogAnimator, _AlertDialogAnimator2);\\n\\n  function IOSAlertDialogAnimator() {\\n    var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\\n        _ref3$timing = _ref3.timing,\\n        timing = _ref3$timing === undefined ? 'cubic-bezier(.1, .7, .4, 1)' : _ref3$timing,\\n        _ref3$duration = _ref3.duration,\\n        duration = _ref3$duration === undefined ? 0.2 : _ref3$duration,\\n        _ref3$delay = _ref3.delay,\\n        delay = _ref3$delay === undefined ? 0 : _ref3$delay;\\n\\n    classCallCheck(this, IOSAlertDialogAnimator);\\n    return possibleConstructorReturn(this, (IOSAlertDialogAnimator.__proto__ || Object.getPrototypeOf(IOSAlertDialogAnimator)).call(this, { duration: duration, timing: timing, delay: delay }));\\n  }\\n\\n  /*\\n   * @param {Object} dialog\\n   * @param {Function} callback\\n   */\\n\\n\\n  createClass(IOSAlertDialogAnimator, [{\\n    key: 'show',\\n    value: function show(dialog, callback) {\\n      callback = callback ? callback : function () {};\\n\\n      Animit.runAll(Animit(dialog._mask).queue({\\n        opacity: 0\\n      }).wait(this.delay).queue({\\n        opacity: 1.0\\n      }, {\\n        duration: this.duration,\\n        timing: this.timing\\n      }), Animit(dialog._dialog).saveStyle().queue({\\n        css: {\\n          transform: 'translate3d(-50%, -50%, 0) scale3d(1.3, 1.3, 1.0)',\\n          opacity: 0.0\\n        },\\n        duration: 0\\n      }).wait(this.delay).queue({\\n        css: {\\n          transform: 'translate3d(-50%, -50%, 0) scale3d(1.0, 1.0, 1.0)',\\n          opacity: 1.0\\n        },\\n        duration: this.duration,\\n        timing: this.timing\\n      }).restoreStyle().queue(function (done) {\\n        callback();\\n        done();\\n      }));\\n    }\\n\\n    /**\\n     * @param {Object} dialog\\n     * @param {Function} callback\\n     */\\n\\n  }, {\\n    key: 'hide',\\n    value: function hide(dialog, callback) {\\n      callback = callback ? callback : function () {};\\n\\n      Animit.runAll(Animit(dialog._mask).queue({\\n        opacity: 1.0\\n      }).wait(this.delay).queue({\\n        opacity: 0\\n      }, {\\n        duration: this.duration,\\n        timing: this.timing\\n      }), Animit(dialog._dialog).saveStyle().queue({\\n        css: {\\n          opacity: 1.0\\n        },\\n        duration: 0\\n      }).wait(this.delay).queue({\\n        css: {\\n          opacity: 0.0\\n        },\\n        duration: this.duration,\\n        timing: this.timing\\n      }).restoreStyle().queue(function (done) {\\n        callback();\\n        done();\\n      }));\\n    }\\n  }]);\\n  return IOSAlertDialogAnimator;\\n}(AlertDialogAnimator);\\n\\n/*\\nCopyright 2013-2015 ASIAL CORPORATION\\n\\nLicensed under the Apache License, Version 2.0 (the \\\"License\\\");\\nyou may not use this file except in compliance with the License.\\nYou may obtain a copy of the License at\\n\\n   http://www.apache.org/licenses/LICENSE-2.0\\n\\nUnless required by applicable law or agreed to in writing, software\\ndistributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\nSee the License for the specific language governing permissions and\\nlimitations under the License.\\n\\n*/\\n\\nvar scheme = {\\n  '.alert-dialog': 'alert-dialog--*',\\n  '.alert-dialog-container': 'alert-dialog-container--*',\\n  '.alert-dialog-title': 'alert-dialog-title--*',\\n  '.alert-dialog-content': 'alert-dialog-content--*',\\n  '.alert-dialog-footer': 'alert-dialog-footer--*',\\n  '.alert-dialog-button': 'alert-dialog-button--*',\\n  '.alert-dialog-footer--rowfooter': 'alert-dialog-footer--rowfooter--*',\\n  '.alert-dialog-button--rowfooter': 'alert-dialog-button--rowfooter--*',\\n  '.alert-dialog-button--primal': 'alert-dialog-button--primal--*',\\n  '.alert-dialog-mask': 'alert-dialog-mask--*',\\n  '.text-input': 'text-input--*'\\n};\\n\\nvar _animatorDict = {\\n  'none': AlertDialogAnimator,\\n  'default': function _default() {\\n    return platform.isAndroid() ? AndroidAlertDialogAnimator : IOSAlertDialogAnimator;\\n  },\\n  'fade': function fade() {\\n    return platform.isAndroid() ? AndroidAlertDialogAnimator : IOSAlertDialogAnimator;\\n  }\\n};\\n\\n/**\\n * @element ons-alert-dialog\\n * @category dialog\\n * @description\\n *   [en]\\n *     Alert dialog that is displayed on top of the current screen. Useful for displaying questions, warnings or error messages to the user. The title, content and buttons can be easily customized and it will automatically switch style based on the platform.\\n *\\n *     To use the element it can either be attached directly to the `<body>` element or dynamically created from a template using the `ons.createAlertDialog(template)` utility function and the `<ons-template>` tag.\\n *   [/en]\\n *   [ja][/ja]\\n * @codepen Qwwxyp\\n * @tutorial vanilla/Reference/dialog\\n * @modifier material\\n *   [en]Material Design style[/en]\\n *   [ja][/ja]\\n * @modifier rowfooter\\n *   [en]Horizontally aligns the footer buttons.[/en]\\n *   [ja][/ja]\\n * @guide dialogs\\n *   [en]Dialog components[/en]\\n *   [ja]Dialog components[/ja]\\n * @seealso ons-dialog\\n *   [en]ons-dialog component[/en]\\n *   [ja]ons-dialogコンポーネント[/ja]\\n * @seealso ons-popover\\n *   [en]ons-popover component[/en]\\n *   [ja]ons-dialogコンポーネント[/ja]\\n * @seealso ons.notification\\n *   [en]Using ons.notification utility functions.[/en]\\n *   [ja]アラートダイアログを表示するには、ons.notificationオブジェクトのメソッドを使うこともできます。[/ja]\\n * @example\\n * <ons-alert-dialog id=\\\"alert-dialog\\\">\\n *   <div class=\\\"alert-dialog-title\\\">Warning!</div>\\n *   <div class=\\\"alert-dialog-content\\\">\\n *     An error has occurred!\\n *   </div>\\n *   <div class=\\\"alert-dialog-footer\\\">\\n *     <button id=\\\"alert-dialog-button\\\" class=\\\"alert-dialog-button\\\">OK</button>\\n *   </div>\\n * </ons-alert-dialog>\\n * <script>\\n *   document.getElementById('alert-dialog').show();\\n * </script>\\n */\\n\\nvar AlertDialogElement = function (_BaseElement) {\\n  inherits(AlertDialogElement, _BaseElement);\\n\\n  function AlertDialogElement() {\\n    classCallCheck(this, AlertDialogElement);\\n    return possibleConstructorReturn(this, (AlertDialogElement.__proto__ || Object.getPrototypeOf(AlertDialogElement)).apply(this, arguments));\\n  }\\n\\n  createClass(AlertDialogElement, [{\\n    key: 'init',\\n\\n\\n    /**\\n     * @event preshow\\n     * @description\\n     *   [en]Fired just before the alert dialog is displayed.[/en]\\n     *   [ja]アラートダイアログが表示される直前に発火します。[/ja]\\n     * @param {Object} event [en]Event object.[/en]\\n     * @param {Object} event.alertDialog\\n     *   [en]Alert dialog object.[/en]\\n     *   [ja]アラートダイアログのオブジェクト。[/ja]\\n     * @param {Function} event.cancel\\n     *   [en]Execute to stop the dialog from showing.[/en]\\n     *   [ja]この関数を実行すると、アラートダイアログの表示を止めます。[/ja]\\n     */\\n\\n    /**\\n     * @event postshow\\n     * @description\\n     *   [en]Fired just after the alert dialog is displayed.[/en]\\n     *   [ja]アラートダイアログが表示された直後に発火します。[/ja]\\n     * @param {Object} event [en]Event object.[/en]\\n     * @param {Object} event.alertDialog\\n     *   [en]Alert dialog object.[/en]\\n     *   [ja]アラートダイアログのオブジェクト。[/ja]\\n     */\\n\\n    /**\\n     * @event prehide\\n     * @description\\n     *   [en]Fired just before the alert dialog is hidden.[/en]\\n     *   [ja]アラートダイアログが隠れる直前に発火します。[/ja]\\n     * @param {Object} event [en]Event object.[/en]\\n     * @param {Object} event.alertDialog\\n     *   [en]Alert dialog object.[/en]\\n     *   [ja]アラートダイアログのオブジェクト。[/ja]\\n     * @param {Function} event.cancel\\n     *   [en]Execute to stop the dialog from hiding.[/en]\\n     *   [ja]この関数を実行すると、アラートダイアログが閉じようとするのを止めます。[/ja]\\n     */\\n\\n    /**\\n     * @event posthide\\n     * @description\\n     * [en]Fired just after the alert dialog is hidden.[/en]\\n     * [ja]アラートダイアログが隠れた後に発火します。[/ja]\\n     * @param {Object} event [en]Event object.[/en]\\n     * @param {Object} event.alertDialog\\n     *   [en]Alert dialog object.[/en]\\n     *   [ja]アラートダイアログのオブジェクト。[/ja]\\n     */\\n\\n    /**\\n     * @attribute modifier\\n     * @type {String}\\n     * @description\\n     *  [en]The appearance of the dialog.[/en]\\n     *  [ja]ダイアログの見た目を指定します。[/ja]\\n     */\\n\\n    /**\\n     * @attribute cancelable\\n     * @description\\n     *  [en]If this attribute is set the dialog can be closed by tapping the background or by pressing the back button on Android devices.[/en]\\n     *  [ja][/ja]\\n     */\\n\\n    /**\\n     * @attribute disabled\\n     * @description\\n     *  [en]If this attribute is set the dialog is disabled.[/en]\\n     *  [ja]この属性がある時、アラートダイアログはdisabled状態になります。[/ja]\\n     */\\n\\n    /**\\n     * @attribute animation\\n     * @type {String}\\n     * @default default\\n     * @description\\n     *  [en]The animation used when showing and hiding the dialog. Can be either `\\\"none\\\"` or `\\\"default\\\"`.[/en]\\n     *  [ja]ダイアログを表示する際のアニメーション名を指定します。デフォルトでは\\\"none\\\"か\\\"default\\\"が指定できます。[/ja]\\n     */\\n\\n    /**\\n     * @attribute animation-options\\n     * @type {Expression}\\n     * @description\\n     *  [en]Specify the animation's duration, timing and delay with an object literal. E.g. `{duration: 0.2, delay: 1, timing: 'ease-in'}`.[/en]\\n     *  [ja]アニメーション時のduration, timing, delayをオブジェクトリテラルで指定します。例：{duration: 0.2, delay: 1, timing: 'ease-in'}[/ja]\\n     */\\n\\n    /**\\n     * @attribute mask-color\\n     * @type {String}\\n     * @default rgba(0, 0, 0, 0.2)\\n     * @description\\n     *  [en]Color of the background mask. Default is \\\"rgba(0, 0, 0, 0.2)\\\".[/en]\\n     *  [ja]背景のマスクの色を指定します。\\\"rgba(0, 0, 0, 0.2)\\\"がデフォルト値です。[/ja]\\n     */\\n\\n    value: function init() {\\n      var _this2 = this;\\n\\n      contentReady(this, function () {\\n        return _this2._compile();\\n      });\\n\\n      this._visible = false;\\n      this._doorLock = new DoorLock();\\n      this._boundCancel = function () {\\n        return _this2._cancel();\\n      };\\n\\n      this._updateAnimatorFactory();\\n    }\\n\\n    /**\\n     * @return {Element}\\n     */\\n\\n  }, {\\n    key: '_updateAnimatorFactory',\\n    value: function _updateAnimatorFactory() {\\n      this._animatorFactory = new AnimatorFactory({\\n        animators: _animatorDict,\\n        baseClass: AlertDialogAnimator,\\n        baseClassName: 'AlertDialogAnimator',\\n        defaultAnimation: this.getAttribute('animation')\\n      });\\n    }\\n  }, {\\n    key: '_compile',\\n    value: function _compile() {\\n      autoStyle.prepare(this);\\n\\n      this.style.display = 'none';\\n      this.style.zIndex = 10001;\\n\\n      /**\\n       * Expected result after compile:\\n       *\\n       * <ons-alert-dialog style=\\\"none\\\">\\n       *   <div class=\\\"alert-dialog-mask\\\"></div>\\n       *   <div class=\\\"alert-dialog\\\">\\n       *     <div class=\\\"alert-dialog-container\\\">...</div>\\n       *   </div>\\n       * </ons-alert-dialog>\\n       */\\n\\n      var content = document.createDocumentFragment();\\n\\n      if (!this._mask && !this._dialog) {\\n        while (this.firstChild) {\\n          content.appendChild(this.firstChild);\\n        }\\n      }\\n\\n      if (!this._mask) {\\n        var mask = document.createElement('div');\\n        mask.classList.add('alert-dialog-mask');\\n        this.insertBefore(mask, this.children[0]);\\n      }\\n\\n      if (!this._dialog) {\\n        var dialog = document.createElement('div');\\n        dialog.classList.add('alert-dialog');\\n        this.insertBefore(dialog, null);\\n      }\\n\\n      if (!util.findChild(this._dialog, '.alert-dialog-container')) {\\n        var container = document.createElement('div');\\n        container.classList.add('alert-dialog-container');\\n        this._dialog.appendChild(container);\\n      }\\n\\n      this._dialog.children[0].appendChild(content);\\n\\n      this._dialog.style.zIndex = 20001;\\n      this._mask.style.zIndex = 20000;\\n\\n      if (this.getAttribute('mask-color')) {\\n        this._mask.style.backgroundColor = this.getAttribute('mask-color');\\n      }\\n\\n      ModifierUtil.initModifier(this, scheme);\\n    }\\n\\n    /**\\n     * @property disabled\\n     * @type {Boolean}\\n     * @description\\n     *   [en]Whether the element is disabled or not.[/en]\\n     *   [ja]無効化されている場合に`true`。[/ja]\\n     */\\n\\n  }, {\\n    key: 'show',\\n\\n\\n    /**\\n     * @method show\\n     * @signature show([options])\\n     * @param {Object} [options]\\n     *   [en]Parameter object.[/en]\\n     *   [ja]オプションを指定するオブジェクトです。[/ja]\\n     * @param {String} [options.animation]\\n     *   [en]Animation name. Available animations are `\\\"fade\\\"` and `\\\"none\\\"`.[/en]\\n     *   [ja]アニメーション名を指定します。指定できるのは、\\\"fade\\\", \\\"none\\\"のいずれかです。[/ja]\\n     * @param {String} [options.animationOptions]\\n     *   [en]Specify the animation's duration, delay and timing. E.g.  `{duration: 0.2, delay: 0.4, timing: 'ease-in'}`.[/en]\\n     *   [ja]アニメーション時のduration, delay, timingを指定します。e.g. <code>{duration: 0.2, delay: 0.4, timing: 'ease-in'}</code> [/ja]\\n     * @param {Function} [options.callback]\\n     *   [en]Function to execute after the dialog has been revealed.[/en]\\n     *   [ja]ダイアログが表示され終わった時に呼び出されるコールバックを指定します。[/ja]\\n     * @description\\n     *   [en]Show the alert dialog.[/en]\\n     *   [ja]ダイアログを表示します。[/ja]\\n     * @return {Promise}\\n     *   [en]A `Promise` object that resolves to the displayed element.[/en]\\n     *   [ja][/ja]\\n     */\\n    value: function show() {\\n      var _this3 = this;\\n\\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n\\n      var _cancel2 = false;\\n      var callback = options.callback || function () {};\\n\\n      options.animationOptions = util.extend(options.animationOptions || {}, AnimatorFactory.parseAnimationOptionsString(this.getAttribute('animation-options')));\\n\\n      util.triggerElementEvent(this, 'preshow', {\\n        alertDialog: this,\\n        cancel: function cancel() {\\n          _cancel2 = true;\\n        }\\n      });\\n\\n      if (!_cancel2) {\\n        var tryShow = function tryShow() {\\n          var unlock = _this3._doorLock.lock();\\n          var animator = _this3._animatorFactory.newAnimator(options);\\n\\n          _this3.style.display = 'block';\\n          _this3._mask.style.opacity = '1';\\n\\n          return new Promise(function (resolve) {\\n            contentReady(_this3, function () {\\n              animator.show(_this3, function () {\\n                _this3._visible = true;\\n                unlock();\\n\\n                util.triggerElementEvent(_this3, 'postshow', { alertDialog: _this3 });\\n\\n                callback();\\n                resolve(_this3);\\n              });\\n            });\\n          });\\n        };\\n\\n        return new Promise(function (resolve) {\\n          _this3._doorLock.waitUnlock(function () {\\n            return resolve(tryShow());\\n          });\\n        });\\n      } else {\\n        return Promise.reject('Canceled in preshow event.');\\n      }\\n    }\\n\\n    /**\\n     * @method hide\\n     * @signature hide([options])\\n     * @param {Object} [options]\\n     *   [en]Parameter object.[/en]\\n     *   [ja]オプションを指定するオブジェクト。[/ja]\\n     * @param {String} [options.animation]\\n     *   [en]Animation name. Available animations are `\\\"fade\\\"` and `\\\"none\\\"`.[/en]\\n     *   [ja]アニメーション名を指定します。\\\"fade\\\", \\\"none\\\"のいずれかを指定します。[/ja]\\n     * @param {String} [options.animationOptions]\\n     *   [en]Specify the animation's duration, delay and timing. E.g.  <code>{duration: 0.2, delay: 0.4, timing: 'ease-in'}</code>[/en]\\n     *   [ja]アニメーション時のduration, delay, timingを指定します。e.g. <code>{duration: 0.2, delay: 0.4, timing: 'ease-in'}</code> [/ja]\\n     * @param {Function} [options.callback]\\n     *   [en]Function to execute after the dialog has been hidden.[/en]\\n     *   [ja]このダイアログが閉じた時に呼び出されるコールバックを指定します。[/ja]\\n     * @description\\n     *   [en]Hide the alert dialog.[/en]\\n     *   [ja]ダイアログを閉じます。[/ja]\\n     * @return {Promise}\\n     *   [en]Resolves to the hidden element[/en]\\n     *   [ja][/ja]\\n     */\\n\\n  }, {\\n    key: 'hide',\\n    value: function hide() {\\n      var _this4 = this;\\n\\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n\\n      var _cancel3 = false;\\n      var callback = options.callback || function () {};\\n\\n      options.animationOptions = util.extend(options.animationOptions || {}, AnimatorFactory.parseAnimationOptionsString(this.getAttribute('animation-options')));\\n\\n      util.triggerElementEvent(this, 'prehide', {\\n        alertDialog: this,\\n        cancel: function cancel() {\\n          _cancel3 = true;\\n        }\\n      });\\n\\n      if (!_cancel3) {\\n        var tryHide = function tryHide() {\\n          var unlock = _this4._doorLock.lock();\\n          var animator = _this4._animatorFactory.newAnimator(options);\\n\\n          return new Promise(function (resolve) {\\n            contentReady(_this4, function () {\\n              animator.hide(_this4, function () {\\n                _this4.style.display = 'none';\\n                _this4._visible = false;\\n                unlock();\\n\\n                util.triggerElementEvent(_this4, 'posthide', { alertDialog: _this4 });\\n\\n                callback();\\n                resolve(_this4);\\n              });\\n            });\\n          });\\n        };\\n\\n        return new Promise(function (resolve) {\\n          _this4._doorLock.waitUnlock(function () {\\n            return resolve(tryHide());\\n          });\\n        });\\n      } else {\\n        return Promise.reject('Canceled in prehide event.');\\n      }\\n    }\\n\\n    /**\\n     * @property visible\\n     * @readonly\\n     * @type {Boolean}\\n     * @description\\n     *   [en]Whether the dialog is visible or not.[/en]\\n     *   [ja]要素が見える場合に`true`。[/ja]\\n     */\\n\\n  }, {\\n    key: '_cancel',\\n    value: function _cancel() {\\n      var _this5 = this;\\n\\n      if (this.cancelable && !this._running) {\\n        this._running = true;\\n        this.hide().then(function () {\\n          _this5._running = false;\\n          util.triggerElementEvent(_this5, 'dialog-cancel');\\n        }, function () {\\n          return _this5._running = false;\\n        });\\n      }\\n    }\\n  }, {\\n    key: 'connectedCallback',\\n    value: function connectedCallback() {\\n      var _this6 = this;\\n\\n      this.onDeviceBackButton = function (e) {\\n        return _this6.cancelable ? _this6._cancel() : e.callParentHandler();\\n      };\\n\\n      contentReady(this, function () {\\n        _this6._mask.addEventListener('click', _this6._boundCancel, false);\\n      });\\n    }\\n  }, {\\n    key: 'disconnectedCallback',\\n    value: function disconnectedCallback() {\\n      this._backButtonHandler.destroy();\\n      this._backButtonHandler = null;\\n\\n      this._mask.removeEventListener('click', this._boundCancel.bind(this), false);\\n    }\\n  }, {\\n    key: 'attributeChangedCallback',\\n    value: function attributeChangedCallback(name, last, current) {\\n      if (name === 'modifier') {\\n        return ModifierUtil.onModifierChanged(last, current, this, scheme);\\n      } else if (name === 'animation') {\\n        this._updateAnimatorFactory();\\n      }\\n    }\\n  }, {\\n    key: '_mask',\\n    get: function get() {\\n      return util.findChild(this, '.alert-dialog-mask');\\n    }\\n\\n    /**\\n     * @return {Element}\\n     */\\n\\n  }, {\\n    key: '_dialog',\\n    get: function get() {\\n      return util.findChild(this, '.alert-dialog');\\n    }\\n\\n    /**\\n     * @return {Element}\\n     */\\n\\n  }, {\\n    key: '_titleElement',\\n    get: function get() {\\n      return util.findChild(this._dialog.children[0], '.alert-dialog-title');\\n    }\\n\\n    /**\\n     * @return {Element}\\n     */\\n\\n  }, {\\n    key: '_contentElement',\\n    get: function get() {\\n      return util.findChild(this._dialog.children[0], '.alert-dialog-content');\\n    }\\n  }, {\\n    key: 'disabled',\\n    set: function set(value) {\\n      return util.toggleAttribute(this, 'disabled', value);\\n    },\\n    get: function get() {\\n      return this.hasAttribute('disabled');\\n    }\\n\\n    /**\\n     * @property cancelable\\n     * @type {Boolean}\\n     * @description\\n     *   [en]Whether the dialog is cancelable or not. A cancelable dialog can be closed by tapping the background or by pressing the back button on Android devices.[/en]\\n     *   [ja][/ja]\\n     */\\n\\n  }, {\\n    key: 'cancelable',\\n    set: function set(value) {\\n      return util.toggleAttribute(this, 'cancelable', value);\\n    },\\n    get: function get() {\\n      return this.hasAttribute('cancelable');\\n    }\\n  }, {\\n    key: 'visible',\\n    get: function get() {\\n      return this._visible;\\n    }\\n\\n    /**\\n     * @property onDeviceBackButton\\n     * @type {Object}\\n     * @description\\n     *   [en]Back-button handler.[/en]\\n     *   [ja]バックボタンハンドラ。[/ja]\\n     */\\n\\n  }, {\\n    key: 'onDeviceBackButton',\\n    get: function get() {\\n      return this._backButtonHandler;\\n    },\\n    set: function set(callback) {\\n      if (this._backButtonHandler) {\\n        this._backButtonHandler.destroy();\\n      }\\n\\n      this._backButtonHandler = deviceBackButtonDispatcher.createHandler(this, callback);\\n    }\\n  }], [{\\n    key: 'registerAnimator',\\n\\n\\n    /**\\n     * @param {String} name\\n     * @param {DialogAnimator} Animator\\n     */\\n    value: function registerAnimator(name, Animator) {\\n      if (!(Animator.prototype instanceof AlertDialogAnimator)) {\\n        throw new Error('\\\"Animator\\\" param must inherit OnsAlertDialogElement.AlertDialogAnimator');\\n      }\\n      _animatorDict[name] = Animator;\\n    }\\n  }, {\\n    key: 'observedAttributes',\\n    get: function get() {\\n      return ['modifier', 'animation'];\\n    }\\n  }, {\\n    key: 'events',\\n    get: function get() {\\n      return ['preshow', 'postshow', 'prehide', 'posthide', 'dialog-cancel'];\\n    }\\n  }, {\\n    key: 'animators',\\n    get: function get() {\\n      return _animatorDict;\\n    }\\n  }, {\\n    key: 'AlertDialogAnimator',\\n    get: function get() {\\n      return AlertDialogAnimator;\\n    }\\n  }]);\\n  return AlertDialogElement;\\n}(BaseElement);\\n\\ncustomElements.define('ons-alert-dialog', AlertDialogElement);\\n\\n/*\\nCopyright 2013-2015 ASIAL CORPORATION\\n\\nLicensed under the Apache License, Version 2.0 (the \\\"License\\\");\\nyou may not use this file except in compliance with the License.\\nYou may obtain a copy of the License at\\n\\n   http://www.apache.org/licenses/LICENSE-2.0\\n\\nUnless required by applicable law or agreed to in writing, software\\ndistributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\nSee the License for the specific language governing permissions and\\nlimitations under the License.\\n\\n*/\\n\\nvar defaultClassName = 'back-button';\\n\\nvar scheme$1 = {\\n  '': 'back-button--*',\\n  '.back-button__icon': 'back-button--*__icon',\\n  '.back-button__label': 'back-button--*__label'\\n};\\n\\n/**\\n * @element ons-back-button\\n * @category navigation\\n * @description\\n *   [en]\\n *     Back button component for `<ons-toolbar>`. Put it in the left part of the `<ons-toolbar>`.\\n *\\n *     It will find the parent `<ons-navigator>` element and pop a page when clicked. This behavior can be overriden by specifying the `onClick` property.\\n *   [/en]\\n *   [ja][/ja]\\n * @codepen aHmGL\\n * @tutorial vanilla/Reference/navigator\\n * @modifier material\\n *   [en]Material Design style[/en]\\n *   [ja][/ja]\\n * @seealso ons-toolbar\\n *   [en]ons-toolbar component[/en]\\n *   [ja]ons-toolbarコンポーネント[/ja]\\n * @seealso ons-navigator\\n *   [en]ons-navigator component[/en]\\n *   [ja]ons-navigatorコンポーネント[/ja]\\n * @example\\n * <ons-toolbar>\\n *   <div class=\\\"left\\\">\\n *     <ons-back-button>Back</ons-back-button>\\n *   </div>\\n *   <div class=\\\"center\\\">\\n *     Title\\n *   <div>\\n * </ons-toolbar>\\n */\\n\\nvar BackButtonElement = function (_BaseElement) {\\n  inherits(BackButtonElement, _BaseElement);\\n\\n  function BackButtonElement() {\\n    classCallCheck(this, BackButtonElement);\\n    return possibleConstructorReturn(this, (BackButtonElement.__proto__ || Object.getPrototypeOf(BackButtonElement)).apply(this, arguments));\\n  }\\n\\n  createClass(BackButtonElement, [{\\n    key: 'init',\\n\\n    /**\\n     * @attribute modifier\\n     * @type {String}\\n     * @description\\n     *  [en]The appearance of the back button.[/en]\\n     *  [ja]バックボタンの見た目を指定します。[/ja]\\n     */\\n\\n    value: function init() {\\n      var _this2 = this;\\n\\n      contentReady(this, function () {\\n        _this2._compile();\\n      });\\n\\n      this._options = {};\\n      this._boundOnClick = this._onClick.bind(this);\\n    }\\n  }, {\\n    key: '_compile',\\n    value: function _compile() {\\n      autoStyle.prepare(this);\\n\\n      this.classList.add(defaultClassName);\\n\\n      if (!util.findChild(this, '.back-button__label')) {\\n        var label = util.create('span.back-button__label');\\n\\n        while (this.childNodes[0]) {\\n          label.appendChild(this.childNodes[0]);\\n        }\\n        this.appendChild(label);\\n      }\\n\\n      if (!util.findChild(this, '.back-button__icon')) {\\n        var icon = util.create('span.back-button__icon');\\n\\n        this.insertBefore(icon, this.children[0]);\\n      }\\n\\n      ModifierUtil.initModifier(this, scheme$1);\\n    }\\n\\n    /**\\n     * @property options\\n     * @type {Object}\\n     * @description\\n     *   [en]Options object.[/en]\\n     *   [ja]オプションを指定するオブジェクト。[/ja]\\n     */\\n\\n    /**\\n     * @property options.animation\\n     * @type {String}\\n     * @description\\n     *   [en]Animation name. Available animations are \\\"slide\\\", \\\"lift\\\", \\\"fade\\\" and \\\"none\\\".\\n     *     These are platform based animations. For fixed animations, add \\\"-ios\\\" or \\\"-md\\\"\\n     *     suffix to the animation name. E.g. \\\"lift-ios\\\", \\\"lift-md\\\". Defaults values are \\\"slide-ios\\\" and \\\"fade-md\\\".\\n     *   [/en]\\n     *   [ja][/ja]\\n     */\\n\\n    /**\\n     * @property options.animationOptions\\n     * @type {String}\\n     * @description\\n     *   [en]Specify the animation's duration, delay and timing. E.g.  `{duration: 0.2, delay: 0.4, timing: 'ease-in'}`[/en]\\n     *   [ja]アニメーション時のduration, delay, timingを指定します。e.g. `{duration: 0.2, delay: 0.4, timing: 'ease-in'}` [/ja]\\n     */\\n\\n    /**\\n     * @property options.callback\\n     * @type {String}\\n     * @description\\n     *   [en]Function that is called when the transition has ended.[/en]\\n     *   [ja]このメソッドによる画面遷移が終了した際に呼び出される関数オブジェクトを指定します。[/ja]\\n     */\\n\\n    /**\\n     * @property options.refresh\\n     * @description\\n     *   [en]The previous page will be refreshed (destroyed and created again) before popPage action.[/en]\\n     *   [ja]popPageする前に、前にあるページを生成しなおして更新する場合にtrueを指定します。[/ja]\\n     */\\n\\n  }, {\\n    key: '_onClick',\\n\\n\\n    /**\\n     * @property onClick\\n     * @type {Function}\\n     * @description\\n     *   [en]Used to override the default back button behavior.[/en]\\n     *   [ja][/ja]\\n     */\\n    value: function _onClick() {\\n      if (this.onClick) {\\n        this.onClick.apply(this);\\n      } else {\\n        var navigator = util.findParent(this, 'ons-navigator');\\n        if (navigator) {\\n          navigator.popPage(this.options);\\n        }\\n      }\\n    }\\n  }, {\\n    key: 'connectedCallback',\\n    value: function connectedCallback() {\\n      this.addEventListener('click', this._boundOnClick, false);\\n    }\\n  }, {\\n    key: 'attributeChangedCallback',\\n    value: function attributeChangedCallback(name, last, current) {\\n      switch (name) {\\n        case 'class':\\n          if (!this.classList.contains(defaultClassName)) {\\n            this.className = defaultClassName + ' ' + current;\\n          }\\n          break;\\n\\n        case 'modifier':\\n          ModifierUtil.onModifierChanged(last, current, this, scheme$1);\\n          break;\\n      }\\n    }\\n  }, {\\n    key: 'disconnectedCallback',\\n    value: function disconnectedCallback() {\\n      this.removeEventListener('click', this._boundOnClick, false);\\n    }\\n  }, {\\n    key: 'show',\\n    value: function show() {\\n      this.style.display = 'inline-block';\\n    }\\n  }, {\\n    key: 'hide',\\n    value: function hide() {\\n      this.style.display = 'none';\\n    }\\n  }, {\\n    key: 'options',\\n    get: function get() {\\n      return this._options;\\n    },\\n    set: function set(object) {\\n      this._options = object;\\n    }\\n  }], [{\\n    key: 'observedAttributes',\\n    get: function get() {\\n      return ['modifier', 'class'];\\n    }\\n  }]);\\n  return BackButtonElement;\\n}(BaseElement);\\n\\ncustomElements.define('ons-back-button', BackButtonElement);\\n\\n/*\\nCopyright 2013-2015 ASIAL CORPORATION\\n\\nLicensed under the Apache License, Version 2.0 (the \\\"License\\\");\\nyou may not use this file except in compliance with the License.\\nYou may obtain a copy of the License at\\n\\n   http://www.apache.org/licenses/LICENSE-2.0\\n\\nUnless required by applicable law or agreed to in writing, software\\ndistributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\nSee the License for the specific language governing permissions and\\nlimitations under the License.\\n\\n*/\\n\\nvar defaultClassName$1 = 'bottom-bar';\\nvar scheme$2 = { '': 'bottom-bar--*' };\\n\\n/**\\n * @element ons-bottom-toolbar\\n * @category page\\n * @description\\n *   [en]Toolbar component that is positioned at the bottom of the page.[/en]\\n *   [ja]ページ下部に配置されるツールバー用コンポーネントです。[/ja]\\n * @modifier transparent\\n *   [en]Make the toolbar transparent.[/en]\\n *   [ja]ツールバーの背景を透明にして表示します。[/ja]\\n * @seealso ons-toolbar [en]ons-toolbar component[/en][ja]ons-toolbarコンポーネント[/ja]\\n * @example\\n * <ons-bottom-toolbar>\\n *   Content\\n * </ons-bottom-toolbar>\\n */\\n\\nvar BottomToolbarElement = function (_BaseElement) {\\n  inherits(BottomToolbarElement, _BaseElement);\\n\\n  function BottomToolbarElement() {\\n    classCallCheck(this, BottomToolbarElement);\\n    return possibleConstructorReturn(this, (BottomToolbarElement.__proto__ || Object.getPrototypeOf(BottomToolbarElement)).apply(this, arguments));\\n  }\\n\\n  createClass(BottomToolbarElement, [{\\n    key: 'init',\\n\\n    /**\\n     * @attribute modifier\\n     * @type {String}\\n     * @description\\n     *   [en]The appearance of the toolbar.[/en]\\n     *   [ja]ツールバーの見た目の表現を指定します。[/ja]\\n     */\\n\\n    value: function init() {\\n      this.classList.add(defaultClassName$1);\\n      ModifierUtil.initModifier(this, scheme$2);\\n    }\\n  }, {\\n    key: 'connectedCallback',\\n    value: function connectedCallback() {\\n      if (util.match(this.parentNode, 'ons-page')) {\\n        this.parentNode.classList.add('page-with-bottom-toolbar');\\n      }\\n    }\\n  }, {\\n    key: 'attributeChangedCallback',\\n    value: function attributeChangedCallback(name, last, current) {\\n      switch (name) {\\n        case 'class':\\n          if (!this.classList.contains(defaultClassName$1)) {\\n            this.className = defaultClassName$1 + ' ' + current;\\n          }\\n          break;\\n        case 'modifier':\\n          ModifierUtil.onModifierChanged(last, current, this, scheme$2);\\n          break;\\n      }\\n    }\\n  }], [{\\n    key: 'observedAttributes',\\n    get: function get() {\\n      return ['modifier', 'class'];\\n    }\\n  }]);\\n  return BottomToolbarElement;\\n}(BaseElement);\\n\\ncustomElements.define('ons-bottom-toolbar', BottomToolbarElement);\\n\\n/*\\nCopyright 2013-2015 ASIAL CORPORATION\\n\\nLicensed under the Apache License, Version 2.0 (the \\\"License\\\");\\nyou may not use this file except in compliance with the License.\\nYou may obtain a copy of the License at\\n\\n   http://www.apache.org/licenses/LICENSE-2.0\\n\\nUnless required by applicable law or agreed to in writing, software\\ndistributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\nSee the License for the specific language governing permissions and\\nlimitations under the License.\\n\\n*/\\n\\nvar scheme$3 = { '': 'button--*' };\\n\\nvar defaultClassName$2 = 'button';\\n\\n/**\\n * @element ons-button\\n * @category form\\n * @modifier outline\\n *   [en]Button with outline and transparent background[/en]\\n *   [ja]アウトラインを持ったボタンを表示します。[/ja]\\n * @modifier light\\n *   [en]Button that doesn't stand out.[/en]\\n *   [ja]目立たないボタンを表示します。[/ja]\\n * @modifier quiet\\n *   [en]Button with no outline and or background..[/en]\\n *   [ja]枠線や背景が無い文字だけのボタンを表示します。[/ja]\\n * @modifier cta\\n *   [en]Button that really stands out.[/en]\\n *   [ja]目立つボタンを表示します。[/ja]\\n * @modifier large\\n *   [en]Large button that covers the width of the screen.[/en]\\n *   [ja]横いっぱいに広がる大きなボタンを表示します。[/ja]\\n * @modifier large--quiet\\n *   [en]Large quiet button.[/en]\\n *   [ja]横いっぱいに広がるquietボタンを表示します。[/ja]\\n * @modifier large--cta\\n *   [en]Large call to action button.[/en]\\n *   [ja]横いっぱいに広がるctaボタンを表示します。[/ja]\\n * @modifier material\\n *   [en]Material Design button[/en]\\n *   [ja]マテリアルデザインのボタン[/ja]\\n * @modifier material--flat\\n *   [en]Material Design flat button[/en]\\n *   [ja]マテリアルデザインのフラットボタン[/ja]\\n * @description\\n *   [en]\\n *     Button component. If you want to place a button in a toolbar, use `<ons-toolbar-button>` or `<ons-back-button>` instead.\\n *\\n *     Will automatically display as a Material Design button with a ripple effect on Android.\\n *   [/en]\\n *   [ja]ボタン用コンポーネント。ツールバーにボタンを設置する場合は、ons-toolbar-buttonもしくはons-back-buttonコンポーネントを使用します。[/ja]\\n * @codepen hLayx\\n * @tutorial vanilla/Reference/button\\n * @guide using-modifier [en]More details about the `modifier` attribute[/en][ja]modifier属性の使い方[/ja]\\n * @guide cross-platform-styling [en]Information about cross platform styling[/en][ja]Information about cross platform styling[/ja]\\n * @example\\n * <ons-button modifier=\\\"large--cta\\\">\\n *   Tap Me\\n * </ons-button>\\n */\\n\\nvar ButtonElement = function (_BaseElement) {\\n  inherits(ButtonElement, _BaseElement);\\n\\n  function ButtonElement() {\\n    classCallCheck(this, ButtonElement);\\n    return possibleConstructorReturn(this, (ButtonElement.__proto__ || Object.getPrototypeOf(ButtonElement)).apply(this, arguments));\\n  }\\n\\n  createClass(ButtonElement, [{\\n    key: 'init',\\n\\n\\n    /**\\n     * @attribute modifier\\n     * @type {String}\\n     * @description\\n     *  [en]The appearance of the button.[/en]\\n     *  [ja]ボタンの表現を指定します。[/ja]\\n     */\\n\\n    /**\\n     * @attribute ripple\\n     * @description\\n     *  [en]If this attribute is defined, the button will have a ripple effect.[/en]\\n     *  [ja][/ja]\\n     */\\n\\n    /**\\n     * @attribute disabled\\n     * @description\\n     *   [en]Specify if button should be disabled.[/en]\\n     *   [ja]ボタンを無効化する場合は指定します。[/ja]\\n     */\\n\\n    value: function init() {\\n      this._compile();\\n    }\\n  }, {\\n    key: 'attributeChangedCallback',\\n    value: function attributeChangedCallback(name, last, current) {\\n      switch (name) {\\n        case 'class':\\n          if (!this.classList.contains(defaultClassName$2)) {\\n            this.className = defaultClassName$2 + ' ' + current;\\n          }\\n          break;\\n        case 'modifier':\\n          ModifierUtil.onModifierChanged(last, current, this, scheme$3);\\n          break;\\n        case 'ripple':\\n          this._updateRipple();\\n      }\\n    }\\n\\n    /**\\n     * @property disabled\\n     * @type {Boolean}\\n     * @description\\n     *   [en]Whether the button is disabled or not.[/en]\\n     *   [ja]無効化されている場合に`true`。[/ja]\\n     */\\n\\n  }, {\\n    key: '_compile',\\n    value: function _compile() {\\n      autoStyle.prepare(this);\\n\\n      this.classList.add(defaultClassName$2);\\n\\n      this._updateRipple();\\n\\n      ModifierUtil.initModifier(this, scheme$3);\\n    }\\n  }, {\\n    key: '_updateRipple',\\n    value: function _updateRipple() {\\n      util.updateRipple(this);\\n    }\\n  }, {\\n    key: 'disabled',\\n    set: function set(value) {\\n      return util.toggleAttribute(this, 'disabled', value);\\n    },\\n    get: function get() {\\n      return this.hasAttribute('disabled');\\n    }\\n  }], [{\\n    key: 'observedAttributes',\\n    get: function get() {\\n      return ['modifier', 'ripple', 'class'];\\n    }\\n  }]);\\n  return ButtonElement;\\n}(BaseElement);\\n\\ncustomElements.define('ons-button', ButtonElement);\\n\\n/*\\nCopyright 2013-2015 ASIAL CORPORATION\\n\\nLicensed under the Apache License, Version 2.0 (the \\\"License\\\");\\nyou may not use this file except in compliance with the License.\\nYou may obtain a copy of the License at\\n\\n   http://www.apache.org/licenses/LICENSE-2.0\\n\\nUnless required by applicable law or agreed to in writing, software\\ndistributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\nSee the License for the specific language governing permissions and\\nlimitations under the License.\\n\\n*/\\n\\nvar scheme$4 = { '': 'carousel-item--*' };\\n\\n/**\\n * @element ons-carousel-item\\n * @category carousel\\n * @description\\n *   [en]\\n *     Carousel item component. Used as a child of the `<ons-carousel>` element.\\n *   [/en]\\n *   [ja][/ja]\\n * @codepen xbbzOQ\\n * @tutorial vanilla/Reference/carousel\\n * @seealso ons-carousel\\n *   [en]`<ons-carousel>` components[/en]\\n *   [ja]<ons-carousel>コンポーネント[/ja]\\n * @example\\n * <ons-carousel style=\\\"width: 100%; height: 200px\\\">\\n *   <ons-carousel-item>\\n *    ...\\n *   </ons-carousel-item>\\n *   <ons-carousel-item>\\n *    ...\\n *   </ons-carousel-item>\\n * </ons-carousel>\\n */\\n\\nvar CarouselItemElement = function (_BaseElement) {\\n  inherits(CarouselItemElement, _BaseElement);\\n\\n  function CarouselItemElement() {\\n    classCallCheck(this, CarouselItemElement);\\n    return possibleConstructorReturn(this, (CarouselItemElement.__proto__ || Object.getPrototypeOf(CarouselItemElement)).apply(this, arguments));\\n  }\\n\\n  createClass(CarouselItemElement, [{\\n    key: 'init',\\n    value: function init() {\\n      this.style.width = '100%';\\n      ModifierUtil.initModifier(this, scheme$4);\\n    }\\n  }, {\\n    key: 'attributeChangedCallback',\\n    value: function attributeChangedCallback(name, last, current) {\\n      if (name === 'modifier') {\\n        return ModifierUtil.onModifierChanged(last, current, this, scheme$4);\\n      }\\n    }\\n  }], [{\\n    key: 'observedAttributes',\\n    get: function get() {\\n      return ['modifier'];\\n    }\\n  }]);\\n  return CarouselItemElement;\\n}(BaseElement);\\n\\ncustomElements.define('ons-carousel-item', CarouselItemElement);\\n\\n/*\\nCopyright 2013-2015 ASIAL CORPORATION\\n\\nLicensed under the Apache License, Version 2.0 (the \\\"License\\\");\\nyou may not use this file except in compliance with the License.\\nYou may obtain a copy of the License at\\n\\n   http://www.apache.org/licenses/LICENSE-2.0\\n\\nUnless required by applicable law or agreed to in writing, software\\ndistributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\nSee the License for the specific language governing permissions and\\nlimitations under the License.\\n\\n*/\\n\\nvar VerticalModeTrait = {\\n\\n  _getScrollDelta: function _getScrollDelta(event) {\\n    return event.gesture.deltaY;\\n  },\\n\\n  _getScrollVelocity: function _getScrollVelocity(event) {\\n    return event.gesture.velocityY;\\n  },\\n\\n  _getElementSize: function _getElementSize() {\\n    if (!this._currentElementSize) {\\n      this._currentElementSize = this.getBoundingClientRect().height;\\n    }\\n\\n    return this._currentElementSize;\\n  },\\n\\n  _generateScrollTransform: function _generateScrollTransform(scroll) {\\n    return 'translate3d(0px, ' + -scroll + 'px, 0px)';\\n  },\\n\\n  _updateDimensionData: function _updateDimensionData() {\\n    this._style = window.getComputedStyle(this);\\n    this._dimensions = this.getBoundingClientRect();\\n  },\\n\\n  _updateOffset: function _updateOffset() {\\n    if (this.centered) {\\n      var height = (this._dimensions.height || 0) - parseInt(this._style.paddingTop, 10) - parseInt(this._style.paddingBottom, 10);\\n      this._offset = -(height - this._getCarouselItemSize()) / 2;\\n    }\\n  },\\n\\n  _layoutCarouselItems: function _layoutCarouselItems() {\\n    var children = this._getCarouselItemElements();\\n\\n    var sizeAttr = this._getCarouselItemSizeAttr();\\n    var sizeInfo = this._decomposeSizeString(sizeAttr);\\n\\n    for (var i = 0; i < children.length; i++) {\\n      children[i].style.position = 'absolute';\\n      children[i].style.height = sizeAttr;\\n      children[i].style.visibility = 'visible';\\n      children[i].style.top = i * sizeInfo.number + sizeInfo.unit;\\n    }\\n  },\\n\\n  _setup: function _setup() {\\n    this._updateDimensionData();\\n    this._updateOffset();\\n    this._layoutCarouselItems();\\n  }\\n};\\n\\nvar HorizontalModeTrait = {\\n\\n  _getScrollDelta: function _getScrollDelta(event) {\\n    return event.gesture.deltaX;\\n  },\\n\\n  _getScrollVelocity: function _getScrollVelocity(event) {\\n    return event.gesture.velocityX;\\n  },\\n\\n  _getElementSize: function _getElementSize() {\\n    if (!this._currentElementSize) {\\n      this._currentElementSize = this.getBoundingClientRect().width;\\n    }\\n\\n    return this._currentElementSize;\\n  },\\n\\n  _generateScrollTransform: function _generateScrollTransform(scroll) {\\n    return 'translate3d(' + -scroll + 'px, 0px, 0px)';\\n  },\\n\\n  _updateDimensionData: function _updateDimensionData() {\\n    this._style = window.getComputedStyle(this);\\n    this._dimensions = this.getBoundingClientRect();\\n  },\\n\\n  _updateOffset: function _updateOffset() {\\n    if (this.centered) {\\n      var width = (this._dimensions.width || 0) - parseInt(this._style.paddingLeft, 10) - parseInt(this._style.paddingRight, 10);\\n      this._offset = -(width - this._getCarouselItemSize()) / 2;\\n    }\\n  },\\n\\n  _layoutCarouselItems: function _layoutCarouselItems() {\\n    var children = this._getCarouselItemElements();\\n\\n    var sizeAttr = this._getCarouselItemSizeAttr();\\n    var sizeInfo = this._decomposeSizeString(sizeAttr);\\n\\n    for (var i = 0; i < children.length; i++) {\\n      children[i].style.position = 'absolute';\\n      children[i].style.width = sizeAttr;\\n      children[i].style.visibility = 'visible';\\n      children[i].style.left = i * sizeInfo.number + sizeInfo.unit;\\n    }\\n  },\\n\\n  _setup: function _setup() {\\n    this._updateDimensionData();\\n    this._updateOffset();\\n    this._layoutCarouselItems();\\n  }\\n};\\n\\n/**\\n * @element ons-carousel\\n * @category carousel\\n * @description\\n *   [en]\\n *     Carousel component. A carousel can be used to display several items in the same space.\\n *\\n *     The component supports displaying content both horizontally and vertically. The user can scroll through the items by dragging and it can also be controller programmatically.\\n *   [/en]\\n *   [ja][/ja]\\n * @codepen xbbzOQ\\n * @tutorial vanilla/Reference/carousel\\n * @seealso ons-carousel-item\\n *   [en]`<ons-carousel-item>` component[/en]\\n *   [ja]ons-carousel-itemコンポーネント[/ja]\\n * @example\\n * <ons-carousel style=\\\"width: 100%; height: 200px\\\">\\n *   <ons-carousel-item>\\n *    ...\\n *   </ons-carousel-item>\\n *   <ons-carousel-item>\\n *    ...\\n *   </ons-carousel-item>\\n * </ons-carousel>\\n */\\n\\nvar CarouselElement = function (_BaseElement) {\\n  inherits(CarouselElement, _BaseElement);\\n\\n  function CarouselElement() {\\n    classCallCheck(this, CarouselElement);\\n    return possibleConstructorReturn(this, (CarouselElement.__proto__ || Object.getPrototypeOf(CarouselElement)).apply(this, arguments));\\n  }\\n\\n  createClass(CarouselElement, [{\\n    key: 'init',\\n\\n\\n    /**\\n     * @event postchange\\n     * @description\\n     *   [en]Fired just after the current carousel item has changed.[/en]\\n     *   [ja]現在表示しているカルーセルの要素が変わった時に発火します。[/ja]\\n     * @param {Object} event\\n     *   [en]Event object.[/en]\\n     *   [ja]イベントオブジェクトです。[/ja]\\n     * @param {Object} event.carousel\\n     *   [en]Carousel object.[/en]\\n     *   [ja]イベントが発火したCarouselオブジェクトです。[/ja]\\n     * @param {Number} event.activeIndex\\n     *   [en]Current active index.[/en]\\n     *   [ja]現在アクティブになっている要素のインデックス。[/ja]\\n     * @param {Number} event.lastActiveIndex\\n     *   [en]Previous active index.[/en]\\n     *   [ja]以前アクティブだった要素のインデックス。[/ja]\\n     */\\n\\n    /**\\n     * @event refresh\\n     * @description\\n     *   [en]Fired when the carousel has been refreshed.[/en]\\n     *   [ja]カルーセルが更新された時に発火します。[/ja]\\n     * @param {Object} event\\n     *   [en]Event object.[/en]\\n     *   [ja]イベントオブジェクトです。[/ja]\\n     * @param {Object} event.carousel\\n     *   [en]Carousel object.[/en]\\n     *   [ja]イベントが発火したCarouselオブジェクトです。[/ja]\\n     */\\n\\n    /**\\n     * @event overscroll\\n     * @description\\n     *   [en]Fired when the carousel has been overscrolled.[/en]\\n     *   [ja]カルーセルがオーバースクロールした時に発火します。[/ja]\\n     * @param {Object} event\\n     *   [en]Event object.[/en]\\n     *   [ja]イベントオブジェクトです。[/ja]\\n     * @param {Object} event.carousel\\n     *   [en]Fired when the carousel has been refreshed.[/en]\\n     *   [ja]カルーセルが更新された時に発火します。[/ja]\\n     * @param {Number} event.activeIndex\\n     *   [en]Current active index.[/en]\\n     *   [ja]現在アクティブになっている要素のインデックス。[/ja]\\n     * @param {String} event.direction\\n     *   [en]Can be one of either \\\"up\\\", \\\"down\\\", \\\"left\\\" or \\\"right\\\".[/en]\\n     *   [ja]オーバースクロールされた方向が得られます。\\\"up\\\", \\\"down\\\", \\\"left\\\", \\\"right\\\"のいずれかの方向が渡されます。[/ja]\\n     * @param {Function} event.waitToReturn\\n     *   [en]Takes a <code>Promise</code> object as an argument. The carousel will not scroll back until the promise has been resolved or rejected.[/en]\\n     *   [ja]この関数はPromiseオブジェクトを引数として受け取ります。渡したPromiseオブジェクトがresolveされるかrejectされるまで、カルーセルはスクロールバックしません。[/ja]\\n     */\\n\\n    /**\\n     * @attribute direction\\n     * @type {String}\\n     * @description\\n     *   [en]The direction of the carousel. Can be either \\\"horizontal\\\" or \\\"vertical\\\". Default is \\\"horizontal\\\".[/en]\\n     *   [ja]カルーセルの方向を指定します。\\\"horizontal\\\"か\\\"vertical\\\"を指定できます。\\\"horizontal\\\"がデフォルト値です。[/ja]\\n     */\\n\\n    /**\\n     * @attribute fullscreen\\n     * @description\\n     *   [en]If this attribute is set the carousel will cover the whole screen.[/en]\\n     *   [ja]この属性があると、absoluteポジションを使ってカルーセルが自動的に画面いっぱいに広がります。[/ja]\\n     */\\n\\n    /**\\n     * @attribute overscrollable\\n     * @description\\n     *   [en]If this attribute is set the carousel will be scrollable over the edge. It will bounce back when released.[/en]\\n     *   [ja]この属性がある時、タッチやドラッグで端までスクロールした時に、バウンドするような効果が当たります。[/ja]\\n     */\\n\\n    /**\\n     * @attribute centered\\n     * @description\\n     *   [en]If this attribute is set the carousel then the selected item will be in the center of the carousel instead of the beginning. Useful only when the items are smaller than the carousel. [/en]\\n     *   [ja]この属性がある時、選んでいるons-carousel-itemはカルーセルの真ん中へ行きます。項目がカルーセルよりも小さい場合にのみ、これは便利です。[/ja]\\n     */\\n\\n    /**\\n     * @attribute item-width\\n     * @type {String}\\n     * @description\\n     *    [en]ons-carousel-item's width. Only works when the direction is set to \\\"horizontal\\\".[/en]\\n     *    [ja]ons-carousel-itemの幅を指定します。この属性は、direction属性に\\\"horizontal\\\"を指定した時のみ有効になります。[/ja]\\n     */\\n\\n    /**\\n     * @attribute item-height\\n     * @type {String}\\n     * @description\\n     *   [en]ons-carousel-item's height. Only works when the direction is set to \\\"vertical\\\".[/en]\\n     *   [ja]ons-carousel-itemの高さを指定します。この属性は、direction属性に\\\"vertical\\\"を指定した時のみ有効になります。[/ja]\\n     */\\n\\n    /**\\n     * @attribute auto-scroll\\n     * @description\\n     *   [en]If this attribute is set the carousel will be automatically scrolled to the closest item border when released.[/en]\\n     *   [ja]この属性がある時、一番近いcarousel-itemの境界まで自動的にスクロールするようになります。[/ja]\\n     */\\n\\n    /**\\n     * @attribute auto-scroll-ratio\\n     * @type {Number}\\n     * @description\\n     *    [en]A number between 0.0 and 1.0 that specifies how much the user must drag the carousel in order for it to auto scroll to the next item.[/en]\\n     *    [ja]0.0から1.0までの値を指定します。カルーセルの要素をどれぐらいの割合までドラッグすると次の要素に自動的にスクロールするかを指定します。[/ja]\\n     */\\n\\n    /**\\n     * @attribute swipeable\\n     * @description\\n     *   [en]If this attribute is set the carousel can be scrolled by drag or swipe.[/en]\\n     *   [ja]この属性がある時、カルーセルをスワイプやドラッグで移動できるようになります。[/ja]\\n     */\\n\\n    /**\\n     * @attribute disabled\\n     * @description\\n     *   [en]If this attribute is set the carousel is disabled.[/en]\\n     *   [ja]この属性がある時、dragやtouchやswipeを受け付けなくなります。[/ja]\\n     */\\n\\n    /**\\n     * @attribute initial-index\\n     * @initonly\\n     * @type {Number}\\n     * @description\\n     *   [en]Specify the index of the ons-carousel-item to show initially. Default is 0.[/en]\\n     *   [ja]最初に表示するons-carousel-itemを0始まりのインデックスで指定します。デフォルト値は 0 です。[/ja]\\n     */\\n\\n    /**\\n     * @attribute auto-refresh\\n     * @description\\n     *   [en]When this attribute is set the carousel will automatically refresh when the number of child nodes change.[/en]\\n     *   [ja]この属性がある時、子要素の数が変わるとカルーセルは自動的に更新されるようになります。[/ja]\\n     */\\n\\n    /**\\n     * @attribute animation\\n     * @type {String}\\n     * @description\\n     *   [en]If this attribute is set to `\\\"none\\\"` the transitions will not be animated.[/en]\\n     *   [ja][/ja]\\n     */\\n\\n    /**\\n     * @attribute animation-options\\n     * @type {Expression}\\n     * @description\\n     *   [en]Specify the animation's duration, timing and delay with an object literal. E.g. `{duration: 0.2, delay: 1, timing: 'ease-in'}`.[/en]\\n     *   [ja]アニメーション時のduration, timing, delayをオブジェクトリテラルで指定します。例：{duration: 0.2, delay: 1, timing: 'ease-in'}[/ja]\\n     */\\n\\n    value: function init() {\\n      this._doorLock = new DoorLock();\\n      this._scroll = 0;\\n      this._offset = 0;\\n      this._lastActiveIndex = 0;\\n\\n      this._boundOnDrag = this._onDrag.bind(this);\\n      this._boundOnDragEnd = this._onDragEnd.bind(this);\\n      this._boundOnResize = this._onResize.bind(this);\\n\\n      this._mixin(this._isVertical() ? VerticalModeTrait : HorizontalModeTrait);\\n    }\\n  }, {\\n    key: '_onResize',\\n    value: function _onResize() {\\n      var i = this._scroll / this._currentElementSize;\\n      delete this._currentElementSize;\\n      this.setActiveIndex(i);\\n    }\\n  }, {\\n    key: '_onDirectionChange',\\n    value: function _onDirectionChange() {\\n      if (this._isVertical()) {\\n        this.style.overflowX = 'auto';\\n        this.style.overflowY = '';\\n      } else {\\n        this.style.overflowX = '';\\n        this.style.overflowY = 'auto';\\n      }\\n\\n      this.refresh();\\n    }\\n  }, {\\n    key: '_saveLastState',\\n    value: function _saveLastState() {\\n      this._lastState = {\\n        elementSize: this._getCarouselItemSize(),\\n        carouselElementCount: this.itemCount,\\n        width: this._getCarouselItemSize() * this.itemCount\\n      };\\n    }\\n\\n    /**\\n     * @return {Number}\\n     */\\n\\n  }, {\\n    key: '_getCarouselItemSize',\\n    value: function _getCarouselItemSize() {\\n      var sizeAttr = this._getCarouselItemSizeAttr();\\n      var sizeInfo = this._decomposeSizeString(sizeAttr);\\n      var elementSize = this._getElementSize();\\n\\n      if (sizeInfo.unit === '%') {\\n        return Math.round(sizeInfo.number / 100 * elementSize);\\n      } else if (sizeInfo.unit === 'px') {\\n        return sizeInfo.number;\\n      } else {\\n        throw new Error('Invalid state');\\n      }\\n    }\\n\\n    /**\\n     * @return {Number}\\n     */\\n\\n  }, {\\n    key: '_getInitialIndex',\\n    value: function _getInitialIndex() {\\n      var index = parseInt(this.getAttribute('initial-index'), 10);\\n\\n      if (typeof index === 'number' && !isNaN(index)) {\\n        return Math.max(Math.min(index, this.itemCount - 1), 0);\\n      } else {\\n        return 0;\\n      }\\n    }\\n\\n    /**\\n     * @return {String}\\n     */\\n\\n  }, {\\n    key: '_getCarouselItemSizeAttr',\\n    value: function _getCarouselItemSizeAttr() {\\n      var attrName = 'item-' + (this._isVertical() ? 'height' : 'width');\\n      var itemSizeAttr = ('' + this.getAttribute(attrName)).trim();\\n\\n      return itemSizeAttr.match(/^\\\\d+(px|%)$/) ? itemSizeAttr : '100%';\\n    }\\n\\n    /**\\n     * @return {Object}\\n     */\\n\\n  }, {\\n    key: '_decomposeSizeString',\\n    value: function _decomposeSizeString(size) {\\n      var matches = size.match(/^(\\\\d+)(px|%)/);\\n\\n      return {\\n        number: parseInt(matches[1], 10),\\n        unit: matches[2]\\n      };\\n    }\\n  }, {\\n    key: '_setupInitialIndex',\\n    value: function _setupInitialIndex() {\\n      this._scroll = (this._offset || 0) + this._getCarouselItemSize() * this._getInitialIndex();\\n      this._lastActiveIndex = this._getInitialIndex();\\n      this._scrollTo(this._scroll);\\n    }\\n\\n    /**\\n     * @method setActiveIndex\\n     * @signature setActiveIndex(index, [options])\\n     * @param {Number} index\\n     *   [en]The index that the carousel should be set to.[/en]\\n     *   [ja]carousel要素のインデックスを指定します。[/ja]\\n     * @param {Object} [options]\\n     *   [en]Parameter object.[/en]\\n     *   [ja][/ja]\\n     * @param {Function} [options.callback]\\n     *   [en]A function that will be called after the animation is finished.[/en]\\n     *   [ja][/ja]\\n     * @param {String} [options.animation]\\n     *   [en]If this attribute is set to `\\\"none\\\"` the transitions will not be animated.[/en]\\n     *   [ja][/ja]\\n     * @param {Object} [options.animationOptions]\\n     *   [en]An object that can be used to specify duration, delay and timing function of the animation.[/en]\\n     *   [ja][/ja]\\n     * @description\\n     *   [en]Specify the index of the `<ons-carousel-item>` to show.[/en]\\n     *   [ja]表示するons-carousel-itemをindexで指定します。[/ja]\\n     * @return {Promise}\\n     *   [en]Resolves to the carousel element.[/en]\\n     *   [ja][/ja]\\n     */\\n\\n  }, {\\n    key: 'setActiveIndex',\\n    value: function setActiveIndex(index) {\\n      var _this2 = this;\\n\\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\\n\\n      if (options && (typeof options === 'undefined' ? 'undefined' : _typeof(options)) != 'object') {\\n        throw new Error('options must be an object. You supplied ' + options);\\n      }\\n\\n      options.animation = options.animation || this.getAttribute('animation');\\n      options.animationOptions = util.extend({ duration: 0.3, timing: 'cubic-bezier(.1, .7, .1, 1)' }, options.animationOptions || {}, this.hasAttribute('animation-options') ? util.animationOptionsParse(this.getAttribute('animation-options')) : {});\\n\\n      index = Math.max(0, Math.min(index, this.itemCount - 1));\\n      var scroll = (this._offset || 0) + this._getCarouselItemSize() * index;\\n      var max = this._calculateMaxScroll();\\n\\n      this._scroll = Math.max(0, Math.min(max, scroll));\\n      return this._scrollTo(this._scroll, options).then(function () {\\n        _this2._tryFirePostChangeEvent();\\n        return _this2;\\n      });\\n    }\\n\\n    /**\\n     * @method getActiveIndex\\n     * @signature getActiveIndex()\\n     * @return {Number}\\n     *   [en]The current carousel item index.[/en]\\n     *   [ja]現在表示しているカルーセル要素のインデックスが返されます。[/ja]\\n     * @description\\n     *   [en]Returns the index of the currently visible `<ons-carousel-item>`.[/en]\\n     *   [ja]現在表示されているons-carousel-item要素のインデックスを返します。[/ja]\\n     */\\n\\n  }, {\\n    key: 'getActiveIndex',\\n    value: function getActiveIndex() {\\n      var scroll = this._scroll - (this._offset || 0);\\n      var count = this.itemCount;\\n      var size = this._getCarouselItemSize();\\n\\n      if (scroll < 0) {\\n        return 0;\\n      }\\n\\n      var i = void 0;\\n      for (i = 0; i < count; i++) {\\n        if (size * i <= scroll && size * (i + 1) > scroll) {\\n          return i;\\n        }\\n      }\\n\\n      // max carousel index\\n      return i;\\n    }\\n\\n    /**\\n     * @method next\\n     * @signature next([options])\\n     * @param {Object} [options]\\n     *   [en]Parameter object.[/en]\\n     *   [ja][/ja]\\n     * @param {Function} [options.callback]\\n     *   [en]A function that will be executed after the animation has finished.[/en]\\n     *   [ja][/ja]\\n     * @param {String} [options.animation]\\n     *   [en]If this attribute is set to `\\\"none\\\"` the transitions will not be animated.[/en]\\n     *   [ja][/ja]\\n     * @param {Object} [options.animationOptions]\\n     *   [en]An object that can be used to specify the duration, delay and timing function of the animation.[/en]\\n     *   [ja][/ja]\\n     * @return {Promise}\\n     *   [en]Resolves to the carousel element[/en]\\n     *   [ja][/ja]\\n     * @description\\n     *   [en]Show next `<ons-carousel-item>`.[/en]\\n     *   [ja]次のons-carousel-itemを表示します。[/ja]\\n     */\\n\\n  }, {\\n    key: 'next',\\n    value: function next(options) {\\n      return this.setActiveIndex(this.getActiveIndex() + 1, options);\\n    }\\n\\n    /**\\n     * @method prev\\n     * @signature prev([options])\\n     * @param {Object} [options]\\n     *   [en]Parameter object.[/en]\\n     *   [ja][/ja]\\n     * @param {Function} [options.callback]\\n     *   [en]A function that will be executed after the animation has finished.[/en]\\n     *   [ja][/ja]\\n     * @param {String} [options.animation]\\n     *   [en]If this attribute is set to `\\\"none\\\"` the transitions will not be animated.[/en]\\n     *   [ja][/ja]\\n     * @param {Object} [options.animationOptions]\\n     *   [en]An object that can be used to specify the duration, delay and timing function of the animation.[/en]\\n     *   [ja][/ja]\\n     * @return {Promise}\\n     *   [en]Resolves to the carousel element[/en]\\n     *   [ja][/ja]\\n     * @description\\n     *   [en]Show previous `<ons-carousel-item>`.[/en]\\n     *   [ja]前のons-carousel-itemを表示します。[/ja]\\n     */\\n\\n  }, {\\n    key: 'prev',\\n    value: function prev(options) {\\n      return this.setActiveIndex(this.getActiveIndex() - 1, options);\\n    }\\n\\n    /**\\n     * @return {Boolean}\\n     */\\n\\n  }, {\\n    key: '_isEnabledChangeEvent',\\n    value: function _isEnabledChangeEvent() {\\n      var elementSize = this._getElementSize();\\n      var carouselItemSize = this._getCarouselItemSize();\\n\\n      return this.autoScroll && Math.abs(elementSize - carouselItemSize) < 0.5;\\n    }\\n\\n    /**\\n     * @return {Boolean}\\n     */\\n\\n  }, {\\n    key: '_isVertical',\\n    value: function _isVertical() {\\n      return this.getAttribute('direction') === 'vertical';\\n    }\\n  }, {\\n    key: '_prepareEventListeners',\\n    value: function _prepareEventListeners() {\\n      var _this3 = this;\\n\\n      this._gestureDetector = new GestureDetector(this, {\\n        dragMinDistance: 1,\\n        dragLockToAxis: true\\n      });\\n      this._mutationObserver = new MutationObserver(function () {\\n        return _this3.refresh();\\n      });\\n\\n      this._updateSwipeable();\\n      this._updateAutoRefresh();\\n\\n      window.addEventListener('resize', this._boundOnResize, true);\\n    }\\n  }, {\\n    key: '_removeEventListeners',\\n    value: function _removeEventListeners() {\\n      this._gestureDetector.dispose();\\n      this._gestureDetector = null;\\n\\n      this._mutationObserver.disconnect();\\n      this._mutationObserver = null;\\n\\n      window.removeEventListener('resize', this._boundOnResize, true);\\n    }\\n  }, {\\n    key: '_updateSwipeable',\\n    value: function _updateSwipeable() {\\n      if (this._gestureDetector) {\\n        if (this.swipeable) {\\n          this._gestureDetector.on('drag dragleft dragright dragup dragdown swipe swipeleft swiperight swipeup swipedown', this._boundOnDrag);\\n          this._gestureDetector.on('dragend', this._boundOnDragEnd);\\n        } else {\\n          this._gestureDetector.off('drag dragleft dragright dragup dragdown swipe swipeleft swiperight swipeup swipedown', this._boundOnDrag);\\n          this._gestureDetector.off('dragend', this._boundOnDragEnd);\\n        }\\n      }\\n    }\\n  }, {\\n    key: '_updateAutoRefresh',\\n    value: function _updateAutoRefresh() {\\n      if (this._mutationObserver) {\\n        if (this.hasAttribute('auto-refresh')) {\\n          this._mutationObserver.observe(this, { childList: true });\\n        } else {\\n          this._mutationObserver.disconnect();\\n        }\\n      }\\n    }\\n  }, {\\n    key: '_tryFirePostChangeEvent',\\n    value: function _tryFirePostChangeEvent() {\\n      var currentIndex = this.getActiveIndex();\\n\\n      if (this._lastActiveIndex !== currentIndex) {\\n        var lastActiveIndex = this._lastActiveIndex;\\n        this._lastActiveIndex = currentIndex;\\n\\n        util.triggerElementEvent(this, 'postchange', {\\n          carousel: this,\\n          activeIndex: currentIndex,\\n          lastActiveIndex: lastActiveIndex\\n        });\\n      }\\n    }\\n  }, {\\n    key: '_isWrongDirection',\\n    value: function _isWrongDirection(d) {\\n      // this._lastDragDirection = d;\\n      return this._isVertical() ? d === 'left' || d === 'right' : d === 'up' || d === 'down';\\n    }\\n  }, {\\n    key: '_onDrag',\\n    value: function _onDrag(event) {\\n      if (this._isWrongDirection(event.gesture.direction) || event.target && event.target.tagName.toLowerCase() === 'input' && event.target.type === 'range') {\\n        return;\\n      }\\n\\n      event.stopPropagation();\\n\\n      this._lastDragEvent = event;\\n\\n      var scroll = this._scroll - this._getScrollDelta(event);\\n      this._scrollTo(scroll);\\n      event.gesture.preventDefault();\\n\\n      this._tryFirePostChangeEvent();\\n    }\\n  }, {\\n    key: '_onDragEnd',\\n    value: function _onDragEnd(event) {\\n      var _this4 = this;\\n\\n      if (!this._lastDragEvent) {\\n        return;\\n      }\\n      this._currentElementSize = undefined;\\n      this._scroll = this._scroll - this._getScrollDelta(event);\\n\\n      // if (!this._isWrongDirection(this._lastDragDirection) && this._getScrollDelta(event) !== 0) {\\n      //   event.stopPropagation();\\n      // }\\n\\n      if (this._isOverScroll(this._scroll)) {\\n        var waitForAction = false;\\n        util.triggerElementEvent(this, 'overscroll', {\\n          carousel: this,\\n          activeIndex: this.getActiveIndex(),\\n          direction: this._getOverScrollDirection(),\\n          waitToReturn: function waitToReturn(promise) {\\n            waitForAction = true;\\n            promise.then(function () {\\n              return _this4._scrollToKillOverScroll();\\n            });\\n          }\\n        });\\n\\n        if (!waitForAction) {\\n          this._scrollToKillOverScroll();\\n        }\\n      } else {\\n        this._startMomentumScroll();\\n      }\\n      this._lastDragEvent = null;\\n\\n      event.gesture.preventDefault();\\n    }\\n\\n    /**\\n     * @param {Object} trait\\n     */\\n\\n  }, {\\n    key: '_mixin',\\n    value: function _mixin(trait) {\\n      Object.keys(trait).forEach(function (key) {\\n        this[key] = trait[key];\\n      }.bind(this));\\n    }\\n  }, {\\n    key: '_startMomentumScroll',\\n    value: function _startMomentumScroll() {\\n      if (this._lastDragEvent) {\\n        var velocity = this._getScrollVelocity(this._lastDragEvent);\\n        var duration = 0.3;\\n        var scrollDelta = duration * 100 * velocity;\\n        var scroll = this._normalizeScrollPosition(this._scroll + (this._getScrollDelta(this._lastDragEvent) > 0 ? -scrollDelta : scrollDelta));\\n\\n        this._scroll = scroll;\\n\\n        Animit(this._getCarouselItemElements()).queue({\\n          transform: this._generateScrollTransform(this._scroll)\\n        }, {\\n          duration: duration,\\n          timing: 'cubic-bezier(.1, .7, .1, 1)'\\n        }).queue(function (done) {\\n          done();\\n          this._tryFirePostChangeEvent();\\n        }.bind(this)).play();\\n      }\\n    }\\n  }, {\\n    key: '_normalizeScrollPosition',\\n    value: function _normalizeScrollPosition(scroll) {\\n      var max = this._calculateMaxScroll();\\n\\n      if (!this.autoScroll) {\\n        return Math.max(0, Math.min(max, scroll));\\n      }\\n      var arr = [];\\n      var size = this._getCarouselItemSize();\\n      var nbrOfItems = this.itemCount;\\n\\n      for (var i = 0; i < nbrOfItems; i++) {\\n        if (i * size + this._offset < max) {\\n          arr.push(i * size + this._offset);\\n        }\\n      }\\n      arr.push(max);\\n\\n      arr.sort(function (left, right) {\\n        left = Math.abs(left - scroll);\\n        right = Math.abs(right - scroll);\\n\\n        return left - right;\\n      });\\n\\n      arr = arr.filter(function (item, pos) {\\n        return !pos || item != arr[pos - 1];\\n      });\\n\\n      var lastScroll = this._lastActiveIndex * size + this._offset;\\n      var scrollRatio = Math.abs(scroll - lastScroll) / size;\\n      var result = arr[0];\\n\\n      if (scrollRatio <= this.autoScrollRatio) {\\n        result = lastScroll;\\n      } else if (scrollRatio < 1.0) {\\n        if (arr[0] === lastScroll && arr.length > 1) {\\n          result = arr[1];\\n        }\\n      }\\n\\n      return Math.max(0, Math.min(max, result));\\n    }\\n\\n    /**\\n     * @return {Array}\\n     */\\n\\n  }, {\\n    key: '_getCarouselItemElements',\\n    value: function _getCarouselItemElements() {\\n      return util.arrayFrom(this.children).filter(function (child) {\\n        return child.nodeName.toLowerCase() === 'ons-carousel-item';\\n      });\\n    }\\n\\n    /**\\n     * @param {Number} scroll\\n     * @param {Object} [options]\\n     * @return {Promise} Resolves to the carousel element\\n     */\\n\\n  }, {\\n    key: '_scrollTo',\\n    value: function _scrollTo(scroll) {\\n      var _this5 = this;\\n\\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\\n\\n      var isOverscrollable = this.overscrollable;\\n\\n      var normalizeScroll = function normalizeScroll(scroll) {\\n        var ratio = 0.35;\\n\\n        if (scroll < 0) {\\n          return isOverscrollable ? Math.round(scroll * ratio) : 0;\\n        }\\n\\n        var maxScroll = _this5._calculateMaxScroll();\\n        if (maxScroll < scroll) {\\n          return isOverscrollable ? maxScroll + Math.round((scroll - maxScroll) * ratio) : maxScroll;\\n        }\\n\\n        return scroll;\\n      };\\n\\n      return new Promise(function (resolve) {\\n        Animit(_this5._getCarouselItemElements()).queue({\\n          transform: _this5._generateScrollTransform(normalizeScroll(scroll))\\n        }, options.animation !== 'none' ? options.animationOptions : {}).play(function () {\\n          if (options.callback instanceof Function) {\\n            options.callback();\\n          }\\n          resolve();\\n        });\\n      });\\n    }\\n  }, {\\n    key: '_calculateMaxScroll',\\n    value: function _calculateMaxScroll() {\\n      var max = this.itemCount * this._getCarouselItemSize() - this._getElementSize();\\n      return Math.ceil(max < 0 ? 0 : max); // Need to return an integer value.\\n    }\\n  }, {\\n    key: '_isOverScroll',\\n    value: function _isOverScroll(scroll) {\\n      if (scroll < 0 || scroll > this._calculateMaxScroll()) {\\n        return true;\\n      }\\n      return false;\\n    }\\n  }, {\\n    key: '_getOverScrollDirection',\\n    value: function _getOverScrollDirection() {\\n      if (this._isVertical()) {\\n        return this._scroll <= 0 ? 'up' : 'down';\\n      } else {\\n        return this._scroll <= 0 ? 'left' : 'right';\\n      }\\n    }\\n  }, {\\n    key: '_scrollToKillOverScroll',\\n    value: function _scrollToKillOverScroll() {\\n      var duration = 0.4;\\n\\n      if (this._scroll < 0) {\\n        Animit(this._getCarouselItemElements()).queue({\\n          transform: this._generateScrollTransform(0)\\n        }, {\\n          duration: duration,\\n          timing: 'cubic-bezier(.1, .4, .1, 1)'\\n        }).queue(function (done) {\\n          done();\\n          this._tryFirePostChangeEvent();\\n        }.bind(this)).play();\\n        this._scroll = 0;\\n        return;\\n      }\\n\\n      var maxScroll = this._calculateMaxScroll();\\n\\n      if (maxScroll < this._scroll) {\\n        Animit(this._getCarouselItemElements()).queue({\\n          transform: this._generateScrollTransform(maxScroll)\\n        }, {\\n          duration: duration,\\n          timing: 'cubic-bezier(.1, .4, .1, 1)'\\n        }).queue(function (done) {\\n          done();\\n          this._tryFirePostChangeEvent();\\n        }.bind(this)).play();\\n        this._scroll = maxScroll;\\n        return;\\n      }\\n\\n      return;\\n    }\\n\\n    /**\\n     * @property itemCount\\n     * @readonly\\n     * @type {Number}\\n     * @description\\n     *   [en]The number of carousel items.[/en]\\n     *   [ja]カルーセル要素の数です。[/ja]\\n     */\\n\\n  }, {\\n    key: 'refresh',\\n\\n\\n    /**\\n     * @method refresh\\n     * @signature refresh()\\n     * @description\\n     *   [en]Update the layout of the carousel. Used when adding `<ons-carousel-items>` dynamically or to automatically adjust the size.[/en]\\n     *   [ja]レイアウトや内部の状態を最新のものに更新します。ons-carousel-itemを動的に増やしたり、ons-carouselの大きさを動的に変える際に利用します。[/ja]\\n     */\\n    value: function refresh() {\\n      // Bug fix\\n      if (this._getCarouselItemSize() === 0) {\\n        return;\\n      }\\n\\n      this._mixin(this._isVertical() ? VerticalModeTrait : HorizontalModeTrait);\\n      this._setup();\\n\\n      if (this._lastState && this._lastState.width > 0) {\\n        var scroll = this._scroll; // - this._offset;\\n\\n        if (this._isOverScroll(scroll)) {\\n          this._scrollToKillOverScroll();\\n        } else {\\n          if (this.autoScroll) {\\n            scroll = this._normalizeScrollPosition(scroll);\\n          }\\n\\n          this._scrollTo(scroll);\\n        }\\n      }\\n\\n      this._saveLastState();\\n\\n      util.triggerElementEvent(this, 'refresh', { carousel: this });\\n    }\\n\\n    /**\\n     * @method first\\n     * @signature first()\\n     * @param {Object} [options]\\n     *   [en]Parameter object.[/en]\\n     *   [ja][/ja]\\n     * @param {Function} [options.callback]\\n     *   [en]A function that will be executed after the animation has finished.[/en]\\n     *   [ja][/ja]\\n     * @param {String} [options.animation]\\n     *   [en]If this is set to `\\\"none\\\"`, the transitions will not be animated.[/en]\\n     *   [ja][/ja]\\n     * @param {Object} [options.animationOptions]\\n     *   [en]An object that can be used to specify the duration, delay and timing function of the animation.[/en]\\n     *   [ja][/ja]\\n     * @return {Promise}\\n     *   [en]Resolves to the carousel element[/en]\\n     *   [ja][/ja]\\n     * @description\\n     *   [en]Show first `<ons-carousel-item>`.[/en]\\n     *   [ja]最初のons-carousel-itemを表示します。[/ja]\\n     */\\n\\n  }, {\\n    key: 'first',\\n    value: function first(options) {\\n      return this.setActiveIndex(0, options);\\n    }\\n\\n    /**\\n     * @method last\\n     * @signature last()\\n     * @param {Object} [options]\\n     *   [en]Parameter object.[/en]\\n     *   [ja][/ja]\\n     * @param {Function} [options.callback]\\n     *   [en]A function that will be executed after the animation has finished.[/en]\\n     *   [ja][/ja]\\n     * @param {String} [options.animation]\\n     *   [en]If this attribute is set to `\\\"none\\\"` the transitions will not be animated.[/en]\\n     *   [ja][/ja]\\n     * @param {Object} [options.animationOptions]\\n     *   [en]An object that can be used to specify the duration, delay and timing function of the animation.[/en]\\n     *   [ja][/ja]\\n     * @return {Promise}\\n     *   [en]Resolves to the carousel element[/en]\\n     *   [ja]Resolves to the carousel element[/ja]\\n     * @description\\n     *   [en]Show last ons-carousel item.[/en]\\n     *   [ja]最後のons-carousel-itemを表示します。[/ja]\\n     */\\n\\n  }, {\\n    key: 'last',\\n    value: function last(options) {\\n      this.setActiveIndex(Math.max(this.itemCount - 1, 0), options);\\n    }\\n  }, {\\n    key: 'connectedCallback',\\n    value: function connectedCallback() {\\n      var _this6 = this;\\n\\n      this._prepareEventListeners();\\n\\n      this._setup();\\n      this._setupInitialIndex();\\n\\n      this._saveLastState();\\n\\n      // Fix rendering glitch on Android 4.1\\n      if (this.offsetHeight === 0) {\\n        setImmediate(function () {\\n          return _this6.refresh();\\n        });\\n      }\\n    }\\n  }, {\\n    key: 'attributeChangedCallback',\\n    value: function attributeChangedCallback(name, last, current) {\\n      switch (name) {\\n        case 'swipeable':\\n          this._updateSwipeable();\\n          break;\\n        case 'auto-refresh':\\n          this._updateAutoRefresh();\\n          break;\\n        case 'direction':\\n          this._onDirectionChange();\\n      }\\n    }\\n  }, {\\n    key: 'disconnectedCallback',\\n    value: function disconnectedCallback() {\\n      this._removeEventListeners();\\n    }\\n\\n    /**\\n     * @property autoScrollRatio\\n     * @type {Number}\\n     * @description\\n     *   [en]The current auto scroll ratio. [/en]\\n     *   [ja]現在のオートスクロールのratio値。[/ja]\\n     */\\n\\n  }, {\\n    key: 'itemCount',\\n    get: function get() {\\n      return this._getCarouselItemElements().length;\\n    }\\n  }, {\\n    key: 'autoScrollRatio',\\n    get: function get() {\\n      var attr = this.getAttribute('auto-scroll-ratio');\\n\\n      if (!attr) {\\n        return 0.5;\\n      }\\n\\n      var scrollRatio = parseFloat(attr);\\n      if (scrollRatio < 0.0 || scrollRatio > 1.0) {\\n        throw new Error('Invalid ratio.');\\n      }\\n\\n      return isNaN(scrollRatio) ? 0.5 : scrollRatio;\\n    },\\n    set: function set(ratio) {\\n      if (ratio < 0.0 || ratio > 1.0) {\\n        throw new Error('Invalid ratio.');\\n      }\\n\\n      this.setAttribute('auto-scroll-ratio', ratio);\\n    }\\n\\n    /**\\n     * @property swipeable\\n     * @type {Boolean}\\n     * @description\\n     *   [en]true if the carousel is swipeable.[/en]\\n     *   [ja]swipeableであればtrueを返します。[/ja]\\n     */\\n\\n  }, {\\n    key: 'swipeable',\\n    get: function get() {\\n      return this.hasAttribute('swipeable');\\n    },\\n    set: function set(value) {\\n      return util.toggleAttribute(this, 'swipeable', value);\\n    }\\n\\n    /**\\n     * @property autoScroll\\n     * @type {Boolean}\\n     * @description\\n     *   [en]true if auto scroll is enabled.[/en]\\n     *   [ja]オートスクロールが有効であればtrueを返します。[/ja]\\n     */\\n\\n  }, {\\n    key: 'autoScroll',\\n    get: function get() {\\n      return this.hasAttribute('auto-scroll');\\n    },\\n    set: function set(value) {\\n      return util.toggleAttribute(this, 'auto-scroll', value);\\n    }\\n\\n    /**\\n     * @property disabled\\n     * @type {Boolean}\\n     * @description\\n     *   [en]Whether the carousel is disabled or not.[/en]\\n     *   [ja]無効化されている場合に`true`。[/ja]\\n     */\\n\\n  }, {\\n    key: 'disabled',\\n    get: function get() {\\n      return this.hasAttribute('disabled');\\n    },\\n    set: function set(value) {\\n      return util.toggleAttribute(this, 'disabled', value);\\n    }\\n\\n    /**\\n     * @property overscrollable\\n     * @type {Boolean}\\n     * @description\\n     *   [en]Whether the carousel is overscrollable or not.[/en]\\n     *   [ja]overscrollできればtrueを返します。[/ja]\\n     */\\n\\n  }, {\\n    key: 'overscrollable',\\n    get: function get() {\\n      return this.hasAttribute('overscrollable');\\n    },\\n    set: function set(value) {\\n      return util.toggleAttribute(this, 'overscrollable', value);\\n    }\\n\\n    /**\\n     * @property centered\\n     * @type {Boolean}\\n     * @description\\n     *   [en]Whether the carousel is centered or not.[/en]\\n     *   [ja]centered状態になっていればtrueを返します。[/ja]\\n     */\\n\\n  }, {\\n    key: 'centered',\\n    get: function get() {\\n      return this.hasAttribute('centered');\\n    },\\n    set: function set(value) {\\n      return util.toggleAttribute(this, 'centered', value);\\n    }\\n  }], [{\\n    key: 'observedAttributes',\\n    get: function get() {\\n      return ['swipeable', 'auto-refresh', 'direction'];\\n    }\\n  }, {\\n    key: 'events',\\n    get: function get() {\\n      return ['postchange', 'refresh', 'overscroll'];\\n    }\\n  }]);\\n  return CarouselElement;\\n}(BaseElement);\\n\\ncustomElements.define('ons-carousel', CarouselElement);\\n\\n/*\\nCopyright 2013-2015 ASIAL CORPORATION\\n\\nLicensed under the Apache License, Version 2.0 (the \\\"License\\\");\\nyou may not use this file except in compliance with the License.\\nYou may obtain a copy of the License at\\n\\n   http://www.apache.org/licenses/LICENSE-2.0\\n\\nUnless required by applicable law or agreed to in writing, software\\ndistributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\nSee the License for the specific language governing permissions and\\nlimitations under the License.\\n\\n*/\\n\\n/**\\n * @element ons-col\\n * @category grid\\n * @description\\n *   [en]Represents a column in the grid system. Use with `<ons-row>` to layout components.[/en]\\n *   [ja]グリッドシステムにて列を定義します。ons-rowとともに使用し、コンポーネントのレイアウトに利用します。[/ja]\\n * @note\\n *   [en]For Android 4.3 and earlier, and iOS6 and earlier, when using mixed alignment with ons-row and ons-column, they may not be displayed correctly. You can use only one alignment.[/en]\\n *   [ja]Android 4.3以前、もしくはiOS 6以前のOSの場合、ons-rowとons-columnを組み合わせた場合に描画が崩れる場合があります。[/ja]\\n * @codepen GgujC {wide}\\n * @guide layouting [en]Layouting guide[/en][ja]レイアウト機能[/ja]\\n * @seealso ons-row\\n *   [en]The `<ons-row>` component is the parent of `<ons-col>`.[/en]\\n *   [ja]ons-rowコンポーネント[/ja]\\n * @example\\n * <ons-row>\\n *   <ons-col width=\\\"50px\\\"><ons-icon icon=\\\"fa-twitter\\\"></ons-icon></ons-col>\\n *   <ons-col>Text</ons-col>\\n * </ons-row>\\n */\\n\\n/**\\n * @attribute vertical-align\\n * @type {String}\\n * @description\\n *   [en]Vertical alignment of the column. Valid values are \\\"top\\\", \\\"center\\\", and \\\"bottom\\\".[/en]\\n *   [ja]縦の配置を指定する。\\\"top\\\", \\\"center\\\", \\\"bottom\\\"のいずれかを指定します。[/ja]\\n */\\n\\n/**\\n * @attribute width\\n * @type {String}\\n * @description\\n *   [en]The width of the column. Valid values are css width values (\\\"10%\\\", \\\"50px\\\").[/en]\\n *   [ja]カラムの横幅を指定する。パーセントもしくはピクセルで指定します（10%や50px）。[/ja]\\n */\\n\\nvar ColElement = function (_BaseElement) {\\n  inherits(ColElement, _BaseElement);\\n\\n  function ColElement() {\\n    classCallCheck(this, ColElement);\\n    return possibleConstructorReturn(this, (ColElement.__proto__ || Object.getPrototypeOf(ColElement)).apply(this, arguments));\\n  }\\n\\n  createClass(ColElement, [{\\n    key: 'init',\\n    value: function init() {\\n      if (this.getAttribute('width')) {\\n        this._updateWidth();\\n      }\\n    }\\n  }, {\\n    key: 'attributeChangedCallback',\\n    value: function attributeChangedCallback(name, last, current) {\\n      if (name === 'width') {\\n        this._updateWidth();\\n      }\\n    }\\n  }, {\\n    key: '_updateWidth',\\n    value: function _updateWidth() {\\n      var width = this.getAttribute('width');\\n      if (typeof width === 'string') {\\n        width = ('' + width).trim();\\n        width = width.match(/^\\\\d+$/) ? width + '%' : width;\\n\\n        this.style.webkitBoxFlex = '0';\\n        this.style.webkitFlex = '0 0 ' + width;\\n        this.style.mozBoxFlex = '0';\\n        this.style.mozFlex = '0 0 ' + width;\\n        this.style.msFlex = '0 0 ' + width;\\n        this.style.flex = '0 0 ' + width;\\n        this.style.maxWidth = width;\\n      }\\n    }\\n  }], [{\\n    key: 'observedAttributes',\\n    get: function get() {\\n      return ['width'];\\n    }\\n  }]);\\n  return ColElement;\\n}(BaseElement);\\n\\ncustomElements.define('ons-col', ColElement);\\n\\n/*\\nCopyright 2013-2015 ASIAL CORPORATION\\n\\nLicensed under the Apache License, Version 2.0 (the \\\"License\\\");\\nyou may not use this file except in compliance with the License.\\nYou may obtain a copy of the License at\\n\\n   http://www.apache.org/licenses/LICENSE-2.0\\n\\nUnless required by applicable law or agreed to in writing, software\\ndistributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\nSee the License for the specific language governing permissions and\\nlimitations under the License.\\n\\n*/\\n\\nvar DialogAnimator = function (_BaseAnimator) {\\n  inherits(DialogAnimator, _BaseAnimator);\\n\\n  function DialogAnimator() {\\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\\n        _ref$timing = _ref.timing,\\n        timing = _ref$timing === undefined ? 'linear' : _ref$timing,\\n        _ref$delay = _ref.delay,\\n        delay = _ref$delay === undefined ? 0 : _ref$delay,\\n        _ref$duration = _ref.duration,\\n        duration = _ref$duration === undefined ? 0.2 : _ref$duration;\\n\\n    classCallCheck(this, DialogAnimator);\\n    return possibleConstructorReturn(this, (DialogAnimator.__proto__ || Object.getPrototypeOf(DialogAnimator)).call(this, { timing: timing, delay: delay, duration: duration }));\\n  }\\n\\n  /**\\n   * @param {HTMLElement} dialog\\n   * @param {Function} done\\n   */\\n\\n\\n  createClass(DialogAnimator, [{\\n    key: 'show',\\n    value: function show(dialog, done) {\\n      done();\\n    }\\n\\n    /**\\n     * @param {HTMLElement} dialog\\n     * @param {Function} done\\n     */\\n\\n  }, {\\n    key: 'hide',\\n    value: function hide(dialog, done) {\\n      done();\\n    }\\n  }]);\\n  return DialogAnimator;\\n}(BaseAnimator);\\n\\n/**\\n * Android style animator for dialog.\\n */\\nvar AndroidDialogAnimator = function (_DialogAnimator) {\\n  inherits(AndroidDialogAnimator, _DialogAnimator);\\n\\n  function AndroidDialogAnimator() {\\n    var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\\n        _ref2$timing = _ref2.timing,\\n        timing = _ref2$timing === undefined ? 'ease-in-out' : _ref2$timing,\\n        _ref2$delay = _ref2.delay,\\n        delay = _ref2$delay === undefined ? 0 : _ref2$delay,\\n        _ref2$duration = _ref2.duration,\\n        duration = _ref2$duration === undefined ? 0.3 : _ref2$duration;\\n\\n    classCallCheck(this, AndroidDialogAnimator);\\n    return possibleConstructorReturn(this, (AndroidDialogAnimator.__proto__ || Object.getPrototypeOf(AndroidDialogAnimator)).call(this, { timing: timing, delay: delay, duration: duration }));\\n  }\\n\\n  /**\\n   * @param {Object} dialog\\n   * @param {Function} callback\\n   */\\n\\n\\n  createClass(AndroidDialogAnimator, [{\\n    key: 'show',\\n    value: function show(dialog, callback) {\\n      callback = callback ? callback : function () {};\\n\\n      Animit.runAll(Animit(dialog._mask).queue({\\n        opacity: 0\\n      }).wait(this.delay).queue({\\n        opacity: 1.0\\n      }, {\\n        duration: this.duration,\\n        timing: this.timing\\n      }), Animit(dialog._dialog).saveStyle().queue({\\n        css: {\\n          transform: 'translate3d(-50%, -60%, 0)',\\n          opacity: 0.0\\n        },\\n        duration: 0\\n      }).wait(this.delay).queue({\\n        css: {\\n          transform: 'translate3d(-50%, -50%, 0)',\\n          opacity: 1.0\\n        },\\n        duration: this.duration,\\n        timing: this.timing\\n      }).restoreStyle().queue(function (done) {\\n        callback();\\n        done();\\n      }));\\n    }\\n\\n    /**\\n     * @param {Object} dialog\\n     * @param {Function} callback\\n     */\\n\\n  }, {\\n    key: 'hide',\\n    value: function hide(dialog, callback) {\\n      callback = callback ? callback : function () {};\\n\\n      Animit.runAll(Animit(dialog._mask).queue({\\n        opacity: 1.0\\n      }).wait(this.delay).queue({\\n        opacity: 0\\n      }, {\\n        duration: this.duration,\\n        timing: this.timing\\n      }), Animit(dialog._dialog).saveStyle().queue({\\n        css: {\\n          transform: 'translate3d(-50%, -50%, 0)',\\n          opacity: 1.0\\n        },\\n        duration: 0\\n      }).wait(this.delay).queue({\\n        css: {\\n          transform: 'translate3d(-50%, -60%, 0)',\\n          opacity: 0.0\\n        },\\n        duration: this.duration,\\n        timing: this.timing\\n      }).restoreStyle().queue(function (done) {\\n        callback();\\n        done();\\n      }));\\n    }\\n  }]);\\n  return AndroidDialogAnimator;\\n}(DialogAnimator);\\n\\n/**\\n * iOS style animator for dialog.\\n */\\nvar IOSDialogAnimator = function (_DialogAnimator2) {\\n  inherits(IOSDialogAnimator, _DialogAnimator2);\\n\\n  function IOSDialogAnimator() {\\n    var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\\n        _ref3$timing = _ref3.timing,\\n        timing = _ref3$timing === undefined ? 'ease-in-out' : _ref3$timing,\\n        _ref3$delay = _ref3.delay,\\n        delay = _ref3$delay === undefined ? 0 : _ref3$delay,\\n        _ref3$duration = _ref3.duration,\\n        duration = _ref3$duration === undefined ? 0.2 : _ref3$duration;\\n\\n    classCallCheck(this, IOSDialogAnimator);\\n\\n    var _this3 = possibleConstructorReturn(this, (IOSDialogAnimator.__proto__ || Object.getPrototypeOf(IOSDialogAnimator)).call(this, { timing: timing, delay: delay, duration: duration }));\\n\\n    _this3.bodyHeight = document.body.clientHeight; // avoid Forced Synchronous Layout\\n    return _this3;\\n  }\\n\\n  /**\\n   * @param {Object} dialog\\n   * @param {Function} callback\\n   */\\n\\n\\n  createClass(IOSDialogAnimator, [{\\n    key: 'show',\\n    value: function show(dialog, callback) {\\n      callback = callback ? callback : function () {};\\n\\n      Animit.runAll(Animit(dialog._mask).queue({\\n        opacity: 0\\n      }).wait(this.delay).queue({\\n        opacity: 1.0\\n      }, {\\n        duration: this.duration,\\n        timing: this.timing\\n      }), Animit(dialog._dialog).saveStyle().queue({\\n        css: {\\n          transform: 'translate3d(-50%, ' + (this.bodyHeight / 2.0 - 1) + 'px, 0)'\\n        },\\n        duration: 0\\n      }).wait(this.delay).queue({\\n        css: {\\n          transform: 'translate3d(-50%, -50%, 0)'\\n        },\\n        duration: this.duration,\\n        timing: this.timing\\n      }).restoreStyle().queue(function (done) {\\n        callback();\\n        done();\\n      }));\\n    }\\n\\n    /**\\n     * @param {Object} dialog\\n     * @param {Function} callback\\n     */\\n\\n  }, {\\n    key: 'hide',\\n    value: function hide(dialog, callback) {\\n      callback = callback ? callback : function () {};\\n\\n      Animit.runAll(Animit(dialog._mask).queue({\\n        opacity: 1.0\\n      }).wait(this.delay).queue({\\n        opacity: 0\\n      }, {\\n        duration: this.duration,\\n        timing: this.timing\\n      }), Animit(dialog._dialog).saveStyle().queue({\\n        css: {\\n          transform: 'translate3d(-50%, -50%, 0)'\\n        },\\n        duration: 0\\n      }).wait(this.delay).queue({\\n        css: {\\n          transform: 'translate3d(-50%, ' + (this.bodyHeight / 2.0 - 1) + 'px, 0)'\\n        },\\n        duration: this.duration,\\n        timing: this.timing\\n      }).restoreStyle().queue(function (done) {\\n        callback();\\n        done();\\n      }));\\n    }\\n  }]);\\n  return IOSDialogAnimator;\\n}(DialogAnimator);\\n\\n/**\\n * Slide animator for dialog.\\n */\\nvar SlideDialogAnimator = function (_DialogAnimator3) {\\n  inherits(SlideDialogAnimator, _DialogAnimator3);\\n\\n  function SlideDialogAnimator() {\\n    var _ref4 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\\n        _ref4$timing = _ref4.timing,\\n        timing = _ref4$timing === undefined ? 'cubic-bezier(.1, .7, .4, 1)' : _ref4$timing,\\n        _ref4$delay = _ref4.delay,\\n        delay = _ref4$delay === undefined ? 0 : _ref4$delay,\\n        _ref4$duration = _ref4.duration,\\n        duration = _ref4$duration === undefined ? 0.2 : _ref4$duration;\\n\\n    classCallCheck(this, SlideDialogAnimator);\\n\\n    var _this4 = possibleConstructorReturn(this, (SlideDialogAnimator.__proto__ || Object.getPrototypeOf(SlideDialogAnimator)).call(this, { timing: timing, delay: delay, duration: duration }));\\n\\n    _this4.bodyHeight = document.body.clientHeight; // avoid Forced Synchronous Layout\\n    return _this4;\\n  }\\n\\n  /**\\n   * @param {Object} dialog\\n   * @param {Function} callback\\n   */\\n\\n\\n  createClass(SlideDialogAnimator, [{\\n    key: 'show',\\n    value: function show(dialog, callback) {\\n      callback = callback ? callback : function () {};\\n\\n      Animit.runAll(Animit(dialog._mask).queue({\\n        opacity: 0\\n      }).wait(this.delay).queue({\\n        opacity: 1.0\\n      }, {\\n        duration: this.duration,\\n        timing: this.timing\\n      }), Animit(dialog._dialog).saveStyle().queue({\\n        css: {\\n          // FIXME: This should avoid Forced Synchronous Layout. Otherwise, fade animation of mask will be broken.\\n          transform: 'translate3d(-50%, ' + (-(this.bodyHeight / 2.0) + 1 - dialog._dialog.clientHeight) + 'px, 0)'\\n        },\\n        duration: 0\\n      }).wait(this.delay).queue({\\n        css: {\\n          transform: 'translate3D(-50%, -50%, 0)'\\n        },\\n        duration: this.duration,\\n        timing: this.timing\\n      }).restoreStyle().queue(function (done) {\\n        callback();\\n        done();\\n      }));\\n    }\\n\\n    /**\\n     * @param {Object} dialog\\n     * @param {Function} callback\\n     */\\n\\n  }, {\\n    key: 'hide',\\n    value: function hide(dialog, callback) {\\n      callback = callback ? callback : function () {};\\n\\n      Animit.runAll(Animit(dialog._mask).queue({\\n        opacity: 1.0\\n      }).wait(this.delay).queue({\\n        opacity: 0\\n      }, {\\n        duration: this.duration,\\n        timing: this.timing\\n      }), Animit(dialog._dialog).saveStyle().queue({\\n        css: {\\n          transform: 'translate3D(-50%, -50%, 0)'\\n        },\\n        duration: 0\\n      }).wait(this.delay).queue({\\n        css: {\\n          // FIXME: This should avoid Forced Synchronous Layout. Otherwise, fade animation of mask will be broken.\\n          transform: 'translate3d(-50%, ' + (-(this.bodyHeight / 2.0) + 1 - dialog._dialog.clientHeight) + 'px, 0)'\\n        },\\n        duration: this.duration,\\n        timing: this.timing\\n      }).restoreStyle().queue(function (done) {\\n        callback();\\n        done();\\n      }));\\n    }\\n  }]);\\n  return SlideDialogAnimator;\\n}(DialogAnimator);\\n\\n/*\\nCopyright 2013-2015 ASIAL CORPORATION\\n\\nLicensed under the Apache License, Version 2.0 (the \\\"License\\\");\\nyou may not use this file except in compliance with the License.\\nYou may obtain a copy of the License at\\n\\n   http://www.apache.org/licenses/LICENSE-2.0\\n\\nUnless required by applicable law or agreed to in writing, software\\ndistributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\nSee the License for the specific language governing permissions and\\nlimitations under the License.\\n\\n*/\\n\\nvar scheme$5 = {\\n  '.dialog': 'dialog--*',\\n  '.dialog-container': 'dialog-container--*',\\n  '.dialog-mask': 'dialog-mask--*'\\n};\\n\\nvar _animatorDict$1 = {\\n  'default': function _default() {\\n    return platform.isAndroid() ? AndroidDialogAnimator : IOSDialogAnimator;\\n  },\\n  'slide': SlideDialogAnimator,\\n  'none': DialogAnimator\\n};\\n\\n/**\\n * @element ons-dialog\\n * @category dialog\\n * @description\\n *   [en]\\n *     Dialog that is displayed on top of current screen. As opposed to the `<ons-alert-dialog>` element, this component can contain any kind of content.\\n *\\n *     To use the element it can either be attached directly to the `<body>` element or dynamically created from a template using the `ons.createDialog(template)` utility function and the `<ons-template>` tag.\\n *\\n *     The dialog is useful for displaying menus, additional information or to ask the user to make a decision.\\n *\\n *     It will automatically be displayed as Material Design when running on an Android device.\\n *   [/en]\\n *   [ja][/ja]\\n * @modifier material\\n *   [en]Display a Material Design dialog.[/en]\\n *   [ja]マテリアルデザインのダイアログを表示します。[/ja]\\n * @codepen zxxaGa\\n * @tutorial vanilla/Reference/dialog\\n * @guide dialogs\\n *   [en]Dialog components[/en]\\n *   [ja]Dialog components[/ja]\\n * @guide using-modifier [en]More details about the `modifier` attribute[/en][ja]modifier属性の使い方[/ja]\\n * @seealso ons-alert-dialog\\n *   [en]`<ons-alert-dialog>` component[/en]\\n *   [ja]ons-alert-dialogコンポーネント[/ja]\\n * @seealso ons-popover\\n *   [en]`<ons-popover>` component[/en]\\n *   [ja]ons-popoverコンポーネント[/ja]\\n * @seealso ons-modal\\n *   [en]`<ons-modal>` component[/en]\\n *   [ja]ons-modalコンポーネント[/ja]\\n * @example\\n * <ons-dialog id=\\\"dialog\\\">\\n *   <p>This is a dialog!</p>\\n * </ons-dialog>\\n *\\n * <script>\\n *   document.getElementById('dialog').show();\\n * </script>\\n */\\n\\nvar DialogElement = function (_BaseElement) {\\n  inherits(DialogElement, _BaseElement);\\n\\n  function DialogElement() {\\n    classCallCheck(this, DialogElement);\\n    return possibleConstructorReturn(this, (DialogElement.__proto__ || Object.getPrototypeOf(DialogElement)).apply(this, arguments));\\n  }\\n\\n  createClass(DialogElement, [{\\n    key: 'init',\\n    value: function init() {\\n      var _this2 = this;\\n\\n      contentReady(this, function () {\\n        return _this2._compile();\\n      });\\n\\n      this._visible = false;\\n      this._doorLock = new DoorLock();\\n      this._boundCancel = function () {\\n        return _this2._cancel();\\n      };\\n\\n      this._updateAnimatorFactory();\\n    }\\n  }, {\\n    key: '_updateAnimatorFactory',\\n    value: function _updateAnimatorFactory() {\\n      this._animatorFactory = new AnimatorFactory({\\n        animators: _animatorDict$1,\\n        baseClass: DialogAnimator,\\n        baseClassName: 'DialogAnimator',\\n        defaultAnimation: this.getAttribute('animation')\\n      });\\n    }\\n  }, {\\n    key: '_compile',\\n    value: function _compile() {\\n      autoStyle.prepare(this);\\n\\n      this.style.display = 'none';\\n      this.style.zIndex = 10001;\\n\\n      /* Expected result:\\n       *   <ons-dialog>\\n       *     <div class=\\\"dialog-mask\\\"></div>\\n       *     <div class=\\\"dialog\\\">\\n       *       <div class=\\\"dialog-container\\\">...</div>\\n       *     </div>\\n       *   </ons-dialog>\\n       */\\n\\n      if (!this._dialog) {\\n        var dialog = document.createElement('div');\\n        dialog.classList.add('dialog');\\n\\n        var container = document.createElement('div');\\n        container.classList.add('dialog-container');\\n        while (this.firstChild) {\\n          container.appendChild(this.firstChild);\\n        }\\n        dialog.appendChild(container);\\n\\n        this.appendChild(dialog);\\n      }\\n\\n      if (!this._mask) {\\n        var mask = document.createElement('div');\\n        mask.classList.add('dialog-mask');\\n        this.insertBefore(mask, this.firstChild);\\n      }\\n\\n      this._dialog.style.zIndex = 20001;\\n      this._mask.style.zIndex = 20000;\\n\\n      this.setAttribute('status-bar-fill', '');\\n\\n      ModifierUtil.initModifier(this, scheme$5);\\n    }\\n\\n    /**\\n     * @property onDeviceBackButton\\n     * @type {Object}\\n     * @description\\n     *   [en]Back-button handler.[/en]\\n     *   [ja]バックボタンハンドラ。[/ja]\\n     */\\n\\n  }, {\\n    key: '_cancel',\\n    value: function _cancel() {\\n      var _this3 = this;\\n\\n      if (this.cancelable && !this._running) {\\n        this._running = true;\\n        this.hide().then(function () {\\n          _this3._running = false;\\n          util.triggerElementEvent(_this3, 'dialog-cancel');\\n        }, function () {\\n          return _this3._running = false;\\n        });\\n      }\\n    }\\n\\n    /**\\n     * @method show\\n     * @signature show([options])\\n     * @param {Object} [options]\\n     *   [en]Parameter object.[/en]\\n     *   [ja]オプションを指定するオブジェクト。[/ja]\\n     * @param {String} [options.animation]\\n     *   [en]Animation name. Available animations are `\\\"none\\\"` and `\\\"slide\\\"`.[/en]\\n     *   [ja]アニメーション名を指定します。\\\"none\\\", \\\"slide\\\"のいずれかを指定します。[/ja]\\n     * @param {String} [options.animationOptions]\\n     *   [en]Specify the animation's duration, delay and timing. E.g. `{duration: 0.2, delay: 0.4, timing: 'ease-in'}`.[/en]\\n     *   [ja]アニメーション時のduration, delay, timingを指定します。e.g. `{duration: 0.2, delay: 0.4, timing: 'ease-in'}` [/ja]\\n     * @param {Function} [options.callback]\\n     *   [en]This function is called after the dialog has been revealed.[/en]\\n     *   [ja]ダイアログが表示され終わった後に呼び出される関数オブジェクトを指定します。[/ja]\\n     * @description\\n     *  [en]Show the dialog.[/en]\\n     *  [ja]ダイアログを開きます。[/ja]\\n     * @return {Promise} Resolves to the displayed element.\\n     */\\n\\n  }, {\\n    key: 'show',\\n    value: function show() {\\n      var _this4 = this;\\n\\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n\\n      var _cancel2 = false;\\n      var callback = options.callback || function () {};\\n\\n      options.animationOptions = util.extend(options.animationOptions || {}, AnimatorFactory.parseAnimationOptionsString(this.getAttribute('animation-options')));\\n\\n      util.triggerElementEvent(this, 'preshow', {\\n        dialog: this,\\n        cancel: function cancel() {\\n          _cancel2 = true;\\n        }\\n      });\\n\\n      if (!_cancel2) {\\n        var tryShow = function tryShow() {\\n          var unlock = _this4._doorLock.lock();\\n          var animator = _this4._animatorFactory.newAnimator(options);\\n\\n          _this4.style.display = 'block';\\n          _this4._mask.style.opacity = '1';\\n\\n          return new Promise(function (resolve) {\\n            contentReady(_this4, function () {\\n              animator.show(_this4, function () {\\n                _this4._visible = true;\\n                unlock();\\n\\n                util.triggerElementEvent(_this4, 'postshow', { dialog: _this4 });\\n\\n                callback();\\n                resolve(_this4);\\n              });\\n            });\\n          });\\n        };\\n\\n        return new Promise(function (resolve) {\\n          _this4._doorLock.waitUnlock(function () {\\n            return resolve(tryShow());\\n          });\\n        });\\n      } else {\\n        return Promise.reject('Canceled in preshow event.');\\n      }\\n    }\\n\\n    /**\\n     * @method hide\\n     * @signature hide([options])\\n     * @param {Object} [options]\\n     *   [en]Parameter object.[/en]\\n     *   [ja]オプションを指定するオブジェクト。[/ja]\\n     * @param {String} [options.animation]\\n     *   [en]Animation name. Available animations are `\\\"none\\\"` and `\\\"slide\\\"`.[/en]\\n     *   [ja]アニメーション名を指定します。\\\"none\\\", \\\"slide\\\"のいずれかを指定できます。[/ja]\\n     * @param {String} [options.animationOptions]\\n     *   [en]Specify the animation's duration, delay and timing. E.g. `{duration: 0.2, delay: 0.4, timing: 'ease-in'}`.[/en]\\n     *   [ja]アニメーション時のduration, delay, timingを指定します。e.g. `{duration: 0.2, delay: 0.4, timing: 'ease-in'}`[/ja]\\n     * @param {Function} [options.callback]\\n     *   [en]This functions is called after the dialog has been hidden.[/en]\\n     *   [ja]ダイアログが隠れた後に呼び出される関数オブジェクトを指定します。[/ja]\\n     * @description\\n     *   [en]Hide the dialog.[/en]\\n     *   [ja]ダイアログを閉じます。[/ja]\\n     * @return {Promise}\\n     *   [en]Resolves to the hidden element[/en]\\n     *   [ja][/ja]\\n     */\\n\\n  }, {\\n    key: 'hide',\\n    value: function hide() {\\n      var _this5 = this;\\n\\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n\\n      var _cancel3 = false;\\n      var callback = options.callback || function () {};\\n\\n      options.animationOptions = util.extend(options.animationOptions || {}, AnimatorFactory.parseAnimationOptionsString(this.getAttribute('animation-options')));\\n\\n      util.triggerElementEvent(this, 'prehide', {\\n        dialog: this,\\n        cancel: function cancel() {\\n          _cancel3 = true;\\n        }\\n      });\\n\\n      if (!_cancel3) {\\n        var tryHide = function tryHide() {\\n          var unlock = _this5._doorLock.lock();\\n          var animator = _this5._animatorFactory.newAnimator(options);\\n\\n          return new Promise(function (resolve) {\\n            contentReady(_this5, function () {\\n              animator.hide(_this5, function () {\\n                _this5.style.display = 'none';\\n                _this5._visible = false;\\n                unlock();\\n\\n                util.triggerElementEvent(_this5, 'posthide', { dialog: _this5 });\\n\\n                callback();\\n                resolve(_this5);\\n              });\\n            });\\n          });\\n        };\\n\\n        return new Promise(function (resolve) {\\n          _this5._doorLock.waitUnlock(function () {\\n            return resolve(tryHide());\\n          });\\n        });\\n      } else {\\n        return Promise.reject('Canceled in prehide event.');\\n      }\\n    }\\n\\n    /**\\n     * @property visible\\n     * @readonly\\n     * @type {Boolean}\\n     * @description\\n     *   [en]Whether the dialog is visible or not.[/en]\\n     *   [ja]要素が見える場合に`true`。[/ja]\\n     */\\n\\n  }, {\\n    key: 'connectedCallback',\\n    value: function connectedCallback() {\\n      var _this6 = this;\\n\\n      this.onDeviceBackButton = function (e) {\\n        return _this6.cancelable ? _this6._cancel() : e.callParentHandler();\\n      };\\n\\n      contentReady(this, function () {\\n        _this6._mask.addEventListener('click', _this6._boundCancel, false);\\n      });\\n    }\\n  }, {\\n    key: 'disconnectedCallback',\\n    value: function disconnectedCallback() {\\n      this._backButtonHandler.destroy();\\n      this._backButtonHandler = null;\\n\\n      this._mask.removeEventListener('click', this._boundCancel.bind(this), false);\\n    }\\n  }, {\\n    key: 'attributeChangedCallback',\\n    value: function attributeChangedCallback(name, last, current) {\\n      if (name === 'modifier') {\\n        return ModifierUtil.onModifierChanged(last, current, this, scheme$5);\\n      } else if (name === 'animation') {\\n        this._updateAnimatorFactory();\\n      }\\n    }\\n  }, {\\n    key: '_mask',\\n\\n\\n    /**\\n     * @event preshow\\n     * @description\\n     * [en]Fired just before the dialog is displayed.[/en]\\n     * [ja]ダイアログが表示される直前に発火します。[/ja]\\n     * @param {Object} event [en]Event object.[/en]\\n     * @param {Object} event.dialog\\n     *   [en]Component object.[/en]\\n     *   [ja]コンポーネントのオブジェクト。[/ja]\\n     * @param {Function} event.cancel\\n     *   [en]Execute this function to stop the dialog from being shown.[/en]\\n     *   [ja]この関数を実行すると、ダイアログの表示がキャンセルされます。[/ja]\\n     */\\n\\n    /**\\n     * @event postshow\\n     * @description\\n     * [en]Fired just after the dialog is displayed.[/en]\\n     * [ja]ダイアログが表示された直後に発火します。[/ja]\\n     * @param {Object} event [en]Event object.[/en]\\n     * @param {Object} event.dialog\\n     *   [en]Component object.[/en]\\n     *   [ja]コンポーネントのオブジェクト。[/ja]\\n     */\\n\\n    /**\\n     * @event prehide\\n     * @description\\n     * [en]Fired just before the dialog is hidden.[/en]\\n     * [ja]ダイアログが隠れる直前に発火します。[/ja]\\n     * @param {Object} event [en]Event object.[/en]\\n     * @param {Object} event.dialog\\n     *   [en]Component object.[/en]\\n     *   [ja]コンポーネントのオブジェクト。[/ja]\\n     * @param {Function} event.cancel\\n     *   [en]Execute this function to stop the dialog from being hidden.[/en]\\n     *   [ja]この関数を実行すると、ダイアログの非表示がキャンセルされます。[/ja]\\n     */\\n\\n    /**\\n     * @event posthide\\n     * @description\\n     * [en]Fired just after the dialog is hidden.[/en]\\n     * [ja]ダイアログが隠れた後に発火します。[/ja]\\n     * @param {Object} event [en]Event object.[/en]\\n     * @param {Object} event.dialog\\n     *   [en]Component object.[/en]\\n     *   [ja]コンポーネントのオブジェクト。[/ja]\\n     */\\n\\n    /**\\n     * @attribute modifier\\n     * @type {String}\\n     * @description\\n     *  [en]The appearance of the dialog.[/en]\\n     *  [ja]ダイアログの表現を指定します。[/ja]\\n     */\\n\\n    /**\\n     * @attribute cancelable\\n     * @description\\n     *  [en]If this attribute is set the dialog can be closed by tapping the background or by pressing the back button on Android devices.[/en]\\n     *  [ja][/ja]\\n     */\\n\\n    /**\\n     * @attribute disabled\\n     * @description\\n     *  [en]If this attribute is set the dialog is disabled.[/en]\\n     *  [ja]この属性がある時、ダイアログはdisabled状態になります。[/ja]\\n     */\\n\\n    /**\\n     * @attribute animation\\n     * @type {String}\\n     * @default default\\n     * @description\\n     *  [en]The animation used when showing and hiding the dialog. Can be either `\\\"none\\\"` or `\\\"default\\\"`.[/en]\\n     *  [ja]ダイアログを表示する際のアニメーション名を指定します。\\\"none\\\"もしくは\\\"default\\\"を指定できます。[/ja]\\n     */\\n\\n    /**\\n     * @attribute animation-options\\n     * @type {Expression}\\n     * @description\\n     *  [en]Specify the animation's duration, timing and delay with an object literal. E.g. `{duration: 0.2, delay: 1, timing: 'ease-in'}`.[/en]\\n     *  [ja]アニメーション時のduration, timing, delayをオブジェクトリテラルで指定します。e.g. `{duration: 0.2, delay: 1, timing: 'ease-in'}`[/ja]\\n     */\\n\\n    /**\\n     * @attribute mask-color\\n     * @type {String}\\n     * @default rgba(0, 0, 0, 0.2)\\n     * @description\\n     *  [en]Color of the background mask. Default is `\\\"rgba(0, 0, 0, 0.2)\\\"`.[/en]\\n     *  [ja]背景のマスクの色を指定します。\\\"rgba(0, 0, 0, 0.2)\\\"がデフォルト値です。[/ja]\\n     */\\n\\n    get: function get() {\\n      return util.findChild(this, '.dialog-mask');\\n    }\\n  }, {\\n    key: '_dialog',\\n    get: function get() {\\n      return util.findChild(this, '.dialog');\\n    }\\n  }, {\\n    key: 'onDeviceBackButton',\\n    get: function get() {\\n      return this._backButtonHandler;\\n    },\\n    set: function set(callback) {\\n      if (this._backButtonHandler) {\\n        this._backButtonHandler.destroy();\\n      }\\n\\n      this._backButtonHandler = deviceBackButtonDispatcher.createHandler(this, callback);\\n    }\\n  }, {\\n    key: 'visible',\\n    get: function get() {\\n      return this._visible;\\n    }\\n\\n    /**\\n     * @property disabled\\n     * @type {Boolean}\\n     * @description\\n     *   [en]Whether the dialog is disabled or not.[/en]\\n     *   [ja]無効化されている場合に`true`。[/ja]\\n     */\\n\\n  }, {\\n    key: 'disabled',\\n    set: function set(value) {\\n      return util.toggleAttribute(this, 'disabled', value);\\n    },\\n    get: function get() {\\n      return this.hasAttribute('disabled');\\n    }\\n\\n    /**\\n     * @property cancelable\\n     * @type {Boolean}\\n     * @description\\n     *   [en]Whether the dialog is cancelable or not. A cancelable dialog can be closed by tapping the background or by pressing the back button on Android devices.[/en]\\n     *   [ja][/ja]\\n     */\\n\\n  }, {\\n    key: 'cancelable',\\n    set: function set(value) {\\n      return util.toggleAttribute(this, 'cancelable', value);\\n    },\\n    get: function get() {\\n      return this.hasAttribute('cancelable');\\n    }\\n  }], [{\\n    key: 'registerAnimator',\\n\\n\\n    /**\\n     * @param {String} name\\n     * @param {DialogAnimator} Animator\\n     */\\n    value: function registerAnimator(name, Animator) {\\n      if (!(Animator.prototype instanceof DialogAnimator)) {\\n        throw new Error('\\\"Animator\\\" param must inherit OnsDialogElement.DialogAnimator');\\n      }\\n      _animatorDict$1[name] = Animator;\\n    }\\n  }, {\\n    key: 'observedAttributes',\\n    get: function get() {\\n      return ['modifier', 'animation'];\\n    }\\n  }, {\\n    key: 'events',\\n    get: function get() {\\n      return ['preshow', 'postshow', 'prehide', 'posthide', 'dialog-cancel'];\\n    }\\n  }, {\\n    key: 'animators',\\n    get: function get() {\\n      return _animatorDict$1;\\n    }\\n  }, {\\n    key: 'DialogAnimator',\\n    get: function get() {\\n      return DialogAnimator;\\n    }\\n  }]);\\n  return DialogElement;\\n}(BaseElement);\\n\\ncustomElements.define('ons-dialog', DialogElement);\\n\\n/*\\nCopyright 2013-2015 ASIAL CORPORATION\\nLicensed under the Apache License, Version 2.0 (the \\\"License\\\");\\nyou may not use this file except in compliance with the License.\\nYou may obtain a copy of the License at\\n   http://www.apache.org/licenses/LICENSE-2.0\\nUnless required by applicable law or agreed to in writing, software\\ndistributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\nSee the License for the specific language governing permissions and\\nlimitations under the License.\\n*/\\n\\nvar defaultClassName$3 = 'fab';\\n\\nvar scheme$6 = {\\n  '': 'fab--*',\\n  '.fab__icon': 'fab--*__icon'\\n};\\n\\n/**\\n * @element ons-fab\\n * @category form\\n * @description\\n *   [en]\\n *     The Floating action button is a circular button defined in the [Material Design specification](https://www.google.com/design/spec/components/buttons-floating-action-button.html). They are often used to promote the primary action of the app.\\n *\\n *     It can be displayed either as an inline element or in one of the corners. Normally it will be positioned in the lower right corner of the screen.\\n *   [/en]\\n *   [ja][/ja]\\n * @tutorial vanilla/Reference/fab\\n * @guide cross-platform-styling [en]Information about cross platform styling[/en][ja]Information about cross platform styling[/ja]\\n * @seealso ons-speed-dial\\n *   [en]The `<ons-speed-dial>` component is a Floating action button that displays a menu when tapped.[/en]\\n *   [ja][/ja]\\n */\\n\\nvar FabElement = function (_BaseElement) {\\n  inherits(FabElement, _BaseElement);\\n\\n  function FabElement() {\\n    classCallCheck(this, FabElement);\\n    return possibleConstructorReturn(this, (FabElement.__proto__ || Object.getPrototypeOf(FabElement)).apply(this, arguments));\\n  }\\n\\n  createClass(FabElement, [{\\n    key: 'init',\\n\\n\\n    /**\\n     * @attribute modifier\\n     * @type {String}\\n     * @description\\n     *  [en]The appearance of the button.[/en]\\n     *  [ja]ボタンの表現を指定します。[/ja]\\n     */\\n\\n    /**\\n     * @attribute ripple\\n     * @description\\n     *  [en]If this attribute is defined, the button will have a ripple effect when tapped.[/en]\\n     *  [ja][/ja]\\n     */\\n\\n    /**\\n     * @attribute position\\n     * @type {String}\\n     * @description\\n     *  [en]The position of the button. Should be a string like `\\\"bottom right\\\"` or `\\\"top left\\\"`. If this attribute is not defined it will be displayed as an inline element.[/en]\\n     *  [ja][/ja]\\n     */\\n\\n    /**\\n     * @attribute disabled\\n     * @description\\n     *   [en]Specify if button should be disabled.[/en]\\n     *   [ja]ボタンを無効化する場合は指定します。[/ja]\\n     */\\n\\n    value: function init() {\\n      var _this2 = this;\\n\\n      // The following statements can be executed before contentReady\\n      // since these do not access the children\\n      this.hide();\\n      this.classList.add(defaultClassName$3);\\n\\n      contentReady(this, function () {\\n        _this2._compile();\\n      });\\n    }\\n  }, {\\n    key: '_compile',\\n    value: function _compile() {\\n      autoStyle.prepare(this);\\n\\n      if (!util.findChild(this, '.fab__icon')) {\\n        var content = document.createElement('span');\\n        content.classList.add('fab__icon');\\n\\n        util.arrayFrom(this.childNodes).forEach(function (element) {\\n          if (!element.tagName || element.tagName.toLowerCase() !== 'ons-ripple') {\\n            content.appendChild(element);\\n          }\\n        });\\n        this.appendChild(content);\\n      }\\n\\n      this._updateRipple();\\n\\n      ModifierUtil.initModifier(this, scheme$6);\\n\\n      this._updatePosition();\\n    }\\n  }, {\\n    key: 'connectedCallback',\\n    value: function connectedCallback() {\\n      var _this3 = this;\\n\\n      setImmediate(function () {\\n        return _this3.show();\\n      });\\n    }\\n  }, {\\n    key: 'attributeChangedCallback',\\n    value: function attributeChangedCallback(name, last, current) {\\n      switch (name) {\\n        case 'class':\\n          if (!this.classList.contains(defaultClassName$3)) {\\n            this.className = defaultClassName$3 + ' ' + current;\\n          }\\n          break;\\n        case 'modifier':\\n          ModifierUtil.onModifierChanged(last, current, this, scheme$6);\\n          break;\\n        case 'ripple':\\n          this._updateRipple();\\n          break;\\n        case 'position':\\n          this._updatePosition();\\n          break;\\n      }\\n    }\\n  }, {\\n    key: '_show',\\n    value: function _show() {\\n      this.show();\\n    }\\n  }, {\\n    key: '_hide',\\n    value: function _hide() {\\n      var _this4 = this;\\n\\n      setImmediate(function () {\\n        return _this4.hide();\\n      });\\n    }\\n  }, {\\n    key: '_updateRipple',\\n    value: function _updateRipple() {\\n      util.updateRipple(this);\\n    }\\n  }, {\\n    key: '_updatePosition',\\n    value: function _updatePosition() {\\n      var position = this.getAttribute('position');\\n      this.classList.remove('fab--top__left', 'fab--bottom__right', 'fab--bottom__left', 'fab--top__right', 'fab--top__center', 'fab--bottom__center');\\n      switch (position) {\\n        case 'top right':\\n        case 'right top':\\n          this.classList.add('fab--top__right');\\n          break;\\n        case 'top left':\\n        case 'left top':\\n          this.classList.add('fab--top__left');\\n          break;\\n        case 'bottom right':\\n        case 'right bottom':\\n          this.classList.add('fab--bottom__right');\\n          break;\\n        case 'bottom left':\\n        case 'left bottom':\\n          this.classList.add('fab--bottom__left');\\n          break;\\n        case 'center top':\\n        case 'top center':\\n          this.classList.add('fab--top__center');\\n          break;\\n        case 'center bottom':\\n        case 'bottom center':\\n          this.classList.add('fab--bottom__center');\\n          break;\\n        default:\\n          break;\\n      }\\n    }\\n\\n    /**\\n     * @method show\\n     * @signature show()\\n     * @description\\n     *  [en]Show the floating action button.[/en]\\n     *  [ja][/ja]\\n     */\\n\\n  }, {\\n    key: 'show',\\n    value: function show() {\\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n\\n      this.style.transform = 'scale(1)';\\n      this.style.webkitTransform = 'scale(1)';\\n    }\\n\\n    /**\\n     * @method hide\\n     * @signature hide()\\n     * @description\\n     *  [en]Hide the floating action button.[/en]\\n     *  [ja][/ja]\\n     */\\n\\n  }, {\\n    key: 'hide',\\n    value: function hide() {\\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n\\n      this.style.transform = 'scale(0)';\\n      this.style.webkitTransform = 'scale(0)';\\n    }\\n\\n    /**\\n     * @property disabled\\n     * @type {Boolean}\\n     * @description\\n     *   [en]Whether the element is disabled or not.[/en]\\n     *   [ja]無効化されている場合に`true`。[/ja]\\n     */\\n\\n  }, {\\n    key: 'toggle',\\n\\n\\n    /**\\n     * @method toggle\\n     * @signature toggle()\\n     * @description\\n     *   [en]Toggle the visibility of the button.[/en]\\n     *   [ja][/ja]\\n     */\\n    value: function toggle() {\\n      this.visible ? this.hide() : this.show();\\n    }\\n  }, {\\n    key: 'disabled',\\n    set: function set(value) {\\n      return util.toggleAttribute(this, 'disabled', value);\\n    },\\n    get: function get() {\\n      return this.hasAttribute('disabled');\\n    }\\n\\n    /**\\n     * @property visible\\n     * @readonly\\n     * @type {Boolean}\\n     * @description\\n     *   [en]Whether the element is visible or not.[/en]\\n     *   [ja]要素が見える場合に`true`。[/ja]\\n     */\\n\\n  }, {\\n    key: 'visible',\\n    get: function get() {\\n      return this.style.transform === 'scale(1)' && this.style.display !== 'none';\\n    }\\n  }], [{\\n    key: 'observedAttributes',\\n    get: function get() {\\n      return ['modifier', 'ripple', 'position', 'class'];\\n    }\\n  }]);\\n  return FabElement;\\n}(BaseElement);\\n\\ncustomElements.define('ons-fab', FabElement);\\n\\n/*\\nCopyright 2013-2015 ASIAL CORPORATION\\n\\nLicensed under the Apache License, Version 2.0 (the \\\"License\\\");\\nyou may not use this file except in compliance with the License.\\nYou may obtain a copy of the License at\\n\\n   http://www.apache.org/licenses/LICENSE-2.0\\n\\nUnless required by applicable law or agreed to in writing, software\\ndistributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\nSee the License for the specific language governing permissions and\\nlimitations under the License.\\n\\n*/\\n\\n/**\\n * @element ons-gesture-detector\\n * @category gesture\\n * @description\\n *   [en]\\n *     Component to detect finger gestures within the wrapped element. Following gestures are supported:\\n *     - Drag gestures: `drag`, `dragleft`, `dragright`, `dragup`, `dragdown`\\n *     - Hold gestures: `hold`, `release`\\n *     - Swipe gestures: `swipe`, `swipeleft`, `swiperight`, `swipeup`, `swipedown`\\n *     - Tap gestures: `tap`, `doubletap`\\n *     - Pinch gestures: `pinch`, `pinchin`, `pinchout`\\n *     - Other gestures: `touch`, `transform`, `rotate`\\n *   [/en]\\n *   [ja]要素内のジェスチャー操作を検知します。詳しくはガイドを参照してください。[/ja]\\n * @guide gesture-detector\\n *   [en]Detecting finger gestures[/en]\\n *   [ja]ジェスチャー操作の検知[/ja]\\n * @example\\n * <ons-gesture-detector>\\n *   <div id=\\\"detect-area\\\" style=\\\"width: 100px; height: 100px;\\\">\\n *     Swipe Here\\n *   </div>\\n * </ons-gesture-detector>\\n *\\n * <script>\\n *   document.addEventListener('swipeleft', function(event) {\\n *     if (event.target.matches('#detect-area')) {\\n *       console.log('Swipe left is detected.');\\n *     }\\n *   });\\n * </script>\\n */\\n\\nvar GestureDetectorElement = function (_BaseElement) {\\n  inherits(GestureDetectorElement, _BaseElement);\\n\\n  function GestureDetectorElement() {\\n    classCallCheck(this, GestureDetectorElement);\\n    return possibleConstructorReturn(this, (GestureDetectorElement.__proto__ || Object.getPrototypeOf(GestureDetectorElement)).apply(this, arguments));\\n  }\\n\\n  createClass(GestureDetectorElement, [{\\n    key: 'init',\\n    value: function init() {\\n      this._gestureDetector = new GestureDetector(this);\\n    }\\n  }]);\\n  return GestureDetectorElement;\\n}(BaseElement);\\n\\ncustomElements.define('ons-gesture-detector', GestureDetectorElement);\\n\\n/*\\nCopyright 2013-2015 ASIAL CORPORATION\\n\\nLicensed under the Apache License, Version 2.0 (the \\\"License\\\");\\nyou may not use this file except in compliance with the License.\\nYou may obtain a copy of the License at\\n\\n   http://www.apache.org/licenses/LICENSE-2.0\\n\\nUnless required by applicable law or agreed to in writing, software\\ndistributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\nSee the License for the specific language governing permissions and\\nlimitations under the License.\\n\\n*/\\n\\n/**\\n * @element ons-icon\\n * @category visual\\n * @description\\n *   [en]\\n *     Displays an icon. The following icon suites are available:\\n *\\n *     * [Font Awesome](https://fortawesome.github.io/Font-Awesome/)\\n *     * [Ionicons](http://ionicons.com/)\\n *     * [Material Design Iconic Font](http://zavoloklom.github.io/material-design-iconic-font/)\\n *   [/en]\\n *   [ja][/ja]\\n * @codepen xAhvg\\n * @tutorial vanilla/Reference/icon\\n * @guide cross-platform-styling [en]Information about cross platform styling[/en][ja]Information about cross platform styling[/ja]\\n * @example\\n * <ons-icon\\n *   icon=\\\"md-car\\\"\\n *   size=\\\"20px\\\"\\n *   style=\\\"color: red\\\">\\n * </ons-icon>\\n *\\n * <ons-button>\\n *   <ons-icon icon=\\\"md-car\\\"></ons-icon>\\n *   Car\\n * </ons-button>\\n */\\n\\nvar IconElement = function (_BaseElement) {\\n  inherits(IconElement, _BaseElement);\\n\\n  function IconElement() {\\n    classCallCheck(this, IconElement);\\n    return possibleConstructorReturn(this, (IconElement.__proto__ || Object.getPrototypeOf(IconElement)).apply(this, arguments));\\n  }\\n\\n  createClass(IconElement, [{\\n    key: 'init',\\n\\n\\n    /**\\n     * @attribute icon\\n     * @type {String}\\n     * @description\\n     *   [en]\\n     *     The icon name. `\\\"md-\\\"` prefix for Material Icons, `\\\"fa-\\\"` for Font Awesome and `\\\"ion-\\\"` prefix for Ionicons.\\n     *\\n     *     See all available icons on their respective sites:\\n     *\\n     *     * [Font Awesome](https://fortawesome.github.io/Font-Awesome/)\\n     *     * [Ionicons](http://ionicons.com)\\n     *     * [Material Design Iconic Font](http://zavoloklom.github.io/material-design-iconic-font/)\\n     *\\n     *     Icons can also be styled based on modifier presence. Add comma-separated icons with `\\\"modifierName:\\\"` prefix.\\n     *\\n     *     The code:\\n     *\\n     *     ```\\n     *     <ons-icon\\n     *       icon=\\\"ion-edit, material:md-edit\\\">\\n     *     </ons-icon>\\n     *     ```\\n     *\\n     *     will display `\\\"md-edit\\\"` for Material Design and `\\\"ion-edit\\\"` as the default icon.\\n     *   [/en]\\n     *   [ja][/ja]\\n     */\\n\\n    /**\\n     * @attribute size\\n     * @type {String}\\n     * @description\\n     *   [en]\\n     *     The sizes of the icon. Valid values are lg, 2x, 3x, 4x, 5x, or in the size in pixels.\\n     *     Icons can also be styled based on modifier presence. Add comma-separated icons with `\\\"modifierName:\\\"` prefix.\\n     *\\n     *     The code:\\n     *\\n     *     ```\\n     *     <ons-icon\\n     *       icon=\\\"ion-edit\\\"\\n     *       size=\\\"32px, material:24px\\\">\\n     *     </ons-icon>\\n     *     ```\\n     *\\n     *     will render as a `24px` icon if the `\\\"material\\\"` modifier is present and `32px` otherwise.\\n     *   [/en]\\n     *   [ja][/ja]\\n     */\\n\\n    /**\\n     * @attribute rotate\\n     * @type {Number}\\n     * @description\\n     *   [en]Number of degrees to rotate the icon. Valid values are 90, 180 and 270.[/en]\\n     *   [ja]アイコンを回転して表示します。90, 180, 270から指定できます。[/ja]\\n     */\\n\\n    /**\\n     * @attribute fixed-width\\n     * @type {Boolean}\\n     * @default false\\n     * @description\\n     *  [en]When used in a list, you want the icons to have the same width so that they align vertically by defining this attribute.[/en]\\n     *  [ja][/ja]\\n     */\\n\\n    /**\\n     * @attribute spin\\n     * @description\\n     *   [en]Specify whether the icon should be spinning.[/en]\\n     *   [ja]アイコンを回転するかどうかを指定します。[/ja]\\n     */\\n\\n    value: function init() {\\n      this._compile();\\n    }\\n  }, {\\n    key: 'attributeChangedCallback',\\n    value: function attributeChangedCallback(name, last, current) {\\n      if (['icon', 'size', 'modifier'].indexOf(name) !== -1) {\\n        this._update();\\n      }\\n    }\\n  }, {\\n    key: '_compile',\\n    value: function _compile() {\\n      var _this2 = this;\\n\\n      autoStyle.prepare(this);\\n      this._update();\\n      setImmediate(function () {\\n        return _this2._update();\\n      }); // Fix for bindings\\n    }\\n  }, {\\n    key: '_update',\\n    value: function _update() {\\n      var _this3 = this;\\n\\n      this._cleanClassAttribute();\\n\\n      var _buildClassAndStyle2 = this._buildClassAndStyle(this._getAttribute('icon'), this._getAttribute('size')),\\n          classList = _buildClassAndStyle2.classList,\\n          style = _buildClassAndStyle2.style;\\n\\n      util.extend(this.style, style);\\n\\n      classList.forEach(function (className) {\\n        return _this3.classList.add(className);\\n      });\\n    }\\n  }, {\\n    key: '_getAttribute',\\n    value: function _getAttribute(attr) {\\n      var parts = (this.getAttribute(attr) || '').split(/\\\\s*,\\\\s*/);\\n      var def = parts[0];\\n      var md = parts[1];\\n      md = (md || '').split(/\\\\s*:\\\\s*/);\\n      return (util.hasModifier(this, md[0]) ? md[1] : def) || '';\\n    }\\n\\n    /**\\n     * Remove unneeded class value.\\n     */\\n\\n  }, {\\n    key: '_cleanClassAttribute',\\n    value: function _cleanClassAttribute() {\\n      var _this4 = this;\\n\\n      util.arrayFrom(this.classList).filter(function (className) {\\n        return (/^(fa$|fa-|ion-|zmdi-)/.test(className)\\n        );\\n      }).forEach(function (className) {\\n        return _this4.classList.remove(className);\\n      });\\n\\n      this.classList.remove('zmdi');\\n      this.classList.remove('ons-icon--ion');\\n    }\\n  }, {\\n    key: '_buildClassAndStyle',\\n    value: function _buildClassAndStyle(iconName, size) {\\n      var classList = ['ons-icon'];\\n      var style = {};\\n\\n      // Icon\\n      if (iconName.indexOf('ion-') === 0) {\\n        classList.push(iconName);\\n        classList.push('ons-icon--ion');\\n      } else if (iconName.indexOf('fa-') === 0) {\\n        classList.push(iconName);\\n        classList.push('fa');\\n      } else if (iconName.indexOf('md-') === 0) {\\n        classList.push('zmdi');\\n        classList.push('zmdi-' + iconName.split(/\\\\-(.+)?/)[1]);\\n      } else {\\n        classList.push('fa');\\n        classList.push('fa-' + iconName);\\n      }\\n\\n      // Size\\n      if (size.match(/^[1-5]x|lg$/)) {\\n        classList.push('fa-' + size);\\n        this.style.removeProperty('font-size');\\n      } else {\\n        style.fontSize = size;\\n      }\\n\\n      return {\\n        classList: classList,\\n        style: style\\n      };\\n    }\\n  }], [{\\n    key: 'observedAttributes',\\n    get: function get() {\\n      return ['icon', 'size', 'modifier'];\\n    }\\n  }]);\\n  return IconElement;\\n}(BaseElement);\\n\\ncustomElements.define('ons-icon', IconElement);\\n\\n/*\\nCopyright 2013-2015 ASIAL CORPORATION\\nLicensed under the Apache License, Version 2.0 (the \\\"License\\\");\\nyou may not use this file except in compliance with the License.\\nYou may obtain a copy of the License at\\n   http://www.apache.org/licenses/LICENSE-2.0\\nUnless required by applicable law or agreed to in writing, software\\ndistributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\nSee the License for the specific language governing permissions and\\nlimitations under the License.\\n*/\\n\\n/**\\n * @element ons-lazy-repeat\\n * @category list\\n * @description\\n *   [en]\\n *     Using this component a list with millions of items can be rendered without a drop in performance.\\n *     It does that by \\\"lazily\\\" loading elements into the DOM when they come into view and\\n *     removing items from the DOM when they are not visible.\\n *   [/en]\\n *   [ja]\\n *     このコンポーネント内で描画されるアイテムのDOM要素の読み込みは、画面に見えそうになった時まで自動的に遅延され、\\n *     画面から見えなくなった場合にはその要素は動的にアンロードされます。\\n *     このコンポーネントを使うことで、パフォーマンスを劣化させること無しに巨大な数の要素を描画できます。\\n *   [/ja]\\n * @codepen QwrGBm\\n * @tutorial vanilla/Reference/lazy-repeat\\n * @seealso ons-list\\n *   [en]The `<ons-list>` element is used to render a list.[/en]\\n *   [ja]`<ons-list>`要素はリストを描画するのに使われます。[/ja]\\n * @guide infinite-scroll\\n *   [en]Loading more items on infinite scroll[/en]\\n *   [ja]Loading more items on infinite scroll[/ja]\\n * @example\\n * <script>\\n *   window.addEventListener('load', function() {\\n *     var lazyRepeat = document.querySelector('#list');\\n *     lazyRepeat.delegate = {\\n *      createItemContent: function(i, template) {\\n *        var dom = template.cloneNode(true);\\n *        dom.innerText = i;\\n *\\n *        return dom;\\n *      },\\n *      countItems: function() {\\n *        return 10000000;\\n *      },\\n *      destroyItem: function(index, item) {\\n *        console.log('Destroyed item with index: ' + index);\\n *      }\\n *     };\\n *   });\\n * </script>\\n *\\n * <ons-list id=\\\"list\\\">\\n *   <ons-lazy-repeat>\\n *     <ons-list-item></ons-list-item>\\n *   </ons-lazy-repeat>\\n * </ons-list>\\n */\\n\\nvar LazyRepeatElement = function (_BaseElement) {\\n  inherits(LazyRepeatElement, _BaseElement);\\n\\n  function LazyRepeatElement() {\\n    classCallCheck(this, LazyRepeatElement);\\n    return possibleConstructorReturn(this, (LazyRepeatElement.__proto__ || Object.getPrototypeOf(LazyRepeatElement)).apply(this, arguments));\\n  }\\n\\n  createClass(LazyRepeatElement, [{\\n    key: 'connectedCallback',\\n    value: function connectedCallback() {\\n      // not very good idea and also not documented\\n      if (this.hasAttribute('delegate')) {\\n        this.delegate = window[this.getAttribute('delegate')];\\n      }\\n    }\\n\\n    /**\\n     * @property delegate\\n     * @type {Object}\\n     * @description\\n     *  [en]Specify a delegate object to load and unload item elements.[/en]\\n     *  [ja]要素のロード、アンロードなどの処理を委譲するオブジェクトを指定します。[/ja]\\n     */\\n\\n    /**\\n     * @property delegate.createItemContent\\n     * @type {Function}\\n     * @description\\n     *   [en]\\n     *     This function should return a `HTMLElement`.\\n     *\\n     *     To help rendering the element, the current index and a template is supplied as arguments. The template is the initial content of the `<ons-lazy-repeat>` element.\\n     *   [/en]\\n     *   [ja]\\n     *     この関数は`HTMLElement`を返してください。\\n     *     要素を生成しやすくするために、現在のアイテムのインデックスとテンプレートが引数に渡されます。\\n     *     このテンプレートは、`<ons-lazy-repeat>`要素のコンテンツが渡されます。\\n     *   [/ja]\\n     */\\n\\n    /**\\n     * @property delegate.countItems\\n     * @type {Function}\\n     * @description\\n     *   [en]Should return the number of items in the list.[/en]\\n     *   [ja]リスト内のアイテム数を返してください。[/ja]\\n     */\\n\\n    /**\\n     * @property delegate.calculateItemHeight\\n     * @type {Function}\\n     * @description\\n     *   [en]\\n     *     Should return the height of an item. The index is provided as an argument.\\n     *\\n     *     This is important when rendering lists where the items have different height.\\n     *\\n     *     The function is optional and if it isn't present the height of the first item will be automatically calculated and used for all other items.\\n     *   [/en]\\n     *   [ja]\\n     *     アイテムの高さ(ピクセル)を返してください。アイテムのインデックス値は引数で渡されます。\\n     *     この関数は、それぞれのアイムが違った高さを持つリストをレンダリングする際に重要です。\\n     *     この関数はオプショナルです。もしこの関数が無い場合には、\\n     *     最初のアイテムの高さが他のすべてのアイテムの高さとして利用されます。\\n     *   [/ja]\\n     */\\n\\n    /**\\n     * @property delegate.destroyItem\\n     * @type {Function}\\n     * @description\\n     *   [en]\\n     *     This function is used called when an item is removed from the DOM. The index and DOM element is provided as arguments.\\n     *\\n     *     The function is optional but may be important in order to avoid memory leaks.\\n     *   [/en]\\n     *   [ja]\\n     *     この関数は、あるアイテムがDOMツリーから除かれた時に呼び出されます。\\n     *     アイテムのインデックス値とDOM要素が引数として渡されます。\\n     *     この関数はオプショナルですが、各アイテムの後処理が必要な場合にはメモリーリークを避けるために重要です。\\n     *   [/ja]\\n     */\\n\\n  }, {\\n    key: 'refresh',\\n\\n\\n    /**\\n     * @method refresh\\n     * @signature refresh()\\n     * @description\\n     *   [en]Refresh the list. Use this method when the data has changed.[/en]\\n     *   [ja]リストを更新します。もしデータが変わった場合にはこのメソッドを使ってください。[/ja]\\n     */\\n    value: function refresh() {\\n      this._lazyRepeatProvider && this._lazyRepeatProvider.refresh();\\n    }\\n  }, {\\n    key: 'attributeChangedCallback',\\n    value: function attributeChangedCallback(name, last, current) {}\\n  }, {\\n    key: 'disconnectedCallback',\\n    value: function disconnectedCallback() {\\n      if (this._lazyRepeatProvider) {\\n        this._lazyRepeatProvider.destroy();\\n        this._lazyRepeatProvider = null;\\n      }\\n    }\\n  }, {\\n    key: 'delegate',\\n    set: function set(userDelegate) {\\n      this._lazyRepeatProvider && this._lazyRepeatProvider.destroy();\\n\\n      if (!this._templateElement && this.children[0]) {\\n        this._templateElement = this.removeChild(this.children[0]);\\n      }\\n\\n      var delegate = new LazyRepeatDelegate(userDelegate, this._templateElement || null);\\n      this._lazyRepeatProvider = new LazyRepeatProvider(this.parentElement, delegate);\\n    },\\n    get: function get() {\\n      throw new Error('This property can only be used to set the delegate object.');\\n    }\\n  }]);\\n  return LazyRepeatElement;\\n}(BaseElement);\\n\\ncustomElements.define('ons-lazy-repeat', LazyRepeatElement);\\n\\n/*\\nCopyright 2013-2015 ASIAL CORPORATION\\n\\nLicensed under the Apache License, Version 2.0 (the \\\"License\\\");\\nyou may not use this file except in compliance with the License.\\nYou may obtain a copy of the License at\\n\\n   http://www.apache.org/licenses/LICENSE-2.0\\n\\nUnless required by applicable law or agreed to in writing, software\\ndistributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\nSee the License for the specific language governing permissions and\\nlimitations under the License.\\n\\n*/\\n\\nvar defaultClassName$4 = 'list-header';\\nvar scheme$7 = { '': 'list-header--*' };\\n\\n/**\\n * @element ons-list-header\\n * @category list\\n * @description\\n *   [en]Header element for list items. Must be put inside the `<ons-list>` component.[/en]\\n *   [ja]リスト要素に使用するヘッダー用コンポーネント。ons-listと共に使用します。[/ja]\\n * @seealso ons-list\\n *   [en]The `<ons-list>` component[/en]\\n *   [ja]ons-listコンポーネント[/ja]\\n * @seealso ons-list-item\\n *   [en]The `<ons-list-item>` component[/en]\\n *   [ja]ons-list-itemコンポーネント[/ja]\\n * @guide lists [en]Using lists[/en][ja]リストを使う[/ja]\\n * @codepen yxcCt\\n * @tutorial vanilla/Reference/list\\n * @modifier material\\n *   [en]Display a Material Design list header.[/en]\\n *   [ja][/ja]\\n * @example\\n * <ons-list>\\n *   <ons-list-header>Header Text</ons-list-header>\\n *   <ons-list-item>Item</ons-list-item>\\n *   <ons-list-item>Item</ons-list-item>\\n * </ons-list>\\n */\\n\\nvar ListHeaderElement = function (_BaseElement) {\\n  inherits(ListHeaderElement, _BaseElement);\\n\\n  function ListHeaderElement() {\\n    classCallCheck(this, ListHeaderElement);\\n    return possibleConstructorReturn(this, (ListHeaderElement.__proto__ || Object.getPrototypeOf(ListHeaderElement)).apply(this, arguments));\\n  }\\n\\n  createClass(ListHeaderElement, [{\\n    key: 'init',\\n\\n\\n    /**\\n     * @attribute modifier\\n     * @type {String}\\n     * @description\\n     *   [en]The appearance of the list header.[/en]\\n     *   [ja]ヘッダーの表現を指定します。[/ja]\\n     */\\n\\n    value: function init() {\\n      this._compile();\\n    }\\n  }, {\\n    key: '_compile',\\n    value: function _compile() {\\n      autoStyle.prepare(this);\\n      this.classList.add(defaultClassName$4);\\n      ModifierUtil.initModifier(this, scheme$7);\\n    }\\n  }, {\\n    key: 'attributeChangedCallback',\\n    value: function attributeChangedCallback(name, last, current) {\\n      switch (name) {\\n        case 'class':\\n          if (!this.classList.contains(defaultClassName$4)) {\\n            this.className = defaultClassName$4 + ' ' + current;\\n          }\\n          break;\\n        case 'modifier':\\n          ModifierUtil.onModifierChanged(last, current, this, scheme$7);\\n          break;\\n      }\\n    }\\n  }], [{\\n    key: 'observedAttributes',\\n    get: function get() {\\n      return ['modifier', 'class'];\\n    }\\n  }]);\\n  return ListHeaderElement;\\n}(BaseElement);\\n\\ncustomElements.define('ons-list-header', ListHeaderElement);\\n\\n/*\\nCopyright 2013-2015 ASIAL CORPORATION\\n\\nLicensed under the Apache License, Version 2.0 (the \\\"License\\\");\\nyou may not use this file except in compliance with the License.\\nYou may obtain a copy of the License at\\n\\n   http://www.apache.org/licenses/LICENSE-2.0\\n\\nUnless required by applicable law or agreed to in writing, software\\ndistributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\nSee the License for the specific language governing permissions and\\nlimitations under the License.\\n\\n*/\\n\\nvar defaultClassName$5 = 'list-item';\\nvar scheme$8 = {\\n  '.list-item': 'list-item--*',\\n  '.list-item__left': 'list-item--*__left',\\n  '.list-item__center': 'list-item--*__center',\\n  '.list-item__right': 'list-item--*__right',\\n  '.list-item__label': 'list-item--*__label',\\n  '.list-item__title': 'list-item--*__title',\\n  '.list-item__subtitle': 'list-item--*__subtitle',\\n  '.list-item__thumbnail': 'list-item--*__thumbnail',\\n  '.list-item__icon': 'list-item--*__icon'\\n};\\n\\n/**\\n * @element ons-list-item\\n * @category list\\n * @modifier tappable\\n *   [en]Make the list item change appearance when it's tapped. On iOS it is better to use the \\\"tappable\\\" and \\\"tap-background-color\\\" attribute for better behavior when scrolling.[/en]\\n *   [ja]タップやクリックした時に効果が表示されるようになります。[/ja]\\n * @modifier chevron\\n *   [en]Display a chevron at the right end of the list item and make it change appearance when tapped. The chevron is not displayed in Material Design.[/en]\\n *   [ja][/ja]\\n * @modifier longdivider\\n *   [en]Displays a long horizontal divider between items.[/en]\\n *   [ja][/ja]\\n * @modifier nodivider\\n *   [en]Removes the divider between list items.[/en]\\n *   [ja][/ja]\\n * @modifier material\\n *   [en]Display a Material Design list item.[/en]\\n *   [ja][/ja]\\n * @description\\n *   [en]\\n *     Component that represents each item in the list. Must be put inside the `<ons-list>` component.\\n *\\n *     The list item is composed of three parts that are represented with the `left`, `center` and `right` classes. These classes can be used to ensure that the content of the list items is properly aligned.\\n *\\n *     ```\\n *     <ons-list-item>\\n *       <div class=\\\"left\\\">Left</div>\\n *       <div class=\\\"center\\\">Center</div>\\n *       <div class=\\\"right\\\">Right</div>\\n *     </ons-list-item>\\n *     ```\\n *\\n *     There is also a number of classes (prefixed with `list-item__*`) that help when putting things like icons and thumbnails into the list items.\\n *   [/en]\\n *   [ja][/ja]\\n * @seealso ons-list\\n *   [en]ons-list component[/en]\\n *   [ja]ons-listコンポーネント[/ja]\\n * @seealso ons-list-header\\n *   [en]ons-list-header component[/en]\\n *   [ja]ons-list-headerコンポーネント[/ja]\\n * @guide lists\\n *   [en]Using lists[/en]\\n *   [ja]リストを使う[/ja]\\n * @codepen yxcCt\\n * @tutorial vanilla/Reference/list\\n * @example\\n * <ons-list-item>\\n *   <div class=\\\"left\\\">\\n *     <ons-icon icon=\\\"md-face\\\" class=\\\"list-item__icon\\\"></ons-icon>\\n *   </div>\\n *   <div class=\\\"center\\\">\\n *     <div class=\\\"list-item__title\\\">Title</div>\\n *     <div class=\\\"list-item__subtitle\\\">Subtitle</div>\\n *   </div>\\n *   <div class=\\\"right\\\">\\n *     <ons-switch></ons-switch>\\n *   </div>\\n * </ons-list-item>\\n */\\n\\nvar ListItemElement = function (_BaseElement) {\\n  inherits(ListItemElement, _BaseElement);\\n\\n  function ListItemElement() {\\n    classCallCheck(this, ListItemElement);\\n    return possibleConstructorReturn(this, (ListItemElement.__proto__ || Object.getPrototypeOf(ListItemElement)).apply(this, arguments));\\n  }\\n\\n  createClass(ListItemElement, [{\\n    key: 'init',\\n\\n\\n    /**\\n     * @attribute modifier\\n     * @type {String}\\n     * @description\\n     *   [en]The appearance of the list item.[/en]\\n     *   [ja]各要素の表現を指定します。[/ja]\\n     */\\n\\n    /**\\n     * @attribute lock-on-drag\\n     * @type {String}\\n     * @description\\n     *   [en]Prevent vertical scrolling when the user drags horizontally.[/en]\\n     *   [ja]この属性があると、ユーザーがこの要素を横方向にドラッグしている時に、縦方向のスクロールが起きないようになります。[/ja]\\n     */\\n\\n    /**\\n     * @attribute tappable\\n     * @type {Boolean}\\n     * @description\\n     *   [en]Makes the element react to taps.[/en]\\n     *   [ja][/ja]\\n     */\\n\\n    /**\\n     * @attribute tap-background-color\\n     * @type {Color}\\n     * @description\\n     *   [en] Changes the background color when tapped. For this to work, the attribute \\\"tappable\\\" needs to be set. The default color is \\\"#d9d9d9\\\". It will display as a ripple effect on Android.[/en]\\n     *   [ja][/ja]\\n     */\\n\\n    value: function init() {\\n      var _this2 = this;\\n\\n      contentReady(this, function () {\\n        _this2._compile();\\n      });\\n    }\\n  }, {\\n    key: '_compile',\\n    value: function _compile() {\\n      this.classList.add(defaultClassName$5);\\n\\n      var left = void 0,\\n          center = void 0,\\n          right = void 0;\\n\\n      for (var i = 0; i < this.children.length; i++) {\\n        var el = this.children[i];\\n\\n        if (el.classList.contains('left')) {\\n          el.classList.add('list-item__left');\\n          left = el;\\n        } else if (el.classList.contains('center')) {\\n          center = el;\\n        } else if (el.classList.contains('right')) {\\n          el.classList.add('list-item__right');\\n          right = el;\\n        }\\n      }\\n\\n      if (!center) {\\n        center = document.createElement('div');\\n\\n        if (!left && !right) {\\n          while (this.childNodes[0]) {\\n            center.appendChild(this.childNodes[0]);\\n          }\\n        } else {\\n          for (var _i = this.childNodes.length - 1; _i >= 0; _i--) {\\n            var _el = this.childNodes[_i];\\n            if (_el !== left && _el !== right) {\\n              center.insertBefore(_el, center.firstChild);\\n            }\\n          }\\n        }\\n\\n        this.insertBefore(center, right || null);\\n      }\\n\\n      center.classList.add('center');\\n      center.classList.add('list-item__center');\\n\\n      this._updateRipple();\\n\\n      ModifierUtil.initModifier(this, scheme$8);\\n\\n      autoStyle.prepare(this);\\n    }\\n  }, {\\n    key: 'attributeChangedCallback',\\n    value: function attributeChangedCallback(name, last, current) {\\n      switch (name) {\\n        case 'class':\\n          if (!this.classList.contains(defaultClassName$5)) {\\n            this.className = defaultClassName$5 + ' ' + current;\\n          }\\n          break;\\n        case 'modifier':\\n          ModifierUtil.onModifierChanged(last, current, this, scheme$8);\\n          break;\\n        case 'ripple':\\n          this._updateRipple();\\n          break;\\n      }\\n    }\\n  }, {\\n    key: 'connectedCallback',\\n    value: function connectedCallback() {\\n      this.addEventListener('drag', this._onDrag);\\n      this.addEventListener('touchstart', this._onTouch);\\n      this.addEventListener('mousedown', this._onTouch);\\n      this.addEventListener('touchend', this._onRelease);\\n      this.addEventListener('touchmove', this._onRelease);\\n      this.addEventListener('touchcancel', this._onRelease);\\n      this.addEventListener('mouseup', this._onRelease);\\n      this.addEventListener('mouseout', this._onRelease);\\n      this.addEventListener('touchleave', this._onRelease);\\n\\n      this._originalBackgroundColor = this.style.backgroundColor;\\n\\n      this.tapped = false;\\n    }\\n  }, {\\n    key: 'disconnectedCallback',\\n    value: function disconnectedCallback() {\\n      this.removeEventListener('drag', this._onDrag);\\n      this.removeEventListener('touchstart', this._onTouch);\\n      this.removeEventListener('mousedown', this._onTouch);\\n      this.removeEventListener('touchend', this._onRelease);\\n      this.removeEventListener('touchmove', this._onRelease);\\n      this.removeEventListener('touchcancel', this._onRelease);\\n      this.removeEventListener('mouseup', this._onRelease);\\n      this.removeEventListener('mouseout', this._onRelease);\\n      this.removeEventListener('touchleave', this._onRelease);\\n    }\\n  }, {\\n    key: '_updateRipple',\\n    value: function _updateRipple() {\\n      util.updateRipple(this);\\n    }\\n  }, {\\n    key: '_onDrag',\\n    value: function _onDrag(event) {\\n      var gesture = event.gesture;\\n      // Prevent vertical scrolling if the users pans left or right.\\n      if (this._shouldLockOnDrag() && ['left', 'right'].indexOf(gesture.direction) > -1) {\\n        gesture.preventDefault();\\n      }\\n    }\\n  }, {\\n    key: '_onTouch',\\n    value: function _onTouch() {\\n      if (this.tapped) {\\n        return;\\n      }\\n\\n      this.tapped = true;\\n\\n      this.style.transition = this._transition;\\n      this.style.webkitTransition = this._transition;\\n      this.style.MozTransition = this._transition;\\n\\n      if (this._tappable) {\\n        if (this.style.backgroundColor) {\\n          this._originalBackgroundColor = this.style.backgroundColor;\\n        }\\n\\n        this.style.backgroundColor = this._tapBackgroundColor;\\n        this.style.boxShadow = '0px -1px 0px 0px ' + this._tapBackgroundColor;\\n      }\\n    }\\n  }, {\\n    key: '_onRelease',\\n    value: function _onRelease() {\\n      this.tapped = false;\\n\\n      this.style.transition = '';\\n      this.style.webkitTransition = '';\\n      this.style.MozTransition = '';\\n\\n      this.style.backgroundColor = this._originalBackgroundColor || '';\\n      this.style.boxShadow = '';\\n    }\\n  }, {\\n    key: '_shouldLockOnDrag',\\n    value: function _shouldLockOnDrag() {\\n      return this.hasAttribute('lock-on-drag');\\n    }\\n  }, {\\n    key: '_transition',\\n    get: function get() {\\n      return 'background-color 0.0s linear 0.02s, box-shadow 0.0s linear 0.02s';\\n    }\\n  }, {\\n    key: '_tappable',\\n    get: function get() {\\n      return this.hasAttribute('tappable');\\n    }\\n  }, {\\n    key: '_tapBackgroundColor',\\n    get: function get() {\\n      return this.getAttribute('tap-background-color') || '#d9d9d9';\\n    }\\n  }], [{\\n    key: 'observedAttributes',\\n    get: function get() {\\n      return ['modifier', 'class', 'ripple'];\\n    }\\n  }]);\\n  return ListItemElement;\\n}(BaseElement);\\n\\ncustomElements.define('ons-list-item', ListItemElement);\\n\\n/*\\nCopyright 2013-2015 ASIAL CORPORATION\\n\\nLicensed under the Apache License, Version 2.0 (the \\\"License\\\");\\nyou may not use this file except in compliance with the License.\\nYou may obtain a copy of the License at\\n\\n   http://www.apache.org/licenses/LICENSE-2.0\\n\\nUnless required by applicable law or agreed to in writing, software\\ndistributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\nSee the License for the specific language governing permissions and\\nlimitations under the License.\\n\\n*/\\n\\nvar defaultClassName$6 = 'list';\\nvar scheme$9 = { '': 'list--*' };\\n\\n/**\\n * @element ons-list\\n * @category list\\n * @modifier inset\\n *   [en]Inset list that doesn't cover the whole width of the parent.[/en]\\n *   [ja]親要素の画面いっぱいに広がらないリストを表示します。[/ja]\\n * @modifier noborder\\n *   [en]A list with no borders at the top and bottom.[/en]\\n *   [ja]リストの上下のボーダーが無いリストを表示します。[/ja]\\n * @description\\n *   [en]Component to define a list, and the container for ons-list-item(s).[/en]\\n *   [ja]リストを表現するためのコンポーネント。ons-list-itemのコンテナとして使用します。[/ja]\\n * @seealso ons-list-item\\n *   [en]ons-list-item component[/en]\\n *   [ja]ons-list-itemコンポーネント[/ja]\\n * @seealso ons-list-header\\n *   [en]ons-list-header component[/en]\\n *   [ja]ons-list-headerコンポーネント[/ja]\\n * @seealso ons-lazy-repeat\\n *   [en]ons-lazy-repeat component[/en]\\n *   [ja]ons-lazy-repeatコンポーネント[/ja]\\n * @guide lists\\n *   [en]Using lists[/en]\\n *   [ja]リストを使う[/ja]\\n * @guide infinite-scroll\\n *   [en]Loading more items on infinite scroll[/en]\\n *   [ja]Loading more items on infinite scroll[/ja]\\n * @codepen yxcCt\\n * @tutorial vanilla/Reference/list\\n * @example\\n * <ons-list>\\n *   <ons-list-header>Header Text</ons-list-header>\\n *   <ons-list-item>Item</ons-list-item>\\n *   <ons-list-item>Item</ons-list-item>\\n * </ons-list>\\n */\\n\\nvar ListElement = function (_BaseElement) {\\n  inherits(ListElement, _BaseElement);\\n\\n  function ListElement() {\\n    classCallCheck(this, ListElement);\\n    return possibleConstructorReturn(this, (ListElement.__proto__ || Object.getPrototypeOf(ListElement)).apply(this, arguments));\\n  }\\n\\n  createClass(ListElement, [{\\n    key: 'init',\\n\\n\\n    /**\\n     * @attribute modifier\\n     * @type {String}\\n     * @description\\n     *   [en]The appearance of the list.[/en]\\n     *   [ja]リストの表現を指定します。[/ja]\\n     */\\n\\n    value: function init() {\\n      this._compile();\\n    }\\n  }, {\\n    key: '_compile',\\n    value: function _compile() {\\n      autoStyle.prepare(this);\\n      this.classList.add(defaultClassName$6);\\n      ModifierUtil.initModifier(this, scheme$9);\\n    }\\n  }, {\\n    key: 'attributeChangedCallback',\\n    value: function attributeChangedCallback(name, last, current) {\\n      switch (name) {\\n        case 'class':\\n          if (!this.classList.contains(defaultClassName$6)) {\\n            this.className = defaultClassName$6 + ' ' + current;\\n          }\\n          break;\\n        case 'modifier':\\n          ModifierUtil.onModifierChanged(last, current, this, scheme$9);\\n          break;\\n      }\\n    }\\n  }], [{\\n    key: 'observedAttributes',\\n    get: function get() {\\n      return ['modifier', 'class'];\\n    }\\n  }]);\\n  return ListElement;\\n}(BaseElement);\\n\\ncustomElements.define('ons-list', ListElement);\\n\\n/*\\nCopyright 2013-2015 ASIAL CORPORATION\\nLicensed under the Apache License, Version 2.0 (the \\\"License\\\");\\nyou may not use this file except in compliance with the License.\\nYou may obtain a copy of the License at\\n   http://www.apache.org/licenses/LICENSE-2.0\\nUnless required by applicable law or agreed to in writing, software\\ndistributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\nSee the License for the specific language governing permissions and\\nlimitations under the License.\\n*/\\n\\nvar defaultCheckboxClass = 'checkbox';\\nvar defaultRadioButtonClass = 'radio-button';\\n\\nvar scheme$10 = {\\n  '.text-input': 'text-input--*',\\n  '.text-input__label': 'text-input--*__label',\\n  '.radio-button': 'radio-button--*',\\n  '.radio-button__input': 'radio-button--*__input',\\n  '.radio-button__checkmark': 'radio-button--*__checkmark',\\n  '.checkbox': 'checkbox--*',\\n  '.checkbox__input': 'checkbox--*__input',\\n  '.checkbox__checkmark': 'checkbox--*__checkmark'\\n};\\n\\nvar INPUT_ATTRIBUTES = ['autocapitalize', 'autocomplete', 'autocorrect', 'autofocus', 'disabled', 'inputmode', 'max', 'maxlength', 'min', 'minlength', 'name', 'pattern', 'placeholder', 'readonly', 'size', 'step', 'type', 'validator', 'value'];\\n\\n/**\\n * @element ons-input\\n * @category form\\n * @modifier material\\n *  [en]Displays a Material Design input.[/en]\\n *  [ja][/ja]\\n * @modifier underbar\\n *  [en]Displays a horizontal line underneath a text input.[/en]\\n *  [ja][/ja]\\n * @modifier transparent\\n *  [en]Displays a transparent input. Works for Material Design.[/en]\\n *  [ja][/ja]\\n * @description\\n *  [en]\\n *    An input element. The `type` attribute can be used to change the input type. All text input types as well as `checkbox` and `radio` are supported.\\n *\\n *    The component will automatically render as a Material Design input on Android devices.\\n *\\n *    Most attributes that can be used for a normal `<input>` element can also be used on the `<ons-input>` element.\\n *  [/en]\\n *  [ja][/ja]\\n * @codepen ojQxLj\\n * @tutorial vanilla/Reference/input\\n * @seealso ons-range\\n *   [en]The `<ons-range>` element is used to display a range slider.[/en]\\n *   [ja][/ja]\\n * @seealso ons-switch\\n *   [en]The `<ons-switch>` element is used to display a draggable toggle switch.[/en]\\n *   [ja][/ja]\\n * @seealso ons-select\\n *   [en]The `<ons-select>` element is used to display a select box.[/en]\\n *   [ja][/ja]\\n * @guide adding-page-content\\n *   [en]Using form components[/en]\\n *   [ja]フォームを使う[/ja]\\n * @guide using-modifier [en]More details about the `modifier` attribute[/en][ja]modifier属性の使い方[/ja]\\n * @example\\n * <ons-input placeholder=\\\"Username\\\" float></ons-input>\\n * <ons-input type=\\\"checkbox\\\" checked></ons-input>\\n */\\n\\nvar InputElement = function (_BaseElement) {\\n  inherits(InputElement, _BaseElement);\\n\\n  function InputElement() {\\n    classCallCheck(this, InputElement);\\n    return possibleConstructorReturn(this, (InputElement.__proto__ || Object.getPrototypeOf(InputElement)).apply(this, arguments));\\n  }\\n\\n  createClass(InputElement, [{\\n    key: 'init',\\n\\n\\n    /**\\n     * @attribute placeholder\\n     * @type {String}\\n     * @description\\n     *   [en]Placeholder text. In Material Design, this placeholder will be a floating label.[/en]\\n     *   [ja][/ja]\\n     */\\n\\n    /**\\n     * @attribute float\\n     * @description\\n     *  [en]If this attribute is present, the placeholder will be animated in Material Design.[/en]\\n     *  [ja]この属性が設定された時、ラベルはアニメーションするようになります。[/ja]\\n     */\\n\\n    /**\\n     * @attribute type\\n     * @type {String}\\n     * @description\\n     *  [en]\\n     *    Specify the input type. This is the same as the \\\"type\\\" attribute for normal inputs. However, for \\\"range\\\" you should instead use <ons-range> element.\\n     *\\n     *    Please take a look at [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attr-type) for an exhaustive list of possible values. Depending on the platform and browser version some of these might not work.\\n     *  [/en]\\n     *  [ja][/ja]\\n     */\\n\\n    /**\\n     * @attribute input-id\\n     * @type {String}\\n     * @description\\n     *  [en]Specify the \\\"id\\\" attribute of the inner `<input>` element. This is useful when using `<label for=\\\"...\\\">` elements.[/en]\\n     *  [ja][/ja]\\n     */\\n\\n    value: function init() {\\n      var _this2 = this;\\n\\n      contentReady(this, function () {\\n        _this2._compile();\\n        _this2.attributeChangedCallback('checked', null, _this2.getAttribute('checked'));\\n      });\\n\\n      this._boundOnInput = this._onInput.bind(this);\\n      this._boundOnFocusin = this._onFocusin.bind(this);\\n      this._boundDelegateEvent = this._delegateEvent.bind(this);\\n    }\\n  }, {\\n    key: '_compile',\\n    value: function _compile() {\\n      autoStyle.prepare(this);\\n\\n      if (this.children.length !== 0) {\\n        return;\\n      }\\n\\n      var helper = document.createElement('span');\\n      helper.classList.add('_helper');\\n\\n      var container = document.createElement('label');\\n      container.appendChild(document.createElement('input'));\\n      container.appendChild(helper);\\n\\n      var label = document.createElement('span');\\n      label.classList.add('input-label');\\n\\n      util.arrayFrom(this.childNodes).forEach(function (element) {\\n        return label.appendChild(element);\\n      });\\n      this.hasAttribute('content-left') ? container.insertBefore(label, container.firstChild) : container.appendChild(label);\\n\\n      this.appendChild(container);\\n\\n      switch (this.getAttribute('type')) {\\n        case 'checkbox':\\n          this.classList.add(defaultCheckboxClass);\\n          this._input.classList.add('checkbox__input');\\n          this._helper.classList.add('checkbox__checkmark');\\n          this._updateBoundAttributes();\\n          break;\\n\\n        case 'radio':\\n          this.classList.add(defaultRadioButtonClass);\\n          this._input.classList.add('radio-button__input');\\n          this._helper.classList.add('radio-button__checkmark');\\n          this._updateBoundAttributes();\\n          break;\\n\\n        default:\\n          this._input.classList.add('text-input');\\n          this._helper.classList.add('text-input__label');\\n          this._input.parentElement.classList.add('text-input__container');\\n\\n          this._updateLabel();\\n          this._updateBoundAttributes();\\n          this._updateLabelClass();\\n          break;\\n      }\\n\\n      if (this.hasAttribute('input-id')) {\\n        this._input.id = this.getAttribute('input-id');\\n      }\\n\\n      ModifierUtil.initModifier(this, scheme$10);\\n    }\\n  }, {\\n    key: 'attributeChangedCallback',\\n    value: function attributeChangedCallback(name, last, current) {\\n      var _this3 = this;\\n\\n      switch (name) {\\n        case 'modifier':\\n          contentReady(this, function () {\\n            return ModifierUtil.onModifierChanged(last, current, _this3, scheme$10);\\n          });\\n          break;\\n        case 'placeholder':\\n          contentReady(this, function () {\\n            return _this3._updateLabel();\\n          });\\n          break;\\n        case 'input-id':\\n          contentReady(this, function () {\\n            return _this3._input.id = current;\\n          });\\n          break;\\n        case 'checked':\\n          this.checked = current !== null;\\n          break;\\n        case 'class':\\n          switch (this.getAttribute('type')) {\\n            case 'checkbox':\\n              if (!this.classList.contains(defaultCheckboxClass)) {\\n                this.className = defaultCheckboxClass + ' ' + current;\\n              }\\n              break;\\n            case 'radio':\\n              if (!this.classList.contains(defaultRadioButtonClass)) {\\n                this.className = defaultRadioButtonClass + ' ' + current;\\n              }\\n              break;\\n          }\\n          break;\\n      }\\n\\n      if (INPUT_ATTRIBUTES.indexOf(name) >= 0) {\\n        contentReady(this, function () {\\n          return _this3._updateBoundAttributes();\\n        });\\n      }\\n    }\\n  }, {\\n    key: 'connectedCallback',\\n    value: function connectedCallback() {\\n      var _this4 = this;\\n\\n      contentReady(this, function () {\\n        if (_this4._input.type !== 'checkbox' && _this4._input.type !== 'radio') {\\n          _this4._input.addEventListener('input', _this4._boundOnInput);\\n          _this4._input.addEventListener('focusin', _this4._boundOnFocusin);\\n          _this4._input.addEventListener('focusout', _this4._boundOnFocusout);\\n        }\\n\\n        _this4._input.addEventListener('focus', _this4._boundDelegateEvent);\\n        _this4._input.addEventListener('blur', _this4._boundDelegateEvent);\\n      });\\n    }\\n  }, {\\n    key: 'disconnectedCallback',\\n    value: function disconnectedCallback() {\\n      var _this5 = this;\\n\\n      contentReady(this, function () {\\n        _this5._input.removeEventListener('input', _this5._boundOnInput);\\n        _this5._input.removeEventListener('focusin', _this5._boundOnFocusin);\\n        _this5._input.removeEventListener('focus', _this5._boundDelegateEvent);\\n        _this5._input.removeEventListener('blur', _this5._boundDelegateEvent);\\n      });\\n    }\\n  }, {\\n    key: '_setLabel',\\n    value: function _setLabel(value) {\\n      if (typeof this._helper.textContent !== 'undefined') {\\n        this._helper.textContent = value;\\n      } else {\\n        this._helper.innerText = value;\\n      }\\n    }\\n  }, {\\n    key: '_updateLabel',\\n    value: function _updateLabel() {\\n      this._setLabel(this.hasAttribute('placeholder') ? this.getAttribute('placeholder') : '');\\n    }\\n  }, {\\n    key: '_updateBoundAttributes',\\n    value: function _updateBoundAttributes() {\\n      var _this6 = this;\\n\\n      INPUT_ATTRIBUTES.forEach(function (attr) {\\n        if (_this6.hasAttribute(attr)) {\\n          _this6._input.setAttribute(attr, _this6.getAttribute(attr));\\n        } else {\\n          _this6._input.removeAttribute(attr);\\n        }\\n      });\\n    }\\n  }, {\\n    key: '_updateLabelClass',\\n    value: function _updateLabelClass() {\\n      if (this.value === '') {\\n        this._helper.classList.remove('text-input--material__label--active');\\n      } else if (['checkbox', 'radio'].indexOf(this.getAttribute('type')) === -1) {\\n        this._helper.classList.add('text-input--material__label--active');\\n      }\\n    }\\n  }, {\\n    key: '_delegateEvent',\\n    value: function _delegateEvent(event) {\\n      var e = new CustomEvent(event.type, {\\n        bubbles: false,\\n        cancelable: true\\n      });\\n\\n      return this.dispatchEvent(e);\\n    }\\n  }, {\\n    key: '_onInput',\\n    value: function _onInput(event) {\\n      this._updateLabelClass();\\n    }\\n  }, {\\n    key: '_onFocusin',\\n    value: function _onFocusin(event) {\\n      this._updateLabelClass();\\n    }\\n  }, {\\n    key: '_input',\\n    get: function get() {\\n      return this.querySelector('input');\\n    }\\n  }, {\\n    key: '_helper',\\n    get: function get() {\\n      return this.querySelector('._helper');\\n    }\\n\\n    /**\\n     * @property value\\n     * @type {String}\\n     * @description\\n     *   [en]The current value of the input.[/en]\\n     *   [ja][/ja]\\n     */\\n\\n  }, {\\n    key: 'value',\\n    get: function get() {\\n      return this._input === null ? this.getAttribute('value') : this._input.value;\\n    },\\n    set: function set(val) {\\n      var _this7 = this;\\n\\n      contentReady(this, function () {\\n        if (val instanceof Date) {\\n          val = val.toISOString().substring(0, 10);\\n        }\\n        _this7._input.value = val;\\n        _this7._onInput();\\n      });\\n    }\\n\\n    /**\\n     * @property checked\\n     * @type {Boolean}\\n     * @description\\n     *   [en]Whether the input is checked or not. Only works for `radio` and `checkbox` type inputs.[/en]\\n     *   [ja][/ja]\\n     */\\n\\n  }, {\\n    key: 'checked',\\n    get: function get() {\\n      return this._input.checked;\\n    },\\n    set: function set(val) {\\n      var _this8 = this;\\n\\n      contentReady(this, function () {\\n        _this8._input.checked = val;\\n      });\\n    }\\n\\n    /**\\n     * @property disabled\\n     * @type {Boolean}\\n     * @description\\n     *   [en]Whether the input is disabled or not.[/en]\\n     *   [ja]無効化されている場合に`true`。[/ja]\\n     */\\n\\n  }, {\\n    key: 'disabled',\\n    set: function set(value) {\\n      return util.toggleAttribute(this, 'disabled', value);\\n    },\\n    get: function get() {\\n      return this.hasAttribute('disabled');\\n    }\\n  }, {\\n    key: '_isTextInput',\\n    get: function get() {\\n      return this.type !== 'radio' && this.type !== 'checkbox';\\n    }\\n  }, {\\n    key: 'type',\\n    get: function get() {\\n      return this.getAttribute('type');\\n    }\\n  }], [{\\n    key: 'observedAttributes',\\n    get: function get() {\\n      return ['class', 'modifier', 'placeholder', 'input-id', 'checked'].concat(INPUT_ATTRIBUTES);\\n    }\\n  }, {\\n    key: 'events',\\n    get: function get() {\\n      return ['change', 'input', 'focus', 'focusin', 'focusout', 'blur'];\\n    }\\n  }]);\\n  return InputElement;\\n}(BaseElement);\\n\\ncustomElements.define('ons-input', InputElement);\\n\\n/*\\nCopyright 2013-2015 ASIAL CORPORATION\\n\\nLicensed under the Apache License, Version 2.0 (the \\\"License\\\");\\nyou may not use this file except in compliance with the License.\\nYou may obtain a copy of the License at\\n\\n   http://www.apache.org/licenses/LICENSE-2.0\\n\\nUnless required by applicable law or agreed to in writing, software\\ndistributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\nSee the License for the specific language governing permissions and\\nlimitations under the License.\\n\\n*/\\n\\nvar ModalAnimator = function (_BaseAnimator) {\\n  inherits(ModalAnimator, _BaseAnimator);\\n\\n  /**\\n   * @param {Object} options\\n   * @param {String} options.timing\\n   * @param {Number} options.duration\\n   * @param {Number} options.delay\\n   */\\n  function ModalAnimator() {\\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\\n        _ref$timing = _ref.timing,\\n        timing = _ref$timing === undefined ? 'linear' : _ref$timing,\\n        _ref$delay = _ref.delay,\\n        delay = _ref$delay === undefined ? 0 : _ref$delay,\\n        _ref$duration = _ref.duration,\\n        duration = _ref$duration === undefined ? 0.2 : _ref$duration;\\n\\n    classCallCheck(this, ModalAnimator);\\n    return possibleConstructorReturn(this, (ModalAnimator.__proto__ || Object.getPrototypeOf(ModalAnimator)).call(this, { timing: timing, delay: delay, duration: duration }));\\n  }\\n\\n  /**\\n   * @param {HTMLElement} modal\\n   * @param {Function} callback\\n   */\\n\\n\\n  createClass(ModalAnimator, [{\\n    key: 'show',\\n    value: function show(modal, callback) {\\n      callback();\\n    }\\n\\n    /**\\n     * @param {HTMLElement} modal\\n     * @param {Function} callback\\n     */\\n\\n  }, {\\n    key: 'hide',\\n    value: function hide(modal, callback) {\\n      callback();\\n    }\\n  }]);\\n  return ModalAnimator;\\n}(BaseAnimator);\\n\\n/*\\nCopyright 2013-2015 ASIAL CORPORATION\\n\\nLicensed under the Apache License, Version 2.0 (the \\\"License\\\");\\nyou may not use this file except in compliance with the License.\\nYou may obtain a copy of the License at\\n\\n   http://www.apache.org/licenses/LICENSE-2.0\\n\\nUnless required by applicable law or agreed to in writing, software\\ndistributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\nSee the License for the specific language governing permissions and\\nlimitations under the License.\\n\\n*/\\n\\n/**\\n * iOS style animator for dialog.\\n */\\n\\nvar FadeModalAnimator = function (_ModalAnimator) {\\n  inherits(FadeModalAnimator, _ModalAnimator);\\n\\n  function FadeModalAnimator() {\\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\\n        _ref$timing = _ref.timing,\\n        timing = _ref$timing === undefined ? 'linear' : _ref$timing,\\n        _ref$delay = _ref.delay,\\n        delay = _ref$delay === undefined ? 0 : _ref$delay,\\n        _ref$duration = _ref.duration,\\n        duration = _ref$duration === undefined ? 0.3 : _ref$duration;\\n\\n    classCallCheck(this, FadeModalAnimator);\\n    return possibleConstructorReturn(this, (FadeModalAnimator.__proto__ || Object.getPrototypeOf(FadeModalAnimator)).call(this, { timing: timing, delay: delay, duration: duration }));\\n  }\\n\\n  /**\\n   * @param {HTMLElement} modal\\n   * @param {Function} callback\\n   */\\n\\n\\n  createClass(FadeModalAnimator, [{\\n    key: 'show',\\n    value: function show(modal, callback) {\\n      callback = callback ? callback : function () {};\\n\\n      Animit(modal).queue({\\n        opacity: 0\\n      }).wait(this.delay).queue({\\n        opacity: 1.0\\n      }, {\\n        duration: this.duration,\\n        timing: this.timing\\n      }).queue(function (done) {\\n        callback();\\n        done();\\n      }).play();\\n    }\\n\\n    /**\\n     * @param {HTMLElement} modal\\n     * @param {Function} callback\\n     */\\n\\n  }, {\\n    key: 'hide',\\n    value: function hide(modal, callback) {\\n      callback = callback ? callback : function () {};\\n\\n      Animit(modal).queue({\\n        opacity: 1\\n      }).wait(this.delay).queue({\\n        opacity: 0\\n      }, {\\n        duration: this.duration,\\n        timing: this.timing\\n      }).queue(function (done) {\\n        callback();\\n        done();\\n      }).play();\\n    }\\n  }]);\\n  return FadeModalAnimator;\\n}(ModalAnimator);\\n\\n/*\\nCopyright 2013-2015 ASIAL CORPORATION\\n\\nLicensed under the Apache License, Version 2.0 (the \\\"License\\\");\\nyou may not use this file except in compliance with the License.\\nYou may obtain a copy of the License at\\n\\n   http://www.apache.org/licenses/LICENSE-2.0\\n\\nUnless required by applicable law or agreed to in writing, software\\ndistributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\nSee the License for the specific language governing permissions and\\nlimitations under the License.\\n\\n*/\\n\\nvar scheme$11 = {\\n  '': 'modal--*',\\n  'modal__content': 'modal--*__content'\\n};\\n\\nvar defaultClassName$7 = 'modal';\\n\\nvar _animatorDict$2 = {\\n  'default': ModalAnimator,\\n  'fade': FadeModalAnimator,\\n  'none': ModalAnimator\\n};\\n\\n/**\\n * @element ons-modal\\n * @category dialog\\n * @description\\n *   [en]\\n *     Modal component that masks current screen. Underlying components are not subject to any events while the modal component is shown.\\n *\\n *     This component can be used to block user input while some operation is running or to show some information to the user.\\n *   [/en]\\n *   [ja]\\n *     画面全体をマスクするモーダル用コンポーネントです。下側にあるコンポーネントは、\\n *     モーダルが表示されている間はイベント通知が行われません。\\n *   [/ja]\\n * @guide dialogs\\n *   [en]Dialog components[/en]\\n *   [ja]Dialog components[/ja]\\n * @seealso ons-dialog\\n *   [en]The `<ons-dialog>` component can be used to create a modal dialog.[/en]\\n *   [ja][/ja]\\n * @codepen devIg\\n * @example\\n * <ons-modal id=\\\"modal\\\">\\n *   Modal content\\n * </ons-modal>\\n * <script>\\n *   var modal = document.getElementById('modal');\\n *   modal.show();\\n * </script>\\n */\\n\\nvar ModalElement = function (_BaseElement) {\\n  inherits(ModalElement, _BaseElement);\\n\\n  function ModalElement() {\\n    classCallCheck(this, ModalElement);\\n    return possibleConstructorReturn(this, (ModalElement.__proto__ || Object.getPrototypeOf(ModalElement)).apply(this, arguments));\\n  }\\n\\n  createClass(ModalElement, [{\\n    key: 'init',\\n\\n\\n    /**\\n     * @attribute animation\\n     * @type {String}\\n     * @default default\\n     * @description\\n     *  [en]The animation used when showing and hiding the modal. Can be either `\\\"none\\\"` or `\\\"fade\\\"`.[/en]\\n     *  [ja]モーダルを表示する際のアニメーション名を指定します。\\\"none\\\"もしくは\\\"fade\\\"を指定できます。[/ja]\\n     */\\n\\n    /**\\n     * @attribute animation-options\\n     * @type {Expression}\\n     * @description\\n     *  [en]Specify the animation's duration, timing and delay with an object literal. E.g. `{duration: 0.2, delay: 1, timing: 'ease-in'}`.[/en]\\n     *  [ja]アニメーション時のduration, timing, delayをオブジェクトリテラルで指定します。e.g. <code>{duration: 0.2, delay: 1, timing: 'ease-in'}</code>[/ja]\\n     */\\n\\n    value: function init() {\\n      var _this2 = this;\\n\\n      contentReady(this, function () {\\n        _this2._compile();\\n      });\\n\\n      this._doorLock = new DoorLock();\\n\\n      this._animatorFactory = new AnimatorFactory({\\n        animators: _animatorDict$2,\\n        baseClass: ModalAnimator,\\n        baseClassName: 'ModalAnimator',\\n        defaultAnimation: this.getAttribute('animation')\\n      });\\n    }\\n\\n    /**\\n     * @property onDeviceBackButton\\n     * @type {Object}\\n     * @description\\n     *   [en]Back-button handler.[/en]\\n     *   [ja]バックボタンハンドラ。[/ja]\\n     */\\n\\n  }, {\\n    key: '_compile',\\n    value: function _compile() {\\n      this.style.display = 'none';\\n      this.style.zIndex = 10001;\\n      this.classList.add(defaultClassName$7);\\n\\n      if (!util.findChild(this, '.modal__content')) {\\n        var content = document.createElement('div');\\n        content.classList.add('modal__content');\\n\\n        while (this.childNodes[0]) {\\n          var node = this.childNodes[0];\\n          this.removeChild(node);\\n          content.insertBefore(node, null);\\n        }\\n\\n        this.appendChild(content);\\n      }\\n\\n      ModifierUtil.initModifier(this, scheme$11);\\n    }\\n  }, {\\n    key: 'disconnectedCallback',\\n    value: function disconnectedCallback() {\\n      if (this._backButtonHandler) {\\n        this._backButtonHandler.destroy();\\n      }\\n    }\\n  }, {\\n    key: 'connectedCallback',\\n    value: function connectedCallback() {\\n      this.onDeviceBackButton = function () {\\n        return undefined;\\n      };\\n    }\\n\\n    /**\\n     * @property visible\\n     * @readonly\\n     * @type {Boolean}\\n     * @description\\n     *   [en]Whether the element is visible or not.[/en]\\n     *   [ja]要素が見える場合に`true`。[/ja]\\n     */\\n\\n  }, {\\n    key: 'show',\\n\\n\\n    /**\\n     * @method show\\n     * @signature show([options])\\n     * @param {Object} [options]\\n     *   [en]Parameter object.[/en]\\n     *   [ja]オプションを指定するオブジェクト。[/ja]\\n     * @param {String} [options.animation]\\n     *   [en]Animation name. Available animations are `\\\"none\\\"` and `\\\"fade\\\"`.[/en]\\n     *   [ja]アニメーション名を指定します。\\\"none\\\", \\\"fade\\\"のいずれかを指定します。[/ja]\\n     * @param {String} [options.animationOptions]\\n     *   [en]Specify the animation's duration, delay and timing. E.g. `{duration: 0.2, delay: 0.4, timing: 'ease-in'}`.[/en]\\n     *   [ja]アニメーション時のduration, delay, timingを指定します。e.g. {duration: 0.2, delay: 0.4, timing: 'ease-in'}[/ja]\\n     * @description\\n     *   [en]Show modal.[/en]\\n     *   [ja]モーダルを表示します。[/ja]\\n     * @return {Promise}\\n     *   [en]Resolves to the displayed element[/en]\\n     *   [ja][/ja]\\n     */\\n    value: function show() {\\n      var _this3 = this;\\n\\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n\\n      options.animationOptions = util.extend(options.animationOptions || {}, AnimatorFactory.parseAnimationOptionsString(this.getAttribute('animation-options')));\\n\\n      var callback = options.callback || function () {};\\n\\n      var tryShow = function tryShow() {\\n        var unlock = _this3._doorLock.lock();\\n        var animator = _this3._animatorFactory.newAnimator(options);\\n\\n        return new Promise(function (resolve) {\\n          contentReady(_this3, function () {\\n            _this3.style.display = 'table';\\n            animator.show(_this3, function () {\\n              unlock();\\n\\n              util.propagateAction(_this3, '_show');\\n              callback();\\n              resolve(_this3);\\n            });\\n          });\\n        });\\n      };\\n\\n      return new Promise(function (resolve) {\\n        _this3._doorLock.waitUnlock(function () {\\n          return resolve(tryShow());\\n        });\\n      });\\n    }\\n\\n    /**\\n     * @method toggle\\n     * @signature toggle([options])\\n     * @param {Object} [options]\\n     *   [en]Parameter object.[/en]\\n     *   [ja]オプションを指定するオブジェクト。[/ja]\\n     * @param {String} [options.animation]\\n     *   [en]Animation name. Available animations are `\\\"none\\\"` and `\\\"fade\\\"`.[/en]\\n     *   [ja]アニメーション名を指定します。\\\"none\\\", \\\"fade\\\"のいずれかを指定します。[/ja]\\n     * @param {String} [options.animationOptions]\\n     *   [en]Specify the animation's duration, delay and timing. E.g. `{duration: 0.2, delay: 0.4, timing: 'ease-in'}`.[/en]\\n     *   [ja]アニメーション時のduration, delay, timingを指定します。e.g. {duration: 0.2, delay: 0.4, timing: 'ease-in'}[/ja]\\n     * @description\\n     *   [en]Toggle modal visibility.[/en]\\n     *   [ja]モーダルの表示を切り替えます。[/ja]\\n     */\\n\\n  }, {\\n    key: 'toggle',\\n    value: function toggle() {\\n      if (this.visible) {\\n        return this.hide.apply(this, arguments);\\n      } else {\\n        return this.show.apply(this, arguments);\\n      }\\n    }\\n\\n    /**\\n     * @method hide\\n     * @signature hide([options])\\n     * @param {Object} [options]\\n     *   [en]Parameter object.[/en]\\n     *   [ja]オプションを指定するオブジェクト。[/ja]\\n     * @param {String} [options.animation]\\n     *   [en]Animation name. Available animations are `\\\"none\\\"` and `\\\"fade\\\"`.[/en]\\n     *   [ja]アニメーション名を指定します。\\\"none\\\", \\\"fade\\\"のいずれかを指定します。[/ja]\\n     * @param {String} [options.animationOptions]\\n     *   [en]Specify the animation's duration, delay and timing. E.g. `{duration: 0.2, delay: 0.4, timing: 'ease-in'}`.[/en]\\n     *   [ja]アニメーション時のduration, delay, timingを指定します。e.g. {duration: 0.2, delay: 0.4, timing: 'ease-in'}[/ja]\\n     * @description\\n     *   [en]Hide modal.[/en]\\n     *   [ja]モーダルを非表示にします。[/ja]\\n     * @return {Promise}\\n     *   [en]Resolves to the hidden element[/en]\\n     *   [ja][/ja]\\n     */\\n\\n  }, {\\n    key: 'hide',\\n    value: function hide() {\\n      var _this4 = this;\\n\\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n\\n      options.animationOptions = util.extend(options.animationOptions || {}, AnimatorFactory.parseAnimationOptionsString(this.getAttribute('animation-options')));\\n\\n      var callback = options.callback || function () {};\\n\\n      var tryHide = function tryHide() {\\n        var unlock = _this4._doorLock.lock();\\n        var animator = _this4._animatorFactory.newAnimator(options);\\n\\n        return new Promise(function (resolve) {\\n          contentReady(_this4, function () {\\n            animator.hide(_this4, function () {\\n              _this4.style.display = 'none';\\n              unlock();\\n\\n              util.propagateAction(_this4, '_hide');\\n              callback();\\n              resolve(_this4);\\n            });\\n          });\\n        });\\n      };\\n\\n      return new Promise(function (resolve) {\\n        _this4._doorLock.waitUnlock(function () {\\n          return resolve(tryHide());\\n        });\\n      });\\n    }\\n  }, {\\n    key: 'attributeChangedCallback',\\n    value: function attributeChangedCallback(name, last, current) {\\n      if (name === 'class') {\\n        if (!this.classList.contains(defaultClassName$7)) {\\n          this.className = defaultClassName$7 + ' ' + current;\\n        }\\n      } else if (name === 'modifier') {\\n        return ModifierUtil.onModifierChanged(last, current, this, scheme$11);\\n      }\\n    }\\n\\n    /**\\n     * @param {String} name\\n     * @param {Function} Animator\\n     */\\n\\n  }, {\\n    key: 'onDeviceBackButton',\\n    get: function get() {\\n      return this._backButtonHandler;\\n    },\\n    set: function set(handler) {\\n      if (this._backButtonHandler) {\\n        this._backButtonHandler.destroy();\\n      }\\n\\n      this._backButtonHandler = deviceBackButtonDispatcher.createHandler(this, handler);\\n    }\\n  }, {\\n    key: 'visible',\\n    get: function get() {\\n      return this.style.display !== 'none';\\n    }\\n  }], [{\\n    key: 'registerAnimator',\\n    value: function registerAnimator(name, Animator) {\\n      if (!(Animator.prototype instanceof ModalAnimator)) {\\n        throw new Error('\\\"Animator\\\" param must inherit OnsModalElement.ModalAnimator');\\n      }\\n      _animatorDict$2[name] = Animator;\\n    }\\n  }, {\\n    key: 'observedAttributes',\\n    get: function get() {\\n      return ['modifier', 'class'];\\n    }\\n  }, {\\n    key: 'animators',\\n    get: function get() {\\n      return _animatorDict$2;\\n    }\\n  }, {\\n    key: 'ModalAnimator',\\n    get: function get() {\\n      return ModalAnimator;\\n    }\\n  }]);\\n  return ModalElement;\\n}(BaseElement);\\n\\ncustomElements.define('ons-modal', ModalElement);\\n\\n/*\\nCopyright 2013-2015 ASIAL CORPORATION\\n\\nLicensed under the Apache License, Version 2.0 (the \\\"License\\\");\\nyou may not use this file except in compliance with the License.\\nYou may obtain a copy of the License at\\n\\n   http://www.apache.org/licenses/LICENSE-2.0\\n\\nUnless required by applicable law or agreed to in writing, software\\ndistributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\nSee the License for the specific language governing permissions and\\nlimitations under the License.\\n\\n*/\\n\\nvar NavigatorTransitionAnimator = function (_BaseAnimator) {\\n  inherits(NavigatorTransitionAnimator, _BaseAnimator);\\n\\n  /**\\n   * @param {Object} options\\n   * @param {String} options.timing\\n   * @param {Number} options.duration\\n   * @param {Number} options.delay\\n   */\\n  function NavigatorTransitionAnimator(options) {\\n    classCallCheck(this, NavigatorTransitionAnimator);\\n\\n    options = util.extend({\\n      timing: 'linear',\\n      duration: '0.4',\\n      delay: '0'\\n    }, options || {});\\n\\n    return possibleConstructorReturn(this, (NavigatorTransitionAnimator.__proto__ || Object.getPrototypeOf(NavigatorTransitionAnimator)).call(this, options));\\n  }\\n\\n  createClass(NavigatorTransitionAnimator, [{\\n    key: 'push',\\n    value: function push(enterPage, leavePage, callback) {\\n      callback();\\n    }\\n  }, {\\n    key: 'pop',\\n    value: function pop(enterPage, leavePage, callback) {\\n      callback();\\n    }\\n  }, {\\n    key: 'block',\\n    value: function block(page) {\\n      var blocker = util.createElement('\\\\n      <div style=\\\"position: absolute; background-color: transparent; width: 100%; height: 100%; z-index: 100000\\\"></div>\\\\n    ');\\n      page.parentNode.appendChild(blocker);\\n      return function () {\\n        return blocker.remove();\\n      };\\n    }\\n  }]);\\n  return NavigatorTransitionAnimator;\\n}(BaseAnimator);\\n\\n/*\\nCopyright 2013-2015 ASIAL CORPORATION\\n\\nLicensed under the Apache License, Version 2.0 (the \\\"License\\\");\\nyou may not use this file except in compliance with the License.\\nYou may obtain a copy of the License at\\n\\n   http://www.apache.org/licenses/LICENSE-2.0\\n\\nUnless required by applicable law or agreed to in writing, software\\ndistributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\nSee the License for the specific language governing permissions and\\nlimitations under the License.\\n\\n*/\\n\\n/**\\n * Slide animator for navigator transition like iOS's screen slide transition.\\n */\\n\\nvar IOSSlideNavigatorTransitionAnimator = function (_NavigatorTransitionA) {\\n  inherits(IOSSlideNavigatorTransitionAnimator, _NavigatorTransitionA);\\n\\n  function IOSSlideNavigatorTransitionAnimator() {\\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\\n        _ref$timing = _ref.timing,\\n        timing = _ref$timing === undefined ? 'ease' : _ref$timing,\\n        _ref$delay = _ref.delay,\\n        delay = _ref$delay === undefined ? 0 : _ref$delay,\\n        _ref$duration = _ref.duration,\\n        duration = _ref$duration === undefined ? 0.4 : _ref$duration;\\n\\n    classCallCheck(this, IOSSlideNavigatorTransitionAnimator);\\n\\n    var _this = possibleConstructorReturn(this, (IOSSlideNavigatorTransitionAnimator.__proto__ || Object.getPrototypeOf(IOSSlideNavigatorTransitionAnimator)).call(this, { timing: timing, delay: delay, duration: duration }));\\n\\n    _this.backgroundMask = util.createElement('\\\\n      <div style=\\\"position: absolute; width: 100%; height: 100%;\\\\n        background-color: black; opacity: 0; z-index: 2\\\"></div>\\\\n    ');\\n\\n    return _this;\\n  }\\n\\n  createClass(IOSSlideNavigatorTransitionAnimator, [{\\n    key: '_decompose',\\n    value: function _decompose(page) {\\n      var toolbar = page._getToolbarElement();\\n      var left = toolbar._getToolbarLeftItemsElement();\\n      var right = toolbar._getToolbarRightItemsElement();\\n\\n      var excludeBackButton = function excludeBackButton(elements) {\\n        var result = [];\\n\\n        for (var i = 0; i < elements.length; i++) {\\n          if (elements[i].nodeName.toLowerCase() !== 'ons-back-button') {\\n            result.push(elements[i]);\\n          }\\n        }\\n\\n        return result;\\n      };\\n\\n      var other = [].concat(left.children.length === 0 ? left : excludeBackButton(left.children)).concat(right.children.length === 0 ? right : excludeBackButton(right.children));\\n\\n      return {\\n        toolbarCenter: toolbar._getToolbarCenterItemsElement(),\\n        backButtonIcon: toolbar._getToolbarBackButtonIconElement(),\\n        backButtonLabel: toolbar._getToolbarBackButtonLabelElement(),\\n        other: other,\\n        content: page._getContentElement(),\\n        background: page._getBackgroundElement(),\\n        toolbar: toolbar,\\n        bottomToolbar: page._getBottomToolbarElement()\\n      };\\n    }\\n  }, {\\n    key: '_shouldAnimateToolbar',\\n    value: function _shouldAnimateToolbar(enterPage, leavePage) {\\n      var bothPageHasToolbar = enterPage._canAnimateToolbar() && leavePage._canAnimateToolbar();\\n\\n      var noMaterialToolbar = !enterPage._getToolbarElement().classList.contains('toolbar--material') && !leavePage._getToolbarElement().classList.contains('toolbar--material');\\n\\n      return bothPageHasToolbar && noMaterialToolbar;\\n    }\\n  }, {\\n    key: '_calculateDelta',\\n    value: function _calculateDelta(element, decomposition) {\\n      var title = void 0,\\n          label = void 0;\\n\\n      var pageRect = element.getBoundingClientRect();\\n      if (decomposition.backButtonLabel.classList.contains('back-button__label')) {\\n        var labelRect = decomposition.backButtonLabel.getBoundingClientRect();\\n        title = Math.round(pageRect.width / 2 - labelRect.width / 2 - labelRect.left);\\n      } else {\\n        title = Math.round(pageRect.width / 2 * 0.6);\\n      }\\n\\n      if (decomposition.backButtonIcon.classList.contains('back-button__icon')) {\\n        label = decomposition.backButtonIcon.getBoundingClientRect().right - 2;\\n      }\\n\\n      return { title: title, label: label };\\n    }\\n\\n    /**\\n     * @param {Object} enterPage\\n     * @param {Object} leavePage\\n     * @param {Function} callback\\n     */\\n\\n  }, {\\n    key: 'push',\\n    value: function push(enterPage, leavePage, callback) {\\n      var _this2 = this;\\n\\n      this.backgroundMask.remove();\\n      leavePage.parentNode.insertBefore(this.backgroundMask, leavePage.nextSibling);\\n\\n      var unblock = get$1(IOSSlideNavigatorTransitionAnimator.prototype.__proto__ || Object.getPrototypeOf(IOSSlideNavigatorTransitionAnimator.prototype), 'block', this).call(this, enterPage);\\n\\n      contentReady(enterPage, function () {\\n        var enterPageTarget = util.findToolbarPage(enterPage) || enterPage;\\n        var leavePageTarget = util.findToolbarPage(leavePage) || leavePage;\\n        var enterPageDecomposition = _this2._decompose(enterPageTarget);\\n        var leavePageDecomposition = _this2._decompose(leavePageTarget);\\n\\n        var delta = _this2._calculateDelta(leavePage, enterPageDecomposition);\\n\\n        var maskClear = Animit(_this2.backgroundMask).saveStyle().queue({\\n          opacity: 0,\\n          transform: 'translate3d(0, 0, 0)'\\n        }).wait(_this2.delay).queue({\\n          opacity: 0.05\\n        }, {\\n          duration: _this2.duration,\\n          timing: _this2.timing\\n        }).restoreStyle().queue(function (done) {\\n          _this2.backgroundMask.remove();\\n          done();\\n        });\\n\\n        var shouldAnimateToolbar = _this2._shouldAnimateToolbar(enterPageTarget, leavePageTarget);\\n\\n        if (shouldAnimateToolbar) {\\n          // TODO: Remove this fix\\n          var enterPageToolbarHeight = enterPageDecomposition.toolbar.getBoundingClientRect().height + 'px';\\n          _this2.backgroundMask.style.top = enterPageToolbarHeight;\\n\\n          Animit.runAll(maskClear, Animit([enterPageDecomposition.content, enterPageDecomposition.bottomToolbar, enterPageDecomposition.background]).saveStyle().queue({\\n            css: {\\n              transform: 'translate3D(100%, 0px, 0px)'\\n            },\\n            duration: 0\\n          }).wait(_this2.delay).queue({\\n            css: {\\n              transform: 'translate3D(0px, 0px, 0px)'\\n            },\\n            duration: _this2.duration,\\n            timing: _this2.timing\\n          }).restoreStyle(), Animit(enterPageDecomposition.toolbar).saveStyle().queue({\\n            css: {\\n              opacity: 0\\n            },\\n            duration: 0\\n          }).queue({\\n            css: {\\n              opacity: 1\\n            },\\n            duration: _this2.duration,\\n            timing: _this2.timing\\n          }).restoreStyle(), Animit(enterPageDecomposition.background).queue({\\n            css: {\\n              top: enterPageToolbarHeight\\n            },\\n            duration: 0\\n          }), Animit(enterPageDecomposition.toolbarCenter).saveStyle().queue({\\n            css: {\\n              transform: 'translate3d(125%, 0, 0)',\\n              opacity: 1\\n            },\\n            duration: 0\\n          }).wait(_this2.delay).queue({\\n            css: {\\n              transform: 'translate3d(0, 0, 0)',\\n              opacity: 1.0\\n            },\\n            duration: _this2.duration,\\n            timing: _this2.timing\\n          }).restoreStyle(), Animit(enterPageDecomposition.backButtonLabel).saveStyle().queue({\\n            css: {\\n              transform: 'translate3d(' + delta.title + 'px, 0, 0)',\\n              opacity: 0\\n            },\\n            duration: 0\\n          }).wait(_this2.delay).queue({\\n            css: {\\n              transform: 'translate3d(0, 0, 0)',\\n              opacity: 1.0\\n            },\\n            duration: _this2.duration,\\n            timing: _this2.timing\\n          }).restoreStyle(), Animit(enterPageDecomposition.other).saveStyle().queue({\\n            css: { opacity: 0 },\\n            duration: 0\\n          }).wait(_this2.delay).queue({\\n            css: { opacity: 1 },\\n            duration: _this2.duration,\\n            timing: _this2.timing\\n          }).restoreStyle(), Animit([leavePageDecomposition.content, leavePageDecomposition.bottomToolbar, leavePageDecomposition.background]).saveStyle().queue({\\n            css: {\\n              transform: 'translate3D(0, 0, 0)'\\n            },\\n            duration: 0\\n          }).wait(_this2.delay).queue({\\n            css: {\\n              transform: 'translate3D(-25%, 0px, 0px)'\\n            },\\n            duration: _this2.duration,\\n            timing: _this2.timing\\n          }).restoreStyle().queue(function (done) {\\n            unblock();\\n            callback();\\n            done();\\n          }), Animit(leavePageDecomposition.toolbarCenter).saveStyle().queue({\\n            css: {\\n              transform: 'translate3d(0, 0, 0)',\\n              opacity: 1.0\\n            },\\n            duration: 0\\n          }).wait(_this2.delay).queue({\\n            css: {\\n              transform: 'translate3d(-' + delta.title + 'px, 0, 0)',\\n              opacity: 0\\n            },\\n            duration: _this2.duration,\\n            timing: _this2.timing\\n          }).restoreStyle(), Animit(leavePageDecomposition.backButtonLabel).saveStyle().queue({\\n            css: {\\n              transform: 'translate3d(0, 0, 0)',\\n              opacity: 1.0\\n            },\\n            duration: 0\\n          }).wait(_this2.delay).queue({\\n            css: {\\n              transform: 'translate3d(-' + delta.label + 'px, 0, 0)',\\n              opacity: 0\\n            },\\n            duration: _this2.duration,\\n            timing: _this2.timing\\n          }).restoreStyle(), Animit(leavePageDecomposition.other).saveStyle().queue({\\n            css: { opacity: 1 },\\n            duration: 0\\n          }).wait(_this2.delay).queue({\\n            css: { opacity: 0 },\\n            duration: _this2.duration,\\n            timing: _this2.timing\\n          }).restoreStyle());\\n        } else {\\n\\n          Animit.runAll(maskClear, Animit(enterPage).saveStyle().queue({\\n            css: {\\n              transform: 'translate3D(100%, 0px, 0px)'\\n            },\\n            duration: 0\\n          }).wait(_this2.delay).queue({\\n            css: {\\n              transform: 'translate3D(0px, 0px, 0px)'\\n            },\\n            duration: _this2.duration,\\n            timing: _this2.timing\\n          }).restoreStyle(), Animit(leavePage).saveStyle().queue({\\n            css: {\\n              transform: 'translate3D(0, 0, 0)'\\n            },\\n            duration: 0\\n          }).wait(_this2.delay).queue({\\n            css: {\\n              transform: 'translate3D(-25%, 0px, 0px)'\\n            },\\n            duration: _this2.duration,\\n            timing: _this2.timing\\n          }).restoreStyle().queue(function (done) {\\n            unblock();\\n            callback();\\n            done();\\n          }));\\n        }\\n      });\\n    }\\n\\n    /**\\n     * @param {Object} enterPage\\n     * @param {Object} leavePage\\n     * @param {Function} callback\\n     */\\n\\n  }, {\\n    key: 'pop',\\n    value: function pop(enterPage, leavePage, callback) {\\n      var _this3 = this;\\n\\n      this.backgroundMask.remove();\\n      enterPage.parentNode.insertBefore(this.backgroundMask, enterPage.nextSibling);\\n\\n      var unblock = get$1(IOSSlideNavigatorTransitionAnimator.prototype.__proto__ || Object.getPrototypeOf(IOSSlideNavigatorTransitionAnimator.prototype), 'block', this).call(this, enterPage);\\n\\n      var enterPageTarget = util.findToolbarPage(enterPage) || enterPage;\\n      var leavePageTarget = util.findToolbarPage(leavePage) || leavePage;\\n      var enterPageDecomposition = this._decompose(enterPageTarget);\\n      var leavePageDecomposition = this._decompose(leavePageTarget);\\n\\n      var delta = this._calculateDelta(leavePage, leavePageDecomposition);\\n\\n      var maskClear = Animit(this.backgroundMask).saveStyle().queue({\\n        opacity: 0.1,\\n        transform: 'translate3d(0, 0, 0)'\\n      }).wait(this.delay).queue({\\n        opacity: 0\\n      }, {\\n        duration: this.duration,\\n        timing: this.timing\\n      }).restoreStyle().queue(function (done) {\\n        done();\\n      });\\n\\n      var shouldAnimateToolbar = this._shouldAnimateToolbar(enterPageTarget, leavePageTarget);\\n\\n      if (shouldAnimateToolbar) {\\n        var enterPageToolbarHeight = enterPageDecomposition.toolbar.getBoundingClientRect().height + 'px';\\n        this.backgroundMask.style.top = enterPageToolbarHeight;\\n\\n        Animit.runAll(maskClear, Animit([enterPageDecomposition.content, enterPageDecomposition.bottomToolbar, enterPageDecomposition.background]).saveStyle().queue({\\n          css: {\\n            transform: 'translate3D(-25%, 0px, 0px)',\\n            opacity: 0.9\\n          },\\n          duration: 0\\n        }).wait(this.delay).queue({\\n          css: {\\n            transform: 'translate3D(0px, 0px, 0px)',\\n            opacity: 1.0\\n          },\\n          duration: this.duration,\\n          timing: this.timing\\n        }).restoreStyle(), Animit(enterPageDecomposition.toolbarCenter).saveStyle().queue({\\n          css: {\\n            transform: 'translate3d(-' + delta.title + 'px, 0, 0)',\\n            opacity: 0\\n          },\\n          duration: 0\\n        }).wait(this.delay).queue({\\n          css: {\\n            transform: 'translate3d(0, 0, 0)',\\n            opacity: 1.0\\n          },\\n          duration: this.duration,\\n          timing: this.timing\\n        }).restoreStyle(), Animit(enterPageDecomposition.backButtonLabel).saveStyle().queue({\\n          css: {\\n            transform: 'translate3d(-' + delta.label + 'px, 0, 0)'\\n          },\\n          duration: 0\\n        }).wait(this.delay).queue({\\n          css: {\\n            transform: 'translate3d(0, 0, 0)'\\n          },\\n          duration: this.duration,\\n          timing: this.timing\\n        }).restoreStyle(), Animit(enterPageDecomposition.other).saveStyle().queue({\\n          css: { opacity: 0 },\\n          duration: 0\\n        }).wait(this.delay).queue({\\n          css: { opacity: 1 },\\n          duration: this.duration,\\n          timing: this.timing\\n        }).restoreStyle(), Animit(leavePageDecomposition.background).queue({\\n          css: {\\n            top: enterPageToolbarHeight\\n          },\\n          duration: 0\\n        }), Animit([leavePageDecomposition.content, leavePageDecomposition.bottomToolbar, leavePageDecomposition.background]).queue({\\n          css: {\\n            transform: 'translate3D(0px, 0px, 0px)'\\n          },\\n          duration: 0\\n        }).wait(this.delay).queue({\\n          css: {\\n            transform: 'translate3D(100%, 0px, 0px)'\\n          },\\n          duration: this.duration,\\n          timing: this.timing\\n        }).wait(0).queue(function (done) {\\n          _this3.backgroundMask.remove();\\n          unblock();\\n          callback();\\n          done();\\n        }), Animit(leavePageDecomposition.toolbar).queue({\\n          css: {\\n            opacity: 1\\n          },\\n          duration: 0\\n        }).queue({\\n          css: {\\n            opacity: 0\\n          },\\n          duration: this.duration,\\n          timing: this.timing\\n        }), Animit(leavePageDecomposition.toolbarCenter).queue({\\n          css: {\\n            transform: 'translate3d(0, 0, 0)'\\n          },\\n          duration: 0\\n        }).wait(this.delay).queue({\\n          css: {\\n            transform: 'translate3d(125%, 0, 0)'\\n          },\\n          duration: this.duration,\\n          timing: this.timing\\n        }), Animit(leavePageDecomposition.backButtonLabel).queue({\\n          css: {\\n            transform: 'translate3d(0, 0, 0)',\\n            opacity: 1\\n          },\\n          duration: 0\\n        }).wait(this.delay).queue({\\n          css: {\\n            transform: 'translate3d(' + delta.title + 'px, 0, 0)',\\n            opacity: 0\\n          },\\n          duration: this.duration,\\n          timing: this.timing\\n        }));\\n      } else {\\n        Animit.runAll(maskClear, Animit(enterPage).saveStyle().queue({\\n          css: {\\n            transform: 'translate3D(-25%, 0px, 0px)',\\n            opacity: 0.9\\n          },\\n          duration: 0\\n        }).wait(this.delay).queue({\\n          css: {\\n            transform: 'translate3D(0px, 0px, 0px)',\\n            opacity: 1.0\\n          },\\n          duration: this.duration,\\n          timing: this.timing\\n        }).restoreStyle(), Animit(leavePage).queue({\\n          css: {\\n            transform: 'translate3D(0px, 0px, 0px)'\\n          },\\n          duration: 0\\n        }).wait(this.delay).queue({\\n          css: {\\n            transform: 'translate3D(100%, 0px, 0px)'\\n          },\\n          duration: this.duration,\\n          timing: this.timing\\n        }).queue(function (done) {\\n          _this3.backgroundMask.remove();\\n          unblock();\\n          callback();\\n          done();\\n        }));\\n      }\\n    }\\n  }]);\\n  return IOSSlideNavigatorTransitionAnimator;\\n}(NavigatorTransitionAnimator);\\n\\n/*\\nCopyright 2013-2015 ASIAL CORPORATION\\n\\nLicensed under the Apache License, Version 2.0 (the \\\"License\\\");\\nyou may not use this file except in compliance with the License.\\nYou may obtain a copy of the License at\\n\\n   http://www.apache.org/licenses/LICENSE-2.0\\n\\nUnless required by applicable law or agreed to in writing, software\\ndistributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\nSee the License for the specific language governing permissions and\\nlimitations under the License.\\n\\n*/\\n\\n/**\\n * Lift screen transition.\\n */\\n\\nvar IOSLiftNavigatorTransitionAnimator = function (_NavigatorTransitionA) {\\n  inherits(IOSLiftNavigatorTransitionAnimator, _NavigatorTransitionA);\\n\\n  function IOSLiftNavigatorTransitionAnimator() {\\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\\n        _ref$timing = _ref.timing,\\n        timing = _ref$timing === undefined ? 'cubic-bezier(.1, .7, .1, 1)' : _ref$timing,\\n        _ref$delay = _ref.delay,\\n        delay = _ref$delay === undefined ? 0 : _ref$delay,\\n        _ref$duration = _ref.duration,\\n        duration = _ref$duration === undefined ? 0.4 : _ref$duration;\\n\\n    classCallCheck(this, IOSLiftNavigatorTransitionAnimator);\\n\\n    var _this = possibleConstructorReturn(this, (IOSLiftNavigatorTransitionAnimator.__proto__ || Object.getPrototypeOf(IOSLiftNavigatorTransitionAnimator)).call(this, { timing: timing, delay: delay, duration: duration }));\\n\\n    _this.backgroundMask = util.createElement('\\\\n      <div style=\\\"position: absolute; width: 100%; height: 100%;\\\\n        background: linear-gradient(black, white);\\\"></div>\\\\n    ');\\n    return _this;\\n  }\\n\\n  /**\\n   * @param {Object} enterPage\\n   * @param {Object} leavePage\\n   * @param {Function} callback\\n   */\\n\\n\\n  createClass(IOSLiftNavigatorTransitionAnimator, [{\\n    key: 'push',\\n    value: function push(enterPage, leavePage, callback) {\\n      var _this2 = this;\\n\\n      this.backgroundMask.remove();\\n      leavePage.parentNode.insertBefore(this.backgroundMask, leavePage);\\n\\n      var unblock = get$1(IOSLiftNavigatorTransitionAnimator.prototype.__proto__ || Object.getPrototypeOf(IOSLiftNavigatorTransitionAnimator.prototype), 'block', this).call(this, enterPage);\\n\\n      var maskClear = Animit(this.backgroundMask).wait(this.delay + this.duration).queue(function (done) {\\n        _this2.backgroundMask.remove();\\n        done();\\n      });\\n\\n      Animit.runAll(maskClear, Animit(enterPage).saveStyle().queue({\\n        css: {\\n          transform: 'translate3D(0, 100%, 0)'\\n        },\\n        duration: 0\\n      }).wait(this.delay).queue({\\n        css: {\\n          transform: 'translate3D(0, 0, 0)'\\n        },\\n        duration: this.duration,\\n        timing: this.timing\\n      }).restoreStyle().queue(function (done) {\\n        unblock();\\n        callback();\\n        done();\\n      }), Animit(leavePage).queue({\\n        css: {\\n          transform: 'translate3D(0, 0, 0)',\\n          opacity: 1.0\\n        },\\n        duration: 0\\n      }).wait(this.delay).queue({\\n        css: {\\n          transform: 'translate3D(0, -10%, 0)',\\n          opacity: 0.9\\n        },\\n        duration: this.duration,\\n        timing: this.timing\\n      }));\\n    }\\n\\n    /**\\n     * @param {Object} enterPage\\n     * @param {Object} leavePage\\n     * @param {Function} callback\\n     */\\n\\n  }, {\\n    key: 'pop',\\n    value: function pop(enterPage, leavePage, callback) {\\n      var _this3 = this;\\n\\n      this.backgroundMask.remove();\\n      enterPage.parentNode.insertBefore(this.backgroundMask, enterPage);\\n\\n      var unblock = get$1(IOSLiftNavigatorTransitionAnimator.prototype.__proto__ || Object.getPrototypeOf(IOSLiftNavigatorTransitionAnimator.prototype), 'block', this).call(this, enterPage);\\n\\n      Animit.runAll(Animit(this.backgroundMask).wait(this.delay + this.duration).queue(function (done) {\\n        _this3.backgroundMask.remove();\\n        done();\\n      }), Animit(enterPage).queue({\\n        css: {\\n          transform: 'translate3D(0, -10%, 0)',\\n          opacity: 0.9\\n        },\\n        duration: 0\\n      }).wait(this.delay).queue({\\n        css: {\\n          transform: 'translate3D(0, 0, 0)',\\n          opacity: 1.0\\n        },\\n        duration: this.duration,\\n        timing: this.timing\\n      }).queue(function (done) {\\n        unblock();\\n        callback();\\n        done();\\n      }), Animit(leavePage).queue({\\n        css: {\\n          transform: 'translate3D(0, 0, 0)'\\n        },\\n        duration: 0\\n      }).wait(this.delay).queue({\\n        css: {\\n          transform: 'translate3D(0, 100%, 0)'\\n        },\\n        duration: this.duration,\\n        timing: this.timing\\n      }));\\n    }\\n  }]);\\n  return IOSLiftNavigatorTransitionAnimator;\\n}(NavigatorTransitionAnimator);\\n\\n/*\\nCopyright 2013-2015 ASIAL CORPORATION\\n\\nLicensed under the Apache License, Version 2.0 (the \\\"License\\\");\\nyou may not use this file except in compliance with the License.\\nYou may obtain a copy of the License at\\n\\n   http://www.apache.org/licenses/LICENSE-2.0\\n\\nUnless required by applicable law or agreed to in writing, software\\ndistributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\nSee the License for the specific language governing permissions and\\nlimitations under the License.\\n\\n*/\\n\\n/**\\n * Fade-in screen transition.\\n */\\n\\nvar IOSFadeNavigatorTransitionAnimator = function (_NavigatorTransitionA) {\\n  inherits(IOSFadeNavigatorTransitionAnimator, _NavigatorTransitionA);\\n\\n  function IOSFadeNavigatorTransitionAnimator() {\\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\\n        _ref$timing = _ref.timing,\\n        timing = _ref$timing === undefined ? 'linear' : _ref$timing,\\n        _ref$delay = _ref.delay,\\n        delay = _ref$delay === undefined ? 0 : _ref$delay,\\n        _ref$duration = _ref.duration,\\n        duration = _ref$duration === undefined ? 0.4 : _ref$duration;\\n\\n    classCallCheck(this, IOSFadeNavigatorTransitionAnimator);\\n    return possibleConstructorReturn(this, (IOSFadeNavigatorTransitionAnimator.__proto__ || Object.getPrototypeOf(IOSFadeNavigatorTransitionAnimator)).call(this, { timing: timing, delay: delay, duration: duration }));\\n  }\\n\\n  /**\\n   * @param {Object} enterPage\\n   * @param {Object} leavePage\\n   * @param {Function} callback\\n   */\\n\\n\\n  createClass(IOSFadeNavigatorTransitionAnimator, [{\\n    key: 'push',\\n    value: function push(enterPage, leavePage, callback) {\\n      var unblock = get$1(IOSFadeNavigatorTransitionAnimator.prototype.__proto__ || Object.getPrototypeOf(IOSFadeNavigatorTransitionAnimator.prototype), 'block', this).call(this, enterPage);\\n\\n      Animit.runAll(Animit([enterPage._getContentElement(), enterPage._getBackgroundElement()]).saveStyle().queue({\\n        css: {\\n          transform: 'translate3D(0, 0, 0)',\\n          opacity: 0\\n        },\\n        duration: 0\\n      }).wait(this.delay).queue({\\n        css: {\\n          transform: 'translate3D(0, 0, 0)',\\n          opacity: 1\\n        },\\n        duration: this.duration,\\n        timing: this.timing\\n      }).restoreStyle().queue(function (done) {\\n        unblock();\\n        callback();\\n        done();\\n      }), Animit(enterPage._getToolbarElement()).saveStyle().queue({\\n        css: {\\n          transform: 'translate3D(0, 0, 0)',\\n          opacity: 0\\n        },\\n        duration: 0\\n      }).wait(this.delay).queue({\\n        css: {\\n          transform: 'translate3D(0, 0, 0)',\\n          opacity: 1\\n        },\\n        duration: this.duration,\\n        timing: this.timing\\n      }).restoreStyle());\\n    }\\n\\n    /**\\n     * @param {Object} enterPage\\n     * @param {Object} leavePage\\n     * @param {Function} done\\n     */\\n\\n  }, {\\n    key: 'pop',\\n    value: function pop(enterPage, leavePage, callback) {\\n      var unblock = get$1(IOSFadeNavigatorTransitionAnimator.prototype.__proto__ || Object.getPrototypeOf(IOSFadeNavigatorTransitionAnimator.prototype), 'block', this).call(this, enterPage);\\n\\n      Animit.runAll(Animit([leavePage._getContentElement(), leavePage._getBackgroundElement()]).queue({\\n        css: {\\n          transform: 'translate3D(0, 0, 0)',\\n          opacity: 1\\n        },\\n        duration: 0\\n      }).wait(this.delay).queue({\\n        css: {\\n          transform: 'translate3D(0, 0, 0)',\\n          opacity: 0\\n        },\\n        duration: this.duration,\\n        timing: this.timing\\n      }).queue(function (done) {\\n        unblock();\\n        callback();\\n        done();\\n      }), Animit(leavePage._getToolbarElement()).queue({\\n        css: {\\n          transform: 'translate3D(0, 0, 0)',\\n          opacity: 1\\n        },\\n        duration: 0\\n      }).wait(this.delay).queue({\\n        css: {\\n          transform: 'translate3D(0, 0, 0)',\\n          opacity: 0\\n        },\\n        duration: this.duration,\\n        timing: this.timing\\n      }));\\n    }\\n  }]);\\n  return IOSFadeNavigatorTransitionAnimator;\\n}(NavigatorTransitionAnimator);\\n\\n/*\\nCopyright 2013-2015 ASIAL CORPORATION\\n\\nLicensed under the Apache License, Version 2.0 (the \\\"License\\\");\\nyou may not use this file except in compliance with the License.\\nYou may obtain a copy of the License at\\n\\n   http://www.apache.org/licenses/LICENSE-2.0\\n\\nUnless required by applicable law or agreed to in writing, software\\ndistributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\nSee the License for the specific language governing permissions and\\nlimitations under the License.\\n\\n*/\\n\\n/**\\n * Slide animator for navigator transition.\\n */\\n\\nvar MDSlideNavigatorTransitionAnimator = function (_NavigatorTransitionA) {\\n  inherits(MDSlideNavigatorTransitionAnimator, _NavigatorTransitionA);\\n\\n  function MDSlideNavigatorTransitionAnimator() {\\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\\n        _ref$timing = _ref.timing,\\n        timing = _ref$timing === undefined ? 'cubic-bezier(.1, .7, .4, 1)' : _ref$timing,\\n        _ref$delay = _ref.delay,\\n        delay = _ref$delay === undefined ? 0 : _ref$delay,\\n        _ref$duration = _ref.duration,\\n        duration = _ref$duration === undefined ? 0.3 : _ref$duration;\\n\\n    classCallCheck(this, MDSlideNavigatorTransitionAnimator);\\n\\n    var _this = possibleConstructorReturn(this, (MDSlideNavigatorTransitionAnimator.__proto__ || Object.getPrototypeOf(MDSlideNavigatorTransitionAnimator)).call(this, { timing: timing, delay: delay, duration: duration }));\\n\\n    _this.backgroundMask = util.createElement('\\\\n      <div style=\\\"position: absolute; width: 100%; height: 100%; z-index: 2;\\\\n        background-color: black; opacity: 0;\\\"></div>\\\\n    ');\\n    _this.blackMaskOpacity = 0.4;\\n    return _this;\\n  }\\n\\n  /**\\n   * @param {Object} enterPage\\n   * @param {Object} leavePage\\n   * @param {Function} callback\\n   */\\n\\n\\n  createClass(MDSlideNavigatorTransitionAnimator, [{\\n    key: 'push',\\n    value: function push(enterPage, leavePage, callback) {\\n      var _this2 = this;\\n\\n      this.backgroundMask.remove();\\n      leavePage.parentElement.insertBefore(this.backgroundMask, leavePage.nextSibling);\\n\\n      var unblock = get$1(MDSlideNavigatorTransitionAnimator.prototype.__proto__ || Object.getPrototypeOf(MDSlideNavigatorTransitionAnimator.prototype), 'block', this).call(this, enterPage);\\n\\n      Animit.runAll(Animit(this.backgroundMask).saveStyle().queue({\\n        opacity: 0,\\n        transform: 'translate3d(0, 0, 0)'\\n      }).wait(this.delay).queue({\\n        opacity: this.blackMaskOpacity\\n      }, {\\n        duration: this.duration,\\n        timing: this.timing\\n      }).restoreStyle().queue(function (done) {\\n        _this2.backgroundMask.remove();\\n        done();\\n      }), Animit(enterPage).saveStyle().queue({\\n        css: {\\n          transform: 'translate3D(100%, 0, 0)'\\n        },\\n        duration: 0\\n      }).wait(this.delay).queue({\\n        css: {\\n          transform: 'translate3D(0, 0, 0)'\\n        },\\n        duration: this.duration,\\n        timing: this.timing\\n      }).restoreStyle(), Animit(leavePage).saveStyle().queue({\\n        css: {\\n          transform: 'translate3D(0, 0, 0)'\\n        },\\n        duration: 0\\n      }).wait(this.delay).queue({\\n        css: {\\n          transform: 'translate3D(-45%, 0px, 0px)'\\n        },\\n        duration: this.duration,\\n        timing: this.timing\\n      }).restoreStyle().wait(0.2).queue(function (done) {\\n        unblock();\\n        callback();\\n        done();\\n      }));\\n    }\\n\\n    /**\\n     * @param {Object} enterPage\\n     * @param {Object} leavePage\\n     * @param {Function} callback\\n     */\\n\\n  }, {\\n    key: 'pop',\\n    value: function pop(enterPage, leavePage, callback) {\\n      var _this3 = this;\\n\\n      this.backgroundMask.remove();\\n      enterPage.parentNode.insertBefore(this.backgroundMask, enterPage.nextSibling);\\n\\n      var unblock = get$1(MDSlideNavigatorTransitionAnimator.prototype.__proto__ || Object.getPrototypeOf(MDSlideNavigatorTransitionAnimator.prototype), 'block', this).call(this, enterPage);\\n\\n      Animit.runAll(Animit(this.backgroundMask).saveStyle().queue({\\n        opacity: this.blackMaskOpacity,\\n        transform: 'translate3d(0, 0, 0)'\\n      }).wait(this.delay).queue({\\n        opacity: 0\\n      }, {\\n        duration: this.duration,\\n        timing: this.timing\\n      }).restoreStyle().queue(function (done) {\\n        _this3.backgroundMask.remove();\\n        done();\\n      }), Animit(enterPage).saveStyle().queue({\\n        css: {\\n          transform: 'translate3D(-45%, 0px, 0px)',\\n          opacity: 0.9\\n        },\\n        duration: 0\\n      }).wait(this.delay).queue({\\n        css: {\\n          transform: 'translate3D(0px, 0px, 0px)',\\n          opacity: 1.0\\n        },\\n        duration: this.duration,\\n        timing: this.timing\\n      }).restoreStyle(), Animit(leavePage).queue({\\n        css: {\\n          transform: 'translate3D(0px, 0px, 0px)'\\n        },\\n        duration: 0\\n      }).wait(this.delay).queue({\\n        css: {\\n          transform: 'translate3D(100%, 0px, 0px)'\\n        },\\n        duration: this.duration,\\n        timing: this.timing\\n      }).wait(0.2).queue(function (done) {\\n        unblock();\\n        callback();\\n        done();\\n      }));\\n    }\\n  }]);\\n  return MDSlideNavigatorTransitionAnimator;\\n}(NavigatorTransitionAnimator);\\n\\n/*\\nCopyright 2013-2015 ASIAL CORPORATION\\n\\nLicensed under the Apache License, Version 2.0 (the \\\"License\\\");\\nyou may not use this file except in compliance with the License.\\nYou may obtain a copy of the License at\\n\\n   http://www.apache.org/licenses/LICENSE-2.0\\n\\nUnless required by applicable law or agreed to in writing, software\\ndistributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\nSee the License for the specific language governing permissions and\\nlimitations under the License.\\n\\n*/\\n\\n/**\\n * Lift screen transition.\\n */\\n\\nvar MDLiftNavigatorTransitionAnimator = function (_NavigatorTransitionA) {\\n  inherits(MDLiftNavigatorTransitionAnimator, _NavigatorTransitionA);\\n\\n  function MDLiftNavigatorTransitionAnimator() {\\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\\n        _ref$timing = _ref.timing,\\n        timing = _ref$timing === undefined ? 'cubic-bezier(.1, .7, .1, 1)' : _ref$timing,\\n        _ref$delay = _ref.delay,\\n        delay = _ref$delay === undefined ? 0.05 : _ref$delay,\\n        _ref$duration = _ref.duration,\\n        duration = _ref$duration === undefined ? 0.4 : _ref$duration;\\n\\n    classCallCheck(this, MDLiftNavigatorTransitionAnimator);\\n\\n    var _this = possibleConstructorReturn(this, (MDLiftNavigatorTransitionAnimator.__proto__ || Object.getPrototypeOf(MDLiftNavigatorTransitionAnimator)).call(this, { timing: timing, delay: delay, duration: duration }));\\n\\n    _this.backgroundMask = util.createElement('\\\\n      <div style=\\\"position: absolute; width: 100%; height: 100%;\\\\n        background-color: black;\\\"></div>\\\\n    ');\\n    return _this;\\n  }\\n\\n  /**\\n   * @param {Object} enterPage\\n   * @param {Object} leavePage\\n   * @param {Function} callback\\n   */\\n\\n\\n  createClass(MDLiftNavigatorTransitionAnimator, [{\\n    key: 'push',\\n    value: function push(enterPage, leavePage, callback) {\\n      var _this2 = this;\\n\\n      this.backgroundMask.remove();\\n      leavePage.parentNode.insertBefore(this.backgroundMask, leavePage);\\n\\n      var unblock = get$1(MDLiftNavigatorTransitionAnimator.prototype.__proto__ || Object.getPrototypeOf(MDLiftNavigatorTransitionAnimator.prototype), 'block', this).call(this, enterPage);\\n\\n      var maskClear = Animit(this.backgroundMask).wait(this.delay + this.duration).queue(function (done) {\\n        _this2.backgroundMask.remove();\\n        done();\\n      });\\n\\n      Animit.runAll(maskClear, Animit(enterPage).saveStyle().queue({\\n        css: {\\n          transform: 'translate3D(0, 100%, 0)'\\n        },\\n        duration: 0\\n      }).wait(this.delay).queue({\\n        css: {\\n          transform: 'translate3D(0, 0, 0)'\\n        },\\n        duration: this.duration,\\n        timing: this.timing\\n      }).restoreStyle().queue(function (done) {\\n        unblock();\\n        callback();\\n        done();\\n      }), Animit(leavePage).queue({\\n        css: {\\n          opacity: 1.0\\n        },\\n        duration: 0\\n      }).queue({\\n        css: {\\n          opacity: 0.4\\n        },\\n        duration: this.duration,\\n        timing: this.timing\\n      }));\\n    }\\n\\n    /**\\n     * @param {Object} enterPage\\n     * @param {Object} leavePage\\n     * @param {Function} callback\\n     */\\n\\n  }, {\\n    key: 'pop',\\n    value: function pop(enterPage, leavePage, callback) {\\n      var _this3 = this;\\n\\n      this.backgroundMask.remove();\\n      enterPage.parentNode.insertBefore(this.backgroundMask, enterPage);\\n\\n      var unblock = get$1(MDLiftNavigatorTransitionAnimator.prototype.__proto__ || Object.getPrototypeOf(MDLiftNavigatorTransitionAnimator.prototype), 'block', this).call(this, enterPage);\\n\\n      Animit.runAll(Animit(this.backgroundMask).wait(this.delay + this.duration).queue(function (done) {\\n        _this3.backgroundMask.remove();\\n        done();\\n      }), Animit(enterPage).queue({\\n        css: {\\n          transform: 'translate3D(0, 0, 0)',\\n          opacity: 0.4\\n        },\\n        duration: 0\\n      }).wait(this.delay).queue({\\n        css: {\\n          transform: 'translate3D(0, 0, 0)',\\n          opacity: 1.0\\n        },\\n        duration: this.duration,\\n        timing: this.timing\\n      }).queue(function (done) {\\n        unblock();\\n        callback();\\n        done();\\n      }), Animit(leavePage).queue({\\n        css: {\\n          transform: 'translate3D(0, 0, 0)'\\n        },\\n        duration: 0\\n      }).wait(this.delay).queue({\\n        css: {\\n          transform: 'translate3D(0, 100%, 0)'\\n        },\\n        duration: this.duration,\\n        timing: this.timing\\n      }));\\n    }\\n  }]);\\n  return MDLiftNavigatorTransitionAnimator;\\n}(NavigatorTransitionAnimator);\\n\\n/*\\nCopyright 2013-2015 ASIAL CORPORATION\\n\\nLicensed under the Apache License, Version 2.0 (the \\\"License\\\");\\nyou may not use this file except in compliance with the License.\\nYou may obtain a copy of the License at\\n\\n   http://www.apache.org/licenses/LICENSE-2.0\\n\\nUnless required by applicable law or agreed to in writing, software\\ndistributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\nSee the License for the specific language governing permissions and\\nlimitations under the License.\\n\\n*/\\n\\n/**\\n * Fade-in + Lift screen transition.\\n */\\n\\nvar MDFadeNavigatorTransitionAnimator = function (_NavigatorTransitionA) {\\n  inherits(MDFadeNavigatorTransitionAnimator, _NavigatorTransitionA);\\n\\n  function MDFadeNavigatorTransitionAnimator() {\\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\\n        _ref$timing = _ref.timing,\\n        timing = _ref$timing === undefined ? 'ease-out' : _ref$timing,\\n        _ref$delay = _ref.delay,\\n        delay = _ref$delay === undefined ? 0 : _ref$delay,\\n        _ref$duration = _ref.duration,\\n        duration = _ref$duration === undefined ? 0.25 : _ref$duration;\\n\\n    classCallCheck(this, MDFadeNavigatorTransitionAnimator);\\n    return possibleConstructorReturn(this, (MDFadeNavigatorTransitionAnimator.__proto__ || Object.getPrototypeOf(MDFadeNavigatorTransitionAnimator)).call(this, { timing: timing, delay: delay, duration: duration }));\\n  }\\n\\n  /**\\n   * @param {Object} enterPage\\n   * @param {Object} leavePage\\n   * @param {Function} callback\\n   */\\n\\n\\n  createClass(MDFadeNavigatorTransitionAnimator, [{\\n    key: 'push',\\n    value: function push(enterPage, leavePage, callback) {\\n      var unblock = get$1(MDFadeNavigatorTransitionAnimator.prototype.__proto__ || Object.getPrototypeOf(MDFadeNavigatorTransitionAnimator.prototype), 'block', this).call(this, enterPage);\\n\\n      Animit.runAll(Animit(enterPage).saveStyle().queue({\\n        css: {\\n          transform: 'translate3D(0, 42px, 0)',\\n          opacity: 0\\n        },\\n        duration: 0\\n      }).wait(this.delay).queue({\\n        css: {\\n          transform: 'translate3D(0, 0, 0)',\\n          opacity: 1\\n        },\\n        duration: this.duration,\\n        timing: this.timing\\n      }).restoreStyle().queue(function (done) {\\n        unblock();\\n        callback();\\n        done();\\n      }));\\n    }\\n\\n    /**\\n     * @param {Object} enterPage\\n     * @param {Object} leavePage\\n     * @param {Function} done\\n     */\\n\\n  }, {\\n    key: 'pop',\\n    value: function pop(enterPage, leavePage, callback) {\\n      var unblock = get$1(MDFadeNavigatorTransitionAnimator.prototype.__proto__ || Object.getPrototypeOf(MDFadeNavigatorTransitionAnimator.prototype), 'block', this).call(this, enterPage);\\n\\n      Animit.runAll(Animit(leavePage).queue({\\n        css: {\\n          transform: 'translate3D(0, 0, 0)'\\n        },\\n        duration: 0\\n      }).wait(0.15).queue({\\n        css: {\\n          transform: 'translate3D(0, 38px, 0)'\\n        },\\n        duration: this.duration,\\n        timing: this.timing\\n      }).queue(function (done) {\\n        unblock();\\n        callback();\\n        done();\\n      }), Animit(leavePage).queue({\\n        css: {\\n          opacity: 1\\n        },\\n        duration: 0\\n      }).wait(0.04).queue({\\n        css: {\\n          opacity: 0\\n        },\\n        duration: this.duration,\\n        timing: this.timing\\n      }));\\n    }\\n  }]);\\n  return MDFadeNavigatorTransitionAnimator;\\n}(NavigatorTransitionAnimator);\\n\\n/*\\nCopyright 2013-2015 ASIAL CORPORATION\\n\\nLicensed under the Apache License, Version 2.0 (the \\\"License\\\");\\nyou may not use this file except in compliance with the License.\\nYou may obtain a copy of the License at\\n\\n   http://www.apache.org/licenses/LICENSE-2.0\\n\\nUnless required by applicable law or agreed to in writing, software\\ndistributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\nSee the License for the specific language governing permissions and\\nlimitations under the License.\\n\\n*/\\n\\nvar NoneNavigatorTransitionAnimator = function (_NavigatorTransitionA) {\\n  inherits(NoneNavigatorTransitionAnimator, _NavigatorTransitionA);\\n\\n  function NoneNavigatorTransitionAnimator(options) {\\n    classCallCheck(this, NoneNavigatorTransitionAnimator);\\n    return possibleConstructorReturn(this, (NoneNavigatorTransitionAnimator.__proto__ || Object.getPrototypeOf(NoneNavigatorTransitionAnimator)).call(this, options));\\n  }\\n\\n  createClass(NoneNavigatorTransitionAnimator, [{\\n    key: 'push',\\n    value: function push(enterPage, leavePage, callback) {\\n      callback();\\n    }\\n  }, {\\n    key: 'pop',\\n    value: function pop(enterPage, leavePage, callback) {\\n      callback();\\n    }\\n  }]);\\n  return NoneNavigatorTransitionAnimator;\\n}(NavigatorTransitionAnimator);\\n\\n/*\\nCopyright 2013-2015 ASIAL CORPORATION\\n\\nLicensed under the Apache License, Version 2.0 (the \\\"License\\\");\\nyou may not use this file except in compliance with the License.\\nYou may obtain a copy of the License at\\n\\n   http://www.apache.org/licenses/LICENSE-2.0\\n\\nUnless required by applicable law or agreed to in writing, software\\ndistributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\nSee the License for the specific language governing permissions and\\nlimitations under the License.\\n\\n*/\\n\\nvar _animatorDict$3 = {\\n  'default': function _default() {\\n    return platform.isAndroid() ? MDFadeNavigatorTransitionAnimator : IOSSlideNavigatorTransitionAnimator;\\n  },\\n  'slide': function slide() {\\n    return platform.isAndroid() ? MDSlideNavigatorTransitionAnimator : IOSSlideNavigatorTransitionAnimator;\\n  },\\n  'lift': function lift() {\\n    return platform.isAndroid() ? MDLiftNavigatorTransitionAnimator : IOSLiftNavigatorTransitionAnimator;\\n  },\\n  'fade': function fade() {\\n    return platform.isAndroid() ? MDFadeNavigatorTransitionAnimator : IOSFadeNavigatorTransitionAnimator;\\n  },\\n  'slide-ios': IOSSlideNavigatorTransitionAnimator,\\n  'slide-md': MDSlideNavigatorTransitionAnimator,\\n  'lift-ios': IOSLiftNavigatorTransitionAnimator,\\n  'lift-md': MDLiftNavigatorTransitionAnimator,\\n  'fade-ios': IOSFadeNavigatorTransitionAnimator,\\n  'fade-md': MDFadeNavigatorTransitionAnimator,\\n  'none': NoneNavigatorTransitionAnimator\\n};\\n\\nvar rewritables = {\\n  /**\\n   * @param {Element} navigatorSideElement\\n   * @param {Function} callback\\n   */\\n  ready: function ready(navigatorElement, callback) {\\n    callback();\\n  }\\n};\\n\\n/**\\n * @element ons-navigator\\n * @category navigation\\n * @description\\n *   [en]\\n *     A component that provides page stack management and navigation. Stack navigation is the most common navigation pattern for mobile apps.\\n *\\n *     When a page is pushed on top of the stack it is displayed with a transition animation. When the user returns to the previous page the top page will be popped from the top of the stack and hidden with an opposite transition animation.\\n *   [/en]\\n *   [ja][/ja]\\n * @codepen yrhtv\\n * @tutorial vanilla/Reference/navigator\\n * @guide multiple-page-navigation\\n *   [en]Guide for page navigation[/en]\\n *   [ja]ページナビゲーションの概要[/ja]\\n * @guide templates\\n *   [en]Defining multiple pages in single html[/en]\\n *   [ja]複数のページを1つのHTMLに記述する[/ja]\\n * @guide creating-a-page\\n *   [en]Setting up a page in its `init` event[/en]\\n *   [ja]Setting up a page in its `init` event[/ja]\\n * @seealso ons-toolbar\\n *   [en]The `<ons-toolbar>` component is used to display a toolbar on the top of a page.[/en]\\n *   [ja][/ja]\\n * @seealso ons-back-button\\n *   [en]The `<ons-back-button>` component lets the user return to the previous page.[/en]\\n *   [ja][/ja]\\n * @example\\n * <ons-navigator id=\\\"navigator\\\">\\n *   <ons-page>\\n *     <ons-toolbar>\\n *       <div class=\\\"center\\\">\\n *         Title\\n *       </div>\\n *     </ons-toolbar>\\n *     <p>\\n *       <ons-button\\n *         onclick=\\\"document.getElementById('navigator').pushPage('page.html')\\\">\\n *         Push page\\n *       </ons-button>\\n *     </p>\\n *   </ons-page>\\n * </ons-navigator>\\n *\\n * <ons-template id=\\\"page.html\\\">\\n *   <ons-page>\\n *     <ons-toolbar>\\n *       <div class=\\\"left\\\">\\n *         <ons-back-button>Back</ons-back-button>\\n *       </div>\\n *       <div class=\\\"center\\\">\\n *         Another page\\n *       </div>\\n *     </ons-toolbar>\\n *   </ons-page>\\n * </ons-template>\\n */\\n\\nvar NavigatorElement = function (_BaseElement) {\\n  inherits(NavigatorElement, _BaseElement);\\n\\n  function NavigatorElement() {\\n    classCallCheck(this, NavigatorElement);\\n    return possibleConstructorReturn(this, (NavigatorElement.__proto__ || Object.getPrototypeOf(NavigatorElement)).apply(this, arguments));\\n  }\\n\\n  createClass(NavigatorElement, [{\\n    key: 'init',\\n    value: function init() {\\n      this._isRunning = false;\\n      this._initialized = false;\\n      this._pageLoader = defaultPageLoader;\\n      this._pageMap = new WeakMap();\\n\\n      this._updateAnimatorFactory();\\n    }\\n\\n    /**\\n     * @property pageLoader\\n     * @type {PageLoader}\\n     * @description\\n     *   [en][/en]\\n     *   [ja]PageLoaderインスタンスを格納しています。[/ja]\\n     */\\n\\n  }, {\\n    key: '_getPageTarget',\\n    value: function _getPageTarget() {\\n      return this._page || this.getAttribute('page');\\n    }\\n\\n    /**\\n     * @property page\\n     * @type {*}\\n     * @description\\n     *   [en][/en]\\n     *   [ja]初期化時に読み込むページを指定します。`page`属性で指定した値よりも`page`プロパティに指定した値を優先します。[/ja]\\n     */\\n\\n  }, {\\n    key: 'connectedCallback',\\n    value: function connectedCallback() {\\n      var _this2 = this;\\n\\n      this.onDeviceBackButton = this._onDeviceBackButton.bind(this);\\n\\n      if (this._initialized) {\\n        return;\\n      }\\n\\n      this._initialized = true;\\n\\n      rewritables.ready(this, function () {\\n        if (_this2.pages.length === 0 && _this2._getPageTarget()) {\\n          _this2.pushPage(_this2._getPageTarget(), { animation: 'none' });\\n        } else if (_this2.pages.length > 0) {\\n          for (var i = 0; i < _this2.pages.length; i++) {\\n            if (_this2.pages[i].nodeName !== 'ONS-PAGE') {\\n              throw new Error('The children of <ons-navigator> need to be of type <ons-page>');\\n            }\\n          }\\n\\n          if (_this2.topPage) {\\n            contentReady(_this2.topPage, function () {\\n              return setTimeout(function () {\\n                _this2.topPage._show();\\n                _this2._updateLastPageBackButton();\\n              }, 0);\\n            });\\n          }\\n        } else {\\n          contentReady(_this2, function () {\\n            if (_this2.pages.length === 0 && _this2._getPageTarget()) {\\n              _this2.pushPage(_this2._getPageTarget(), { animation: 'none' });\\n            }\\n          });\\n        }\\n      });\\n    }\\n  }, {\\n    key: '_updateAnimatorFactory',\\n    value: function _updateAnimatorFactory() {\\n      this._animatorFactory = new AnimatorFactory({\\n        animators: _animatorDict$3,\\n        baseClass: NavigatorTransitionAnimator,\\n        baseClassName: 'NavigatorTransitionAnimator',\\n        defaultAnimation: this.getAttribute('animation')\\n      });\\n    }\\n  }, {\\n    key: 'disconnectedCallback',\\n    value: function disconnectedCallback() {\\n      this._backButtonHandler.destroy();\\n      this._backButtonHandler = null;\\n    }\\n  }, {\\n    key: 'attributeChangedCallback',\\n    value: function attributeChangedCallback(name, last, current) {\\n      if (name === 'animation') {\\n        this._updateAnimatorFactory();\\n      }\\n    }\\n\\n    /**\\n     * @method popPage\\n     * @signature popPage([options])\\n     * @param {Object} [options]\\n     *   [en]Parameter object.[/en]\\n     *   [ja]オプションを指定するオブジェクト。[/ja]\\n     * @param {String} [options.animation]\\n     *   [en]\\n     *     Animation name. Available animations are `\\\"slide\\\"`, `\\\"lift\\\"`, `\\\"fade\\\"` and `\\\"none\\\"`.\\n     *\\n     *     These are platform based animations. For fixed animations, add `\\\"-ios\\\"` or `\\\"-md\\\"` suffix to the animation name. E.g. `\\\"lift-ios\\\"`, `\\\"lift-md\\\"`. Defaults values are `\\\"slide-ios\\\"` and `\\\"fade-md\\\"`.\\n     *   [/en]\\n     *   [ja][/ja]\\n     * @param {String} [options.animationOptions]\\n     *   [en]Specify the animation's duration, delay and timing. E.g. `{duration: 0.2, delay: 0.4, timing: 'ease-in'}`.[/en]\\n     *   [ja]アニメーション時のduration, delay, timingを指定します。e.g. {duration: 0.2, delay: 0.4, timing: 'ease-in'}[/ja]\\n     * @param {Boolean} [options.refresh]\\n     *   [en]The previous page will be refreshed (destroyed and created again) before popPage action.[/en]\\n     *   [ja]popPageする前に、前にあるページを生成しなおして更新する場合にtrueを指定します。[/ja]\\n     * @param {Function} [options.callback]\\n     *   [en]Function that is called when the transition has ended.[/en]\\n     *   [ja]このメソッドによる画面遷移が終了した際に呼び出される関数オブジェクトを指定します。[/ja]\\n     * @param {Object} [options.data]\\n     *   [en]Custom data that will be stored in the new page element.[/en]\\n     *   [ja][/ja]\\n     * @return {Promise}\\n     *   [en]Promise which resolves to the revealed page.[/en]\\n     *   [ja]明らかにしたページを解決するPromiseを返します。[/ja]\\n     * @description\\n     *   [en]Pops the current page from the page stack. The previous page will be displayed.[/en]\\n     *   [ja]現在表示中のページをページスタックから取り除きます。一つ前のページに戻ります。[/ja]\\n     */\\n\\n  }, {\\n    key: 'popPage',\\n    value: function popPage() {\\n      var _this3 = this;\\n\\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n\\n      var _preparePageAndOption = this._preparePageAndOptions(null, options);\\n\\n      options = _preparePageAndOption.options;\\n\\n\\n      var popUpdate = function popUpdate() {\\n        return new Promise(function (resolve) {\\n          _this3._pageLoader.unload(_this3.pages[_this3.pages.length - 1]);\\n          resolve();\\n        });\\n      };\\n\\n      if (!options.refresh) {\\n        return this._popPage(options, popUpdate);\\n      } else {\\n        return this._popPageAndRefresh(options, popUpdate);\\n      }\\n    }\\n  }, {\\n    key: '_popPageAndRefresh',\\n    value: function _popPageAndRefresh(options, popUpdate) {\\n      var _this4 = this;\\n\\n      util.warn('\\\\'refresh\\\\' option for pushPage has been deprecated and will be removed in the next release.');\\n\\n      var index = this.pages.length - 2;\\n      var oldPage = this.pages[index];\\n\\n      if (!this._pageMap.has(oldPage)) {\\n        throw new Error('Refresh option cannot be used with pages directly inside the Navigator. Use ons-template instead.');\\n      }\\n\\n      var page = this._pageMap.get(oldPage);\\n\\n      return new Promise(function (resolve) {\\n        var options = {\\n          page: page,\\n          parent: _this4,\\n          params: oldPage.pushedOptions ? oldPage.pushedOptions.data : {}\\n        };\\n\\n        _this4._pageLoader.load(options, function (pageElement) {\\n          _this4._pageMap.set(pageElement, page);\\n\\n          pageElement = util.extend(pageElement, {\\n            data: oldPage.data,\\n            pushedOptions: oldPage.pushedOptions || {}\\n          });\\n\\n          _this4.insertBefore(pageElement, oldPage ? oldPage : null);\\n          _this4._pageLoader.unload(oldPage);\\n          resolve();\\n        });\\n      }).then(function () {\\n        return _this4._popPage(options, popUpdate);\\n      });\\n    }\\n  }, {\\n    key: '_popPage',\\n    value: function _popPage(options) {\\n      var _this5 = this;\\n\\n      var update = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {\\n        return Promise.resolve();\\n      };\\n\\n      if (this._isRunning) {\\n        return Promise.reject('popPage is already running.');\\n      }\\n\\n      if (this.pages.length <= 1) {\\n        return Promise.reject('ons-navigator\\\\'s page stack is empty.');\\n      }\\n\\n      if (this._emitPrePopEvent()) {\\n        return Promise.reject('Canceled in prepop event.');\\n      }\\n\\n      var length = this.pages.length;\\n\\n      this._isRunning = true;\\n\\n      this.pages[length - 2].updateBackButton(length - 2 > 0);\\n\\n      return new Promise(function (resolve) {\\n        var leavePage = _this5.pages[length - 1];\\n        var enterPage = _this5.pages[length - 2];\\n\\n        options.animation = options.animation || (leavePage.pushedOptions ? leavePage.pushedOptions.animation : undefined);\\n        options.animationOptions = util.extend({}, leavePage.pushedOptions ? leavePage.pushedOptions.animationOptions : {}, options.animationOptions || {});\\n\\n        if (options.data) {\\n          enterPage.data = util.extend({}, enterPage.data || {}, options.data || {});\\n        }\\n\\n        var callback = function callback() {\\n          update().then(function () {\\n            _this5._isRunning = false;\\n\\n            enterPage._show();\\n            util.triggerElementEvent(_this5, 'postpop', { leavePage: leavePage, enterPage: enterPage, navigator: _this5 });\\n\\n            if (typeof options.callback === 'function') {\\n              options.callback();\\n            }\\n\\n            resolve(enterPage);\\n          });\\n        };\\n\\n        leavePage._hide();\\n        var animator = _this5._animatorFactory.newAnimator(options);\\n        animator.pop(_this5.pages[length - 2], _this5.pages[length - 1], callback);\\n      }).catch(function () {\\n        return _this5._isRunning = false;\\n      });\\n    }\\n\\n    /**\\n     * @method pushPage\\n     * @signature pushPage(page, [options])\\n     * @param {String} page\\n     *   [en]Page URL. Can be either a HTML document or a template defined with the `<ons-template>` tag.[/en]\\n     *   [ja]pageのURLか、もしくはons-templateで宣言したテンプレートのid属性の値を指定できます。[/ja]\\n     * @param {Object} [options]\\n     *   [en]Parameter object.[/en]\\n     *   [ja]オプションを指定するオブジェクト。[/ja]\\n     * @param {String} [options.page]\\n     *   [en]Page URL. Only necessary if `page` parameter is null or undefined.[/en]\\n     *   [ja][/ja]\\n     * @param {String} [options.pageHTML]\\n     *   [en]HTML code that will be computed as a new page. Overwrites `page` parameter.[/en]\\n     *   [ja][/ja]\\n     * @param {String} [options.animation]\\n     *   [en]\\n     *     Animation name. Available animations are `\\\"slide\\\"`, `\\\"lift\\\"`, `\\\"fade\\\"` and `\\\"none\\\"`.\\n     *\\n     *     These are platform based animations. For fixed animations, add `\\\"-ios\\\"` or `\\\"-md\\\"` suffix to the animation name. E.g. `\\\"lift-ios\\\"`, `\\\"lift-md\\\"`. Defaults values are `\\\"slide-ios\\\"` and `\\\"fade-md\\\"`.\\n     *   [/en]\\n     *   [ja][/ja]\\n     * @param {String} [options.animationOptions]\\n     *   [en]Specify the animation's duration, delay and timing. E.g. `{duration: 0.2, delay: 0.4, timing: 'ease-in'}`[/en]\\n     *   [ja]アニメーション時のduration, delay, timingを指定します。e.g. `{duration: 0.2, delay: 0.4, timing: 'ease-in'}` [/ja]\\n     * @param {Function} [options.callback]\\n     *   [en]Function that is called when the transition has ended.[/en]\\n     *   [ja]pushPage()による画面遷移が終了した時に呼び出される関数オブジェクトを指定します。[/ja]\\n     * @param {Object} [options.data]\\n     *   [en]Custom data that will be stored in the new page element.[/en]\\n     *   [ja][/ja]\\n     * @return {Promise}\\n     *   [en]Promise which resolves to the pushed page.[/en]\\n     *   [ja]追加したページを解決するPromiseを返します。[/ja]\\n     * @description\\n     *   [en]Pushes the specified page into the stack.[/en]\\n     *   [ja]指定したpageを新しいページスタックに追加します。新しいページが表示されます。[/ja]\\n     */\\n\\n  }, {\\n    key: 'pushPage',\\n    value: function pushPage(page) {\\n      var _this6 = this;\\n\\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\\n\\n      var _preparePageAndOption2 = this._preparePageAndOptions(page, options);\\n\\n      page = _preparePageAndOption2.page;\\n      options = _preparePageAndOption2.options;\\n\\n\\n      var prepare = function prepare(pageElement) {\\n        _this6._verifyPageElement(pageElement);\\n        _this6._pageMap.set(pageElement, page);\\n        pageElement = util.extend(pageElement, {\\n          data: options.data\\n        });\\n        pageElement.style.visibility = 'hidden';\\n      };\\n\\n      if (options.pageHTML) {\\n        return this._pushPage(options, function () {\\n          return new Promise(function (resolve) {\\n            instantPageLoader.load({ page: options.pageHTML, parent: _this6, params: options.data }, function (pageElement) {\\n              prepare(pageElement);\\n              resolve();\\n            });\\n          });\\n        });\\n      }\\n\\n      return this._pushPage(options, function () {\\n        return new Promise(function (resolve) {\\n          _this6._pageLoader.load({ page: page, parent: _this6, params: options.data }, function (pageElement) {\\n            prepare(pageElement);\\n            resolve();\\n          });\\n        });\\n      });\\n    }\\n  }, {\\n    key: '_pushPage',\\n    value: function _pushPage() {\\n      var _this7 = this;\\n\\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n      var update = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {\\n        return Promise.resolve();\\n      };\\n\\n      if (this._isRunning) {\\n        return Promise.reject('pushPage is already running.');\\n      }\\n\\n      if (this._emitPrePushEvent()) {\\n        return Promise.reject('Canceled in prepush event.');\\n      }\\n\\n      this._isRunning = true;\\n\\n      var animationOptions = AnimatorFactory.parseAnimationOptionsString(this.getAttribute('animation-options'));\\n      options = util.extend({}, this.options || {}, { animationOptions: animationOptions }, options);\\n\\n      var animator = this._animatorFactory.newAnimator(options);\\n\\n      return update().then(function () {\\n        var pageLength = _this7.pages.length;\\n\\n        var enterPage = _this7.pages[pageLength - 1];\\n        var leavePage = options.leavePage || _this7.pages[pageLength - 2];\\n\\n        if (enterPage.nodeName !== 'ONS-PAGE') {\\n          throw new Error('Only elements of type <ons-page> can be pushed to the navigator');\\n        }\\n\\n        enterPage.updateBackButton(pageLength - 1);\\n\\n        enterPage.pushedOptions = util.extend({}, enterPage.pushedOptions || {}, options || {});\\n        enterPage.data = util.extend({}, enterPage.data || {}, options.data || {});\\n        enterPage.unload = enterPage.unload || options.unload;\\n\\n        return new Promise(function (resolve) {\\n          var done = function done() {\\n            _this7._isRunning = false;\\n\\n            setImmediate(function () {\\n              return enterPage._show();\\n            });\\n            util.triggerElementEvent(_this7, 'postpush', { leavePage: leavePage, enterPage: enterPage, navigator: _this7 });\\n\\n            if (typeof options.callback === 'function') {\\n              options.callback();\\n            }\\n\\n            resolve(enterPage);\\n          };\\n\\n          enterPage.style.visibility = '';\\n          if (leavePage) {\\n            leavePage._hide();\\n            animator.push(enterPage, leavePage, done);\\n          } else {\\n            done();\\n          }\\n        });\\n      }).catch(function (error) {\\n        _this7._isRunning = false;\\n        throw error;\\n      });\\n    }\\n\\n    /**\\n     * @method replacePage\\n     * @signature replacePage(page, [options])\\n     * @return {Promise}\\n     *   [en]Promise which resolves to the new page.[/en]\\n     *   [ja]新しいページを解決するPromiseを返します。[/ja]\\n     * @description\\n     *   [en]Replaces the current top page with the specified one. Extends `pushPage()` parameters.[/en]\\n     *   [ja]現在表示中のページをを指定したページに置き換えます。[/ja]\\n     */\\n\\n  }, {\\n    key: 'replacePage',\\n    value: function replacePage(page) {\\n      var _this8 = this;\\n\\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\\n\\n      return this.pushPage(page, options).then(function (resolvedValue) {\\n        if (_this8.pages.length > 1) {\\n          _this8._pageLoader.unload(_this8.pages[_this8.pages.length - 2]);\\n        }\\n        _this8._updateLastPageBackButton();\\n\\n        return Promise.resolve(resolvedValue);\\n      });\\n    }\\n\\n    /**\\n     * @method insertPage\\n     * @signature insertPage(index, page, [options])\\n     * @param {Number} index\\n     *   [en]The index where it should be inserted.[/en]\\n     *   [ja]スタックに挿入する位置のインデックスを指定します。[/ja]\\n     * @return {Promise}\\n     *   [en]Promise which resolves to the inserted page.[/en]\\n     *   [ja]指定したページを解決するPromiseを返します。[/ja]\\n     * @description\\n     *   [en]Insert the specified page into the stack with at a position defined by the `index` argument. Extends `pushPage()` parameters.[/en]\\n     *   [ja]指定したpageをページスタックのindexで指定した位置に追加します。[/ja]\\n     */\\n\\n  }, {\\n    key: 'insertPage',\\n    value: function insertPage(index, page) {\\n      var _this9 = this;\\n\\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\\n\\n      var _preparePageAndOption3 = this._preparePageAndOptions(page, options);\\n\\n      page = _preparePageAndOption3.page;\\n      options = _preparePageAndOption3.options;\\n\\n      index = this._normalizeIndex(index);\\n\\n      if (index >= this.pages.length) {\\n        return this.pushPage(page, options);\\n      }\\n\\n      page = typeof options.pageHTML === 'string' ? options.pageHTML : page;\\n      var loader = typeof options.pageHTML === 'string' ? instantPageLoader : this._pageLoader;\\n\\n      return new Promise(function (resolve) {\\n        loader.load({ page: page, parent: _this9 }, function (pageElement) {\\n          _this9._verifyPageElement(pageElement);\\n          _this9._pageMap.set(pageElement, page);\\n          pageElement = util.extend(pageElement, {\\n            data: options.data,\\n            pushedOptions: options\\n          });\\n\\n          options.animationOptions = util.extend({}, AnimatorFactory.parseAnimationOptionsString(_this9.getAttribute('animation-options')), options.animationOptions || {});\\n\\n          _this9.insertBefore(pageElement, _this9.pages[index]);\\n          _this9.topPage.updateBackButton(true);\\n\\n          setTimeout(function () {\\n            pageElement = null;\\n            resolve(_this9.pages[index]);\\n          }, 1000 / 60);\\n        });\\n      });\\n    }\\n\\n    /**\\n     * @method resetToPage\\n     * @signature resetToPage(page, [options])\\n     * @return {Promise}\\n     *   [en]Promise which resolves to the new top page.[/en]\\n     *   [ja]新しいトップページを解決するPromiseを返します。[/ja]\\n     * @description\\n     *   [en]Clears page stack and adds the specified page to the stack. Extends `pushPage()` parameters.[/en]\\n     *   [ja]ページスタックをリセットし、指定したページを表示します。[/ja]\\n     */\\n\\n  }, {\\n    key: 'resetToPage',\\n    value: function resetToPage(page) {\\n      var _this10 = this;\\n\\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\\n\\n      var _preparePageAndOption4 = this._preparePageAndOptions(page, options);\\n\\n      page = _preparePageAndOption4.page;\\n      options = _preparePageAndOption4.options;\\n\\n\\n      if (!options.animator && !options.animation) {\\n        options.animation = 'none';\\n      }\\n\\n      var callback = options.callback;\\n\\n      options.callback = function () {\\n        while (_this10.pages.length > 1) {\\n          _this10._pageLoader.unload(_this10.pages[0]);\\n        }\\n\\n        _this10.pages[0].updateBackButton(false);\\n        callback && callback();\\n      };\\n\\n      if (!options.page && !options.pageHTML && this._getPageTarget()) {\\n        page = options.page = this._getPageTarget();\\n      }\\n\\n      return this.pushPage(page, options);\\n    }\\n\\n    /**\\n     * @method bringPageTop\\n     * @signature bringPageTop(item, [options])\\n     * @param {String|Number} item\\n     *   [en]Page URL or index of an existing page in navigator's stack.[/en]\\n     *   [ja]ページのURLかもしくはons-navigatorのページスタックのインデックス値を指定します。[/ja]\\n     * @return {Promise}\\n     *   [en]Promise which resolves to the new top page.[/en]\\n     *   [ja]新しいトップページを解決するPromiseを返します。[/ja]\\n     * @description\\n     *   [en]Brings the given page to the top of the page stack if it already exists or pushes it into the stack if doesn't. Extends `pushPage()` parameters.[/en]\\n     *   [ja]指定したページをページスタックの一番上に移動します。もし指定したページが無かった場合新しくpushされます。[/ja]\\n     */\\n\\n  }, {\\n    key: 'bringPageTop',\\n    value: function bringPageTop(item) {\\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\\n\\n      if (['number', 'string'].indexOf(typeof item === 'undefined' ? 'undefined' : _typeof(item)) === -1) {\\n        throw new Error('First argument must be a page name or the index of an existing page. You supplied ' + item);\\n      }\\n      var index = typeof item === 'number' ? this._normalizeIndex(item) : this._lastIndexOfPage(item);\\n      var page = this.pages[index];\\n\\n      if (index < 0) {\\n        return this.pushPage(item, options);\\n      }\\n\\n      var _preparePageAndOption5 = this._preparePageAndOptions(page, options);\\n\\n      options = _preparePageAndOption5.options;\\n\\n\\n      if (index === this.pages.length - 1) {\\n        return Promise.resolve(page);\\n      }\\n      if (!page) {\\n        throw new Error('Failed to find item ' + item);\\n      }\\n      if (this._isRunning) {\\n        return Promise.reject('pushPage is already running.');\\n      }\\n      if (this._emitPrePushEvent()) {\\n        return Promise.reject('Canceled in prepush event.');\\n      }\\n\\n      page.style.visibility = 'hidden';\\n      page.setAttribute('_skipinit', '');\\n      page.parentNode.appendChild(page);\\n      return this._pushPage(options);\\n    }\\n  }, {\\n    key: '_preparePageAndOptions',\\n    value: function _preparePageAndOptions(page) {\\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\\n\\n      if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) != 'object') {\\n        throw new Error('options must be an object. You supplied ' + options);\\n      }\\n\\n      if ((page === null || page === undefined) && options.page) {\\n        page = options.page;\\n      }\\n\\n      options = util.extend({}, this.options || {}, options, { page: page });\\n\\n      return { page: page, options: options };\\n    }\\n  }, {\\n    key: '_updateLastPageBackButton',\\n    value: function _updateLastPageBackButton() {\\n      var index = this.pages.length - 1;\\n      if (index >= 0) {\\n        this.pages[index].updateBackButton(index > 0);\\n      }\\n    }\\n  }, {\\n    key: '_normalizeIndex',\\n    value: function _normalizeIndex(index) {\\n      return index >= 0 ? index : Math.abs(this.pages.length + index) % this.pages.length;\\n    }\\n  }, {\\n    key: '_onDeviceBackButton',\\n    value: function _onDeviceBackButton(event) {\\n      if (this.pages.length > 1) {\\n        this.popPage();\\n      } else {\\n        event.callParentHandler();\\n      }\\n    }\\n  }, {\\n    key: '_lastIndexOfPage',\\n    value: function _lastIndexOfPage(pageName) {\\n      var index = void 0;\\n      for (index = this.pages.length - 1; index >= 0; index--) {\\n        if (!this._pageMap.has(this.pages[index])) {\\n          throw Error('This is bug.');\\n        }\\n\\n        if (pageName === this._pageMap.get(this.pages[index])) {\\n          break;\\n        }\\n      }\\n      return index;\\n    }\\n  }, {\\n    key: '_emitPreEvent',\\n    value: function _emitPreEvent(name) {\\n      var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\\n\\n      var isCanceled = false;\\n\\n      util.triggerElementEvent(this, 'pre' + name, util.extend({\\n        navigator: this,\\n        currentPage: this.pages[this.pages.length - 1],\\n        cancel: function cancel() {\\n          return isCanceled = true;\\n        }\\n      }, data));\\n\\n      return isCanceled;\\n    }\\n  }, {\\n    key: '_emitPrePushEvent',\\n    value: function _emitPrePushEvent() {\\n      return this._emitPreEvent('push');\\n    }\\n  }, {\\n    key: '_emitPrePopEvent',\\n    value: function _emitPrePopEvent() {\\n      var l = this.pages.length;\\n      return this._emitPreEvent('pop', {\\n        leavePage: this.pages[l - 1],\\n        enterPage: this.pages[l - 2]\\n      });\\n    }\\n\\n    // TODO: 書き直す\\n\\n  }, {\\n    key: '_createPageElement',\\n    value: function _createPageElement(templateHTML) {\\n      var pageElement = util.createElement(internal$1.normalizePageHTML(templateHTML));\\n      this._verifyPageElement(pageElement);\\n      return pageElement;\\n    }\\n\\n    /**\\n     * @param {Element} element\\n     */\\n\\n  }, {\\n    key: '_verifyPageElement',\\n    value: function _verifyPageElement(element) {\\n      if (element.nodeName.toLowerCase() !== 'ons-page') {\\n        throw new Error('You must supply an \\\"ons-page\\\" element to \\\"ons-navigator\\\".');\\n      }\\n    }\\n\\n    /**\\n     * @property onDeviceBackButton\\n     * @type {Object}\\n     * @description\\n     *   [en]Back-button handler.[/en]\\n     *   [ja]バックボタンハンドラ。[/ja]\\n     */\\n\\n  }, {\\n    key: '_show',\\n    value: function _show() {\\n      if (this.topPage) {\\n        this.topPage._show();\\n      }\\n    }\\n  }, {\\n    key: '_hide',\\n    value: function _hide() {\\n      if (this.topPage) {\\n        this.topPage._hide();\\n      }\\n    }\\n  }, {\\n    key: '_destroy',\\n    value: function _destroy() {\\n      for (var i = this.pages.length - 1; i >= 0; i--) {\\n        this._pageLoader.unload(this.pages[i]);\\n      }\\n\\n      this.remove();\\n    }\\n\\n    /**\\n     * @param {String} name\\n     * @param {Function} Animator\\n     */\\n\\n  }, {\\n    key: 'animatorFactory',\\n\\n\\n    /**\\n     * @attribute page\\n     * @initonly\\n     * @type {String}\\n     * @description\\n     *   [en]First page to show when navigator is initialized.[/en]\\n     *   [ja]ナビゲーターが初期化された時に表示するページを指定します。[/ja]\\n     */\\n\\n    /**\\n     * @attribute animation\\n     * @type {String}\\n     * @default default\\n     * @description\\n     *   [en]\\n     *     Animation name. Available animations are `\\\"slide\\\"`, `\\\"lift\\\"`, `\\\"fade\\\"` and `\\\"none\\\"`.\\n     *\\n     *     These are platform based animations. For fixed animations, add `\\\"-ios\\\"` or `\\\"-md\\\"` suffix to the animation name. E.g. `\\\"lift-ios\\\"`, `\\\"lift-md\\\"`. Defaults values are `\\\"slide-ios\\\"` and `\\\"fade-md\\\"` depending on the platform.\\n     *   [/en]\\n     *   [ja][/ja]\\n     */\\n\\n    /**\\n     * @attribute animation-options\\n     * @type {Expression}\\n     * @description\\n     *  [en]Specify the animation's duration, timing and delay with an object literal. E.g. `{duration: 0.2, delay: 1, timing: 'ease-in'}`[/en]\\n     *  [ja]アニメーション時のduration, timing, delayをオブジェクトリテラルで指定します。e.g. `{duration: 0.2, delay: 1, timing: 'ease-in'}`[/ja]\\n     */\\n\\n    /**\\n     * @event prepush\\n     * @description\\n     *   [en]Fired just before a page is pushed.[/en]\\n     *   [ja]pageがpushされる直前に発火されます。[/ja]\\n     * @param {Object} event [en]Event object.[/en]\\n     * @param {Object} event.navigator\\n     *   [en]Component object.[/en]\\n     *   [ja]コンポーネントのオブジェクト。[/ja]\\n     * @param {Object} event.currentPage\\n     *   [en]Current page object.[/en]\\n     *   [ja]現在のpageオブジェクト。[/ja]\\n     * @param {Function} event.cancel\\n     *   [en]Call this function to cancel the push.[/en]\\n     *   [ja]この関数を呼び出すと、push処理がキャンセルされます。[/ja]\\n     */\\n\\n    /**\\n     * @event prepop\\n     * @description\\n     *   [en]Fired just before a page is popped.[/en]\\n     *   [ja]pageがpopされる直前に発火されます。[/ja]\\n     * @param {Object} event [en]Event object.[/en]\\n     * @param {Object} event.navigator\\n     *   [en]Component object.[/en]\\n     *   [ja]コンポーネントのオブジェクト。[/ja]\\n     * @param {Object} event.currentPage\\n     *   [en]Current page object.[/en]\\n     *   [ja]現在のpageオブジェクト。[/ja]\\n     * @param {Function} event.cancel\\n     *   [en]Call this function to cancel the pop.[/en]\\n     *   [ja]この関数を呼び出すと、pageのpopがキャンセルされます。[/ja]\\n     */\\n\\n    /**\\n     * @event postpush\\n     * @description\\n     *   [en]Fired just after a page is pushed.[/en]\\n     *   [ja]pageがpushされてアニメーションが終了してから発火されます。[/ja]\\n     * @param {Object} event [en]Event object.[/en]\\n     * @param {Object} event.navigator\\n     *   [en]Component object.[/en]\\n     *   [ja]コンポーネントのオブジェクト。[/ja]\\n     * @param {Object} event.enterPage\\n     *   [en]Object of the next page.[/en]\\n     *   [ja]pushされたpageオブジェクト。[/ja]\\n     * @param {Object} event.leavePage\\n     *   [en]Object of the previous page.[/en]\\n     *   [ja]以前のpageオブジェクト。[/ja]\\n     */\\n\\n    /**\\n     * @event postpop\\n     * @description\\n     *   [en]Fired just after a page is popped.[/en]\\n     *   [ja]pageがpopされてアニメーションが終わった後に発火されます。[/ja]\\n     * @param {Object} event [en]Event object.[/en]\\n     * @param {Object} event.navigator\\n     *   [en]Component object.[/en]\\n     *   [ja]コンポーネントのオブジェクト。[/ja]\\n     * @param {Object} event.enterPage\\n     *   [en]Object of the next page.[/en]\\n     *   [ja]popされて表示されるページのオブジェクト。[/ja]\\n     * @param {Object} event.leavePage\\n     *   [en]Object of the previous page.[/en]\\n     *   [ja]popされて消えるページのオブジェクト。[/ja]\\n     */\\n\\n    get: function get() {\\n      return this._animatorFactory;\\n    }\\n  }, {\\n    key: 'pageLoader',\\n    get: function get() {\\n      return this._pageLoader;\\n    },\\n    set: function set(pageLoader) {\\n      if (!(pageLoader instanceof PageLoader)) {\\n        throw Error('First parameter must be an instance of PageLoader.');\\n      }\\n      this._pageLoader = pageLoader;\\n    }\\n  }, {\\n    key: 'page',\\n    get: function get() {\\n      return this._page;\\n    },\\n    set: function set(page) {\\n      this._page = page;\\n    }\\n  }, {\\n    key: 'onDeviceBackButton',\\n    get: function get() {\\n      return this._backButtonHandler;\\n    },\\n    set: function set(callback) {\\n      if (this._backButtonHandler) {\\n        this._backButtonHandler.destroy();\\n      }\\n\\n      this._backButtonHandler = deviceBackButtonDispatcher.createHandler(this, callback);\\n    }\\n\\n    /**\\n     * @property topPage\\n     * @readonly\\n     * @type {HTMLElement}\\n     * @description\\n     *   [en]Current top page element. Use this method to access options passed by `pushPage()`-like methods.[/en]\\n     *   [ja]現在のページを取得します。pushPage()やresetToPage()メソッドの引数を取得できます。[/ja]\\n     */\\n\\n  }, {\\n    key: 'topPage',\\n    get: function get() {\\n      return this.pages[this.pages.length - 1] || null;\\n    }\\n\\n    /**\\n     * @property pages\\n     * @readonly\\n     * @type {Array}\\n     * @description\\n     *   [en]Copy of the navigator's page stack.[/en]\\n     *   [ja][/ja]\\n     */\\n\\n  }, {\\n    key: 'pages',\\n    get: function get() {\\n      return util.arrayFrom(this.children).filter(function (element) {\\n        return element.tagName === 'ONS-PAGE';\\n      });\\n    }\\n\\n    /**\\n     * @property options\\n     * @type {Object}\\n     * @description\\n     *   [en]Default options object. Attributes have priority over this property.[/en]\\n     *   [ja][/ja]\\n     */\\n\\n    /**\\n     * @property options.animation\\n     * @type {String}\\n     * @description\\n     *   [en]\\n     *     Animation name. Available animations are `\\\"slide\\\"`, `\\\"lift\\\"`, `\\\"fade\\\"` and `\\\"none\\\"`.\\n     *     These are platform based animations. For fixed animations, add `\\\"-ios\\\"` or `\\\"-md\\\"` suffix to the animation name. E.g. `\\\"lift-ios\\\"`, `\\\"lift-md\\\"`. Defaults values are `\\\"slide-ios\\\"` and `\\\"fade-md\\\"`.\\n     *   [/en]\\n     *   [ja][/ja]\\n     */\\n\\n    /**\\n     * @property options.animationOptions\\n     * @type {String}\\n     * @description\\n     *   [en]Specify the animation's duration, delay and timing. E.g. `{duration: 0.2, delay: 0.4, timing: 'ease-in'}`.[/en]\\n     *   [ja]アニメーション時のduration, delay, timingを指定します。e.g. `{duration: 0.2, delay: 0.4, timing: 'ease-in'}` [/ja]\\n     */\\n\\n    /**\\n     * @property options.callback\\n     * @type {String}\\n     * @description\\n     *   [en]Function that is called when the transition has ended.[/en]\\n     *   [ja]このメソッドによる画面遷移が終了した際に呼び出される関数オブジェクトを指定します。[/ja]\\n     */\\n\\n    /**\\n     * @property options.refresh\\n     * @default  false\\n     * @type {Boolean}\\n     * @description\\n     *   [en]If this parameter is `true`, the previous page will be refreshed (destroyed and created again) before `popPage()` action.[/en]\\n     *   [ja]popPageする前に、前にあるページを生成しなおして更新する場合にtrueを指定します。[/ja]\\n     */\\n\\n  }, {\\n    key: 'options',\\n    get: function get() {\\n      return this._options;\\n    },\\n    set: function set(object) {\\n      this._options = object;\\n    }\\n  }, {\\n    key: '_isRunning',\\n    set: function set(value) {\\n      this.setAttribute('_is-running', value ? 'true' : 'false');\\n    },\\n    get: function get() {\\n      return JSON.parse(this.getAttribute('_is-running'));\\n    }\\n  }], [{\\n    key: 'registerAnimator',\\n    value: function registerAnimator(name, Animator) {\\n      if (!(Animator.prototype instanceof NavigatorTransitionAnimator)) {\\n        throw new Error('\\\"Animator\\\" param must inherit NavigatorElement.NavigatorTransitionAnimator');\\n      }\\n\\n      _animatorDict$3[name] = Animator;\\n    }\\n  }, {\\n    key: 'observedAttributes',\\n    get: function get() {\\n      return ['animation'];\\n    }\\n  }, {\\n    key: 'animators',\\n    get: function get() {\\n      return _animatorDict$3;\\n    }\\n  }, {\\n    key: 'NavigatorTransitionAnimator',\\n    get: function get() {\\n      return NavigatorTransitionAnimator;\\n    }\\n  }, {\\n    key: 'events',\\n    get: function get() {\\n      return ['prepush', 'postpush', 'prepop', 'postpop'];\\n    }\\n  }, {\\n    key: 'rewritables',\\n    get: function get() {\\n      return rewritables;\\n    }\\n  }]);\\n  return NavigatorElement;\\n}(BaseElement);\\n\\ncustomElements.define('ons-navigator', NavigatorElement);\\n\\n/*\\nCopyright 2013-2015 ASIAL CORPORATION\\n\\nLicensed under the Apache License, Version 2.0 (the \\\"License\\\");\\nyou may not use this file except in compliance with the License.\\nYou may obtain a copy of the License at\\n\\n   http://www.apache.org/licenses/LICENSE-2.0\\n\\nUnless required by applicable law or agreed to in writing, software\\ndistributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\nSee the License for the specific language governing permissions and\\nlimitations under the License.\\n\\n*/\\n\\nvar defaultClassName$9 = 'toolbar';\\n\\nvar scheme$13 = {\\n  '': 'toolbar--*',\\n  '.toolbar__left': 'toolbar--*__left',\\n  '.toolbar__center': 'toolbar--*__center',\\n  '.toolbar__right': 'toolbar--*__right'\\n};\\n\\n/**\\n * @element ons-toolbar\\n * @category page\\n * @modifier material\\n *   [en]Material Design toolbar.[/en]\\n *   [ja][/ja]\\n * @modifier transparent\\n *   [en]Transparent toolbar[/en]\\n *   [ja]透明な背景を持つツールバーを表示します。[/ja]\\n * @modifier noshadow\\n *   [en]Toolbar without shadow[/en]\\n *   [ja]ツールバーに影を付けずに表示します。[/ja]\\n * @description\\n *   [en]\\n *     Toolbar component that can be used with navigation.\\n *\\n *     Left, center and right container can be specified by class names.\\n *\\n *     This component will automatically displays as a Material Design toolbar when running on Android devices.\\n *   [/en]\\n *   [ja]ナビゲーションで使用するツールバー用コンポーネントです。クラス名により、左、中央、右のコンテナを指定できます。[/ja]\\n * @codepen aHmGL\\n * @tutorial vanilla/Reference/page\\n * @guide adding-a-toolbar [en]Adding a toolbar[/en][ja]ツールバーの追加[/ja]\\n * @seealso ons-bottom-toolbar\\n *   [en]The `<ons-bottom-toolbar>` displays a toolbar on the bottom of the page.[/en]\\n *   [ja]ons-bottom-toolbarコンポーネント[/ja]\\n * @seealso ons-back-button\\n *   [en]The `<ons-back-button>` component displays a back button inside the toolbar.[/en]\\n *   [ja]ons-back-buttonコンポーネント[/ja]\\n * @seealso ons-toolbar-button\\n *   [en]The `<ons-toolbar-button>` component displays a toolbar button inside the toolbar.[/en]\\n *   [ja]ons-toolbar-buttonコンポーネント[/ja]\\n * @example\\n * <ons-page>\\n *   <ons-toolbar>\\n *     <div class=\\\"left\\\">\\n *       <ons-back-button>\\n *         Back\\n *       </ons-back-button>\\n *     </div>\\n *     <div class=\\\"center\\\">\\n *       Title\\n *     </div>\\n *     <div class=\\\"right\\\">\\n *       <ons-toolbar-button>\\n *         <ons-icon icon=\\\"md-menu\\\"></ons-icon>\\n *       </ons-toolbar-button>\\n *     </div>\\n *   </ons-toolbar>\\n * </ons-page>\\n */\\n\\nvar ToolbarElement = function (_BaseElement) {\\n  inherits(ToolbarElement, _BaseElement);\\n\\n  function ToolbarElement() {\\n    classCallCheck(this, ToolbarElement);\\n    return possibleConstructorReturn(this, (ToolbarElement.__proto__ || Object.getPrototypeOf(ToolbarElement)).apply(this, arguments));\\n  }\\n\\n  createClass(ToolbarElement, [{\\n    key: 'init',\\n\\n\\n    /**\\n     * @attribute inline\\n     * @initonly\\n     * @description\\n     *   [en]Display the toolbar as an inline element.[/en]\\n     *   [ja]ツールバーをインラインに置きます。スクロール領域内にそのまま表示されます。[/ja]\\n     */\\n\\n    /**\\n     * @attribute modifier\\n     * @description\\n     *   [en]The appearance of the toolbar.[/en]\\n     *   [ja]ツールバーの表現を指定します。[/ja]\\n     */\\n\\n    value: function init() {\\n      var _this2 = this;\\n\\n      contentReady(this, function () {\\n        _this2._compile();\\n      });\\n    }\\n  }, {\\n    key: 'attributeChangedCallback',\\n    value: function attributeChangedCallback(name, last, current) {\\n      switch (name) {\\n        case 'class':\\n          if (!this.classList.contains(defaultClassName$9)) {\\n            this.className = defaultClassName$9 + ' ' + current;\\n          }\\n          break;\\n        case 'modifier':\\n          ModifierUtil.onModifierChanged(last, current, this, scheme$13);\\n          break;\\n      }\\n    }\\n\\n    /**\\n     * @return {HTMLElement}\\n     */\\n\\n  }, {\\n    key: '_getToolbarLeftItemsElement',\\n    value: function _getToolbarLeftItemsElement() {\\n      return this.querySelector('.left') || internal$1.nullElement;\\n    }\\n\\n    /**\\n     * @return {HTMLElement}\\n     */\\n\\n  }, {\\n    key: '_getToolbarCenterItemsElement',\\n    value: function _getToolbarCenterItemsElement() {\\n      return this.querySelector('.center') || internal$1.nullElement;\\n    }\\n\\n    /**\\n     * @return {HTMLElement}\\n     */\\n\\n  }, {\\n    key: '_getToolbarRightItemsElement',\\n    value: function _getToolbarRightItemsElement() {\\n      return this.querySelector('.right') || internal$1.nullElement;\\n    }\\n\\n    /**\\n     * @return {HTMLElement}\\n     */\\n\\n  }, {\\n    key: '_getToolbarBackButtonLabelElement',\\n    value: function _getToolbarBackButtonLabelElement() {\\n      return this.querySelector('ons-back-button .back-button__label') || internal$1.nullElement;\\n    }\\n\\n    /**\\n     * @return {HTMLElement}\\n     */\\n\\n  }, {\\n    key: '_getToolbarBackButtonIconElement',\\n    value: function _getToolbarBackButtonIconElement() {\\n      return this.querySelector('ons-back-button .back-button__icon') || internal$1.nullElement;\\n    }\\n  }, {\\n    key: '_compile',\\n    value: function _compile() {\\n      autoStyle.prepare(this);\\n      this.classList.add(defaultClassName$9);\\n      this._ensureToolbarItemElements();\\n      ModifierUtil.initModifier(this, scheme$13);\\n    }\\n  }, {\\n    key: '_ensureToolbarItemElements',\\n    value: function _ensureToolbarItemElements() {\\n      for (var i = this.childNodes.length - 1; i >= 0; i--) {\\n        // case of not element\\n        if (this.childNodes[i].nodeType != 1) {\\n          this.removeChild(this.childNodes[i]);\\n        }\\n      }\\n\\n      var center = this._ensureToolbarElement('center');\\n      center.classList.add('toolbar__title');\\n\\n      if (this.children.length !== 1 || !this.children[0].classList.contains('center')) {\\n        var left = this._ensureToolbarElement('left');\\n        var right = this._ensureToolbarElement('right');\\n\\n        if (this.children[0] !== left || this.children[1] !== center || this.children[2] !== right) {\\n          this.appendChild(left);\\n          this.appendChild(center);\\n          this.appendChild(right);\\n        }\\n      }\\n    }\\n  }, {\\n    key: '_ensureToolbarElement',\\n    value: function _ensureToolbarElement(name) {\\n      if (util.findChild(this, '.toolbar__' + name)) {\\n        var _element = util.findChild(this, '.toolbar__' + name);\\n        _element.classList.add(name);\\n        return _element;\\n      }\\n\\n      var element = util.findChild(this, '.' + name) || util.create('.' + name);\\n      element.classList.add('toolbar__' + name);\\n\\n      return element;\\n    }\\n  }], [{\\n    key: 'observedAttributes',\\n    get: function get() {\\n      return ['modifier', 'class'];\\n    }\\n  }]);\\n  return ToolbarElement;\\n}(BaseElement);\\n\\ncustomElements.define('ons-toolbar', ToolbarElement);\\n\\n/*\\nCopyright 2013-2015 ASIAL CORPORATION\\n\\nLicensed under the Apache License, Version 2.0 (the \\\"License\\\");\\nyou may not use this file except in compliance with the License.\\nYou may obtain a copy of the License at\\n\\n   http://www.apache.org/licenses/LICENSE-2.0\\n\\nUnless required by applicable law or agreed to in writing, software\\ndistributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\nSee the License for the specific language governing permissions and\\nlimitations under the License.\\n\\n*/\\n\\nvar defaultClassName$8 = 'page';\\nvar scheme$12 = {\\n  '': 'page--*',\\n  '.page__content': 'page--*__content',\\n  '.page__background': 'page--*__background'\\n};\\n\\nvar nullToolbarElement = document.createElement('ons-toolbar'); // requires that 'ons-toolbar' element is registered\\n\\n/**\\n * @element ons-page\\n * @category page\\n * @modifier material\\n *   [en]Material Design style[/en]\\n *   [ja][/ja]\\n * @description\\n *   [en]\\n *     This component defines the root of each page. If the content is large it will become scrollable.\\n *\\n *     A navigation bar can be added to the top of the page using the `<ons-toolbar>` element.\\n *   [/en]\\n *   [ja]ページ定義のためのコンポーネントです。このコンポーネントの内容はスクロールが許可されます。[/ja]\\n * @tutorial vanilla/Reference/page\\n * @guide creating-a-page\\n *   [en]Setting up a page in its `init` event[/en]\\n *   [ja]Setting up a page in its `init` event[/ja]\\n * @guide templates\\n *   [en]Defining multiple pages in single html[/en]\\n *   [ja]複数のページを1つのHTMLに記述する[/ja]\\n * @guide multiple-page-navigation\\n *   [en]Managing multiple pages[/en]\\n *   [ja]複数のページを管理する[/ja]\\n * @guide using-modifier [en]More details about the `modifier` attribute[/en][ja]modifier属性の使い方[/ja]\\n * @seealso ons-toolbar\\n *   [en]Use the `<ons-toolbar>` element to add a navigation bar to the top of the page.[/en]\\n *   [ja][/ja]\\n * @example\\n * <ons-page>\\n *   <ons-toolbar>\\n *     <div class=\\\"left\\\">\\n *       <ons-back-button>Back</ons-back-button>\\n *     </div>\\n *     <div class=\\\"center\\\">Title</div>\\n *     <div class=\\\"right\\\">\\n *       <ons-toolbar-button>\\n *         <ons-icon icon=\\\"md-menu\\\"></ons-icon>\\n *       </ons-toolbar-button>\\n *     </div>\\n *   </ons-toolbar>\\n *\\n *   <p>Page content</p>\\n * </ons-page>\\n *\\n * @example\\n * <script>\\n *   myApp.handler = function(done) {\\n *     loadMore().then(done);\\n *   }\\n * </script>\\n *\\n * <ons-page on-infinite-scroll=\\\"myApp.handler\\\">\\n *   <ons-toolbar>\\n *     <div class=\\\"center\\\">List</div>\\n *   </ons-toolbar>\\n *\\n *   <ons-list>\\n *     <ons-list-item>#1</ons-list-item>\\n *     <ons-list-item>#2</ons-list-item>\\n *     <ons-list-item>#3</ons-list-item>\\n *     ...\\n *   </ons-list>\\n * </ons-page>\\n */\\n\\nvar PageElement = function (_BaseElement) {\\n  inherits(PageElement, _BaseElement);\\n\\n  function PageElement() {\\n    classCallCheck(this, PageElement);\\n    return possibleConstructorReturn(this, (PageElement.__proto__ || Object.getPrototypeOf(PageElement)).apply(this, arguments));\\n  }\\n\\n  createClass(PageElement, [{\\n    key: 'init',\\n\\n\\n    /**\\n     * @event init\\n     * @description\\n     *   [en]Fired right after the page is attached.[/en]\\n     *   [ja]ページがアタッチされた後に発火します。[/ja]\\n     * @param {Object} event [en]Event object.[/en]\\n     */\\n\\n    /**\\n     * @event show\\n     * @description\\n     *   [en]Fired right after the page is shown.[/en]\\n     *   [ja]ページが表示された後に発火します。[/ja]\\n     * @param {Object} event [en]Event object.[/en]\\n     */\\n\\n    /**\\n     * @event hide\\n     * @description\\n     *   [en]Fired right after the page is hidden.[/en]\\n     *   [ja]ページが隠れた後に発火します。[/ja]\\n     * @param {Object} event [en]Event object.[/en]\\n     */\\n\\n    /**\\n     * @event destroy\\n     * @description\\n     *   [en]Fired right before the page is destroyed.[/en]\\n     *   [ja]ページが破棄される前に発火します。[/ja]\\n     * @param {Object} event [en]Event object.[/en]\\n     */\\n\\n    /**\\n     * @attribute modifier\\n     * @type {String}\\n     * @description\\n     *   [en]Specify modifier name to specify custom styles.[/en]\\n     *   [ja]スタイル定義をカスタマイズするための名前を指定します。[/ja]\\n     */\\n\\n    /**\\n     * @attribute on-infinite-scroll\\n     * @type {String}\\n     * @description\\n     *   [en]Path of the function to be executed on infinite scrolling. Example: `app.loadData`. The function receives a done callback that must be called when it's finished.[/en]\\n     *   [ja][/ja]\\n     */\\n\\n    value: function init() {\\n      var _this2 = this;\\n\\n      this.classList.add(defaultClassName$8);\\n      this._initialized = false;\\n\\n      contentReady(this, function () {\\n        _this2._compile();\\n\\n        _this2._isShown = false;\\n        _this2._contentElement = _this2._getContentElement();\\n        _this2._isMuted = _this2.hasAttribute('_muted');\\n        _this2._skipInit = _this2.hasAttribute('_skipinit');\\n      });\\n    }\\n  }, {\\n    key: 'connectedCallback',\\n    value: function connectedCallback() {\\n      var _this3 = this;\\n\\n      if (this._initialized) {\\n        return;\\n      }\\n\\n      this._initialized = true;\\n\\n      contentReady(this, function () {\\n        if (!_this3._isMuted) {\\n          if (_this3._skipInit) {\\n            _this3.removeAttribute('_skipinit');\\n          } else {\\n            setImmediate(function () {\\n              return util.triggerElementEvent(_this3, 'init');\\n            });\\n          }\\n        }\\n\\n        if (!util.hasAnyComponentAsParent(_this3)) {\\n          setImmediate(function () {\\n            return _this3._show();\\n          });\\n        }\\n\\n        _this3._tryToFillStatusBar();\\n\\n        if (_this3.hasAttribute('on-infinite-scroll')) {\\n          _this3.attributeChangedCallback('on-infinite-scroll', null, _this3.getAttribute('on-infinite-scroll'));\\n        }\\n      });\\n    }\\n  }, {\\n    key: 'updateBackButton',\\n    value: function updateBackButton(show) {\\n      if (this.backButton) {\\n        show ? this.backButton.show() : this.backButton.hide();\\n      }\\n    }\\n  }, {\\n    key: '_tryToFillStatusBar',\\n    value: function _tryToFillStatusBar() {\\n      var _this4 = this;\\n\\n      internal$1.autoStatusBarFill(function () {\\n        var filled = util.findParent(_this4, function (e) {\\n          return e.hasAttribute('status-bar-fill');\\n        });\\n        util.toggleAttribute(_this4, 'status-bar-fill', !filled && (_this4._canAnimateToolbar() || !_this4._hasAPageControlChild()));\\n      });\\n    }\\n  }, {\\n    key: '_hasAPageControlChild',\\n    value: function _hasAPageControlChild() {\\n      return util.findChild(this._contentElement, function (e) {\\n        return e.nodeName.match(/ons-(splitter|sliding-menu|navigator|tabbar)/i);\\n      });\\n    }\\n\\n    /**\\n     * @property onInfiniteScroll\\n     * @description\\n     *  [en]Function to be executed when scrolling to the bottom of the page. The function receives a done callback as an argument that must be called when it's finished.[/en]\\n     *  [ja][/ja]\\n     */\\n\\n  }, {\\n    key: '_onScroll',\\n    value: function _onScroll() {\\n      var _this5 = this;\\n\\n      var c = this._contentElement,\\n          overLimit = (c.scrollTop + c.clientHeight) / c.scrollHeight >= this._infiniteScrollLimit;\\n\\n      if (this._onInfiniteScroll && !this._loadingContent && overLimit) {\\n        this._loadingContent = true;\\n        this._onInfiniteScroll(function () {\\n          return _this5._loadingContent = false;\\n        });\\n      }\\n    }\\n\\n    /**\\n     * @property onDeviceBackButton\\n     * @type {Object}\\n     * @description\\n     *   [en]Back-button handler.[/en]\\n     *   [ja]バックボタンハンドラ。[/ja]\\n     */\\n\\n  }, {\\n    key: '_getContentElement',\\n\\n\\n    /**\\n     * @return {HTMLElement}\\n     */\\n    value: function _getContentElement() {\\n      var result = util.findChild(this, '.page__content');\\n      if (result) {\\n        return result;\\n      }\\n      throw Error('fail to get \\\".page__content\\\" element.');\\n    }\\n\\n    /**\\n     * @return {Boolean}\\n     */\\n\\n  }, {\\n    key: '_canAnimateToolbar',\\n    value: function _canAnimateToolbar() {\\n      if (util.findChild(this, 'ons-toolbar')) {\\n        return true;\\n      }\\n      return !!util.findChild(this._contentElement, function (el) {\\n        return util.match(el, 'ons-toolbar') && !el.hasAttribute('inline');\\n      });\\n    }\\n\\n    /**\\n     * @return {HTMLElement}\\n     */\\n\\n  }, {\\n    key: '_getBackgroundElement',\\n    value: function _getBackgroundElement() {\\n      var result = util.findChild(this, '.page__background');\\n      if (result) {\\n        return result;\\n      }\\n      throw Error('fail to get \\\".page__background\\\" element.');\\n    }\\n\\n    /**\\n     * @return {HTMLElement}\\n     */\\n\\n  }, {\\n    key: '_getBottomToolbarElement',\\n    value: function _getBottomToolbarElement() {\\n      return util.findChild(this, 'ons-bottom-toolbar') || internal$1.nullElement;\\n    }\\n\\n    /**\\n     * @return {HTMLElement}\\n     */\\n\\n  }, {\\n    key: '_getToolbarElement',\\n    value: function _getToolbarElement() {\\n      return util.findChild(this, 'ons-toolbar') || nullToolbarElement;\\n    }\\n  }, {\\n    key: 'attributeChangedCallback',\\n    value: function attributeChangedCallback(name, last, current) {\\n      var _this6 = this;\\n\\n      switch (name) {\\n        case 'class':\\n          if (!this.classList.contains(defaultClassName$8)) {\\n            this.className = defaultClassName$8 + ' ' + current;\\n          }\\n          break;\\n        case 'modifier':\\n          ModifierUtil.onModifierChanged(last, current, this, scheme$12);\\n          break;\\n        case '_muted':\\n          this._isMuted = this.hasAttribute('_muted');\\n          break;\\n        case '_skipinit':\\n          this._skipInit = this.hasAttribute('_skipinit');\\n          break;\\n        case 'on-infinite-scroll':\\n          if (current === null) {\\n            this.onInfiniteScroll = null;\\n          } else {\\n            this.onInfiniteScroll = function (done) {\\n              var f = util.findFromPath(current);\\n              _this6.onInfiniteScroll = f;\\n              f(done);\\n            };\\n          }\\n          break;\\n      }\\n    }\\n  }, {\\n    key: '_compile',\\n    value: function _compile() {\\n      var _this7 = this;\\n\\n      autoStyle.prepare(this);\\n\\n      if (util.findChild(this, '.content')) {\\n        util.findChild(this, '.content').classList.add('page__content');\\n      }\\n\\n      if (util.findChild(this, '.background')) {\\n        util.findChild(this, '.background').classList.add('page__background');\\n      }\\n\\n      if (!util.findChild(this, '.page__content')) {\\n        var content = util.create('.page__content');\\n\\n        util.arrayFrom(this.childNodes).forEach(function (node) {\\n          if (node.nodeType !== 1 || _this7._elementShouldBeMoved(node)) {\\n            content.appendChild(node);\\n          }\\n        });\\n\\n        var prevNode = util.findChild(this, '.page__background') || util.findChild(this, 'ons-toolbar');\\n\\n        this.insertBefore(content, prevNode && prevNode.nextSibling);\\n      }\\n\\n      if (!util.findChild(this, '.page__background')) {\\n        var background = util.create('.page__background');\\n        this.insertBefore(background, util.findChild(this, '.page__content'));\\n      }\\n\\n      ModifierUtil.initModifier(this, scheme$12);\\n    }\\n  }, {\\n    key: '_elementShouldBeMoved',\\n    value: function _elementShouldBeMoved(el) {\\n      if (el.classList.contains('page__background')) {\\n        return false;\\n      }\\n      var tagName = el.tagName.toLowerCase();\\n      if (tagName === 'ons-fab') {\\n        return !el.hasAttribute('position');\\n      }\\n      var fixedElements = ['ons-toolbar', 'ons-bottom-toolbar', 'ons-modal', 'ons-speed-dial', 'ons-dialog', 'ons-alert-dialog', 'ons-popover'];\\n      return el.hasAttribute('inline') || fixedElements.indexOf(tagName) === -1;\\n    }\\n  }, {\\n    key: '_show',\\n    value: function _show() {\\n      if (!this._isShown && util.isAttached(this)) {\\n        this._isShown = true;\\n\\n        if (!this._isMuted) {\\n          util.triggerElementEvent(this, 'show');\\n        }\\n\\n        util.propagateAction(this, '_show');\\n      }\\n    }\\n  }, {\\n    key: '_hide',\\n    value: function _hide() {\\n      if (this._isShown) {\\n        this._isShown = false;\\n\\n        if (!this._isMuted) {\\n          util.triggerElementEvent(this, 'hide');\\n        }\\n\\n        util.propagateAction(this, '_hide');\\n      }\\n    }\\n  }, {\\n    key: '_destroy',\\n    value: function _destroy() {\\n      this._hide();\\n\\n      if (!this._isMuted) {\\n        util.triggerElementEvent(this, 'destroy');\\n      }\\n\\n      if (this.onDeviceBackButton) {\\n        this.onDeviceBackButton.destroy();\\n      }\\n\\n      util.propagateAction(this, '_destroy');\\n\\n      this.remove();\\n    }\\n  }, {\\n    key: 'name',\\n    set: function set(str) {\\n      this.setAttribute('name', str);\\n    },\\n    get: function get() {\\n      return this.getAttribute('name');\\n    }\\n  }, {\\n    key: 'backButton',\\n    get: function get() {\\n      return this.querySelector('ons-back-button');\\n    }\\n  }, {\\n    key: 'onInfiniteScroll',\\n    set: function set(value) {\\n      var _this8 = this;\\n\\n      if (value === null) {\\n        this._onInfiniteScroll = null;\\n        this._contentElement.removeEventListener('scroll', this._boundOnScroll);\\n        return;\\n      }\\n      if (!(value instanceof Function)) {\\n        throw new Error('onInfiniteScroll must be a function or null');\\n      }\\n      if (!this._onInfiniteScroll) {\\n        this._infiniteScrollLimit = 0.9;\\n        this._boundOnScroll = this._onScroll.bind(this);\\n        setImmediate(function () {\\n          return _this8._contentElement.addEventListener('scroll', _this8._boundOnScroll);\\n        });\\n      }\\n      this._onInfiniteScroll = value;\\n    },\\n    get: function get() {\\n      return this._onInfiniteScroll;\\n    }\\n  }, {\\n    key: 'onDeviceBackButton',\\n    get: function get() {\\n      return this._backButtonHandler;\\n    },\\n    set: function set(callback) {\\n      if (this._backButtonHandler) {\\n        this._backButtonHandler.destroy();\\n      }\\n\\n      this._backButtonHandler = deviceBackButtonDispatcher.createHandler(this, callback);\\n    }\\n  }], [{\\n    key: 'observedAttributes',\\n    get: function get() {\\n      return ['modifier', '_muted', '_skipinit', 'on-infinite-scroll', 'class'];\\n    }\\n  }, {\\n    key: 'events',\\n    get: function get() {\\n      return ['init', 'show', 'hide', 'destroy'];\\n    }\\n\\n    /**\\n     * @property data\\n     * @type {*}\\n     * @description\\n     *   [en]User's custom data passed to `pushPage()`-like methods.[/en]\\n     *   [ja][/ja]\\n     */\\n\\n  }]);\\n  return PageElement;\\n}(BaseElement);\\n\\ncustomElements.define('ons-page', PageElement);\\n\\n/*\\nCopyright 2013-2015 ASIAL CORPORATION\\n\\nLicensed under the Apache License, Version 2.0 (the \\\"License\\\");\\nyou may not use this file except in compliance with the License.\\nYou may obtain a copy of the License at\\n\\n   http://www.apache.org/licenses/LICENSE-2.0\\n\\nUnless required by applicable law or agreed to in writing, software\\ndistributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\nSee the License for the specific language governing permissions and\\nlimitations under the License.\\n\\n*/\\nvar PopoverAnimator = function (_BaseAnimator) {\\n  inherits(PopoverAnimator, _BaseAnimator);\\n\\n  /**\\n   * @param {Object} options\\n   * @param {String} options.timing\\n   * @param {Number} options.duration\\n   * @param {Number} options.delay\\n   */\\n  function PopoverAnimator() {\\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\\n        _ref$timing = _ref.timing,\\n        timing = _ref$timing === undefined ? 'cubic-bezier(.1, .7, .4, 1)' : _ref$timing,\\n        _ref$delay = _ref.delay,\\n        delay = _ref$delay === undefined ? 0 : _ref$delay,\\n        _ref$duration = _ref.duration,\\n        duration = _ref$duration === undefined ? 0.2 : _ref$duration;\\n\\n    classCallCheck(this, PopoverAnimator);\\n    return possibleConstructorReturn(this, (PopoverAnimator.__proto__ || Object.getPrototypeOf(PopoverAnimator)).call(this, { timing: timing, delay: delay, duration: duration }));\\n  }\\n\\n  createClass(PopoverAnimator, [{\\n    key: 'show',\\n    value: function show(popover, callback) {\\n      callback();\\n    }\\n  }, {\\n    key: 'hide',\\n    value: function hide(popover, callback) {\\n      callback();\\n    }\\n  }, {\\n    key: '_animate',\\n    value: function _animate(element, _ref2) {\\n      var from = _ref2.from,\\n          to = _ref2.to,\\n          options = _ref2.options,\\n          callback = _ref2.callback,\\n          _ref2$restore = _ref2.restore,\\n          restore = _ref2$restore === undefined ? false : _ref2$restore,\\n          animation = _ref2.animation;\\n\\n      options = util.extend({}, this.options, options);\\n\\n      if (animation) {\\n        from = animation.from;\\n        to = animation.to;\\n      }\\n\\n      animation = Animit(element);\\n      if (restore) {\\n        animation = animation.saveStyle();\\n      }\\n      animation = animation.queue(from).wait(this.delay).queue({\\n        css: to,\\n        duration: this.duration,\\n        timing: this.timing\\n      });\\n      if (restore) {\\n        animation = animation.restoreStyle();\\n      }\\n      if (callback) {\\n        animation = animation.queue(function (done) {\\n          callback();\\n          done();\\n        });\\n      }\\n      return animation;\\n    }\\n  }, {\\n    key: '_animateAll',\\n    value: function _animateAll(element, animations) {\\n      var _this2 = this;\\n\\n      Object.keys(animations).forEach(function (key) {\\n        return _this2._animate(element[key], animations[key]).play();\\n      });\\n    }\\n  }]);\\n  return PopoverAnimator;\\n}(BaseAnimator);\\n\\nvar fade$1 = {\\n  out: {\\n    from: { opacity: 1.0 },\\n    to: { opacity: 0 }\\n  },\\n  in: {\\n    from: { opacity: 0 },\\n    to: { opacity: 1.0 }\\n  }\\n};\\n\\nvar MDFadePopoverAnimator = function (_PopoverAnimator) {\\n  inherits(MDFadePopoverAnimator, _PopoverAnimator);\\n\\n  function MDFadePopoverAnimator() {\\n    classCallCheck(this, MDFadePopoverAnimator);\\n    return possibleConstructorReturn(this, (MDFadePopoverAnimator.__proto__ || Object.getPrototypeOf(MDFadePopoverAnimator)).apply(this, arguments));\\n  }\\n\\n  createClass(MDFadePopoverAnimator, [{\\n    key: 'show',\\n    value: function show(popover, callback) {\\n      this._animateAll(popover, {\\n        _mask: fade$1.in,\\n        _popover: { animation: fade$1.in, restore: true, callback: callback }\\n      });\\n    }\\n  }, {\\n    key: 'hide',\\n    value: function hide(popover, callback) {\\n      this._animateAll(popover, {\\n        _mask: fade$1.out,\\n        _popover: { animation: fade$1.out, restore: true, callback: callback }\\n      });\\n    }\\n  }]);\\n  return MDFadePopoverAnimator;\\n}(PopoverAnimator);\\n\\nvar IOSFadePopoverAnimator = function (_MDFadePopoverAnimato) {\\n  inherits(IOSFadePopoverAnimator, _MDFadePopoverAnimato);\\n\\n  function IOSFadePopoverAnimator() {\\n    classCallCheck(this, IOSFadePopoverAnimator);\\n    return possibleConstructorReturn(this, (IOSFadePopoverAnimator.__proto__ || Object.getPrototypeOf(IOSFadePopoverAnimator)).apply(this, arguments));\\n  }\\n\\n  createClass(IOSFadePopoverAnimator, [{\\n    key: 'show',\\n    value: function show(popover, callback) {\\n      this._animateAll(popover, {\\n        _mask: fade$1.in,\\n        _popover: {\\n          from: {\\n            transform: 'scale3d(1.3, 1.3, 1.0)',\\n            opacity: 0\\n          },\\n          to: {\\n            transform: 'scale3d(1.0, 1.0,  1.0)',\\n            opacity: 1.0\\n          },\\n          restore: true,\\n          callback: callback\\n        }\\n      });\\n    }\\n  }]);\\n  return IOSFadePopoverAnimator;\\n}(MDFadePopoverAnimator);\\n\\n/*\\nCopyright 2013-2015 ASIAL CORPORATION\\n\\nLicensed under the Apache License, Version 2.0 (the \\\"License\\\");\\nyou may not use this file except in compliance with the License.\\nYou may obtain a copy of the License at\\n\\n   http://www.apache.org/licenses/LICENSE-2.0\\n\\nUnless required by applicable law or agreed to in writing, software\\ndistributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\nSee the License for the specific language governing permissions and\\nlimitations under the License.\\n\\n*/\\n\\nvar scheme$14 = {\\n  '.popover': 'popover--*',\\n  '.popover-mask': 'popover-mask--*',\\n  '.popover__content': 'popover--*__content',\\n  '.popover__arrow': 'popover--*__arrow'\\n};\\n\\nvar _animatorDict$4 = {\\n  'default': function _default() {\\n    return platform.isAndroid() ? MDFadePopoverAnimator : IOSFadePopoverAnimator;\\n  },\\n  'none': PopoverAnimator,\\n  'fade-ios': IOSFadePopoverAnimator,\\n  'fade-md': MDFadePopoverAnimator\\n};\\n\\nvar templateSource = util.createFragment('\\\\n  <div class=\\\"popover-mask\\\"></div>\\\\n  <div class=\\\"popover\\\">\\\\n    <div class=\\\"popover__content\\\"></div>\\\\n    <div class=\\\"popover__arrow\\\"></div>\\\\n  </div>\\\\n');\\n\\nvar positions = {\\n  up: 'bottom',\\n  left: 'right',\\n  down: 'top',\\n  right: 'left'\\n};\\n\\n/**\\n * @element ons-popover\\n * @category dialog\\n * @description\\n *  [en]\\n *    A component that displays a popover next to an element. The popover can be used to display extra information about a component or a tooltip.\\n *\\n *    To use the element it can either be attached directly to the `<body>` element or dynamically created from a template using the `ons.createPopover(template)` utility function and the `<ons-template>` tag.\\n *\\n *    Another common way to use the popover is to display a menu when a button on the screen is tapped. For Material Design, popover looks exactly as a dropdown menu.\\n *  [/en]\\n *  [ja]ある要素を対象とするポップオーバーを表示するコンポーネントです。[/ja]\\n * @codepen ZYYRKo\\n * @tutorial vanilla/Reference/popover\\n * @guide dialogs\\n *  [en]Dialog components[/en]\\n *  [ja]Dialog components[/ja]\\n * @guide using-modifier [en]More details about the `modifier` attribute[/en][ja]modifier属性の使い方[/ja]\\n * @example\\n * <ons-button onclick=\\\"showPopover(this)\\\">\\n *   Click me!\\n * </ons-button>\\n *\\n * <ons-popover direction=\\\"down\\\" id=\\\"popover\\\">\\n *   <p>This is a popover!</p>\\n * </ons-popover>\\n *\\n * <script>\\n *   var showPopover = function(element) {\\n *     var popover = document.getElementById('popover');\\n *     popover.show(element);\\n *   };\\n * </script>\\n */\\n\\nvar PopoverElement = function (_BaseElement) {\\n  inherits(PopoverElement, _BaseElement);\\n\\n  function PopoverElement() {\\n    classCallCheck(this, PopoverElement);\\n    return possibleConstructorReturn(this, (PopoverElement.__proto__ || Object.getPrototypeOf(PopoverElement)).apply(this, arguments));\\n  }\\n\\n  createClass(PopoverElement, [{\\n    key: 'init',\\n    value: function init() {\\n      var _this2 = this;\\n\\n      contentReady(this, function () {\\n        _this2._compile();\\n        _this2._initAnimatorFactory();\\n        _this2.style.display = 'none';\\n      });\\n\\n      this._doorLock = new DoorLock();\\n      this._boundOnChange = this._onChange.bind(this);\\n      this._boundCancel = function () {\\n        return _this2._cancel();\\n      };\\n    }\\n  }, {\\n    key: '_initAnimatorFactory',\\n    value: function _initAnimatorFactory() {\\n      var factory = new AnimatorFactory({\\n        animators: _animatorDict$4,\\n        baseClass: PopoverAnimator,\\n        baseClassName: 'PopoverAnimator',\\n        defaultAnimation: this.getAttribute('animation') || 'default'\\n      });\\n      this._animator = function (options) {\\n        return factory.newAnimator(options);\\n      };\\n    }\\n  }, {\\n    key: '_positionPopover',\\n    value: function _positionPopover(target) {\\n      var radius = this._radius,\\n          contentElement = this._content,\\n          margin = this._margin;\\n\\n      var targetRect = target.getBoundingClientRect();\\n      var isMD = util.hasModifier(this, 'material');\\n      var cover = isMD && this.hasAttribute('cover-target');\\n\\n      var targetDistance = {\\n        top: targetRect.top - margin,\\n        left: targetRect.left - margin,\\n        right: window.innerWidth - targetRect.right - margin,\\n        bottom: window.innerHeight - targetRect.bottom - margin\\n      };\\n\\n      var targetCenterDistanceFrom = {\\n        top: targetRect.top + Math.round(targetRect.height / 2),\\n        bottom: window.innerHeight - targetRect.bottom + Math.round(targetRect.height / 2),\\n        left: targetRect.left + Math.round(targetRect.width / 2),\\n        right: window.innerWidth - targetRect.right + Math.round(targetRect.width / 2)\\n      };\\n\\n      var _calculateDirections2 = this._calculateDirections(targetDistance),\\n          vertical = _calculateDirections2.vertical,\\n          primaryDirection = _calculateDirections2.primary,\\n          secondary = _calculateDirections2.secondary;\\n\\n      ModifierUtil.addModifier(this, primaryDirection);\\n\\n      var sizeName = vertical ? 'width' : 'height';\\n      // Get .popover__content size\\n      var contentSize = function (style) {\\n        return {\\n          width: parseInt(style.getPropertyValue('width'), 10),\\n          height: parseInt(style.getPropertyValue('height'), 10)\\n        };\\n      }(window.getComputedStyle(contentElement));\\n\\n      // Setting .popover position.\\n      var offset = cover ? 0 : (vertical ? targetRect.height : targetRect.width) + (isMD ? 0 : 14);\\n      this._popover.style[primaryDirection] = Math.max(margin, targetDistance[primaryDirection] + offset + margin) + 'px';\\n      var secondaryOffset = Math.max(margin, margin + targetDistance[secondary] - (contentSize[sizeName] - targetRect[sizeName]) / 2);\\n      this._popover.style[secondary] = secondaryOffset + 'px';\\n\\n      // Setting .popover__arrow position.\\n      this._arrow.style[secondary] = Math.max(radius, targetCenterDistanceFrom[secondary] - secondaryOffset) + 'px';\\n    }\\n  }, {\\n    key: '_calculateDirections',\\n    value: function _calculateDirections(distance) {\\n      var options = (this.getAttribute('direction') || 'up down left right').split(/\\\\s+/).map(function (e) {\\n        return positions[e];\\n      });\\n      var primary = options.sort(function (a, b) {\\n        return distance[a] - distance[b];\\n      })[0];\\n      var vertical = 'top' == primary || 'bottom' == primary;\\n      var secondary = void 0;\\n\\n      if (vertical) {\\n        secondary = distance.left < distance.right ? 'left' : 'right';\\n      } else {\\n        secondary = distance.top < distance.bottom ? 'top' : 'bottom';\\n      }\\n\\n      return { vertical: vertical, primary: primary, secondary: secondary };\\n    }\\n  }, {\\n    key: '_clearStyles',\\n    value: function _clearStyles() {\\n      var _this3 = this;\\n\\n      ['top', 'bottom', 'left', 'right'].forEach(function (e) {\\n        _this3._arrow.style[e] = _this3._content.style[e] = _this3._popover.style[e] = '';\\n        ModifierUtil.removeModifier(_this3, e);\\n      });\\n    }\\n  }, {\\n    key: '_onChange',\\n    value: function _onChange() {\\n      var _this4 = this;\\n\\n      setImmediate(function () {\\n        if (_this4._currentTarget) {\\n          _this4._positionPopover(_this4._currentTarget);\\n        }\\n      });\\n    }\\n  }, {\\n    key: '_compile',\\n    value: function _compile() {\\n      autoStyle.prepare(this);\\n\\n      if (this._popover && this._mask) {\\n        return;\\n      }\\n\\n      var hasDefaultContainer = this._popover && this._content;\\n\\n      if (hasDefaultContainer) {\\n\\n        if (!this._mask) {\\n          var mask = document.createElement('div');\\n          mask.classList.add('popover-mask');\\n          this.insertBefore(mask, this.firstChild);\\n        }\\n\\n        if (!this._arrow) {\\n          var arrow = document.createElement('div');\\n          arrow.classList.add('popover__arrow');\\n          this._popover.appendChild(arrow);\\n        }\\n      } else {\\n\\n        var template = templateSource.cloneNode(true);\\n        var content = template.querySelector('.popover__content');\\n\\n        while (this.childNodes[0]) {\\n          content.appendChild(this.childNodes[0]);\\n        }\\n\\n        this.appendChild(template);\\n      }\\n\\n      // FIXME!\\n      if (this.hasAttribute('style')) {\\n        this._popover.setAttribute('style', this.getAttribute('style'));\\n        this.removeAttribute('style');\\n      }\\n\\n      // FIXME!\\n      if (this.hasAttribute('mask-color')) {\\n        this._mask.style.backgroundColor = this.getAttribute('mask-color');\\n      }\\n\\n      ModifierUtil.initModifier(this, scheme$14);\\n    }\\n  }, {\\n    key: '_prepareAnimationOptions',\\n    value: function _prepareAnimationOptions(options) {\\n      if (options.animation && !(options.animation in _animatorDict$4)) {\\n        throw new Error('Animator ' + options.animation + ' is not registered.');\\n      }\\n\\n      options.animationOptions = util.extend(AnimatorFactory.parseAnimationOptionsString(this.getAttribute('animation-options')), options.animationOptions || {});\\n    }\\n  }, {\\n    key: '_executeAction',\\n    value: function _executeAction(actions) {\\n      var _this5 = this;\\n\\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\\n\\n      var callback = options.callback;\\n      var action = actions.action,\\n          before = actions.before,\\n          after = actions.after;\\n\\n\\n      this._prepareAnimationOptions(options);\\n\\n      var canceled = false;\\n      util.triggerElementEvent(this, 'pre' + action, { // synchronous\\n        popover: this,\\n        cancel: function cancel() {\\n          return canceled = true;\\n        }\\n      });\\n\\n      if (canceled) {\\n        return Promise.reject('Canceled in pre' + action + ' event.');\\n      }\\n\\n      return new Promise(function (resolve) {\\n        _this5._doorLock.waitUnlock(function () {\\n          var unlock = _this5._doorLock.lock();\\n\\n          before && before();\\n\\n          contentReady(_this5, function () {\\n            _this5._animator(options)[action](_this5, function () {\\n              after && after();\\n\\n              unlock();\\n\\n              util.triggerElementEvent(_this5, 'post' + action, { popover: _this5 });\\n\\n              callback && callback();\\n              resolve(_this5);\\n            });\\n          });\\n        });\\n      });\\n    }\\n\\n    /**\\n     * @method show\\n     * @signature show(target, [options])\\n     * @param {String|Event|HTMLElement} target\\n     *   [en]Target element. Can be either a CSS selector, an event object or a DOM element. It can be also provided as 'options.target' instead. [/en]\\n     *   [ja]ポップオーバーのターゲットとなる要素を指定します。CSSセレクタかeventオブジェクトかDOM要素のいずれかを渡せます。[/ja]\\n     * @param {Object} [options]\\n     *   [en]Parameter object.[/en]\\n     *   [ja]オプションを指定するオブジェクト。[/ja]\\n     * @param {String} [options.animation]\\n     *   [en]Animation name.  Use one of `\\\"fade-ios\\\"`, `\\\"fade-md\\\"`, `\\\"none\\\"` and `\\\"default\\\"`.[/en]\\n     *   [ja]アニメーション名を指定します。\\\"fade-ios\\\", \\\"fade-md\\\", \\\"none\\\", \\\"default\\\"のいずれかを指定できます。[/ja]\\n     * @param {String} [options.animationOptions]\\n     *   [en]Specify the animation's duration, delay and timing. E.g. `{duration: 0.2, delay: 0.4, timing: 'ease-in'}`.[/en]\\n     *   [ja]アニメーション時のduration, delay, timingを指定します。e.g. {duration: 0.2, delay: 0.4, timing: 'ease-in'}[/ja]\\n     * @param {Function} [options.callback]\\n     *   [en]This function is called after the popover has been revealed.[/en]\\n     *   [ja]ポップオーバーが表示され終わった後に呼び出される関数オブジェクトを指定します。[/ja]\\n     * @description\\n     *   [en]Open the popover and point it at a target. The target can be either an event, a CSS selector or a DOM element..[/en]\\n     *   [ja]対象とする要素にポップオーバーを表示します。target引数には、$eventオブジェクトやDOMエレメントやCSSセレクタを渡すことが出来ます。[/ja]\\n     * @return {Promise}\\n     *   [en]Resolves to the displayed element[/en]\\n     *   [ja][/ja]\\n     */\\n\\n  }, {\\n    key: 'show',\\n    value: function show(target) {\\n      var _this6 = this;\\n\\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\\n\\n      // Accepts options.target\\n      if (target && (typeof target === 'undefined' ? 'undefined' : _typeof(target)) === 'object' && !(target instanceof Event) && !(target instanceof HTMLElement)) {\\n        options = target;\\n        target = options.target;\\n      }\\n\\n      if (typeof target === 'string') {\\n        target = document.querySelector(target);\\n      } else if (target instanceof Event) {\\n        target = target.target;\\n      }\\n\\n      if (typeof target === 'undefined') {\\n        throw new Error('A target argument must be defined for the popover.');\\n      }\\n\\n      if (!(target instanceof HTMLElement)) {\\n        throw new Error('Invalid target');\\n      }\\n\\n      return this._executeAction({\\n        action: 'show',\\n        before: function before() {\\n          _this6.style.display = 'block';\\n          _this6._currentTarget = target;\\n          _this6._positionPopover(target);\\n        }\\n      }, options);\\n    }\\n\\n    /**\\n     * @method hide\\n     * @signature hide([options])\\n     * @param {Object} [options]\\n     *   [en]Parameter object.[/en]\\n     *   [ja]オプションを指定するオブジェクト。[/ja]\\n     * @param {String} [options.animation]\\n     *   [en]Animation name.  Use one of `\\\"fade-ios\\\"`, `\\\"fade-md\\\"`, `\\\"none\\\"` and `\\\"default\\\"`.[/en]\\n     *   [ja]アニメーション名を指定します。\\\"fade-ios\\\", \\\"fade-md\\\", \\\"none\\\", \\\"default\\\"のいずれかを指定できます。[/ja]\\n     * @param {String} [options.animationOptions]\\n     *   [en]Specify the animation's duration, delay and timing. E.g. `{duration: 0.2, delay: 0.4, timing: 'ease-in'}`.[/en]\\n     *   [ja]アニメーション時のduration, delay, timingを指定します。e.g. {duration: 0.2, delay: 0.4, timing: 'ease-in'}[/ja]\\n     * @param {Function} [options.callback]\\n     *   [en]This functions is called after the popover has been hidden.[/en]\\n     *   [ja]ポップオーバーが隠れた後に呼び出される関数オブジェクトを指定します。[/ja]\\n     * @description\\n     *   [en]Close the popover.[/en]\\n     *   [ja]ポップオーバーを閉じます。[/ja]\\n     * @return {Promise}\\n     *   [en]Resolves to the hidden element[/en]\\n     *   [ja][/ja]\\n     */\\n\\n  }, {\\n    key: 'hide',\\n    value: function hide() {\\n      var _this7 = this;\\n\\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n\\n      return this._executeAction({\\n        action: 'hide',\\n        after: function after() {\\n          _this7.style.display = 'none';\\n          _this7._clearStyles();\\n        }\\n      }, options);\\n    }\\n\\n    /**\\n     * @property visible\\n     * @readonly\\n     * @type {Boolean}\\n     * @description\\n     *   [en]Whether the element is visible or not.[/en]\\n     *   [ja]要素が見える場合に`true`。[/ja]\\n     */\\n\\n  }, {\\n    key: 'connectedCallback',\\n    value: function connectedCallback() {\\n      var _this8 = this;\\n\\n      contentReady(this, function () {\\n        _this8._margin = _this8._margin || parseInt(window.getComputedStyle(_this8).getPropertyValue('top'));\\n\\n        // Fix for iframes\\n        if (!_this8._margin) {\\n          _this8._margin = 6;\\n        }\\n\\n        _this8._radius = parseInt(window.getComputedStyle(_this8._content).getPropertyValue('border-top-left-radius'));\\n\\n        _this8._mask.addEventListener('click', _this8._boundCancel, false);\\n\\n        _this8.onDeviceBackButton = function (e) {\\n          return _this8.cancelable ? _this8._cancel() : e.callParentHandler();\\n        };\\n\\n        window.addEventListener('resize', _this8._boundOnChange, false);\\n      });\\n    }\\n  }, {\\n    key: 'disconnectedCallback',\\n    value: function disconnectedCallback() {\\n      var _this9 = this;\\n\\n      contentReady(this, function () {\\n        _this9._mask.removeEventListener('click', _this9._boundCancel, false);\\n\\n        _this9._backButtonHandler.destroy();\\n        _this9._backButtonHandler = null;\\n\\n        window.removeEventListener('resize', _this9._boundOnChange, false);\\n      });\\n    }\\n  }, {\\n    key: 'attributeChangedCallback',\\n    value: function attributeChangedCallback(name, last, current) {\\n      switch (name) {\\n        case 'modifier':\\n          ModifierUtil.onModifierChanged(last, current, this, scheme$14);\\n          break;\\n        case 'direction':\\n          this._boundOnChange();\\n          break;\\n        case 'animation':\\n          this._initAnimatorFactory();\\n          break;\\n      }\\n    }\\n  }, {\\n    key: '_cancel',\\n    value: function _cancel() {\\n      var _this10 = this;\\n\\n      if (this.cancelable) {\\n        this.hide({\\n          callback: function callback() {\\n            util.triggerElementEvent(_this10, 'dialog-cancel');\\n          }\\n        });\\n      }\\n    }\\n  }, {\\n    key: '_mask',\\n\\n\\n    /**\\n     * @event preshow\\n     * @description\\n     *   [en]Fired just before the popover is displayed.[/en]\\n     *   [ja]ポップオーバーが表示される直前に発火します。[/ja]\\n     * @param {Object} event [en]Event object.[/en]\\n     * @param {Object} event.popover\\n     *   [en]Component object.[/en]\\n     *   [ja]コンポーネントのオブジェクト。[/ja]\\n     * @param {Function} event.cancel\\n     *   [en]Call this function to stop the popover from being shown.[/en]\\n     *   [ja]この関数を呼び出すと、ポップオーバーの表示がキャンセルされます。[/ja]\\n     */\\n\\n    /**\\n     * @event postshow\\n     * @description\\n     *   [en]Fired just after the popover is displayed.[/en]\\n     *   [ja]ポップオーバーが表示された直後に発火します。[/ja]\\n     * @param {Object} event [en]Event object.[/en]\\n     * @param {Object} event.popover\\n     *   [en]Component object.[/en]\\n     *   [ja]コンポーネントのオブジェクト。[/ja]\\n     */\\n\\n    /**\\n     * @event prehide\\n     * @description\\n     *   [en]Fired just before the popover is hidden.[/en]\\n     *   [ja]ポップオーバーが隠れる直前に発火します。[/ja]\\n     * @param {Object} event [en]Event object.[/en]\\n     * @param {Object} event.popover\\n     *   [en]Component object.[/en]\\n     *   [ja]コンポーネントのオブジェクト。[/ja]\\n     * @param {Function} event.cancel\\n     *   [en]Call this function to stop the popover from being hidden.[/en]\\n     *   [ja]この関数を呼び出すと、ポップオーバーが隠れる処理をキャンセルします。[/ja]\\n     */\\n\\n    /**\\n     * @event posthide\\n     * @description\\n     *   [en]Fired just after the popover is hidden.[/en]\\n     *   [ja]ポップオーバーが隠れた後に発火します。[/ja]\\n     * @param {Object} event [en]Event object.[/en]\\n     * @param {Object} event.popover\\n     *   [en]Component object.[/en]\\n     *   [ja]コンポーネントのオブジェクト。[/ja]\\n     */\\n\\n    /**\\n     * @attribute modifier\\n     * @type {String}\\n     * @description\\n     *  [en]The appearance of the popover.[/en]\\n     *  [ja]ポップオーバーの表現を指定します。[/ja]\\n     */\\n\\n    /**\\n     * @attribute direction\\n     * @type {String}\\n     * @description\\n     *  [en]\\n     *    A space separated list of directions. If more than one direction is specified,\\n     *    it will be chosen automatically. Valid directions are `\\\"up\\\"`, `\\\"down\\\"`, `\\\"left\\\"` and `\\\"right\\\"`.\\n     *  [/en]\\n     *  [ja]\\n     *    ポップオーバーを表示する方向を空白区切りで複数指定できます。\\n     *    指定できる方向は、\\\"up\\\", \\\"down\\\", \\\"left\\\", \\\"right\\\"の4つです。空白区切りで複数指定することもできます。\\n     *    複数指定された場合、対象とする要素に合わせて指定した値から自動的に選択されます。\\n     *  [/ja]\\n     */\\n\\n    /**\\n     * @attribute cancelable\\n     * @description\\n     *   [en]If this attribute is set the popover can be closed by tapping the background or by pressing the back button.[/en]\\n     *   [ja]この属性があると、ポップオーバーが表示された時に、背景やバックボタンをタップした時にをポップオーバー閉じます。[/ja]\\n     */\\n\\n    /**\\n     * @attribute cover-target\\n     * @description\\n     *   [en]If set the popover will cover the target on the screen.[/en]\\n     *   [ja][/ja]\\n     */\\n\\n    /**\\n     * @attribute animation\\n     * @type {String}\\n     * @description\\n     *   [en]The animation used when showing an hiding the popover. Can be either `\\\"none\\\"`, `\\\"default\\\"`, `\\\"fade-ios\\\"` or `\\\"fade-md\\\"`.[/en]\\n     *   [ja]ポップオーバーを表示する際のアニメーション名を指定します。[/ja]\\n     */\\n\\n    /**\\n     * @attribute animation-options\\n     * @type {Expression}\\n     * @description\\n     *  [en]Specify the animation's duration, timing and delay with an object literal. E.g. `{duration: 0.2, delay: 1, timing: 'ease-in'}`.[/en]\\n     *  [ja]アニメーション時のduration, timing, delayをオブジェクトリテラルで指定します。e.g. {duration: 0.2, delay: 1, timing: 'ease-in'}[/ja]\\n     */\\n\\n    /**\\n     * @attribute mask-color\\n     * @type {Color}\\n     * @description\\n     *   [en]Color of the background mask. Default is `\\\"rgba(0, 0, 0, 0.2)\\\"`.[/en]\\n     *   [ja]背景のマスクの色を指定します。デフォルトは\\\"rgba(0, 0, 0, 0.2)\\\"です。[/ja]\\n     */\\n\\n    get: function get() {\\n      return util.findChild(this, '.popover-mask');\\n    }\\n  }, {\\n    key: '_popover',\\n    get: function get() {\\n      return util.findChild(this, '.popover');\\n    }\\n  }, {\\n    key: '_content',\\n    get: function get() {\\n      return util.findChild(this._popover, '.popover__content');\\n    }\\n  }, {\\n    key: '_arrow',\\n    get: function get() {\\n      return util.findChild(this._popover, '.popover__arrow');\\n    }\\n  }, {\\n    key: 'visible',\\n    get: function get() {\\n      return window.getComputedStyle(this).getPropertyValue('display') !== 'none';\\n    }\\n\\n    /**\\n     * @property cancelable\\n     * @type {Boolean}\\n     * @description\\n     *   [en]\\n     *     A boolean value that specifies whether the popover is cancelable or not.\\n     *\\n     *     When the popover is cancelable it can be closed by tapping the background or by pressing the back button on Android devices.\\n     *   [/en]\\n     *   [ja][/ja]\\n     */\\n\\n  }, {\\n    key: 'cancelable',\\n    set: function set(value) {\\n      return util.toggleAttribute(this, 'cancelable', value);\\n    },\\n    get: function get() {\\n      return this.hasAttribute('cancelable');\\n    }\\n\\n    /**\\n     * @property onDeviceBackButton\\n     * @type {Object}\\n     * @description\\n     *   [en]Back-button handler.[/en]\\n     *   [ja]バックボタンハンドラ。[/ja]\\n     */\\n\\n  }, {\\n    key: 'onDeviceBackButton',\\n    get: function get() {\\n      return this._backButtonHandler;\\n    },\\n    set: function set(callback) {\\n      if (this._backButtonHandler) {\\n        this._backButtonHandler.destroy();\\n      }\\n\\n      this._backButtonHandler = deviceBackButtonDispatcher.createHandler(this._popover, callback);\\n    }\\n  }], [{\\n    key: 'registerAnimator',\\n\\n\\n    /**\\n     * @param {String} name\\n     * @param {PopoverAnimator} Animator\\n     */\\n    value: function registerAnimator(name, Animator) {\\n      if (!(Animator.prototype instanceof PopoverAnimator)) {\\n        throw new Error('\\\"Animator\\\" param must inherit PopoverAnimator');\\n      }\\n      _animatorDict$4[name] = Animator;\\n    }\\n  }, {\\n    key: 'observedAttributes',\\n    get: function get() {\\n      return ['modifier', 'direction', 'animation'];\\n    }\\n  }, {\\n    key: 'events',\\n    get: function get() {\\n      return ['preshow', 'postshow', 'prehide', 'posthide', 'dialog-cancel'];\\n    }\\n  }, {\\n    key: 'animators',\\n    get: function get() {\\n      return _animatorDict$4;\\n    }\\n  }, {\\n    key: 'PopoverAnimator',\\n    get: function get() {\\n      return PopoverAnimator;\\n    }\\n  }]);\\n  return PopoverElement;\\n}(BaseElement);\\n\\ncustomElements.define('ons-popover', PopoverElement);\\n\\n/*\\nCopyright 2013-2015 ASIAL CORPORATION\\n\\nLicensed under the Apache License, Version 2.0 (the \\\"License\\\");\\nyou may not use this file except in compliance with the License.\\nYou may obtain a copy of the License at\\n\\n   http://www.apache.org/licenses/LICENSE-2.0\\n\\nUnless required by applicable law or agreed to in writing, software\\ndistributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\nSee the License for the specific language governing permissions and\\nlimitations under the License.\\n\\n*/\\n\\nvar scheme$15 = {\\n  '.progress-bar': 'progress-bar--*',\\n  '.progress-bar__primary': 'progress-bar--*__primary',\\n  '.progress-bar__secondary': 'progress-bar--*__secondary'\\n};\\n\\nvar template = util.createElement('\\\\n  <div class=\\\"progress-bar\\\">\\\\n    <div class=\\\"progress-bar__secondary\\\"></div>\\\\n    <div class=\\\"progress-bar__primary\\\"></div>\\\\n  </div>\\\\n');\\n\\n/**\\n * @element ons-progress-bar\\n * @category visual\\n * @description\\n *   [en]\\n *     The component is used to display a linear progress bar. It can either display a progress bar that shows the user how much of a task has been completed. In the case where the percentage is not known it can be used to display an animated progress bar so the user can see that an operation is in progress.\\n *   [/en]\\n *   [ja][/ja]\\n * @codepen zvQbGj\\n * @tutorial vanilla/Reference/progress\\n * @seealso ons-progress-circular\\n *   [en]The `<ons-progress-circular>` component displays a circular progress indicator.[/en]\\n *   [ja][/ja]\\n * @example\\n * <ons-progress-bar\\n *  value=\\\"55\\\"\\n *  secondary-value=\\\"87\\\">\\n * </ons-progress-bar>\\n *\\n * <ons-progress-bar\\n *  indeterminate>\\n * </ons-progress-bar>\\n */\\n\\nvar ProgressBarElement = function (_BaseElement) {\\n  inherits(ProgressBarElement, _BaseElement);\\n\\n  function ProgressBarElement() {\\n    classCallCheck(this, ProgressBarElement);\\n    return possibleConstructorReturn(this, (ProgressBarElement.__proto__ || Object.getPrototypeOf(ProgressBarElement)).apply(this, arguments));\\n  }\\n\\n  createClass(ProgressBarElement, [{\\n    key: 'init',\\n\\n\\n    /**\\n     * @attribute modifier\\n     * @type {String}\\n     * @description\\n     *   [en]Change the appearance of the progress indicator.[/en]\\n     *   [ja]プログレスインジケータの見た目を変更します。[/ja]\\n     */\\n\\n    /**\\n     * @attribute value\\n     * @type {Number}\\n     * @description\\n     *   [en]Current progress. Should be a value between 0 and 100.[/en]\\n     *   [ja]現在の進行状況の値を指定します。0から100の間の値を指定して下さい。[/ja]\\n     */\\n\\n    /**\\n     * @attribute secondary-value\\n     * @type {Number}\\n     * @description\\n     *   [en]Current secondary progress. Should be a value between 0 and 100.[/en]\\n     *   [ja]現在の２番目の進行状況の値を指定します。0から100の間の値を指定して下さい。[/ja]\\n     */\\n\\n    /**\\n     * @attribute indeterminate\\n     * @description\\n     *   [en]If this attribute is set, an infinite looping animation will be shown.[/en]\\n     *   [ja]この属性が設定された場合、ループするアニメーションが表示されます。[/ja]\\n     */\\n\\n    value: function init() {\\n      var _this2 = this;\\n\\n      contentReady(this, function () {\\n        return _this2._compile();\\n      });\\n    }\\n  }, {\\n    key: '_compile',\\n    value: function _compile() {\\n      if (!this._isCompiled()) {\\n        this._template = template.cloneNode(true);\\n      } else {\\n        this._template = util.findChild(this, '.progress-bar');\\n      }\\n\\n      this._primary = util.findChild(this._template, '.progress-bar__primary');\\n      this._secondary = util.findChild(this._template, '.progress-bar__secondary');\\n\\n      this._updateDeterminate();\\n      this._updateValue();\\n\\n      this.appendChild(this._template);\\n\\n      ModifierUtil.initModifier(this, scheme$15);\\n    }\\n  }, {\\n    key: '_isCompiled',\\n    value: function _isCompiled() {\\n      if (!util.findChild(this, '.progress-bar')) {\\n        return false;\\n      }\\n\\n      var barElement = util.findChild(this, '.progress-bar');\\n\\n      if (!util.findChild(barElement, '.progress-bar__secondary')) {\\n        return false;\\n      }\\n\\n      if (!util.findChild(barElement, '.progress-bar__primary')) {\\n        return false;\\n      }\\n\\n      return true;\\n    }\\n  }, {\\n    key: 'attributeChangedCallback',\\n    value: function attributeChangedCallback(name, last, current) {\\n      if (name === 'modifier') {\\n        return ModifierUtil.onModifierChanged(last, current, this, scheme$15);\\n      } else if (name === 'value' || name === 'secondary-value') {\\n        this._updateValue();\\n      } else if (name === 'indeterminate') {\\n        this._updateDeterminate();\\n      }\\n    }\\n  }, {\\n    key: '_updateDeterminate',\\n    value: function _updateDeterminate() {\\n      var _this3 = this;\\n\\n      if (this.hasAttribute('indeterminate')) {\\n        contentReady(this, function () {\\n          _this3._template.classList.add('progress-bar--indeterminate');\\n          _this3._template.classList.remove('progress-bar--determinate');\\n        });\\n      } else {\\n        contentReady(this, function () {\\n          _this3._template.classList.add('progress-bar--determinate');\\n          _this3._template.classList.remove('progress-bar--indeterminate');\\n        });\\n      }\\n    }\\n  }, {\\n    key: '_updateValue',\\n    value: function _updateValue() {\\n      var _this4 = this;\\n\\n      contentReady(this, function () {\\n        _this4._primary.style.width = _this4.hasAttribute('value') ? _this4.getAttribute('value') + '%' : '0%';\\n        _this4._secondary.style.width = _this4.hasAttribute('secondary-value') ? _this4.getAttribute('secondary-value') + '%' : '0%';\\n      });\\n    }\\n\\n    /**\\n     * @property value\\n     * @type {Number}\\n     * @description\\n     *   [en]Current progress. Should be a value between 0 and 100.[/en]\\n     *   [ja]現在の進行状況の値を指定します。0から100の間の値を指定して下さい。[/ja]\\n     */\\n\\n  }, {\\n    key: 'value',\\n    set: function set(value) {\\n      if (typeof value !== 'number' || value < 0 || value > 100) {\\n        throw new Error('Invalid value');\\n      }\\n\\n      this.setAttribute('value', Math.floor(value));\\n    },\\n    get: function get() {\\n      return parseInt(this.getAttribute('value') || '0');\\n    }\\n\\n    /**\\n     * @property secondaryValue\\n     * @type {Number}\\n     * @description\\n     *   [en]Current secondary progress. Should be a value between 0 and 100.[/en]\\n     *   [ja]現在の２番目の進行状況の値を指定します。0から100の間の値を指定して下さい。[/ja]\\n     */\\n\\n  }, {\\n    key: 'secondaryValue',\\n    set: function set(value) {\\n      if (typeof value !== 'number' || value < 0 || value > 100) {\\n        throw new Error('Invalid value');\\n      }\\n\\n      this.setAttribute('secondary-value', Math.floor(value));\\n    },\\n    get: function get() {\\n      return parseInt(this.getAttribute('secondary-value') || '0');\\n    }\\n\\n    /**\\n     * @property indeterminate\\n     * @type {Boolean}\\n     * @description\\n     *   [en]If this property is `true`, an infinite looping animation will be shown.[/en]\\n     *   [ja]この属性が設定された場合、ループするアニメーションが表示されます。[/ja]\\n     */\\n\\n  }, {\\n    key: 'indeterminate',\\n    set: function set(value) {\\n      if (value) {\\n        this.setAttribute('indeterminate', '');\\n      } else {\\n        this.removeAttribute('indeterminate');\\n      }\\n    },\\n    get: function get() {\\n      return this.hasAttribute('indeterminate');\\n    }\\n  }], [{\\n    key: 'observedAttributes',\\n    get: function get() {\\n      return ['modifier', 'value', 'secondary-value', 'indeterminate'];\\n    }\\n  }]);\\n  return ProgressBarElement;\\n}(BaseElement);\\n\\ncustomElements.define('ons-progress-bar', ProgressBarElement);\\n\\n/*\\nCopyright 2013-2015 ASIAL CORPORATION\\n\\nLicensed under the Apache License, Version 2.0 (the \\\"License\\\");\\nyou may not use this file except in compliance with the License.\\nYou may obtain a copy of the License at\\n\\n   http://www.apache.org/licenses/LICENSE-2.0\\n\\nUnless required by applicable law or agreed to in writing, software\\ndistributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\nSee the License for the specific language governing permissions and\\nlimitations under the License.\\n\\n*/\\n\\nvar scheme$16 = {\\n  '.progress-circular': 'progress-circular--*',\\n  '.progress-circular__primary': 'progress-circular--*__primary',\\n  '.progress-circular__secondary': 'progress-circular--*__secondary'\\n};\\n\\nvar template$1 = util.createElement('\\\\n  <svg class=\\\"progress-circular\\\">\\\\n    <circle class=\\\"progress-circular__secondary\\\" />\\\\n    <circle class=\\\"progress-circular__primary\\\" />\\\\n  </svg>\\\\n');\\n\\n/**\\n * @element ons-progress-circular\\n * @category visual\\n * @description\\n *   [en]\\n *     This component displays a circular progress indicator. It can either be used to show how much of a task has been completed or to show a looping animation to indicate that an operation is currently running.\\n *   [/en]\\n *   [ja][/ja]\\n * @codepen EVzMjR\\n * @tutorial vanilla/Reference/progress\\n * @seealso ons-progress-bar\\n *   [en]The `<ons-progress-bar>` component displays a bar progress indicator.[/en]\\n *   [ja][/ja]\\n * @example\\n * <ons-progress-circular\\n *  value=\\\"55\\\"\\n *  secondary-value=\\\"87\\\">\\n * </ons-progress-circular>\\n *\\n * <ons-progress-circular\\n *  indeterminate>\\n * </ons-progress-circular>\\n */\\n\\nvar ProgressCircularElement = function (_BaseElement) {\\n  inherits(ProgressCircularElement, _BaseElement);\\n\\n  function ProgressCircularElement() {\\n    classCallCheck(this, ProgressCircularElement);\\n    return possibleConstructorReturn(this, (ProgressCircularElement.__proto__ || Object.getPrototypeOf(ProgressCircularElement)).apply(this, arguments));\\n  }\\n\\n  createClass(ProgressCircularElement, [{\\n    key: 'init',\\n\\n\\n    /**\\n     * @attribute modifier\\n     * @type {String}\\n     * @description\\n     *   [en]Change the appearance of the progress indicator.[/en]\\n     *   [ja]プログレスインジケータの見た目を変更します。[/ja]\\n     */\\n\\n    /**\\n     * @attribute value\\n     * @type {Number}\\n     * @description\\n     *   [en]Current progress. Should be a value between 0 and 100.[/en]\\n     *   [ja]現在の進行状況の値を指定します。0から100の間の値を指定して下さい。[/ja]\\n     */\\n\\n    /**\\n     * @attribute secondary-value\\n     * @type {Number}\\n     * @description\\n     *   [en]Current secondary progress. Should be a value between 0 and 100.[/en]\\n     *   [ja]現在の２番目の進行状況の値を指定します。0から100の間の値を指定して下さい。[/ja]\\n     */\\n\\n    /**\\n     * @attribute indeterminate\\n     * @description\\n     *   [en]If this attribute is set, an infinite looping animation will be shown.[/en]\\n     *   [ja]この属性が設定された場合、ループするアニメーションが表示されます。[/ja]\\n     */\\n\\n    value: function init() {\\n      var _this2 = this;\\n\\n      contentReady(this, function () {\\n        return _this2._compile();\\n      });\\n    }\\n  }, {\\n    key: 'attributeChangedCallback',\\n    value: function attributeChangedCallback(name, last, current) {\\n      if (name === 'modifier') {\\n        return ModifierUtil.onModifierChanged(last, current, this, scheme$16);\\n      } else if (name === 'value' || name === 'secondary-value') {\\n        this._updateValue();\\n      } else if (name === 'indeterminate') {\\n        this._updateDeterminate();\\n      }\\n    }\\n  }, {\\n    key: '_updateDeterminate',\\n    value: function _updateDeterminate() {\\n      var _this3 = this;\\n\\n      if (this.hasAttribute('indeterminate')) {\\n        contentReady(this, function () {\\n          ModifierUtil.addModifier(_this3, 'indeterminate');\\n        });\\n      } else {\\n        contentReady(this, function () {\\n          ModifierUtil.removeModifier(_this3, 'indeterminate');\\n        });\\n      }\\n    }\\n  }, {\\n    key: '_updateValue',\\n    value: function _updateValue() {\\n      var _this4 = this;\\n\\n      if (this.hasAttribute('value')) {\\n        contentReady(this, function () {\\n          var per = Math.ceil(_this4.getAttribute('value') * 251.32 * 0.01);\\n          _this4._primary.style['stroke-dasharray'] = per + '%, 251.32%';\\n        });\\n      }\\n      if (this.hasAttribute('secondary-value')) {\\n        contentReady(this, function () {\\n          var per = Math.ceil(_this4.getAttribute('secondary-value') * 251.32 * 0.01);\\n          _this4._secondary.style.display = null;\\n          _this4._secondary.style['stroke-dasharray'] = per + '%, 251.32%';\\n        });\\n      } else {\\n        contentReady(this, function () {\\n          _this4._secondary.style.display = 'none';\\n        });\\n      }\\n    }\\n\\n    /**\\n     * @property value\\n     * @type {Number}\\n     * @description\\n     *   [en]Current progress. Should be a value between 0 and 100.[/en]\\n     *   [ja]現在の進行状況の値を指定します。0から100の間の値を指定して下さい。[/ja]\\n     */\\n\\n  }, {\\n    key: '_compile',\\n    value: function _compile() {\\n      if (this._isCompiled()) {\\n        this._template = util.findChild(this, '.progress-circular');\\n      } else {\\n        this._template = template$1.cloneNode(true);\\n      }\\n\\n      this._primary = util.findChild(this._template, '.progress-circular__primary');\\n      this._secondary = util.findChild(this._template, '.progress-circular__secondary');\\n\\n      this._updateDeterminate();\\n      this._updateValue();\\n\\n      this.appendChild(this._template);\\n\\n      ModifierUtil.initModifier(this, scheme$16);\\n    }\\n  }, {\\n    key: '_isCompiled',\\n    value: function _isCompiled() {\\n      if (!util.findChild(this, '.progress-circular')) {\\n        return false;\\n      }\\n\\n      var svg = util.findChild(this, '.progress-circular');\\n\\n      if (!util.findChild(svg, '.progress-circular__secondary')) {\\n        return false;\\n      }\\n\\n      if (!util.findChild(svg, '.progress-circular__primary')) {\\n        return false;\\n      }\\n\\n      return true;\\n    }\\n  }, {\\n    key: 'value',\\n    set: function set(value) {\\n      if (typeof value !== 'number' || value < 0 || value > 100) {\\n        throw new Error('Invalid value');\\n      }\\n\\n      this.setAttribute('value', Math.floor(value));\\n    },\\n    get: function get() {\\n      return parseInt(this.getAttribute('value') || '0');\\n    }\\n\\n    /**\\n     * @property secondaryValue\\n     * @type {Number}\\n     * @description\\n     *   [en]Current secondary progress. Should be a value between 0 and 100.[/en]\\n     *   [ja]現在の２番目の進行状況の値を指定します。0から100の間の値を指定して下さい。[/ja]\\n     */\\n\\n  }, {\\n    key: 'secondaryValue',\\n    set: function set(value) {\\n      if (typeof value !== 'number' || value < 0 || value > 100) {\\n        throw new Error('Invalid value');\\n      }\\n\\n      this.setAttribute('secondary-value', Math.floor(value));\\n    },\\n    get: function get() {\\n      return parseInt(this.getAttribute('secondary-value') || '0');\\n    }\\n\\n    /**\\n     * @property indeterminate\\n     * @type {Boolean}\\n     * @description\\n     *   [en]If this property is `true`, an infinite looping animation will be shown.[/en]\\n     *   [ja]この属性が設定された場合、ループするアニメーションが表示されます。[/ja]\\n     */\\n\\n  }, {\\n    key: 'indeterminate',\\n    set: function set(value) {\\n      if (value) {\\n        this.setAttribute('indeterminate', '');\\n      } else {\\n        this.removeAttribute('indeterminate');\\n      }\\n    },\\n    get: function get() {\\n      return this.hasAttribute('indeterminate');\\n    }\\n  }], [{\\n    key: 'observedAttributes',\\n    get: function get() {\\n      return ['modifier', 'value', 'secondary-value', 'indeterminate'];\\n    }\\n  }]);\\n  return ProgressCircularElement;\\n}(BaseElement);\\n\\ncustomElements.define('ons-progress-circular', ProgressCircularElement);\\n\\n/*\\nCopyright 2013-2015 ASIAL CORPORATION\\n\\nLicensed under the Apache License, Version 2.0 (the \\\"License\\\");\\nyou may not use this file except in compliance with the License.\\nYou may obtain a copy of the License at\\n\\n   http://www.apache.org/licenses/LICENSE-2.0\\n\\nUnless required by applicable law or agreed to in writing, software\\ndistributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\nSee the License for the specific language governing permissions and\\nlimitations under the License.\\n\\n*/\\n\\nvar STATE_INITIAL = 'initial';\\nvar STATE_PREACTION = 'preaction';\\nvar STATE_ACTION = 'action';\\n\\nvar removeTransform = function removeTransform(el) {\\n  el.style.transform = '';\\n  el.style.WebkitTransform = '';\\n  el.style.transition = '';\\n  el.style.WebkitTransition = '';\\n};\\n\\n/**\\n * @element ons-pull-hook\\n * @category control\\n * @description\\n *   [en]\\n *     Component that adds **Pull to refresh** functionality to an `<ons-page>` element.\\n *\\n *     It can be used to perform a task when the user pulls down at the top of the page. A common usage is to refresh the data displayed in a page.\\n *   [/en]\\n *   [ja][/ja]\\n * @codepen WbJogM\\n * @tutorial vanilla/Reference/pull-hook\\n * @example\\n * <ons-page>\\n *   <ons-pull-hook>\\n *     Release to refresh\\n *   </ons-pull-hook>\\n * </ons-page>\\n *\\n * <script>\\n *   document.querySelector('ons-pull-hook').onAction = function(done) {\\n *     setTimeout(done, 1000);\\n *   };\\n * </script>\\n */\\n\\nvar PullHookElement = function (_BaseElement) {\\n  inherits(PullHookElement, _BaseElement);\\n\\n  function PullHookElement() {\\n    classCallCheck(this, PullHookElement);\\n    return possibleConstructorReturn(this, (PullHookElement.__proto__ || Object.getPrototypeOf(PullHookElement)).apply(this, arguments));\\n  }\\n\\n  createClass(PullHookElement, [{\\n    key: 'init',\\n\\n\\n    /**\\n     * @event changestate\\n     * @description\\n     *   [en]Fired when the state is changed. The state can be either \\\"initial\\\", \\\"preaction\\\" or \\\"action\\\".[/en]\\n     *   [ja]コンポーネントの状態が変わった場合に発火します。状態は、\\\"initial\\\", \\\"preaction\\\", \\\"action\\\"のいずれかです。[/ja]\\n     * @param {Object} event\\n     *   [en]Event object.[/en]\\n     *   [ja]イベントオブジェクト。[/ja]\\n     * @param {Object} event.pullHook\\n     *   [en]Component object.[/en]\\n     *   [ja]コンポーネントのオブジェクト。[/ja]\\n     * @param {String} event.state\\n     *   [en]Current state.[/en]\\n     *   [ja]現在の状態名を参照できます。[/ja]\\n     */\\n\\n    /**\\n     * @attribute disabled\\n     * @description\\n     *   [en]If this attribute is set the \\\"pull-to-refresh\\\" functionality is disabled.[/en]\\n     *   [ja]この属性がある時、disabled状態になりアクションが実行されなくなります[/ja]\\n     */\\n\\n    /**\\n     * @attribute height\\n     * @type {String}\\n     * @description\\n     *   [en]Specify the height of the component. When pulled down further than this value it will switch to the \\\"preaction\\\" state. The default value is \\\"64px\\\".[/en]\\n     *   [ja]コンポーネントの高さを指定します。この高さ以上にpull downすると\\\"preaction\\\"状態に移行します。デフォルトの値は\\\"64px\\\"です。[/ja]\\n     */\\n\\n    /**\\n     * @attribute threshold-height\\n     * @type {String}\\n     * @description\\n     *   [en]Specify the threshold height. The component automatically switches to the \\\"action\\\" state when pulled further than this value. The default value is \\\"96px\\\". A negative value or a value less than the height will disable this property.[/en]\\n     *   [ja]閾値となる高さを指定します。この値で指定した高さよりもpull downすると、このコンポーネントは自動的に\\\"action\\\"状態に移行します。[/ja]\\n     */\\n\\n    /**\\n     * @attribute fixed-content\\n     * @description\\n     *   [en]If this attribute is set the content of the page will not move when pulling.[/en]\\n     *   [ja]この属性がある時、プルフックが引き出されている時にもコンテンツは動きません。[/ja]\\n     */\\n\\n    value: function init() {\\n      this._boundOnDrag = this._onDrag.bind(this);\\n      this._boundOnDragStart = this._onDragStart.bind(this);\\n      this._boundOnDragEnd = this._onDragEnd.bind(this);\\n      this._boundOnScroll = this._onScroll.bind(this);\\n\\n      this._setState(STATE_INITIAL, true);\\n      this._hide(); // Fix for transparent toolbar transitions\\n    }\\n  }, {\\n    key: '_setStyle',\\n    value: function _setStyle() {\\n      var height = this.height;\\n\\n      this.style.height = height + 'px';\\n      this.style.lineHeight = height + 'px';\\n      this.style.marginTop = '-1px';\\n      this._pageElement.style.marginTop = '-' + height + 'px';\\n    }\\n  }, {\\n    key: '_onScroll',\\n    value: function _onScroll(event) {\\n      var element = this._pageElement;\\n\\n      if (element.scrollTop < 0) {\\n        element.scrollTop = 0;\\n      }\\n    }\\n  }, {\\n    key: '_generateTranslationTransform',\\n    value: function _generateTranslationTransform(scroll) {\\n      return 'translate3d(0px, ' + scroll + 'px, 0px)';\\n    }\\n  }, {\\n    key: '_onDrag',\\n    value: function _onDrag(event) {\\n      var _this2 = this;\\n\\n      if (this.disabled) {\\n        return;\\n      }\\n\\n      // Hack to make it work on Android 4.4 WebView. Scrolls manually near the top of the page so\\n      // there will be no inertial scroll when scrolling down. Allowing default scrolling will\\n      // kill all 'touchmove' events.\\n      if (platform.isAndroid()) {\\n        var element = this._pageElement;\\n        element.scrollTop = this._startScroll - event.gesture.deltaY;\\n        if (element.scrollTop < window.innerHeight && event.gesture.direction !== 'up') {\\n          event.gesture.preventDefault();\\n        }\\n      }\\n\\n      if (this._currentTranslation === 0 && this._getCurrentScroll() === 0) {\\n        this._transitionDragLength = event.gesture.deltaY;\\n\\n        var direction = event.gesture.interimDirection;\\n        if (direction === 'down') {\\n          this._transitionDragLength -= 1;\\n        } else {\\n          this._transitionDragLength += 1;\\n        }\\n      }\\n\\n      var scroll = Math.max(event.gesture.deltaY - this._startScroll, 0);\\n\\n      if (this._thresholdHeightEnabled() && scroll >= this.thresholdHeight) {\\n        event.gesture.stopDetect();\\n\\n        setImmediate(function () {\\n          return _this2._finish();\\n        });\\n      } else if (scroll >= this.height) {\\n        this._setState(STATE_PREACTION);\\n      } else {\\n        this._setState(STATE_INITIAL);\\n      }\\n\\n      // By stopping propagation only of `dragup` and `dragdown`,\\n      // allowing ancestor elements to detect `dragleft` and `dragright`.\\n      // If we comment out the following `if` block, `ons-splitter` with `ons-pull-hook` will be broken.\\n      if (event.gesture.direction === 'up' || event.gesture.direction === 'down') {\\n        event.stopPropagation();\\n      }\\n      this._translateTo(scroll);\\n    }\\n  }, {\\n    key: '_onDragStart',\\n    value: function _onDragStart(event) {\\n      if (this.disabled) {\\n        return;\\n      }\\n\\n      this._startScroll = this._getCurrentScroll();\\n    }\\n  }, {\\n    key: '_onDragEnd',\\n    value: function _onDragEnd(event) {\\n      if (this.disabled) {\\n        return;\\n      }\\n\\n      if (this._currentTranslation > 0) {\\n        var scroll = this._currentTranslation;\\n\\n        if (scroll > this.height) {\\n          this._finish();\\n        } else {\\n          this._translateTo(0, { animate: true });\\n        }\\n      }\\n    }\\n\\n    /**\\n     * @property onAction\\n     * @type {Function}\\n     * @description\\n     *   [en]This will be called in the `action` state if it exists. The function will be given a `done` callback as it's first argument.[/en]\\n     *   [ja][/ja]\\n     */\\n\\n  }, {\\n    key: '_finish',\\n    value: function _finish() {\\n      var _this3 = this;\\n\\n      this._setState(STATE_ACTION);\\n      this._translateTo(this.height, { animate: true });\\n      var action = this.onAction || function (done) {\\n        return done();\\n      };\\n      action(function () {\\n        _this3._translateTo(0, { animate: true });\\n        _this3._setState(STATE_INITIAL);\\n      });\\n    }\\n\\n    /**\\n     * @property height\\n     * @type {Number}\\n     * @description\\n     *   [en]The height of the pull hook in pixels. The default value is `64px`.[/en]\\n     *   [ja][/ja]\\n     */\\n\\n  }, {\\n    key: '_thresholdHeightEnabled',\\n    value: function _thresholdHeightEnabled() {\\n      var th = this.thresholdHeight;\\n      return th > 0 && th >= this.height;\\n    }\\n  }, {\\n    key: '_setState',\\n    value: function _setState(state, noEvent) {\\n      var lastState = this._getState();\\n\\n      this.setAttribute('state', state);\\n\\n      if (!noEvent && lastState !== this._getState()) {\\n        util.triggerElementEvent(this, 'changestate', {\\n          pullHook: this,\\n          state: state,\\n          lastState: lastState\\n        });\\n      }\\n    }\\n  }, {\\n    key: '_getState',\\n    value: function _getState() {\\n      return this.getAttribute('state');\\n    }\\n\\n    /**\\n     * @property state\\n     * @readonly\\n     * @type {String}\\n     * @description\\n     *   [en]Current state of the element.[/en]\\n     *   [ja][/ja]\\n     */\\n\\n  }, {\\n    key: '_getCurrentScroll',\\n    value: function _getCurrentScroll() {\\n      return this._pageElement.scrollTop;\\n    }\\n\\n    /**\\n     * @property pullDistance\\n     * @readonly\\n     * @type {Number}\\n     * @description\\n     *   [en]The current number of pixels the pull hook has moved.[/en]\\n     *   [ja]現在のプルフックが引き出された距離をピクセル数。[/ja]\\n     */\\n\\n  }, {\\n    key: '_isContentFixed',\\n    value: function _isContentFixed() {\\n      return this.hasAttribute('fixed-content');\\n    }\\n  }, {\\n    key: '_getScrollableElement',\\n    value: function _getScrollableElement() {\\n      if (this._isContentFixed()) {\\n        return this;\\n      } else {\\n        return this._pageElement;\\n      }\\n    }\\n  }, {\\n    key: '_show',\\n    value: function _show() {\\n      this.style.visibility = '';\\n    }\\n  }, {\\n    key: '_hide',\\n    value: function _hide() {\\n      this.style.visibility = 'hidden';\\n    }\\n\\n    /**\\n     * @param {Number} scroll\\n     * @param {Object} options\\n     * @param {Function} [options.callback]\\n     */\\n\\n  }, {\\n    key: '_translateTo',\\n    value: function _translateTo(scroll) {\\n      var _this4 = this;\\n\\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\\n\\n      if (this._currentTranslation == 0 && scroll == 0) {\\n        return;\\n      }\\n\\n      var done = function done() {\\n        if (scroll === 0) {\\n          var el = _this4._getScrollableElement();\\n          removeTransform(el);\\n        }\\n\\n        if (options.callback) {\\n          options.callback();\\n        }\\n      };\\n\\n      this._currentTranslation = scroll;\\n\\n      if (options.animate) {\\n        Animit(this._getScrollableElement()).queue({\\n          transform: this._generateTranslationTransform(scroll)\\n        }, {\\n          duration: 0.3,\\n          timing: 'cubic-bezier(.1, .7, .1, 1)'\\n        }).play(done);\\n      } else {\\n        Animit(this._getScrollableElement()).queue({\\n          transform: this._generateTranslationTransform(scroll)\\n        }).play(done);\\n      }\\n    }\\n  }, {\\n    key: '_disableDragLock',\\n    value: function _disableDragLock() {\\n      // e2e tests need it\\n      this._dragLockDisabled = true;\\n      this._destroyEventListeners();\\n      this._createEventListeners();\\n    }\\n  }, {\\n    key: '_createEventListeners',\\n    value: function _createEventListeners() {\\n      this._gestureDetector = new GestureDetector(this._pageElement, {\\n        dragMinDistance: 1,\\n        dragDistanceCorrection: false,\\n        dragLockToAxis: !this._dragLockDisabled\\n      });\\n\\n      // Bind listeners\\n      //\\n      // Note:\\n      // If we swipe up/down a screen too fast,\\n      // the gesture detector occasionally dispatches a `dragleft` or `dragright`,\\n      // so we need to have the pull hook listen to `dragleft` and `dragright` as well as `dragup` and `dragdown`.\\n      this._gestureDetector.on('dragup dragdown dragleft dragright', this._boundOnDrag);\\n      this._gestureDetector.on('dragstart', this._boundOnDragStart);\\n      this._gestureDetector.on('dragend', this._boundOnDragEnd);\\n\\n      this._pageElement.addEventListener('scroll', this._boundOnScroll, false);\\n    }\\n  }, {\\n    key: '_destroyEventListeners',\\n    value: function _destroyEventListeners() {\\n      if (this._gestureDetector) {\\n        this._gestureDetector.off('dragup dragdown dragleft dragright', this._boundOnDrag);\\n        this._gestureDetector.off('dragstart', this._boundOnDragStart);\\n        this._gestureDetector.off('dragend', this._boundOnDragEnd);\\n\\n        this._gestureDetector.dispose();\\n        this._gestureDetector = null;\\n      }\\n\\n      this._pageElement.removeEventListener('scroll', this._boundOnScroll, false);\\n    }\\n  }, {\\n    key: 'connectedCallback',\\n    value: function connectedCallback() {\\n      this._currentTranslation = 0;\\n      this._pageElement = this.parentNode;\\n\\n      this._createEventListeners();\\n      this._setStyle();\\n    }\\n  }, {\\n    key: 'disconnectedCallback',\\n    value: function disconnectedCallback() {\\n      this._pageElement.style.marginTop = '';\\n\\n      this._destroyEventListeners();\\n    }\\n  }, {\\n    key: 'attributeChangedCallback',\\n    value: function attributeChangedCallback(name, last, current) {\\n      if (name === 'height') {\\n        this._setStyle();\\n      }\\n    }\\n  }, {\\n    key: 'onAction',\\n    get: function get() {\\n      return this._onAction;\\n    },\\n    set: function set(value) {\\n      if (!(value instanceof Function) && value !== null) {\\n        throw new Error('onAction must be a function or null');\\n      }\\n      this._onAction = value;\\n    }\\n  }, {\\n    key: 'height',\\n    set: function set(value) {\\n      if (!util.isInteger(value)) {\\n        throw new Error('The height must be an integer');\\n      }\\n\\n      this.setAttribute('height', value + 'px');\\n    },\\n    get: function get() {\\n      return parseInt(this.getAttribute('height') || '64', 10);\\n    }\\n\\n    /**\\n     * @property thresholdHeight\\n     * @type {Number}\\n     * @description\\n     *   [en]The thresholdHeight of the pull hook in pixels. The default value is `96px`.[/en]\\n     *   [ja][/ja]\\n     */\\n\\n  }, {\\n    key: 'thresholdHeight',\\n    set: function set(value) {\\n      if (!util.isInteger(value)) {\\n        throw new Error('The threshold height must be an integer');\\n      }\\n\\n      this.setAttribute('threshold-height', value + 'px');\\n    },\\n    get: function get() {\\n      return parseInt(this.getAttribute('threshold-height') || '96', 10);\\n    }\\n  }, {\\n    key: 'state',\\n    get: function get() {\\n      return this._getState();\\n    }\\n  }, {\\n    key: 'pullDistance',\\n    get: function get() {\\n      return this._currentTranslation;\\n    }\\n\\n    /**\\n     * @property disabled\\n     * @type {Boolean}\\n     * @description\\n     *   [en]Whether the element is disabled or not.[/en]\\n     *   [ja]無効化されている場合に`true`。[/ja]\\n     */\\n\\n  }, {\\n    key: 'disabled',\\n    set: function set(value) {\\n      return util.toggleAttribute(this, 'disabled', value);\\n    },\\n    get: function get() {\\n      return this.hasAttribute('disabled');\\n    }\\n  }], [{\\n    key: 'observedAttributes',\\n    get: function get() {\\n      return ['height'];\\n    }\\n  }, {\\n    key: 'STATE_INITIAL',\\n    get: function get() {\\n      return STATE_INITIAL;\\n    }\\n  }, {\\n    key: 'STATE_PREACTION',\\n    get: function get() {\\n      return STATE_PREACTION;\\n    }\\n  }, {\\n    key: 'STATE_ACTION',\\n    get: function get() {\\n      return STATE_ACTION;\\n    }\\n  }, {\\n    key: 'events',\\n    get: function get() {\\n      return ['changestate'];\\n    }\\n  }]);\\n  return PullHookElement;\\n}(BaseElement);\\n\\ncustomElements.define('ons-pull-hook', PullHookElement);\\n\\n/*\\nCopyright 2013-2016 ASIAL CORPORATION\\n\\nLicensed under the Apache License, Version 2.0 (the \\\"License\\\");\\nyou may not use this file except in compliance with the License.\\nYou may obtain a copy of the License at\\n\\n   http://www.apache.org/licenses/LICENSE-2.0\\n\\nUnless required by applicable law or agreed to in writing, software\\ndistributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\nSee the License for the specific language governing permissions and\\nlimitations under the License.\\n\\n*/\\n\\n/**\\n * @class AnimatorCSS - implementation of Animator class using css transitions\\n */\\n\\nvar AnimatorCSS = function () {\\n  createClass(AnimatorCSS, [{\\n    key: 'animate',\\n\\n\\n    /**\\n     * @method animate\\n     * @desc main animation function\\n     * @param {Element} element\\n     * @param {Object} finalCSS\\n     * @param {number} [duration=200] - duration in milliseconds\\n     * @return {Object} result\\n     * @return {Function} result.then(callback) - sets a callback to be executed after the animation has stopped\\n     * @return {Function} result.stop(options) - stops the animation; if options.stopNext is true then it doesn't call the callback\\n     * @return {Function} result.finish(ms) - finishes the animation in the specified time in milliseconds\\n     * @return {Function} result.speed(ms) - sets the animation speed so that it finishes as if the original duration was the one specified here\\n     * @example\\n     * ````\\n     *  var result = animator.animate(el, {opacity: 0.5}, 1000);\\n     *\\n     *  el.addEventListener('click', function(e){\\n     *    result.speed(200).then(function(){\\n     *      console.log('done');\\n     *    });\\n     *  }, 300);\\n     * ````\\n     */\\n    value: function animate(el, final) {\\n      var duration = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 200;\\n\\n      var start = new Date().getTime(),\\n          initial = {},\\n          stopped = false,\\n          next = false,\\n          timeout = false,\\n          properties = Object.keys(final);\\n\\n      var updateStyles = function updateStyles() {\\n        var s = window.getComputedStyle(el);\\n        properties.forEach(s.getPropertyValue.bind(s));\\n        s = el.offsetHeight;\\n      };\\n\\n      var result = {\\n        stop: function stop() {\\n          var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n\\n          timeout && clearTimeout(timeout);\\n          var k = Math.min(1, (new Date().getTime() - start) / duration);\\n          properties.forEach(function (i) {\\n            el.style[i] = (1 - k) * initial[i] + k * final[i] + (i == 'opacity' ? '' : 'px');\\n          });\\n          el.style.transitionDuration = '0s';\\n\\n          if (options.stopNext) {\\n            next = false;\\n          } else if (!stopped) {\\n            stopped = true;\\n            next && next();\\n          }\\n          return result;\\n        },\\n        then: function then(cb) {\\n          next = cb;\\n          if (stopped) {\\n            next && next();\\n          }\\n          return result;\\n        },\\n        speed: function speed(newDuration) {\\n          if (internal$1.config.animationsDisabled) {\\n            newDuration = 0;\\n          }\\n          if (!stopped) {\\n            timeout && clearTimeout(timeout);\\n\\n            var passed = new Date().getTime() - start;\\n            var k = passed / duration;\\n            var remaining = newDuration * (1 - k);\\n\\n            properties.forEach(function (i) {\\n              el.style[i] = (1 - k) * initial[i] + k * final[i] + (i == 'opacity' ? '' : 'px');\\n            });\\n\\n            updateStyles();\\n\\n            start = el.speedUpTime;\\n            duration = remaining;\\n\\n            el.style.transitionDuration = duration / 1000 + 's';\\n\\n            properties.forEach(function (i) {\\n              el.style[i] = final[i] + (i == 'opacity' ? '' : 'px');\\n            });\\n\\n            timeout = setTimeout(result.stop, remaining);\\n          }\\n          return result;\\n        },\\n        finish: function finish() {\\n          var milliseconds = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 50;\\n\\n          var k = (new Date().getTime() - start) / duration;\\n\\n          result.speed(milliseconds / (1 - k));\\n          return result;\\n        }\\n      };\\n\\n      if (el.hasAttribute('disabled') || stopped || internal$1.config.animationsDisabled) {\\n        return result;\\n      }\\n\\n      var style = window.getComputedStyle(el);\\n      properties.forEach(function (e) {\\n        var v = parseFloat(style.getPropertyValue(e));\\n        initial[e] = isNaN(v) ? 0 : v;\\n      });\\n\\n      if (!stopped) {\\n        el.style.transitionProperty = properties.join(',');\\n        el.style.transitionDuration = duration / 1000 + 's';\\n\\n        properties.forEach(function (e) {\\n          el.style[e] = final[e] + (e == 'opacity' ? '' : 'px');\\n        });\\n      }\\n\\n      timeout = setTimeout(result.stop, duration);\\n      this._onStopAnimations(el, result.stop);\\n\\n      return result;\\n    }\\n  }]);\\n\\n  function AnimatorCSS() {\\n    classCallCheck(this, AnimatorCSS);\\n\\n    this._queue = [];\\n    this._index = 0;\\n  }\\n\\n  createClass(AnimatorCSS, [{\\n    key: '_onStopAnimations',\\n    value: function _onStopAnimations(el, listener) {\\n      var queue = this._queue;\\n      var i = this._index++;\\n      queue[el] = queue[el] || [];\\n      queue[el][i] = function (options) {\\n        delete queue[el][i];\\n        if (queue[el] && queue[el].length == 0) {\\n          delete queue[el];\\n        }\\n        return listener(options);\\n      };\\n    }\\n\\n    /**\\n    * @method stopAnimations\\n    * @desc stops active animations on a specified element\\n    * @param {Element|Array} element - element or array of elements\\n    * @param {Object} [options={}]\\n    * @param {Boolean} [options.stopNext] - the callbacks after the animations won't be called if this option is true\\n    */\\n\\n  }, {\\n    key: 'stopAnimations',\\n    value: function stopAnimations(el) {\\n      var _this = this;\\n\\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\\n\\n      if (Array.isArray(el)) {\\n        return el.forEach(function (el) {\\n          _this.stopAnimations(el, options);\\n        });\\n      }\\n\\n      (this._queue[el] || []).forEach(function (e) {\\n        e(options || {});\\n      });\\n    }\\n\\n    /**\\n    * @method stopAll\\n    * @desc stops all active animations\\n    * @param {Object} [options={}]\\n    * @param {Boolean} [options.stopNext] - the callbacks after the animations won't be called if this option is true\\n    */\\n\\n  }, {\\n    key: 'stopAll',\\n    value: function stopAll() {\\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n\\n      this.stopAnimations(Object.keys(this._queue), options);\\n    }\\n\\n    /**\\n    * @method fade\\n    * @desc fades the element (short version for animate(el, {opacity: 0}))\\n    * @param {Element} element\\n    * @param {number} [duration=200]\\n    */\\n\\n  }, {\\n    key: 'fade',\\n    value: function fade(el) {\\n      var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 200;\\n\\n      return this.animate(el, { opacity: 0 }, duration);\\n    }\\n  }]);\\n  return AnimatorCSS;\\n}();\\n\\n/*\\nCopyright 2013-2015 ASIAL CORPORATION\\n\\nLicensed under the Apache License, Version 2.0 (the \\\"License\\\");\\nyou may not use this file except in compliance with the License.\\nYou may obtain a copy of the License at\\n\\n   http://www.apache.org/licenses/LICENSE-2.0\\n\\nUnless required by applicable law or agreed to in writing, software\\ndistributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\nSee the License for the specific language governing permissions and\\nlimitations under the License.\\n\\n*/\\n\\nvar defaultClassName$10 = 'ripple';\\n\\n/**\\n * @element ons-ripple\\n * @category visual\\n * @description\\n *   [en]\\n *     Adds a Material Design \\\"ripple\\\" effect to an element. The ripple effect will spread from the position where the user taps.\\n *\\n *     Some elements such as `<ons-button>` and `<ons-fab>`  support a `ripple` attribute.\\n *   [/en]\\n *   [ja]マテリアルデザインのリップル効果をDOM要素に追加します。[/ja]\\n * @codepen wKQWdZ\\n * @tutorial vanilla/Reference/ripple\\n * @guide cross-platform-styling\\n *  [en]Cross platform styling[/en]\\n *  [ja]Cross platform styling[/ja]\\n * @example\\n * <div class=\\\"my-div\\\">\\n *  <ons-ripple></ons-ripple>\\n * </div>\\n *\\n * @example\\n * <ons-button ripple>Click me!</ons-button>\\n */\\n\\nvar RippleElement = function (_BaseElement) {\\n  inherits(RippleElement, _BaseElement);\\n\\n  function RippleElement() {\\n    classCallCheck(this, RippleElement);\\n    return possibleConstructorReturn(this, (RippleElement.__proto__ || Object.getPrototypeOf(RippleElement)).apply(this, arguments));\\n  }\\n\\n  createClass(RippleElement, [{\\n    key: 'init',\\n\\n\\n    /**\\n     * @attribute color\\n     * @type {String}\\n     * @description\\n     *   [en]Color of the ripple effect.[/en]\\n     *   [ja]リップルエフェクトの色を指定します。[/ja]\\n     */\\n\\n    /**\\n     * @attribute background\\n     * @type {String}\\n     * @description\\n     *   [en]Color of the background.[/en]\\n     *   [ja]背景の色を設定します。[/ja]\\n     */\\n\\n    /**\\n     * @attribute disabled\\n     * @description\\n     *   [en]If this attribute is set, the ripple effect will be disabled.[/en]\\n     *   [ja]この属性が設定された場合、リップルエフェクトは無効になります。[/ja]\\n     */\\n\\n    value: function init() {\\n      var _this2 = this;\\n\\n      contentReady(this, function () {\\n        return _this2._compile();\\n      });\\n\\n      this._animator = new AnimatorCSS();\\n\\n      ['color', 'center', 'start-radius', 'background'].forEach(function (e) {\\n        _this2.attributeChangedCallback(e, null, _this2.getAttribute(e));\\n      });\\n    }\\n  }, {\\n    key: '_compile',\\n    value: function _compile() {\\n      this.classList.add(defaultClassName$10);\\n\\n      this._wave = this.getElementsByClassName('ripple__wave')[0];\\n      this._background = this.getElementsByClassName('ripple__background')[0];\\n\\n      if (!(this._background && this._wave)) {\\n        this._wave = util.create('.ripple__wave');\\n        this._background = util.create('.ripple__background');\\n\\n        this.appendChild(this._wave);\\n        this.appendChild(this._background);\\n      }\\n    }\\n  }, {\\n    key: '_calculateCoords',\\n    value: function _calculateCoords(e) {\\n      var x, y, h, w, r;\\n      var b = this.getBoundingClientRect();\\n      if (this._center) {\\n        x = b.width / 2;\\n        y = b.height / 2;\\n        r = Math.sqrt(x * x + y * y);\\n      } else {\\n        x = (e.clientX || e.changedTouches[0].clientX) - b.left;\\n        y = (e.clientY || e.changedTouches[0].clientY) - b.top;\\n        h = Math.max(y, b.height - y);\\n        w = Math.max(x, b.width - x);\\n        r = Math.sqrt(h * h + w * w);\\n      }\\n      return { x: x, y: y, r: r };\\n    }\\n  }, {\\n    key: '_rippleAnimation',\\n    value: function _rippleAnimation(e) {\\n      var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 300;\\n\\n      var _animator = this._animator,\\n          _wave = this._wave,\\n          _background = this._background,\\n          _minR = this._minR,\\n          _calculateCoords2 = this._calculateCoords(e),\\n          x = _calculateCoords2.x,\\n          y = _calculateCoords2.y,\\n          r = _calculateCoords2.r;\\n\\n      _animator.stopAll({ stopNext: 1 });\\n      _animator.animate(_background, { opacity: 1 }, duration);\\n\\n      util.extend(_wave.style, {\\n        opacity: 1,\\n        top: y - _minR + 'px',\\n        left: x - _minR + 'px',\\n        width: 2 * _minR + 'px',\\n        height: 2 * _minR + 'px'\\n      });\\n\\n      return _animator.animate(_wave, {\\n        top: y - r,\\n        left: x - r,\\n        height: 2 * r,\\n        width: 2 * r\\n      }, duration);\\n    }\\n  }, {\\n    key: '_updateParent',\\n    value: function _updateParent() {\\n      if (!this._parentUpdated && this.parentNode) {\\n        var computedStyle = window.getComputedStyle(this.parentNode);\\n        if (computedStyle.getPropertyValue('position') === 'static') {\\n          this.parentNode.style.position = 'relative';\\n        }\\n        this._parentUpdated = true;\\n      }\\n    }\\n  }, {\\n    key: '_onTap',\\n    value: function _onTap(e) {\\n      var _this3 = this;\\n\\n      if (!this.disabled) {\\n        this._updateParent();\\n        this._rippleAnimation(e.gesture.srcEvent).then(function () {\\n          _this3._animator.fade(_this3._wave);\\n          _this3._animator.fade(_this3._background);\\n        });\\n      }\\n    }\\n  }, {\\n    key: '_onHold',\\n    value: function _onHold(e) {\\n      if (!this.disabled) {\\n        this._updateParent();\\n        this._holding = this._rippleAnimation(e.gesture.srcEvent, 2000);\\n        document.addEventListener('release', this._boundOnRelease);\\n      }\\n    }\\n  }, {\\n    key: '_onRelease',\\n    value: function _onRelease(e) {\\n      var _this4 = this;\\n\\n      if (this._holding) {\\n        this._holding.speed(300).then(function () {\\n          _this4._animator.stopAll({ stopNext: true });\\n          _this4._animator.fade(_this4._wave);\\n          _this4._animator.fade(_this4._background);\\n        });\\n\\n        this._holding = false;\\n      }\\n\\n      document.removeEventListener('release', this._boundOnRelease);\\n    }\\n  }, {\\n    key: '_onDragStart',\\n    value: function _onDragStart(e) {\\n      if (this._holding) {\\n        return this._onRelease(e);\\n      }\\n      if (['left', 'right'].indexOf(e.gesture.direction) != -1) {\\n        this._onTap(e);\\n      }\\n    }\\n  }, {\\n    key: 'connectedCallback',\\n    value: function connectedCallback() {\\n      this._parentNode = this.parentNode;\\n      this._boundOnTap = this._onTap.bind(this);\\n      this._boundOnHold = this._onHold.bind(this);\\n      this._boundOnDragStart = this._onDragStart.bind(this);\\n      this._boundOnRelease = this._onRelease.bind(this);\\n\\n      if (internal$1.config.animationsDisabled) {\\n        this.disabled = true;\\n      } else {\\n        this._parentNode.addEventListener('tap', this._boundOnTap);\\n        this._parentNode.addEventListener('hold', this._boundOnHold);\\n        this._parentNode.addEventListener('dragstart', this._boundOnDragStart);\\n      }\\n    }\\n  }, {\\n    key: 'disconnectedCallback',\\n    value: function disconnectedCallback() {\\n      var pn = this._parentNode || this.parentNode;\\n      pn.removeEventListener('tap', this._boundOnTap);\\n      pn.removeEventListener('hold', this._boundOnHold);\\n      pn.removeEventListener('dragstart', this._boundOnDragStart);\\n    }\\n  }, {\\n    key: 'attributeChangedCallback',\\n    value: function attributeChangedCallback(name, last, current) {\\n      var _this5 = this;\\n\\n      switch (name) {\\n\\n        case 'class':\\n          if (!this.classList.contains(defaultClassName$10)) {\\n            this.className = defaultClassName$10 + ' ' + current;\\n          }\\n          break;\\n\\n        case 'start-radius':\\n          this._minR = Math.max(0, parseFloat(current) || 0);\\n          break;\\n\\n        case 'color':\\n          if (current) {\\n            contentReady(this, function () {\\n              _this5._wave.style.background = current;\\n              if (!_this5.hasAttribute('background')) {\\n                _this5._background.style.background = current;\\n              }\\n            });\\n          }\\n          break;\\n\\n        case 'background':\\n          if (current || last) {\\n            if (current === 'none') {\\n              contentReady(this, function () {\\n                _this5._background.setAttribute('disabled', 'disabled');\\n                _this5._background.style.background = 'transparent';\\n              });\\n            } else {\\n              contentReady(this, function () {\\n                if (_this5._background.hasAttribute('disabled')) {\\n                  _this5._background.removeAttribute('disabled');\\n                }\\n                _this5._background.style.background = current;\\n              });\\n            }\\n          }\\n          break;\\n\\n        case 'center':\\n          if (name === 'center') {\\n            this._center = current != null && current != 'false';\\n          }\\n          break;\\n\\n      }\\n    }\\n\\n    /**\\n     * @property disabled\\n     * @type {Boolean}\\n     * @description\\n     *   [en]Whether the element is disabled or not.[/en]\\n     *   [ja]無効化されている場合に`true`。[/ja]\\n     */\\n\\n  }, {\\n    key: 'disabled',\\n    set: function set(value) {\\n      return util.toggleAttribute(this, 'disabled', value);\\n    },\\n    get: function get() {\\n      return this.hasAttribute('disabled');\\n    }\\n  }], [{\\n    key: 'observedAttributes',\\n    get: function get() {\\n      return ['start-radius', 'color', 'background', 'center', 'class'];\\n    }\\n  }]);\\n  return RippleElement;\\n}(BaseElement);\\n\\ncustomElements.define('ons-ripple', RippleElement);\\n\\n/*\\nCopyright 2013-2015 ASIAL CORPORATION\\n\\nLicensed under the Apache License, Version 2.0 (the \\\"License\\\");\\nyou may not use this file except in compliance with the License.\\nYou may obtain a copy of the License at\\n\\n   http://www.apache.org/licenses/LICENSE-2.0\\n\\nUnless required by applicable law or agreed to in writing, software\\ndistributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\nSee the License for the specific language governing permissions and\\nlimitations under the License.\\n\\n*/\\n\\n/**\\n * @element ons-row\\n * @category grid\\n * @description\\n *   [en]Represents a row in the grid system. Use with `<ons-col>` to layout components.[/en]\\n *   [ja]グリッドシステムにて行を定義します。ons-colとともに使用し、コンポーネントの配置に使用します。[/ja]\\n * @codepen GgujC {wide}\\n * @guide layouting\\n *   [en]Layouting guide[/en]\\n *   [ja]レイアウト調整[/ja]\\n * @seealso ons-col\\n *   [en]The `<ons-col>` component is used as children of `<ons-row>`.[/en]\\n *   [ja]ons-colコンポーネント[/ja]\\n * @note\\n *   [en]For Android 4.3 and earlier, and iOS6 and earlier, when using mixed alignment with ons-row and ons-col, they may not be displayed correctly. You can use only one vertical-align.[/en]\\n *   [ja]Android 4.3以前、もしくはiOS 6以前のOSの場合、ons-rowとons-colを組み合わせてそれぞれのons-col要素のvertical-align属性の値に別々の値を指定すると、描画が崩れる場合があります。vertical-align属性の値には一つの値だけを指定できます。[/ja]\\n * @example\\n * <ons-row>\\n *   <ons-col width=\\\"50px\\\"><ons-icon icon=\\\"fa-twitter\\\"></ons-icon></ons-col>\\n *   <ons-col>Text</ons-col>\\n * </ons-row>\\n */\\n\\n/**\\n * @attribute vertical-align\\n * @type {String}\\n * @description\\n *   [en]Short hand attribute for aligning vertically. Valid values are top, bottom, and center.[/en]\\n *   [ja]縦に整列するために指定します。top、bottom、centerのいずれかを指定できます。[/ja]\\n */\\n\\nvar RowElement = function (_BaseElement) {\\n  inherits(RowElement, _BaseElement);\\n\\n  function RowElement() {\\n    classCallCheck(this, RowElement);\\n    return possibleConstructorReturn(this, (RowElement.__proto__ || Object.getPrototypeOf(RowElement)).apply(this, arguments));\\n  }\\n\\n  return RowElement;\\n}(BaseElement);\\n\\ncustomElements.define('ons-row', RowElement);\\n\\n/*\\nCopyright 2013-2015 ASIAL CORPORATION\\n\\nLicensed under the Apache License, Version 2.0 (the \\\"License\\\");\\nyou may not use this file except in compliance with the License.\\nYou may obtain a copy of the License at\\n\\n   http://www.apache.org/licenses/LICENSE-2.0\\n\\nUnless required by applicable law or agreed to in writing, software\\ndistributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\nSee the License for the specific language governing permissions and\\nlimitations under the License.\\n\\n*/\\n\\nvar scheme$17 = {\\n  '': 'select-*',\\n  '.select-input': 'select-input--*'\\n};\\n\\nvar defaultClassName$11 = 'select';\\n\\nvar INPUT_ATTRIBUTES$1 = ['autofocus', 'disabled', 'form', 'multiple', 'name', 'required', 'size'];\\n\\n/**\\n * @element ons-select\\n * @category form\\n * @modifier material\\n *  [en]Displays a Material Design select input.[/en]\\n *  [ja][/ja]\\n * @modifier underbar\\n *  [en]Displays a horizontal line underneath a select input.[/en]\\n *  [ja][/ja]\\n * @description\\n *   [en]\\n *     Select component. If you want to place a select with an ID of `my-id` on a page, use `<ons-select select-id=\\\"my-id\\\">`.\\n *\\n *     The component will automatically display as a Material Design select on Android.\\n *\\n *     Most attributes that can be used for a normal `<select>` element can also be used on the `<ons-select>` element.\\n *   [/en]\\n *   [ja]セレクトボックスを表示するコンポーネントです。`select` 要素に使用できる属性の多くが `ons-select` 要素でも利用できます。[/ja]\\n * @codepen hLayx\\n * @tutorial vanilla/Reference/select\\n * @guide using-modifier [en]More details about the `modifier` attribute[/en][ja]modifier属性の使い方[/ja]\\n * @guide cross-platform-styling [en]Information about cross platform styling[/en][ja]Information about cross platform styling[/ja]\\n * @example\\n * <ons-select>\\n *   <option value=\\\"1\\\">1</option>\\n *   <option value=\\\"2\\\">2nd</option>\\n *   <option value=\\\"3\\\">3rd option</option>\\n * </ons-select>\\n */\\n\\nvar SelectElement = function (_BaseElement) {\\n  inherits(SelectElement, _BaseElement);\\n\\n  function SelectElement() {\\n    classCallCheck(this, SelectElement);\\n    return possibleConstructorReturn(this, (SelectElement.__proto__ || Object.getPrototypeOf(SelectElement)).apply(this, arguments));\\n  }\\n\\n  createClass(SelectElement, [{\\n    key: 'init',\\n\\n\\n    /**\\n     * @attribute autofocus\\n     * @type {Boolean}\\n     * @default false\\n     * @description\\n     *  [en]Element automatically gains focus on page load.[/en]\\n     *  [ja]ページロード時にこのセレクトボックスにフォーカスが移るようにします。[/ja]\\n     */\\n\\n    /**\\n     * @attribute disabled\\n     * @type {Boolean}\\n     * @default false\\n     * @description\\n     *   [en]Specify if select input should be disabled.[/en]\\n     *   [ja]このセレクトボックスを無効化する場合に指定します。[/ja]\\n     */\\n\\n    /**\\n     * @attribute form\\n     * @type {String}\\n     * @description\\n     *   [en]Associate a select element to an existing form on the page, even if not nested.[/en]\\n     *   [ja]このセレクトボックスを、指定した `form` 要素に紐付けます。セレクトボックスを `form` 要素の外側に配置する際に使用します。[/ja]\\n     */\\n\\n    /**\\n     * @attribute multiple\\n     * @type {Boolean}\\n     * @default false\\n     * @description\\n     *  [en]If this attribute is defined, multiple options can be selected at once.[/en]\\n     *  [ja]選択肢の複数選択を有効にします。[/ja]\\n     */\\n\\n    /**\\n     * @attribute name\\n     * @type {String}\\n     * @description\\n     *   [en]Name the select element, useful for instance if it is part of a form.[/en]\\n     *   [ja]このセレクトボックスの名前を指定します。通常 `form` 要素と共に使用します。[/ja]\\n     */\\n\\n    /**\\n     * @attribute required\\n     * @type {Boolean}\\n     * @description\\n     *   [en]Make the select input required for submitting the form it is part of.[/en]\\n     *   [ja]このセレクトボックスを入力必須にする場合に指定します。通常 `form` 要素と共に使用します。[/ja]\\n     */\\n\\n    /**\\n     * @attribute select-id\\n     * @type {String}\\n     * @description\\n     *   [en]ID given to the inner select, useful for dynamic manipulation.[/en]\\n     *   [ja]このセレクトボックスが内部に持つ select 要素に与える ID を指定します。セレクトボックスの内容を動的に変更する必要がある場合に使用します。[/ja]\\n     */\\n\\n    /**\\n     * @attribute size\\n     * @type {Number}\\n     * @default 1\\n     * @description\\n     *   [en]How many options are displayed; if there are more than the size then a scroll appears to navigate them.[/en]\\n     *   [ja]一度に表示する選択肢の個数を指定します。選択肢がこの属性で指定した個数よりも多い場合、スクロールが有効になります。[/ja]\\n     */\\n\\n    value: function init() {\\n      var _this2 = this;\\n\\n      contentReady(this, function () {\\n        _this2._compile();\\n      });\\n    }\\n  }, {\\n    key: 'attributeChangedCallback',\\n    value: function attributeChangedCallback(name, last, current) {\\n      var _this3 = this;\\n\\n      switch (name) {\\n        case 'class':\\n          if (!this.classList.contains(defaultClassName$11)) {\\n            this.className = defaultClassName$11 + ' ' + current;\\n          }\\n          break;\\n        case 'modifier':\\n          ModifierUtil.onModifierChanged(last, current, this, scheme$17);\\n          break;\\n      }\\n\\n      if (INPUT_ATTRIBUTES$1.indexOf(name) >= 0) {\\n        contentReady(this, function () {\\n          return _this3._updateBoundAttributes();\\n        });\\n      }\\n    }\\n  }, {\\n    key: '_updateBoundAttributes',\\n    value: function _updateBoundAttributes() {\\n      var _this4 = this;\\n\\n      INPUT_ATTRIBUTES$1.forEach(function (attr) {\\n        if (_this4.hasAttribute(attr)) {\\n          _this4._select.setAttribute(attr, _this4.getAttribute(attr));\\n        } else {\\n          _this4._select.removeAttribute(attr);\\n        }\\n      });\\n    }\\n\\n    /**\\n     * @property length\\n     * @description\\n     *   [en]Number of options in the select box.[/en]\\n     *   [ja]このセレクトボックスに含まれる選択肢の個数を返します。 `select` 要素[/ja]\\n     */\\n\\n    /**\\n     * @property options\\n     * @description\\n     *   [en]Several options for handling the select DOM object.[/en]\\n     *   [ja]このセレクトボックスに含まれる `option` 要素の配列を返します。[/ja]\\n     */\\n\\n    /**\\n     * @property selectedIndex\\n     * @description\\n     *   [en]Index of the currently selected option.[/en]\\n     *   [ja]現在選択されている選択肢のインデックスを返します。[/ja]\\n     */\\n\\n    /**\\n     * @property value\\n     * @description\\n     *   [en]Value of the currently selected option.[/en]\\n     *   [ja]現在選択されている選択肢の値を返します。[/ja]\\n     */\\n\\n  }, {\\n    key: '_compile',\\n    value: function _compile() {\\n      var _this5 = this;\\n\\n      autoStyle.prepare(this);\\n\\n      this.classList.add(defaultClassName$11);\\n      var sel = this._select || document.createElement('select');\\n      if (!sel.id && this.hasAttribute('select-id')) {\\n        sel.id = this.getAttribute('select-id');\\n      }\\n      sel.classList.add('select-input');\\n      if (!this._select) {\\n        util.arrayFrom(this.childNodes).forEach(function (element) {\\n          return sel.appendChild(element);\\n        });\\n        this.appendChild(sel);\\n      }\\n\\n      ModifierUtil.initModifier(this, scheme$17);\\n\\n      var _arr = ['disabled', 'length', 'multiple', 'name', 'options', 'selectedIndex', 'size', 'value'];\\n\\n      var _loop = function _loop() {\\n        var key = _arr[_i];\\n        _this5.__defineGetter__(key, function () {\\n          return _this5._select[key];\\n        });\\n        _this5.__defineSetter__(key, function (value) {\\n          _this5._select[key] = value;\\n        });\\n      };\\n\\n      for (var _i = 0; _i < _arr.length; _i++) {\\n        _loop();\\n      }\\n      this.__defineGetter__('form', function () {\\n        return _this5._select['form'];\\n      });\\n      this.__defineGetter__('type', function () {\\n        return _this5._select['type'];\\n      });\\n\\n      this.add = function (option) {\\n        var index = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\\n\\n        _this5._select.add(option, index);\\n      };\\n      this.remove = function (index) {\\n        _this5._select.remove(index);\\n      };\\n    }\\n  }, {\\n    key: '_select',\\n    get: function get() {\\n      return this.querySelector('select');\\n    }\\n  }], [{\\n    key: 'observedAttributes',\\n    get: function get() {\\n      return ['modifier', 'class'].concat(INPUT_ATTRIBUTES$1);\\n    }\\n  }, {\\n    key: 'events',\\n    get: function get() {\\n      return ['change'];\\n    }\\n  }]);\\n  return SelectElement;\\n}(BaseElement);\\n\\ncustomElements.define('ons-select', SelectElement);\\n\\n/*\\nCopyright 2013-2015 ASIAL CORPORATION\\nLicensed under the Apache License, Version 2.0 (the \\\"License\\\");\\nyou may not use this file except in compliance with the License.\\nYou may obtain a copy of the License at\\n   http://www.apache.org/licenses/LICENSE-2.0\\nUnless required by applicable law or agreed to in writing, software\\ndistributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\nSee the License for the specific language governing permissions and\\nlimitations under the License.\\n*/\\n\\nvar defaultClassName$12 = 'fab fab--mini speed-dial__item';\\n\\nvar scheme$18 = {\\n  '': 'speed-dial__item--*'\\n};\\n\\n/**\\n * @element ons-speed-dial-item\\n * @category control\\n * @description\\n *   [en]\\n *     This component displays the child elements of the Material Design Speed dial component.\\n *   [/en]\\n *   [ja]\\n *     Material DesignのSpeed dialの子要素を表現する要素です。\\n *   [/ja]\\n * @codepen dYQYLg\\n * @tutorial vanilla/Reference/speed-dial\\n * @seealso ons-speed-dial\\n *   [en]The `<ons-speed-dial>` component.[/en]\\n *   [ja]ons-speed-dialコンポーネント[/ja]\\n * @seealso ons-fab\\n *   [en]ons-fab component[/en]\\n *   [ja]ons-fabコンポーネント[/ja]\\n * @example\\n * <ons-speed-dial position=\\\"left bottom\\\">\\n *   <ons-fab>\\n *     <ons-icon icon=\\\"fa-twitter\\\"></ons-icon>\\n *   </ons-fab>\\n *   <ons-speed-dial-item>A</ons-speed-dial-item>\\n *   <ons-speed-dial-item>B</ons-speed-dial-item>\\n *   <ons-speed-dial-item>C</ons-speed-dial-item>\\n * </ons-speed-dial>\\n */\\n\\nvar SpeedDialItemElement = function (_BaseElement) {\\n  inherits(SpeedDialItemElement, _BaseElement);\\n\\n  function SpeedDialItemElement() {\\n    classCallCheck(this, SpeedDialItemElement);\\n    return possibleConstructorReturn(this, (SpeedDialItemElement.__proto__ || Object.getPrototypeOf(SpeedDialItemElement)).apply(this, arguments));\\n  }\\n\\n  createClass(SpeedDialItemElement, [{\\n    key: 'init',\\n\\n\\n    /**\\n     * @attribute modifier\\n     * @type {String}\\n     * @description\\n     *   [en]The appearance of the component.[/en]\\n     *   [ja]このコンポーネントの表現を指定します。[/ja]\\n     */\\n\\n    value: function init() {\\n      this._compile();\\n      this._boundOnClick = this._onClick.bind(this);\\n    }\\n  }, {\\n    key: 'attributeChangedCallback',\\n    value: function attributeChangedCallback(name, last, current) {\\n      switch (name) {\\n        case 'class':\\n          this._updateClassName(current);\\n          break;\\n        case 'modifier':\\n          ModifierUtil.onModifierChanged(last, current, this, scheme$18);\\n          break;\\n        case 'ripple':\\n          this._updateRipple();\\n      }\\n    }\\n  }, {\\n    key: '_updateClassName',\\n    value: function _updateClassName(className) {\\n      var _this2 = this;\\n\\n      if (!defaultClassName$12.split(/\\\\s+/).every(function (token) {\\n        return _this2.classList.contains(token);\\n      })) {\\n        this.className = defaultClassName$12 + ' ' + className;\\n      }\\n    }\\n  }, {\\n    key: 'connectedCallback',\\n    value: function connectedCallback() {\\n      this.addEventListener('click', this._boundOnClick, false);\\n    }\\n  }, {\\n    key: 'disconnectedCallback',\\n    value: function disconnectedCallback() {\\n      this.removeEventListener('click', this._boundOnClick, false);\\n    }\\n  }, {\\n    key: '_updateRipple',\\n    value: function _updateRipple() {\\n      util.updateRipple(this);\\n    }\\n  }, {\\n    key: '_onClick',\\n    value: function _onClick(e) {\\n      e.stopPropagation();\\n    }\\n  }, {\\n    key: '_compile',\\n    value: function _compile() {\\n      var _this3 = this;\\n\\n      autoStyle.prepare(this);\\n\\n      defaultClassName$12.split(/\\\\s+/).forEach(function (token) {\\n        _this3.classList.add(token);\\n      });\\n\\n      this._updateRipple();\\n\\n      ModifierUtil.initModifier(this, scheme$18);\\n    }\\n  }], [{\\n    key: 'observedAttributes',\\n    get: function get() {\\n      return ['modifier', 'ripple', 'class'];\\n    }\\n  }]);\\n  return SpeedDialItemElement;\\n}(BaseElement);\\n\\ncustomElements.define('ons-speed-dial-item', SpeedDialItemElement);\\n\\n/*\\nCopyright 2013-2015 ASIAL CORPORATION\\n\\nLicensed under the Apache License, Version 2.0 (the \\\"License\\\");\\nyou may not use this file except in compliance with the License.\\nYou may obtain a copy of the License at\\n\\n   http://www.apache.org/licenses/LICENSE-2.0\\n\\nUnless required by applicable law or agreed to in writing, software\\ndistributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\nSee the License for the specific language governing permissions and\\nlimitations under the License.\\n\\n*/\\n\\n/**\\n * Minimal utility library for manipulating element's style.\\n */\\nvar styler = function styler(element, style) {\\n  return styler.css.apply(styler, arguments);\\n};\\n\\n/**\\n * Set element's style.\\n *\\n * @param {Element} element\\n * @param {Object} styles\\n * @return {Element}\\n */\\nstyler.css = function (element, styles) {\\n  var keys = Object.keys(styles);\\n  keys.forEach(function (key) {\\n    if (key in element.style) {\\n      element.style[key] = styles[key];\\n    } else if (styler._prefix(key) in element.style) {\\n      element.style[styler._prefix(key)] = styles[key];\\n    } else {\\n      util.warn('No such style property: ' + key);\\n    }\\n  });\\n  return element;\\n};\\n\\n/**\\n * Add vendor prefix.\\n *\\n * @param {String} name\\n * @return {String}\\n */\\nstyler._prefix = function () {\\n  var styles = window.getComputedStyle(document.documentElement, '');\\n  var prefix = (Array.prototype.slice.call(styles).join('').match(/-(moz|webkit|ms)-/) || styles.OLink === '' && ['', 'o'])[1];\\n\\n  return function (name) {\\n    return prefix + name.substr(0, 1).toUpperCase() + name.substr(1);\\n  };\\n}();\\n\\n/**\\n * @param {Element} element\\n */\\nstyler.clear = function (element) {\\n  styler._clear(element);\\n};\\n\\n/**\\n * @param {Element} element\\n */\\nstyler._clear = function (element) {\\n  var len = element.style.length;\\n  var style = element.style;\\n  var keys = [];\\n  for (var i = 0; i < len; i++) {\\n    keys.push(style[i]);\\n  }\\n\\n  keys.forEach(function (key) {\\n    style[key] = '';\\n  });\\n};\\n\\n/*\\nCopyright 2013-2015 ASIAL CORPORATION\\nLicensed under the Apache License, Version 2.0 (the \\\"License\\\");\\nyou may not use this file except in compliance with the License.\\nYou may obtain a copy of the License at\\n   http://www.apache.org/licenses/LICENSE-2.0\\nUnless required by applicable law or agreed to in writing, software\\ndistributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\nSee the License for the specific language governing permissions and\\nlimitations under the License.\\n*/\\n\\nvar defaultClassName$13 = 'speed-dial';\\nvar scheme$19 = {\\n  '': 'speed-dial--*'\\n};\\n\\n/**\\n * @element ons-speed-dial\\n * @category control\\n * @description\\n *   [en]\\n *     Element that displays a Material Design Speed Dialog component. It is useful when there are more than one primary action that can be performed in a page.\\n *\\n *     The Speed dial looks like a `<ons-fab>` element but will expand a menu when tapped.\\n *   [/en]\\n *   [ja][/ja]\\n * @codepen dYQYLg\\n * @tutorial vanilla/Reference/speed-dial\\n * @seealso ons-speed-dial-item\\n *   [en]The `<ons-speed-dial-item>` represents a menu item.[/en]\\n *   [ja]ons-speed-dial-itemコンポーネント[/ja]\\n * @seealso ons-fab\\n *   [en]ons-fab component[/en]\\n *   [ja]ons-fabコンポーネント[/ja]\\n * @example\\n * <ons-speed-dial position=\\\"left bottom\\\">\\n *   <ons-fab>\\n *     <ons-icon icon=\\\"fa-twitter\\\"></ons-icon>\\n *   </ons-fab>\\n *   <ons-speed-dial-item>A</ons-speed-dial-item>\\n *   <ons-speed-dial-item>B</ons-speed-dial-item>\\n *   <ons-speed-dial-item>C</ons-speed-dial-item>\\n * </ons-speed-dial>\\n */\\n\\nvar SpeedDialElement = function (_BaseElement) {\\n  inherits(SpeedDialElement, _BaseElement);\\n\\n  function SpeedDialElement() {\\n    classCallCheck(this, SpeedDialElement);\\n    return possibleConstructorReturn(this, (SpeedDialElement.__proto__ || Object.getPrototypeOf(SpeedDialElement)).apply(this, arguments));\\n  }\\n\\n  createClass(SpeedDialElement, [{\\n    key: 'init',\\n\\n\\n    /**\\n     * @event open\\n     * @description\\n     *   [en]Fired when the menu items are shown.[/en]\\n     *   [ja][/ja]\\n     */\\n\\n    /**\\n     * @event close\\n     * @description\\n     *   [en]Fired when the menu items are hidden.[/en]\\n     *   [ja][/ja]\\n     */\\n\\n    /**\\n     * @attribute modifier\\n     * @type {String}\\n     * @description\\n     *   [en]The appearance of the component.[/en]\\n     *   [ja]このコンポーネントの表現を指定します。[/ja]\\n     */\\n\\n    /**\\n     * @attribute position\\n     * @type {String}\\n     * @description\\n     *   [en]\\n     *     Specify the vertical and horizontal position of the component.\\n     *     I.e. to display it in the top right corner specify \\\"right top\\\".\\n     *     Choose from \\\"right\\\", \\\"left\\\", \\\"top\\\" and \\\"bottom\\\".\\n     *   [/en]\\n     *   [ja]\\n     *     この要素を表示する左右と上下の位置を指定します。\\n     *     例えば、右上に表示する場合には\\\"right top\\\"を指定します。\\n     *     左右と上下の位置の指定には、rightとleft、topとbottomがそれぞれ指定できます。\\n     *   [/ja]\\n     */\\n\\n    /**\\n     * @attribute direction\\n     * @type {String}\\n     * @description\\n     *   [en]Specify the direction the items are displayed. Possible values are \\\"up\\\", \\\"down\\\", \\\"left\\\" and \\\"right\\\".[/en]\\n     *   [ja]\\n     *     要素が表示する方向を指定します。up, down, left, rightが指定できます。\\n     *   [/ja]\\n     */\\n\\n    /**\\n     * @attribute disabled\\n     * @description\\n     *   [en]Specify if button should be disabled.[/en]\\n     *   [ja]無効化する場合に指定します。[/ja]\\n     */\\n\\n    value: function init() {\\n      var _this2 = this;\\n\\n      contentReady(this, function () {\\n        _this2._compile();\\n      });\\n\\n      this._itemShown = false;\\n      this._boundOnClick = this._onClick.bind(this);\\n    }\\n  }, {\\n    key: '_compile',\\n    value: function _compile() {\\n      this.classList.add(defaultClassName$13);\\n      autoStyle.prepare(this);\\n      this._updateRipple();\\n      ModifierUtil.initModifier(this, scheme$19);\\n\\n      if (this.hasAttribute('direction')) {\\n        this._updateDirection(this.getAttribute('direction'));\\n      } else {\\n        this._updateDirection('up');\\n      }\\n\\n      this._updatePosition();\\n    }\\n  }, {\\n    key: 'attributeChangedCallback',\\n    value: function attributeChangedCallback(name, last, current) {\\n      var _this3 = this;\\n\\n      switch (name) {\\n        case 'class':\\n          if (!this.classList.contains(defaultClassName$13)) {\\n            this.className = defaultClassName$13 + ' ' + current;\\n          }\\n          break;\\n        case 'modifier':\\n          ModifierUtil.onModifierChanged(last, current, this, scheme$19);\\n          break;\\n        case 'ripple':\\n          contentReady(this, function () {\\n            return _this3._updateRipple();\\n          });\\n          break;\\n        case 'direction':\\n          contentReady(this, function () {\\n            return _this3._updateDirection(current);\\n          });\\n          break;\\n        case 'position':\\n          contentReady(this, function () {\\n            return _this3._updatePosition();\\n          });\\n          break;\\n      }\\n    }\\n  }, {\\n    key: 'connectedCallback',\\n    value: function connectedCallback() {\\n      this.addEventListener('click', this._boundOnClick, false);\\n    }\\n  }, {\\n    key: 'disconnectedCallback',\\n    value: function disconnectedCallback() {\\n      this.removeEventListener('click', this._boundOnClick, false);\\n    }\\n  }, {\\n    key: '_onClick',\\n    value: function _onClick(e) {\\n      if (this.onClick) {\\n        this.onClick.apply(this);\\n        return Promise.resolve();\\n      } else if (!this.disabled && this.visible) {\\n        return this.toggleItems();\\n      }\\n    }\\n  }, {\\n    key: '_show',\\n    value: function _show() {\\n      if (!this.inline) {\\n        return this.show();\\n      }\\n      return Promise.resolve();\\n    }\\n  }, {\\n    key: '_hide',\\n    value: function _hide() {\\n      var _this4 = this;\\n\\n      return new Promise(function (resolve) {\\n        if (!_this4.inline) {\\n          setImmediate(function () {\\n            return _this4.hide().then(resolve);\\n          });\\n        } else {\\n          resolve();\\n        }\\n      });\\n    }\\n  }, {\\n    key: '_updateRipple',\\n    value: function _updateRipple() {\\n      if (this._fab) {\\n        this.hasAttribute('ripple') ? this._fab.setAttribute('ripple', '') : this._fab.removeAttribute('ripple');\\n      }\\n    }\\n  }, {\\n    key: '_updateDirection',\\n    value: function _updateDirection(direction) {\\n      var children = this.items;\\n      for (var i = 0; i < children.length; i++) {\\n        styler(children[i], {\\n          transitionDelay: 25 * i + 'ms',\\n          bottom: 'auto',\\n          right: 'auto',\\n          top: 'auto',\\n          left: 'auto'\\n        });\\n      }\\n      switch (direction) {\\n        case 'up':\\n          for (var _i = 0; _i < children.length; _i++) {\\n            children[_i].style.bottom = 72 + 56 * _i + 'px';\\n            children[_i].style.right = '8px';\\n          }\\n          break;\\n        case 'down':\\n          for (var _i2 = 0; _i2 < children.length; _i2++) {\\n            children[_i2].style.top = 72 + 56 * _i2 + 'px';\\n            children[_i2].style.left = '8px';\\n          }\\n          break;\\n        case 'left':\\n          for (var _i3 = 0; _i3 < children.length; _i3++) {\\n            children[_i3].style.top = '8px';\\n            children[_i3].style.right = 72 + 56 * _i3 + 'px';\\n          }\\n          break;\\n        case 'right':\\n          for (var _i4 = 0; _i4 < children.length; _i4++) {\\n            children[_i4].style.top = '8px';\\n            children[_i4].style.left = 72 + 56 * _i4 + 'px';\\n          }\\n          break;\\n        default:\\n          throw new Error('Argument must be one of up, down, left or right.');\\n      }\\n    }\\n  }, {\\n    key: '_updatePosition',\\n    value: function _updatePosition() {\\n      var position = this.getAttribute('position');\\n      this.classList.remove('fab--top__left', 'fab--bottom__right', 'fab--bottom__left', 'fab--top__right', 'fab--top__center', 'fab--bottom__center');\\n      switch (position) {\\n        case 'top right':\\n        case 'right top':\\n          this.classList.add('fab--top__right');\\n          break;\\n        case 'top left':\\n        case 'left top':\\n          this.classList.add('fab--top__left');\\n          break;\\n        case 'bottom right':\\n        case 'right bottom':\\n          this.classList.add('fab--bottom__right');\\n          break;\\n        case 'bottom left':\\n        case 'left bottom':\\n          this.classList.add('fab--bottom__left');\\n          break;\\n        case 'center top':\\n        case 'top center':\\n          this.classList.add('fab--top__center');\\n          break;\\n        case 'center bottom':\\n        case 'bottom center':\\n          this.classList.add('fab--bottom__center');\\n          break;\\n        default:\\n          break;\\n      }\\n    }\\n\\n    /**\\n     * @method show\\n     * @signature show()\\n     * @description\\n     *   [en]Show the speed dial.[/en]\\n     *   [ja]Speed dialを表示します。[/ja]\\n     */\\n\\n  }, {\\n    key: 'show',\\n    value: function show() {\\n      this._fab.show();\\n      return Promise.resolve();\\n    }\\n\\n    /**\\n     * @method hide\\n     * @signature hide()\\n     * @description\\n     *   [en]Hide the speed dial.[/en]\\n     *   [ja]Speed dialを非表示にします。[/ja]\\n     */\\n\\n  }, {\\n    key: 'hide',\\n    value: function hide() {\\n      var _this5 = this;\\n\\n      return this.hideItems().then(function () {\\n        return _this5._fab.hide();\\n      });\\n    }\\n\\n    /**\\n     * @method showItems\\n     * @signature showItems()\\n     * @description\\n     *   [en]Show the speed dial items.[/en]\\n     *   [ja]Speed dialの子要素を表示します。[/ja]\\n     */\\n\\n  }, {\\n    key: 'showItems',\\n    value: function showItems() {\\n      if (this.hasAttribute('direction')) {\\n        this._updateDirection(this.getAttribute('direction'));\\n      } else {\\n        this._updateDirection('up');\\n      }\\n\\n      var totalDelay = 0;\\n      if (!this._itemShown) {\\n        var children = this.items;\\n        for (var i = 0; i < children.length; i++) {\\n          var delay = 25 * i;\\n          totalDelay += delay;\\n          styler(children[i], {\\n            transform: 'scale(1)',\\n            transitionDelay: delay + 'ms'\\n          });\\n        }\\n        totalDelay += 50;\\n\\n        this._itemShown = true;\\n        util.triggerElementEvent(this, 'open');\\n      }\\n\\n      var deferred = util.defer();\\n      setTimeout(deferred.resolve, totalDelay);\\n      return deferred.promise;\\n    }\\n\\n    /**\\n     * @method hideItems\\n     * @signature hideItems()\\n     * @description\\n     *   [en]Hide the speed dial items.[/en]\\n     *   [ja]Speed dialの子要素を非表示にします。[/ja]\\n     */\\n\\n  }, {\\n    key: 'hideItems',\\n    value: function hideItems() {\\n      var totalDelay = 0;\\n      if (this._itemShown) {\\n        var children = this.items;\\n        for (var i = 0; i < children.length; i++) {\\n          var delay = 25 * (children.length - i);\\n          totalDelay += delay;\\n          styler(children[i], {\\n            transform: 'scale(0)',\\n            transitionDelay: delay + 'ms'\\n          });\\n        }\\n        totalDelay += 50;\\n\\n        this._itemShown = false;\\n        util.triggerElementEvent(this, 'close');\\n      }\\n\\n      var deferred = util.defer();\\n      setTimeout(deferred.resolve, totalDelay);\\n      return deferred.promise;\\n    }\\n\\n    /**\\n     * @property disabled\\n     * @type {Boolean}\\n     * @description\\n     *   [en]Whether the element is disabled or not.[/en]\\n     *   [ja]無効化されている場合に`true`。[/ja]\\n     */\\n\\n  }, {\\n    key: 'isOpen',\\n\\n\\n    /**\\n     * @method isOpen\\n     * @signature isOpen()\\n     * @description\\n     *   [en]Returns whether the menu is open or not.[/en]\\n     *   [ja][/ja]\\n     */\\n    value: function isOpen() {\\n      return this._itemShown;\\n    }\\n\\n    /**\\n     * @method toggle\\n     * @signature toggle()\\n     * @description\\n     *   [en]Toggle visibility.[/en]\\n     *   [ja]Speed dialの表示非表示を切り替えます。[/ja]\\n     */\\n\\n  }, {\\n    key: 'toggle',\\n    value: function toggle() {\\n      return this.visible ? this.hide() : this.show();\\n    }\\n\\n    /**\\n     * @method toggleItems\\n     * @signature toggleItems()\\n     * @description\\n     *   [en]Toggle item visibility.[/en]\\n     *   [ja]Speed dialの子要素の表示非表示を切り替えます。[/ja]\\n     */\\n\\n  }, {\\n    key: 'toggleItems',\\n    value: function toggleItems() {\\n      return this.isOpen() ? this.hideItems() : this.showItems();\\n    }\\n  }, {\\n    key: 'items',\\n    get: function get() {\\n      return util.arrayFrom(this.querySelectorAll('ons-speed-dial-item'));\\n    }\\n  }, {\\n    key: '_fab',\\n    get: function get() {\\n      return util.findChild(this, 'ons-fab');\\n    }\\n  }, {\\n    key: 'disabled',\\n    set: function set(value) {\\n      if (value) {\\n        this.hideItems();\\n      }\\n      util.arrayFrom(this.children).forEach(function (e) {\\n        util.match(e, '.fab') && util.toggleAttribute(e, 'disabled', value);\\n      });\\n\\n      return util.toggleAttribute(this, 'disabled', value);\\n    },\\n    get: function get() {\\n      return this.hasAttribute('disabled');\\n    }\\n\\n    /**\\n     * @property inline\\n     * @readonly\\n     * @type {Boolean}\\n     * @description\\n     *   [en]Whether the element is inline or not.[/en]\\n     *   [ja]インライン要素の場合に`true`。[/ja]\\n     */\\n\\n  }, {\\n    key: 'inline',\\n    get: function get() {\\n      return this.hasAttribute('inline');\\n    }\\n\\n    /**\\n     * @property visible\\n     * @readonly\\n     * @type {Boolean}\\n     * @description\\n     *   [en]Whether the element is visible or not.[/en]\\n     *   [ja]要素が見える場合に`true`。[/ja]\\n     */\\n\\n  }, {\\n    key: 'visible',\\n    get: function get() {\\n      return this._fab.visible && this.style.display !== 'none';\\n    }\\n  }], [{\\n    key: 'observedAttributes',\\n    get: function get() {\\n      return ['class', 'modifier', 'ripple', 'direction', 'position'];\\n    }\\n  }, {\\n    key: 'events',\\n    get: function get() {\\n      return ['open', 'close'];\\n    }\\n  }]);\\n  return SpeedDialElement;\\n}(BaseElement);\\n\\ncustomElements.define('ons-speed-dial', SpeedDialElement);\\n\\n/*\\nCopyright 2013-2015 ASIAL CORPORATION\\n\\nLicensed under the Apache License, Version 2.0 (the \\\"License\\\");\\nyou may not use this file except in compliance with the License.\\nYou may obtain a copy of the License at\\n\\n   http://www.apache.org/licenses/LICENSE-2.0\\n\\nUnless required by applicable law or agreed to in writing, software\\ndistributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\nSee the License for the specific language governing permissions and\\nlimitations under the License.\\n\\n*/\\n\\nvar rewritables$1 = {\\n  /**\\n   * @param {Element} element\\n   * @param {Function} callback\\n   */\\n  ready: function ready(element, callback) {\\n    setImmediate(callback);\\n  }\\n};\\n\\n/**\\n * @element ons-splitter-content\\n * @category menu\\n * @description\\n *  [en]\\n *    The `<ons-splitter-content>` element is used as a child element of `<ons-splitter>`.\\n *\\n *    It contains the main content of the page while `<ons-splitter-side>` contains the list.\\n *  [/en]\\n *  [ja]ons-splitter-content要素は、ons-splitter要素の子要素として利用します。[/ja]\\n * @codepen rOQOML\\n * @tutorial vanilla/Reference/splitter\\n * @guide multiple-page-navigation\\n *  [en]Managing multiple pages.[/en]\\n *  [ja]Managing multiple pages[/ja]\\n * @seealso ons-splitter\\n *  [en]The `<ons-splitter>` component is the parent element.[/en]\\n *  [ja]ons-splitterコンポーネント[/ja]\\n * @seealso ons-splitter-side\\n *  [en]The `<ons-splitter-side>` component contains the menu.[/en]\\n *  [ja]ons-splitter-sideコンポーネント[/ja]\\n * @example\\n * <ons-splitter>\\n *   <ons-splitter-content>\\n *     ...\\n *   </ons-splitter-content>\\n *\\n *   <ons-splitter-side side=\\\"left\\\" width=\\\"80%\\\" collapse>\\n *     ...\\n *   </ons-splitter-side>\\n * </ons-splitter>\\n */\\n\\nvar SplitterContentElement = function (_BaseElement) {\\n  inherits(SplitterContentElement, _BaseElement);\\n\\n  function SplitterContentElement() {\\n    classCallCheck(this, SplitterContentElement);\\n    return possibleConstructorReturn(this, (SplitterContentElement.__proto__ || Object.getPrototypeOf(SplitterContentElement)).apply(this, arguments));\\n  }\\n\\n  createClass(SplitterContentElement, [{\\n    key: 'init',\\n\\n\\n    /**\\n     * @attribute page\\n     * @type {String}\\n     * @description\\n     *   [en]\\n     *     The url of the content page. If this attribute is used the content will be loaded from a `<ons-template>` tag or a remote file.\\n     *\\n     *     It is also possible to put `<ons-page>` element as a child of the element.\\n     *   [/en]\\n     *   [ja]ons-splitter-content要素に表示するページのURLを指定します。[/ja]\\n     */\\n\\n    value: function init() {\\n      var _this2 = this;\\n\\n      this._page = null;\\n      this._pageLoader = defaultPageLoader;\\n\\n      contentReady(this, function () {\\n        rewritables$1.ready(_this2, function () {\\n          var page = _this2._getPageTarget();\\n\\n          if (page) {\\n            _this2.load(page);\\n          }\\n        });\\n      });\\n    }\\n  }, {\\n    key: 'connectedCallback',\\n    value: function connectedCallback() {\\n      if (!util.match(this.parentNode, 'ons-splitter')) {\\n        throw new Error('\\\"ons-splitter-content\\\" must have \\\"ons-splitter\\\" as parentNode.');\\n      }\\n    }\\n  }, {\\n    key: '_getPageTarget',\\n    value: function _getPageTarget() {\\n      return this._page || this.getAttribute('page');\\n    }\\n  }, {\\n    key: 'disconnectedCallback',\\n    value: function disconnectedCallback() {}\\n  }, {\\n    key: 'attributeChangedCallback',\\n    value: function attributeChangedCallback(name, last, current) {}\\n\\n    /**\\n     * @property page\\n     * @type {HTMLElement}\\n     * @description\\n     *   [en]The page to load in the splitter content.[/en]\\n     *   [ja]この要素内に表示するページを指定します。[/ja]\\n     */\\n\\n  }, {\\n    key: 'load',\\n\\n\\n    /**\\n     * @method load\\n     * @signature load(page, [options])\\n     * @param {String} page, [options]\\n     *   [en]Page URL. Can be either an HTML document or an `<ons-template>` id.[/en]\\n     *   [ja]pageのURLか、ons-templateで宣言したテンプレートのid属性の値を指定します。[/ja]\\n     * @param {Object} [options]\\n     * @param {Function} [options.callback]\\n     * @description\\n     *   [en]Show the page specified in `page` in the content.[/en]\\n     *   [ja]指定したURLをメインページを読み込みます。[/ja]\\n     * @return {Promise}\\n     *   [en]Resolves to the new `<ons-page>` element[/en]\\n     *   [ja]`<ons-page>`要素を解決するPromiseオブジェクトを返します。[/ja]\\n     */\\n    value: function load(page) {\\n      var _this3 = this;\\n\\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\\n\\n      this._page = page;\\n      var callback = options.callback || function () {};\\n\\n      return new Promise(function (resolve) {\\n        var oldContent = _this3._content || null;\\n\\n        _this3._pageLoader.load({ page: page, parent: _this3 }, function (pageElement) {\\n          if (oldContent) {\\n            _this3._pageLoader.unload(oldContent);\\n            oldContent = null;\\n          }\\n\\n          setImmediate(function () {\\n            return _this3._show();\\n          });\\n\\n          callback(pageElement);\\n          resolve(pageElement);\\n        });\\n      });\\n    }\\n  }, {\\n    key: '_show',\\n    value: function _show() {\\n      if (this._content) {\\n        this._content._show();\\n      }\\n    }\\n  }, {\\n    key: '_hide',\\n    value: function _hide() {\\n      if (this._content) {\\n        this._content._hide();\\n      }\\n    }\\n  }, {\\n    key: '_destroy',\\n    value: function _destroy() {\\n      if (this._content) {\\n        this._pageLoader.unload(this._content);\\n      }\\n      this.remove();\\n    }\\n  }, {\\n    key: 'page',\\n    get: function get() {\\n      return this._page;\\n    }\\n\\n    /**\\n     * @param {*} page\\n     */\\n    ,\\n    set: function set(page) {\\n      this._page = page;\\n    }\\n  }, {\\n    key: '_content',\\n    get: function get() {\\n      return this.children[0];\\n    }\\n\\n    /**\\n     * @property pageLoader\\n     * @type {Function}\\n     * @description\\n     *   [en]Page element loaded in the splitter content.[/en]\\n     *   [ja]この要素内に表示するページを指定します。[/ja]\\n     */\\n\\n  }, {\\n    key: 'pageLoader',\\n    get: function get() {\\n      return this._pageLoader;\\n    },\\n    set: function set(loader) {\\n      if (!(loader instanceof PageLoader)) {\\n        throw Error('First parameter must be an instance of PageLoader');\\n      }\\n      this._pageLoader = loader;\\n    }\\n  }], [{\\n    key: 'observedAttributes',\\n    get: function get() {\\n      return [];\\n    }\\n  }, {\\n    key: 'rewritables',\\n    get: function get() {\\n      return rewritables$1;\\n    }\\n  }]);\\n  return SplitterContentElement;\\n}(BaseElement);\\n\\ncustomElements.define('ons-splitter-content', SplitterContentElement);\\n\\n/*\\nCopyright 2013-2015 ASIAL CORPORATION\\n\\nLicensed under the Apache License, Version 2.0 (the \\\"License\\\");\\nyou may not use this file except in compliance with the License.\\nYou may obtain a copy of the License at\\n\\n   http://www.apache.org/licenses/LICENSE-2.0\\n\\nUnless required by applicable law or agreed to in writing, software\\ndistributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\nSee the License for the specific language governing permissions and\\nlimitations under the License.\\n\\n*/\\n\\nvar SplitterMaskElement = function (_BaseElement) {\\n  inherits(SplitterMaskElement, _BaseElement);\\n\\n  function SplitterMaskElement() {\\n    classCallCheck(this, SplitterMaskElement);\\n    return possibleConstructorReturn(this, (SplitterMaskElement.__proto__ || Object.getPrototypeOf(SplitterMaskElement)).apply(this, arguments));\\n  }\\n\\n  createClass(SplitterMaskElement, [{\\n    key: 'init',\\n    value: function init() {\\n      var _this2 = this;\\n\\n      this._boundOnClick = this._onClick.bind(this);\\n      contentReady(this, function () {\\n        if (_this2.parentNode._sides.every(function (side) {\\n          return side.mode === 'split';\\n        })) {\\n          _this2.setAttribute('style', 'display: none !important');\\n        }\\n      });\\n    }\\n  }, {\\n    key: '_onClick',\\n    value: function _onClick(event) {\\n      if (this.onClick instanceof Function) {\\n        this.onClick();\\n      } else if (util.match(this.parentNode, 'ons-splitter')) {\\n        this.parentNode._sides.forEach(function (side) {\\n          return side.close('left').catch(function () {});\\n        });\\n      }\\n      event.stopPropagation();\\n    }\\n  }, {\\n    key: 'attributeChangedCallback',\\n    value: function attributeChangedCallback(name, last, current) {}\\n  }, {\\n    key: 'connectedCallback',\\n    value: function connectedCallback() {\\n      this.addEventListener('click', this._boundOnClick);\\n    }\\n  }, {\\n    key: 'disconnectedCallback',\\n    value: function disconnectedCallback() {\\n      this.removeEventListener('click', this._boundOnClick);\\n    }\\n  }], [{\\n    key: 'observedAttributes',\\n    get: function get() {\\n      return [];\\n    }\\n  }]);\\n  return SplitterMaskElement;\\n}(BaseElement);\\n\\ncustomElements.define('ons-splitter-mask', SplitterMaskElement);\\n\\n/*\\nCopyright 2013-2015 ASIAL CORPORATION\\n\\nLicensed under the Apache License, Version 2.0 (the \\\"License\\\");\\nyou may not use this file except in compliance with the License.\\nYou may obtain a copy of the License at\\n\\n   http://www.apache.org/licenses/LICENSE-2.0\\n\\nUnless required by applicable law or agreed to in writing, software\\ndistributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\nSee the License for the specific language governing permissions and\\nlimitations under the License.\\n\\n*/\\n\\nvar SplitterAnimator = function (_BaseAnimator) {\\n  inherits(SplitterAnimator, _BaseAnimator);\\n\\n  function SplitterAnimator() {\\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\\n        _ref$timing = _ref.timing,\\n        timing = _ref$timing === undefined ? 'cubic-bezier(.1, .7, .1, 1)' : _ref$timing,\\n        _ref$duration = _ref.duration,\\n        duration = _ref$duration === undefined ? 0.3 : _ref$duration,\\n        _ref$delay = _ref.delay,\\n        delay = _ref$delay === undefined ? 0 : _ref$delay;\\n\\n    classCallCheck(this, SplitterAnimator);\\n    return possibleConstructorReturn(this, (SplitterAnimator.__proto__ || Object.getPrototypeOf(SplitterAnimator)).call(this, { timing: timing, duration: duration, delay: delay }));\\n  }\\n\\n  createClass(SplitterAnimator, [{\\n    key: 'updateOptions',\\n    value: function updateOptions() {\\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n\\n      util.extend(this, {\\n        timing: this.timing, duration: this.duration, delay: this.delay\\n      }, options);\\n    }\\n\\n    /**\\n     * @param {Element} sideElement\\n     */\\n\\n  }, {\\n    key: 'activate',\\n    value: function activate(sideElement) {\\n      var _this2 = this;\\n\\n      var splitter = sideElement.parentNode;\\n\\n      contentReady(splitter, function () {\\n        _this2._side = sideElement;\\n        _this2._content = splitter.content;\\n        _this2._mask = splitter.mask;\\n      });\\n    }\\n  }, {\\n    key: 'inactivate',\\n    value: function inactivate() {\\n      this._content = this._side = this._mask = null;\\n    }\\n  }, {\\n    key: 'translate',\\n    value: function translate(distance) {\\n      Animit(this._side).queue({\\n        transform: 'translate3d(' + (this.minus + distance) + 'px, 0px, 0px)'\\n      }).play();\\n    }\\n\\n    /**\\n     * @param {Function} done\\n     */\\n\\n  }, {\\n    key: 'open',\\n    value: function open(done) {\\n      Animit.runAll(Animit(this._side).wait(this.delay).queue({\\n        transform: 'translate3d(' + this.minus + '100%, 0px, 0px)'\\n      }, {\\n        duration: this.duration,\\n        timing: this.timing\\n      }).queue(function (callback) {\\n        callback();\\n        done && done();\\n      }), Animit(this._mask).wait(this.delay).queue({\\n        display: 'block'\\n      }).queue({\\n        opacity: '1'\\n      }, {\\n        duration: this.duration,\\n        timing: 'linear'\\n      }));\\n    }\\n\\n    /**\\n     * @param {Function} done\\n     */\\n\\n  }, {\\n    key: 'close',\\n    value: function close(done) {\\n      var _this3 = this;\\n\\n      Animit.runAll(Animit(this._side).wait(this.delay).queue({\\n        transform: 'translate3d(0px, 0px, 0px)'\\n      }, {\\n        duration: this.duration,\\n        timing: this.timing\\n      }).queue(function (callback) {\\n        _this3._side.style.webkitTransition = '';\\n        done && done();\\n        callback();\\n      }), Animit(this._mask).wait(this.delay).queue({\\n        opacity: '0'\\n      }, {\\n        duration: this.duration,\\n        timing: 'linear'\\n      }).queue({\\n        display: 'none'\\n      }));\\n    }\\n  }, {\\n    key: 'minus',\\n    get: function get() {\\n      return this._side._side === 'right' ? '-' : '';\\n    }\\n  }]);\\n  return SplitterAnimator;\\n}(BaseAnimator);\\n\\n/*\\nCopyright 2013-2015 ASIAL CORPORATION\\n\\nLicensed under the Apache License, Version 2.0 (the \\\"License\\\");\\nyou may not use this file except in compliance with the License.\\nYou may obtain a copy of the License at\\n\\n   http://www.apache.org/licenses/LICENSE-2.0\\n\\nUnless required by applicable law or agreed to in writing, software\\ndistributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\nSee the License for the specific language governing permissions and\\nlimitations under the License.\\n\\n*/\\n\\nvar _animatorDict$5 = {\\n  default: SplitterAnimator,\\n  overlay: SplitterAnimator\\n};\\n\\n/**\\n * @element ons-splitter\\n * @category menu\\n * @description\\n *  [en]\\n *    A component that enables responsive layout by implementing both a two-column layout and a sliding menu layout.\\n *\\n *    It can be configured to automatically expand into a column layout on large screens and collapse the menu on smaller screens. When the menu is collapsed the user can open it by swiping.\\n *  [/en]\\n *  [ja][/ja]\\n * @codepen rOQOML\\n * @tutorial vanilla/Reference/splitter\\n * @guide multiple-page-navigation\\n *  [en]Managing multiple pages.[/en]\\n *  [ja]Managing multiple pages[/ja]\\n * @seealso ons-splitter-content\\n *  [en]The `<ons-splitter-content>` component contains the main content of the page.[/en]\\n *  [ja]ons-splitter-contentコンポーネント[/ja]\\n * @seealso ons-splitter-side\\n *  [en]The `<ons-splitter-side>` component contains the menu.[/en]\\n *  [ja]ons-splitter-sideコンポーネント[/ja]\\n * @example\\n * <ons-splitter id=\\\"splitter\\\">\\n *   <ons-splitter-content>\\n *     ...\\n *   </ons-splitter-content>\\n *\\n *   <ons-splitter-side side=\\\"left\\\" width=\\\"80%\\\" collapse swipeable>\\n *     ...\\n *   </ons-splitter-side>\\n * </ons-splitter>\\n *\\n * <script>\\n *   var splitter = document.getElementById('splitter');\\n *   splitter.left.open();\\n * </script>\\n */\\n\\nvar SplitterElement = function (_BaseElement) {\\n  inherits(SplitterElement, _BaseElement);\\n\\n  function SplitterElement() {\\n    classCallCheck(this, SplitterElement);\\n    return possibleConstructorReturn(this, (SplitterElement.__proto__ || Object.getPrototypeOf(SplitterElement)).apply(this, arguments));\\n  }\\n\\n  createClass(SplitterElement, [{\\n    key: '_getSide',\\n    value: function _getSide(side) {\\n      var element = util.findChild(this, function (e) {\\n        return util.match(e, 'ons-splitter-side') && e.getAttribute('side') === side;\\n      });\\n      return element;\\n    }\\n\\n    /**\\n     * @property left\\n     * @readonly\\n     * @type {HTMLElement}\\n     * @description\\n     *   [en]Left `<ons-splitter-side>` element.[/en]\\n     *   [ja][/ja]\\n     */\\n\\n  }, {\\n    key: '_onDeviceBackButton',\\n    value: function _onDeviceBackButton(event) {\\n      this._sides.some(function (s) {\\n        return s.isOpen ? s.close() : false;\\n      }) || event.callParentHandler();\\n    }\\n  }, {\\n    key: '_onModeChange',\\n    value: function _onModeChange(e) {\\n      var _this2 = this;\\n\\n      if (e.target.parentNode) {\\n        contentReady(this, function () {\\n          _this2._layout();\\n        });\\n      }\\n    }\\n  }, {\\n    key: '_layout',\\n    value: function _layout() {\\n      var _this3 = this;\\n\\n      this._sides.forEach(function (side) {\\n        _this3.content.style[side.side] = side.mode === 'split' ? side._width : 0;\\n      });\\n    }\\n  }, {\\n    key: 'init',\\n    value: function init() {\\n      var _this4 = this;\\n\\n      this._boundOnModeChange = this._onModeChange.bind(this);\\n\\n      contentReady(this, function () {\\n        _this4._compile();\\n        _this4._layout();\\n      });\\n    }\\n  }, {\\n    key: '_compile',\\n    value: function _compile() {\\n      if (!this.mask) {\\n        this.appendChild(document.createElement('ons-splitter-mask'));\\n      }\\n    }\\n  }, {\\n    key: 'connectedCallback',\\n    value: function connectedCallback() {\\n      this.onDeviceBackButton = this._onDeviceBackButton.bind(this);\\n      this.addEventListener('modechange', this._boundOnModeChange, false);\\n    }\\n  }, {\\n    key: 'disconnectedCallback',\\n    value: function disconnectedCallback() {\\n      this._backButtonHandler.destroy();\\n      this._backButtonHandler = null;\\n      this.removeEventListener('modechange', this._boundOnModeChange, false);\\n    }\\n  }, {\\n    key: 'attributeChangedCallback',\\n    value: function attributeChangedCallback(name, last, current) {}\\n  }, {\\n    key: '_show',\\n    value: function _show() {\\n      util.propagateAction(this, '_show');\\n    }\\n  }, {\\n    key: '_hide',\\n    value: function _hide() {\\n      util.propagateAction(this, '_hide');\\n    }\\n  }, {\\n    key: '_destroy',\\n    value: function _destroy() {\\n      util.propagateAction(this, '_destroy');\\n      this.remove();\\n    }\\n  }, {\\n    key: 'left',\\n    get: function get() {\\n      return this._getSide('left');\\n    }\\n    /**\\n     * @property right\\n     * @readonly\\n     * @type {HTMLElement}\\n     * @description\\n     *   [en]Right `<ons-splitter-side>` element.[/en]\\n     *   [ja][/ja]\\n     */\\n\\n  }, {\\n    key: 'right',\\n    get: function get() {\\n      return this._getSide('right');\\n    }\\n\\n    /**\\n     * @property side\\n     * @readonly\\n     * @type {HTMLElement}\\n     * @description\\n     *   [en]First `<ons-splitter-side>` element regardless the actual side.[/en]\\n     *   [ja][/ja]\\n     */\\n\\n  }, {\\n    key: 'side',\\n    get: function get() {\\n      return util.findChild(this, 'ons-splitter-side');\\n    }\\n  }, {\\n    key: '_sides',\\n    get: function get() {\\n      return [this.left, this.right].filter(function (e) {\\n        return e;\\n      });\\n    }\\n    /**\\n     * @property content\\n     * @readonly\\n     * @type {HTMLElement}\\n     * @description\\n     *   [en]The `<ons-splitter-content>` element.[/en]\\n     *   [ja][/ja]\\n     */\\n\\n  }, {\\n    key: 'content',\\n    get: function get() {\\n      return util.findChild(this, 'ons-splitter-content');\\n    }\\n  }, {\\n    key: 'topPage',\\n    get: function get() {\\n      return this.content._content;\\n    }\\n  }, {\\n    key: 'mask',\\n    get: function get() {\\n      return util.findChild(this, 'ons-splitter-mask');\\n    }\\n\\n    /**\\n     * @property onDeviceBackButton\\n     * @type {Object}\\n     * @description\\n     *   [en]Back-button handler.[/en]\\n     *   [ja]バックボタンハンドラ。[/ja]\\n     */\\n\\n  }, {\\n    key: 'onDeviceBackButton',\\n    get: function get() {\\n      return this._backButtonHandler;\\n    },\\n    set: function set(callback) {\\n      if (this._backButtonHandler) {\\n        this._backButtonHandler.destroy();\\n      }\\n\\n      this._backButtonHandler = deviceBackButtonDispatcher.createHandler(this, callback);\\n    }\\n  }], [{\\n    key: 'registerAnimator',\\n    value: function registerAnimator(name, Animator) {\\n      if (!(Animator instanceof SplitterAnimator)) {\\n        throw new Error('Animator parameter must be an instance of SplitterAnimator.');\\n      }\\n      _animatorDict$5[name] = Animator;\\n    }\\n  }, {\\n    key: 'SplitterAnimator',\\n    get: function get() {\\n      return SplitterAnimator;\\n    }\\n  }, {\\n    key: 'animators',\\n    get: function get() {\\n      return _animatorDict$5;\\n    }\\n  }]);\\n  return SplitterElement;\\n}(BaseElement);\\n\\ncustomElements.define('ons-splitter', SplitterElement);\\n\\n/*\\nCopyright 2013-2015 ASIAL CORPORATION\\n\\nLicensed under the Apache License, Version 2.0 (the \\\"License\\\");\\nyou may not use this file except in compliance with the License.\\nYou may obtain a copy of the License at\\n\\n   http://www.apache.org/licenses/LICENSE-2.0\\n\\nUnless required by applicable law or agreed to in writing, software\\ndistributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\nSee the License for the specific language governing permissions and\\nlimitations under the License.\\n\\n*/\\n\\nvar SPLIT_MODE = 'split';\\nvar COLLAPSE_MODE = 'collapse';\\nvar CLOSED_STATE = 'closed';\\nvar OPEN_STATE = 'open';\\nvar CHANGING_STATE = 'changing';\\n\\nvar WATCHED_ATTRIBUTES = ['animation', 'width', 'side', 'collapse', 'swipeable', 'swipe-target-width', 'animation-options', 'open-threshold'];\\n\\nvar rewritables$2 = {\\n  /**\\n   * @param {Element} splitterSideElement\\n   * @param {Function} callback\\n   */\\n  ready: function ready(splitterSideElement, callback) {\\n    setImmediate(callback);\\n  }\\n};\\n\\nvar CollapseDetection = function () {\\n  function CollapseDetection(element, target) {\\n    classCallCheck(this, CollapseDetection);\\n\\n    this._element = element;\\n    this._boundOnChange = this._onChange.bind(this);\\n    target && this.changeTarget(target);\\n  }\\n\\n  createClass(CollapseDetection, [{\\n    key: 'changeTarget',\\n    value: function changeTarget(target) {\\n      this.disable();\\n      this._target = target;\\n      if (target) {\\n        this._orientation = ['portrait', 'landscape'].indexOf(target) !== -1;\\n        this.activate();\\n      }\\n    }\\n  }, {\\n    key: '_match',\\n    value: function _match(value) {\\n      if (this._orientation) {\\n        return this._target === (value.isPortrait ? 'portrait' : 'landscape');\\n      }\\n      return value.matches;\\n    }\\n  }, {\\n    key: '_onChange',\\n    value: function _onChange(value) {\\n      this._element._updateMode(this._match(value) ? COLLAPSE_MODE : SPLIT_MODE);\\n    }\\n  }, {\\n    key: 'activate',\\n    value: function activate() {\\n      if (this._orientation) {\\n        orientation.on('change', this._boundOnChange);\\n        this._onChange({ isPortrait: orientation.isPortrait() });\\n      } else {\\n        this._queryResult = window.matchMedia(this._target);\\n        this._queryResult.addListener(this._boundOnChange);\\n        this._onChange(this._queryResult);\\n      }\\n    }\\n  }, {\\n    key: 'disable',\\n    value: function disable() {\\n      if (this._orientation) {\\n        orientation.off('change', this._boundOnChange);\\n      } else if (this._queryResult) {\\n        this._queryResult.removeListener(this._boundOnChange);\\n        this._queryResult = null;\\n      }\\n    }\\n  }]);\\n  return CollapseDetection;\\n}();\\n\\nvar widthToPx = function widthToPx(width, parent) {\\n  var _ref = [parseInt(width, 10), /px/.test(width)],\\n      value = _ref[0],\\n      px = _ref[1];\\n\\n  return px ? value : Math.round(parent.offsetWidth * value / 100);\\n};\\n\\nvar CollapseMode = function () {\\n  createClass(CollapseMode, [{\\n    key: '_animator',\\n    get: function get() {\\n      return this._element._animator;\\n    }\\n  }]);\\n\\n  function CollapseMode(element) {\\n    classCallCheck(this, CollapseMode);\\n\\n    this._active = false;\\n    this._state = CLOSED_STATE;\\n    this._element = element;\\n    this._lock = new DoorLock();\\n  }\\n\\n  createClass(CollapseMode, [{\\n    key: 'isOpen',\\n    value: function isOpen() {\\n      return this._active && this._state !== CLOSED_STATE;\\n    }\\n  }, {\\n    key: 'handleGesture',\\n    value: function handleGesture(e) {\\n      if (!this._active || this._lock.isLocked() || this._isOpenOtherSideMenu()) {\\n        return;\\n      }\\n      if (e.type === 'dragstart') {\\n        this._onDragStart(e);\\n      } else if (!this._ignoreDrag) {\\n        e.type === 'dragend' ? this._onDragEnd(e) : this._onDrag(e);\\n      }\\n    }\\n  }, {\\n    key: '_onDragStart',\\n    value: function _onDragStart(event) {\\n      var scrolling = !/left|right/.test(event.gesture.direction);\\n      var distance = this._element._side === 'left' ? event.gesture.center.clientX : window.innerWidth - event.gesture.center.clientX;\\n      var area = this._element._swipeTargetWidth;\\n      var isOpen = this.isOpen();\\n      this._ignoreDrag = scrolling || area && distance > area && !isOpen;\\n\\n      this._width = widthToPx(this._element._width, this._element.parentNode);\\n      this._startDistance = this._distance = isOpen ? this._width : 0;\\n    }\\n  }, {\\n    key: '_onDrag',\\n    value: function _onDrag(event) {\\n      event.gesture.preventDefault();\\n      var delta = this._element._side === 'left' ? event.gesture.deltaX : -event.gesture.deltaX;\\n      var distance = Math.max(0, Math.min(this._width, this._startDistance + delta));\\n      if (distance !== this._distance) {\\n        this._animator.translate(distance);\\n        this._distance = distance;\\n        this._state = CHANGING_STATE;\\n      }\\n    }\\n  }, {\\n    key: '_onDragEnd',\\n    value: function _onDragEnd(event) {\\n      var distance = this._distance,\\n          width = this._width,\\n          el = this._element;\\n\\n      var direction = event.gesture.interimDirection;\\n      var shouldOpen = el._side !== direction && distance > width * el._threshold;\\n      this.executeAction(shouldOpen ? 'open' : 'close');\\n      this._ignoreDrag = true;\\n    }\\n  }, {\\n    key: 'layout',\\n    value: function layout() {\\n      if (this._active && this._state === OPEN_STATE) {\\n        this._animator.open();\\n      }\\n    }\\n\\n    // enter collapse mode\\n\\n  }, {\\n    key: 'enterMode',\\n    value: function enterMode() {\\n      if (!this._active) {\\n        this._active = true;\\n        this.layout();\\n      }\\n    }\\n\\n    // exit collapse mode\\n\\n  }, {\\n    key: 'exitMode',\\n    value: function exitMode() {\\n      this._active = false;\\n    }\\n  }, {\\n    key: '_isOpenOtherSideMenu',\\n    value: function _isOpenOtherSideMenu() {\\n      var _this = this;\\n\\n      return util.arrayFrom(this._element.parentElement.children).some(function (e) {\\n        return util.match(e, 'ons-splitter-side') && e !== _this._element && e.isOpen;\\n      });\\n    }\\n\\n    /**\\n     * @param {String} name - 'open' or 'close'\\n     * @param {Object} [options]\\n     * @param {Function} [options.callback]\\n     * @param {Boolean} [options.withoutAnimation]\\n     * @return {Promise} Resolves to the splitter side element or false if not in collapse mode\\n     */\\n\\n  }, {\\n    key: 'executeAction',\\n    value: function executeAction(name) {\\n      var _this2 = this;\\n\\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\\n\\n      var FINAL_STATE = name === 'open' ? OPEN_STATE : CLOSED_STATE;\\n\\n      if (!this._active) {\\n        return Promise.resolve(false);\\n      }\\n\\n      if (this._state === FINAL_STATE) {\\n        return Promise.resolve(this._element);\\n      }\\n      if (this._lock.isLocked()) {\\n        return Promise.reject('Splitter side is locked.');\\n      }\\n      if (name === 'open' && this._isOpenOtherSideMenu()) {\\n        return Promise.reject('Another menu is already open.');\\n      }\\n      if (this._element._emitEvent('pre' + name)) {\\n        return Promise.reject('Canceled in pre' + name + ' event.');\\n      }\\n\\n      var callback = options.callback;\\n      var unlock = this._lock.lock();\\n      var done = function done() {\\n        _this2._state = FINAL_STATE;\\n        _this2.layout();\\n        unlock();\\n        _this2._element._emitEvent('post' + name);\\n        callback && callback();\\n      };\\n\\n      if (options.withoutAnimation) {\\n        done();\\n        return Promise.resolve(this._element);\\n      }\\n      this._state = CHANGING_STATE;\\n      return new Promise(function (resolve) {\\n        _this2._animator[name](function () {\\n          done();\\n          resolve(_this2._element);\\n        });\\n      });\\n    }\\n  }]);\\n  return CollapseMode;\\n}();\\n\\n/**\\n * @element ons-splitter-side\\n * @category menu\\n * @description\\n *  [en]\\n *    The `<ons-splitter-side>` element is used as a child element of `<ons-splitter>`.\\n *\\n *    It will be displayed on either the left or right side of the `<ons-splitter-content>` element.\\n *\\n *    It supports two modes: collapsed and split. When it's in collapsed mode it will be hidden from view and can be displayed when the user swipes the screen or taps a button. In split mode the element is always shown. It can be configured to automatically switch between the two modes depending on the screen size.\\n *  [/en]\\n *  [ja]ons-splitter-side要素は、ons-splitter要素の子要素として利用します。[/ja]\\n * @codepen rOQOML\\n * @tutorial vanilla/Reference/splitter\\n * @guide multiple-page-navigation\\n *  [en]Managing multiple pages.[/en]\\n *  [ja]Managing multiple pages[/ja]\\n * @seealso ons-splitter\\n *  [en]The `<ons-splitter>` is the parent component.[/en]\\n *  [ja]ons-splitterコンポーネント[/ja]\\n * @seealso ons-splitter-content\\n *  [en]The `<ons-splitter-content>` component contains the main content of the page.[/en]\\n *  [ja]ons-splitter-contentコンポーネント[/ja]\\n * @example\\n * <ons-splitter>\\n *   <ons-splitter-content>\\n *     ...\\n *   </ons-splitter-content>\\n *\\n *   <ons-splitter-side side=\\\"left\\\" width=\\\"80%\\\" collapse>\\n *     ...\\n *   </ons-splitter-side>\\n * </ons-splitter>\\n */\\n\\n\\nvar SplitterSideElement = function (_BaseElement) {\\n  inherits(SplitterSideElement, _BaseElement);\\n\\n  function SplitterSideElement() {\\n    classCallCheck(this, SplitterSideElement);\\n    return possibleConstructorReturn(this, (SplitterSideElement.__proto__ || Object.getPrototypeOf(SplitterSideElement)).apply(this, arguments));\\n  }\\n\\n  createClass(SplitterSideElement, [{\\n    key: 'init',\\n\\n\\n    /**\\n     * @event modechange\\n     * @description\\n     *   [en]Fired just after the component's mode changes.[/en]\\n     *   [ja]この要素のモードが変化した際に発火します。[/ja]\\n     * @param {Object} event\\n     *   [en]Event object.[/en]\\n     *   [ja]イベントオブジェクトです。[/ja]\\n     * @param {Object} event.side\\n     *   [en]Component object.[/en]\\n     *   [ja]コンポーネントのオブジェクト。[/ja]\\n     * @param {String} event.mode\\n     *   [en]Returns the current mode. Can be either `\\\"collapse\\\"` or `\\\"split\\\"`.[/en]\\n     *   [ja]現在のモードを返します。[/ja]\\n     */\\n\\n    /**\\n     * @event preopen\\n     * @description\\n     *   [en]Fired just before the sliding menu is opened.[/en]\\n     *   [ja]スライディングメニューが開く前に発火します。[/ja]\\n     * @param {Object} event\\n     *   [en]Event object.[/en]\\n     *   [ja]イベントオブジェクトです。[/ja]\\n     * @param {Function} event.cancel\\n     *   [en]Call to cancel opening sliding menu.[/en]\\n     *   [ja]スライディングメニューが開くのをキャンセルします。[/ja]\\n     * @param {Object} event.side\\n     *   [en]Component object.[/en]\\n     *   [ja]コンポーネントのオブジェクト。[/ja]\\n     */\\n\\n    /**\\n     * @event postopen\\n     * @description\\n     *   [en]Fired just after the sliding menu is opened.[/en]\\n     *   [ja]スライディングメニューが開いた後に発火します。[/ja]\\n     * @param {Object} event\\n     *   [en]Event object.[/en]\\n     *   [ja]イベントオブジェクトです。[/ja]\\n     * @param {Object} event.side\\n     *   [en]Component object.[/en]\\n     *   [ja]コンポーネントのオブジェクト。[/ja]\\n     */\\n\\n    /**\\n     * @event preclose\\n     * @description\\n     *   [en]Fired just before the sliding menu is closed.[/en]\\n     *   [ja]スライディングメニューが閉じる前に発火します。[/ja]\\n     * @param {Object} event\\n     *   [en]Event object.[/en]\\n     *   [ja]イベントオブジェクトです。[/ja]\\n     * @param {Object} event.side\\n     *   [en]Component object.[/en]\\n     *   [ja]コンポーネントのオブジェクト。[/ja]\\n     * @param {Function} event.cancel\\n     *   [en]Call to cancel opening sliding-menu.[/en]\\n     *   [ja]スライディングメニューが閉じるのをキャンセルします。[/ja]\\n     */\\n\\n    /**\\n     * @event postclose\\n     * @description\\n     *   [en]Fired just after the sliding menu is closed.[/en]\\n     *   [ja]スライディングメニューが閉じた後に発火します。[/ja]\\n     * @param {Object} event\\n     *   [en]Event object.[/en]\\n     *   [ja]イベントオブジェクトです。[/ja]\\n     * @param {Object} event.side\\n     *   [en]Component object.[/en]\\n     *   [ja]コンポーネントのオブジェクト。[/ja]\\n     */\\n\\n    /**\\n     * @attribute animation\\n     * @type {String}\\n     * @default  default\\n     * @description\\n     *  [en]Specify the animation. Use one of `\\\"overlay\\\"`, and `\\\"default\\\"`.[/en]\\n     *  [ja]アニメーションを指定します。\\\"overlay\\\", \\\"default\\\"のいずれかを指定できます。[/ja]\\n     */\\n\\n    /**\\n     * @attribute animation-options\\n     * @type {Expression}\\n     * @description\\n     *  [en]Specify the animation's duration, timing and delay with an object literal. E.g. `{duration: 0.2, delay: 1, timing: 'ease-in'}`.[/en]\\n     *  [ja]アニメーション時のduration, timing, delayをオブジェクトリテラルで指定します。e.g. {duration: 0.2, delay: 1, timing: 'ease-in'}[/ja]\\n     */\\n\\n    /**\\n     * @attribute open-threshold\\n     * @type {Number}\\n     * @default  0.3\\n     * @description\\n     *  [en]Specify how much the menu needs to be swiped before opening. A value between `0` and `1`.[/en]\\n     *  [ja]どのくらいスワイプすればスライディングメニューを開くかどうかの割合を指定します。0から1の間の数値を指定します。スワイプの距離がここで指定した数値掛けるこの要素の幅よりも大きければ、スワイプが終わった時にこの要素を開きます。デフォルトは0.3です。[/ja]\\n     */\\n\\n    /**\\n     * @attribute collapse\\n     * @type {String}\\n     * @description\\n     *   [en]\\n     *     Specify the collapse behavior. Valid values are `\\\"portrait\\\"`, `\\\"landscape\\\"` or a media query.\\n     *     The strings `\\\"portrait\\\"` and `\\\"landscape\\\"` means the view will collapse when device is in landscape or portrait orientation.\\n     *     If the value is a media query, the view will collapse when the media query resolves to `true`.\\n     *     If the value is not defined, the view always be in `\\\"collapse\\\"` mode.\\n     *   [/en]\\n     *   [ja]\\n     *     左側のページを非表示にする条件を指定します。portrait, landscape、width #pxもしくはメディアクエリの指定が可能です。\\n     *     portraitもしくはlandscapeを指定すると、デバイスの画面が縦向きもしくは横向きになった時に適用されます。\\n     *     メディアクエリを指定すると、指定したクエリに適合している場合に適用されます。\\n     *     値に何も指定しない場合には、常にcollapseモードになります。\\n     *   [/ja]\\n     */\\n\\n    /**\\n     * @attribute swipe-target-width\\n     * @type {String}\\n     * @description\\n     *   [en]The width of swipeable area calculated from the edge (in pixels). Use this to enable swipe only when the finger touch on the screen edge.[/en]\\n     *   [ja]スワイプの判定領域をピクセル単位で指定します。画面の端から指定した距離に達するとページが表示されます。[/ja]\\n     */\\n\\n    /**\\n     * @attribute width\\n     * @type {String}\\n     * @description\\n     *   [en]Can be specified in either pixels or as a percentage, e.g. `90%` or `200px`.[/en]\\n     *   [ja]この要素の横幅を指定します。pxと%での指定が可能です。eg. 90%, 200px[/ja]\\n     */\\n\\n    /**\\n     * @attribute side\\n     * @type {String}\\n     * @default left\\n     * @description\\n     *   [en]Specify which side of the screen the `<ons-splitter-side>` element is located. Possible values are `\\\"left\\\"` and `\\\"right\\\"`.[/en]\\n     *   [ja]この要素が左か右かを指定します。指定できる値は\\\"left\\\"か\\\"right\\\"のみです。[/ja]\\n     */\\n\\n    /**\\n     * @attribute mode\\n     * @type {String}\\n     * @description\\n     *   [en]Current mode. Possible values are `\\\"collapse\\\"` or `\\\"split\\\"`. This attribute is read only.[/en]\\n     *   [ja]現在のモードが設定されます。\\\"collapse\\\"もしくは\\\"split\\\"が指定されます。この属性は読み込み専用です。[/ja]\\n     */\\n\\n    /**\\n     * @attribute page\\n     * @initonly\\n     * @type {String}\\n     * @description\\n     *   [en]The URL of the menu page.[/en]\\n     *   [ja]ons-splitter-side要素に表示するページのURLを指定します。[/ja]\\n     */\\n\\n    /**\\n     * @attribute swipeable\\n     * @type {Boolean}\\n     * @description\\n     *   [en]Whether to enable swipe interaction on collapse mode.[/en]\\n     *   [ja]collapseモード時にスワイプ操作を有効にする場合に指定します。[/ja]\\n     */\\n\\n    value: function init() {\\n      var _this4 = this;\\n\\n      this._page = null;\\n      this._pageLoader = defaultPageLoader;\\n      this._collapseMode = new CollapseMode(this);\\n      this._collapseDetection = new CollapseDetection(this);\\n\\n      this._animatorFactory = new AnimatorFactory({\\n        animators: SplitterElement.animators,\\n        baseClass: SplitterAnimator,\\n        baseClassName: 'SplitterAnimator',\\n        defaultAnimation: this.getAttribute('animation')\\n      });\\n      this._boundHandleGesture = function (e) {\\n        return _this4._collapseMode.handleGesture(e);\\n      };\\n      this._watchedAttributes = WATCHED_ATTRIBUTES;\\n      contentReady(this, function () {\\n        rewritables$2.ready(_this4, function () {\\n          var page = _this4._getPageTarget();\\n\\n          if (page) {\\n            _this4.load(page);\\n          }\\n        });\\n      });\\n    }\\n  }, {\\n    key: 'connectedCallback',\\n    value: function connectedCallback() {\\n      var _this5 = this;\\n\\n      if (!util.match(this.parentNode, 'ons-splitter')) {\\n        throw new Error('Parent must be an ons-splitter element.');\\n      }\\n\\n      this._gestureDetector = new GestureDetector(this.parentElement, { dragMinDistance: 1 });\\n\\n      contentReady(this, function () {\\n        _this5._watchedAttributes.forEach(function (e) {\\n          return _this5._update(e);\\n        });\\n      });\\n\\n      if (!this.hasAttribute('side')) {\\n        this.setAttribute('side', 'left');\\n      }\\n    }\\n  }, {\\n    key: '_getPageTarget',\\n    value: function _getPageTarget() {\\n      return this._page || this.getAttribute('page');\\n    }\\n  }, {\\n    key: 'disconnectedCallback',\\n    value: function disconnectedCallback() {\\n      this._collapseDetection.disable();\\n      this._gestureDetector.dispose();\\n      this._gestureDetector = null;\\n    }\\n  }, {\\n    key: 'attributeChangedCallback',\\n    value: function attributeChangedCallback(name, last, current) {\\n      this._update(name, current);\\n    }\\n  }, {\\n    key: '_update',\\n    value: function _update(name, value) {\\n      name = '_update' + name.split('-').map(function (e) {\\n        return e[0].toUpperCase() + e.slice(1);\\n      }).join('');\\n      return this[name](value);\\n    }\\n  }, {\\n    key: '_emitEvent',\\n    value: function _emitEvent(name) {\\n      if (name.slice(0, 3) !== 'pre') {\\n        return util.triggerElementEvent(this, name, { side: this });\\n      }\\n      var isCanceled = false;\\n\\n      util.triggerElementEvent(this, name, {\\n        side: this,\\n        cancel: function cancel() {\\n          return isCanceled = true;\\n        }\\n      });\\n\\n      return isCanceled;\\n    }\\n  }, {\\n    key: '_updateCollapse',\\n    value: function _updateCollapse() {\\n      var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.getAttribute('collapse');\\n\\n      if (value === null || value === 'split') {\\n        this._collapseDetection.disable();\\n        return this._updateMode(SPLIT_MODE);\\n      }\\n      if (value === '' || value === 'collapse') {\\n        this._collapseDetection.disable();\\n        return this._updateMode(COLLAPSE_MODE);\\n      }\\n\\n      this._collapseDetection.changeTarget(value);\\n    }\\n\\n    // readonly attribute for the users\\n\\n  }, {\\n    key: '_updateMode',\\n    value: function _updateMode(mode) {\\n      if (mode !== this._mode) {\\n        this._mode = mode;\\n        this._collapseMode[mode === COLLAPSE_MODE ? 'enterMode' : 'exitMode']();\\n        this.setAttribute('mode', mode);\\n\\n        util.triggerElementEvent(this, 'modechange', { side: this, mode: mode });\\n      }\\n    }\\n  }, {\\n    key: '_updateOpenThreshold',\\n    value: function _updateOpenThreshold() {\\n      var threshold = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.getAttribute('open-threshold');\\n\\n      this._threshold = Math.max(0, Math.min(1, parseFloat(threshold) || 0.3));\\n    }\\n  }, {\\n    key: '_updateSwipeable',\\n    value: function _updateSwipeable() {\\n      var swipeable = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.getAttribute('swipeable');\\n\\n      var action = swipeable === null ? 'off' : 'on';\\n\\n      if (this._gestureDetector) {\\n        this._gestureDetector[action]('dragstart dragleft dragright dragend', this._boundHandleGesture);\\n      }\\n    }\\n  }, {\\n    key: '_updateSwipeTargetWidth',\\n    value: function _updateSwipeTargetWidth() {\\n      var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.getAttribute('swipe-target-width');\\n\\n      this._swipeTargetWidth = Math.max(0, parseInt(value) || 0);\\n    }\\n  }, {\\n    key: '_updateWidth',\\n    value: function _updateWidth() {\\n      this.style.width = this._width;\\n    }\\n  }, {\\n    key: '_updateSide',\\n    value: function _updateSide() {\\n      var side = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.getAttribute('side');\\n\\n      this._side = side === 'right' ? side : 'left';\\n    }\\n  }, {\\n    key: '_updateAnimation',\\n    value: function _updateAnimation() {\\n      var animation = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.getAttribute('animation');\\n\\n      this._animator = this._animatorFactory.newAnimator({ animation: animation });\\n      this._animator.activate(this);\\n    }\\n  }, {\\n    key: '_updateAnimationOptions',\\n    value: function _updateAnimationOptions() {\\n      var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.getAttribute('animation-options');\\n\\n      this._animator.updateOptions(AnimatorFactory.parseAnimationOptionsString(value));\\n    }\\n\\n    /**\\n     * @property page\\n     * @type {*}\\n     * @description\\n     *   [en]Page location to load in the splitter side.[/en]\\n     *   [ja]この要素内に表示するページを指定します。[/ja]\\n     */\\n\\n  }, {\\n    key: 'open',\\n\\n\\n    /**\\n     * @method open\\n     * @signature open([options])\\n     * @param {Object} [options]\\n     *   [en]Parameter object.[/en]\\n     *   [ja]オプションを指定するオブジェクト。[/ja]\\n     * @param {Function} [options.callback]\\n     *   [en]This function will be called after the menu has been opened.[/en]\\n     *   [ja]メニューが開いた後に呼び出される関数オブジェクトを指定します。[/ja]\\n     * @description\\n     *   [en]Open menu in collapse mode.[/en]\\n     *   [ja]collapseモードになっているons-splitter-side要素を開きます。[/ja]\\n     * @return {Promise}\\n     *   [en]Resolves to the splitter side element or false if not in collapse mode[/en]\\n     *   [ja][/ja]\\n     */\\n    value: function open() {\\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n\\n      return this._collapseMode.executeAction('open', options);\\n    }\\n\\n    /**\\n     * @method close\\n     * @signature close([options])\\n     * @param {Object} [options]\\n     *   [en]Parameter object.[/en]\\n     *   [ja]オプションを指定するオブジェクト。[/ja]\\n     * @param {Function} [options.callback]\\n     *   [en]This function will be called after the menu has been closed.[/en]\\n     *   [ja]メニューが閉じた後に呼び出される関数オブジェクトを指定します。[/ja]\\n     * @description\\n     *   [en]Close menu in collapse mode.[/en]\\n     *   [ja]collapseモードになっているons-splitter-side要素を閉じます。[/ja]\\n     * @return {Promise}\\n     *   [en]Resolves to the splitter side element or false if not in collapse mode[/en]\\n     *   [ja][/ja]\\n     */\\n\\n  }, {\\n    key: 'close',\\n    value: function close() {\\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n\\n      return this._collapseMode.executeAction('close', options);\\n    }\\n\\n    /**\\n     * @method toggle\\n     * @signature toggle([options])\\n     * @param {Object} [options]\\n     * @description\\n     *   [en]Opens if it's closed. Closes if it's open.[/en]\\n     *   [ja]開けている場合は要素を閉じますそして開けている場合は要素を開きます。[/ja]\\n     * @return {Promise}\\n     *   [en]Resolves to the splitter side element or false if not in collapse mode[/en]\\n     *   [ja][/ja]\\n     */\\n\\n  }, {\\n    key: 'toggle',\\n    value: function toggle() {\\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n\\n      return this.isOpen ? this.close(options) : this.open(options);\\n    }\\n\\n    /**\\n     * @method load\\n     * @signature load(page, [options])\\n     * @param {String} page\\n     *   [en]Page URL. Can be either an HTML document or an <ons-template>.[/en]\\n     *   [ja]pageのURLか、ons-templateで宣言したテンプレートのid属性の値を指定します。[/ja]\\n     * @param {Object} [options]\\n     * @param {Function} [options.callback]\\n     * @description\\n     *   [en]Show the page specified in pageUrl in the right section[/en]\\n     *   [ja]指定したURLをメインページを読み込みます。[/ja]\\n     * @return {Promise}\\n     *   [en]Resolves to the new page element[/en]\\n     *   [ja][/ja]\\n     */\\n\\n  }, {\\n    key: 'load',\\n    value: function load(page) {\\n      var _this6 = this;\\n\\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\\n\\n      this._page = page;\\n      var callback = options.callback || function () {};\\n\\n      return new Promise(function (resolve) {\\n        var oldContent = _this6._content || null;\\n\\n        _this6._pageLoader.load({ page: page, parent: _this6 }, function (pageElement) {\\n          if (oldContent) {\\n            _this6._pageLoader.unload(oldContent);\\n            oldContent = null;\\n          }\\n\\n          setImmediate(function () {\\n            return _this6._show();\\n          });\\n\\n          callback(pageElement);\\n          resolve(pageElement);\\n        });\\n      });\\n    }\\n  }, {\\n    key: '_show',\\n    value: function _show() {\\n      if (this._content) {\\n        this._content._show();\\n      }\\n    }\\n  }, {\\n    key: '_hide',\\n    value: function _hide() {\\n      if (this._content) {\\n        this._content._hide();\\n      }\\n    }\\n  }, {\\n    key: '_destroy',\\n    value: function _destroy() {\\n      if (this._content) {\\n        this._pageLoader.unload(this._content);\\n      }\\n      this.remove();\\n    }\\n  }, {\\n    key: 'side',\\n    get: function get() {\\n      return this.getAttribute('side') === 'right' ? 'right' : 'left';\\n    }\\n  }, {\\n    key: '_width',\\n    get: function get() {\\n      var width = this.getAttribute('width');\\n      return (/^\\\\d+(px|%)$/.test(width) ? width : '80%'\\n      );\\n    },\\n    set: function set(value) {\\n      this.setAttribute('width', value);\\n    }\\n  }, {\\n    key: 'page',\\n    get: function get() {\\n      return this._page;\\n    }\\n\\n    /**\\n     * @param {*} page\\n     */\\n    ,\\n    set: function set(page) {\\n      this._page = page;\\n    }\\n  }, {\\n    key: '_content',\\n    get: function get() {\\n      return this.children[0];\\n    }\\n\\n    /**\\n     * @property pageLoader\\n     * @description\\n     *   [en][/en]\\n     *   [ja][/ja]\\n     */\\n\\n  }, {\\n    key: 'pageLoader',\\n    get: function get() {\\n      return this._pageLoader;\\n    },\\n    set: function set(loader) {\\n      if (!(loader instanceof PageLoader)) {\\n        throw Error('First parameter must be an instance of PageLoader.');\\n      }\\n      this._pageLoader = loader;\\n    }\\n\\n    /**\\n     * @property mode\\n     * @readonly\\n     * @type {String}\\n     * @description\\n     *   [en]Current mode. Possible values are \\\"split\\\", \\\"collapse\\\", \\\"closed\\\", \\\"open\\\" or \\\"changing\\\".[/en]\\n     *   [ja][/ja]\\n     */\\n\\n  }, {\\n    key: 'mode',\\n    get: function get() {\\n      return this._mode;\\n    }\\n\\n    /**\\n     * @property isOpen\\n     * @type {Boolean}\\n     * @readonly\\n     * @description\\n     *   [en]This value is `true` when the menu is open..[/en]\\n     *   [ja][/ja]\\n     */\\n\\n  }, {\\n    key: 'isOpen',\\n    get: function get() {\\n      return this._collapseMode.isOpen();\\n    }\\n  }], [{\\n    key: 'observedAttributes',\\n    get: function get() {\\n      return WATCHED_ATTRIBUTES;\\n    }\\n  }, {\\n    key: 'events',\\n    get: function get() {\\n      return ['preopen', 'postopen', 'preclose', 'postclose', 'modechange'];\\n    }\\n  }, {\\n    key: 'rewritables',\\n    get: function get() {\\n      return rewritables$2;\\n    }\\n  }]);\\n  return SplitterSideElement;\\n}(BaseElement);\\n\\ncustomElements.define('ons-splitter-side', SplitterSideElement);\\n\\n/*\\nCopyright 2013-2015 ASIAL CORPORATION\\n\\nLicensed under the Apache License, Version 2.0 (the \\\"License\\\");\\nyou may not use this file except in compliance with the License.\\nYou may obtain a copy of the License at\\n\\n   http://www.apache.org/licenses/LICENSE-2.0\\n\\nUnless required by applicable law or agreed to in writing, software\\ndistributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\nSee the License for the specific language governing permissions and\\nlimitations under the License.\\n\\n*/\\n\\nvar defaultClassName$14 = 'switch';\\n\\nvar scheme$20 = {\\n  '': 'switch--*',\\n  '.switch__input': 'switch--*__input',\\n  '.switch__handle': 'switch--*__handle',\\n  '.switch__toggle': 'switch--*__toggle'\\n};\\n\\nvar template$2 = util.createFragment('\\\\n  <input type=\\\"checkbox\\\" class=\\\"switch__input\\\">\\\\n  <div class=\\\"switch__toggle\\\">\\\\n    <div class=\\\"switch__handle\\\">\\\\n      <div class=\\\"switch__touch\\\"></div>\\\\n    </div>\\\\n  </div>\\\\n');\\n\\nvar locations = {\\n  ios: [1, 21],\\n  material: [0, 16]\\n};\\n\\n/**\\n * @element ons-switch\\n * @category form\\n * @description\\n *   [en]\\n *     Switch component. The switch can be toggled both by dragging and tapping.\\n *\\n *     Will automatically displays a Material Design switch on Android devices.\\n *   [/en]\\n *   [ja]スイッチを表示するコンポーネントです。[/ja]\\n * @modifier material\\n *   [en]Material Design switch[/en]\\n *   [ja][/ja]\\n * @codepen LpXZQQ\\n * @tutorial vanilla/Reference/switch\\n * @guide adding-page-content\\n *   [en]Using form components[/en]\\n *   [ja]フォームを使う[/ja]\\n * @guide using-modifier [en]More details about the `modifier` attribute[/en][ja]modifier属性の使い方[/ja]\\n * @example\\n * <ons-switch checked></ons-switch>\\n * <ons-switch disabled></ons-switch>\\n * <ons-switch modifier=\\\"material\\\"></ons-switch>\\n */\\n\\nvar SwitchElement = function (_BaseElement) {\\n  inherits(SwitchElement, _BaseElement);\\n\\n  function SwitchElement() {\\n    classCallCheck(this, SwitchElement);\\n    return possibleConstructorReturn(this, (SwitchElement.__proto__ || Object.getPrototypeOf(SwitchElement)).apply(this, arguments));\\n  }\\n\\n  createClass(SwitchElement, [{\\n    key: 'init',\\n    value: function init() {\\n      var _this2 = this;\\n\\n      this._checked = false;\\n      this._disabled = false;\\n\\n      this._boundOnChange = this._onChange.bind(this);\\n\\n      contentReady(this, function () {\\n        _this2._compile();\\n        ['checked', 'disabled', 'modifier', 'name', 'value', 'input-id'].forEach(function (e) {\\n          _this2.attributeChangedCallback(e, null, _this2.getAttribute(e));\\n        });\\n      });\\n    }\\n  }, {\\n    key: '_compile',\\n    value: function _compile() {\\n      autoStyle.prepare(this);\\n\\n      this.classList.add(defaultClassName$14);\\n\\n      if (!(util.findChild(this, '.switch__input') && util.findChild(this, '.switch__toggle'))) {\\n        this.appendChild(template$2.cloneNode(true));\\n      }\\n\\n      ModifierUtil.initModifier(this, scheme$20);\\n\\n      this._checkbox = this.querySelector('.switch__input');\\n      this._handle = this.querySelector('.switch__handle');\\n\\n      this._checkbox.checked = this._checked;\\n      this._checkbox.disabled = this._disabled;\\n    }\\n  }, {\\n    key: 'disconnectedCallback',\\n    value: function disconnectedCallback() {\\n      var _this3 = this;\\n\\n      contentReady(this, function () {\\n        _this3._checkbox.removeEventListener('change', _this3._boundOnChange);\\n        _this3.removeEventListener('dragstart', _this3._onDragStart);\\n        _this3.removeEventListener('hold', _this3._onHold);\\n        _this3.removeEventListener('tap', _this3.click);\\n        _this3.removeEventListener('click', _this3._onClick);\\n        if (_this3._gestureDetector) {\\n          _this3._gestureDetector.dispose();\\n        }\\n      });\\n    }\\n  }, {\\n    key: 'connectedCallback',\\n    value: function connectedCallback() {\\n      var _this4 = this;\\n\\n      contentReady(this, function () {\\n        _this4._checkbox.addEventListener('change', _this4._boundOnChange);\\n        _this4.addEventListener('dragstart', _this4._onDragStart);\\n        _this4.addEventListener('hold', _this4._onHold);\\n        _this4.addEventListener('tap', _this4.click);\\n        _this4.addEventListener('click', _this4._onClick);\\n        _this4._gestureDetector = new GestureDetector(_this4, { dragMinDistance: 1, holdTimeout: 251 });\\n        _this4._boundOnRelease = _this4._onRelease.bind(_this4);\\n      });\\n    }\\n  }, {\\n    key: '_onChange',\\n    value: function _onChange(event) {\\n      if (event && event.stopPropagation) {\\n        event.stopPropagation();\\n      }\\n      this.click();\\n    }\\n  }, {\\n    key: '_onClick',\\n    value: function _onClick(ev) {\\n      if (ev.target.classList.contains('switch__touch')) {\\n        ev.preventDefault();\\n      }\\n    }\\n  }, {\\n    key: 'click',\\n    value: function click() {\\n      if (!this._disabled) {\\n        this.checked = !this.checked;\\n\\n        util.triggerElementEvent(this, 'change', {\\n          value: this.checked,\\n          switch: this,\\n          isInteractive: true\\n        });\\n      }\\n    }\\n  }, {\\n    key: '_getPosition',\\n    value: function _getPosition(e) {\\n      var l = this._locations;\\n      return Math.min(l[1], Math.max(l[0], this._startX + e.gesture.deltaX));\\n    }\\n  }, {\\n    key: '_onHold',\\n    value: function _onHold(e) {\\n      if (!this.disabled) {\\n        ModifierUtil.addModifier(this, 'active');\\n        document.addEventListener('release', this._boundOnRelease);\\n      }\\n    }\\n  }, {\\n    key: '_onDragStart',\\n    value: function _onDragStart(e) {\\n      if (this.disabled || ['left', 'right'].indexOf(e.gesture.direction) === -1) {\\n        ModifierUtil.removeModifier(this, 'active');\\n        return;\\n      }\\n\\n      e.stopPropagation();\\n\\n      ModifierUtil.addModifier(this, 'active');\\n      this._startX = this._locations[this.checked ? 1 : 0]; // - e.gesture.deltaX;\\n\\n      this.addEventListener('drag', this._onDrag);\\n      document.addEventListener('release', this._boundOnRelease);\\n    }\\n  }, {\\n    key: '_onDrag',\\n    value: function _onDrag(e) {\\n      e.gesture.srcEvent.preventDefault();\\n      this._handle.style.left = this._getPosition(e) + 'px';\\n    }\\n  }, {\\n    key: '_onRelease',\\n    value: function _onRelease(e) {\\n      var l = this._locations;\\n      var position = this._getPosition(e);\\n      var previousValue = this.checked;\\n\\n      this.checked = position >= (l[0] + l[1]) / 2;\\n\\n      if (this.checked !== previousValue) {\\n        util.triggerElementEvent(this, 'change', {\\n          value: this.checked,\\n          switch: this,\\n          isInteractive: true\\n        });\\n      }\\n\\n      this.removeEventListener('drag', this._onDrag);\\n      document.removeEventListener('release', this._boundOnRelease);\\n\\n      this._handle.style.left = '';\\n      ModifierUtil.removeModifier(this, 'active');\\n    }\\n  }, {\\n    key: 'attributeChangedCallback',\\n    value: function attributeChangedCallback(name, last, current) {\\n      var _this5 = this;\\n\\n      contentReady(this, function () {\\n        switch (name) {\\n          case 'class':\\n            if (!_this5.classList.contains(defaultClassName$14)) {\\n              _this5.className = defaultClassName$14 + ' ' + current;\\n            }\\n            break;\\n\\n          case 'modifier':\\n            _this5._isMaterial = (current || '').indexOf('material') !== -1;\\n            _this5._locations = locations[_this5._isMaterial ? 'material' : 'ios'];\\n            ModifierUtil.onModifierChanged(last, current, _this5, scheme$20);\\n            break;\\n\\n          case 'input-id':\\n            _this5._checkbox.id = current;\\n            break;\\n\\n          case 'checked':\\n            _this5._checked = current !== null;\\n            _this5._checkbox.checked = current !== null;\\n            util.toggleAttribute(_this5._checkbox, name, current !== null);\\n            break;\\n\\n          case 'disabled':\\n            _this5._disabled = current !== null;\\n            _this5._checkbox.disabled = current !== null;\\n            util.toggleAttribute(_this5._checkbox, name, current !== null);\\n            break;\\n\\n          default:\\n            if (current !== null) {\\n              _this5._checkbox.setAttribute(name, current);\\n            } else {\\n              _this5._checkbox.removeAttribute(name);\\n            }\\n        }\\n      });\\n    }\\n  }, {\\n    key: 'checked',\\n\\n\\n    /**\\n     * @event change\\n     * @description\\n     *   [en]Fired when the switch is toggled.[/en]\\n     *   [ja]ON/OFFが変わった時に発火します。[/ja]\\n     * @param {Object} event\\n     *   [en]Event object.[/en]\\n     *   [ja]イベントオブジェクト。[/ja]\\n     * @param {Object} event.switch\\n     *   [en]Switch object.[/en]\\n     *   [ja]イベントが発火したSwitchオブジェクトを返します。[/ja]\\n     * @param {Boolean} event.value\\n     *   [en]Current value.[/en]\\n     *   [ja]現在の値を返します。[/ja]\\n     * @param {Boolean} event.isInteractive\\n     *   [en]True if the change was triggered by the user clicking on the switch.[/en]\\n     *   [ja]タップやクリックなどのユーザの操作によって変わった場合にはtrueを返します。[/ja]\\n     */\\n\\n    /**\\n     * @attribute modifier\\n     * @type {String}\\n     * @description\\n     *  [en]The appearance of the switch.[/en]\\n     *  [ja]スイッチの表現を指定します。[/ja]\\n     */\\n\\n    /**\\n     * @attribute disabled\\n     * @description\\n     *   [en]Whether the switch is be disabled.[/en]\\n     *   [ja]スイッチを無効の状態にする場合に指定します。[/ja]\\n     */\\n\\n    /**\\n     * @attribute checked\\n     * @description\\n     *   [en]Whether the switch is checked.[/en]\\n     *   [ja]スイッチがONの状態にするときに指定します。[/ja]\\n     */\\n\\n    /**\\n     * @attribute input-id\\n     * @type {String}\\n     * @description\\n     *   [en]Specify the `id` attribute of the inner `<input>` element. This is useful when using `<label for=\\\"...\\\">` elements.[/en]\\n     *   [ja][/ja]\\n     */\\n\\n    /**\\n     * @property checked\\n     * @type {Boolean}\\n     * @description\\n     *   [en]This value is `true` if the switch is checked.[/en]\\n     *   [ja]スイッチがONの場合に`true`。[/ja]\\n     */\\n\\n    get: function get() {\\n      return this._checked;\\n    },\\n    set: function set(value) {\\n      this._checked = !!value;\\n      util.toggleAttribute(this, 'checked', this._checked);\\n    }\\n\\n    /**\\n     * @property disabled\\n     * @type {Boolean}\\n     * @description\\n     *   [en]Whether the element is disabled or not.[/en]\\n     *   [ja]無効化されている場合に`true`。[/ja]\\n     */\\n\\n  }, {\\n    key: 'disabled',\\n    get: function get() {\\n      return this._disabled;\\n    },\\n    set: function set(value) {\\n      var _this6 = this;\\n\\n      contentReady(this, function () {\\n        _this6._disabled = !!value;\\n        util.toggleAttribute(_this6, 'disabled', _this6._disabled);\\n        _this6._checkbox.disabled = _this6._disabled;\\n      });\\n    }\\n\\n    /**\\n     * @property checkbox\\n     * @readonly\\n     * @type {HTMLElement}\\n     * @description\\n     *   [en]The underlying checkbox element.[/en]\\n     *   [ja]コンポーネント内部のcheckbox要素になります。[/ja]\\n     */\\n\\n  }, {\\n    key: 'checkbox',\\n    get: function get() {\\n      return this._checkbox;\\n    }\\n  }, {\\n    key: 'value',\\n\\n\\n    /**\\n     * @property value\\n     * @type {String}\\n     * @description\\n     *   [en]The current value of the input.[/en]\\n     *   [ja][/ja]\\n     */\\n    get: function get() {\\n      return !this.hasOwnProperty('_checkbox') ? this.getAttribute('value') : this._checkbox.value;\\n    },\\n    set: function set(val) {\\n      var _this7 = this;\\n\\n      contentReady(this, function () {\\n        _this7._checkbox.value = val;\\n      });\\n    }\\n  }], [{\\n    key: 'observedAttributes',\\n    get: function get() {\\n      return ['modifier', 'input-id', 'checked', 'value', 'disabled', 'class'];\\n    }\\n  }, {\\n    key: 'events',\\n    get: function get() {\\n      return ['change'];\\n    }\\n  }]);\\n  return SwitchElement;\\n}(BaseElement);\\n\\ncustomElements.define('ons-switch', SwitchElement);\\n\\n/*\\nCopyright 2013-2015 ASIAL CORPORATION\\n\\nLicensed under the Apache License, Version 2.0 (the \\\"License\\\");\\nyou may not use this file except in compliance with the License.\\nYou may obtain a copy of the License at\\n\\n   http://www.apache.org/licenses/LICENSE-2.0\\n\\nUnless required by applicable law or agreed to in writing, software\\ndistributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\nSee the License for the specific language governing permissions and\\nlimitations under the License.\\n\\n*/\\nvar TabbarAnimator = function (_BaseAnimator) {\\n  inherits(TabbarAnimator, _BaseAnimator);\\n\\n  /**\\n   * @param {Object} options\\n   * @param {String} options.timing\\n   * @param {Number} options.duration\\n   * @param {Number} options.delay\\n   */\\n  function TabbarAnimator() {\\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\\n        _ref$timing = _ref.timing,\\n        timing = _ref$timing === undefined ? 'linear' : _ref$timing,\\n        _ref$duration = _ref.duration,\\n        duration = _ref$duration === undefined ? 0.4 : _ref$duration,\\n        _ref$delay = _ref.delay,\\n        delay = _ref$delay === undefined ? 0 : _ref$delay;\\n\\n    classCallCheck(this, TabbarAnimator);\\n    return possibleConstructorReturn(this, (TabbarAnimator.__proto__ || Object.getPrototypeOf(TabbarAnimator)).call(this, { timing: timing, duration: duration, delay: delay }));\\n  }\\n\\n  /**\\n   * @param {Element} enterPage ons-page element\\n   * @param {Element} leavePage ons-page element\\n   * @param {Number} enterPageIndex\\n   * @param {Number} leavePageIndex\\n   * @param {Function} done\\n   */\\n\\n\\n  createClass(TabbarAnimator, [{\\n    key: 'apply',\\n    value: function apply(enterPage, leavePage, enterPageIndex, leavePageIndex, done) {\\n      throw new Error('This method must be implemented.');\\n    }\\n  }]);\\n  return TabbarAnimator;\\n}(BaseAnimator);\\n\\nvar TabbarNoneAnimator = function (_TabbarAnimator) {\\n  inherits(TabbarNoneAnimator, _TabbarAnimator);\\n\\n  function TabbarNoneAnimator() {\\n    classCallCheck(this, TabbarNoneAnimator);\\n    return possibleConstructorReturn(this, (TabbarNoneAnimator.__proto__ || Object.getPrototypeOf(TabbarNoneAnimator)).apply(this, arguments));\\n  }\\n\\n  createClass(TabbarNoneAnimator, [{\\n    key: 'apply',\\n    value: function apply(enterPage, leavePage, enterIndex, leaveIndex, done) {\\n      setTimeout(done, 1000 / 60);\\n    }\\n  }]);\\n  return TabbarNoneAnimator;\\n}(TabbarAnimator);\\n\\nvar TabbarFadeAnimator = function (_TabbarAnimator2) {\\n  inherits(TabbarFadeAnimator, _TabbarAnimator2);\\n\\n  function TabbarFadeAnimator() {\\n    classCallCheck(this, TabbarFadeAnimator);\\n    return possibleConstructorReturn(this, (TabbarFadeAnimator.__proto__ || Object.getPrototypeOf(TabbarFadeAnimator)).apply(this, arguments));\\n  }\\n\\n  createClass(TabbarFadeAnimator, [{\\n    key: 'apply',\\n    value: function apply(enterPage, leavePage, enterPageIndex, leavePageIndex, done) {\\n      Animit.runAll(Animit(enterPage).saveStyle().queue({\\n        transform: 'translate3D(0, 0, 0)',\\n        opacity: 0\\n      }).wait(this.delay).queue({\\n        transform: 'translate3D(0, 0, 0)',\\n        opacity: 1\\n      }, {\\n        duration: this.duration,\\n        timing: this.timing\\n      }).restoreStyle().queue(function (callback) {\\n        done();\\n        callback();\\n      }), Animit(leavePage).queue({\\n        transform: 'translate3D(0, 0, 0)',\\n        opacity: 1\\n      }).wait(this.delay).queue({\\n        transform: 'translate3D(0, 0, 0)',\\n        opacity: 0\\n      }, {\\n        duration: this.duration,\\n        timing: this.timing\\n      }));\\n    }\\n  }]);\\n  return TabbarFadeAnimator;\\n}(TabbarAnimator);\\n\\nvar TabbarSlideAnimator = function (_TabbarAnimator3) {\\n  inherits(TabbarSlideAnimator, _TabbarAnimator3);\\n\\n  function TabbarSlideAnimator() {\\n    var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\\n        _ref2$timing = _ref2.timing,\\n        timing = _ref2$timing === undefined ? 'ease-in' : _ref2$timing,\\n        _ref2$duration = _ref2.duration,\\n        duration = _ref2$duration === undefined ? 0.15 : _ref2$duration,\\n        _ref2$delay = _ref2.delay,\\n        delay = _ref2$delay === undefined ? 0 : _ref2$delay;\\n\\n    classCallCheck(this, TabbarSlideAnimator);\\n    return possibleConstructorReturn(this, (TabbarSlideAnimator.__proto__ || Object.getPrototypeOf(TabbarSlideAnimator)).call(this, { timing: timing, duration: duration, delay: delay }));\\n  }\\n\\n  /**\\n   * @param {jqLite} enterPage\\n   * @param {jqLite} leavePage\\n   */\\n\\n\\n  createClass(TabbarSlideAnimator, [{\\n    key: 'apply',\\n    value: function apply(enterPage, leavePage, enterIndex, leaveIndex, done) {\\n      var sgn = enterIndex > leaveIndex;\\n\\n      Animit.runAll(Animit(enterPage).saveStyle().queue({\\n        transform: 'translate3D(' + (sgn ? '' : '-') + '100%, 0, 0)'\\n      }).wait(this.delay).queue({\\n        transform: 'translate3D(0, 0, 0)'\\n      }, {\\n        duration: this.duration,\\n        timing: this.timing\\n      }).restoreStyle().queue(function (callback) {\\n        done();\\n        callback();\\n      }), Animit(leavePage).queue({\\n        transform: 'translate3D(0, 0, 0)'\\n      }).wait(this.delay).queue({\\n        transform: 'translate3D(' + (sgn ? '-' : '') + '100%, 0, 0)'\\n      }, {\\n        duration: this.duration,\\n        timing: this.timing\\n      }));\\n    }\\n  }]);\\n  return TabbarSlideAnimator;\\n}(TabbarAnimator);\\n\\n/*\\nCopyright 2013-2015 ASIAL CORPORATION\\n\\nLicensed under the Apache License, Version 2.0 (the \\\"License\\\");\\nyou may not use this file except in compliance with the License.\\nYou may obtain a copy of the License at\\n\\n   http://www.apache.org/licenses/LICENSE-2.0\\n\\nUnless required by applicable law or agreed to in writing, software\\ndistributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\nSee the License for the specific language governing permissions and\\nlimitations under the License.\\n\\n*/\\n\\nvar scheme$22 = {\\n  '.tabbar__content': 'tabbar--*__content',\\n  '.tabbar': 'tabbar--*'\\n};\\n\\nvar _animatorDict$6 = {\\n  'default': TabbarNoneAnimator,\\n  'fade': TabbarFadeAnimator,\\n  'slide': TabbarSlideAnimator,\\n  'none': TabbarNoneAnimator\\n};\\n\\nvar rewritables$3 = {\\n  /**\\n   * @param {Element} tabbarElement\\n   * @param {Function} callback\\n   */\\n  ready: function ready(tabbarElement, callback) {\\n    callback();\\n  }\\n};\\n\\nvar generateId$1 = function () {\\n  var i = 0;\\n  return function () {\\n    return 'ons-tabbar-gen-' + i++;\\n  };\\n}();\\n\\n/**\\n * @element ons-tabbar\\n * @category tabbar\\n * @description\\n *   [en]A component to display a tab bar on the bottom of a page. Used with `<ons-tab>` to manage pages using tabs.[/en]\\n *   [ja]タブバーをページ下部に表示するためのコンポーネントです。ons-tabと組み合わせて使うことで、ページを管理できます。[/ja]\\n * @codepen pGuDL\\n * @tutorial vanilla/Reference/tabbar\\n * @guide multiple-page-navigation\\n *  [en]Managing multiple pages.[/en]\\n *  [ja]Managing multiple pages[/ja]\\n * @guide templates\\n *   [en]Defining multiple pages in single html[/en]\\n *   [ja]複数のページを1つのHTMLに記述する[/ja]\\n * @seealso ons-tab\\n *   [en]The `<ons-tab>` component.[/en]\\n *   [ja]ons-tabコンポーネント[/ja]\\n * @seealso ons-page\\n *   [en]The `<ons-page>` component.[/en]\\n *   [ja]ons-pageコンポーネント[/ja]\\n * @example\\n * <ons-tabbar>\\n *   <ons-tab\\n *     page=\\\"home.html\\\"\\n *     label=\\\"Home\\\"\\n *     active>\\n *   </ons-tab>\\n *   <ons-tab\\n *     page=\\\"settings.html\\\"\\n *     label=\\\"Settings\\\"\\n *     active>\\n *   </ons-tab>\\n * </ons-tabbar>\\n *\\n * <ons-template id=\\\"home.html\\\">\\n *   ...\\n * </ons-template>\\n *\\n * <ons-template id=\\\"settings.html\\\">\\n *   ...\\n * </ons-template>\\n */\\n\\nvar TabbarElement = function (_BaseElement) {\\n  inherits(TabbarElement, _BaseElement);\\n\\n  function TabbarElement() {\\n    classCallCheck(this, TabbarElement);\\n    return possibleConstructorReturn(this, (TabbarElement.__proto__ || Object.getPrototypeOf(TabbarElement)).apply(this, arguments));\\n  }\\n\\n  createClass(TabbarElement, [{\\n    key: 'init',\\n\\n\\n    /**\\n     * @event prechange\\n     * @description\\n     *   [en]Fires just before the tab is changed.[/en]\\n     *   [ja]アクティブなタブが変わる前に発火します。[/ja]\\n     * @param {Object} event\\n     *   [en]Event object.[/en]\\n     *   [ja]イベントオブジェクト。[/ja]\\n     * @param {Number} event.index\\n     *   [en]Current index.[/en]\\n     *   [ja]現在アクティブになっているons-tabのインデックスを返します。[/ja]\\n     * @param {Object} event.tabItem\\n     *   [en]Tab item object.[/en]\\n     *   [ja]tabItemオブジェクト。[/ja]\\n     * @param {Function} event.cancel\\n     *   [en]Call this function to cancel the change event.[/en]\\n     *   [ja]この関数を呼び出すと、アクティブなタブの変更がキャンセルされます。[/ja]\\n     */\\n\\n    /**\\n     * @event postchange\\n     * @description\\n     *   [en]Fires just after the tab is changed.[/en]\\n     *   [ja]アクティブなタブが変わった後に発火します。[/ja]\\n     * @param {Object} event\\n     *   [en]Event object.[/en]\\n     *   [ja]イベントオブジェクト。[/ja]\\n     * @param {Number} event.index\\n     *   [en]Current index.[/en]\\n     *   [ja]現在アクティブになっているons-tabのインデックスを返します。[/ja]\\n     * @param {Object} event.tabItem\\n     *   [en]Tab item object.[/en]\\n     *   [ja]tabItemオブジェクト。[/ja]\\n     */\\n\\n    /**\\n     * @event reactive\\n     * @description\\n     *   [en]Fires if the already open tab is tapped again.[/en]\\n     *   [ja]すでにアクティブになっているタブがもう一度タップやクリックされた場合に発火します。[/ja]\\n     * @param {Object} event\\n     *   [en]Event object.[/en]\\n     *   [ja]イベントオブジェクト。[/ja]\\n     * @param {Number} event.index\\n     *   [en]Current index.[/en]\\n     *   [ja]現在アクティブになっているons-tabのインデックスを返します。[/ja]\\n     * @param {Object} event.tabItem\\n     *   [en]Tab item object.[/en]\\n     *   [ja]tabItemオブジェクト。[/ja]\\n     */\\n\\n    /**\\n     * @attribute animation\\n     * @type {String}\\n     * @default none\\n     * @description\\n     *   [en]Animation name. Available values are `\\\"none\\\"`, `\\\"slide\\\"` and `\\\"fade\\\"`. Default is `\\\"none\\\"`.[/en]\\n     *   [ja]ページ読み込み時のアニメーションを指定します。\\\"none\\\"、\\\"fade\\\"、\\\"slide\\\"のいずれかを選択できます。デフォルトは\\\"none\\\"です。[/ja]\\n     */\\n\\n    /**\\n     * @attribute animation-options\\n     * @type {Expression}\\n     * @description\\n     *  [en]Specify the animation's duration, timing and delay with an object literal. E.g. `{duration: 0.2, delay: 1, timing: 'ease-in'}`.[/en]\\n     *  [ja]アニメーション時のduration, timing, delayをオブジェクトリテラルで指定します。e.g. {duration: 0.2, delay: 1, timing: 'ease-in'}[/ja]\\n     */\\n\\n    /**\\n     * @attribute position\\n     * @initonly\\n     * @type {String}\\n     * @default bottom\\n     * @description\\n     *   [en]Tabbar's position. Available values are `\\\"bottom\\\"` and `\\\"top\\\"`. Use `\\\"auto\\\"` to choose position depending on platform (iOS bottom, Android top).[/en]\\n     *   [ja]タブバーの位置を指定します。\\\"bottom\\\"もしくは\\\"top\\\"を選択できます。デフォルトは\\\"bottom\\\"です。[/ja]\\n     */\\n\\n    value: function init() {\\n      var _this2 = this;\\n\\n      this._tabbarId = generateId$1();\\n\\n      contentReady(this, function () {\\n        _this2._compile();\\n\\n        var content = _this2._contentElement;\\n        for (var i = 0; i < content.children.length; i++) {\\n          content.children[i].style.display = 'none';\\n        }\\n\\n        var activeIndex = _this2.getAttribute('activeIndex');\\n\\n        var tabbar = _this2._tabbarElement;\\n        if (activeIndex && tabbar.children.length > activeIndex) {\\n          tabbar.children[activeIndex].setAttribute('active', 'true');\\n        }\\n\\n        autoStyle.prepare(_this2);\\n        ModifierUtil.initModifier(_this2, scheme$22);\\n\\n        _this2._animatorFactory = new AnimatorFactory({\\n          animators: _animatorDict$6,\\n          baseClass: TabbarAnimator,\\n          baseClassName: 'TabbarAnimator',\\n          defaultAnimation: _this2.getAttribute('animation')\\n        });\\n      });\\n    }\\n  }, {\\n    key: 'connectedCallback',\\n    value: function connectedCallback() {\\n      var _this3 = this;\\n\\n      contentReady(this, function () {\\n        return _this3._updatePosition();\\n      });\\n    }\\n  }, {\\n    key: '_compile',\\n    value: function _compile() {\\n      if (this._contentElement && this._tabbarElement) {\\n        var content = util.findChild(this, '.tabbar__content');\\n        var bar = util.findChild(this, '.tabbar');\\n\\n        content.classList.add('ons-tabbar__content');\\n        bar.classList.add('ons-tabbar__footer');\\n      } else {\\n\\n        var _content = util.create('.ons-tabbar__content.tabbar__content');\\n        var tabbar = util.create('.tabbar.ons-tabbar__footer');\\n\\n        while (this.firstChild) {\\n          tabbar.appendChild(this.firstChild);\\n        }\\n\\n        this.appendChild(_content);\\n        this.appendChild(tabbar);\\n      }\\n    }\\n  }, {\\n    key: '_updatePosition',\\n    value: function _updatePosition() {\\n      var _this4 = this;\\n\\n      var position = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.getAttribute('position');\\n\\n      var top = this._top = position === 'top' || position === 'auto' && platform.isAndroid();\\n      var action = top ? util.addModifier : util.removeModifier;\\n\\n      action(this, 'top');\\n\\n      var page = util.findParent(this, 'ons-page');\\n      if (page) {\\n        contentReady(page, function () {\\n          _this4.style.top = top ? window.getComputedStyle(page._getContentElement(), null).getPropertyValue('padding-top') : '';\\n\\n          if (util.match(page.firstChild, 'ons-toolbar')) {\\n            action(page.firstChild, 'noshadow');\\n          }\\n        });\\n      }\\n\\n      internal$1.autoStatusBarFill(function () {\\n        var filled = util.findParent(_this4, function (e) {\\n          return e.hasAttribute('status-bar-fill');\\n        });\\n        util.toggleAttribute(_this4, 'status-bar-fill', top && !filled);\\n      });\\n    }\\n  }, {\\n    key: '_getTabbarElement',\\n    value: function _getTabbarElement() {\\n      return util.findChild(this, '.tabbar');\\n    }\\n\\n    /**\\n     * @return {String}\\n     */\\n\\n  }, {\\n    key: 'getTabbarId',\\n    value: function getTabbarId() {\\n      return this._tabbarId;\\n    }\\n\\n    /**\\n     * @return {Element/null}\\n     */\\n\\n  }, {\\n    key: '_getCurrentPageElement',\\n    value: function _getCurrentPageElement() {\\n      var pages = this._contentElement.children;\\n      var page = null;\\n      for (var i = 0; i < pages.length; i++) {\\n        if (pages[i].style.display !== 'none') {\\n          page = pages[i];\\n          break;\\n        }\\n      }\\n\\n      if (page && page.nodeName.toLowerCase() !== 'ons-page') {\\n        throw new Error('Invalid state: page element must be a \\\"ons-page\\\" element.');\\n      }\\n\\n      return page;\\n    }\\n  }, {\\n    key: '_switchPage',\\n\\n\\n    /**\\n     * @param {Element} element\\n     * @param {Object} options\\n     * @param {String} [options.animation]\\n     * @param {Function} [options.callback]\\n     * @param {Object} [options.animationOptions]\\n     * @param {Number} options.selectedTabIndex\\n     * @param {Number} options.previousTabIndex\\n     * @return {Promise} Resolves to the new page element.\\n     */\\n    value: function _switchPage(element, options) {\\n      var oldPageElement = this._oldPageElement || internal$1.nullElement;\\n      this._oldPageElement = element;\\n      var animator = this._animatorFactory.newAnimator(options);\\n\\n      return new Promise(function (resolve) {\\n        if (oldPageElement !== internal$1.nullElement) {\\n          oldPageElement._hide();\\n        }\\n\\n        animator.apply(element, oldPageElement, options.selectedTabIndex, options.previousTabIndex, function () {\\n          if (oldPageElement !== internal$1.nullElement) {\\n            oldPageElement.style.display = 'none';\\n          }\\n\\n          element.style.display = 'block';\\n          element._show();\\n\\n          if (options.callback instanceof Function) {\\n            options.callback();\\n          }\\n\\n          resolve(element);\\n        });\\n      });\\n    }\\n\\n    /**\\n     * @method setActiveTab\\n     * @signature setActiveTab(index, [options])\\n     * @param {Number} index\\n     *   [en]Tab index.[/en]\\n     *   [ja]タブのインデックスを指定します。[/ja]\\n     * @param {Object} [options]\\n     *   [en]Parameter object.[/en]\\n     *   [ja]オプションを指定するオブジェクト。[/ja]\\n     * @param {Boolean} [options.keepPage]\\n     *   [en]If true the page will not be changed.[/en]\\n     *   [ja]タブバーが現在表示しているpageを変えない場合にはtrueを指定します。[/ja]\\n     * @param {String} [options.animation]\\n     *   [en]Animation name. Available animations are `\\\"fade\\\"`, `\\\"slide\\\"` and `\\\"none\\\"`.[/en]\\n     *   [ja]アニメーション名を指定します。`\\\"fade\\\"`、`\\\"slide\\\"`、`\\\"none\\\"`のいずれかを指定できます。[/ja]\\n     * @param {String} [options.animationOptions]\\n     *   [en]Specify the animation's duration, delay and timing. E.g. `{duration: 0.2, delay: 0.4, timing: 'ease-in'}`.[/en]\\n     *   [ja]アニメーション時のduration, delay, timingを指定します。e.g. {duration: 0.2, delay: 0.4, timing: 'ease-in'}[/ja]\\n     * @description\\n     *   [en]Show specified tab page. Animations and other options can be specified by the second parameter.[/en]\\n     *   [ja]指定したインデックスのタブを表示します。アニメーションなどのオプションを指定できます。[/ja]\\n     * @return {Promise}\\n     *   [en]Resolves to the new page element.[/en]\\n     *   [ja][/ja]\\n     */\\n\\n  }, {\\n    key: 'setActiveTab',\\n    value: function setActiveTab(index) {\\n      var _this5 = this;\\n\\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\\n\\n      if (options && (typeof options === 'undefined' ? 'undefined' : _typeof(options)) != 'object') {\\n        throw new Error('options must be an object. You supplied ' + options);\\n      }\\n\\n      options.animationOptions = util.extend(options.animationOptions || {}, AnimatorFactory.parseAnimationOptionsString(this.getAttribute('animation-options')));\\n\\n      if (!options.animation && this.hasAttribute('animation')) {\\n        options.animation = this.getAttribute('animation');\\n      }\\n\\n      var previousTab = this._getActiveTabElement(),\\n          selectedTab = this._getTabElement(index),\\n          previousTabIndex = this.getActiveTabIndex(),\\n          selectedTabIndex = index,\\n          previousPageElement = this._getCurrentPageElement();\\n\\n      if (!selectedTab) {\\n        return Promise.reject('Specified index does not match any tab.');\\n      }\\n\\n      if (selectedTabIndex === previousTabIndex) {\\n        util.triggerElementEvent(this, 'reactive', {\\n          index: selectedTabIndex,\\n          tabItem: selectedTab\\n        });\\n\\n        return Promise.resolve(previousPageElement);\\n      }\\n\\n      var canceled = false;\\n\\n      util.triggerElementEvent(this, 'prechange', {\\n        index: selectedTabIndex,\\n        tabItem: selectedTab,\\n        cancel: function cancel() {\\n          return canceled = true;\\n        }\\n      });\\n\\n      if (canceled) {\\n        selectedTab.setInactive();\\n        if (previousTab) {\\n          previousTab.setActive();\\n        }\\n        return Promise.reject('Canceled in prechange event.');\\n      }\\n\\n      selectedTab.setActive();\\n\\n      var params = _extends({}, options, {\\n        previousTabIndex: previousTabIndex,\\n        selectedTabIndex: selectedTabIndex\\n      });\\n\\n      if (previousTab) {\\n        previousTab.setInactive();\\n      } else {\\n        params.animation = 'none';\\n      }\\n\\n      return new Promise(function (resolve) {\\n        selectedTab._loadPageElement(_this5._contentElement, function (pageElement) {\\n          pageElement.removeAttribute('style');\\n\\n          _this5._switchPage(pageElement, params).then(function (page) {\\n            util.triggerElementEvent(_this5, 'postchange', {\\n              index: selectedTabIndex,\\n              tabItem: selectedTab\\n            });\\n\\n            return resolve(page);\\n          });\\n        });\\n      });\\n    }\\n\\n    /**\\n     * @method setTabbarVisibility\\n     * @signature setTabbarVisibility(visible)\\n     * @param {Boolean} visible\\n     * @description\\n     *   [en]Used to hide or show the tab bar.[/en]\\n     *   [ja][/ja]\\n     */\\n\\n  }, {\\n    key: 'setTabbarVisibility',\\n    value: function setTabbarVisibility(visible) {\\n      this._contentElement.style[this._top ? 'top' : 'bottom'] = visible ? '' : '0px';\\n      this._getTabbarElement().style.display = visible ? '' : 'none';\\n    }\\n  }, {\\n    key: 'show',\\n    value: function show() {\\n      this.setTabbarVisibility(true);\\n    }\\n  }, {\\n    key: 'hide',\\n    value: function hide() {\\n      this.setTabbarVisibility(false);\\n    }\\n\\n    /**\\n     * @property visible\\n     * @readonly\\n     * @type {Boolean}\\n     * @description\\n     *   [en]Whether the tabbar is visible or not.[/en]\\n     *   [ja]タブバーが見える場合に`true`。[/ja]\\n     */\\n\\n  }, {\\n    key: 'getActiveTabIndex',\\n\\n\\n    /**\\n     * @method getActiveTabIndex\\n     * @signature getActiveTabIndex()\\n     * @return {Number}\\n     *   [en]The index of the currently active tab.[/en]\\n     *   [ja]現在アクティブになっているタブのインデックスを返します。[/ja]\\n     * @description\\n     *   [en]Returns tab index on current active tab. If active tab is not found, returns -1.[/en]\\n     *   [ja]現在アクティブになっているタブのインデックスを返します。現在アクティブなタブがない場合には-1を返します。[/ja]\\n     */\\n    value: function getActiveTabIndex() {\\n      var tabs = this._getTabbarElement().children;\\n\\n      for (var i = 0; i < tabs.length; i++) {\\n        if (tabs[i] instanceof TabElement && tabs[i].isActive && tabs[i].isActive()) {\\n          return i;\\n        }\\n      }\\n\\n      return -1;\\n    }\\n\\n    /**\\n     * @return {Number} When active tab is not found, returns -1.\\n     */\\n\\n  }, {\\n    key: '_getActiveTabElement',\\n    value: function _getActiveTabElement() {\\n      return this._getTabElement(this.getActiveTabIndex());\\n    }\\n\\n    /**\\n     * @return {Element}\\n     */\\n\\n  }, {\\n    key: '_getTabElement',\\n    value: function _getTabElement(index) {\\n      return this._getTabbarElement().children[index];\\n    }\\n  }, {\\n    key: 'disconnectedCallback',\\n    value: function disconnectedCallback() {}\\n  }, {\\n    key: '_show',\\n    value: function _show() {\\n      var currentPageElement = this._getCurrentPageElement();\\n      if (currentPageElement) {\\n        currentPageElement._show();\\n      }\\n    }\\n  }, {\\n    key: '_hide',\\n    value: function _hide() {\\n      var currentPageElement = this._getCurrentPageElement();\\n      if (currentPageElement) {\\n        currentPageElement._hide();\\n      }\\n    }\\n  }, {\\n    key: '_destroy',\\n    value: function _destroy() {\\n      var tabs = this._getTabbarElement().children;\\n      for (var i = tabs.length - 1; i >= 0; i--) {\\n        tabs[i].remove();\\n      }\\n      this.remove();\\n    }\\n  }, {\\n    key: 'attributeChangedCallback',\\n    value: function attributeChangedCallback(name, last, current) {\\n      if (name === 'modifier') {\\n        return ModifierUtil.onModifierChanged(last, current, this, scheme$22);\\n      }\\n    }\\n  }, {\\n    key: '_contentElement',\\n    get: function get() {\\n      return util.findChild(this, '.tabbar__content');\\n    }\\n  }, {\\n    key: '_tabbarElement',\\n    get: function get() {\\n      return util.findChild(this, '.tabbar');\\n    }\\n  }, {\\n    key: 'topPage',\\n    get: function get() {\\n      return this._getCurrentPageElement();\\n    }\\n  }, {\\n    key: 'pages',\\n    get: function get() {\\n      return util.arrayFrom(this._contentElement.children);\\n    }\\n  }, {\\n    key: 'visible',\\n    get: function get() {\\n      return this._getTabbarElement().style.display !== 'none';\\n    }\\n  }], [{\\n    key: 'registerAnimator',\\n\\n\\n    /**\\n     * @param {String} name\\n     * @param {Function} Animator\\n     */\\n    value: function registerAnimator(name, Animator) {\\n      if (!(Animator.prototype instanceof TabbarAnimator)) {\\n        throw new Error('\\\"Animator\\\" param must inherit TabbarElement.TabbarAnimator');\\n      }\\n      _animatorDict$6[name] = Animator;\\n    }\\n  }, {\\n    key: 'observedAttributes',\\n    get: function get() {\\n      return ['modifier'];\\n    }\\n  }, {\\n    key: 'rewritables',\\n    get: function get() {\\n      return rewritables$3;\\n    }\\n  }, {\\n    key: 'TabbarAnimator',\\n    get: function get() {\\n      return TabbarAnimator;\\n    }\\n  }, {\\n    key: 'events',\\n    get: function get() {\\n      return ['prechange', 'postchange', 'reactive'];\\n    }\\n  }, {\\n    key: 'animators',\\n    get: function get() {\\n      return _animatorDict$6;\\n    }\\n  }]);\\n  return TabbarElement;\\n}(BaseElement);\\n\\ncustomElements.define('ons-tabbar', TabbarElement);\\n\\n/*\\nCopyright 2013-2015 ASIAL CORPORATION\\n\\nLicensed under the Apache License, Version 2.0 (the \\\"License\\\");\\nyou may not use this file except in compliance with the License.\\nYou may obtain a copy of the License at\\n\\n   http://www.apache.org/licenses/LICENSE-2.0\\n\\nUnless required by applicable law or agreed to in writing, software\\ndistributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\nSee the License for the specific language governing permissions and\\nlimitations under the License.\\n\\n*/\\n\\nvar defaultClassName$15 = 'tabbar__item';\\n\\nvar scheme$21 = {\\n  '': 'tabbar--*__item',\\n  '.tabbar__button': 'tabbar--*__button'\\n};\\n\\nvar templateSource$1 = util.createElement('\\\\n  <div>\\\\n    <input type=\\\"radio\\\" style=\\\"display: none\\\">\\\\n    <button class=\\\"tabbar__button\\\"></button>\\\\n  </div>\\\\n');\\n\\nvar defaultInnerTemplateSource = util.createElement('\\\\n  <div>\\\\n    <div class=\\\"tabbar__icon\\\">\\\\n      <ons-icon icon=\\\"ion-cloud\\\"></ons-icon>\\\\n    </div>\\\\n    <div class=\\\"tabbar__label\\\">label</div>\\\\n    <div class=\\\"tabbar__badge notification\\\">1</div>\\\\n  </div>\\\\n');\\n\\n/**\\n * @element ons-tab\\n * @category tabbar\\n * @description\\n *   [en]Represents a tab inside tab bar. Each `<ons-tab>` represents a page.[/en]\\n *   [ja]\\n *     タブバーに配置される各アイテムのコンポーネントです。それぞれのons-tabはページを表します。\\n *     ons-tab要素の中には、タブに表示されるコンテンツを直接記述することが出来ます。\\n *   [/ja]\\n * @codepen pGuDL\\n * @tutorial vanilla/Reference/tabbar\\n * @guide multiple-page-navigation\\n *   [en]Managing multiple pages.[/en]\\n *   [ja]Managing multiple pages[/ja]]\\n * @guide templates\\n *   [en]Defining multiple pages in single html[/en]\\n *   [ja]複数のページを1つのHTMLに記述する[/ja]\\n * @seealso ons-tabbar\\n *   [en]ons-tabbar component[/en]\\n *   [ja]ons-tabbarコンポーネント[/ja]\\n * @seealso ons-page\\n *   [en]ons-page component[/en]\\n *   [ja]ons-pageコンポーネント[/ja]\\n * @seealso ons-icon\\n *   [en]ons-icon component[/en]\\n *   [ja]ons-iconコンポーネント[/ja]\\n * @example\\n * <ons-tabbar>\\n *   <ons-tab\\n *     page=\\\"home.html\\\"\\n *     label=\\\"Home\\\"\\n *     active>\\n *   </ons-tab>\\n *   <ons-tab\\n *     page=\\\"settings.html\\\"\\n *     label=\\\"Settings\\\"\\n *     active>\\n *   </ons-tab>\\n * </ons-tabbar>\\n *\\n * <ons-template id=\\\"home.html\\\">\\n *   ...\\n * </ons-template>\\n *\\n * <ons-template id=\\\"settings.html\\\">\\n *   ...\\n * </ons-template>\\n\\n */\\n\\nvar TabElement = function (_BaseElement) {\\n  inherits(TabElement, _BaseElement);\\n\\n  function TabElement() {\\n    classCallCheck(this, TabElement);\\n    return possibleConstructorReturn(this, (TabElement.__proto__ || Object.getPrototypeOf(TabElement)).apply(this, arguments));\\n  }\\n\\n  createClass(TabElement, [{\\n    key: 'init',\\n\\n\\n    /**\\n     * @attribute page\\n     * @initonly\\n     * @type {String}\\n     * @description\\n     *   [en]The page that is displayed when the tab is tapped.[/en]\\n     *   [ja]ons-tabが参照するページへのURLを指定します。[/ja]\\n     */\\n\\n    /**\\n     * @attribute icon\\n     * @type {String}\\n     * @description\\n     *   [en]\\n     *     The icon name for the tab. Can specify the same icon name as `<ons-icon>`.\\n     *     If you need to use your own icon, create a CSS class with `background-image` or any CSS properties and specify the name of your CSS class here.\\n     *   [/en]\\n     *   [ja]\\n     *     アイコン名を指定します。ons-iconと同じアイコン名を指定できます。\\n     *     個別にアイコンをカスタマイズする場合は、background-imageなどのCSSスタイルを用いて指定できます。\\n     *   [/ja]\\n     */\\n\\n    /**\\n     * @attribute active-icon\\n     * @type {String}\\n     * @description\\n     *   [en]The name of the icon when the tab is active.[/en]\\n     *   [ja]アクティブの際のアイコン名を指定します。[/ja]\\n     */\\n\\n    /**\\n     * @attribute label\\n     * @type {String}\\n     * @description\\n     *   [en]The label of the tab item.[/en]\\n     *   [ja]アイコン下に表示されるラベルを指定します。[/ja]\\n     */\\n\\n    /**\\n     * @attribute badge\\n     * @type {String}\\n     * @description\\n     *   [en]Display a notification badge on top of the tab.[/en]\\n     *   [ja]バッジに表示する内容を指定します。[/ja]\\n     */\\n\\n    /**\\n     * @attribute active\\n     * @description\\n     *   [en]This attribute should be set to the tab that is active by default.[/en]\\n     *   [ja][/ja]\\n     */\\n\\n    value: function init() {\\n      var _this2 = this;\\n\\n      this._pageLoader = defaultPageLoader;\\n      this._page = null;\\n\\n      if (this.hasAttribute('label') || this.hasAttribute('icon') || this.hasAttribute('badge')) {\\n        this._compile();\\n      } else {\\n        contentReady(this, function () {\\n          _this2._compile();\\n        });\\n      }\\n\\n      this._boundOnClick = this._onClick.bind(this);\\n    }\\n  }, {\\n    key: '_getPageTarget',\\n    value: function _getPageTarget() {\\n      return this.page || this.getAttribute('page');\\n    }\\n  }, {\\n    key: '_templateLoaded',\\n    value: function _templateLoaded() {\\n      if (this.children.length == 0) {\\n        return false;\\n      }\\n\\n      var hasInput = this._input.getAttribute('type') === 'radio';\\n      var hasButton = this._button;\\n\\n      return !!(hasInput && hasButton);\\n    }\\n  }, {\\n    key: '_compile',\\n    value: function _compile() {\\n      autoStyle.prepare(this);\\n\\n      this.classList.add(defaultClassName$15);\\n\\n      if (!this._templateLoaded()) {\\n        var fragment = document.createDocumentFragment();\\n        var hasChildren = false;\\n\\n        while (this.childNodes[0]) {\\n          var node = this.childNodes[0];\\n          this.removeChild(node);\\n          fragment.appendChild(node);\\n\\n          if (node.nodeType == Node.ELEMENT_NODE) {\\n            hasChildren = true;\\n          }\\n        }\\n\\n        var template = templateSource$1.cloneNode(true);\\n        while (template.children[0]) {\\n          this.appendChild(template.children[0]);\\n        }\\n\\n        if (hasChildren) {\\n          this._button.appendChild(fragment);\\n          this._hasDefaultTemplate = false;\\n        } else {\\n          this._hasDefaultTemplate = true;\\n          this._updateDefaultTemplate();\\n        }\\n      }\\n\\n      ModifierUtil.initModifier(this, scheme$21);\\n      this._updateRipple();\\n    }\\n  }, {\\n    key: '_updateRipple',\\n    value: function _updateRipple() {\\n      util.updateRipple(this.querySelector('.tabbar__button'), this.hasAttribute('ripple'));\\n    }\\n  }, {\\n    key: '_updateDefaultTemplate',\\n    value: function _updateDefaultTemplate() {\\n      if (!this._hasDefaultTemplate) {\\n        return;\\n      }\\n\\n      var button = this._button;\\n      var template = defaultInnerTemplateSource.cloneNode(true);\\n      if (button.children.length === 0) {\\n        while (template.children[0]) {\\n          button.appendChild(template.children[0]);\\n        }\\n      }\\n\\n      if (!button.querySelector('.tabbar__icon')) {\\n        button.insertBefore(template.querySelector('.tabbar__icon'), button.firstChild);\\n      }\\n\\n      if (!button.querySelector('.tabbar__label')) {\\n        button.appendChild(template.querySelector('.tabbar__label'));\\n      }\\n\\n      if (!button.querySelector('.tabbar__badge')) {\\n        button.appendChild(template.querySelector('.tabbar__badge'));\\n      }\\n\\n      var icon = this.getAttribute('icon');\\n      var label = this.getAttribute('label');\\n      var badge = this.getAttribute('badge');\\n\\n      var iconElement = button.querySelector('.tabbar__icon').children[0];\\n      var labelElement = button.querySelector('.tabbar__label');\\n      var badgeElement = button.querySelector('.tabbar__badge');\\n\\n      if (iconElement) {\\n        if (typeof icon === 'string') {\\n          var last = iconElement.getAttribute('icon');\\n          iconElement.setAttribute('icon', icon);\\n          // dirty fix for https://github.com/OnsenUI/OnsenUI/issues/1654\\n          iconElement.attributeChangedCallback('icon', last, icon);\\n        } else {\\n          iconElement.parentElement.remove();\\n        }\\n      }\\n\\n      if (labelElement) {\\n        if (typeof label === 'string') {\\n          labelElement.textContent = label;\\n        } else {\\n          labelElement.remove();\\n        }\\n      }\\n\\n      if (badgeElement) {\\n        if (typeof badge === 'string') {\\n          badgeElement.textContent = badge;\\n        } else {\\n          badgeElement.remove();\\n        }\\n      }\\n    }\\n  }, {\\n    key: '_onClick',\\n    value: function _onClick() {\\n      if (this.onClick instanceof Function) {\\n        this.onClick();\\n      } else {\\n        var tabbar = this._findTabbarElement();\\n        if (tabbar) {\\n          tabbar.setActiveTab(this._findTabIndex());\\n        }\\n      }\\n    }\\n  }, {\\n    key: 'setActive',\\n    value: function setActive() {\\n      this._input.checked = true;\\n      this.classList.add('active');\\n      this.setAttribute('active', '');\\n\\n      if (this.hasAttribute('icon') && this.hasAttribute('active-icon')) {\\n        var icon = this.getAttribute('active-icon');\\n        var iconElement = this._button.querySelector('.tabbar__icon').children[0];\\n        iconElement.setAttribute('icon', icon);\\n      }\\n\\n      util.arrayFrom(this.querySelectorAll('[ons-tab-inactive], ons-tab-inactive')).forEach(function (element) {\\n        return element.style.display = 'none';\\n      });\\n      util.arrayFrom(this.querySelectorAll('[ons-tab-active], ons-tab-active')).forEach(function (element) {\\n        return element.style.display = 'inherit';\\n      });\\n    }\\n  }, {\\n    key: 'setInactive',\\n    value: function setInactive() {\\n      this._input.checked = false;\\n      this.classList.remove('active');\\n      this.removeAttribute('active');\\n\\n      if (this.hasAttribute('icon')) {\\n        var icon = this.getAttribute('icon');\\n        var iconElement = this._button.querySelector('.tabbar__icon').children[0];\\n        iconElement.setAttribute('icon', icon);\\n      }\\n\\n      util.arrayFrom(this.querySelectorAll('[ons-tab-inactive], ons-tab-inactive')).forEach(function (element) {\\n        return element.style.display = 'inherit';\\n      });\\n      util.arrayFrom(this.querySelectorAll('[ons-tab-active], ons-tab-active')).forEach(function (element) {\\n        return element.style.display = 'none';\\n      });\\n    }\\n\\n    /**\\n     * @param {Element} parent\\n     * @param {Function} callback\\n     */\\n\\n  }, {\\n    key: '_loadPageElement',\\n    value: function _loadPageElement(parent, callback) {\\n      var _this3 = this;\\n\\n      if (!this._loadedPage && !this._getPageTarget()) {\\n        var pages = this._findTabbarElement().pages;\\n        var index = this._findTabIndex();\\n        if (!pages[index]) {\\n          throw Error('Page was not provided to <ons-tab> index ' + index);\\n        }\\n        callback(pages[index]);\\n      } else if (this._loadingPage) {\\n        this._loadingPage.then(function (pageElement) {\\n          callback(pageElement);\\n        });\\n      } else if (!this._loadedPage) {\\n        var deferred = util.defer();\\n        this._loadingPage = deferred.promise;\\n\\n        this._pageLoader.load({ page: this._getPageTarget(), parent: parent }, function (pageElement) {\\n          _this3._loadedPage = pageElement;\\n          deferred.resolve(pageElement);\\n          delete _this3._loadingPage;\\n\\n          callback(pageElement);\\n        });\\n      } else {\\n        callback(this._loadedPage);\\n      }\\n    }\\n  }, {\\n    key: 'isActive',\\n\\n\\n    /**\\n     * @return {Boolean}\\n     */\\n    value: function isActive() {\\n      return this.classList.contains('active');\\n    }\\n  }, {\\n    key: 'disconnectedCallback',\\n    value: function disconnectedCallback() {\\n      this.removeEventListener('click', this._boundOnClick, false);\\n      if (this._loadedPage) {\\n        this._pageLoader.unload(this._loadedPage);\\n        this._loadedPage = null;\\n      }\\n    }\\n  }, {\\n    key: 'connectedCallback',\\n    value: function connectedCallback() {\\n      var _this4 = this;\\n\\n      contentReady(this, function () {\\n        _this4._ensureElementPosition();\\n\\n        var tabbar = _this4._findTabbarElement();\\n\\n        if (tabbar.hasAttribute('modifier')) {\\n          var prefix = _this4.hasAttribute('modifier') ? _this4.getAttribute('modifier') + ' ' : '';\\n          _this4.setAttribute('modifier', prefix + tabbar.getAttribute('modifier'));\\n        }\\n\\n        var onReady = function onReady() {\\n          if (_this4._getPageTarget() && !_this4.hasLoaded) {\\n            _this4.hasLoaded = true;\\n            _this4._loadPageElement(tabbar._contentElement, function (pageElement) {\\n              pageElement.style.display = 'none';\\n              tabbar._contentElement.appendChild(pageElement);\\n            });\\n          }\\n\\n          if (_this4.hasAttribute('active')) {\\n            tabbar.setActiveTab(_this4._findTabIndex());\\n          }\\n        };\\n\\n        TabbarElement.rewritables.ready(tabbar, onReady);\\n\\n        _this4.addEventListener('click', _this4._boundOnClick, false);\\n      });\\n    }\\n  }, {\\n    key: '_findTabbarElement',\\n    value: function _findTabbarElement() {\\n      if (this.parentNode && this.parentNode.nodeName.toLowerCase() === 'ons-tabbar') {\\n        return this.parentNode;\\n      }\\n\\n      if (this.parentNode.parentNode && this.parentNode.parentNode.nodeName.toLowerCase() === 'ons-tabbar') {\\n        return this.parentNode.parentNode;\\n      }\\n\\n      return null;\\n    }\\n  }, {\\n    key: '_findTabIndex',\\n    value: function _findTabIndex() {\\n      var elements = this.parentNode.children;\\n      for (var i = 0; i < elements.length; i++) {\\n        if (this === elements[i]) {\\n          return i;\\n        }\\n      }\\n    }\\n  }, {\\n    key: '_ensureElementPosition',\\n    value: function _ensureElementPosition() {\\n      if (!this._findTabbarElement()) {\\n        throw new Error('This ons-tab element is must be child of ons-tabbar element.');\\n      }\\n    }\\n  }, {\\n    key: 'attributeChangedCallback',\\n    value: function attributeChangedCallback(name, last, current) {\\n      var _this5 = this;\\n\\n      switch (name) {\\n        case 'class':\\n          if (!this.classList.contains(defaultClassName$15)) {\\n            this.className = defaultClassName$15 + ' ' + current;\\n          }\\n          break;\\n        case 'modifier':\\n          contentReady(this, function () {\\n            return ModifierUtil.onModifierChanged(last, current, _this5, scheme$21);\\n          });\\n          break;\\n        case 'ripple':\\n          this._templateLoaded() && contentReady(this, function () {\\n            return _this5._updateRipple();\\n          });\\n          break;\\n        case 'icon':\\n        case 'label':\\n        case 'badge':\\n          contentReady(this, function () {\\n            return _this5._updateDefaultTemplate();\\n          });\\n          break;\\n        case 'page':\\n          if (typeof current === 'string') {\\n            this._page = current;\\n          }\\n          break;\\n      }\\n    }\\n  }, {\\n    key: 'page',\\n    set: function set(page) {\\n      this._page = page;\\n    },\\n    get: function get() {\\n      return this._page;\\n    }\\n  }, {\\n    key: 'pageLoader',\\n    set: function set(loader) {\\n      if (!(loader instanceof PageLoader)) {\\n        throw Error('First parameter must be an instance of PageLoader.');\\n      }\\n      this._pageLoader = loader;\\n    },\\n    get: function get() {\\n      return this._pageLoader;\\n    }\\n  }, {\\n    key: '_input',\\n    get: function get() {\\n      return this.children[0];\\n    }\\n  }, {\\n    key: '_button',\\n    get: function get() {\\n      return util.findChild(this, '.tabbar__button');\\n    }\\n  }, {\\n    key: 'pageElement',\\n    get: function get() {\\n      if (this._loadedPage) {\\n        return this._loadedPage;\\n      }\\n\\n      var tabbar = this._findTabbarElement();\\n      var index = this._findTabIndex();\\n\\n      return tabbar._contentElement.children[index];\\n    }\\n  }], [{\\n    key: 'observedAttributes',\\n    get: function get() {\\n      return ['modifier', 'ripple', 'icon', 'label', 'page', 'badge', 'class'];\\n    }\\n  }]);\\n  return TabElement;\\n}(BaseElement);\\n\\ncustomElements.define('ons-tab', TabElement);\\n\\n/*\\nCopyright 2013-2015 ASIAL CORPORATION\\n\\nLicensed under the Apache License, Version 2.0 (the \\\"License\\\");\\nyou may not use this file except in compliance with the License.\\nYou may obtain a copy of the License at\\n\\n   http://www.apache.org/licenses/LICENSE-2.0\\n\\nUnless required by applicable law or agreed to in writing, software\\ndistributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\nSee the License for the specific language governing permissions and\\nlimitations under the License.\\n\\n*/\\n\\nvar defaultClassName$16 = 'toolbar-button';\\n\\nvar scheme$23 = { '': 'toolbar-button--*' };\\n\\n/**\\n * @element ons-toolbar-button\\n * @category page\\n * @modifier material\\n *   [en]Material Design toolbar button.[/en]\\n *   [ja][/ja]\\n * @modifier outline\\n *   [en]A button with an outline.[/en]\\n *   [ja]アウトラインをもったボタンを表示します。[/ja]\\n * @description\\n *   [en]Button component for ons-toolbar and ons-bottom-toolbar.[/en]\\n *   [ja]ons-toolbarあるいはons-bottom-toolbarに設置できるボタン用コンポーネントです。[/ja]\\n * @codepen aHmGL\\n * @tutorial vanilla/Reference/page\\n * @guide adding-a-toolbar\\n *   [en]Adding a toolbar[/en]\\n *   [ja]ツールバーの追加[/ja]\\n * @seealso ons-toolbar\\n *   [en]The `<ons-toolbar>` component displays a navigation bar at the top of a page.[/en]\\n *   [ja]ons-toolbarコンポーネント[/ja]\\n * @seealso ons-back-button\\n *   [en]The `<ons-back-button>` displays a back button in the navigation bar.[/en]\\n *   [ja]ons-back-buttonコンポーネント[/ja]\\n * @example\\n * <ons-toolbar>\\n *   <div class=\\\"left\\\">\\n *     <ons-toolbar-button>\\n *       Button\\n *     </ons-toolbar-button>\\n *   </div>\\n *   <div class=\\\"center\\\">\\n *     Title\\n *   </div>\\n *   <div class=\\\"right\\\">\\n *     <ons-toolbar-button>\\n *       <ons-icon icon=\\\"ion-navicon\\\" size=\\\"28px\\\"></ons-icon>\\n *     </ons-toolbar-button>\\n *   </div>\\n * </ons-toolbar>\\n */\\n\\nvar ToolbarButtonElement = function (_BaseElement) {\\n  inherits(ToolbarButtonElement, _BaseElement);\\n\\n  function ToolbarButtonElement() {\\n    classCallCheck(this, ToolbarButtonElement);\\n    return possibleConstructorReturn(this, (ToolbarButtonElement.__proto__ || Object.getPrototypeOf(ToolbarButtonElement)).apply(this, arguments));\\n  }\\n\\n  createClass(ToolbarButtonElement, [{\\n    key: 'init',\\n\\n\\n    /**\\n     * @attribute modifier\\n     * @type {String}\\n     * @description\\n     *   [en]The appearance of the button.[/en]\\n     *   [ja]ボタンの表現を指定します。[/ja]\\n     */\\n\\n    /**\\n     * @attribute disabled\\n     * @description\\n     *   [en]Specify if button should be disabled.[/en]\\n     *   [ja]ボタンを無効化する場合は指定してください。[/ja]\\n     */\\n\\n    value: function init() {\\n      this._compile();\\n    }\\n\\n    /**\\n     * @property disabled\\n     * @type {Boolean}\\n     * @description\\n     *   [en]Whether the element is disabled or not.[/en]\\n     *   [ja]無効化されている場合に`true`。[/ja]\\n     */\\n\\n  }, {\\n    key: '_compile',\\n    value: function _compile() {\\n      autoStyle.prepare(this);\\n\\n      this.classList.add(defaultClassName$16);\\n\\n      ModifierUtil.initModifier(this, scheme$23);\\n    }\\n  }, {\\n    key: 'attributeChangedCallback',\\n    value: function attributeChangedCallback(name, last, current) {\\n      switch (name) {\\n        case 'class':\\n          if (!this.classList.contains(defaultClassName$16)) {\\n            this.className = defaultClassName$16 + ' ' + current;\\n          }\\n          break;\\n        case 'modifier':\\n          ModifierUtil.onModifierChanged(last, current, this, scheme$23);\\n          break;\\n      }\\n    }\\n  }, {\\n    key: 'disabled',\\n    set: function set(value) {\\n      return util.toggleAttribute(this, 'disabled', value);\\n    },\\n    get: function get() {\\n      return this.hasAttribute('disabled');\\n    }\\n  }], [{\\n    key: 'observedAttributes',\\n    get: function get() {\\n      return ['modifier', 'class'];\\n    }\\n  }]);\\n  return ToolbarButtonElement;\\n}(BaseElement);\\n\\ncustomElements.define('ons-toolbar-button', ToolbarButtonElement);\\n\\n/*\\nCopyright 2013-2015 ASIAL CORPORATION\\nLicensed under the Apache License, Version 2.0 (the \\\"License\\\");\\nyou may not use this file except in compliance with the License.\\nYou may obtain a copy of the License at\\n   http://www.apache.org/licenses/LICENSE-2.0\\nUnless required by applicable law or agreed to in writing, software\\ndistributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\nSee the License for the specific language governing permissions and\\nlimitations under the License.\\n*/\\n\\nvar defaultClassName$17 = 'range';\\n\\nvar scheme$24 = {\\n  '': 'range--*',\\n  '.range__input': 'range--*__input'\\n};\\n\\nvar INPUT_ATTRIBUTES$2 = ['autofocus', 'disabled', 'inputmode', 'max', 'min', 'name', 'placeholder', 'readonly', 'size', 'step', 'validator', 'value'];\\n\\n/**\\n * @element ons-range\\n * @category form\\n * @modifier material\\n *   [en]Material Design slider[/en]\\n *   [ja][/ja]\\n * @description\\n *   [en]\\n *     Range input component. Used to display a draggable slider.\\n *\\n *     Works very similar to the `<input type=\\\"range\\\">` element.\\n *   [/en]\\n *   [ja][/ja]\\n * @codepen xZQomM\\n * @tutorial vanilla/Reference/range\\n * @guide using-modifier [en]More details about the `modifier` attribute[/en][ja]modifier属性の使い方[/ja]\\n * @seealso ons-input\\n *   [en]The `<ons-input>` component is used to display text inputs, radio buttons and checkboxes.[/en]\\n *   [ja][/ja]\\n * @example\\n * <ons-range value=\\\"20\\\"></ons-range>\\n * <ons-range modifier=\\\"material\\\" value=\\\"10\\\"></range>\\n */\\n\\n/**\\n * @attribute disabled\\n * @description\\n *   [en]Whether the element is disabled or not.[/en]\\n *   [ja]無効化されている場合に`true`。[/ja]\\n */\\n\\nvar RangeElement = function (_BaseElement) {\\n  inherits(RangeElement, _BaseElement);\\n\\n  function RangeElement() {\\n    classCallCheck(this, RangeElement);\\n    return possibleConstructorReturn(this, (RangeElement.__proto__ || Object.getPrototypeOf(RangeElement)).apply(this, arguments));\\n  }\\n\\n  createClass(RangeElement, [{\\n    key: 'init',\\n    value: function init() {\\n      var _this2 = this;\\n\\n      contentReady(this, function () {\\n        _this2._compile();\\n        _this2._updateBoundAttributes();\\n        _this2._onChange();\\n      });\\n    }\\n  }, {\\n    key: '_compile',\\n    value: function _compile() {\\n      this.classList.add(defaultClassName$17);\\n\\n      autoStyle.prepare(this);\\n\\n      if (!util.findChild(this, '.range__input')) {\\n        var input = document.createElement('input');\\n        input.setAttribute('type', 'range');\\n        input.classList.add('range__input');\\n        this.appendChild(input);\\n      }\\n\\n      ModifierUtil.initModifier(this, scheme$24);\\n\\n      this._updateDisabled();\\n    }\\n  }, {\\n    key: '_onChange',\\n    value: function _onChange() {\\n      this._input.style.backgroundSize = 100 * this._ratio + '% 2px';\\n    }\\n  }, {\\n    key: '_onDragstart',\\n    value: function _onDragstart(e) {\\n      e.stopPropagation();\\n      e.gesture.stopPropagation();\\n    }\\n  }, {\\n    key: '_updateDisabled',\\n    value: function _updateDisabled() {\\n      if (this.hasAttribute('disabled')) {\\n        ModifierUtil.addModifier(this, 'disabled');\\n      } else {\\n        ModifierUtil.removeModifier(this, 'disabled');\\n      }\\n    }\\n  }, {\\n    key: 'attributeChangedCallback',\\n    value: function attributeChangedCallback(name, last, current) {\\n      var _this3 = this;\\n\\n      if (name === 'modifier') {\\n        ModifierUtil.onModifierChanged(last, current, this, scheme$24);\\n      } else if (name === 'class') {\\n        if (!this.classList.contains(defaultClassName$17)) {\\n          this.className = defaultClassName$17 + ' ' + current;\\n        }\\n      } else if (name === 'disabled') {\\n        this._updateDisabled();\\n      }\\n\\n      if (INPUT_ATTRIBUTES$2.indexOf(name) >= 0) {\\n        contentReady(this, function () {\\n          _this3._updateBoundAttributes();\\n\\n          if (name === 'min' || name === 'max') {\\n            _this3._onChange();\\n          }\\n        });\\n      }\\n    }\\n  }, {\\n    key: 'connectedCallback',\\n    value: function connectedCallback() {\\n      this.addEventListener('dragstart', this._onDragstart);\\n      this.addEventListener('input', this._onChange);\\n    }\\n  }, {\\n    key: 'disconnectedCallback',\\n    value: function disconnectedCallback() {\\n      this.removeEventListener('dragstart', this._onDragstart);\\n      this.removeEventListener('input', this._onChange);\\n    }\\n  }, {\\n    key: '_updateBoundAttributes',\\n    value: function _updateBoundAttributes() {\\n      var _this4 = this;\\n\\n      INPUT_ATTRIBUTES$2.forEach(function (attr) {\\n        if (_this4.hasAttribute(attr)) {\\n          _this4._input.setAttribute(attr, _this4.getAttribute(attr));\\n        } else {\\n          _this4._input.removeAttribute(attr);\\n        }\\n      });\\n    }\\n  }, {\\n    key: '_ratio',\\n    get: function get() {\\n      // Returns the current ratio.\\n      var min = this._input.min === '' ? 0 : parseInt(this._input.min);\\n      var max = this._input.max === '' ? 100 : parseInt(this._input.max);\\n\\n      return (this.value - min) / (max - min);\\n    }\\n  }, {\\n    key: '_input',\\n    get: function get() {\\n      return this.querySelector('input.range__input');\\n    }\\n\\n    /**\\n     * @property disabled\\n     * @type {Boolean}\\n     * @description\\n     *   [en]Whether the element is disabled or not.[/en]\\n     *   [ja]無効化されている場合に`true`。[/ja]\\n     */\\n\\n  }, {\\n    key: 'disabled',\\n    set: function set(value) {\\n      return util.toggleAttribute(this, 'disabled', value);\\n    },\\n    get: function get() {\\n      return this.hasAttribute('disabled');\\n    }\\n\\n    /**\\n     * @property value\\n     * @type {Number}\\n     * @description\\n     *   [en]Current value.[/en]\\n     *   [ja][/ja]\\n     */\\n\\n  }, {\\n    key: 'value',\\n    get: function get() {\\n      return this._input === null ? this.getAttribute('value') : this._input.value;\\n    },\\n    set: function set(val) {\\n      var _this5 = this;\\n\\n      contentReady(this, function () {\\n        _this5._input.value = val;\\n        _this5._onChange();\\n      });\\n    }\\n  }], [{\\n    key: 'observedAttributes',\\n    get: function get() {\\n      return ['class', 'modifier'].concat(INPUT_ATTRIBUTES$2);\\n    }\\n  }, {\\n    key: 'events',\\n    get: function get() {\\n      return ['input', 'change'];\\n    }\\n  }]);\\n  return RangeElement;\\n}(BaseElement);\\n\\ncustomElements.define('ons-range', RangeElement);\\n\\nons$1.TemplateElement = TemplateElement;\\nons$1.IfElement = IfElement;\\nons$1.AlertDialogElement = AlertDialogElement;\\nons$1.BackButtonElement = BackButtonElement;\\nons$1.BottomToolbarElement = BottomToolbarElement;\\nons$1.ButtonElement = ButtonElement;\\nons$1.CarouselItemElement = CarouselItemElement;\\nons$1.CarouselElement = CarouselElement;\\nons$1.ColElement = ColElement;\\nons$1.DialogElement = DialogElement;\\nons$1.FabElement = FabElement;\\nons$1.GestureDetectorElement = GestureDetectorElement;\\nons$1.IconElement = IconElement;\\nons$1.LazyRepeatElement = LazyRepeatElement;\\nons$1.ListHeaderElement = ListHeaderElement;\\nons$1.ListItemElement = ListItemElement;\\nons$1.ListElement = ListElement;\\nons$1.InputElement = InputElement;\\nons$1.ModalElement = ModalElement;\\nons$1.NavigatorElement = NavigatorElement;\\nons$1.PageElement = PageElement;\\nons$1.PopoverElement = PopoverElement;\\nons$1.ProgressBarElement = ProgressBarElement;\\nons$1.ProgressCircularElement = ProgressCircularElement;\\nons$1.PullHookElement = PullHookElement;\\nons$1.RippleElement = RippleElement;\\nons$1.RowElement = RowElement;\\nons$1.SelectElement = SelectElement;\\nons$1.SpeedDialItemElement = SpeedDialItemElement;\\nons$1.SpeedDialElement = SpeedDialElement;\\nons$1.SplitterContentElement = SplitterContentElement;\\nons$1.SplitterMaskElement = SplitterMaskElement;\\nons$1.SplitterSideElement = SplitterSideElement;\\nons$1.SplitterElement = SplitterElement;\\nons$1.SwitchElement = SwitchElement;\\nons$1.TabElement = TabElement;\\nons$1.TabbarElement = TabbarElement;\\nons$1.ToolbarButtonElement = ToolbarButtonElement;\\nons$1.ToolbarElement = ToolbarElement;\\nons$1.RangeElement = RangeElement;\\n\\n// fastclick\\nwindow.addEventListener('load', function () {\\n  ons$1.fastClick = FastClick.attach(document.body);\\n}, false);\\n\\n// ons._defaultDeviceBackButtonHandler\\nwindow.addEventListener('DOMContentLoaded', function () {\\n  ons$1._deviceBackButtonDispatcher.enable();\\n  ons$1._defaultDeviceBackButtonHandler = ons$1._deviceBackButtonDispatcher.createHandler(window.document.body, function () {\\n    navigator.app.exitApp();\\n  });\\n  document.body._gestureDetector = new ons$1.GestureDetector(document.body);\\n}, false);\\n\\n// setup loading placeholder\\nons$1.ready(function () {\\n  ons$1._setupLoadingPlaceHolders();\\n});\\n\\n// viewport.js\\nnew Viewport().setup();\\n\\nreturn ons$1;\\n\\n})));\\n\\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkN1c3RvbUV2ZW50LmpzIiwiTXV0YXRpb25PYnNlcnZlckAwLjcuMjIvTXV0YXRpb25PYnNlcnZlci5qcyIsImNoaWxkTm9kZVJlbW92ZS5qcyIsImNsYXNzTGlzdC5qc0AxLjEuMjAxNTAzMTIvY2xhc3NMaXN0LmpzIiwiRmFzdENsaWNrQDEuMC42K21vZC9mYXN0Y2xpY2suanMiLCJtaWNyb2V2ZW50LmpzQDQ3Y2JjMTQrbW9kL21pY3JvZXZlbnQuanMiLCJwcm9taXNlLXBvbHlmaWxsQDYuMC4yK21vZC9wcm9taXNlLmpzIiwic2V0SW1tZWRpYXRlQDEuMC4yK21vZC9zZXRJbW1lZGlhdGUuanMiLCJ2aWV3cG9ydC5qcyIsIndpbnN0b3JlLWpzY29tcGF0QDM5OWZkOWYvd2luc3RvcmUtanNjb21wYXQuanMiLCJwb2x5ZmlsbC1zd2l0Y2hlcy5qcyIsIi4uLy4uL25vZGVfbW9kdWxlcy9Ad2ViY29tcG9uZW50cy9jdXN0b20tZWxlbWVudHMvY3VzdG9tLWVsZW1lbnRzLm1pbi5qcyIsIi4uLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2dsb2JhbC5qcyIsIi4uLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2NvcmUuanMiLCIuLi8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19pcy1vYmplY3QuanMiLCIuLi8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19hbi1vYmplY3QuanMiLCIuLi8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19mYWlscy5qcyIsIi4uLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2Rlc2NyaXB0b3JzLmpzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fZG9tLWNyZWF0ZS5qcyIsIi4uLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2llOC1kb20tZGVmaW5lLmpzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fdG8tcHJpbWl0aXZlLmpzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fb2JqZWN0LWRwLmpzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fcHJvcGVydHktZGVzYy5qcyIsIi4uLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2hpZGUuanMiLCIuLi8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19oYXMuanMiLCIuLi8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL191aWQuanMiLCIuLi8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19yZWRlZmluZS5qcyIsIi4uLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2EtZnVuY3Rpb24uanMiLCIuLi8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19jdHguanMiLCIuLi8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19leHBvcnQuanMiLCIuLi8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19vYmplY3QtcGllLmpzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fY29mLmpzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9faW9iamVjdC5qcyIsIi4uLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2RlZmluZWQuanMiLCIuLi8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL190by1pb2JqZWN0LmpzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fb2JqZWN0LWdvcGQuanMiLCIuLi8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19zZXQtcHJvdG8uanMiLCIuLi8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5vYmplY3Quc2V0LXByb3RvdHlwZS1vZi5qcyIsInBvbHlmaWxscy5qcyIsIm9ucy9wbGF0Zm9ybS5qcyIsIm9ucy9wYWdlLWF0dHJpYnV0ZS1leHByZXNzaW9uLmpzIiwib25zL2ludGVybmFsL2ludGVybmFsLmpzIiwib25zL2ludGVybmFsL2FuaW1hdG9yLWZhY3RvcnkuanMiLCJvbnMvaW50ZXJuYWwvbW9kaWZpZXItdXRpbC5qcyIsIm9ucy9pbnRlcm5hbC9sYXp5LXJlcGVhdC5qcyIsIm9ucy9pbnRlcm5hbC9pbmRleC5qcyIsIm9ucy9hdXRvc3R5bGUuanMiLCJvbnMvYW5pbWF0aW9uLW9wdGlvbnMtcGFyc2VyLmpzIiwib25zL3V0aWwuanMiLCJvbnMvYW5pbWl0LmpzIiwib25zL2dlc3R1cmUtZGV0ZWN0b3IuanMiLCJvbnMvY29udGVudC1yZWFkeS5qcyIsIm9ucy9ub3RpZmljYXRpb24uanMiLCJvbnMvb3JpZW50YXRpb24uanMiLCJvbnMvc29mdHdhcmUta2V5Ym9hcmQuanMiLCJvbnMvZGV2aWNlLWJhY2stYnV0dG9uLWRpc3BhdGNoZXIuanMiLCJvbnMvZG9vcmxvY2suanMiLCJvbnMvcGFnZS1sb2FkZXIuanMiLCJvbnMvYmFzZS1hbmltYXRvci5qcyIsIm9ucy9vbnMuanMiLCJvbnMvYmFzZS1lbGVtZW50LmpzIiwiZWxlbWVudHMvb25zLXRlbXBsYXRlLmpzIiwiZWxlbWVudHMvb25zLWlmLmpzIiwiZWxlbWVudHMvb25zLWFsZXJ0LWRpYWxvZy9hbmltYXRvci5qcyIsImVsZW1lbnRzL29ucy1hbGVydC1kaWFsb2cvaW5kZXguanMiLCJlbGVtZW50cy9vbnMtYmFjay1idXR0b24uanMiLCJlbGVtZW50cy9vbnMtYm90dG9tLXRvb2xiYXIuanMiLCJlbGVtZW50cy9vbnMtYnV0dG9uLmpzIiwiZWxlbWVudHMvb25zLWNhcm91c2VsLWl0ZW0uanMiLCJlbGVtZW50cy9vbnMtY2Fyb3VzZWwuanMiLCJlbGVtZW50cy9vbnMtY29sLmpzIiwiZWxlbWVudHMvb25zLWRpYWxvZy9hbmltYXRvci5qcyIsImVsZW1lbnRzL29ucy1kaWFsb2cvaW5kZXguanMiLCJlbGVtZW50cy9vbnMtZmFiLmpzIiwiZWxlbWVudHMvb25zLWdlc3R1cmUtZGV0ZWN0b3IuanMiLCJlbGVtZW50cy9vbnMtaWNvbi5qcyIsImVsZW1lbnRzL29ucy1sYXp5LXJlcGVhdC5qcyIsImVsZW1lbnRzL29ucy1saXN0LWhlYWRlci5qcyIsImVsZW1lbnRzL29ucy1saXN0LWl0ZW0uanMiLCJlbGVtZW50cy9vbnMtbGlzdC5qcyIsImVsZW1lbnRzL29ucy1pbnB1dC5qcyIsImVsZW1lbnRzL29ucy1tb2RhbC9hbmltYXRvci5qcyIsImVsZW1lbnRzL29ucy1tb2RhbC9mYWRlLWFuaW1hdG9yLmpzIiwiZWxlbWVudHMvb25zLW1vZGFsL2luZGV4LmpzIiwiZWxlbWVudHMvb25zLW5hdmlnYXRvci9hbmltYXRvci5qcyIsImVsZW1lbnRzL29ucy1uYXZpZ2F0b3IvaW9zLXNsaWRlLWFuaW1hdG9yLmpzIiwiZWxlbWVudHMvb25zLW5hdmlnYXRvci9pb3MtbGlmdC1hbmltYXRvci5qcyIsImVsZW1lbnRzL29ucy1uYXZpZ2F0b3IvaW9zLWZhZGUtYW5pbWF0b3IuanMiLCJlbGVtZW50cy9vbnMtbmF2aWdhdG9yL21kLXNsaWRlLWFuaW1hdG9yLmpzIiwiZWxlbWVudHMvb25zLW5hdmlnYXRvci9tZC1saWZ0LWFuaW1hdG9yLmpzIiwiZWxlbWVudHMvb25zLW5hdmlnYXRvci9tZC1mYWRlLWFuaW1hdG9yLmpzIiwiZWxlbWVudHMvb25zLW5hdmlnYXRvci9ub25lLWFuaW1hdG9yLmpzIiwiZWxlbWVudHMvb25zLW5hdmlnYXRvci9pbmRleC5qcyIsImVsZW1lbnRzL29ucy10b29sYmFyLmpzIiwiZWxlbWVudHMvb25zLXBhZ2UuanMiLCJlbGVtZW50cy9vbnMtcG9wb3Zlci9hbmltYXRvci5qcyIsImVsZW1lbnRzL29ucy1wb3BvdmVyL2luZGV4LmpzIiwiZWxlbWVudHMvb25zLXByb2dyZXNzLWJhci5qcyIsImVsZW1lbnRzL29ucy1wcm9ncmVzcy1jaXJjdWxhci5qcyIsImVsZW1lbnRzL29ucy1wdWxsLWhvb2suanMiLCJlbGVtZW50cy9vbnMtcmlwcGxlL2FuaW1hdG9yLWNzcy5qcyIsImVsZW1lbnRzL29ucy1yaXBwbGUvaW5kZXguanMiLCJlbGVtZW50cy9vbnMtcm93LmpzIiwiZWxlbWVudHMvb25zLXNlbGVjdC5qcyIsImVsZW1lbnRzL29ucy1zcGVlZC1kaWFsLWl0ZW0uanMiLCJsaWIvc3R5bGVyLmpzIiwiZWxlbWVudHMvb25zLXNwZWVkLWRpYWwuanMiLCJlbGVtZW50cy9vbnMtc3BsaXR0ZXItY29udGVudC5qcyIsImVsZW1lbnRzL29ucy1zcGxpdHRlci1tYXNrLmpzIiwiZWxlbWVudHMvb25zLXNwbGl0dGVyL2FuaW1hdG9yLmpzIiwiZWxlbWVudHMvb25zLXNwbGl0dGVyL2luZGV4LmpzIiwiZWxlbWVudHMvb25zLXNwbGl0dGVyLXNpZGUuanMiLCJlbGVtZW50cy9vbnMtc3dpdGNoLmpzIiwiZWxlbWVudHMvb25zLXRhYmJhci9hbmltYXRvci5qcyIsImVsZW1lbnRzL29ucy10YWJiYXIvaW5kZXguanMiLCJlbGVtZW50cy9vbnMtdGFiLmpzIiwiZWxlbWVudHMvb25zLXRvb2xiYXItYnV0dG9uLmpzIiwiZWxlbWVudHMvb25zLXJhbmdlLmpzIiwic2V0dXAuanMiXSwibmFtZXMiOlsid2luZG93IiwiY3VzdG9tRWxlbWVudHMiLCJmb3JjZVBvbHlmaWxsIiwiZyIsImFhIiwiU2V0Iiwic3BsaXQiLCJrIiwiYiIsImEiLCJoYXMiLCJ0ZXN0IiwibCIsImlzQ29ubmVjdGVkIiwiX19DRV9pc0ltcG9ydERvY3VtZW50IiwiRG9jdW1lbnQiLCJwYXJlbnROb2RlIiwiU2hhZG93Um9vdCIsImhvc3QiLCJtIiwibmV4dFNpYmxpbmciLCJuIiwiZSIsImMiLCJub2RlVHlwZSIsIk5vZGUiLCJFTEVNRU5UX05PREUiLCJkIiwiaCIsImxvY2FsTmFtZSIsImdldEF0dHJpYnV0ZSIsImltcG9ydCIsImFkZCIsImZpcnN0Q2hpbGQiLCJfX0NFX3NoYWRvd1Jvb3QiLCJxIiwiciIsIk1hcCIsImYiLCJiYSIsInNldCIsImNvbnN0cnVjdG9yIiwidCIsInB1c2giLCJ2IiwidyIsIl9fQ0VfcGF0Y2hlZCIsImxlbmd0aCIsIngiLCJfX0NFX3N0YXRlIiwiY29ubmVjdGVkQ2FsbGJhY2siLCJ5IiwieiIsImRpc2Nvbm5lY3RlZENhbGxiYWNrIiwiQSIsInJlYWR5U3RhdGUiLCJfX0NFX2hhc1JlZ2lzdHJ5IiwiYWRkRXZlbnRMaXN0ZW5lciIsIl9fQ0VfZG9jdW1lbnRMb2FkSGFuZGxlZCIsImRlbGV0ZSIsImdldCIsImNvbnN0cnVjdGlvblN0YWNrIiwiRXJyb3IiLCJwb3AiLCJfX0NFX2RlZmluaXRpb24iLCJhdHRyaWJ1dGVDaGFuZ2VkQ2FsbGJhY2siLCJvYnNlcnZlZEF0dHJpYnV0ZXMiLCJwcm90b3R5cGUiLCJjYWxsIiwiaSIsImluZGV4T2YiLCJCIiwiTXV0YXRpb25PYnNlcnZlciIsImJpbmQiLCJvYnNlcnZlIiwiY2hpbGRMaXN0Iiwic3VidHJlZSIsIkMiLCJkaXNjb25uZWN0IiwiYWRkZWROb2RlcyIsImNhIiwiUHJvbWlzZSIsIkQiLCJFIiwiZG9jdW1lbnQiLCJGdW5jdGlvbiIsIlR5cGVFcnJvciIsIlN5bnRheEVycm9yIiwidSIsInAiLCJQIiwiT2JqZWN0IiwidmEiLCJhZG9wdGVkQ2FsbGJhY2siLCJzaGlmdCIsInMiLCJyZWplY3QiLCJvIiwiQ3VzdG9tRWxlbWVudFJlZ2lzdHJ5IiwiZGVmaW5lIiwid2hlbkRlZmluZWQiLCJwb2x5ZmlsbFdyYXBGbHVzaENhbGxiYWNrIiwiRiIsImNyZWF0ZUVsZW1lbnQiLCJkYSIsImNyZWF0ZUVsZW1lbnROUyIsImVhIiwiaW1wb3J0Tm9kZSIsImZhIiwicHJlcGVuZCIsImdhIiwiYXBwZW5kIiwiRyIsImNsb25lTm9kZSIsIkgiLCJhcHBlbmRDaGlsZCIsIkkiLCJpbnNlcnRCZWZvcmUiLCJKIiwicmVtb3ZlQ2hpbGQiLCJLIiwicmVwbGFjZUNoaWxkIiwiTCIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsIk0iLCJFbGVtZW50IiwiYXR0YWNoU2hhZG93IiwiTiIsIk8iLCJRIiwic2V0QXR0cmlidXRlIiwiUiIsInJlbW92ZUF0dHJpYnV0ZSIsIlMiLCJnZXRBdHRyaWJ1dGVOUyIsIlQiLCJzZXRBdHRyaWJ1dGVOUyIsIlUiLCJyZW1vdmVBdHRyaWJ1dGVOUyIsIlYiLCJpbnNlcnRBZGphY2VudEVsZW1lbnQiLCJoYSIsImlhIiwiamEiLCJiZWZvcmUiLCJrYSIsImFmdGVyIiwibGEiLCJyZXBsYWNlV2l0aCIsIm1hIiwicmVtb3ZlIiwibmEiLCJIVE1MRWxlbWVudCIsIlciLCJYIiwib2EiLCJZIiwic2V0UHJvdG90eXBlT2YiLCJwYSIsImFyZ3VtZW50cyIsImZpbHRlciIsImoiLCJhcHBseSIsInFhIiwicmEiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJjb25maWd1cmFibGUiLCJURVhUX05PREUiLCJjaGlsZE5vZGVzIiwiQXJyYXkiLCJEb2N1bWVudEZyYWdtZW50Iiwic2xpY2UiLCJvd25lckRvY3VtZW50IiwidGV4dENvbnRlbnQiLCJqb2luIiwiY3JlYXRlVGV4dE5vZGUiLCJzYSIsInRhIiwiY29uc29sZSIsIndhcm4iLCJpbm5lckhUTUwiLCJjb250ZW50IiwiWiIsInVhIiwidmFsdWUiLCJzZWxmIiwiZ2xvYmFsIiwibW9kdWxlIiwiTWF0aCIsIl9fZyIsImNvcmUiLCJ2ZXJzaW9uIiwiX19lIiwiaXQiLCJpc09iamVjdCIsImV4ZWMiLCJyZXF1aXJlJCQwIiwiaXMiLCJyZXF1aXJlJCQxIiwicmVxdWlyZSQkMiIsImZuIiwidmFsIiwidG9TdHJpbmciLCJ2YWx1ZU9mIiwiZFAiLCJBdHRyaWJ1dGVzIiwidG9QcmltaXRpdmUiLCJJRThfRE9NX0RFRklORSIsImJpdG1hcCIsIm9iamVjdCIsImtleSIsImNyZWF0ZURlc2MiLCJoYXNPd25Qcm9wZXJ0eSIsImlkIiwicHgiLCJyYW5kb20iLCJjb25jYXQiLCJ1bmRlZmluZWQiLCJTUkMiLCJUT19TVFJJTkciLCIkdG9TdHJpbmciLCJUUEwiLCJpbnNwZWN0U291cmNlIiwic2FmZSIsImlzRnVuY3Rpb24iLCJoaWRlIiwiU3RyaW5nIiwidGhhdCIsIlBST1RPVFlQRSIsIiRleHBvcnQiLCJ0eXBlIiwibmFtZSIsInNvdXJjZSIsIklTX0ZPUkNFRCIsIklTX0dMT0JBTCIsIklTX1NUQVRJQyIsIklTX1BST1RPIiwiSVNfQklORCIsInRhcmdldCIsImV4cG9ydHMiLCJleHBQcm90byIsIm93biIsIm91dCIsImV4cCIsImN0eCIsInJlZGVmaW5lIiwicHJvcGVydHlJc0VudW1lcmFibGUiLCJjb2YiLCJJT2JqZWN0IiwiZGVmaW5lZCIsImdPUEQiLCJ0b0lPYmplY3QiLCJwSUUiLCJjaGVjayIsInByb3RvIiwiYnVnZ3kiLCJfX3Byb3RvX18iLCJQbGF0Zm9ybSIsIl9yZW5kZXJQbGF0Zm9ybSIsInBsYXRmb3JtIiwidHJpbSIsInRvTG93ZXJDYXNlIiwiY29yZG92YSIsInBob25lZ2FwIiwiUGhvbmVHYXAiLCJkZXZpY2UiLCJuYXZpZ2F0b3IiLCJ1c2VyQWdlbnQiLCJvcGVyYSIsIkluc3RhbGxUcmlnZ2VyIiwic2FmYXJpIiwicHVzaE5vdGlmaWNhdGlvbiIsImNocm9tZSIsImRvY3VtZW50TW9kZSIsInBhcnNlSW50IiwidmVyIiwibWF0Y2giLCJyZXBsYWNlIiwiaXNBbmRyb2lkIiwiaXNJT1MiLCJpc1dQIiwiaXNJUGhvbmUiLCJpc0lQYWQiLCJpc0lQb2QiLCJwYWdlQXR0cmlidXRlRXhwcmVzc2lvbiIsIm92ZXJ3cml0ZSIsIl92YXJpYWJsZXMiLCJwYXJ0IiwiaW5JbnRlcnBvbGF0aW9uIiwiY3VycmVudEluZGV4IiwidG9rZW5zIiwiY2hhckF0IiwidG9rZW4iLCJzdWJzdHJpbmciLCJyZSIsInZhcmlhYmxlIiwiZ2V0VmFyaWFibGUiLCJydiIsIm1hcCIsIl9yZXBsYWNlVG9rZW4iLCJleHByZXNzaW9uIiwiX3BhcnNlUGFydCIsIl9yZXBsYWNlVG9rZW5zIiwiX3BhcnNlRXhwcmVzc2lvbiIsImRlZmluZVZhcmlhYmxlIiwiZ2V0TW9iaWxlT1MiLCJnZXRJT1NEZXZpY2UiLCJpc1dlYlZpZXciLCJpbnRlcm5hbCIsImNvbmZpZyIsIm51bGxFbGVtZW50IiwiaXNFbmFibGVkQXV0b1N0YXR1c0JhckZpbGwiLCJhdXRvU3RhdHVzQmFyRmlsbCIsIm5vcm1hbGl6ZVBhZ2VIVE1MIiwiaHRtbCIsIndhaXRET01Db250ZW50TG9hZGVkIiwiY2FsbGJhY2siLCJvblJlYWR5Iiwic2hvdWxkRmlsbFN0YXR1c0JhciIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJpc0lPUzdhYm92ZSIsInRlbXBsYXRlU3RvcmUiLCJfc3RvcmFnZSIsInRlbXBsYXRlIiwibm9kZU5hbWUiLCJ0ZW1wbGF0ZUlkIiwicmVnaXN0ZXIiLCJxdWVyeSIsInRlbXBsYXRlcyIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJnZXRUZW1wbGF0ZUhUTUxBc3luYyIsInBhZ2UiLCJyZXNvbHZlIiwiY2FjaGUiLCJ4aHIiLCJYTUxIdHRwUmVxdWVzdCIsIm9wZW4iLCJvbmxvYWQiLCJyZXNwb25zZSIsInJlc3BvbnNlVGV4dCIsInN0YXR1cyIsIm9uZXJyb3IiLCJzZW5kIiwiZ2V0UGFnZUhUTUxBc3luYyIsInBhZ2VzIiwiZXZhbHVhdGUiLCJnZXRQYWdlIiwidGhlbiIsImVycm9yIiwiQW5pbWF0b3JGYWN0b3J5Iiwib3B0cyIsIl9hbmltYXRvcnMiLCJhbmltYXRvcnMiLCJfYmFzZUNsYXNzIiwiYmFzZUNsYXNzIiwiX2Jhc2VDbGFzc05hbWUiLCJiYXNlQ2xhc3NOYW1lIiwiX2FuaW1hdGlvbiIsImRlZmF1bHRBbmltYXRpb24iLCJfYW5pbWF0aW9uT3B0aW9ucyIsImRlZmF1bHRBbmltYXRpb25PcHRpb25zIiwib3B0aW9ucyIsImRlZmF1bHRBbmltYXRvciIsImFuaW1hdG9yIiwiYW5pbWF0aW9uIiwiQW5pbWF0b3IiLCJhbmltYXRpb25PcHRzIiwidXRpbCIsImV4dGVuZCIsImFuaW1hdGlvbk9wdGlvbnMiLCJhbmltYXRpb25zRGlzYWJsZWQiLCJkdXJhdGlvbiIsImRlbGF5IiwianNvblN0cmluZyIsInJlc3VsdCIsImFuaW1hdGlvbk9wdGlvbnNQYXJzZSIsIk1vZGlmaWVyVXRpbCIsImxhc3QiLCJjdXJyZW50IiwibWFrZURpY3QiLCJyZW1vdmVkIiwia2V5cyIsInJlZHVjZSIsImFkZGVkIiwibW9kaWZpZXIiLCJkaWN0IiwiZm9yRWFjaCIsImRpZmYiLCJjbGFzc0xpc3QiLCJrbGFzcyIsImVsZW1lbnQiLCJzY2hlbWUiLCJzZWxlY3RvciIsInRhcmdldEVsZW1lbnRzIiwiYXBwbHlEaWZmVG9DbGFzc0xpc3QiLCJhcHBseURpZmZUb0VsZW1lbnQiLCJtb2RpZmllclRva2VuIiwiaGFzQXR0cmlidXRlIiwiaW5kZXgiLCJzcGxpY2UiLCJMYXp5UmVwZWF0RGVsZWdhdGUiLCJ1c2VyRGVsZWdhdGUiLCJ0ZW1wbGF0ZUVsZW1lbnQiLCJfdXNlckRlbGVnYXRlIiwiX3RlbXBsYXRlRWxlbWVudCIsIl9yZW5kZXIiLCJkb25lIiwibG9hZEl0ZW1FbGVtZW50IiwiY3JlYXRlSXRlbUNvbnRlbnQiLCJjb3VudCIsImNvdW50SXRlbXMiLCJpdGVtIiwidXBkYXRlSXRlbUNvbnRlbnQiLCJjYWxjdWxhdGVJdGVtSGVpZ2h0IiwiaGVpZ2h0IiwiZGVzdHJveUl0ZW0iLCJkZXN0cm95IiwiaXRlbUhlaWdodCIsIkxhenlSZXBlYXRQcm92aWRlciIsIndyYXBwZXJFbGVtZW50IiwiZGVsZWdhdGUiLCJfd3JhcHBlckVsZW1lbnQiLCJfZGVsZWdhdGUiLCJfaW5zZXJ0SW5kZXgiLCJjaGlsZHJlbiIsInRhZ05hbWUiLCJfcGFnZUNvbnRlbnQiLCJfZmluZFBhZ2VDb250ZW50RWxlbWVudCIsImxhc3RTY3JvbGxUb3AiLCJzY3JvbGxUb3AiLCJwYWRkaW5nIiwiX3RvcFBvc2l0aW9ucyIsIl9yZW5kZXJlZEl0ZW1zIiwiX3Vua25vd25JdGVtSGVpZ2h0IiwiX2FkZEV2ZW50TGlzdGVuZXJzIiwiX29uQ2hhbmdlIiwicGFnZUNvbnRlbnQiLCJmaW5kUGFyZW50IiwiZmluZENoaWxkIiwiX2l0ZW1IZWlnaHQiLCJvZmZzZXRIZWlnaHQiLCJsYXN0VmlzaWJpbGl0eSIsInN0eWxlIiwidmlzaWJpbGl0eSIsInN0YXRpY0l0ZW1IZWlnaHQiLCJfZ2V0SXRlbUhlaWdodCIsIm1heCIsIm1pbiIsImxhc3RJdGVtSW5kZXgiLCJfbGFzdEl0ZW1SZW5kZXJlZCIsIl9jb3VudEl0ZW1zIiwiZmlyc3RJdGVtSW5kZXgiLCJfZmlyc3RJdGVtUmVuZGVyZWQiLCJfY2FsY3VsYXRlUmVuZGVyZWRIZWlnaHQiLCJfcmVtb3ZlQWxsRWxlbWVudHMiLCJmb3JjZVNjcm9sbERvd24iLCJmb3JjZUZpcnN0SW5kZXgiLCJmb3JjZUxhc3RJbmRleCIsIl9jaGVja0l0ZW1IZWlnaHQiLCJpc1Njcm9sbFVwIiwia2VlcCIsIm9mZnNldCIsImdldEJvdW5kaW5nQ2xpZW50UmVjdCIsInRvcCIsImxpbWl0IiwiaW5uZXJIZWlnaHQiLCJpdGVtcyIsInN0YXJ0IiwiX2NhbGN1bGF0ZVN0YXJ0SW5kZXgiLCJoYXNSZW5kZXJGdW5jdGlvbiIsIl9yZW5kZXJFbGVtZW50IiwibGFzdEluZGV4IiwiX3JlbW92ZUVsZW1lbnQiLCJ1cGRhdGVJdGVtIiwicGFyZW50RWxlbWVudCIsImVuZCIsIl9yZWNhbGN1bGF0ZVRvcFBvc2l0aW9ucyIsIm1pZGRsZSIsImZsb29yIiwiaXNOYU4iLCJmdW5jIiwid2FpdCIsImltbWVkaWF0ZSIsInRpbWVvdXQiLCJjYWxsTm93Iiwic2V0VGltZW91dCIsIl9kZWJvdW5jZSIsImJpbmRMaXN0ZW5lcnMiLCJfYm91bmRPbkNoYW5nZSIsIl9ib3VuZERvdWJsZUZpcmVPblRvdWNoZW5kIiwiX3BhcmVudEVsZW1lbnQiLCJfcmVtb3ZlRXZlbnRMaXN0ZW5lcnMiLCJwYWRkaW5nVG9wIiwibmV3VmFsdWUiLCJhdXRvU3R5bGVFbmFibGVkIiwibW9kaWZpZXJzTWFwIiwicGxhdGZvcm1zIiwiYW5kcm9pZCIsIm9sZE1vZGlmaWVyIiwibmV3TW9kaWZpZXIiLCJ1bnNoaWZ0IiwicXVlcnlTZWxlY3RvciIsImlvcyIsInJlbW92ZU1vZGlmaWVyIiwiYWRkTW9kaWZpZXIiLCJ1bmxvY2tlZCIsInByZXBhcmVBdXRvU3R5bGUiLCJmb3JjZSIsIm1vYmlsZU9TIiwib25zUGxhdGZvcm0iLCJtYXBNb2RpZmllciIsInVud3JhcCIsInN0cmluZyIsImlzT2JqZWN0U3RyaW5nIiwic3RhcnRzV2l0aCIsImVuZHNXaXRoIiwiaXNBcnJheVN0cmluZyIsImlzUXVvdGVkU3RyaW5nIiwib3JpZ2luYWxTdHJpbmciLCJwcm9jZXNzVG9rZW4iLCJwYXJzZU9iamVjdCIsInBhcnNlQXJyYXkiLCJuZXh0VG9rZW4iLCJ0cmltTGVmdCIsImNoYXJDb2RlQXQiLCJuZXN0ZWRPYmplY3QiLCJpc1ZhbGlkS2V5IiwicmVhZGluZ0tleSIsInByZXZpb3VzVG9rZW4iLCJhcnJheSIsInBhcnNlIiwicHJlcGFyZVF1ZXJ5IiwibWF0Y2hlcyIsIndlYmtpdE1hdGNoZXNTZWxlY3RvciIsIm1vek1hdGNoZXNTZWxlY3RvciIsIm1zTWF0Y2hlc1NlbGVjdG9yIiwibm9kZSIsInBhcmVudCIsImlzQXR0YWNoZWQiLCJkb2N1bWVudEVsZW1lbnQiLCJoYXNBbnlDb21wb25lbnRBc1BhcmVudCIsInByb3BhZ2F0ZUFjdGlvbiIsImFjdGlvbiIsImNoaWxkIiwiY3JlYXRlIiwiY2xhc3NOYW1lIiwid3JhcHBlciIsImNyZWF0ZUZyYWdtZW50IiwiZnJhZ21lbnQiLCJjcmVhdGVEb2N1bWVudEZyYWdtZW50IiwiZHN0IiwiYXJncyIsImFycmF5RnJvbSIsImFycmF5TGlrZSIsInBhcnNlSlNPTk9iamVjdFNhZmVseSIsImZhaWxTYWZlIiwiSlNPTiIsImZpbmRGcm9tUGF0aCIsInBhdGgiLCJlbCIsImdldFRvcFBhZ2UiLCJjb250YWluZXIiLCJ0b3BQYWdlIiwiZmluZFRvb2xiYXJQYWdlIiwiX2NvbnRlbnRFbGVtZW50IiwibmV4dFBhZ2UiLCJ0cmlnZ2VyRWxlbWVudEV2ZW50IiwiZXZlbnROYW1lIiwiZGV0YWlsIiwiZXZlbnQiLCJDdXN0b21FdmVudCIsImRpc3BhdGNoRXZlbnQiLCJoYXNNb2RpZmllciIsIm1vZGlmaWVyTmFtZSIsInNvbWUiLCJhdXRvU3R5bGUiLCJmb3JjZUF1dG9TdHlsZSIsIm1vZGlmaWVyQXR0cmlidXRlIiwibW9kaWZpZXJzIiwibmV3TW9kaWZpZXJzIiwidXBkYXRlUGFyZW50UG9zaXRpb24iLCJfcGFyZW50VXBkYXRlZCIsImdldENvbXB1dGVkU3R5bGUiLCJnZXRQcm9wZXJ0eVZhbHVlIiwicG9zaXRpb24iLCJ0b2dnbGVBdHRyaWJ1dGUiLCJsaXN0ZW5lck5hbWVzIiwiYm91bmROYW1lIiwidG9VcHBlckNhc2UiLCJlYWNoIiwib2JqIiwidXBkYXRlUmlwcGxlIiwiaGFzUmlwcGxlIiwicmlwcGxlRWxlbWVudCIsImlzSW50ZWdlciIsImlzRmluaXRlIiwiZGVmZXIiLCJkZWZlcnJlZCIsInByb21pc2UiLCJ3YXJuaW5nc0Rpc2FibGVkIiwiVElNRU9VVF9SQVRJTyIsImNhcGl0YWxpemUiLCJzdHIiLCJidWlsZFRyYW5zaXRpb25WYWx1ZSIsInBhcmFtcyIsInByb3BlcnR5IiwidGltaW5nIiwicHJvcHMiLCJwcm9wIiwib25jZU9uVHJhbnNpdGlvbkVuZCIsInN0b3BQcm9wYWdhdGlvbiIsInJlbW92ZUxpc3RlbmVycyIsIl90cmFuc2l0aW9uRW5kRXZlbnRzIiwidmVuZG9yUHJlZml4IiwiX2Nzc1Byb3BlcnR5RGljdCIsInN0eWxlcyIsInVwcGVyIiwic3Vic3RyIiwiaGFzQ3NzUHJvcGVydHkiLCJwcmUiLCJPTGluayIsImZvcmNlTGF5b3V0QXRPbmNlIiwiZWxlbWVudHMiLCJiYXRjaEltbWVkaWF0ZSIsImNhbGxiYWNrcyIsImNvbmNyZWF0ZUNhbGxiYWNrcyIsImJhdGNoQW5pbWF0aW9uRnJhbWUiLCJyYWYiLCJyZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJ3ZWJraXRSZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJtb3pSZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJvUmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwibXNSZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJ0cmFuc2l0aW9uUHJvcGVydHlOYW1lIiwiQW5pbWl0IiwidHJhbnNpdGlvblF1ZXVlIiwibGFzdFN0eWxlQXR0cmlidXRlRGljdCIsInN0YXJ0QW5pbWF0aW9uIiwidHJhbnNpdGlvbiIsInF1ZXVlIiwiY3NzIiwiVHJhbnNpdGlvbiIsImJ1aWxkIiwic2Vjb25kcyIsInRyYW5zaXRpb25OYW1lIiwidHJhbnNpdGlvblZhbHVlIiwidGltZW91dElkIiwiY2xlYXJUcmFuc2l0aW9uIiwibGVuIiwicmVzZXQiLCJfZGVxdWV1ZVRyYW5zaXRpb24iLCJfY3VycmVudFRyYW5zaXRpb24iLCJjYWxsZWQiLCJydW5BbGwiLCJwbGF5IiwiY3JlYXRlQWN0dWFsQ3NzUHJvcHMiLCJwcmVmaXhlZCIsIkV2ZW50IiwiVXRpbHMiLCJEZXRlY3Rpb24iLCJQb2ludGVyRXZlbnQiLCJHZXN0dXJlRGV0ZWN0b3IiLCJJbnN0YW5jZSIsImRlZmF1bHRzIiwiRE9DVU1FTlQiLCJIQVNfUE9JTlRFUkVWRU5UUyIsInBvaW50ZXJFbmFibGVkIiwibXNQb2ludGVyRW5hYmxlZCIsIkhBU19UT1VDSEVWRU5UUyIsIklTX01PQklMRSIsIk5PX01PVVNFRVZFTlRTIiwiQ0FMQ1VMQVRFX0lOVEVSVkFMIiwiRVZFTlRfVFlQRVMiLCJESVJFQ1RJT05fRE9XTiIsIkRJUkVDVElPTl9MRUZUIiwiRElSRUNUSU9OX1VQIiwiRElSRUNUSU9OX1JJR0hUIiwiUE9JTlRFUl9NT1VTRSIsIlBPSU5URVJfVE9VQ0giLCJQT0lOVEVSX1BFTiIsIkVWRU5UX1NUQVJUIiwiRVZFTlRfTU9WRSIsIkVWRU5UX0VORCIsIkVWRU5UX1JFTEVBU0UiLCJFVkVOVF9UT1VDSCIsIlJFQURZIiwicGx1Z2lucyIsImdlc3R1cmVzIiwic2V0dXAiLCJkZXRlcm1pbmVFdmVudFR5cGVzIiwiZ2VzdHVyZSIsIm9uVG91Y2giLCJkZXRlY3QiLCJ1dGlscyIsImRlc3QiLCJzcmMiLCJtZXJnZSIsIm9uIiwiaGFuZGxlciIsIm9mZiIsIml0ZXJhdG9yIiwiY29udGV4dCIsImluU3RyIiwiZmluZCIsImluQXJyYXkiLCJ0b0FycmF5IiwiaGFzUGFyZW50IiwiZ2V0Q2VudGVyIiwidG91Y2hlcyIsInBhZ2VYIiwicGFnZVkiLCJjbGllbnRYIiwiY2xpZW50WSIsInRvdWNoIiwiZ2V0VmVsb2NpdHkiLCJkZWx0YVRpbWUiLCJkZWx0YVgiLCJkZWx0YVkiLCJhYnMiLCJnZXRBbmdsZSIsInRvdWNoMSIsInRvdWNoMiIsImF0YW4yIiwiUEkiLCJnZXREaXJlY3Rpb24iLCJnZXREaXN0YW5jZSIsInNxcnQiLCJnZXRTY2FsZSIsImdldFJvdGF0aW9uIiwiaXNWZXJ0aWNhbCIsImRpcmVjdGlvbiIsInNldFByZWZpeGVkQ3NzIiwidG9nZ2xlIiwicHJlZml4ZXMiLCJ0b0NhbWVsQ2FzZSIsInRvZ2dsZUJlaGF2aW9yIiwiZmFsc2VGbiIsInVzZXJTZWxlY3QiLCJvbnNlbGVjdHN0YXJ0IiwidXNlckRyYWciLCJvbmRyYWdzdGFydCIsImhvb2siLCJ0eXBlcyIsImV2ZW50VHlwZSIsIm9uVG91Y2hIYW5kbGVyIiwiZXYiLCJzcmNUeXBlIiwiaXNQb2ludGVyIiwiaXNNb3VzZSIsInRyaWdnZXJUeXBlIiwicHJldmVudE1vdXNlRXZlbnRzIiwiYnV0dG9uIiwic2hvdWxkRGV0ZWN0IiwiYnV0dG9ucyIsIm1hdGNoVHlwZSIsInVwZGF0ZVBvaW50ZXIiLCJkb0RldGVjdCIsInRvdWNoTGlzdCIsImdldFRvdWNoTGlzdCIsInRvdWNoTGlzdExlbmd0aCIsInRyaWdnZXJDaGFuZ2UiLCJ0cmlnZ2VyIiwiY2hhbmdlZExlbmd0aCIsImNoYW5nZWRUb3VjaGVzIiwic3RhcnRlZCIsImV2RGF0YSIsImNvbGxlY3RFdmVudERhdGEiLCJpZGVudGlmaWVycyIsImlkZW50aWZpZXIiLCJwb2ludGVyVHlwZSIsIkRhdGUiLCJub3ciLCJzcmNFdmVudCIsInByZXZlbnRNYW5pcHVsYXRpb24iLCJwcmV2ZW50RGVmYXVsdCIsInN0b3BEZXRlY3QiLCJ0b3VjaGxpc3QiLCJwb2ludGVycyIsInBvaW50ZXIiLCJwb2ludGVyRXZlbnQiLCJwb2ludGVySWQiLCJwdCIsIk1TUE9JTlRFUl9UWVBFX01PVVNFIiwiTVNQT0lOVEVSX1RZUEVfVE9VQ0giLCJNU1BPSU5URVJfVFlQRV9QRU4iLCJyZXNldExpc3QiLCJkZXRlY3Rpb24iLCJzdGFydERldGVjdCIsImluc3QiLCJldmVudERhdGEiLCJzdG9wcGVkIiwiZXh0ZW5kRXZlbnREYXRhIiwiaW5zdE9wdGlvbnMiLCJ0cmlnZ2VyR2VzdHVyZSIsImVuYWJsZWQiLCJsYXN0RXZlbnQiLCJwcmV2aW91cyIsImdldENhbGN1bGF0ZWREYXRhIiwiY2VudGVyIiwiY3VyIiwicmVjYWxjIiwiY2FsY0V2IiwibGFzdENhbGNFdmVudCIsImNhbGNEYXRhIiwibGFzdENhbGNEYXRhIiwidGltZVN0YW1wIiwiZnV0dXJlQ2FsY0V2ZW50IiwidmVsb2NpdHkiLCJhbmdsZSIsInZlbG9jaXR5WCIsInZlbG9jaXR5WSIsImludGVyaW1BbmdsZSIsImludGVyaW1EaXJlY3Rpb24iLCJzdGFydEV2Iiwic3RhcnRFdmVudCIsImxhc3RFdiIsInNvcnQiLCJiZWhhdmlvciIsImV2ZW50U3RhcnRIYW5kbGVyIiwiZXZlbnRIYW5kbGVycyIsIm9uRXZlbnQiLCJvZmZFdmVudCIsInRyaWdnZXJFdmVudCIsImNyZWF0ZUV2ZW50IiwiaW5pdEV2ZW50IiwiZW5hYmxlIiwic3RhdGUiLCJkaXNwb3NlIiwiZWgiLCJ0cmlnZ2VyZWQiLCJkcmFnR2VzdHVyZSIsImRyYWdNYXhUb3VjaGVzIiwiZGlzdGFuY2UiLCJkcmFnTWluRGlzdGFuY2UiLCJzdGFydENlbnRlciIsImRyYWdEaXN0YW5jZUNvcnJlY3Rpb24iLCJmYWN0b3IiLCJkcmFnTG9ja1RvQXhpcyIsImRyYWdMb2NrTWluRGlzdGFuY2UiLCJsYXN0RGlyZWN0aW9uIiwiZHJhZ0Jsb2NrVmVydGljYWwiLCJkcmFnQmxvY2tIb3Jpem9udGFsIiwiRHJhZyIsIkdlc3R1cmUiLCJyZWxlYXNlR2VzdHVyZSIsInRpbWVyIiwiaG9sZEdlc3R1cmUiLCJob2xkVGltZW91dCIsImhvbGRUaHJlc2hvbGQiLCJIb2xkIiwiUmVsZWFzZSIsIkluZmluaXR5IiwiU3dpcGUiLCJzd2lwZUdlc3R1cmUiLCJzd2lwZU1pblRvdWNoZXMiLCJzd2lwZU1heFRvdWNoZXMiLCJzd2lwZVZlbG9jaXR5WCIsInN3aXBlVmVsb2NpdHlZIiwiaGFzTW92ZWQiLCJ0YXBHZXN0dXJlIiwicHJldiIsInNpbmNlUHJldiIsImRpZERvdWJsZVRhcCIsInRhcE1heERpc3RhbmNlIiwidGFwTWF4VGltZSIsImRvdWJsZVRhcEludGVydmFsIiwiZG91YmxlVGFwRGlzdGFuY2UiLCJ0YXBBbHdheXMiLCJUYXAiLCJUb3VjaCIsInRvdWNoR2VzdHVyZSIsInByZXZlbnRNb3VzZSIsInRyYW5zZm9ybUdlc3R1cmUiLCJzY2FsZVRocmVzaG9sZCIsInNjYWxlIiwicm90YXRpb25UaHJlc2hvbGQiLCJyb3RhdGlvbiIsInRyYW5zZm9ybU1pblNjYWxlIiwidHJhbnNmb3JtTWluUm90YXRpb24iLCJUcmFuc2Zvcm0iLCJyZWFkeU1hcCIsIldlYWtNYXAiLCJxdWV1ZU1hcCIsImlzQ29udGVudFJlYWR5Iiwic2V0Q29udGVudFJlYWR5IiwiYWRkQ2FsbGJhY2siLCJjb25zdW1lUXVldWUiLCJjb250ZW50UmVhZHkiLCJvYnNlcnZlciIsImNoYXJhY3RlckRhdGEiLCJub3RpZmljYXRpb24iLCJfY3JlYXRlQWxlcnREaWFsb2ciLCJpbnB1dFN0cmluZyIsImlzUHJvbXB0IiwiaW5wdXRUeXBlIiwicGxhY2Vob2xkZXIiLCJkZWZhdWx0VmFsdWUiLCJidXR0b25MYWJlbHMiLCJsYWJlbCIsInByaW1hcnlCdXR0b25JbmRleCIsIl9kZXN0cm95RGlhbG9nIiwiZGlhbG9nIiwib25EaWFsb2dDYW5jZWwiLCJ0aXRsZSIsIm1lc3NhZ2UiLCJtZXNzYWdlSFRNTCIsInN1Ym1pdE9uRW50ZXIiLCJpbnB1dCIsIm9ua2V5cHJlc3MiLCJrZXlDb2RlIiwicmVzb2x2ZVZhbHVlIiwiZm9vdGVyIiwiYnV0dG9uRWxlbWVudCIsIm9uY2xpY2siLCJjYW5jZWxhYmxlIiwiYm9keSIsImNvbXBpbGUiLCJzaG93IiwiYXV0b2ZvY3VzIiwiZm9jdXMiLCJfbm9ybWFsaXplQXJndW1lbnRzIiwiYnV0dG9uTGFiZWwiLCJpc0FycmF5IiwicGFyYW0iLCJhbGVydCIsImNvbmZpcm0iLCJwcm9tcHQiLCJfaXNQb3J0cmFpdCIsImlzUG9ydHJhaXQiLCJfb25ET01Db250ZW50TG9hZGVkIiwiX29uT3JpZW50YXRpb25DaGFuZ2UiLCJfb25SZXNpemUiLCJpbm5lcldpZHRoIiwiX2luc3RhbGxJc1BvcnRyYWl0SW1wbGVtZW50YXRpb24iLCJlbWl0Iiwib3JpZW50YXRpb24iLCJuSXRlciIsImludGVydmFsIiwic2V0SW50ZXJ2YWwiLCJtaXhpbiIsIl9pbml0Iiwic29mdHdhcmVLZXlib2FyZCIsIk1pY3JvRXZlbnQiLCJfdmlzaWJsZSIsIm9uU2hvdyIsIm9uSGlkZSIsImJpbmRFdmVudHMiLCJLZXlib2FyZCIsIm9uc2hvdyIsIm9uaGlkZSIsInZpc2libGUiLCJpc1Zpc2libGUiLCJub1BsdWdpbkVycm9yIiwiX2RvbUNvbnRlbnRMb2FkZWQiLCJfcmVhZHkiLCJIYW5kbGVyUmVwb3NpdG9yeSIsImRhdGFzZXQiLCJkZXZpY2VCYWNrQnV0dG9uSGFuZGxlcklkIiwiX2dlbklkIiwiX3N0b3JlIiwiRGV2aWNlQmFja0J1dHRvbkRpc3BhdGNoZXIiLCJfaXNFbmFibGVkIiwiX2JvdW5kQ2FsbGJhY2siLCJfY2FsbGJhY2siLCJhZGRCYWNrQnV0dG9uTGlzdGVuZXIiLCJyZW1vdmVCYWNrQnV0dG9uTGlzdGVuZXIiLCJfZGlzcGF0Y2hEZXZpY2VCYWNrQnV0dG9uRXZlbnQiLCJfZWxlbWVudCIsInRyZWUiLCJfY2FwdHVyZVRyZWUiLCJfZmluZEhhbmRsZXJMZWFmRWxlbWVudCIsImNyZWF0ZVRyZWUiLCJhcnJheU9mIiwiY2hpbGRFbGVtZW50IiwiZGlzcGxheSIsInN1YlRyZWUiLCJjaGlsZE5vZGUiLCJsZWZ0IiwicmlnaHQiLCJsZWZ0WiIsInpJbmRleCIsInJpZ2h0WiIsImdlbmVyYXRlSWQiLCJEb29yTG9jayIsIl9sb2NrTGlzdCIsIl93YWl0TGlzdCIsIl9sb2ciLCJsb2ciLCJ1bmxvY2siLCJfdW5sb2NrIiwiX3RyeVRvRnJlZVdhaXRMaXN0IiwiaXNMb2NrZWQiLCJsb2FkUGFnZSIsInBhZ2VFbGVtZW50IiwidW5sb2FkUGFnZSIsIl9kZXN0cm95IiwiUGFnZUxvYWRlciIsImxvYWRlciIsInVubG9hZGVyIiwiX2xvYWRlciIsIl91bmxvYWRlciIsImRlZmF1bHRQYWdlTG9hZGVyIiwiaW5zdGFudFBhZ2VMb2FkZXIiLCJCYXNlQW5pbWF0b3IiLCJwcm9wZXJ0aWVzIiwiZXh0ZW5kZWRBbmltYXRvciIsIm5ld0FuaW1hdG9yIiwib25zIiwiX3V0aWwiLCJhbmltaXQiLCJfZGV2aWNlQmFja0J1dHRvbkRpc3BhdGNoZXIiLCJkZXZpY2VCYWNrQnV0dG9uRGlzcGF0Y2hlciIsIl9pbnRlcm5hbCIsIlBhZ2VBdHRyaWJ1dGVFeHByZXNzaW9uIiwiX2FuaW1hdGlvbk9wdGlvbnNQYXJzZXIiLCJhbmltYXRpb25PcHRpb25zUGFyc2VyIiwiX2F1dG9TdHlsZSIsIl9Eb29yTG9jayIsIl9jb250ZW50UmVhZHkiLCJfQmFzZUFuaW1hdG9yIiwiX3JlYWR5TG9jayIsInNlbGVjdCIsImxvY2F0aW9uIiwic2VhcmNoIiwid2FpdERldmljZVJlYWR5IiwiaXNSZWFkeSIsInJlYWR5Iiwid2FpdFVubG9jayIsInNldERlZmF1bHREZXZpY2VCYWNrQnV0dG9uTGlzdGVuZXIiLCJsaXN0ZW5lciIsIl9kZWZhdWx0RGV2aWNlQmFja0J1dHRvbkhhbmRsZXIiLCJzZXRMaXN0ZW5lciIsImRpc2FibGVEZXZpY2VCYWNrQnV0dG9uSGFuZGxlciIsImRpc2FibGUiLCJlbmFibGVEZXZpY2VCYWNrQnV0dG9uSGFuZGxlciIsImVuYWJsZUF1dG9TdGF0dXNCYXJGaWxsIiwiZGlzYWJsZUF1dG9TdGF0dXNCYXJGaWxsIiwiZGlzYWJsZUFuaW1hdGlvbnMiLCJlbmFibGVBbmltYXRpb25zIiwiX2Rpc2FibGVXYXJuaW5ncyIsIl9lbmFibGVXYXJuaW5ncyIsImRpc2FibGVBdXRvU3R5bGluZyIsImVuYWJsZUF1dG9TdHlsaW5nIiwiZm9yY2VQbGF0Zm9ybVN0eWxpbmciLCJuZXdQbGF0Zm9ybSIsIl9wbGF0Zm9ybVVwZGF0ZSIsInByZXBhcmUiLCJfdXBkYXRlUG9zaXRpb24iLCJfY3JlYXRlUG9wb3Zlck9yaWdpbmFsIiwiZGl2IiwicG9wb3ZlciIsImxpbmsiLCJjcmVhdGVQb3BvdmVyIiwiX2NyZWF0ZURpYWxvZ09yaWdpbmFsIiwiY3JlYXRlRGlhbG9nIiwiX2NyZWF0ZUFsZXJ0RGlhbG9nT3JpZ2luYWwiLCJhbGVydERpYWxvZyIsImNyZWF0ZUFsZXJ0RGlhbG9nIiwiX3Jlc29sdmVMb2FkaW5nUGxhY2Vob2xkZXJPcmlnaW5hbCIsIl9yZXNvbHZlTG9hZGluZ1BsYWNlaG9sZGVyIiwicmVzb2x2ZUxvYWRpbmdQbGFjZWhvbGRlciIsIl9zZXR1cExvYWRpbmdQbGFjZUhvbGRlcnMiLCJjb250ZW50RWxlbWVudCIsImNhdGNoIiwidW5sb2NrRGV2aWNlUmVhZHkiLCJsb2NrIiwiX3N1cGVyU2VjcmV0T25zIiwiZ2V0RWxlbWVudENsYXNzIiwiQmFzZUVsZW1lbnQiLCJpbml0IiwiVGVtcGxhdGVFbGVtZW50Iiwib3V0ZXJIVE1MIiwiYnViYmxlcyIsIklmRWxlbWVudCIsIl9pc0FsbG93ZWRQbGF0Zm9ybSIsImNvbmRpdGlvbmFsT3JpZW50YXRpb24iLCJjdXJyZW50T3JpZW50YXRpb24iLCJBbGVydERpYWxvZ0FuaW1hdG9yIiwiQW5kcm9pZEFsZXJ0RGlhbG9nQW5pbWF0b3IiLCJfbWFzayIsIl9kaWFsb2ciLCJzYXZlU3R5bGUiLCJyZXN0b3JlU3R5bGUiLCJJT1NBbGVydERpYWxvZ0FuaW1hdG9yIiwiX2FuaW1hdG9yRGljdCIsIkFsZXJ0RGlhbG9nRWxlbWVudCIsIl9jb21waWxlIiwiX2Rvb3JMb2NrIiwiX2JvdW5kQ2FuY2VsIiwiX2NhbmNlbCIsIl91cGRhdGVBbmltYXRvckZhY3RvcnkiLCJfYW5pbWF0b3JGYWN0b3J5IiwibWFzayIsImJhY2tncm91bmRDb2xvciIsImluaXRNb2RpZmllciIsImNhbmNlbCIsInBhcnNlQW5pbWF0aW9uT3B0aW9uc1N0cmluZyIsInRyeVNob3ciLCJvcGFjaXR5IiwidHJ5SGlkZSIsIl9ydW5uaW5nIiwib25EZXZpY2VCYWNrQnV0dG9uIiwiY2FsbFBhcmVudEhhbmRsZXIiLCJfYmFja0J1dHRvbkhhbmRsZXIiLCJvbk1vZGlmaWVyQ2hhbmdlZCIsImNyZWF0ZUhhbmRsZXIiLCJkZWZhdWx0Q2xhc3NOYW1lIiwiQmFja0J1dHRvbkVsZW1lbnQiLCJfb3B0aW9ucyIsIl9ib3VuZE9uQ2xpY2siLCJfb25DbGljayIsImljb24iLCJvbkNsaWNrIiwicG9wUGFnZSIsImNvbnRhaW5zIiwiQm90dG9tVG9vbGJhckVsZW1lbnQiLCJCdXR0b25FbGVtZW50IiwiX3VwZGF0ZVJpcHBsZSIsIkNhcm91c2VsSXRlbUVsZW1lbnQiLCJ3aWR0aCIsIlZlcnRpY2FsTW9kZVRyYWl0IiwiX2N1cnJlbnRFbGVtZW50U2l6ZSIsInNjcm9sbCIsIl9zdHlsZSIsIl9kaW1lbnNpb25zIiwiY2VudGVyZWQiLCJwYWRkaW5nQm90dG9tIiwiX29mZnNldCIsIl9nZXRDYXJvdXNlbEl0ZW1TaXplIiwiX2dldENhcm91c2VsSXRlbUVsZW1lbnRzIiwic2l6ZUF0dHIiLCJfZ2V0Q2Fyb3VzZWxJdGVtU2l6ZUF0dHIiLCJzaXplSW5mbyIsIl9kZWNvbXBvc2VTaXplU3RyaW5nIiwibnVtYmVyIiwidW5pdCIsIl91cGRhdGVEaW1lbnNpb25EYXRhIiwiX3VwZGF0ZU9mZnNldCIsIl9sYXlvdXRDYXJvdXNlbEl0ZW1zIiwiSG9yaXpvbnRhbE1vZGVUcmFpdCIsInBhZGRpbmdMZWZ0IiwicGFkZGluZ1JpZ2h0IiwiQ2Fyb3VzZWxFbGVtZW50IiwiX3Njcm9sbCIsIl9sYXN0QWN0aXZlSW5kZXgiLCJfYm91bmRPbkRyYWciLCJfb25EcmFnIiwiX2JvdW5kT25EcmFnRW5kIiwiX29uRHJhZ0VuZCIsIl9ib3VuZE9uUmVzaXplIiwiX21peGluIiwiX2lzVmVydGljYWwiLCJzZXRBY3RpdmVJbmRleCIsIm92ZXJmbG93WCIsIm92ZXJmbG93WSIsInJlZnJlc2giLCJfbGFzdFN0YXRlIiwiaXRlbUNvdW50IiwiZWxlbWVudFNpemUiLCJfZ2V0RWxlbWVudFNpemUiLCJyb3VuZCIsImF0dHJOYW1lIiwiaXRlbVNpemVBdHRyIiwic2l6ZSIsIl9nZXRJbml0aWFsSW5kZXgiLCJfc2Nyb2xsVG8iLCJfY2FsY3VsYXRlTWF4U2Nyb2xsIiwiX3RyeUZpcmVQb3N0Q2hhbmdlRXZlbnQiLCJnZXRBY3RpdmVJbmRleCIsImNhcm91c2VsSXRlbVNpemUiLCJhdXRvU2Nyb2xsIiwiX2dlc3R1cmVEZXRlY3RvciIsIl9tdXRhdGlvbk9ic2VydmVyIiwiX3VwZGF0ZVN3aXBlYWJsZSIsIl91cGRhdGVBdXRvUmVmcmVzaCIsInN3aXBlYWJsZSIsImxhc3RBY3RpdmVJbmRleCIsIl9pc1dyb25nRGlyZWN0aW9uIiwiX2xhc3REcmFnRXZlbnQiLCJfZ2V0U2Nyb2xsRGVsdGEiLCJfaXNPdmVyU2Nyb2xsIiwid2FpdEZvckFjdGlvbiIsIl9nZXRPdmVyU2Nyb2xsRGlyZWN0aW9uIiwiX3Njcm9sbFRvS2lsbE92ZXJTY3JvbGwiLCJfc3RhcnRNb21lbnR1bVNjcm9sbCIsInRyYWl0IiwiX2dldFNjcm9sbFZlbG9jaXR5Iiwic2Nyb2xsRGVsdGEiLCJfbm9ybWFsaXplU2Nyb2xsUG9zaXRpb24iLCJfZ2VuZXJhdGVTY3JvbGxUcmFuc2Zvcm0iLCJhcnIiLCJuYnJPZkl0ZW1zIiwicG9zIiwibGFzdFNjcm9sbCIsInNjcm9sbFJhdGlvIiwiYXV0b1Njcm9sbFJhdGlvIiwiaXNPdmVyc2Nyb2xsYWJsZSIsIm92ZXJzY3JvbGxhYmxlIiwibm9ybWFsaXplU2Nyb2xsIiwicmF0aW8iLCJtYXhTY3JvbGwiLCJjZWlsIiwiX3NldHVwIiwiX3NhdmVMYXN0U3RhdGUiLCJjYXJvdXNlbCIsIl9wcmVwYXJlRXZlbnRMaXN0ZW5lcnMiLCJfc2V0dXBJbml0aWFsSW5kZXgiLCJfb25EaXJlY3Rpb25DaGFuZ2UiLCJhdHRyIiwicGFyc2VGbG9hdCIsIkNvbEVsZW1lbnQiLCJfdXBkYXRlV2lkdGgiLCJ3ZWJraXRCb3hGbGV4Iiwid2Via2l0RmxleCIsIm1vekJveEZsZXgiLCJtb3pGbGV4IiwibXNGbGV4IiwiZmxleCIsIm1heFdpZHRoIiwiRGlhbG9nQW5pbWF0b3IiLCJBbmRyb2lkRGlhbG9nQW5pbWF0b3IiLCJJT1NEaWFsb2dBbmltYXRvciIsImJvZHlIZWlnaHQiLCJjbGllbnRIZWlnaHQiLCJTbGlkZURpYWxvZ0FuaW1hdG9yIiwiRGlhbG9nRWxlbWVudCIsIkZhYkVsZW1lbnQiLCJ0cmFuc2Zvcm0iLCJ3ZWJraXRUcmFuc2Zvcm0iLCJHZXN0dXJlRGV0ZWN0b3JFbGVtZW50IiwiSWNvbkVsZW1lbnQiLCJfdXBkYXRlIiwiX2NsZWFuQ2xhc3NBdHRyaWJ1dGUiLCJfYnVpbGRDbGFzc0FuZFN0eWxlIiwiX2dldEF0dHJpYnV0ZSIsInBhcnRzIiwiZGVmIiwibWQiLCJpY29uTmFtZSIsInJlbW92ZVByb3BlcnR5IiwiZm9udFNpemUiLCJMYXp5UmVwZWF0RWxlbWVudCIsIl9sYXp5UmVwZWF0UHJvdmlkZXIiLCJMaXN0SGVhZGVyRWxlbWVudCIsIkxpc3RJdGVtRWxlbWVudCIsIl9vblRvdWNoIiwiX29uUmVsZWFzZSIsIl9vcmlnaW5hbEJhY2tncm91bmRDb2xvciIsInRhcHBlZCIsIl9zaG91bGRMb2NrT25EcmFnIiwiX3RyYW5zaXRpb24iLCJ3ZWJraXRUcmFuc2l0aW9uIiwiTW96VHJhbnNpdGlvbiIsIl90YXBwYWJsZSIsIl90YXBCYWNrZ3JvdW5kQ29sb3IiLCJib3hTaGFkb3ciLCJMaXN0RWxlbWVudCIsImRlZmF1bHRDaGVja2JveENsYXNzIiwiZGVmYXVsdFJhZGlvQnV0dG9uQ2xhc3MiLCJJTlBVVF9BVFRSSUJVVEVTIiwiSW5wdXRFbGVtZW50IiwiX2JvdW5kT25JbnB1dCIsIl9vbklucHV0IiwiX2JvdW5kT25Gb2N1c2luIiwiX29uRm9jdXNpbiIsIl9ib3VuZERlbGVnYXRlRXZlbnQiLCJfZGVsZWdhdGVFdmVudCIsImhlbHBlciIsIl9pbnB1dCIsIl9oZWxwZXIiLCJfdXBkYXRlQm91bmRBdHRyaWJ1dGVzIiwiX3VwZGF0ZUxhYmVsIiwiX3VwZGF0ZUxhYmVsQ2xhc3MiLCJjaGVja2VkIiwiX2JvdW5kT25Gb2N1c291dCIsImlubmVyVGV4dCIsIl9zZXRMYWJlbCIsInRvSVNPU3RyaW5nIiwiTW9kYWxBbmltYXRvciIsIm1vZGFsIiwiRmFkZU1vZGFsQW5pbWF0b3IiLCJNb2RhbEVsZW1lbnQiLCJOYXZpZ2F0b3JUcmFuc2l0aW9uQW5pbWF0b3IiLCJlbnRlclBhZ2UiLCJsZWF2ZVBhZ2UiLCJibG9ja2VyIiwiSU9TU2xpZGVOYXZpZ2F0b3JUcmFuc2l0aW9uQW5pbWF0b3IiLCJiYWNrZ3JvdW5kTWFzayIsInRvb2xiYXIiLCJfZ2V0VG9vbGJhckVsZW1lbnQiLCJfZ2V0VG9vbGJhckxlZnRJdGVtc0VsZW1lbnQiLCJfZ2V0VG9vbGJhclJpZ2h0SXRlbXNFbGVtZW50IiwiZXhjbHVkZUJhY2tCdXR0b24iLCJvdGhlciIsIl9nZXRUb29sYmFyQ2VudGVySXRlbXNFbGVtZW50IiwiX2dldFRvb2xiYXJCYWNrQnV0dG9uSWNvbkVsZW1lbnQiLCJfZ2V0VG9vbGJhckJhY2tCdXR0b25MYWJlbEVsZW1lbnQiLCJfZ2V0Q29udGVudEVsZW1lbnQiLCJfZ2V0QmFja2dyb3VuZEVsZW1lbnQiLCJfZ2V0Qm90dG9tVG9vbGJhckVsZW1lbnQiLCJib3RoUGFnZUhhc1Rvb2xiYXIiLCJfY2FuQW5pbWF0ZVRvb2xiYXIiLCJub01hdGVyaWFsVG9vbGJhciIsImRlY29tcG9zaXRpb24iLCJwYWdlUmVjdCIsImJhY2tCdXR0b25MYWJlbCIsImxhYmVsUmVjdCIsImJhY2tCdXR0b25JY29uIiwidW5ibG9jayIsImVudGVyUGFnZVRhcmdldCIsImxlYXZlUGFnZVRhcmdldCIsImVudGVyUGFnZURlY29tcG9zaXRpb24iLCJfZGVjb21wb3NlIiwibGVhdmVQYWdlRGVjb21wb3NpdGlvbiIsImRlbHRhIiwiX2NhbGN1bGF0ZURlbHRhIiwibWFza0NsZWFyIiwic2hvdWxkQW5pbWF0ZVRvb2xiYXIiLCJfc2hvdWxkQW5pbWF0ZVRvb2xiYXIiLCJlbnRlclBhZ2VUb29sYmFySGVpZ2h0IiwiYm90dG9tVG9vbGJhciIsImJhY2tncm91bmQiLCJ0b29sYmFyQ2VudGVyIiwiSU9TTGlmdE5hdmlnYXRvclRyYW5zaXRpb25BbmltYXRvciIsIklPU0ZhZGVOYXZpZ2F0b3JUcmFuc2l0aW9uQW5pbWF0b3IiLCJNRFNsaWRlTmF2aWdhdG9yVHJhbnNpdGlvbkFuaW1hdG9yIiwiYmxhY2tNYXNrT3BhY2l0eSIsIk1ETGlmdE5hdmlnYXRvclRyYW5zaXRpb25BbmltYXRvciIsIk1ERmFkZU5hdmlnYXRvclRyYW5zaXRpb25BbmltYXRvciIsIk5vbmVOYXZpZ2F0b3JUcmFuc2l0aW9uQW5pbWF0b3IiLCJyZXdyaXRhYmxlcyIsIm5hdmlnYXRvckVsZW1lbnQiLCJOYXZpZ2F0b3JFbGVtZW50IiwiX2lzUnVubmluZyIsIl9pbml0aWFsaXplZCIsIl9wYWdlTG9hZGVyIiwiX3BhZ2VNYXAiLCJfcGFnZSIsIl9vbkRldmljZUJhY2tCdXR0b24iLCJfZ2V0UGFnZVRhcmdldCIsInB1c2hQYWdlIiwiX3Nob3ciLCJfdXBkYXRlTGFzdFBhZ2VCYWNrQnV0dG9uIiwiX3ByZXBhcmVQYWdlQW5kT3B0aW9ucyIsInBvcFVwZGF0ZSIsInVubG9hZCIsIl9wb3BQYWdlIiwiX3BvcFBhZ2VBbmRSZWZyZXNoIiwib2xkUGFnZSIsInB1c2hlZE9wdGlvbnMiLCJkYXRhIiwibG9hZCIsInVwZGF0ZSIsIl9lbWl0UHJlUG9wRXZlbnQiLCJ1cGRhdGVCYWNrQnV0dG9uIiwiX2hpZGUiLCJfdmVyaWZ5UGFnZUVsZW1lbnQiLCJwYWdlSFRNTCIsIl9wdXNoUGFnZSIsIl9lbWl0UHJlUHVzaEV2ZW50IiwicGFnZUxlbmd0aCIsInJlc29sdmVkVmFsdWUiLCJfbm9ybWFsaXplSW5kZXgiLCJfbGFzdEluZGV4T2ZQYWdlIiwicGFnZU5hbWUiLCJpc0NhbmNlbGVkIiwiX2VtaXRQcmVFdmVudCIsInRlbXBsYXRlSFRNTCIsInBhZ2VMb2FkZXIiLCJUb29sYmFyRWxlbWVudCIsIl9lbnN1cmVUb29sYmFySXRlbUVsZW1lbnRzIiwiX2Vuc3VyZVRvb2xiYXJFbGVtZW50IiwibnVsbFRvb2xiYXJFbGVtZW50IiwiUGFnZUVsZW1lbnQiLCJfaXNTaG93biIsIl9pc011dGVkIiwiX3NraXBJbml0IiwiX3RyeVRvRmlsbFN0YXR1c0JhciIsImJhY2tCdXR0b24iLCJmaWxsZWQiLCJfaGFzQVBhZ2VDb250cm9sQ2hpbGQiLCJvdmVyTGltaXQiLCJzY3JvbGxIZWlnaHQiLCJfaW5maW5pdGVTY3JvbGxMaW1pdCIsIl9vbkluZmluaXRlU2Nyb2xsIiwiX2xvYWRpbmdDb250ZW50Iiwib25JbmZpbml0ZVNjcm9sbCIsIl9lbGVtZW50U2hvdWxkQmVNb3ZlZCIsInByZXZOb2RlIiwiZml4ZWRFbGVtZW50cyIsIl9ib3VuZE9uU2Nyb2xsIiwiX29uU2Nyb2xsIiwiUG9wb3ZlckFuaW1hdG9yIiwiZnJvbSIsInRvIiwicmVzdG9yZSIsImFuaW1hdGlvbnMiLCJfYW5pbWF0ZSIsImZhZGUiLCJNREZhZGVQb3BvdmVyQW5pbWF0b3IiLCJfYW5pbWF0ZUFsbCIsImluIiwiSU9TRmFkZVBvcG92ZXJBbmltYXRvciIsInRlbXBsYXRlU291cmNlIiwicG9zaXRpb25zIiwiUG9wb3ZlckVsZW1lbnQiLCJfaW5pdEFuaW1hdG9yRmFjdG9yeSIsImZhY3RvcnkiLCJfYW5pbWF0b3IiLCJyYWRpdXMiLCJfcmFkaXVzIiwiX2NvbnRlbnQiLCJtYXJnaW4iLCJfbWFyZ2luIiwidGFyZ2V0UmVjdCIsImlzTUQiLCJjb3ZlciIsInRhcmdldERpc3RhbmNlIiwiYm90dG9tIiwidGFyZ2V0Q2VudGVyRGlzdGFuY2VGcm9tIiwiX2NhbGN1bGF0ZURpcmVjdGlvbnMiLCJ2ZXJ0aWNhbCIsInByaW1hcnlEaXJlY3Rpb24iLCJwcmltYXJ5Iiwic2Vjb25kYXJ5Iiwic2l6ZU5hbWUiLCJjb250ZW50U2l6ZSIsIl9wb3BvdmVyIiwic2Vjb25kYXJ5T2Zmc2V0IiwiX2Fycm93IiwiX2N1cnJlbnRUYXJnZXQiLCJfcG9zaXRpb25Qb3BvdmVyIiwiaGFzRGVmYXVsdENvbnRhaW5lciIsImFycm93IiwiYWN0aW9ucyIsIl9wcmVwYXJlQW5pbWF0aW9uT3B0aW9ucyIsImNhbmNlbGVkIiwiX2V4ZWN1dGVBY3Rpb24iLCJfY2xlYXJTdHlsZXMiLCJQcm9ncmVzc0JhckVsZW1lbnQiLCJfaXNDb21waWxlZCIsIl90ZW1wbGF0ZSIsIl9wcmltYXJ5IiwiX3NlY29uZGFyeSIsIl91cGRhdGVEZXRlcm1pbmF0ZSIsIl91cGRhdGVWYWx1ZSIsImJhckVsZW1lbnQiLCJQcm9ncmVzc0NpcmN1bGFyRWxlbWVudCIsInBlciIsInN2ZyIsIlNUQVRFX0lOSVRJQUwiLCJTVEFURV9QUkVBQ1RJT04iLCJTVEFURV9BQ1RJT04iLCJyZW1vdmVUcmFuc2Zvcm0iLCJXZWJraXRUcmFuc2Zvcm0iLCJXZWJraXRUcmFuc2l0aW9uIiwiUHVsbEhvb2tFbGVtZW50IiwiX2JvdW5kT25EcmFnU3RhcnQiLCJfb25EcmFnU3RhcnQiLCJfc2V0U3RhdGUiLCJsaW5lSGVpZ2h0IiwibWFyZ2luVG9wIiwiX3BhZ2VFbGVtZW50IiwiZGlzYWJsZWQiLCJfc3RhcnRTY3JvbGwiLCJfY3VycmVudFRyYW5zbGF0aW9uIiwiX2dldEN1cnJlbnRTY3JvbGwiLCJfdHJhbnNpdGlvbkRyYWdMZW5ndGgiLCJfdGhyZXNob2xkSGVpZ2h0RW5hYmxlZCIsInRocmVzaG9sZEhlaWdodCIsIl9maW5pc2giLCJfdHJhbnNsYXRlVG8iLCJhbmltYXRlIiwib25BY3Rpb24iLCJ0aCIsIm5vRXZlbnQiLCJsYXN0U3RhdGUiLCJfZ2V0U3RhdGUiLCJfaXNDb250ZW50Rml4ZWQiLCJfZ2V0U2Nyb2xsYWJsZUVsZW1lbnQiLCJfZ2VuZXJhdGVUcmFuc2xhdGlvblRyYW5zZm9ybSIsIl9kcmFnTG9ja0Rpc2FibGVkIiwiX2Rlc3Ryb3lFdmVudExpc3RlbmVycyIsIl9jcmVhdGVFdmVudExpc3RlbmVycyIsIl9zZXRTdHlsZSIsIl9vbkFjdGlvbiIsIkFuaW1hdG9yQ1NTIiwiZmluYWwiLCJnZXRUaW1lIiwiaW5pdGlhbCIsIm5leHQiLCJ1cGRhdGVTdHlsZXMiLCJjbGVhclRpbWVvdXQiLCJ0cmFuc2l0aW9uRHVyYXRpb24iLCJzdG9wTmV4dCIsImNiIiwibmV3RHVyYXRpb24iLCJwYXNzZWQiLCJyZW1haW5pbmciLCJzcGVlZFVwVGltZSIsInN0b3AiLCJtaWxsaXNlY29uZHMiLCJzcGVlZCIsInRyYW5zaXRpb25Qcm9wZXJ0eSIsIl9vblN0b3BBbmltYXRpb25zIiwiX3F1ZXVlIiwiX2luZGV4Iiwic3RvcEFuaW1hdGlvbnMiLCJSaXBwbGVFbGVtZW50IiwiX3dhdmUiLCJnZXRFbGVtZW50c0J5Q2xhc3NOYW1lIiwiX2JhY2tncm91bmQiLCJfY2VudGVyIiwiX21pblIiLCJfY2FsY3VsYXRlQ29vcmRzIiwic3RvcEFsbCIsImNvbXB1dGVkU3R5bGUiLCJfdXBkYXRlUGFyZW50IiwiX3JpcHBsZUFuaW1hdGlvbiIsIl9ob2xkaW5nIiwiX2JvdW5kT25SZWxlYXNlIiwiX29uVGFwIiwiX3BhcmVudE5vZGUiLCJfYm91bmRPblRhcCIsIl9ib3VuZE9uSG9sZCIsIl9vbkhvbGQiLCJwbiIsIlJvd0VsZW1lbnQiLCJTZWxlY3RFbGVtZW50IiwiX3NlbGVjdCIsInNlbCIsIl9fZGVmaW5lR2V0dGVyX18iLCJfX2RlZmluZVNldHRlcl9fIiwib3B0aW9uIiwiU3BlZWREaWFsSXRlbUVsZW1lbnQiLCJfdXBkYXRlQ2xhc3NOYW1lIiwiZXZlcnkiLCJzdHlsZXIiLCJfcHJlZml4IiwicHJlZml4IiwiY2xlYXIiLCJfY2xlYXIiLCJTcGVlZERpYWxFbGVtZW50IiwiX2l0ZW1TaG93biIsIl91cGRhdGVEaXJlY3Rpb24iLCJ0b2dnbGVJdGVtcyIsImlubGluZSIsIl9mYWIiLCJoaWRlSXRlbXMiLCJ0b3RhbERlbGF5IiwiaXNPcGVuIiwic2hvd0l0ZW1zIiwiU3BsaXR0ZXJDb250ZW50RWxlbWVudCIsIm9sZENvbnRlbnQiLCJTcGxpdHRlck1hc2tFbGVtZW50IiwiX3NpZGVzIiwic2lkZSIsIm1vZGUiLCJjbG9zZSIsIlNwbGl0dGVyQW5pbWF0b3IiLCJzaWRlRWxlbWVudCIsInNwbGl0dGVyIiwiX3NpZGUiLCJtaW51cyIsIlNwbGl0dGVyRWxlbWVudCIsIl9sYXlvdXQiLCJfd2lkdGgiLCJfYm91bmRPbk1vZGVDaGFuZ2UiLCJfb25Nb2RlQ2hhbmdlIiwiX2dldFNpZGUiLCJTUExJVF9NT0RFIiwiQ09MTEFQU0VfTU9ERSIsIkNMT1NFRF9TVEFURSIsIk9QRU5fU1RBVEUiLCJDSEFOR0lOR19TVEFURSIsIldBVENIRURfQVRUUklCVVRFUyIsInNwbGl0dGVyU2lkZUVsZW1lbnQiLCJDb2xsYXBzZURldGVjdGlvbiIsImNoYW5nZVRhcmdldCIsIl90YXJnZXQiLCJfb3JpZW50YXRpb24iLCJhY3RpdmF0ZSIsIl91cGRhdGVNb2RlIiwiX21hdGNoIiwiX3F1ZXJ5UmVzdWx0IiwibWF0Y2hNZWRpYSIsImFkZExpc3RlbmVyIiwicmVtb3ZlTGlzdGVuZXIiLCJ3aWR0aFRvUHgiLCJvZmZzZXRXaWR0aCIsIkNvbGxhcHNlTW9kZSIsIl9hY3RpdmUiLCJfc3RhdGUiLCJfbG9jayIsIl9pc09wZW5PdGhlclNpZGVNZW51IiwiX2lnbm9yZURyYWciLCJzY3JvbGxpbmciLCJhcmVhIiwiX3N3aXBlVGFyZ2V0V2lkdGgiLCJfc3RhcnREaXN0YW5jZSIsIl9kaXN0YW5jZSIsInRyYW5zbGF0ZSIsInNob3VsZE9wZW4iLCJfdGhyZXNob2xkIiwiZXhlY3V0ZUFjdGlvbiIsImxheW91dCIsIkZJTkFMX1NUQVRFIiwiX2VtaXRFdmVudCIsIndpdGhvdXRBbmltYXRpb24iLCJTcGxpdHRlclNpZGVFbGVtZW50IiwiX2NvbGxhcHNlTW9kZSIsIl9jb2xsYXBzZURldGVjdGlvbiIsIl9ib3VuZEhhbmRsZUdlc3R1cmUiLCJoYW5kbGVHZXN0dXJlIiwiX3dhdGNoZWRBdHRyaWJ1dGVzIiwiX21vZGUiLCJ0aHJlc2hvbGQiLCJ1cGRhdGVPcHRpb25zIiwibG9jYXRpb25zIiwiU3dpdGNoRWxlbWVudCIsIl9jaGVja2VkIiwiX2Rpc2FibGVkIiwiX2NoZWNrYm94IiwiX2hhbmRsZSIsImNsaWNrIiwiX2xvY2F0aW9ucyIsIl9zdGFydFgiLCJfZ2V0UG9zaXRpb24iLCJwcmV2aW91c1ZhbHVlIiwiX2lzTWF0ZXJpYWwiLCJUYWJiYXJBbmltYXRvciIsImVudGVyUGFnZUluZGV4IiwibGVhdmVQYWdlSW5kZXgiLCJUYWJiYXJOb25lQW5pbWF0b3IiLCJlbnRlckluZGV4IiwibGVhdmVJbmRleCIsIlRhYmJhckZhZGVBbmltYXRvciIsIlRhYmJhclNsaWRlQW5pbWF0b3IiLCJzZ24iLCJ0YWJiYXJFbGVtZW50IiwiVGFiYmFyRWxlbWVudCIsIl90YWJiYXJJZCIsImFjdGl2ZUluZGV4IiwidGFiYmFyIiwiX3RhYmJhckVsZW1lbnQiLCJiYXIiLCJfdG9wIiwib2xkUGFnZUVsZW1lbnQiLCJfb2xkUGFnZUVsZW1lbnQiLCJzZWxlY3RlZFRhYkluZGV4IiwicHJldmlvdXNUYWJJbmRleCIsInByZXZpb3VzVGFiIiwiX2dldEFjdGl2ZVRhYkVsZW1lbnQiLCJzZWxlY3RlZFRhYiIsIl9nZXRUYWJFbGVtZW50IiwiZ2V0QWN0aXZlVGFiSW5kZXgiLCJwcmV2aW91c1BhZ2VFbGVtZW50IiwiX2dldEN1cnJlbnRQYWdlRWxlbWVudCIsInNldEluYWN0aXZlIiwic2V0QWN0aXZlIiwiX2xvYWRQYWdlRWxlbWVudCIsIl9zd2l0Y2hQYWdlIiwiX2dldFRhYmJhckVsZW1lbnQiLCJzZXRUYWJiYXJWaXNpYmlsaXR5IiwidGFicyIsIlRhYkVsZW1lbnQiLCJpc0FjdGl2ZSIsImN1cnJlbnRQYWdlRWxlbWVudCIsImRlZmF1bHRJbm5lclRlbXBsYXRlU291cmNlIiwiaGFzSW5wdXQiLCJoYXNCdXR0b24iLCJfYnV0dG9uIiwiX3RlbXBsYXRlTG9hZGVkIiwiaGFzQ2hpbGRyZW4iLCJfaGFzRGVmYXVsdFRlbXBsYXRlIiwiX3VwZGF0ZURlZmF1bHRUZW1wbGF0ZSIsImJhZGdlIiwiaWNvbkVsZW1lbnQiLCJsYWJlbEVsZW1lbnQiLCJiYWRnZUVsZW1lbnQiLCJfZmluZFRhYmJhckVsZW1lbnQiLCJzZXRBY3RpdmVUYWIiLCJfZmluZFRhYkluZGV4IiwiX2xvYWRlZFBhZ2UiLCJfbG9hZGluZ1BhZ2UiLCJfZW5zdXJlRWxlbWVudFBvc2l0aW9uIiwiaGFzTG9hZGVkIiwiVG9vbGJhckJ1dHRvbkVsZW1lbnQiLCJSYW5nZUVsZW1lbnQiLCJfdXBkYXRlRGlzYWJsZWQiLCJiYWNrZ3JvdW5kU2l6ZSIsIl9yYXRpbyIsIl9vbkRyYWdzdGFydCIsImZhc3RDbGljayIsIkZhc3RDbGljayIsImF0dGFjaCIsImFwcCIsImV4aXRBcHAiLCJWaWV3cG9ydCJdLCJtYXBwaW5ncyI6IjtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FDckJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUM3VkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FDZEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUNoUEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQ24wQkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUMzRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FDdE9BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FDdE1BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUN0RUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7O0FDN0tBO0FBQ0EsSUFBSUEsT0FBT0MsY0FBWCxFQUEyQjs7V0FDaEJBLGNBQVAsQ0FBc0JDLGFBQXRCLEdBQXNDLElBQXRDOzs7QUNGSixDQUFDLFlBQVU7O01BQ01DLElBQUUsSUFBSSxZQUFVLEVBQWQsRUFBTixDQUF1QixJQUFJQyxLQUFHLElBQUlDLEdBQUosQ0FBUSxtSEFBbUhDLEtBQW5ILENBQXlILEdBQXpILENBQVIsQ0FBUCxDQUE4SSxTQUFTQyxDQUFULENBQVdDLENBQVgsRUFBYTtRQUFLQyxJQUFFTCxHQUFHTSxHQUFILENBQU9GLENBQVAsQ0FBTixDQUFnQkEsSUFBRSxtQ0FBbUNHLElBQW5DLENBQXdDSCxDQUF4QyxDQUFGLENBQTZDLE9BQU0sQ0FBQ0MsQ0FBRCxJQUFJRCxDQUFWO1lBQXFCSSxDQUFULENBQVdKLENBQVgsRUFBYTtRQUFLQyxJQUFFRCxFQUFFSyxXQUFSLENBQW9CLElBQUcsS0FBSyxDQUFMLEtBQVNKLENBQVosRUFBYyxPQUFPQSxDQUFQLENBQVMsT0FBS0QsS0FBRyxFQUFFQSxFQUFFTSxxQkFBRixJQUF5Qk4sYUFBYU8sUUFBeEMsQ0FBUjtVQUE2RFAsRUFBRVEsVUFBRixLQUFlaEIsT0FBT2lCLFVBQVAsSUFBbUJULGFBQWFTLFVBQWhDLEdBQTJDVCxFQUFFVSxJQUE3QyxHQUFrRCxLQUFLLENBQXRFLENBQUY7S0FBMkUsT0FBTSxFQUFFLENBQUNWLENBQUQsSUFBSSxFQUFFQSxFQUFFTSxxQkFBRixJQUF5Qk4sYUFBYU8sUUFBeEMsQ0FBTixDQUFOOztXQUMvYkksQ0FBVCxDQUFXWCxDQUFYLEVBQWFDLENBQWIsRUFBZTtXQUFNQSxLQUFHQSxNQUFJRCxDQUFQLElBQVUsQ0FBQ0MsRUFBRVcsV0FBbEI7VUFBaUNYLEVBQUVPLFVBQUo7S0FBZSxPQUFPUCxLQUFHQSxNQUFJRCxDQUFQLEdBQVNDLEVBQUVXLFdBQVgsR0FBdUIsSUFBOUI7O1dBQ3JEQyxDQUFULENBQVdiLENBQVgsRUFBYUMsQ0FBYixFQUFlYSxDQUFmLEVBQWlCO1FBQUdBLElBQUVBLENBQUYsR0FBSSxJQUFJakIsR0FBSixFQUFOLENBQWMsS0FBSSxJQUFJa0IsSUFBRWYsQ0FBVixFQUFZZSxDQUFaLEdBQWU7VUFBSUEsRUFBRUMsUUFBRixLQUFhQyxLQUFLQyxZQUFyQixFQUFrQztZQUFLQyxJQUFFSixDQUFOLENBQVFkLEVBQUVrQixDQUFGLEVBQUssSUFBSUMsSUFBRUQsRUFBRUUsU0FBUixDQUFrQixJQUFHLFdBQVNELENBQVQsSUFBWSxhQUFXRCxFQUFFRyxZQUFGLENBQWUsS0FBZixDQUExQixFQUFnRDtjQUFHSCxFQUFFSSxNQUFKLENBQVcsSUFBR1IsYUFBYUUsSUFBYixJQUFtQixDQUFDSCxFQUFFWixHQUFGLENBQU1hLENBQU4sQ0FBdkIsRUFBZ0MsS0FBSUQsRUFBRVUsR0FBRixDQUFNVCxDQUFOLEdBQVNBLElBQUVBLEVBQUVVLFVBQWpCLEVBQTRCVixDQUE1QixFQUE4QkEsSUFBRUEsRUFBRUgsV0FBbEM7Y0FBZ0RHLENBQUYsRUFBSWQsQ0FBSixFQUFNYSxDQUFOO1dBQVNDLElBQUVKLEVBQUVYLENBQUYsRUFBSW1CLENBQUosQ0FBRixDQUFTO1NBQTVKLE1BQTBLLElBQUcsZUFBYUMsQ0FBaEIsRUFBa0I7Y0FBR1QsRUFBRVgsQ0FBRixFQUFJbUIsQ0FBSixDQUFGLENBQVM7YUFBWUEsSUFBRUEsRUFBRU8sZUFBUCxFQUF1QixLQUFJUCxJQUFFQSxFQUFFTSxVQUFSLEVBQW1CTixDQUFuQixFQUFxQkEsSUFBRUEsRUFBRVAsV0FBekI7WUFBdUNPLENBQUYsRUFBSWxCLENBQUosRUFBTWEsQ0FBTjs7V0FBV0MsRUFBRVUsVUFBRixHQUFhVixFQUFFVSxVQUFmLEdBQTBCZCxFQUFFWCxDQUFGLEVBQUllLENBQUosQ0FBNUI7O1lBQTZDWSxDQUFULENBQVczQixDQUFYLEVBQWFDLENBQWIsRUFBZWEsQ0FBZixFQUFpQjtNQUFHYixDQUFGLElBQUthLENBQUw7R0FBUSxTQUFTYyxDQUFULEdBQVk7U0FBTTNCLENBQUwsR0FBTyxJQUFJNEIsR0FBSixFQUFQLENBQWUsS0FBS0MsQ0FBTCxHQUFPLElBQUlELEdBQUosRUFBUCxDQUFlLEtBQUtkLENBQUwsR0FBTyxFQUFQLENBQVUsS0FBS2YsQ0FBTCxHQUFPLENBQUMsQ0FBUjtZQUFtQitCLEVBQVQsQ0FBWS9CLENBQVosRUFBY0MsQ0FBZCxFQUFnQmEsQ0FBaEIsRUFBa0I7TUFBR2IsQ0FBRixDQUFJK0IsR0FBSixDQUFRL0IsQ0FBUixFQUFVYSxDQUFWLEVBQWFkLEVBQUU4QixDQUFGLENBQUlFLEdBQUosQ0FBUWxCLEVBQUVtQixXQUFWLEVBQXNCbkIsQ0FBdEI7WUFBa0NvQixDQUFULENBQVdsQyxDQUFYLEVBQWFDLENBQWIsRUFBZTtNQUFHRCxDQUFGLEdBQUksQ0FBQyxDQUFMLENBQU9BLEVBQUVlLENBQUYsQ0FBSW9CLElBQUosQ0FBU2xDLENBQVQ7WUFBcUJtQyxDQUFULENBQVdwQyxDQUFYLEVBQWFDLENBQWIsRUFBZTtNQUFHRCxDQUFGLElBQUthLEVBQUVaLENBQUYsRUFBSSxVQUFTQSxDQUFULEVBQVc7YUFBUW9DLEVBQUVyQyxDQUFGLEVBQUlDLENBQUosQ0FBUDtLQUFoQixDQUFMO1lBQThDb0MsQ0FBVCxDQUFXckMsQ0FBWCxFQUFhQyxDQUFiLEVBQWU7UUFBSUQsRUFBRUEsQ0FBRixJQUFLLENBQUNDLEVBQUVxQyxZQUFYLEVBQXdCO1FBQUdBLFlBQUYsR0FBZSxDQUFDLENBQWhCLENBQWtCLEtBQUksSUFBSXhCLElBQUUsQ0FBVixFQUFZQSxJQUFFZCxFQUFFZSxDQUFGLENBQUl3QixNQUFsQixFQUF5QnpCLEdBQXpCO1VBQStCQyxDQUFGLENBQUlELENBQUosRUFBT2IsQ0FBUDs7O1lBQW9CdUMsQ0FBVCxDQUFXeEMsQ0FBWCxFQUFhQyxDQUFiLEVBQWU7UUFBS2EsSUFBRSxFQUFOLENBQVNELEVBQUVaLENBQUYsRUFBSSxVQUFTRCxDQUFULEVBQVc7YUFBUWMsRUFBRXFCLElBQUYsQ0FBT25DLENBQVAsQ0FBUDtLQUFoQixFQUFtQyxLQUFJQyxJQUFFLENBQU4sRUFBUUEsSUFBRWEsRUFBRXlCLE1BQVosRUFBbUJ0QyxHQUFuQixFQUF1QjtVQUFLYyxJQUFFRCxFQUFFYixDQUFGLENBQU4sQ0FBVyxNQUFJYyxFQUFFMEIsVUFBTixHQUFpQnJDLEVBQUVXLENBQUYsS0FBTWYsRUFBRTBDLGlCQUFGLENBQW9CM0IsQ0FBcEIsQ0FBdkIsR0FBOEM0QixFQUFFM0MsQ0FBRixFQUFJZSxDQUFKLENBQTlDOzs7V0FDNzBCNkIsQ0FBVCxDQUFXNUMsQ0FBWCxFQUFhQyxDQUFiLEVBQWU7UUFBS2EsSUFBRSxFQUFOLENBQVNELEVBQUVaLENBQUYsRUFBSSxVQUFTRCxDQUFULEVBQVc7YUFBUWMsRUFBRXFCLElBQUYsQ0FBT25DLENBQVAsQ0FBUDtLQUFoQixFQUFtQyxLQUFJQyxJQUFFLENBQU4sRUFBUUEsSUFBRWEsRUFBRXlCLE1BQVosRUFBbUJ0QyxHQUFuQixFQUF1QjtVQUFLYyxJQUFFRCxFQUFFYixDQUFGLENBQU4sQ0FBVyxNQUFJYyxFQUFFMEIsVUFBTixJQUFrQnpDLEVBQUU2QyxvQkFBRixDQUF1QjlCLENBQXZCLENBQWxCOzs7V0FDdEYrQixDQUFULENBQVc5QyxDQUFYLEVBQWFDLENBQWIsRUFBZWEsQ0FBZixFQUFpQjtRQUFHQSxJQUFFQSxDQUFGLEdBQUksSUFBSWpCLEdBQUosRUFBTixDQUFjLElBQUlrQixJQUFFLEVBQU4sQ0FBU0YsRUFBRVosQ0FBRixFQUFJLFVBQVNrQixDQUFULEVBQVc7VUFBSSxXQUFTQSxFQUFFRSxTQUFYLElBQXNCLGFBQVdGLEVBQUVHLFlBQUYsQ0FBZSxLQUFmLENBQXBDLEVBQTBEO1lBQUtyQixJQUFFa0IsRUFBRUksTUFBUixDQUFldEIsYUFBYWdCLElBQWIsSUFBbUIsZUFBYWhCLEVBQUU4QyxVQUFsQyxJQUE4QzlDLEVBQUVLLHFCQUFGLEdBQXdCLENBQUMsQ0FBekIsRUFBMkJMLEVBQUUrQyxnQkFBRixHQUFtQixDQUFDLENBQTdGLElBQWdHN0IsRUFBRThCLGdCQUFGLENBQW1CLE1BQW5CLEVBQTBCLFlBQVU7Y0FBS2hELElBQUVrQixFQUFFSSxNQUFSLENBQWV0QixFQUFFaUQsd0JBQUYsS0FBNkJqRCxFQUFFaUQsd0JBQUYsR0FBMkIsQ0FBQyxDQUE1QixFQUE4QmpELEVBQUVLLHFCQUFGLEdBQXdCLENBQUMsQ0FBdkQsRUFBeURMLEVBQUUrQyxnQkFBRixHQUFtQixDQUFDLENBQTdFLEVBQStFLElBQUluRCxHQUFKLENBQVFpQixDQUFSLENBQS9FLEVBQTBGQSxFQUFFcUMsTUFBRixDQUFTbEQsQ0FBVCxDQUExRixFQUFzRzZDLEVBQUU5QyxDQUFGLEVBQUlDLENBQUosRUFBTWEsQ0FBTixDQUFuSTtTQUFwRCxDQUFoRztPQUExRSxNQUFrWEMsRUFBRW9CLElBQUYsQ0FBT2hCLENBQVA7S0FBbFksRUFBNllMLENBQTdZLEVBQWdaLElBQUdkLEVBQUVBLENBQUwsRUFBTyxLQUFJQyxJQUFFLENBQU4sRUFBUUEsSUFBRWMsRUFBRXdCLE1BQVosRUFBbUJ0QyxHQUFuQjtRQUF5QkQsQ0FBRixFQUFJZSxFQUFFZCxDQUFGLENBQUo7S0FBVSxLQUFJQSxJQUFFLENBQU4sRUFBUUEsSUFBRWMsRUFBRXdCLE1BQVosRUFBbUJ0QyxHQUFuQjtRQUF5QkQsQ0FBRixFQUN4ZmUsRUFBRWQsQ0FBRixDQUR3Zjs7O1dBRS9lMEMsQ0FBVCxDQUFXM0MsQ0FBWCxFQUFhQyxDQUFiLEVBQWU7UUFBSSxLQUFLLENBQUwsS0FBU0EsRUFBRXdDLFVBQWQsRUFBeUI7VUFBSzNCLElBQUVkLEVBQUVDLENBQUYsQ0FBSW1ELEdBQUosQ0FBUW5ELEVBQUVvQixTQUFWLENBQU4sQ0FBMkIsSUFBR1AsQ0FBSCxFQUFLO1VBQUd1QyxpQkFBRixDQUFvQmxCLElBQXBCLENBQXlCbEMsQ0FBekIsRUFBNEIsSUFBSWMsSUFBRUQsRUFBRW1CLFdBQVIsQ0FBb0IsSUFBRztjQUFJO2dCQUFJLElBQUlsQixDQUFKLE9BQVFkLENBQVgsRUFBYSxNQUFNcUQsTUFBTSw0RUFBTixDQUFOO1dBQWpCLFNBQW1IO2NBQUdELGlCQUFGLENBQW9CRSxHQUFwQjs7U0FBeEgsQ0FBbUosT0FBTXpCLENBQU4sRUFBUTtnQkFBTzdCLEVBQUV3QyxVQUFGLEdBQWEsQ0FBYixFQUFlWCxDQUFyQjtXQUEwQlcsVUFBRixHQUFhLENBQWIsQ0FBZXhDLEVBQUV1RCxlQUFGLEdBQWtCMUMsQ0FBbEIsQ0FBb0IsSUFBR0EsRUFBRTJDLHdCQUFMLEVBQThCLEtBQUkzQyxJQUFFQSxFQUFFNEMsa0JBQUosRUFBdUIzQyxJQUFFLENBQTdCLEVBQStCQSxJQUFFRCxFQUFFeUIsTUFBbkMsRUFBMEN4QixHQUExQyxFQUE4QztjQUFLSSxJQUFFTCxFQUFFQyxDQUFGLENBQU47Y0FBV0ssSUFBRW5CLEVBQUVxQixZQUFGLENBQWVILENBQWYsQ0FBYixDQUErQixTQUFPQyxDQUFQLElBQVVwQixFQUFFeUQsd0JBQUYsQ0FBMkJ4RCxDQUEzQixFQUE2QmtCLENBQTdCLEVBQStCLElBQS9CLEVBQW9DQyxDQUFwQyxFQUFzQyxJQUF0QyxDQUFWO1dBQXdEbkIsQ0FBRixLQUFNRCxFQUFFMEMsaUJBQUYsQ0FBb0J6QyxDQUFwQixDQUFOOzs7O0lBQ2xmMEQsU0FBRixDQUFZakIsaUJBQVosR0FBOEIsVUFBUzFDLENBQVQsRUFBVztRQUFLQyxJQUFFRCxFQUFFd0QsZUFBUixDQUF3QnZELEVBQUV5QyxpQkFBRixJQUFxQnpDLEVBQUV5QyxpQkFBRixDQUFvQmtCLElBQXBCLENBQXlCNUQsQ0FBekIsQ0FBckIsQ0FBaURBLEVBQUU2RCxDQUFGLEdBQUksQ0FBQyxDQUFMO0dBQW5ILENBQTJIakMsRUFBRStCLFNBQUYsQ0FBWWQsb0JBQVosR0FBaUMsVUFBUzdDLENBQVQsRUFBVztNQUFHNkQsQ0FBRixJQUFLLEtBQUtuQixpQkFBTCxDQUF1QjFDLENBQXZCLENBQUwsQ0FBK0IsSUFBSUMsSUFBRUQsRUFBRXdELGVBQVIsQ0FBd0J2RCxFQUFFNEMsb0JBQUYsSUFBd0I1QyxFQUFFNEMsb0JBQUYsQ0FBdUJlLElBQXZCLENBQTRCNUQsQ0FBNUIsQ0FBeEIsQ0FBdURBLEVBQUU2RCxDQUFGLEdBQUksS0FBSyxDQUFUO0dBQTNKLENBQXVLakMsRUFBRStCLFNBQUYsQ0FBWUYsd0JBQVosR0FBcUMsVUFBU3pELENBQVQsRUFBV0MsQ0FBWCxFQUFhYSxDQUFiLEVBQWVDLENBQWYsRUFBaUJJLENBQWpCLEVBQW1CO1FBQUtDLElBQUVwQixFQUFFd0QsZUFBUixDQUF3QnBDLEVBQUVxQyx3QkFBRixJQUE0QixDQUFDLENBQUQsR0FBR3JDLEVBQUVzQyxrQkFBRixDQUFxQkksT0FBckIsQ0FBNkI3RCxDQUE3QixDQUEvQixJQUFnRW1CLEVBQUVxQyx3QkFBRixDQUEyQkcsSUFBM0IsQ0FBZ0M1RCxDQUFoQyxFQUFrQ0MsQ0FBbEMsRUFBb0NhLENBQXBDLEVBQXNDQyxDQUF0QyxFQUF3Q0ksQ0FBeEMsQ0FBaEU7R0FBakYsQ0FBNkwsU0FBUzRDLENBQVQsQ0FBVy9ELENBQVgsRUFBYUMsQ0FBYixFQUFlO1NBQU1jLENBQUwsR0FBT2YsQ0FBUCxDQUFTLEtBQUtDLENBQUwsR0FBT0EsQ0FBUCxDQUFTLEtBQUtELENBQUwsR0FBTyxLQUFLLENBQVosQ0FBYzhDLEVBQUUsS0FBSy9CLENBQVAsRUFBUyxLQUFLZCxDQUFkLEVBQWlCLGNBQVksS0FBS0EsQ0FBTCxDQUFPOEMsVUFBbkIsS0FBZ0MsS0FBSy9DLENBQUwsR0FBTyxJQUFJZ0UsZ0JBQUosQ0FBcUIsS0FBS2xDLENBQUwsQ0FBT21DLElBQVAsQ0FBWSxJQUFaLENBQXJCLENBQVAsRUFBK0MsS0FBS2pFLENBQUwsQ0FBT2tFLE9BQVAsQ0FBZSxLQUFLakUsQ0FBcEIsRUFBc0IsRUFBQ2tFLFdBQVUsQ0FBQyxDQUFaLEVBQWNDLFNBQVEsQ0FBQyxDQUF2QixFQUF0QixDQUEvRTtZQUEwSUMsQ0FBVCxDQUFXckUsQ0FBWCxFQUFhO01BQUdBLENBQUYsSUFBS0EsRUFBRUEsQ0FBRixDQUFJc0UsVUFBSixFQUFMO0tBQXdCWCxTQUFGLENBQVk3QixDQUFaLEdBQWMsVUFBUzlCLENBQVQsRUFBVztRQUFLQyxJQUFFLEtBQUtBLENBQUwsQ0FBTzhDLFVBQWIsQ0FBd0Isa0JBQWdCOUMsQ0FBaEIsSUFBbUIsZUFBYUEsQ0FBaEMsSUFBbUNvRSxFQUFFLElBQUYsQ0FBbkMsQ0FBMkMsS0FBSXBFLElBQUUsQ0FBTixFQUFRQSxJQUFFRCxFQUFFdUMsTUFBWixFQUFtQnRDLEdBQW5CO1dBQTJCLElBQUlhLElBQUVkLEVBQUVDLENBQUYsRUFBS3NFLFVBQVgsRUFBc0J4RCxJQUFFLENBQTVCLEVBQThCQSxJQUFFRCxFQUFFeUIsTUFBbEMsRUFBeUN4QixHQUF6QztVQUErQyxLQUFLQSxDQUFQLEVBQVNELEVBQUVDLENBQUYsQ0FBVDs7O0dBQWpLLENBQWlMLFNBQVN5RCxFQUFULEdBQWE7UUFBS3hFLElBQUUsSUFBTixDQUFXLEtBQUtBLENBQUwsR0FBTyxLQUFLQyxDQUFMLEdBQU8sS0FBSyxDQUFuQixDQUFxQixLQUFLYyxDQUFMLEdBQU8sSUFBSTBELE9BQUosQ0FBWSxVQUFTeEUsQ0FBVCxFQUFXO1FBQUdELENBQUYsR0FBSUMsQ0FBSixDQUFNRCxFQUFFQyxDQUFGLElBQUtBLEVBQUVELEVBQUVDLENBQUosQ0FBTDtLQUE5QixDQUFQO1lBQTREeUUsQ0FBVCxDQUFXMUUsQ0FBWCxFQUFhO1FBQUlBLEVBQUVDLENBQUwsRUFBTyxNQUFNcUQsTUFBTSxtQkFBTixDQUFOLENBQWlDdEQsRUFBRUMsQ0FBRixHQUFJLEtBQUssQ0FBVCxDQUFXRCxFQUFFQSxDQUFGLElBQUtBLEVBQUVBLENBQUYsQ0FBSSxLQUFLLENBQVQsQ0FBTDtHQUFrQixTQUFTMkUsQ0FBVCxDQUFXM0UsQ0FBWCxFQUFhO1NBQU04QixDQUFMLEdBQU8sQ0FBQyxDQUFSLENBQVUsS0FBSzdCLENBQUwsR0FBT0QsQ0FBUCxDQUFTLEtBQUtvQixDQUFMLEdBQU8sSUFBSVMsR0FBSixFQUFQLENBQWUsS0FBS2xDLENBQUwsR0FBTyxVQUFTSyxDQUFULEVBQVc7YUFBUUEsR0FBUDtLQUFuQixDQUErQixLQUFLQSxDQUFMLEdBQU8sQ0FBQyxDQUFSLENBQVUsS0FBS2UsQ0FBTCxHQUFPLEVBQVAsQ0FBVSxLQUFLWCxDQUFMLEdBQU8sSUFBSTJELENBQUosQ0FBTS9ELENBQU4sRUFBUTRFLFFBQVIsQ0FBUDs7SUFDM29DakIsU0FBRixDQUFZaEQsQ0FBWixHQUFjLFVBQVNYLENBQVQsRUFBV0MsQ0FBWCxFQUFhO1FBQUthLElBQUUsSUFBTixDQUFXLElBQUcsRUFBRWIsYUFBYTRFLFFBQWYsQ0FBSCxFQUE0QixNQUFNLElBQUlDLFNBQUosQ0FBYyxnREFBZCxDQUFOLENBQXNFLElBQUcsQ0FBQy9FLEVBQUVDLENBQUYsQ0FBSixFQUFTLE1BQU0sSUFBSStFLFdBQUosQ0FBZ0IsdUJBQXFCL0UsQ0FBckIsR0FBdUIsaUJBQXZDLENBQU4sQ0FBZ0UsSUFBRyxLQUFLQyxDQUFMLENBQU9BLENBQVAsQ0FBU21ELEdBQVQsQ0FBYXBELENBQWIsQ0FBSCxFQUFtQixNQUFNc0QsTUFBTSxpQ0FBK0J0RCxDQUEvQixHQUFpQyw2QkFBdkMsQ0FBTixDQUE0RSxJQUFHLEtBQUs4QixDQUFSLEVBQVUsTUFBTXdCLE1BQU0sNENBQU4sQ0FBTixDQUEwRCxLQUFLeEIsQ0FBTCxHQUFPLENBQUMsQ0FBUixDQUFVLElBQUlmLENBQUosRUFBTUksQ0FBTixFQUFRQyxDQUFSLEVBQVVVLENBQVYsRUFBWWtELENBQVosQ0FBYyxJQUFHO1VBQUtDLElBQUUsU0FBRkEsQ0FBRSxDQUFTakYsQ0FBVCxFQUFXO1lBQUtDLElBQUVpRixFQUFFbEYsQ0FBRixDQUFOLENBQVcsSUFBRyxLQUFLLENBQUwsS0FBU0MsQ0FBVCxJQUFZLEVBQUVBLGFBQWE0RSxRQUFmLENBQWYsRUFBd0MsTUFBTXZCLE1BQU0sVUFBUXRELENBQVIsR0FBVSxnQ0FBaEIsQ0FBTjtlQUMvY0MsQ0FBUDtPQURpWjtVQUN2WWlGLElBQUVqRixFQUFFMEQsU0FEbVksQ0FDelgsSUFBRyxFQUFFdUIsYUFBYUMsTUFBZixDQUFILEVBQTBCLE1BQU0sSUFBSUwsU0FBSixDQUFjLDhEQUFkLENBQU4sQ0FBb0YvRCxJQUFFa0UsRUFBRSxtQkFBRixDQUFGLENBQXlCOUQsSUFBRThELEVBQUUsc0JBQUYsQ0FBRixDQUE0QjdELElBQUU2RCxFQUFFLGlCQUFGLENBQUYsQ0FBdUJuRCxJQUFFbUQsRUFBRSwwQkFBRixDQUFGLENBQWdDRCxJQUFFL0UsRUFBRXlELGtCQUFGLElBQXNCLEVBQXhCO0tBRDJKLENBQ2hJLE9BQU0wQixFQUFOLEVBQVM7O0tBRHVILFNBQ3hHO1dBQU10RCxDQUFMLEdBQU8sQ0FBQyxDQUFSO1FBQWEsS0FBSzdCLENBQVIsRUFBVUQsQ0FBVixFQUFZLEVBQUNxQixXQUFVckIsQ0FBWCxFQUFhaUMsYUFBWWhDLENBQXpCLEVBQTJCeUMsbUJBQWtCM0IsQ0FBN0MsRUFBK0M4QixzQkFBcUIxQixDQUFwRSxFQUFzRWtFLGlCQUFnQmpFLENBQXRGLEVBQXdGcUMsMEJBQXlCM0IsQ0FBakgsRUFBbUg0QixvQkFBbUJzQixDQUF0SSxFQUF3STNCLG1CQUFrQixFQUExSixFQUFaLEVBQTJLLEtBQUt0QyxDQUFMLENBQU9vQixJQUFQLENBQVluQyxDQUFaLEVBQWUsS0FBS0EsQ0FBTCxLQUFTLEtBQUtBLENBQUwsR0FDbmYsQ0FBQyxDQURrZixFQUNoZixLQUFLTCxDQUFMLENBQU8sWUFBVTtVQUFJLENBQUMsQ0FBRCxLQUFLbUIsRUFBRWQsQ0FBVixFQUFZLEtBQUljLEVBQUVkLENBQUYsR0FBSSxDQUFDLENBQUwsRUFBTzhDLEVBQUVoQyxFQUFFYixDQUFKLEVBQU0yRSxRQUFOLENBQVgsRUFBMkIsSUFBRTlELEVBQUVDLENBQUYsQ0FBSXdCLE1BQWpDLEdBQXlDO1lBQUt2QyxJQUFFYyxFQUFFQyxDQUFGLENBQUl1RSxLQUFKLEVBQU4sQ0FBa0IsQ0FBQ3RGLElBQUVjLEVBQUVNLENBQUYsQ0FBSWdDLEdBQUosQ0FBUXBELENBQVIsQ0FBSCxLQUFnQjBFLEVBQUUxRSxDQUFGLENBQWhCOztLQUExRixDQUR1ZTtHQUQxZSxDQUV1SDJFLEVBQUVoQixTQUFGLENBQVlQLEdBQVosR0FBZ0IsVUFBU3BELENBQVQsRUFBVztRQUFJQSxJQUFFLEtBQUtDLENBQUwsQ0FBT0EsQ0FBUCxDQUFTbUQsR0FBVCxDQUFhcEQsQ0FBYixDQUFMLEVBQXFCLE9BQU9BLEVBQUVpQyxXQUFUO0dBQWpELENBQXVFMEMsRUFBRWhCLFNBQUYsQ0FBWTRCLENBQVosR0FBYyxVQUFTdkYsQ0FBVCxFQUFXO1FBQUksQ0FBQ0QsRUFBRUMsQ0FBRixDQUFKLEVBQVMsT0FBT3lFLFFBQVFlLE1BQVIsQ0FBZSxJQUFJVCxXQUFKLENBQWdCLE1BQUkvRSxDQUFKLEdBQU0sdUNBQXRCLENBQWYsQ0FBUCxDQUFzRixJQUFJQyxJQUFFLEtBQUttQixDQUFMLENBQU9nQyxHQUFQLENBQVdwRCxDQUFYLENBQU4sQ0FBb0IsSUFBR0MsQ0FBSCxFQUFLLE9BQU9BLEVBQUVjLENBQVQsQ0FBV2QsSUFBRSxJQUFJdUUsRUFBSixFQUFGLENBQVMsS0FBS3BELENBQUwsQ0FBT1ksR0FBUCxDQUFXaEMsQ0FBWCxFQUFhQyxDQUFiLEVBQWdCLEtBQUtBLENBQUwsQ0FBT0EsQ0FBUCxDQUFTbUQsR0FBVCxDQUFhcEQsQ0FBYixLQUFpQixDQUFDLENBQUQsS0FBSyxLQUFLZSxDQUFMLENBQU8rQyxPQUFQLENBQWU5RCxDQUFmLENBQXRCLElBQXlDMEUsRUFBRXpFLENBQUYsQ0FBekMsQ0FBOEMsT0FBT0EsRUFBRWMsQ0FBVDtHQUFwTyxDQUFnUDRELEVBQUVoQixTQUFGLENBQVk4QixDQUFaLEdBQWMsVUFBU3pGLENBQVQsRUFBVztNQUFHLEtBQUtJLENBQVAsRUFBVSxJQUFJSCxJQUFFLEtBQUtOLENBQVgsQ0FBYSxLQUFLQSxDQUFMLEdBQU8sVUFBU21CLENBQVQsRUFBVzthQUFRZCxFQUFFLFlBQVU7ZUFBUUMsRUFBRWEsQ0FBRixDQUFQO09BQWIsQ0FBUDtLQUFuQjtHQUFqRDtTQUN2YTRFLHFCQUFQLEdBQTZCZixDQUE3QixDQUErQkEsRUFBRWhCLFNBQUYsQ0FBWWdDLE1BQVosR0FBbUJoQixFQUFFaEIsU0FBRixDQUFZaEQsQ0FBL0IsQ0FBaUNnRSxFQUFFaEIsU0FBRixDQUFZUCxHQUFaLEdBQWdCdUIsRUFBRWhCLFNBQUYsQ0FBWVAsR0FBNUIsQ0FBZ0N1QixFQUFFaEIsU0FBRixDQUFZaUMsV0FBWixHQUF3QmpCLEVBQUVoQixTQUFGLENBQVk0QixDQUFwQyxDQUFzQ1osRUFBRWhCLFNBQUYsQ0FBWWtDLHlCQUFaLEdBQXNDbEIsRUFBRWhCLFNBQUYsQ0FBWThCLENBQWxELENBQW9ELElBQUlLLElBQUV0RyxPQUFPZSxRQUFQLENBQWdCb0QsU0FBaEIsQ0FBMEJvQyxhQUFoQztNQUE4Q0MsS0FBR3hHLE9BQU9lLFFBQVAsQ0FBZ0JvRCxTQUFoQixDQUEwQnNDLGVBQTNFO01BQTJGQyxLQUFHMUcsT0FBT2UsUUFBUCxDQUFnQm9ELFNBQWhCLENBQTBCd0MsVUFBeEg7TUFBbUlDLEtBQUc1RyxPQUFPZSxRQUFQLENBQWdCb0QsU0FBaEIsQ0FBMEIwQyxPQUFoSztNQUF3S0MsS0FBRzlHLE9BQU9lLFFBQVAsQ0FBZ0JvRCxTQUFoQixDQUEwQjRDLE1BQXJNO01BQTRNQyxJQUFFaEgsT0FBT3lCLElBQVAsQ0FBWTBDLFNBQVosQ0FBc0I4QyxTQUFwTztNQUE4T0MsSUFBRWxILE9BQU95QixJQUFQLENBQVkwQyxTQUFaLENBQXNCZ0QsV0FBdFE7TUFBa1JDLElBQUVwSCxPQUFPeUIsSUFBUCxDQUFZMEMsU0FBWixDQUFzQmtELFlBQTFTO01BQXVUQyxJQUFFdEgsT0FBT3lCLElBQVAsQ0FBWTBDLFNBQVosQ0FBc0JvRCxXQUEvVTtNQUEyVkMsSUFBRXhILE9BQU95QixJQUFQLENBQVkwQyxTQUFaLENBQXNCc0QsWUFBblg7TUFBZ1lDLElBQUUvQixPQUFPZ0Msd0JBQVAsQ0FBZ0MzSCxPQUFPeUIsSUFBUCxDQUFZMEMsU0FBNUMsRUFBc0QsYUFBdEQsQ0FBbFk7TUFBdWN5RCxJQUFFNUgsT0FBTzZILE9BQVAsQ0FBZTFELFNBQWYsQ0FBeUIyRCxZQUFsZTtNQUErZUMsSUFBRXBDLE9BQU9nQyx3QkFBUCxDQUFnQzNILE9BQU82SCxPQUFQLENBQWUxRCxTQUEvQyxFQUMzcUIsV0FEMnFCLENBQWpmO01BQzdLNkQsSUFBRWhJLE9BQU82SCxPQUFQLENBQWUxRCxTQUFmLENBQXlCckMsWUFEa0o7TUFDckltRyxJQUFFakksT0FBTzZILE9BQVAsQ0FBZTFELFNBQWYsQ0FBeUIrRCxZQUQwRztNQUM3RkMsSUFBRW5JLE9BQU82SCxPQUFQLENBQWUxRCxTQUFmLENBQXlCaUUsZUFEa0U7TUFDbERDLElBQUVySSxPQUFPNkgsT0FBUCxDQUFlMUQsU0FBZixDQUF5Qm1FLGNBRHVCO01BQ1JDLElBQUV2SSxPQUFPNkgsT0FBUCxDQUFlMUQsU0FBZixDQUF5QnFFLGNBRG5CO01BQ2tDQyxJQUFFekksT0FBTzZILE9BQVAsQ0FBZTFELFNBQWYsQ0FBeUJ1RSxpQkFEN0Q7TUFDK0VDLElBQUUzSSxPQUFPNkgsT0FBUCxDQUFlMUQsU0FBZixDQUF5QnlFLHFCQUQxRztNQUNnSUMsS0FBRzdJLE9BQU82SCxPQUFQLENBQWUxRCxTQUFmLENBQXlCMEMsT0FENUo7TUFDb0tpQyxLQUFHOUksT0FBTzZILE9BQVAsQ0FBZTFELFNBQWYsQ0FBeUI0QyxNQURoTTtNQUN1TWdDLEtBQUcvSSxPQUFPNkgsT0FBUCxDQUFlMUQsU0FBZixDQUF5QjZFLE1BRG5PO01BQzBPQyxLQUFHakosT0FBTzZILE9BQVAsQ0FBZTFELFNBQWYsQ0FBeUIrRSxLQUR0UTtNQUM0UUMsS0FBR25KLE9BQU82SCxPQUFQLENBQWUxRCxTQUFmLENBQXlCaUYsV0FEeFM7TUFDb1RDLEtBQUdySixPQUFPNkgsT0FBUCxDQUFlMUQsU0FBZixDQUF5Qm1GLE1BRGhWO01BRTFMQyxLQUFHdkosT0FBT3dKLFdBRmdMO01BRXBLQyxJQUFFOUQsT0FBT2dDLHdCQUFQLENBQWdDM0gsT0FBT3dKLFdBQVAsQ0FBbUJyRixTQUFuRCxFQUE2RCxXQUE3RCxDQUZrSztNQUV4RnVGLElBQUUxSixPQUFPd0osV0FBUCxDQUFtQnJGLFNBQW5CLENBQTZCeUUscUJBRnlELENBRW5DLFNBQVNlLEVBQVQsR0FBYTtRQUFLbkosSUFBRW9KLENBQU4sQ0FBUTVKLE9BQU93SixXQUFQLEdBQW1CLFlBQVU7ZUFBVS9JLENBQVQsR0FBWTtZQUFLQSxJQUFFLEtBQUtnQyxXQUFYO1lBQXVCbEIsSUFBRWYsRUFBRThCLENBQUYsQ0FBSXNCLEdBQUosQ0FBUW5ELENBQVIsQ0FBekIsQ0FBb0MsSUFBRyxDQUFDYyxDQUFKLEVBQU0sTUFBTXVDLE1BQU0sZ0ZBQU4sQ0FBTixDQUE4RixJQUFJbkMsSUFBRUosRUFBRXNDLGlCQUFSLENBQTBCLElBQUcsQ0FBQ2xDLEVBQUVvQixNQUFOLEVBQWEsT0FBT3BCLElBQUUyRSxFQUFFbEMsSUFBRixDQUFPZ0IsUUFBUCxFQUFnQjdELEVBQUVNLFNBQWxCLENBQUYsRUFBK0I4RCxPQUFPa0UsY0FBUCxDQUFzQmxJLENBQXRCLEVBQXdCbEIsRUFBRTBELFNBQTFCLENBQS9CLEVBQW9FeEMsRUFBRXNCLFVBQUYsR0FBYSxDQUFqRixFQUFtRnRCLEVBQUVxQyxlQUFGLEdBQWtCekMsQ0FBckcsRUFBdUdzQixFQUFFckMsQ0FBRixFQUFJbUIsQ0FBSixDQUF2RyxFQUE4R0EsQ0FBckgsQ0FBdUgsSUFBSUosSUFBRUksRUFBRW9CLE1BQUYsR0FBUyxDQUFmO1lBQWlCbkIsSUFBRUQsRUFBRUosQ0FBRixDQUFuQixDQUF3QixJQUFHSyxNQUFJekIsQ0FBUCxFQUFTLE1BQU0yRCxNQUFNLDBHQUFOLENBQU47VUFDN2hCdkMsQ0FBRixJQUFLcEIsQ0FBTCxDQUFPd0YsT0FBT2tFLGNBQVAsQ0FBc0JqSSxDQUF0QixFQUF3Qm5CLEVBQUUwRCxTQUExQixFQUFxQ3RCLEVBQUVyQyxDQUFGLEVBQUlvQixDQUFKLEVBQU8sT0FBT0EsQ0FBUDtTQUFXdUMsU0FBRixHQUFZb0YsR0FBR3BGLFNBQWYsQ0FBeUIsT0FBTzFELENBQVA7S0FEMkcsRUFBbkI7R0FDM0UsU0FBU3FKLEVBQVQsQ0FBWXRKLENBQVosRUFBY0MsQ0FBZCxFQUFnQmEsQ0FBaEIsRUFBa0I7TUFBR3VGLE9BQUYsR0FBVSxVQUFTcEcsQ0FBVCxFQUFXO1dBQUssSUFBSWtCLElBQUUsRUFBTixFQUFTSixJQUFFLENBQWYsRUFBaUJBLElBQUV3SSxVQUFVaEgsTUFBN0IsRUFBb0MsRUFBRXhCLENBQXRDO1VBQTBDQSxJQUFFLENBQUosSUFBT3dJLFVBQVV4SSxDQUFWLENBQVA7T0FBb0JBLElBQUVJLEVBQUVxSSxNQUFGLENBQVMsVUFBU3hKLENBQVQsRUFBVztlQUFRQSxhQUFhaUIsSUFBYixJQUFtQmIsRUFBRUosQ0FBRixDQUExQjtPQUFyQixDQUFGLENBQXdEYyxFQUFFMkksQ0FBRixDQUFJQyxLQUFKLENBQVUsSUFBVixFQUFldkksQ0FBZixFQUFrQixLQUFJLElBQUlXLElBQUUsQ0FBVixFQUFZQSxJQUFFZixFQUFFd0IsTUFBaEIsRUFBdUJULEdBQXZCO1VBQTZCOUIsQ0FBRixFQUFJZSxFQUFFZSxDQUFGLENBQUo7T0FBVSxJQUFHMUIsRUFBRSxJQUFGLENBQUgsRUFBVyxLQUFJVyxJQUFFLENBQU4sRUFBUUEsSUFBRUksRUFBRW9CLE1BQVosRUFBbUJ4QixHQUFuQjtZQUF5QkksRUFBRUosQ0FBRixDQUFGLEVBQU9lLGFBQWF1RixPQUFiLElBQXNCN0UsRUFBRXhDLENBQUYsRUFBSThCLENBQUosQ0FBN0I7O0tBQW5PLENBQXdRN0IsRUFBRXNHLE1BQUYsR0FBUyxVQUFTdEcsQ0FBVCxFQUFXO1dBQUssSUFBSWtCLElBQUUsRUFBTixFQUFTSixJQUFFLENBQWYsRUFBaUJBLElBQUV3SSxVQUFVaEgsTUFBN0IsRUFBb0MsRUFBRXhCLENBQXRDO1VBQTBDQSxJQUFFLENBQUosSUFBT3dJLFVBQVV4SSxDQUFWLENBQVA7T0FBb0JBLElBQUVJLEVBQUVxSSxNQUFGLENBQVMsVUFBU3hKLENBQVQsRUFBVztlQUFRQSxhQUFhaUIsSUFBYixJQUFtQmIsRUFBRUosQ0FBRixDQUExQjtPQUFyQixDQUFGLENBQXdEYyxFQUFFeUYsTUFBRixDQUFTbUQsS0FBVCxDQUFlLElBQWYsRUFBb0J2SSxDQUFwQixFQUF1QixLQUFJLElBQUlXLElBQUUsQ0FBVixFQUFZQSxJQUFFZixFQUFFd0IsTUFBaEIsRUFBdUJULEdBQXZCO1VBQTZCOUIsQ0FBRixFQUFJZSxFQUFFZSxDQUFGLENBQUo7T0FBVSxJQUFHMUIsRUFBRSxJQUFGLENBQUgsRUFBVyxLQUFJVyxJQUFFLENBQU4sRUFBUUEsSUFDcmxCSSxFQUFFb0IsTUFEMmtCLEVBQ3BrQnhCLEdBRG9rQjtZQUM5akJJLEVBQUVKLENBQUYsQ0FBRixFQUFPZSxhQUFhdUYsT0FBYixJQUFzQjdFLEVBQUV4QyxDQUFGLEVBQUk4QixDQUFKLENBQTdCOztLQURnWDtHQUMxVSxTQUFTNkgsRUFBVCxHQUFhO1FBQUszSixJQUFFb0osQ0FBTixDQUFRekgsRUFBRXBCLFNBQVNvRCxTQUFYLEVBQXFCLGVBQXJCLEVBQXFDLFVBQVMxRCxDQUFULEVBQVc7VUFBSSxLQUFLK0MsZ0JBQVIsRUFBeUI7WUFBS2xDLElBQUVkLEVBQUVDLENBQUYsQ0FBSW1ELEdBQUosQ0FBUW5ELENBQVIsQ0FBTixDQUFpQixJQUFHYSxDQUFILEVBQUssT0FBTyxJQUFJQSxFQUFFbUIsV0FBTixFQUFQO1dBQTJCNkQsRUFBRWxDLElBQUYsQ0FBTyxJQUFQLEVBQVkzRCxDQUFaLENBQUYsQ0FBaUJvQyxFQUFFckMsQ0FBRixFQUFJQyxDQUFKLEVBQU8sT0FBT0EsQ0FBUDtLQUFsSixFQUE2SjBCLEVBQUVwQixTQUFTb0QsU0FBWCxFQUFxQixZQUFyQixFQUFrQyxVQUFTMUQsQ0FBVCxFQUFXYSxDQUFYLEVBQWE7VUFBR29GLEdBQUd0QyxJQUFILENBQVEsSUFBUixFQUFhM0QsQ0FBYixFQUFlYSxDQUFmLENBQUYsQ0FBb0IsS0FBS2tDLGdCQUFMLEdBQXNCRixFQUFFOUMsQ0FBRixFQUFJQyxDQUFKLENBQXRCLEdBQTZCbUMsRUFBRXBDLENBQUYsRUFBSUMsQ0FBSixDQUE3QixDQUFvQyxPQUFPQSxDQUFQO0tBQXhHLEVBQW1IMEIsRUFBRXBCLFNBQVNvRCxTQUFYLEVBQXFCLGlCQUFyQixFQUF1QyxVQUFTMUQsQ0FBVCxFQUFXYSxDQUFYLEVBQWE7VUFBSSxLQUFLa0MsZ0JBQUwsS0FBd0IsU0FBTy9DLENBQVAsSUFBVSxtQ0FBaUNBLENBQW5FLENBQUgsRUFBeUU7WUFBS2MsSUFBRWYsRUFBRUMsQ0FBRixDQUFJbUQsR0FBSixDQUFRdEMsQ0FBUixDQUFOLENBQWlCLElBQUdDLENBQUgsRUFBSyxPQUFPLElBQUlBLEVBQUVrQixXQUFOLEVBQVA7V0FBMkIrRCxHQUFHcEMsSUFBSCxDQUFRLElBQVIsRUFBYTNELENBQWIsRUFBZWEsQ0FBZixDQUFGLENBQW9CdUIsRUFBRXJDLENBQUYsRUFBSUMsQ0FBSixFQUFPLE9BQU9BLENBQVA7S0FBek07T0FDdFZELENBQUgsRUFBS08sU0FBU29ELFNBQWQsRUFBd0IsRUFBQzhGLEdBQUVyRCxFQUFILEVBQU1HLFFBQU9ELEVBQWIsRUFBeEI7R0FBMkMsU0FBU3NELEVBQVQsR0FBYTtRQUFLNUosSUFBRW9KLENBQU4sQ0FBUSxTQUFTbkosQ0FBVCxDQUFXQSxDQUFYLEVBQWFjLENBQWIsRUFBZTthQUFROEksY0FBUCxDQUFzQjVKLENBQXRCLEVBQXdCLGFBQXhCLEVBQXNDLEVBQUM2SixZQUFXL0ksRUFBRStJLFVBQWQsRUFBeUJDLGNBQWEsQ0FBQyxDQUF2QyxFQUF5QzNHLEtBQUlyQyxFQUFFcUMsR0FBL0MsRUFBbURwQixLQUFJLGFBQVMvQixDQUFULEVBQVc7Y0FBSSxLQUFLZSxRQUFMLEtBQWdCQyxLQUFLK0ksU0FBeEIsRUFBa0NqSixFQUFFaUIsR0FBRixDQUFNNEIsSUFBTixDQUFXLElBQVgsRUFBZ0IzRCxDQUFoQixFQUFsQyxLQUF5RDtnQkFBS2tCLElBQUUsS0FBSyxDQUFYLENBQWEsSUFBRyxLQUFLTSxVQUFSLEVBQW1CO2tCQUFLWCxJQUFFLEtBQUttSixVQUFYO2tCQUFzQmpGLElBQUVsRSxFQUFFeUIsTUFBMUIsQ0FBaUMsSUFBRyxJQUFFeUMsQ0FBRixJQUFLNUUsRUFBRSxJQUFGLENBQVIsRUFBZ0IsS0FBSSxJQUFJZSxJQUFFK0ksTUFBTWxGLENBQU4sQ0FBTixFQUFlQyxJQUFFLENBQXJCLEVBQXVCQSxJQUFFRCxDQUF6QixFQUEyQkMsR0FBM0I7a0JBQWlDQSxDQUFGLElBQUtuRSxFQUFFbUUsQ0FBRixDQUFMOztlQUFZakQsR0FBRixDQUFNNEIsSUFBTixDQUFXLElBQVgsRUFBZ0IzRCxDQUFoQixFQUFtQixJQUFHa0IsQ0FBSCxFQUFLLEtBQUlsQixJQUFFLENBQU4sRUFBUUEsSUFBRWtCLEVBQUVvQixNQUFaLEVBQW1CdEMsR0FBbkI7Z0JBQXlCRCxDQUFGLEVBQUltQixFQUFFbEIsQ0FBRixDQUFKOzs7U0FBdlMsRUFBdEM7T0FBNlZnQixLQUFLMEMsU0FBUCxFQUFpQixjQUFqQixFQUFnQyxVQUFTMUQsQ0FBVCxFQUFXYyxDQUFYLEVBQWE7VUFBSWQsYUFBYWtLLGdCQUFoQixFQUFpQztZQUFLaEosSUFBRStJLE1BQU12RyxTQUFOLENBQWdCeUcsS0FBaEIsQ0FBc0JWLEtBQXRCLENBQTRCekosRUFBRWdLLFVBQTlCLENBQU47WUFDMWZyRCxFQUFFaEQsSUFBRixDQUFPLElBQVAsRUFBWTNELENBQVosRUFBY2MsQ0FBZCxDQUFGLENBQW1CLElBQUdYLEVBQUUsSUFBRixDQUFILEVBQVcsS0FBSVcsSUFBRSxDQUFOLEVBQVFBLElBQUVJLEVBQUVvQixNQUFaLEVBQW1CeEIsR0FBbkI7WUFBeUJmLENBQUYsRUFBSW1CLEVBQUVKLENBQUYsQ0FBSjtTQUFVLE9BQU9kLENBQVA7V0FBV0csRUFBRUgsQ0FBRixDQUFGLENBQU9jLElBQUU2RixFQUFFaEQsSUFBRixDQUFPLElBQVAsRUFBWTNELENBQVosRUFBY2MsQ0FBZCxDQUFGLENBQW1CSSxLQUFHeUIsRUFBRTVDLENBQUYsRUFBSUMsQ0FBSixDQUFILENBQVVHLEVBQUUsSUFBRixLQUFTb0MsRUFBRXhDLENBQUYsRUFBSUMsQ0FBSixDQUFULENBQWdCLE9BQU9jLENBQVA7S0FEZ1QsRUFDclNZLEVBQUVWLEtBQUswQyxTQUFQLEVBQWlCLGFBQWpCLEVBQStCLFVBQVMxRCxDQUFULEVBQVc7VUFBSUEsYUFBYWtLLGdCQUFoQixFQUFpQztZQUFLcEosSUFBRW1KLE1BQU12RyxTQUFOLENBQWdCeUcsS0FBaEIsQ0FBc0JWLEtBQXRCLENBQTRCekosRUFBRWdLLFVBQTlCLENBQU4sQ0FBZ0RoSyxJQUFFeUcsRUFBRTlDLElBQUYsQ0FBTyxJQUFQLEVBQVkzRCxDQUFaLENBQUYsQ0FBaUIsSUFBR0csRUFBRSxJQUFGLENBQUgsRUFBVyxLQUFJLElBQUllLElBQUUsQ0FBVixFQUFZQSxJQUFFSixFQUFFd0IsTUFBaEIsRUFBdUJwQixHQUF2QjtZQUE2Qm5CLENBQUYsRUFBSWUsRUFBRUksQ0FBRixDQUFKO1NBQVUsT0FBT2xCLENBQVA7V0FBV0csRUFBRUgsQ0FBRixDQUFGLENBQU9rQixJQUFFdUYsRUFBRTlDLElBQUYsQ0FBTyxJQUFQLEVBQVkzRCxDQUFaLENBQUYsQ0FBaUJjLEtBQUc2QixFQUFFNUMsQ0FBRixFQUFJQyxDQUFKLENBQUgsQ0FBVUcsRUFBRSxJQUFGLEtBQVNvQyxFQUFFeEMsQ0FBRixFQUFJQyxDQUFKLENBQVQsQ0FBZ0IsT0FBT2tCLENBQVA7S0FBelAsRUFBb1FRLEVBQUVWLEtBQUswQyxTQUFQLEVBQWlCLFdBQWpCLEVBQTZCLFVBQVMxRCxDQUFULEVBQVc7VUFBR3VHLEVBQUU1QyxJQUFGLENBQU8sSUFBUCxFQUFZM0QsQ0FBWixDQUFGLENBQWlCLEtBQUtvSyxhQUFMLENBQW1CckgsZ0JBQW5CLEdBQW9DRixFQUFFOUMsQ0FBRixFQUFJQyxDQUFKLENBQXBDLEdBQTJDbUMsRUFBRXBDLENBQUYsRUFBSUMsQ0FBSixDQUEzQzthQUM5YkEsQ0FBUDtLQUQyWSxFQUNoWTBCLEVBQUVWLEtBQUswQyxTQUFQLEVBQWlCLGFBQWpCLEVBQStCLFVBQVMxRCxDQUFULEVBQVc7VUFBS2MsSUFBRVgsRUFBRUgsQ0FBRixDQUFOO1VBQVdrQixJQUFFMkYsRUFBRWxELElBQUYsQ0FBTyxJQUFQLEVBQVkzRCxDQUFaLENBQWIsQ0FBNEJjLEtBQUc2QixFQUFFNUMsQ0FBRixFQUFJQyxDQUFKLENBQUgsQ0FBVSxPQUFPa0IsQ0FBUDtLQUFqRixFQUE0RlEsRUFBRVYsS0FBSzBDLFNBQVAsRUFBaUIsY0FBakIsRUFBZ0MsVUFBUzFELENBQVQsRUFBV2MsQ0FBWCxFQUFhO1VBQUlkLGFBQWFrSyxnQkFBaEIsRUFBaUM7WUFBS2hKLElBQUUrSSxNQUFNdkcsU0FBTixDQUFnQnlHLEtBQWhCLENBQXNCVixLQUF0QixDQUE0QnpKLEVBQUVnSyxVQUE5QixDQUFOLENBQWdEaEssSUFBRStHLEVBQUVwRCxJQUFGLENBQU8sSUFBUCxFQUFZM0QsQ0FBWixFQUFjYyxDQUFkLENBQUYsQ0FBbUIsSUFBR1gsRUFBRSxJQUFGLENBQUgsRUFBVyxLQUFJd0MsRUFBRTVDLENBQUYsRUFBSWUsQ0FBSixHQUFPQSxJQUFFLENBQWIsRUFBZUEsSUFBRUksRUFBRW9CLE1BQW5CLEVBQTBCeEIsR0FBMUI7WUFBZ0NmLENBQUYsRUFBSW1CLEVBQUVKLENBQUYsQ0FBSjtTQUFVLE9BQU9kLENBQVA7V0FBYWtCLElBQUVmLEVBQUVILENBQUYsQ0FBTjtVQUFXYSxJQUFFa0csRUFBRXBELElBQUYsQ0FBTyxJQUFQLEVBQVkzRCxDQUFaLEVBQWNjLENBQWQsQ0FBYjtVQUE4QmUsSUFBRTFCLEVBQUUsSUFBRixDQUFoQyxDQUF3QzBCLEtBQUdjLEVBQUU1QyxDQUFGLEVBQUllLENBQUosQ0FBSCxDQUFVSSxLQUFHeUIsRUFBRTVDLENBQUYsRUFBSUMsQ0FBSixDQUFILENBQVU2QixLQUFHVSxFQUFFeEMsQ0FBRixFQUFJQyxDQUFKLENBQUgsQ0FBVSxPQUFPYSxDQUFQO0tBQXJSLEVBQWdTb0csS0FBR0EsRUFBRTlELEdBQUwsR0FBU25ELEVBQUVnQixLQUFLMEMsU0FBUCxFQUFpQnVELENBQWpCLENBQVQsR0FBNkJoRixFQUFFbEMsQ0FBRixFQUFJLFVBQVNBLENBQVQsRUFBVztRQUFHQSxDQUFGLEVBQUksRUFBQzhKLFlBQVcsQ0FBQyxDQUFiLEVBQWVDLGNBQWEsQ0FBQyxDQUE3QixFQUErQjNHLEtBQUksZUFBVTtlQUFLLElBQUluRCxJQUFFLEVBQU4sRUFBU0QsSUFDbmYsQ0FEc2UsRUFDcGVBLElBQUUsS0FBS2lLLFVBQUwsQ0FBZ0IxSCxNQURrZCxFQUMzY3ZDLEdBRDJjO2NBQ3JjbUMsSUFBRixDQUFPLEtBQUs4SCxVQUFMLENBQWdCakssQ0FBaEIsRUFBbUJzSyxXQUExQjtXQUF1QyxPQUFPckssRUFBRXNLLElBQUYsQ0FBTyxFQUFQLENBQVA7U0FEa1gsRUFDL1Z2SSxLQUFJLGFBQVMvQixDQUFULEVBQVc7aUJBQU0sS0FBS3dCLFVBQVY7Y0FBd0JtQyxJQUFGLENBQU8sSUFBUCxFQUFZLEtBQUtuQyxVQUFqQjtXQUE2QmlGLEVBQUU5QyxJQUFGLENBQU8sSUFBUCxFQUFZZ0IsU0FBUzRGLGNBQVQsQ0FBd0J2SyxDQUF4QixDQUFaO1NBRDRSLEVBQUo7S0FBaEIsQ0FBN0I7R0FDN0wsU0FBU3dLLEVBQVQsQ0FBWXpLLENBQVosRUFBYztRQUFLQyxJQUFFb0gsUUFBUTFELFNBQWQsQ0FBd0IxRCxFQUFFdUksTUFBRixHQUFTLFVBQVN2SSxDQUFULEVBQVc7V0FBSyxJQUFJYyxJQUFFLEVBQU4sRUFBU0ksSUFBRSxDQUFmLEVBQWlCQSxJQUFFb0ksVUFBVWhILE1BQTdCLEVBQW9DLEVBQUVwQixDQUF0QztVQUEwQ0EsSUFBRSxDQUFKLElBQU9vSSxVQUFVcEksQ0FBVixDQUFQO09BQW9CQSxJQUFFSixFQUFFeUksTUFBRixDQUFTLFVBQVN2SixDQUFULEVBQVc7ZUFBUUEsYUFBYWdCLElBQWIsSUFBbUJiLEVBQUVILENBQUYsQ0FBMUI7T0FBckIsQ0FBRixDQUF3RHNJLEdBQUdtQixLQUFILENBQVMsSUFBVCxFQUFjM0ksQ0FBZCxFQUFpQixLQUFJLElBQUlELElBQUUsQ0FBVixFQUFZQSxJQUFFSyxFQUFFb0IsTUFBaEIsRUFBdUJ6QixHQUF2QjtVQUE2QmQsQ0FBRixFQUFJbUIsRUFBRUwsQ0FBRixDQUFKO09BQVUsSUFBR1YsRUFBRSxJQUFGLENBQUgsRUFBVyxLQUFJZSxJQUFFLENBQU4sRUFBUUEsSUFBRUosRUFBRXdCLE1BQVosRUFBbUJwQixHQUFuQjtZQUF5QkosRUFBRUksQ0FBRixDQUFGLEVBQU9MLGFBQWF1RyxPQUFiLElBQXNCN0UsRUFBRXhDLENBQUYsRUFBSWMsQ0FBSixDQUE3Qjs7S0FBak8sQ0FBc1FiLEVBQUV5SSxLQUFGLEdBQVEsVUFBU3pJLENBQVQsRUFBVztXQUFLLElBQUljLElBQUUsRUFBTixFQUFTSSxJQUFFLENBQWYsRUFBaUJBLElBQUVvSSxVQUFVaEgsTUFBN0IsRUFBb0MsRUFBRXBCLENBQXRDO1VBQTBDQSxJQUFFLENBQUosSUFBT29JLFVBQVVwSSxDQUFWLENBQVA7T0FBb0JBLElBQUVKLEVBQUV5SSxNQUFGLENBQVMsVUFBU3ZKLENBQVQsRUFBVztlQUFRQSxhQUFhZ0IsSUFBYixJQUFtQmIsRUFBRUgsQ0FBRixDQUExQjtPQUFyQixDQUFGLENBQXdEd0ksR0FBR2lCLEtBQUgsQ0FBUyxJQUFULEVBQWMzSSxDQUFkLEVBQWlCLEtBQUksSUFBSUQsSUFBRSxDQUFWLEVBQVlBLElBQUVLLEVBQUVvQixNQUFoQixFQUF1QnpCLEdBQXZCO1VBQTZCZCxDQUFGLEVBQUltQixFQUFFTCxDQUFGLENBQUo7T0FBVSxJQUFHVixFQUFFLElBQUYsQ0FBSCxFQUFXLEtBQUllLElBQ3BzQixDQURnc0IsRUFDOXJCQSxJQUFFSixFQUFFd0IsTUFEMHJCLEVBQ25yQnBCLEdBRG1yQjtZQUM3cUJKLEVBQUVJLENBQUYsQ0FBRixFQUFPTCxhQUFhdUcsT0FBYixJQUFzQjdFLEVBQUV4QyxDQUFGLEVBQUljLENBQUosQ0FBN0I7O0tBRHNlLENBQ2pjYixFQUFFMkksV0FBRixHQUFjLFVBQVMzSSxDQUFULEVBQVc7V0FBSyxJQUFJYyxJQUFFLEVBQU4sRUFBU0ksSUFBRSxDQUFmLEVBQWlCQSxJQUFFb0ksVUFBVWhILE1BQTdCLEVBQW9DLEVBQUVwQixDQUF0QztVQUEwQ0EsSUFBRSxDQUFKLElBQU9vSSxVQUFVcEksQ0FBVixDQUFQO09BQW9CLElBQUlBLElBQUVKLEVBQUV5SSxNQUFGLENBQVMsVUFBU3ZKLENBQVQsRUFBVztlQUFRQSxhQUFhZ0IsSUFBYixJQUFtQmIsRUFBRUgsQ0FBRixDQUExQjtPQUFyQixDQUFOO1VBQTREYSxJQUFFVixFQUFFLElBQUYsQ0FBOUQsQ0FBc0V1SSxHQUFHZSxLQUFILENBQVMsSUFBVCxFQUFjM0ksQ0FBZCxFQUFpQixLQUFJLElBQUllLElBQUUsQ0FBVixFQUFZQSxJQUFFWCxFQUFFb0IsTUFBaEIsRUFBdUJULEdBQXZCO1VBQTZCOUIsQ0FBRixFQUFJbUIsRUFBRVcsQ0FBRixDQUFKO09BQVUsSUFBR2hCLENBQUgsRUFBSyxLQUFJOEIsRUFBRTVDLENBQUYsRUFBSSxJQUFKLEdBQVVtQixJQUFFLENBQWhCLEVBQWtCQSxJQUFFSixFQUFFd0IsTUFBdEIsRUFBNkJwQixHQUE3QjtZQUFtQ0osRUFBRUksQ0FBRixDQUFGLEVBQU9MLGFBQWF1RyxPQUFiLElBQXNCN0UsRUFBRXhDLENBQUYsRUFBSWMsQ0FBSixDQUE3Qjs7S0FBeFAsQ0FBNlJiLEVBQUU2SSxNQUFGLEdBQVMsWUFBVTtVQUFLN0ksSUFBRUcsRUFBRSxJQUFGLENBQU4sQ0FBY3lJLEdBQUdqRixJQUFILENBQVEsSUFBUixFQUFjM0QsS0FBRzJDLEVBQUU1QyxDQUFGLEVBQUksSUFBSixDQUFIO0tBQWhEO0dBQStELFNBQVMwSyxFQUFULEdBQWE7UUFBSzFLLElBQUVvSixDQUFOLENBQVEsU0FBU25KLENBQVQsQ0FBV0EsQ0FBWCxFQUFhYyxDQUFiLEVBQWU7YUFBUThJLGNBQVAsQ0FBc0I1SixDQUF0QixFQUF3QixXQUF4QixFQUFvQyxFQUFDNkosWUFBVy9JLEVBQUUrSSxVQUFkLEVBQXlCQyxjQUFhLENBQUMsQ0FBdkMsRUFBeUMzRyxLQUFJckMsRUFBRXFDLEdBQS9DLEVBQW1EcEIsS0FBSSxhQUFTL0IsQ0FBVCxFQUFXO2NBQUtrQixJQUFFLElBQU47Y0FBV0wsSUFBRSxLQUFLLENBQWxCLENBQW9CVixFQUFFLElBQUYsTUFBVVUsSUFBRSxFQUFGLEVBQUtELEVBQUUsSUFBRixFQUFPLFVBQVNaLENBQVQsRUFBVztrQkFBS2tCLENBQUosSUFBT0wsRUFBRXFCLElBQUYsQ0FBT2xDLENBQVAsQ0FBUDtXQUFuQixDQUFmLEVBQXNEYyxFQUFFaUIsR0FBRixDQUFNNEIsSUFBTixDQUFXLElBQVgsRUFBZ0IzRCxDQUFoQixFQUFtQixJQUFHYSxDQUFILEVBQUssS0FBSSxJQUFJZ0IsSUFBRSxDQUFWLEVBQVlBLElBQUVoQixFQUFFeUIsTUFBaEIsRUFBdUJULEdBQXZCLEVBQTJCO2dCQUFLVixJQUFFTixFQUFFZ0IsQ0FBRixDQUFOLENBQVcsTUFBSVYsRUFBRXFCLFVBQU4sSUFBa0J6QyxFQUFFNkMsb0JBQUYsQ0FBdUJ6QixDQUF2QixDQUFsQjtnQkFBaURpSixhQUFMLENBQW1CckgsZ0JBQW5CLEdBQW9DRixFQUFFOUMsQ0FBRixFQUFJLElBQUosQ0FBcEMsR0FBOENvQyxFQUFFcEMsQ0FBRixFQUFJLElBQUosQ0FBOUMsQ0FBd0QsT0FBT0MsQ0FBUDtTQUFoVCxFQUFwQztjQUF5V2EsQ0FBVCxDQUFXYixDQUFYLEVBQWFjLENBQWIsRUFBZTtRQUFHZCxDQUFGLEVBQUksdUJBQUosRUFBNEIsVUFBU0EsQ0FBVCxFQUFXa0IsQ0FBWCxFQUFhO1lBQUtMLElBQUVWLEVBQUVlLENBQUYsQ0FBTixDQUFXbEIsSUFBRWMsRUFBRTZDLElBQUYsQ0FBTyxJQUFQLEVBQVkzRCxDQUFaLEVBQWNrQixDQUFkLENBQUYsQ0FBbUJMLEtBQUc4QixFQUFFNUMsQ0FBRixFQUFJbUIsQ0FBSixDQUFILENBQVVmLEVBQUVILENBQUYsS0FBTXVDLEVBQUV4QyxDQUFGLEVBQUltQixDQUFKLENBQU47ZUFDbjNCbEIsQ0FBUDtPQUR3eUI7U0FDM3hCMEIsRUFBRTBGLFFBQVExRCxTQUFWLEVBQW9CLGNBQXBCLEVBQW1DLFVBQVMxRCxDQUFULEVBQVc7YUFBUSxLQUFLeUIsZUFBTCxHQUFxQnpCLElBQUVtSCxFQUFFeEQsSUFBRixDQUFPLElBQVAsRUFBWTNELENBQVosQ0FBOUI7S0FBL0MsQ0FBRixHQUFnRzBLLFFBQVFDLElBQVIsQ0FBYSwwREFBYixDQUFoRyxDQUF5SyxJQUFHckQsS0FBR0EsRUFBRW5FLEdBQVIsRUFBWW5ELEVBQUVvSCxRQUFRMUQsU0FBVixFQUFvQjRELENBQXBCLEVBQVosS0FBd0MsSUFBRzBCLEtBQUdBLEVBQUU3RixHQUFSLEVBQVluRCxFQUFFK0ksWUFBWXJGLFNBQWQsRUFBd0JzRixDQUF4QixFQUFaLEtBQTJDO1VBQUtsSSxJQUFFK0UsRUFBRWxDLElBQUYsQ0FBT2dCLFFBQVAsRUFBZ0IsS0FBaEIsQ0FBTixDQUE2QjFDLEVBQUVsQyxDQUFGLEVBQUksVUFBU0EsQ0FBVCxFQUFXO1VBQUdBLENBQUYsRUFBSSxFQUFDOEosWUFBVyxDQUFDLENBQWIsRUFBZUMsY0FBYSxDQUFDLENBQTdCLEVBQStCM0csS0FBSSxlQUFVO21CQUFRb0QsRUFBRTVDLElBQUYsQ0FBTyxJQUFQLEVBQVksQ0FBQyxDQUFiLEVBQWdCaUgsU0FBdkI7V0FBOUMsRUFBZ0Y3SSxLQUFJLGFBQVMvQixDQUFULEVBQVc7Z0JBQUtELElBQUUsZUFBYSxLQUFLcUIsU0FBbEIsR0FBNEIsS0FBS3lKLE9BQWpDLEdBQXlDLElBQS9DLENBQW9ELEtBQUkvSixFQUFFOEosU0FBRixHQUFZNUssQ0FBaEIsRUFBa0IsSUFBRUQsRUFBRWlLLFVBQUYsQ0FBYTFILE1BQWpDO2dCQUEyQ3FCLElBQUYsQ0FBTzVELENBQVAsRUFDdGZBLEVBQUVpSyxVQUFGLENBQWEsQ0FBYixDQURzZjthQUNyZSxPQUFLLElBQUVsSixFQUFFa0osVUFBRixDQUFhMUgsTUFBcEI7Z0JBQThCcUIsSUFBRixDQUFPNUQsQ0FBUCxFQUFTZSxFQUFFa0osVUFBRixDQUFhLENBQWIsQ0FBVDs7V0FENFEsRUFBSjtPQUFoQjtPQUN2TjVDLFFBQVExRCxTQUFWLEVBQW9CLGNBQXBCLEVBQW1DLFVBQVMxRCxDQUFULEVBQVdjLENBQVgsRUFBYTtVQUFJLE1BQUksS0FBSzBCLFVBQVosRUFBdUIsT0FBT2dGLEVBQUU3RCxJQUFGLENBQU8sSUFBUCxFQUFZM0QsQ0FBWixFQUFjYyxDQUFkLENBQVAsQ0FBd0IsSUFBSUksSUFBRXFHLEVBQUU1RCxJQUFGLENBQU8sSUFBUCxFQUFZM0QsQ0FBWixDQUFOLENBQXFCd0gsRUFBRTdELElBQUYsQ0FBTyxJQUFQLEVBQVkzRCxDQUFaLEVBQWNjLENBQWQsRUFBaUJBLElBQUV5RyxFQUFFNUQsSUFBRixDQUFPLElBQVAsRUFBWTNELENBQVosQ0FBRixDQUFpQkQsRUFBRXlELHdCQUFGLENBQTJCLElBQTNCLEVBQWdDeEQsQ0FBaEMsRUFBa0NrQixDQUFsQyxFQUFvQ0osQ0FBcEMsRUFBc0MsSUFBdEM7S0FBdkosRUFBcU1ZLEVBQUUwRixRQUFRMUQsU0FBVixFQUFvQixnQkFBcEIsRUFBcUMsVUFBUzFELENBQVQsRUFBV2MsQ0FBWCxFQUFhRCxDQUFiLEVBQWU7VUFBSSxNQUFJLEtBQUsyQixVQUFaLEVBQXVCLE9BQU9zRixFQUFFbkUsSUFBRixDQUFPLElBQVAsRUFBWTNELENBQVosRUFBY2MsQ0FBZCxFQUFnQkQsQ0FBaEIsQ0FBUCxDQUEwQixJQUFJSyxJQUFFMEcsRUFBRWpFLElBQUYsQ0FBTyxJQUFQLEVBQVkzRCxDQUFaLEVBQWNjLENBQWQsQ0FBTixDQUF1QmdILEVBQUVuRSxJQUFGLENBQU8sSUFBUCxFQUFZM0QsQ0FBWixFQUFjYyxDQUFkLEVBQWdCRCxDQUFoQixFQUFtQkEsSUFBRStHLEVBQUVqRSxJQUFGLENBQU8sSUFBUCxFQUFZM0QsQ0FBWixFQUFjYyxDQUFkLENBQUYsQ0FBbUJmLEVBQUV5RCx3QkFBRixDQUEyQixJQUEzQixFQUFnQzFDLENBQWhDLEVBQWtDSSxDQUFsQyxFQUFvQ0wsQ0FBcEMsRUFBc0NiLENBQXRDO0tBQW5LLEVBQThNMEIsRUFBRTBGLFFBQVExRCxTQUFWLEVBQW9CLGlCQUFwQixFQUMvZCxVQUFTMUQsQ0FBVCxFQUFXO1VBQUksTUFBSSxLQUFLd0MsVUFBWixFQUF1QixPQUFPa0YsRUFBRS9ELElBQUYsQ0FBTyxJQUFQLEVBQVkzRCxDQUFaLENBQVAsQ0FBc0IsSUFBSWMsSUFBRXlHLEVBQUU1RCxJQUFGLENBQU8sSUFBUCxFQUFZM0QsQ0FBWixDQUFOLENBQXFCMEgsRUFBRS9ELElBQUYsQ0FBTyxJQUFQLEVBQVkzRCxDQUFaLEVBQWUsU0FBT2MsQ0FBUCxJQUFVZixFQUFFeUQsd0JBQUYsQ0FBMkIsSUFBM0IsRUFBZ0N4RCxDQUFoQyxFQUFrQ2MsQ0FBbEMsRUFBb0MsSUFBcEMsRUFBeUMsSUFBekMsQ0FBVjtLQURrWSxFQUN2VVksRUFBRTBGLFFBQVExRCxTQUFWLEVBQW9CLG1CQUFwQixFQUF3QyxVQUFTMUQsQ0FBVCxFQUFXYyxDQUFYLEVBQWE7VUFBSSxNQUFJLEtBQUswQixVQUFaLEVBQXVCLE9BQU93RixFQUFFckUsSUFBRixDQUFPLElBQVAsRUFBWTNELENBQVosRUFBY2MsQ0FBZCxDQUFQLENBQXdCLElBQUlJLElBQUUwRyxFQUFFakUsSUFBRixDQUFPLElBQVAsRUFBWTNELENBQVosRUFBY2MsQ0FBZCxDQUFOLENBQXVCa0gsRUFBRXJFLElBQUYsQ0FBTyxJQUFQLEVBQVkzRCxDQUFaLEVBQWNjLENBQWQsRUFBaUIsSUFBSUQsSUFBRStHLEVBQUVqRSxJQUFGLENBQU8sSUFBUCxFQUFZM0QsQ0FBWixFQUFjYyxDQUFkLENBQU4sQ0FBdUJJLE1BQUlMLENBQUosSUFBT2QsRUFBRXlELHdCQUFGLENBQTJCLElBQTNCLEVBQWdDMUMsQ0FBaEMsRUFBa0NJLENBQWxDLEVBQW9DTCxDQUFwQyxFQUFzQ2IsQ0FBdEMsQ0FBUDtLQUFwSyxFQUFzTmlKLElBQUVwSSxFQUFFa0ksWUFBWXJGLFNBQWQsRUFBd0J1RixDQUF4QixDQUFGLEdBQTZCZixJQUFFckgsRUFBRXVHLFFBQVExRCxTQUFWLEVBQW9Cd0UsQ0FBcEIsQ0FBRixHQUF5QndDLFFBQVFDLElBQVIsQ0FBYSxtRUFBYixDQUF0RDtPQUMzVzVLLENBQUgsRUFBS3FILFFBQVExRCxTQUFiLEVBQXVCLEVBQUM4RixHQUFFcEIsRUFBSCxFQUFNOUIsUUFBTytCLEVBQWIsRUFBdkIsRUFBeUNtQyxHQUFHekssQ0FBSDtHQXpCOUI7Ozs7Ozs7O01Ba0NQK0ssSUFBRXZMLE9BQU9DLGNBQWIsQ0FBNEIsSUFBRyxDQUFDc0wsQ0FBRCxJQUFJQSxFQUFFckwsYUFBTixJQUFxQixjQUFZLE9BQU9xTCxFQUFFcEYsTUFBMUMsSUFBa0QsY0FBWSxPQUFPb0YsRUFBRTNILEdBQTFFLEVBQThFO1FBQUtnRyxJQUFFLElBQUl4SCxDQUFKLEVBQU4sQ0FBWXVILEtBQUtRLEtBQUtDLEtBQUtjLEtBQUs5RixTQUFTNUIsZ0JBQVQsR0FBMEIsQ0FBQyxDQUEzQixDQUE2QixJQUFJZ0ksS0FBRyxJQUFJckcsQ0FBSixDQUFNeUUsQ0FBTixDQUFQLENBQWdCakUsT0FBTzBFLGNBQVAsQ0FBc0JySyxNQUF0QixFQUE2QixnQkFBN0IsRUFBOEMsRUFBQ3VLLGNBQWEsQ0FBQyxDQUFmLEVBQWlCRCxZQUFXLENBQUMsQ0FBN0IsRUFBK0JtQixPQUFNRCxFQUFyQyxFQUE5Qzs7Q0FsQ3hMLEVBbUNHcEgsSUFuQ0gsQ0FtQ1FzSCxJQW5DUixFQXFDQTs7Ozs7Ozs7TUNwQ0lDLFNBQVNDLGNBQUEsR0FBaUIsT0FBTzVMLE1BQVAsSUFBaUIsV0FBakIsSUFBZ0NBLE9BQU82TCxJQUFQLElBQWVBLElBQS9DLEdBQzFCN0wsTUFEMEIsR0FDakIsT0FBTzBMLElBQVAsSUFBZSxXQUFmLElBQThCQSxLQUFLRyxJQUFMLElBQWFBLElBQTNDLEdBQWtESCxJQUFsRCxHQUF5RHJHLFNBQVMsYUFBVCxHQUR0RTtNQUVHLE9BQU95RyxHQUFQLElBQWMsUUFBakIsRUFBMEJBLE1BQU1ILE1BQU47Ozs7TUNIdEJJLE9BQU9ILGNBQUEsR0FBaUIsRUFBQ0ksU0FBUyxPQUFWLEVBQTVCO01BQ0csT0FBT0MsR0FBUCxJQUFjLFFBQWpCLEVBQTBCQSxNQUFNRixJQUFOOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQ0QxQixnQkFBaUIsa0JBQUEsQ0FBU0csRUFBVCxFQUFZO1NBQ3BCLFFBQU9BLEVBQVAseUNBQU9BLEVBQVAsT0FBYyxRQUFkLEdBQXlCQSxPQUFPLElBQWhDLEdBQXVDLE9BQU9BLEVBQVAsS0FBYyxVQUE1RDtDQURGOztBQ0NBLGdCQUFpQixrQkFBQSxDQUFTQSxFQUFULEVBQVk7TUFDeEIsQ0FBQ0MsVUFBU0QsRUFBVCxDQUFKLEVBQWlCLE1BQU01RyxVQUFVNEcsS0FBSyxvQkFBZixDQUFOO1NBQ1ZBLEVBQVA7Q0FGRjs7QUNEQSxhQUFpQixlQUFBLENBQVNFLElBQVQsRUFBYztNQUN6QjtXQUNLLENBQUMsQ0FBQ0EsTUFBVDtHQURGLENBRUUsT0FBTTlLLENBQU4sRUFBUTtXQUNELElBQVA7O0NBSko7O0FDQUE7QUFDQSxtQkFBaUIsQ0FBQytLLE9BQW9CLFlBQVU7U0FDdkMxRyxPQUFPMEUsY0FBUCxDQUFzQixFQUF0QixFQUEwQixHQUExQixFQUErQixFQUFDekcsS0FBSyxlQUFVO2FBQVMsQ0FBUDtLQUFsQixFQUEvQixFQUErRG5ELENBQS9ELElBQW9FLENBQTNFO0NBRGdCLENBQWxCOztBQ0RBLElBQUkyRSxhQUNXaUgsUUFBcUJqSDtJQUVoQ2tILEtBQUtILFVBQVMvRyxVQUFULEtBQXNCK0csVUFBUy9HLFdBQVNtQixhQUFsQixDQUgvQjtBQUlBLGlCQUFpQixtQkFBQSxDQUFTMkYsRUFBVCxFQUFZO1NBQ3BCSSxLQUFLbEgsV0FBU21CLGFBQVQsQ0FBdUIyRixFQUF2QixDQUFMLEdBQWtDLEVBQXpDO0NBREY7O0FDSkEsb0JBQWlCLENBQUNHLFlBQUQsSUFBOEIsQ0FBQ0UsT0FBb0IsWUFBVTtTQUNyRTVHLE9BQU8wRSxjQUFQLENBQXNCbUMsV0FBeUIsS0FBekIsQ0FBdEIsRUFBdUQsR0FBdkQsRUFBNEQsRUFBQzVJLEtBQUssZUFBVTthQUFTLENBQVA7S0FBbEIsRUFBNUQsRUFBNEZuRCxDQUE1RixJQUFpRyxDQUF4RztDQUQ4QyxDQUFoRDs7QUNBQTs7OztBQUlBLG1CQUFpQixxQkFBQSxDQUFTeUwsRUFBVCxFQUFhN0QsQ0FBYixFQUFlO01BQzNCLENBQUM4RCxVQUFTRCxFQUFULENBQUosRUFBaUIsT0FBT0EsRUFBUDtNQUNiTyxFQUFKLEVBQVFDLEdBQVI7TUFDR3JFLEtBQUssUUFBUW9FLEtBQUtQLEdBQUdTLFFBQWhCLEtBQTZCLFVBQWxDLElBQWdELENBQUNSLFVBQVNPLE1BQU1ELEdBQUdySSxJQUFILENBQVE4SCxFQUFSLENBQWYsQ0FBcEQsRUFBZ0YsT0FBT1EsR0FBUDtNQUM3RSxRQUFRRCxLQUFLUCxHQUFHVSxPQUFoQixLQUE0QixVQUE1QixJQUEwQyxDQUFDVCxVQUFTTyxNQUFNRCxHQUFHckksSUFBSCxDQUFROEgsRUFBUixDQUFmLENBQTlDLEVBQTBFLE9BQU9RLEdBQVA7TUFDdkUsQ0FBQ3JFLENBQUQsSUFBTSxRQUFRb0UsS0FBS1AsR0FBR1MsUUFBaEIsS0FBNkIsVUFBbkMsSUFBaUQsQ0FBQ1IsVUFBU08sTUFBTUQsR0FBR3JJLElBQUgsQ0FBUThILEVBQVIsQ0FBZixDQUFyRCxFQUFpRixPQUFPUSxHQUFQO1FBQzNFcEgsVUFBVSx5Q0FBVixDQUFOO0NBTkY7O0FDSkEsSUFBSXVILEtBR2lCbEgsT0FBTzBFLGNBSDVCOztBQUtBLFVBQVlnQyxlQUE0QjFHLE9BQU8wRSxjQUFuQyxHQUFvRCxTQUFTQSxjQUFULENBQXdCckMsQ0FBeEIsRUFBMkJ0QyxDQUEzQixFQUE4Qm9ILFVBQTlCLEVBQXlDO1lBQzlGOUUsQ0FBVDtNQUNJK0UsYUFBWXJILENBQVosRUFBZSxJQUFmLENBQUo7WUFDU29ILFVBQVQ7TUFDR0UsYUFBSCxFQUFrQixJQUFJO1dBQ2JILEdBQUc3RSxDQUFILEVBQU10QyxDQUFOLEVBQVNvSCxVQUFULENBQVA7R0FEZ0IsQ0FFaEIsT0FBTXhMLENBQU4sRUFBUTtNQUNQLFNBQVN3TCxVQUFULElBQXVCLFNBQVNBLFVBQW5DLEVBQThDLE1BQU14SCxVQUFVLDBCQUFWLENBQU47TUFDM0MsV0FBV3dILFVBQWQsRUFBeUI5RSxFQUFFdEMsQ0FBRixJQUFPb0gsV0FBV3JCLEtBQWxCO1NBQ2xCekQsQ0FBUDtDQVRGOzs7Ozs7QUNMQSxvQkFBaUIsc0JBQUEsQ0FBU2lGLE1BQVQsRUFBaUJ4QixLQUFqQixFQUF1QjtTQUMvQjtnQkFDUyxFQUFFd0IsU0FBUyxDQUFYLENBRFQ7a0JBRVMsRUFBRUEsU0FBUyxDQUFYLENBRlQ7Y0FHUyxFQUFFQSxTQUFTLENBQVgsQ0FIVDtXQUlTeEI7R0FKaEI7Q0FERjs7QUNFQSxjQUFpQlksZUFBNEIsVUFBU2EsTUFBVCxFQUFpQkMsR0FBakIsRUFBc0IxQixLQUF0QixFQUE0QjtTQUNoRW9CLFVBQUd2SyxDQUFILENBQUs0SyxNQUFMLEVBQWFDLEdBQWIsRUFBa0JDLGNBQVcsQ0FBWCxFQUFjM0IsS0FBZCxDQUFsQixDQUFQO0NBRGUsR0FFYixVQUFTeUIsTUFBVCxFQUFpQkMsR0FBakIsRUFBc0IxQixLQUF0QixFQUE0QjtTQUN2QjBCLEdBQVAsSUFBYzFCLEtBQWQ7U0FDT3lCLE1BQVA7Q0FKRjs7QUNGQSxJQUFJRyxpQkFBaUIsR0FBR0EsY0FBeEI7QUFDQSxXQUFpQixhQUFBLENBQVNuQixFQUFULEVBQWFpQixHQUFiLEVBQWlCO1NBQ3pCRSxlQUFlakosSUFBZixDQUFvQjhILEVBQXBCLEVBQXdCaUIsR0FBeEIsQ0FBUDtDQURGOztBQ0RBLElBQUlHLEtBQUssQ0FBVDtJQUNJQyxLQUFLMUIsS0FBSzJCLE1BQUwsRUFEVDtBQUVBLFdBQWlCLGFBQUEsQ0FBU0wsR0FBVCxFQUFhO1NBQ3JCLFVBQVVNLE1BQVYsQ0FBaUJOLFFBQVFPLFNBQVIsR0FBb0IsRUFBcEIsR0FBeUJQLEdBQTFDLEVBQStDLElBQS9DLEVBQXFELENBQUMsRUFBRUcsRUFBRixHQUFPQyxFQUFSLEVBQVlaLFFBQVosQ0FBcUIsRUFBckIsQ0FBckQsQ0FBUDtDQURGOzs7TUNGSWdCLE1BR1l0QixLQUFrQixLQUFsQixDQUhoQjtNQUlJdUIsWUFBWSxVQUpoQjtNQUtJQyxZQUFZeEksU0FBU3VJLFNBQVQsQ0FMaEI7TUFNSUUsTUFBWSxDQUFDLEtBQUtELFNBQU4sRUFBaUJ2TixLQUFqQixDQUF1QnNOLFNBQXZCLENBTmhCOztRQVFtQkcsYUFBbkIsR0FBbUMsVUFBUzdCLEVBQVQsRUFBWTtXQUN0QzJCLFVBQVV6SixJQUFWLENBQWU4SCxFQUFmLENBQVA7R0FERjs7R0FJQ04sY0FBQSxHQUFpQixVQUFTNUQsQ0FBVCxFQUFZbUYsR0FBWixFQUFpQlQsR0FBakIsRUFBc0JzQixJQUF0QixFQUEyQjtRQUN2Q0MsYUFBYSxPQUFPdkIsR0FBUCxJQUFjLFVBQS9CO1FBQ0d1QixVQUFILEVBQWN2TixLQUFJZ00sR0FBSixFQUFTLE1BQVQsS0FBb0J3QixRQUFLeEIsR0FBTCxFQUFVLE1BQVYsRUFBa0JTLEdBQWxCLENBQXBCO1FBQ1huRixFQUFFbUYsR0FBRixNQUFXVCxHQUFkLEVBQWtCO1FBQ2Z1QixVQUFILEVBQWN2TixLQUFJZ00sR0FBSixFQUFTaUIsR0FBVCxLQUFpQk8sUUFBS3hCLEdBQUwsRUFBVWlCLEdBQVYsRUFBZTNGLEVBQUVtRixHQUFGLElBQVMsS0FBS25GLEVBQUVtRixHQUFGLENBQWQsR0FBdUJXLElBQUkvQyxJQUFKLENBQVNvRCxPQUFPaEIsR0FBUCxDQUFULENBQXRDLENBQWpCO1FBQ1huRixNQUFNMkQsT0FBVCxFQUFnQjtRQUNad0IsR0FBRixJQUFTVCxHQUFUO0tBREYsTUFFTztVQUNGLENBQUNzQixJQUFKLEVBQVM7ZUFDQWhHLEVBQUVtRixHQUFGLENBQVA7Z0JBQ0tuRixDQUFMLEVBQVFtRixHQUFSLEVBQWFULEdBQWI7T0FGRixNQUdPO1lBQ0YxRSxFQUFFbUYsR0FBRixDQUFILEVBQVVuRixFQUFFbUYsR0FBRixJQUFTVCxHQUFULENBQVYsS0FDS3dCLFFBQUtsRyxDQUFMLEVBQVFtRixHQUFSLEVBQWFULEdBQWI7Ozs7R0FiWCxFQWlCR3JILFNBQVNsQixTQWpCWixFQWlCdUJ5SixTQWpCdkIsRUFpQmtDLFNBQVNqQixRQUFULEdBQW1CO1dBQzVDLE9BQU8sSUFBUCxJQUFlLFVBQWYsSUFBNkIsS0FBS2dCLEdBQUwsQ0FBN0IsSUFBMENFLFVBQVV6SixJQUFWLENBQWUsSUFBZixDQUFqRDtHQWxCRjs7O0FDWkEsaUJBQWlCLG1CQUFBLENBQVM4SCxFQUFULEVBQVk7TUFDeEIsT0FBT0EsRUFBUCxJQUFhLFVBQWhCLEVBQTJCLE1BQU01RyxVQUFVNEcsS0FBSyxxQkFBZixDQUFOO1NBQ3BCQSxFQUFQO0NBRkY7O0FDQUE7O0FBRUEsV0FBaUIsYUFBQSxDQUFTTyxFQUFULEVBQWEyQixJQUFiLEVBQW1CckwsTUFBbkIsRUFBMEI7YUFDL0IwSixFQUFWO01BQ0cyQixTQUFTVixTQUFaLEVBQXNCLE9BQU9qQixFQUFQO1VBQ2YxSixNQUFQO1NBQ08sQ0FBTDthQUFlLFVBQVN0QyxDQUFULEVBQVc7ZUFDakJnTSxHQUFHckksSUFBSCxDQUFRZ0ssSUFBUixFQUFjM04sQ0FBZCxDQUFQO09BRE07U0FHSCxDQUFMO2FBQWUsVUFBU0EsQ0FBVCxFQUFZRCxDQUFaLEVBQWM7ZUFDcEJpTSxHQUFHckksSUFBSCxDQUFRZ0ssSUFBUixFQUFjM04sQ0FBZCxFQUFpQkQsQ0FBakIsQ0FBUDtPQURNO1NBR0gsQ0FBTDthQUFlLFVBQVNDLENBQVQsRUFBWUQsQ0FBWixFQUFlZSxDQUFmLEVBQWlCO2VBQ3ZCa0wsR0FBR3JJLElBQUgsQ0FBUWdLLElBQVIsRUFBYzNOLENBQWQsRUFBaUJELENBQWpCLEVBQW9CZSxDQUFwQixDQUFQO09BRE07O1NBSUgseUJBQXVCO1dBQ3JCa0wsR0FBR3ZDLEtBQUgsQ0FBU2tFLElBQVQsRUFBZXJFLFNBQWYsQ0FBUDtHQURGO0NBZEY7O0FDRkEsSUFBSXNFLFlBS1ksV0FMaEI7O0FBT0EsSUFBSUMsVUFBVSxTQUFWQSxPQUFVLENBQVNDLElBQVQsRUFBZUMsSUFBZixFQUFxQkMsTUFBckIsRUFBNEI7TUFDcENDLFlBQVlILE9BQU9ELFFBQVFoSSxDQUEvQjtNQUNJcUksWUFBWUosT0FBT0QsUUFBUXRILENBRC9CO01BRUk0SCxZQUFZTCxPQUFPRCxRQUFRakcsQ0FGL0I7TUFHSXdHLFdBQVlOLE9BQU9ELFFBQVE1SSxDQUgvQjtNQUlJb0osVUFBWVAsT0FBT0QsUUFBUS9KLENBSi9CO01BS0l3SyxTQUFZSixZQUFZaEQsT0FBWixHQUFxQmlELFlBQVlqRCxRQUFPNkMsSUFBUCxNQUFpQjdDLFFBQU82QyxJQUFQLElBQWUsRUFBaEMsQ0FBWixHQUFrRCxDQUFDN0MsUUFBTzZDLElBQVAsS0FBZ0IsRUFBakIsRUFBcUJILFNBQXJCLENBTHZGO01BTUlXLFVBQVlMLFlBQVk1QyxLQUFaLEdBQW1CQSxNQUFLeUMsSUFBTCxNQUFlekMsTUFBS3lDLElBQUwsSUFBYSxFQUE1QixDQU5uQztNQU9JUyxXQUFZRCxRQUFRWCxTQUFSLE1BQXVCVyxRQUFRWCxTQUFSLElBQXFCLEVBQTVDLENBUGhCO01BUUlsQixHQVJKO01BUVMrQixHQVJUO01BUWNDLEdBUmQ7TUFRbUJDLEdBUm5CO01BU0dULFNBQUgsRUFBYUYsU0FBU0QsSUFBVDtPQUNUckIsR0FBSixJQUFXc0IsTUFBWCxFQUFrQjs7VUFFVixDQUFDQyxTQUFELElBQWNLLE1BQWQsSUFBd0JBLE9BQU81QixHQUFQLE1BQWdCTyxTQUE5Qzs7VUFFTSxDQUFDd0IsTUFBTUgsTUFBTixHQUFlTixNQUFoQixFQUF3QnRCLEdBQXhCLENBQU47O1VBRU0yQixXQUFXSSxHQUFYLEdBQWlCRyxLQUFJRixHQUFKLEVBQVN4RCxPQUFULENBQWpCLEdBQW9Da0QsWUFBWSxPQUFPTSxHQUFQLElBQWMsVUFBMUIsR0FBdUNFLEtBQUloSyxTQUFTakIsSUFBYixFQUFtQitLLEdBQW5CLENBQXZDLEdBQWlFQSxHQUEzRzs7UUFFR0osTUFBSCxFQUFVTyxVQUFTUCxNQUFULEVBQWlCNUIsR0FBakIsRUFBc0JnQyxHQUF0QixFQUEyQlosT0FBT0QsUUFBUTdGLENBQTFDOztRQUVQdUcsUUFBUTdCLEdBQVIsS0FBZ0JnQyxHQUFuQixFQUF1QmpCLFFBQUtjLE9BQUwsRUFBYzdCLEdBQWQsRUFBbUJpQyxHQUFuQjtRQUNwQlAsWUFBWUksU0FBUzlCLEdBQVQsS0FBaUJnQyxHQUFoQyxFQUFvQ0YsU0FBUzlCLEdBQVQsSUFBZ0JnQyxHQUFoQjs7Q0F0QnhDO0FBeUJBeEQsUUFBT0ksSUFBUCxHQUFjQSxLQUFkOztBQUVBdUMsUUFBUWhJLENBQVIsR0FBWSxDQUFaO0FBQ0FnSSxRQUFRdEgsQ0FBUixHQUFZLENBQVo7QUFDQXNILFFBQVFqRyxDQUFSLEdBQVksQ0FBWjtBQUNBaUcsUUFBUTVJLENBQVIsR0FBWSxDQUFaO0FBQ0E0SSxRQUFRL0osQ0FBUixHQUFZLEVBQVo7QUFDQStKLFFBQVE3RSxDQUFSLEdBQVksRUFBWjtBQUNBNkUsUUFBUTdGLENBQVIsR0FBWSxFQUFaO0FBQ0E2RixRQUFRbkcsQ0FBUixHQUFZLEdBQVo7QUFDQSxjQUFpQm1HLE9BQWpCOztBQzFDQSxVQUFZLEdBQUdpQixvQkFBZjs7Ozs7O0FDQUEsSUFBSTVDLGFBQVcsR0FBR0EsUUFBbEI7O0FBRUEsV0FBaUIsYUFBQSxDQUFTVCxFQUFULEVBQVk7U0FDcEJTLFdBQVN2SSxJQUFULENBQWM4SCxFQUFkLEVBQWtCdEIsS0FBbEIsQ0FBd0IsQ0FBeEIsRUFBMkIsQ0FBQyxDQUE1QixDQUFQO0NBREY7O0FDRkE7O0FBRUEsZUFBaUJqRixPQUFPLEdBQVAsRUFBWTRKLG9CQUFaLENBQWlDLENBQWpDLElBQXNDNUosTUFBdEMsR0FBK0MsVUFBU3VHLEVBQVQsRUFBWTtTQUNuRXNELEtBQUl0RCxFQUFKLEtBQVcsUUFBWCxHQUFzQkEsR0FBRzVMLEtBQUgsQ0FBUyxFQUFULENBQXRCLEdBQXFDcUYsT0FBT3VHLEVBQVAsQ0FBNUM7Q0FERjs7QUNGQTtBQUNBLGVBQWlCLGlCQUFBLENBQVNBLEVBQVQsRUFBWTtNQUN4QkEsTUFBTXdCLFNBQVQsRUFBbUIsTUFBTXBJLFVBQVUsMkJBQTJCNEcsRUFBckMsQ0FBTjtTQUNaQSxFQUFQO0NBRkY7O0FDREE7O0FBR0EsaUJBQWlCLG1CQUFBLENBQVNBLEVBQVQsRUFBWTtTQUNwQnVELFNBQVFDLFNBQVF4RCxFQUFSLENBQVIsQ0FBUDtDQURGOztBQ0hBLElBQUl5RCxPQU1pQmhLLE9BQU9nQyx3QkFONUI7O0FBUUEsVUFBWTBFLGVBQTRCc0QsSUFBNUIsR0FBbUMsU0FBU2hJLHdCQUFULENBQWtDSyxDQUFsQyxFQUFxQ3RDLENBQXJDLEVBQXVDO01BQ2hGa0ssV0FBVTVILENBQVYsQ0FBSjtNQUNJK0UsYUFBWXJILENBQVosRUFBZSxJQUFmLENBQUo7TUFDR3NILGFBQUgsRUFBa0IsSUFBSTtXQUNiMkMsS0FBSzNILENBQUwsRUFBUXRDLENBQVIsQ0FBUDtHQURnQixDQUVoQixPQUFNcEUsQ0FBTixFQUFRO01BQ1BaLEtBQUlzSCxDQUFKLEVBQU90QyxDQUFQLENBQUgsRUFBYSxPQUFPMEgsY0FBVyxDQUFDeUMsV0FBSXZOLENBQUosQ0FBTThCLElBQU4sQ0FBVzRELENBQVgsRUFBY3RDLENBQWQsQ0FBWixFQUE4QnNDLEVBQUV0QyxDQUFGLENBQTlCLENBQVA7Q0FOZjs7Ozs7O0FDUkE7OztBQUlBLElBQUlvSyxRQUFRLFNBQVJBLEtBQVEsQ0FBUzlILENBQVQsRUFBWStILEtBQVosRUFBa0I7WUFDbkIvSCxDQUFUO01BQ0csQ0FBQ21FLFVBQVM0RCxLQUFULENBQUQsSUFBb0JBLFVBQVUsSUFBakMsRUFBc0MsTUFBTXpLLFVBQVV5SyxRQUFRLDJCQUFsQixDQUFOO0NBRnhDO0FBSUEsZ0JBQWlCO09BQ1ZwSyxPQUFPa0UsY0FBUCxLQUEwQixlQUFlLEVBQWY7WUFDcEJsSixJQUFULEVBQWVxUCxLQUFmLEVBQXNCeE4sR0FBdEIsRUFBMEI7UUFDcEI7WUFDSTZKLEtBQWtCaEgsU0FBU2pCLElBQTNCLEVBQWlDbUksWUFBMEJqSyxDQUExQixDQUE0QnFELE9BQU94QixTQUFuQyxFQUE4QyxXQUE5QyxFQUEyRDNCLEdBQTVGLEVBQWlHLENBQWpHLENBQU47VUFDSTdCLElBQUosRUFBVSxFQUFWO2NBQ1EsRUFBRUEsZ0JBQWdCK0osS0FBbEIsQ0FBUjtLQUhGLENBSUUsT0FBTXBKLENBQU4sRUFBUTtjQUFVLElBQVI7O1dBQ0wsU0FBU3VJLGNBQVQsQ0FBd0I3QixDQUF4QixFQUEyQitILEtBQTNCLEVBQWlDO1lBQ2hDL0gsQ0FBTixFQUFTK0gsS0FBVDtVQUNHQyxLQUFILEVBQVNoSSxFQUFFaUksU0FBRixHQUFjRixLQUFkLENBQVQsS0FDS3ZOLElBQUl3RixDQUFKLEVBQU8rSCxLQUFQO2FBQ0UvSCxDQUFQO0tBSkY7R0FORixDQVlFLEVBWkYsRUFZTSxLQVpOLENBRDZCLEdBYWQwRixTQWJaLENBRFU7U0FlUm9DO0NBZlQ7O0FDUkE7O0FBRUF4QixRQUFRQSxRQUFRakcsQ0FBaEIsRUFBbUIsUUFBbkIsRUFBNkIsRUFBQ3dCLGdCQUFnQndDLFVBQXdCN0osR0FBekMsRUFBN0I7O0FDRkE7Ozs7OztBQU1BLEFBRUE7QUFDQSxBQUVBLG1FQUNBOztBQ1pBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUF3Qk0wTjs7Ozs7O3NCQU1VOzs7U0FDUEMsZUFBTCxHQUF1QixJQUF2Qjs7Ozs7Ozs7Ozs7Ozs7Ozs7MkJBYUtDLFVBQVU7VUFDWCxPQUFPQSxRQUFQLEtBQW9CLFFBQXhCLEVBQWtDO2FBQzNCRCxlQUFMLEdBQXVCQyxTQUFTQyxJQUFULEdBQWdCQyxXQUFoQixFQUF2Qjs7Ozs7Ozs7Ozs7Ozs7O2dDQVlRO1VBQ05sTCxTQUFTN0IsVUFBVCxLQUF3QixTQUF4QixJQUFxQzZCLFNBQVM3QixVQUFULElBQXVCLGVBQWhFLEVBQWlGO2NBQ3pFLElBQUlPLEtBQUosQ0FBVSw0REFBVixDQUFOOzs7YUFHSyxDQUFDLEVBQUU5RCxPQUFPdVEsT0FBUCxJQUFrQnZRLE9BQU93USxRQUF6QixJQUFxQ3hRLE9BQU95USxRQUE5QyxDQUFSOzs7Ozs7Ozs7Ozs7Ozs0QkFXTTtVQUNGLEtBQUtOLGVBQVQsRUFBMEI7ZUFDakIsS0FBS0EsZUFBTCxLQUF5QixLQUFoQztPQURGLE1BRU8sSUFBSSxRQUFPTyxNQUFQLHlDQUFPQSxNQUFQLE9BQWtCLFFBQWxCLElBQThCLENBQUMsV0FBVy9QLElBQVgsQ0FBZ0IrUCxPQUFPTixRQUF2QixDQUFuQyxFQUFxRTtlQUNuRSxRQUFPelAsSUFBUCxDQUFZK1AsT0FBT04sUUFBbkI7O09BREYsTUFFQTtlQUNFLHFCQUFvQnpQLElBQXBCLENBQXlCZ1EsVUFBVUMsU0FBbkM7Ozs7Ozs7Ozs7Ozs7Ozs7Z0NBWUM7VUFDTixLQUFLVCxlQUFULEVBQTBCO2VBQ2pCLEtBQUtBLGVBQUwsS0FBeUIsU0FBaEM7T0FERixNQUVPLElBQUksUUFBT08sTUFBUCx5Q0FBT0EsTUFBUCxPQUFrQixRQUFsQixJQUE4QixDQUFDLFdBQVcvUCxJQUFYLENBQWdCK1AsT0FBT04sUUFBdkIsQ0FBbkMsRUFBcUU7ZUFDbkUsWUFBV3pQLElBQVgsQ0FBZ0IrUCxPQUFPTixRQUF2Qjs7T0FERixNQUVBO2VBQ0UsWUFBV3pQLElBQVgsQ0FBZ0JnUSxVQUFVQyxTQUExQjs7Ozs7Ozs7Ozs7Ozs7OztxQ0FZTTthQUNSLFlBQVdqUSxJQUFYLENBQWdCZ1EsVUFBVUMsU0FBMUIsS0FBd0MsVUFBVWpRLElBQVYsQ0FBZWdRLFVBQVVDLFNBQXpCOzs7Ozs7Ozs7Ozs7Ozs7c0NBVy9CO2FBQ1QsWUFBV2pRLElBQVgsQ0FBZ0JnUSxVQUFVQyxTQUExQixLQUF3QyxDQUFDLFVBQVVqUSxJQUFWLENBQWVnUSxVQUFVQyxTQUF6Qjs7Ozs7Ozs7OzsyQkFNM0M7VUFDRCxLQUFLVCxlQUFULEVBQTBCO2VBQ2pCLEtBQUtBLGVBQUwsS0FBeUIsSUFBaEM7T0FERixNQUVPLElBQUksUUFBT08sTUFBUCx5Q0FBT0EsTUFBUCxPQUFrQixRQUFsQixJQUE4QixDQUFDLFdBQVcvUCxJQUFYLENBQWdCK1AsT0FBT04sUUFBdkIsQ0FBbkMsRUFBcUU7ZUFDbkUsa0JBQWlCelAsSUFBakIsQ0FBc0IrUCxPQUFPTixRQUE3Qjs7T0FERixNQUVBO2VBQ0UscUNBQW9DelAsSUFBcEMsQ0FBeUNnUSxVQUFVQyxTQUFuRDs7Ozs7Ozs7Ozs7Ozs7OzsrQkFZQTthQUNGLFdBQVVqUSxJQUFWLENBQWVnUSxVQUFVQyxTQUF6Qjs7Ozs7Ozs7Ozs7Ozs7OzZCQVdBO2FBQ0EsU0FBUWpRLElBQVIsQ0FBYWdRLFVBQVVDLFNBQXZCOzs7Ozs7Ozs7OzZCQU1BO2FBQ0EsU0FBUWpRLElBQVIsQ0FBYWdRLFVBQVVDLFNBQXZCOzs7Ozs7Ozs7Ozs7Ozs7bUNBV007VUFDVCxLQUFLVCxlQUFULEVBQTBCO2VBQ2pCLEtBQUtBLGVBQUwsS0FBeUIsWUFBaEM7T0FERixNQUVPLElBQUksUUFBT08sTUFBUCx5Q0FBT0EsTUFBUCxPQUFrQixRQUFsQixJQUE4QixDQUFDLFdBQVcvUCxJQUFYLENBQWdCK1AsT0FBT04sUUFBdkIsQ0FBbkMsRUFBcUU7ZUFDbkUsZUFBY3pQLElBQWQsQ0FBbUIrUCxPQUFPTixRQUExQjs7T0FERixNQUVBO2VBQ0Usa0NBQWlDelAsSUFBakMsQ0FBc0NnUSxVQUFVQyxTQUFoRDs7Ozs7Ozs7Ozs7Ozs7Ozs4QkFZRDtVQUNKLEtBQUtULGVBQVQsRUFBMEI7ZUFDakIsS0FBS0EsZUFBTCxLQUF5QixPQUFoQztPQURGLE1BRU87ZUFDRyxDQUFDLENBQUNuUSxPQUFPNlEsS0FBVCxJQUFrQkYsVUFBVUMsU0FBVixDQUFvQnRNLE9BQXBCLENBQTRCLE9BQTVCLEtBQXdDLENBQWxFOzs7Ozs7Ozs7Ozs7Ozs7Z0NBWVE7VUFDTixLQUFLNkwsZUFBVCxFQUEwQjtlQUNqQixLQUFLQSxlQUFMLEtBQXlCLFNBQWhDO09BREYsTUFFTztlQUNHLE9BQU9XLGNBQVAsS0FBMEIsV0FBbEM7Ozs7Ozs7Ozs7Ozs7OzsrQkFZTztVQUNMLEtBQUtYLGVBQVQsRUFBMEI7ZUFDakIsS0FBS0EsZUFBTCxLQUF5QixRQUFoQztPQURGLE1BRU87ZUFDR3hLLE9BQU94QixTQUFQLENBQWlCd0ksUUFBakIsQ0FBMEJ2SSxJQUExQixDQUErQnBFLE9BQU93SixXQUF0QyxFQUFtRGxGLE9BQW5ELENBQTJELGFBQTNELElBQTRFLENBQTdFLElBQW9GLFVBQVVtQixDQUFWLEVBQWE7aUJBQVNBLEVBQUVrSCxRQUFGLE9BQWlCLG1DQUF4QjtTQUFoQixDQUErRSxDQUFDM00sT0FBTyxRQUFQLENBQUQsSUFBcUIrUSxPQUFPQyxnQkFBM0csQ0FBMUY7Ozs7Ozs7Ozs7Ozs7OzsrQkFZTztVQUNMLEtBQUtiLGVBQVQsRUFBMEI7ZUFDakIsS0FBS0EsZUFBTCxLQUF5QixRQUFoQztPQURGLE1BRU87ZUFDRyxDQUFDLENBQUNuUSxPQUFPaVIsTUFBVCxJQUFtQixFQUFFLENBQUMsQ0FBQ2pSLE9BQU82USxLQUFULElBQWtCRixVQUFVQyxTQUFWLENBQW9CdE0sT0FBcEIsQ0FBNEIsT0FBNUIsS0FBd0MsQ0FBNUQsQ0FBbkIsSUFBcUYsRUFBRXFNLFVBQVVDLFNBQVYsQ0FBb0J0TSxPQUFwQixDQUE0QixRQUE1QixLQUF5QyxDQUEzQyxDQUE3Rjs7Ozs7Ozs7Ozs7Ozs7OzJCQVlHO1VBQ0QsS0FBSzZMLGVBQVQsRUFBMEI7ZUFDakIsS0FBS0EsZUFBTCxLQUF5QixJQUFoQztPQURGLE1BRU87ZUFDRSxTQUFTLENBQUMsQ0FBQy9LLFNBQVM4TCxZQUEzQjs7Ozs7Ozs7Ozs7Ozs7OzZCQVlLO1VBQ0gsS0FBS2YsZUFBVCxFQUEwQjtlQUNqQixLQUFLQSxlQUFMLEtBQXlCLE1BQWhDO09BREYsTUFFTztlQUNFUSxVQUFVQyxTQUFWLENBQW9CdE0sT0FBcEIsQ0FBNEIsUUFBNUIsS0FBeUMsQ0FBaEQ7Ozs7Ozs7Ozs7Ozs7OztrQ0FZVTtVQUNSLFFBQU9vTSxNQUFQLHlDQUFPQSxNQUFQLE9BQWtCLFFBQWxCLElBQThCLENBQUMsV0FBVy9QLElBQVgsQ0FBZ0IrUCxPQUFPTixRQUF2QixDQUFuQyxFQUFxRTtlQUMzRCxRQUFPelAsSUFBUCxDQUFZK1AsT0FBT04sUUFBbkIsS0FBaUNlLFNBQVNULE9BQU8xRSxPQUFQLENBQWUxTCxLQUFmLENBQXFCLEdBQXJCLEVBQTBCLENBQTFCLENBQVQsS0FBMEM7O09BRHJGLE1BRU8sSUFBRyxvQkFBb0JLLElBQXBCLENBQXlCZ1EsVUFBVUMsU0FBbkMsQ0FBSCxFQUFrRDtZQUNqRFEsTUFBTSxDQUFDVCxVQUFVQyxTQUFWLENBQW9CUyxLQUFwQixDQUEwQiwrQkFBMUIsS0FBOEQsQ0FBQyxFQUFELENBQS9ELEVBQXFFLENBQXJFLEVBQXdFQyxPQUF4RSxDQUFnRixJQUFoRixFQUFzRixHQUF0RixDQUFaO2VBQ1FILFNBQVNDLElBQUk5USxLQUFKLENBQVUsR0FBVixFQUFlLENBQWYsQ0FBVCxLQUErQixDQUF2Qzs7YUFFSyxLQUFQOzs7Ozs7Ozs7a0NBTVk7VUFDUixLQUFLaVIsU0FBTCxFQUFKLEVBQXNCO2VBQ2IsU0FBUDtPQURGLE1BR0ssSUFBSSxLQUFLQyxLQUFMLEVBQUosRUFBa0I7ZUFDZCxLQUFQO09BREcsTUFHQSxJQUFJLEtBQUtDLElBQUwsRUFBSixFQUFpQjtlQUNiLElBQVA7T0FERyxNQUdBO2VBQ0ksT0FBUDs7Ozs7Ozs7OzttQ0FPVztVQUNULEtBQUtDLFFBQUwsRUFBSixFQUFxQjtlQUNaLFFBQVA7T0FERixNQUdLLElBQUksS0FBS0MsTUFBTCxFQUFKLEVBQW1CO2VBQ2YsTUFBUDtPQURHLE1BR0EsSUFBSSxLQUFLQyxNQUFMLEVBQUosRUFBbUI7ZUFDZixNQUFQO09BREcsTUFHQTtlQUNJLElBQVA7Ozs7Ozs7QUFNTixlQUFlLElBQUkxQixRQUFKLEVBQWY7O0FDcFZBOzs7Ozs7Ozs7Ozs7Ozs7OztBQWlCQSxBQUVBLElBQU0yQiwwQkFBMEI7Y0FDbEIsRUFEa0I7Ozs7Ozs7OztrQkFVZCx3QkFBU3JELElBQVQsRUFBZS9DLEtBQWYsRUFBdUM7UUFBakJxRyxTQUFpQix1RUFBUCxLQUFPOztRQUNqRCxPQUFPdEQsSUFBUCxLQUFnQixRQUFwQixFQUE4QjtZQUN0QixJQUFJMUssS0FBSixDQUFVLGlDQUFWLENBQU47S0FERixNQUdLLElBQUksT0FBTzJILEtBQVAsS0FBaUIsUUFBakIsSUFBNkIsT0FBT0EsS0FBUCxLQUFpQixVQUFsRCxFQUE4RDtZQUMzRCxJQUFJM0gsS0FBSixDQUFVLGdEQUFWLENBQU47S0FERyxNQUdBLElBQUksS0FBS2lPLFVBQUwsQ0FBZ0IxRSxjQUFoQixDQUErQm1CLElBQS9CLEtBQXdDLENBQUNzRCxTQUE3QyxFQUF3RDtZQUNyRCxJQUFJaE8sS0FBSixPQUFjMEssSUFBZCwyQkFBTjs7U0FFR3VELFVBQUwsQ0FBZ0J2RCxJQUFoQixJQUF3Qi9DLEtBQXhCO0dBcEI0Qjs7Ozs7Ozs7ZUE2QmpCLHFCQUFTK0MsSUFBVCxFQUFlO1FBQ3RCLENBQUMsS0FBS3VELFVBQUwsQ0FBZ0IxRSxjQUFoQixDQUErQm1CLElBQS9CLENBQUwsRUFBMkM7YUFDbEMsSUFBUDs7O1dBR0ssS0FBS3VELFVBQUwsQ0FBZ0J2RCxJQUFoQixDQUFQO0dBbEM0Qjs7Ozs7OztrQkEwQ2Qsd0JBQVNBLElBQVQsRUFBZTtXQUN0QixLQUFLdUQsVUFBTCxDQUFnQnZELElBQWhCLENBQVA7R0EzQzRCOzs7Ozs7O21CQW1EYiwyQkFBVztXQUNuQixLQUFLdUQsVUFBWjtHQXBENEI7Y0FzRGxCLG9CQUFTQyxJQUFULEVBQWU7UUFDckJ6USxVQUFKO1FBQ0UwUSxrQkFBa0IsS0FEcEI7UUFFRUMsZUFBZSxDQUZqQjs7UUFJTUMsU0FBUyxFQUFmOztRQUVJSCxLQUFLalAsTUFBTCxLQUFnQixDQUFwQixFQUF1QjtZQUNmLElBQUllLEtBQUosQ0FBVSwrQkFBVixDQUFOOzs7U0FHRyxJQUFJTyxJQUFJLENBQWIsRUFBZ0JBLElBQUkyTixLQUFLalAsTUFBekIsRUFBaUNzQixHQUFqQyxFQUFzQztVQUNoQzJOLEtBQUtJLE1BQUwsQ0FBWS9OLENBQVosQ0FBSjs7VUFFSTlDLE1BQU0sR0FBTixJQUFheVEsS0FBS0ksTUFBTCxDQUFZL04sSUFBSSxDQUFoQixNQUF1QixHQUF4QyxFQUE2QztZQUN2QzROLGVBQUosRUFBcUI7Z0JBQ2IsSUFBSW5PLEtBQUosQ0FBVSxxQ0FBVixDQUFOOzs7WUFHSXVPLFFBQVFMLEtBQUtNLFNBQUwsQ0FBZUosWUFBZixFQUE2QjdOLENBQTdCLENBQWQ7WUFDSWdPLE1BQU10UCxNQUFOLEdBQWUsQ0FBbkIsRUFBc0I7aUJBQ2JKLElBQVAsQ0FBWXFQLEtBQUtNLFNBQUwsQ0FBZUosWUFBZixFQUE2QjdOLENBQTdCLENBQVo7Ozt1QkFHYUEsQ0FBZjswQkFDa0IsSUFBbEI7T0FYRixNQWFLLElBQUk5QyxNQUFNLEdBQVYsRUFBZTtZQUNkLENBQUMwUSxlQUFMLEVBQXNCO2dCQUNkLElBQUluTyxLQUFKLENBQVUsMkJBQVYsQ0FBTjs7O1lBR0l1TyxTQUFRTCxLQUFLTSxTQUFMLENBQWVKLFlBQWYsRUFBNkI3TixJQUFJLENBQWpDLENBQWQ7WUFDSWdPLE9BQU10UCxNQUFOLEdBQWUsQ0FBbkIsRUFBc0I7aUJBQ2JKLElBQVAsQ0FBWXFQLEtBQUtNLFNBQUwsQ0FBZUosWUFBZixFQUE2QjdOLElBQUksQ0FBakMsQ0FBWjs7O3VCQUdhQSxJQUFJLENBQW5COzBCQUNrQixLQUFsQjs7OztRQUlBNE4sZUFBSixFQUFxQjtZQUNiLElBQUluTyxLQUFKLENBQVUsNkJBQVYsQ0FBTjs7O1dBR0tuQixJQUFQLENBQVlxUCxLQUFLTSxTQUFMLENBQWVKLFlBQWYsRUFBNkJGLEtBQUtqUCxNQUFsQyxDQUFaOztXQUVPb1AsTUFBUDtHQXRHNEI7aUJBd0dmLHVCQUFTRSxLQUFULEVBQWdCO1FBQ3ZCRSxLQUFLLGFBQVg7UUFDRWxCLFFBQVFnQixNQUFNaEIsS0FBTixDQUFZa0IsRUFBWixDQURWOztRQUdJbEIsS0FBSixFQUFXO1VBQ0g3QyxPQUFPNkMsTUFBTSxDQUFOLEVBQVNoQixJQUFULEVBQWI7VUFDTW1DLFdBQVcsS0FBS0MsV0FBTCxDQUFpQmpFLElBQWpCLENBQWpCOztVQUVJZ0UsYUFBYSxJQUFqQixFQUF1QjtjQUNmLElBQUkxTyxLQUFKLGdCQUF1QjBLLElBQXZCLHVCQUFOO09BREYsTUFHSyxJQUFJLE9BQU9nRSxRQUFQLEtBQW9CLFFBQXhCLEVBQWtDO2VBQzlCQSxRQUFQO09BREcsTUFHQTtZQUNHRSxLQUFLRixVQUFYOztZQUVJLE9BQU9FLEVBQVAsS0FBYyxRQUFsQixFQUE0QjtnQkFDcEIsSUFBSTVPLEtBQUosQ0FBVSx1QkFBVixDQUFOOzs7ZUFHSzRPLEVBQVA7O0tBakJKLE1Bb0JLO2FBQ0lMLEtBQVA7O0dBakkwQjtrQkFvSWQsd0JBQVNGLE1BQVQsRUFBaUI7V0FDeEJBLE9BQU9RLEdBQVAsQ0FBVyxLQUFLQyxhQUFMLENBQW1Cbk8sSUFBbkIsQ0FBd0IsSUFBeEIsQ0FBWCxDQUFQO0dBckk0QjtvQkF1SVosMEJBQVNvTyxVQUFULEVBQXFCO1dBQzlCQSxXQUFXdlMsS0FBWCxDQUFpQixHQUFqQixFQUNKcVMsR0FESSxDQUVILFVBQVNYLElBQVQsRUFBZTthQUNOQSxLQUFLM0IsSUFBTCxFQUFQO0tBSEMsRUFNSnNDLEdBTkksQ0FNQSxLQUFLRyxVQUFMLENBQWdCck8sSUFBaEIsQ0FBcUIsSUFBckIsQ0FOQSxFQU9Ka08sR0FQSSxDQU9BLEtBQUtJLGNBQUwsQ0FBb0J0TyxJQUFwQixDQUF5QixJQUF6QixDQVBBLEVBUUprTyxHQVJJLENBUUEsVUFBQ1gsSUFBRDthQUFVQSxLQUFLakgsSUFBTCxDQUFVLEVBQVYsQ0FBVjtLQVJBLENBQVA7R0F4STRCOzs7Ozs7OztZQXlKcEIsa0JBQVM4SCxVQUFULEVBQXFCO1FBQ3pCLENBQUNBLFVBQUwsRUFBaUI7YUFDUixFQUFQOzs7V0FHSyxLQUFLRyxnQkFBTCxDQUFzQkgsVUFBdEIsQ0FBUDs7Q0E5Sko7OztBQW1LQWhCLHdCQUF3Qm9CLGNBQXhCLENBQXVDLFVBQXZDLEVBQW1EN0MsU0FBUzhDLFdBQVQsRUFBbkQ7QUFDQXJCLHdCQUF3Qm9CLGNBQXhCLENBQXVDLFdBQXZDLEVBQW9EN0MsU0FBUytDLFlBQVQsRUFBcEQ7QUFDQXRCLHdCQUF3Qm9CLGNBQXhCLENBQXVDLFNBQXZDLEVBQWtELFlBQU07U0FDL0M3QyxTQUFTZ0QsU0FBVCxLQUF1QixTQUF2QixHQUFtQyxTQUExQztDQURGLEVBSUE7O0FDNUxBOzs7Ozs7Ozs7Ozs7Ozs7OztBQWlCQSxBQUNBLEFBRUEsSUFBTUMsYUFBVyxFQUFqQjs7QUFFQUEsV0FBU0MsTUFBVCxHQUFrQjtxQkFDRyxJQURIO3NCQUVJLEtBRko7b0JBR0U7Q0FIcEI7O0FBTUFELFdBQVNFLFdBQVQsR0FBdUJ2VCxPQUFPb0YsUUFBUCxDQUFnQm1CLGFBQWhCLENBQThCLEtBQTlCLENBQXZCOzs7OztBQUtBOE0sV0FBU0csMEJBQVQsR0FBc0MsWUFBTTtTQUNuQyxDQUFDLENBQUNILFdBQVNDLE1BQVQsQ0FBZ0JHLGlCQUF6QjtDQURGOzs7Ozs7QUFRQUosV0FBU0ssaUJBQVQsR0FBNkIsZ0JBQVE7U0FDNUIsQ0FBQyxLQUFLQyxJQUFOLEVBQVl0RCxJQUFaLEVBQVA7O01BRUksQ0FBQ3NELEtBQUt0QyxLQUFMLENBQVcsWUFBWCxDQUFMLEVBQStCO1dBQ3RCLHNCQUFzQnNDLElBQXRCLEdBQTZCLGFBQXBDOzs7U0FHS0EsSUFBUDtDQVBGOztBQVVBTixXQUFTTyxvQkFBVCxHQUFnQyxvQkFBWTtNQUN0QzVULE9BQU9vRixRQUFQLENBQWdCN0IsVUFBaEIsS0FBK0IsU0FBL0IsSUFBNEN2RCxPQUFPb0YsUUFBUCxDQUFnQjdCLFVBQWhCLElBQThCLGVBQTlFLEVBQStGO1dBQ3RGNkIsUUFBUCxDQUFnQjNCLGdCQUFoQixDQUFpQyxrQkFBakMsRUFBcURvUSxRQUFyRDtHQURGLE1BRU87aUJBQ1FBLFFBQWI7O0NBSko7O0FBUUFSLFdBQVNJLGlCQUFULEdBQTZCLGtCQUFVO01BQy9CSyxVQUFVLFNBQVZBLE9BQVUsR0FBTTtRQUNoQlQsV0FBU1UsbUJBQVQsRUFBSixFQUFvQzs7O2FBRzNCQyxtQkFBVCxDQUE2QixhQUE3QixFQUE0Q0YsT0FBNUM7YUFDU0UsbUJBQVQsQ0FBNkIsa0JBQTdCLEVBQWlERixPQUFqRDtHQUxGOztNQVFJLFFBQU9wRCxNQUFQLHlDQUFPQSxNQUFQLE9BQWtCLFFBQXRCLEVBQWdDO2FBQ3JCak4sZ0JBQVQsQ0FBMEIsYUFBMUIsRUFBeUNxUSxPQUF6QztHQURGLE1BRU8sSUFBSSxDQUFDLFVBQUQsRUFBYSxhQUFiLEVBQTRCeFAsT0FBNUIsQ0FBb0NjLFNBQVM3QixVQUE3QyxNQUE2RCxDQUFDLENBQWxFLEVBQXFFO2FBQ2pFRSxnQkFBVCxDQUEwQixrQkFBMUIsRUFBOEMsWUFBVzs7S0FBekQ7R0FESyxNQUlBOzs7Q0FmVDs7QUFvQkE0UCxXQUFTVSxtQkFBVCxHQUErQjtTQUFNVixXQUFTRywwQkFBVCxNQUF5Q3BELFNBQVNnRCxTQUFULEVBQXpDLElBQWlFaEQsU0FBUzZELFdBQVQsRUFBdkU7Q0FBL0I7O0FBRUFaLFdBQVNhLGFBQVQsR0FBeUI7WUFDYixFQURhOzs7Ozs7S0FBQSxlQU9uQi9HLEdBUG1CLEVBT2Q7V0FDQWtHLFdBQVNhLGFBQVQsQ0FBdUJDLFFBQXZCLENBQWdDaEgsR0FBaEMsS0FBd0MsSUFBL0M7R0FScUI7Ozs7Ozs7S0FBQSxlQWVuQkEsR0FmbUIsRUFlZGlILFFBZmMsRUFlSjtlQUNSRixhQUFULENBQXVCQyxRQUF2QixDQUFnQ2hILEdBQWhDLElBQXVDaUgsUUFBdkM7O0NBaEJKOztBQW9CQXBVLE9BQU9vRixRQUFQLENBQWdCM0IsZ0JBQWhCLENBQWlDLGlCQUFqQyxFQUFvRCxVQUFTbkMsQ0FBVCxFQUFZO01BQzFEQSxFQUFFeU4sTUFBRixDQUFTc0YsUUFBVCxDQUFrQi9ELFdBQWxCLE9BQW9DLGNBQXhDLEVBQXdEO2VBQzdDNEQsYUFBVCxDQUF1QjFSLEdBQXZCLENBQTJCbEIsRUFBRWdULFVBQTdCLEVBQXlDaFQsRUFBRThTLFFBQTNDOztDQUZKLEVBSUcsS0FKSDs7QUFNQXBVLE9BQU9vRixRQUFQLENBQWdCM0IsZ0JBQWhCLENBQWlDLGtCQUFqQyxFQUFxRCxZQUFXO1dBQ3JELGtDQUFUO1dBQ1MsOEJBQVQ7V0FDUyxpQ0FBVDs7V0FFUzhRLFFBQVQsQ0FBa0JDLEtBQWxCLEVBQXlCO1FBQ2pCQyxZQUFZelUsT0FBT29GLFFBQVAsQ0FBZ0JzUCxnQkFBaEIsQ0FBaUNGLEtBQWpDLENBQWxCO1NBQ0ssSUFBSW5RLElBQUksQ0FBYixFQUFnQkEsSUFBSW9RLFVBQVUxUixNQUE5QixFQUFzQ3NCLEdBQXRDLEVBQTJDO2lCQUNoQzZQLGFBQVQsQ0FBdUIxUixHQUF2QixDQUEyQmlTLFVBQVVwUSxDQUFWLEVBQWF2QyxZQUFiLENBQTBCLElBQTFCLENBQTNCLEVBQTREMlMsVUFBVXBRLENBQVYsRUFBYXlHLFdBQXpFOzs7Q0FSTixFQVdHLEtBWEg7Ozs7OztBQWlCQXVJLFdBQVNzQixvQkFBVCxHQUFnQyxVQUFTQyxJQUFULEVBQWU7U0FDdEMsSUFBSTNQLE9BQUosQ0FBWSxVQUFDNFAsT0FBRCxFQUFVN08sTUFBVixFQUFxQjtpQkFDekIsWUFBTTtVQUNYOE8sUUFBUXpCLFdBQVNhLGFBQVQsQ0FBdUJ0USxHQUF2QixDQUEyQmdSLElBQTNCLENBQWQ7O1VBRUlFLEtBQUosRUFBVztZQUNIbkIsT0FBTyxPQUFPbUIsS0FBUCxLQUFpQixRQUFqQixHQUE0QkEsS0FBNUIsR0FBb0NBLE1BQU0sQ0FBTixDQUFqRDtnQkFDUW5CLElBQVI7T0FGRixNQUdPO1lBQ0NvQixNQUFNLElBQUlDLGNBQUosRUFBWjtZQUNJQyxJQUFKLENBQVMsS0FBVCxFQUFnQkwsSUFBaEIsRUFBc0IsSUFBdEI7WUFDSU0sTUFBSixHQUFhLFVBQVNDLFFBQVQsRUFBbUI7Y0FDeEJ4QixPQUFPb0IsSUFBSUssWUFBakI7Y0FDSUwsSUFBSU0sTUFBSixJQUFjLEdBQWQsSUFBcUJOLElBQUlNLE1BQUosR0FBYSxHQUF0QyxFQUEyQzttQkFDbEMxQixJQUFQO1dBREYsTUFHSztvQkFDS0EsSUFBUjs7U0FOSjtZQVNJMkIsT0FBSixHQUFjLFlBQVc7Z0JBQ2pCLElBQUl4UixLQUFKLDZCQUFvQzhRLElBQXBDLENBQU47U0FERjtZQUdJVyxJQUFKLENBQVMsSUFBVDs7S0FyQko7R0FESyxDQUFQO0NBREY7Ozs7OztBQWlDQWxDLFdBQVNtQyxnQkFBVCxHQUE0QixVQUFTWixJQUFULEVBQWU7TUFDbkNhLFFBQVE1RCx3QkFBd0I2RCxRQUF4QixDQUFpQ2QsSUFBakMsQ0FBZDs7TUFFTWUsVUFBVSxTQUFWQSxPQUFVLENBQUNmLElBQUQsRUFBVTtRQUNwQixPQUFPQSxJQUFQLEtBQWdCLFFBQXBCLEVBQThCO2FBQ3JCM1AsUUFBUWUsTUFBUixDQUFlLHNCQUFmLENBQVA7OztXQUdLcU4sV0FBU3NCLG9CQUFULENBQThCQyxJQUE5QixFQUNKZ0IsSUFESSxDQUVILFVBQVNqQyxJQUFULEVBQWU7YUFDTk4sV0FBU0ssaUJBQVQsQ0FBMkJDLElBQTNCLENBQVA7S0FIQyxFQUtILFVBQVNrQyxLQUFULEVBQWdCO1VBQ1ZKLE1BQU0xUyxNQUFOLEtBQWlCLENBQXJCLEVBQXdCO2VBQ2ZrQyxRQUFRZSxNQUFSLENBQWU2UCxLQUFmLENBQVA7OzthQUdLRixRQUFRRixNQUFNM1AsS0FBTixFQUFSLENBQVA7S0FWQyxFQWFKOFAsSUFiSSxDQWFDO2FBQVF2QyxXQUFTSyxpQkFBVCxDQUEyQkMsSUFBM0IsQ0FBUjtLQWJELENBQVA7R0FMRjs7U0FxQk9nQyxRQUFRRixNQUFNM1AsS0FBTixFQUFSLENBQVA7Q0F4QkYsQ0EyQkE7O0FDeExBOzs7Ozs7Ozs7Ozs7Ozs7OztBQWlCQSxBQUNBLElBRXFCZ1E7Ozs7Ozs7Ozs7MkJBVVBDLElBQVosRUFBa0I7OztTQUNYQyxVQUFMLEdBQWtCRCxLQUFLRSxTQUF2QjtTQUNLQyxVQUFMLEdBQWtCSCxLQUFLSSxTQUF2QjtTQUNLQyxjQUFMLEdBQXNCTCxLQUFLTSxhQUFMLElBQXNCTixLQUFLSSxTQUFMLENBQWUzSCxJQUEzRDtTQUNLOEgsVUFBTCxHQUFrQlAsS0FBS1EsZ0JBQUwsSUFBeUIsU0FBM0M7U0FDS0MsaUJBQUwsR0FBeUJULEtBQUtVLHVCQUFMLElBQWdDLEVBQXpEOztRQUVJLENBQUMsS0FBS1QsVUFBTCxDQUFnQixLQUFLTSxVQUFyQixDQUFMLEVBQXVDO1lBQy9CLElBQUl4UyxLQUFKLENBQVUsd0JBQXdCLEtBQUt3UyxVQUF2QyxDQUFOOzs7Ozs7Ozs7Ozs7Ozs7Ozt3Q0E0QmdCSSxTQUFTO1dBQ3RCRixpQkFBTCxHQUF5QkUsT0FBekI7Ozs7Ozs7Ozs7Ozs7a0NBVXlDO1VBQS9CQSxPQUErQix1RUFBckIsRUFBcUI7VUFBakJDLGVBQWlCOzs7VUFFckNDLFdBQVcsSUFBZjs7VUFFSUYsUUFBUUcsU0FBUixZQUE2QixLQUFLWCxVQUF0QyxFQUFrRDtlQUN6Q1EsUUFBUUcsU0FBZjs7O1VBR0VDLFdBQVcsSUFBZjs7VUFFSSxPQUFPSixRQUFRRyxTQUFmLEtBQTZCLFFBQWpDLEVBQTJDO21CQUM5QixLQUFLYixVQUFMLENBQWdCVSxRQUFRRyxTQUF4QixDQUFYOzs7VUFHRSxDQUFDQyxRQUFELElBQWFILGVBQWpCLEVBQWtDO21CQUNyQkEsZUFBWDtPQURGLE1BRU87bUJBQ01HLFlBQVksS0FBS2QsVUFBTCxDQUFnQixLQUFLTSxVQUFyQixDQUF2Qjs7WUFFTVMsZ0JBQWdCQyxLQUFLQyxNQUFMLENBQ3BCLEVBRG9CLEVBRXBCLEtBQUtULGlCQUZlLEVBR3BCRSxRQUFRUSxnQkFBUixJQUE0QixFQUhSLEVBSXBCN0QsV0FBU0MsTUFBVCxDQUFnQjZELGtCQUFoQixHQUFxQyxFQUFDQyxVQUFVLENBQVgsRUFBY0MsT0FBTyxDQUFyQixFQUFyQyxHQUErRCxFQUozQyxDQUF0Qjs7bUJBT1csSUFBSVAsUUFBSixDQUFhQyxhQUFiLENBQVg7O1lBRUksT0FBT0gsUUFBUCxLQUFvQixVQUF4QixFQUFvQztxQkFDdkIsSUFBSUEsUUFBSixDQUFhRyxhQUFiLENBQVgsQ0FEa0M7Ozs7VUFLbEMsRUFBRUgsb0JBQW9CLEtBQUtWLFVBQTNCLENBQUosRUFBNEM7Y0FDcEMsSUFBSXBTLEtBQUosQ0FBVSxzQ0FBc0MsS0FBS3NTLGNBQTNDLEdBQTRELEdBQXRFLENBQU47OzthQUdLUSxRQUFQOzs7O2dEQXBFaUNVLFlBQVk7VUFDekM7WUFDRSxPQUFPQSxVQUFQLEtBQXNCLFFBQTFCLEVBQW9DO2NBQzVCQyxTQUFTUCxLQUFLUSxxQkFBTCxDQUEyQkYsVUFBM0IsQ0FBZjtjQUNJLFFBQU9DLE1BQVAseUNBQU9BLE1BQVAsT0FBa0IsUUFBbEIsSUFBOEJBLFdBQVcsSUFBN0MsRUFBbUQ7bUJBQzFDQSxNQUFQO1dBREYsTUFFTztvQkFDRzFCLEtBQVIsQ0FBYyxpRUFBaUV5QixVQUEvRTs7O2VBR0csRUFBUDtPQVRGLENBVUUsT0FBT2hXLENBQVAsRUFBVTtnQkFDRnVVLEtBQVIsQ0FBYyxpRUFBaUV5QixVQUEvRTtlQUNPLEVBQVA7Ozs7Ozs7QUMzRE47Ozs7Ozs7Ozs7Ozs7Ozs7O0FBaUJBLElBRXFCRzs7Ozs7Ozs7Ozs7O3lCQUtQQyxNQUFNQyxTQUFTO2FBQ2xCQyxTQUFTLENBQUMsS0FBS0YsSUFBTixFQUFZckgsSUFBWixFQUFULENBQVA7Z0JBQ1V1SCxTQUFTLENBQUMsS0FBS0QsT0FBTixFQUFldEgsSUFBZixFQUFULENBQVY7O1VBRU13SCxVQUFVbFMsT0FBT21TLElBQVAsQ0FBWUosSUFBWixFQUFrQkssTUFBbEIsQ0FBeUIsVUFBQ1IsTUFBRCxFQUFTbEYsS0FBVCxFQUFtQjtZQUN0RCxDQUFDc0YsUUFBUXRGLEtBQVIsQ0FBTCxFQUFxQjtpQkFDWjFQLElBQVAsQ0FBWTBQLEtBQVo7O2VBRUtrRixNQUFQO09BSmMsRUFLYixFQUxhLENBQWhCOztVQU9NUyxRQUFRclMsT0FBT21TLElBQVAsQ0FBWUgsT0FBWixFQUFxQkksTUFBckIsQ0FBNEIsVUFBQ1IsTUFBRCxFQUFTbEYsS0FBVCxFQUFtQjtZQUN2RCxDQUFDcUYsS0FBS3JGLEtBQUwsQ0FBTCxFQUFrQjtpQkFDVDFQLElBQVAsQ0FBWTBQLEtBQVo7O2VBRUtrRixNQUFQO09BSlksRUFLWCxFQUxXLENBQWQ7O2FBT08sRUFBQ1MsWUFBRCxFQUFRSCxnQkFBUixFQUFQOztlQUVTRCxRQUFULENBQWtCSyxRQUFsQixFQUE0QjtZQUNwQkMsT0FBTyxFQUFiO3FCQUNhNVgsS0FBYixDQUFtQjJYLFFBQW5CLEVBQTZCRSxPQUE3QixDQUFxQztpQkFBU0QsS0FBSzdGLEtBQUwsSUFBY0EsS0FBdkI7U0FBckM7ZUFDTzZGLElBQVA7Ozs7Ozs7Ozs7Ozs7O3lDQVd3QkUsTUFBTUMsV0FBV2pFLFVBQVU7V0FDaEQ0RCxLQUFMLENBQ0dyRixHQURILENBQ087ZUFBWXlCLFNBQVM5QyxPQUFULENBQWlCLEtBQWpCLEVBQXdCMkcsUUFBeEIsQ0FBWjtPQURQLEVBRUdFLE9BRkgsQ0FFVztlQUFTRSxVQUFVclcsR0FBVixDQUFjc1csS0FBZCxDQUFUO09BRlg7O1dBSUtULE9BQUwsQ0FDR2xGLEdBREgsQ0FDTztlQUFZeUIsU0FBUzlDLE9BQVQsQ0FBaUIsS0FBakIsRUFBd0IyRyxRQUF4QixDQUFaO09BRFAsRUFFR0UsT0FGSCxDQUVXO2VBQVNFLFVBQVUvTyxNQUFWLENBQWlCZ1AsS0FBakIsQ0FBVDtPQUZYOzs7Ozs7Ozs7Ozs7O3VDQVl3QkYsTUFBTUcsU0FBU0MsUUFBUTtXQUMxQyxJQUFNQyxRQUFYLElBQXVCRCxNQUF2QixFQUErQjtZQUN6QkEsT0FBT25MLGNBQVAsQ0FBc0JvTCxRQUF0QixDQUFKLEVBQXFDO2NBQzdCQyxpQkFBaUIsQ0FBQ0QsUUFBRCxJQUFhekIsS0FBSzNGLEtBQUwsQ0FBV2tILE9BQVgsRUFBb0JFLFFBQXBCLENBQWIsR0FBNkMsQ0FBQ0YsT0FBRCxDQUE3QyxHQUF5REEsUUFBUTdELGdCQUFSLENBQXlCK0QsUUFBekIsQ0FBaEY7ZUFDSyxJQUFJcFUsSUFBSSxDQUFiLEVBQWdCQSxJQUFJcVUsZUFBZTNWLE1BQW5DLEVBQTJDc0IsR0FBM0MsRUFBZ0Q7eUJBQ2pDc1Usb0JBQWIsQ0FBa0NQLElBQWxDLEVBQXdDTSxlQUFlclUsQ0FBZixFQUFrQmdVLFNBQTFELEVBQXFFRyxPQUFPQyxRQUFQLENBQXJFOzs7Ozs7Ozs7Ozs7Ozs7c0NBWWlCZixNQUFNQyxTQUFTWSxTQUFTQyxRQUFRO2FBQ2hEZixhQUFhbUIsa0JBQWIsQ0FBZ0NuQixhQUFhVyxJQUFiLENBQWtCVixJQUFsQixFQUF3QkMsT0FBeEIsQ0FBaEMsRUFBa0VZLE9BQWxFLEVBQTJFQyxNQUEzRSxDQUFQOzs7Ozs7Ozs7O2lDQU9rQkQsU0FBU0MsUUFBUTtVQUM3QlAsV0FBV00sUUFBUXpXLFlBQVIsQ0FBcUIsVUFBckIsQ0FBakI7VUFDSSxPQUFPbVcsUUFBUCxLQUFvQixRQUF4QixFQUFrQzs7OzttQkFJckJXLGtCQUFiLENBQWdDO2lCQUNyQixFQURxQjtlQUV2Qm5CLGFBQWFuWCxLQUFiLENBQW1CMlgsUUFBbkI7T0FGVCxFQUdHTSxPQUhILEVBR1lDLE1BSFo7Ozs7MEJBTVdQLFVBQVU7VUFDakIsT0FBT0EsUUFBUCxLQUFvQixRQUF4QixFQUFrQztlQUN6QixFQUFQOzs7YUFHS0EsU0FBUzVILElBQVQsR0FBZ0IvUCxLQUFoQixDQUFzQixJQUF0QixFQUE0QjBKLE1BQTVCLENBQW1DO2VBQVNxSSxVQUFVLEVBQW5CO09BQW5DLENBQVA7Ozs7Ozs7OztnQ0FNaUJrRyxTQUFTTSxlQUFlO1VBQ3JDLENBQUNOLFFBQVFPLFlBQVIsQ0FBcUIsVUFBckIsQ0FBTCxFQUF1QztnQkFDN0I1USxZQUFSLENBQXFCLFVBQXJCLEVBQWlDMlEsYUFBakM7T0FERixNQUVPO1lBQ0MxRyxTQUFTc0YsYUFBYW5YLEtBQWIsQ0FBbUJpWSxRQUFRelcsWUFBUixDQUFxQixVQUFyQixDQUFuQixDQUFmO1lBQ0lxUSxPQUFPN04sT0FBUCxDQUFldVUsYUFBZixLQUFpQyxDQUFDLENBQXRDLEVBQXlDO2lCQUNoQ2xXLElBQVAsQ0FBWWtXLGFBQVo7a0JBQ1EzUSxZQUFSLENBQXFCLFVBQXJCLEVBQWlDaUssT0FBT3BILElBQVAsQ0FBWSxHQUFaLENBQWpDOzs7Ozs7Ozs7OzttQ0FRZ0J3TixTQUFTTSxlQUFlO1VBQ3hDTixRQUFRTyxZQUFSLENBQXFCLFVBQXJCLENBQUosRUFBc0M7WUFDOUIzRyxTQUFTc0YsYUFBYW5YLEtBQWIsQ0FBbUJpWSxRQUFRelcsWUFBUixDQUFxQixVQUFyQixDQUFuQixDQUFmO1lBQ01pWCxRQUFRNUcsT0FBTzdOLE9BQVAsQ0FBZXVVLGFBQWYsQ0FBZDtZQUNJRSxVQUFVLENBQUMsQ0FBZixFQUFrQjtpQkFDVEMsTUFBUCxDQUFjRCxLQUFkLEVBQXFCLENBQXJCO2tCQUNRN1EsWUFBUixDQUFxQixVQUFyQixFQUFpQ2lLLE9BQU9wSCxJQUFQLENBQVksR0FBWixDQUFqQzs7Ozs7Ozs7QUNoSlI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBaUJBLEFBQ0EsQUFFQSxJQUFha08sa0JBQWI7OEJBRWNDLFlBQVosRUFBa0Q7UUFBeEJDLGVBQXdCLHVFQUFOLElBQU07OztRQUM1QyxRQUFPRCxZQUFQLHlDQUFPQSxZQUFQLE9BQXdCLFFBQXhCLElBQW9DQSxpQkFBaUIsSUFBekQsRUFBK0Q7WUFDdkRwVixNQUFNLHlDQUFOLENBQU47O1NBRUdzVixhQUFMLEdBQXFCRixZQUFyQjs7UUFFSSxFQUFFQywyQkFBMkJ0UixPQUE3QixLQUF5Q3NSLG9CQUFvQixJQUFqRSxFQUF1RTtZQUMvRHJWLE1BQU0scUVBQU4sQ0FBTjs7U0FFR3VWLGdCQUFMLEdBQXdCRixlQUF4Qjs7Ozs7Ozs7Ozt3Q0FVa0I7YUFDWCxLQUFLQyxhQUFMLENBQW1CRSxPQUFuQixZQUFzQ2pVLFFBQTdDOzs7Ozs7Ozs7OEJBTVE7V0FDSCtULGFBQUwsQ0FBbUJFLE9BQW5CLENBQTJCcFAsS0FBM0IsQ0FBaUMsS0FBS2tQLGFBQXRDLEVBQXFEclAsU0FBckQ7Ozs7Ozs7Ozs7b0NBT2NnUCxLQXBDbEIsRUFvQ3lCUSxJQXBDekIsRUFvQytCO1VBQ3ZCLEtBQUtILGFBQUwsQ0FBbUJJLGVBQW5CLFlBQThDblUsUUFBbEQsRUFBNEQ7YUFDckQrVCxhQUFMLENBQW1CSSxlQUFuQixDQUFtQ1QsS0FBbkMsRUFBMENRLElBQTFDO09BREYsTUFFTztZQUNDaEIsVUFBVSxLQUFLYSxhQUFMLENBQW1CSyxpQkFBbkIsQ0FBcUNWLEtBQXJDLEVBQTRDLEtBQUtNLGdCQUFqRCxDQUFoQjtZQUNJLEVBQUVkLG1CQUFtQjFRLE9BQXJCLENBQUosRUFBbUM7Z0JBQzNCL0QsTUFBTSx5REFBTixDQUFOOzs7YUFHRyxFQUFDeVUsZ0JBQUQsRUFBTDs7Ozs7Ozs7OztpQ0FPUztVQUNMbUIsUUFBUSxLQUFLTixhQUFMLENBQW1CTyxVQUFuQixFQUFkO1VBQ0ksT0FBT0QsS0FBUCxLQUFpQixRQUFyQixFQUErQjtjQUN2QjVWLE1BQU0sb0NBQU4sQ0FBTjs7YUFFSzRWLEtBQVA7Ozs7Ozs7Ozs7OytCQVFTWCxLQWpFYixFQWlFb0JhLElBakVwQixFQWlFMEI7VUFDbEIsS0FBS1IsYUFBTCxDQUFtQlMsaUJBQW5CLFlBQWdEeFUsUUFBcEQsRUFBOEQ7YUFDdkQrVCxhQUFMLENBQW1CUyxpQkFBbkIsQ0FBcUNkLEtBQXJDLEVBQTRDYSxJQUE1Qzs7Ozs7Ozs7Ozt3Q0FPZ0JiLEtBMUV0QixFQTBFNkI7VUFDckIsS0FBS0ssYUFBTCxDQUFtQlUsbUJBQW5CLFlBQWtEelUsUUFBdEQsRUFBZ0U7WUFDeEQwVSxTQUFTLEtBQUtYLGFBQUwsQ0FBbUJVLG1CQUFuQixDQUF1Q2YsS0FBdkMsQ0FBZjs7WUFFSSxPQUFPZ0IsTUFBUCxLQUFrQixRQUF0QixFQUFnQztnQkFDeEJqVyxNQUFNLDZDQUFOLENBQU47OztlQUdLaVcsTUFBUDs7O2FBR0ssQ0FBUDs7Ozs7Ozs7OztnQ0FPVWhCLEtBNUZkLEVBNEZxQmEsSUE1RnJCLEVBNEYyQjtVQUNuQixLQUFLUixhQUFMLENBQW1CWSxXQUFuQixZQUEwQzNVLFFBQTlDLEVBQXdEO2FBQ2pEK1QsYUFBTCxDQUFtQlksV0FBbkIsQ0FBK0JqQixLQUEvQixFQUFzQ2EsSUFBdEM7Ozs7Ozs7Ozs7OEJBT007VUFDSixLQUFLUixhQUFMLENBQW1CYSxPQUFuQixZQUFzQzVVLFFBQTFDLEVBQW9EO2FBQzdDK1QsYUFBTCxDQUFtQmEsT0FBbkI7OztXQUdHYixhQUFMLEdBQXFCLEtBQUtDLGdCQUFMLEdBQXdCLElBQTdDOzs7O3dCQTVGZTthQUNSLEtBQUtELGFBQUwsQ0FBbUJjLFVBQTFCOzs7Ozs7Ozs7QUFrR0osSUFBYUMsa0JBQWI7Ozs7Ozs4QkFNY0MsY0FBWixFQUE0QkMsUUFBNUIsRUFBc0M7OztRQUNoQyxFQUFFQSxvQkFBb0JwQixrQkFBdEIsQ0FBSixFQUErQztZQUN2Q25WLE1BQU0saUVBQU4sQ0FBTjs7O1NBR0d3VyxlQUFMLEdBQXVCRixjQUF2QjtTQUNLRyxTQUFMLEdBQWlCRixRQUFqQjtTQUNLRyxZQUFMLEdBQXFCLEtBQUtGLGVBQUwsQ0FBcUJHLFFBQXJCLENBQThCLENBQTlCLEtBQW9DLEtBQUtILGVBQUwsQ0FBcUJHLFFBQXJCLENBQThCLENBQTlCLEVBQWlDQyxPQUFqQyxLQUE2QyxpQkFBbEYsR0FBdUcsQ0FBdkcsR0FBMkcsQ0FBL0g7O1FBRUlOLGVBQWVNLE9BQWYsQ0FBdUJwSyxXQUF2QixPQUF5QyxVQUE3QyxFQUF5RDtxQkFDeEMrSCxTQUFmLENBQXlCclcsR0FBekIsQ0FBNkIsV0FBN0I7OztTQUdHMlksWUFBTCxHQUFvQixLQUFLQyx1QkFBTCxDQUE2QlIsY0FBN0IsQ0FBcEI7O1FBRUksQ0FBQyxLQUFLTyxZQUFWLEVBQXdCO1lBQ2hCLElBQUk3VyxLQUFKLENBQVUsc0VBQVYsQ0FBTjs7O1NBR0crVyxhQUFMLEdBQXFCLEtBQUtGLFlBQUwsQ0FBa0JHLFNBQXZDO1NBQ0tDLE9BQUwsR0FBZSxDQUFmO1NBQ0tDLGFBQUwsR0FBcUIsQ0FBQyxDQUFELENBQXJCO1NBQ0tDLGNBQUwsR0FBc0IsRUFBdEI7O1FBRUksQ0FBQyxLQUFLVixTQUFMLENBQWVMLFVBQWhCLElBQThCLENBQUMsS0FBS0ssU0FBTCxDQUFlVCxtQkFBZixDQUFtQyxDQUFuQyxDQUFuQyxFQUEwRTtXQUNuRW9CLGtCQUFMLEdBQTBCLElBQTFCOzs7U0FHR0Msa0JBQUw7U0FDS0MsU0FBTDs7Ozs7NENBV3NCaEIsY0E5QzFCLEVBOEMwQztVQUNoQ2lCLGNBQWNyRSxLQUFLc0UsVUFBTCxDQUFnQmxCLGNBQWhCLEVBQWdDLGdCQUFoQyxDQUFwQjs7VUFFSWlCLFdBQUosRUFBaUI7ZUFDUkEsV0FBUDs7O1VBR0l6RyxPQUFPb0MsS0FBS3NFLFVBQUwsQ0FBZ0JsQixjQUFoQixFQUFnQyxVQUFoQyxDQUFiO1VBQ0l4RixJQUFKLEVBQVU7WUFDRnRKLFVBQVUwTCxLQUFLdUUsU0FBTCxDQUFlM0csSUFBZixFQUFxQixVQUFyQixDQUFoQjtZQUNJdEosT0FBSixFQUFhO2lCQUNKQSxPQUFQOzs7O2FBSUcsSUFBUDs7OztxQ0FHZXVJLFFBaEVuQixFQWdFNkI7OztXQUNwQjBHLFNBQUwsQ0FBZWYsZUFBZixDQUErQixDQUEvQixFQUFrQyxnQkFBUTtZQUNwQyxDQUFDLE1BQUswQixrQkFBVixFQUE4QjtnQkFDdEJwWCxNQUFNLGVBQU4sQ0FBTjs7O2NBR0d3VyxlQUFMLENBQXFCblQsV0FBckIsQ0FBaUN5UyxLQUFLckIsT0FBdEM7O1lBRU1nQixPQUFPLFNBQVBBLElBQU8sR0FBTTtnQkFDWmdCLFNBQUwsQ0FBZVAsV0FBZixDQUEyQixDQUEzQixFQUE4QkosSUFBOUI7Z0JBQ0tVLGVBQUwsQ0FBcUIvUyxXQUFyQixDQUFpQ3FTLEtBQUtyQixPQUF0QztpQkFDTyxNQUFLMkMsa0JBQVo7O1NBSEY7O2NBT0tNLFdBQUwsR0FBbUI1QixLQUFLckIsT0FBTCxDQUFha0QsWUFBaEM7O1lBRUksTUFBS0QsV0FBTCxHQUFtQixDQUF2QixFQUEwQjs7Ozs7OztZQU9wQkUsaUJBQWlCLE1BQUtwQixlQUFMLENBQXFCcUIsS0FBckIsQ0FBMkJDLFVBQWxEO2NBQ0t0QixlQUFMLENBQXFCcUIsS0FBckIsQ0FBMkJDLFVBQTNCLEdBQXdDLFFBQXhDO2FBQ0tyRCxPQUFMLENBQWFvRCxLQUFiLENBQW1CQyxVQUFuQixHQUFnQyxRQUFoQzs7cUJBRWEsWUFBTTtnQkFDWkosV0FBTCxHQUFtQjVCLEtBQUtyQixPQUFMLENBQWFrRCxZQUFoQztjQUNJLE1BQUtELFdBQUwsSUFBb0IsQ0FBeEIsRUFBMkI7a0JBQ25CMVgsTUFBTSw0REFBTixDQUFOOztnQkFFR3dXLGVBQUwsQ0FBcUJxQixLQUFyQixDQUEyQkMsVUFBM0IsR0FBd0NGLGNBQXhDOztTQUxGO09BM0JGOzs7O2tDQXlDWTthQUNMLEtBQUtuQixTQUFMLENBQWVaLFVBQWYsRUFBUDs7OzttQ0FHYXRWLENBOUdqQixFQThHb0I7O1VBRVosS0FBSzRXLGNBQUwsQ0FBb0I1TixjQUFwQixDQUFtQ2hKLENBQW5DLENBQUosRUFBMkM7WUFDckMsQ0FBQyxLQUFLNFcsY0FBTCxDQUFvQjVXLENBQXBCLEVBQXVCZ0osY0FBdkIsQ0FBc0MsUUFBdEMsQ0FBTCxFQUFzRDtlQUMvQzROLGNBQUwsQ0FBb0I1VyxDQUFwQixFQUF1QjBWLE1BQXZCLEdBQWdDLEtBQUtrQixjQUFMLENBQW9CNVcsQ0FBcEIsRUFBdUJrVSxPQUF2QixDQUErQmtELFlBQS9EOztlQUVLLEtBQUtSLGNBQUwsQ0FBb0I1VyxDQUFwQixFQUF1QjBWLE1BQTlCOzs7O1VBSUUsS0FBS2lCLGFBQUwsQ0FBbUIzVyxJQUFJLENBQXZCLEtBQTZCLEtBQUsyVyxhQUFMLENBQW1CM1csQ0FBbkIsQ0FBakMsRUFBd0Q7ZUFDL0MsS0FBSzJXLGFBQUwsQ0FBbUIzVyxJQUFJLENBQXZCLElBQTRCLEtBQUsyVyxhQUFMLENBQW1CM1csQ0FBbkIsQ0FBbkM7OzthQUdLLEtBQUt3WCxnQkFBTCxJQUF5QixLQUFLdEIsU0FBTCxDQUFlVCxtQkFBZixDQUFtQ3pWLENBQW5DLENBQWhDOzs7OytDQUd5Qjs7O2FBQ2xCc0IsT0FBT21TLElBQVAsQ0FBWSxLQUFLbUQsY0FBakIsRUFBaUNsRCxNQUFqQyxDQUF3QyxVQUFDdFgsQ0FBRCxFQUFJRCxDQUFKO2VBQVVDLElBQUksT0FBS3FiLGNBQUwsQ0FBb0IsQ0FBRXRiLENBQXRCLENBQWQ7T0FBeEMsRUFBaUYsQ0FBakYsQ0FBUDs7OztnQ0FHVTtXQUNMOFksT0FBTDs7Ozt3Q0FHa0I7YUFDWHpOLEtBQUtrUSxHQUFMLCtCQUFZcFcsT0FBT21TLElBQVAsQ0FBWSxLQUFLbUQsY0FBakIsQ0FBWixFQUFQOzs7O3lDQUdtQjthQUNacFAsS0FBS21RLEdBQUwsK0JBQVlyVyxPQUFPbVMsSUFBUCxDQUFZLEtBQUttRCxjQUFqQixDQUFaLEVBQVA7Ozs7OEJBR1E7VUFDRmdCLGdCQUFnQnBRLEtBQUttUSxHQUFMLENBQVMsS0FBS0UsaUJBQUwsRUFBVCxFQUFtQyxLQUFLQyxXQUFMLEtBQXFCLENBQXhELENBQXRCO1VBQ01DLGlCQUFpQixLQUFLQyxrQkFBTCxFQUF2QjtXQUNLL0IsZUFBTCxDQUFxQnFCLEtBQXJCLENBQTJCNUIsTUFBM0IsR0FBb0MsS0FBS2lCLGFBQUwsQ0FBbUJvQixjQUFuQixJQUFxQyxLQUFLRSx3QkFBTCxFQUFyQyxHQUF1RSxJQUEzRztXQUNLdkIsT0FBTCxHQUFlLEtBQUtDLGFBQUwsQ0FBbUJvQixjQUFuQixDQUFmO1dBQ0tHLGtCQUFMO1dBQ0tqRCxPQUFMLENBQWEsRUFBQ2tELGlCQUFpQixJQUFsQixFQUF3QkMsaUJBQWlCTCxjQUF6QyxFQUF5RE0sZ0JBQWdCVCxhQUF6RSxFQUFiO1dBQ0szQixlQUFMLENBQXFCcUIsS0FBckIsQ0FBMkI1QixNQUEzQixHQUFvQyxTQUFwQzs7Ozs4QkFHdUU7OztxRkFBSixFQUFJO3NDQUFoRXlDLGVBQWdFO1VBQWhFQSxlQUFnRSx3Q0FBOUMsS0FBOEM7VUFBdkNDLGVBQXVDLFFBQXZDQSxlQUF1QztVQUF0QkMsY0FBc0IsUUFBdEJBLGNBQXNCOztVQUNuRSxLQUFLeEIsa0JBQVQsRUFBNkI7ZUFDcEIsS0FBS3lCLGdCQUFMLENBQXNCLEtBQUtyRCxPQUFMLENBQWE3VSxJQUFiLENBQWtCLElBQWxCLEVBQXdCc0YsVUFBVSxDQUFWLENBQXhCLENBQXRCLENBQVA7OztVQUdJNlMsYUFBYSxDQUFDSixlQUFELElBQW9CLEtBQUszQixhQUFMLEdBQXFCLEtBQUtGLFlBQUwsQ0FBa0JHLFNBQTlFO1dBQ0tELGFBQUwsR0FBcUIsS0FBS0YsWUFBTCxDQUFrQkcsU0FBdkM7VUFDTStCLE9BQU8sRUFBYjs7VUFFTUMsU0FBUyxLQUFLeEMsZUFBTCxDQUFxQnlDLHFCQUFyQixHQUE2Q0MsR0FBNUQ7VUFDTUMsUUFBUSxJQUFJamQsT0FBT2tkLFdBQVgsR0FBeUJKLE1BQXZDO1VBQ01wRCxRQUFRLEtBQUt5QyxXQUFMLEVBQWQ7O1VBRU1nQixRQUFRLEVBQWQ7VUFDTUMsUUFBUVgsbUJBQW1CNVEsS0FBS2tRLEdBQUwsQ0FBUyxDQUFULEVBQVksS0FBS3NCLG9CQUFMLENBQTBCUCxNQUExQixJQUFvQyxFQUFoRCxDQUFqQztVQUNJelksSUFBSStZLEtBQVI7O1dBRUksSUFBSUosTUFBTSxLQUFLaEMsYUFBTCxDQUFtQjNXLENBQW5CLENBQWQsRUFBcUNBLElBQUlxVixLQUFKLElBQWFzRCxNQUFNQyxLQUF4RCxFQUErRDVZLEdBQS9ELEVBQW9FO1lBQzlEQSxLQUFLLEtBQUsyVyxhQUFMLENBQW1CalksTUFBNUIsRUFBb0M7O2VBQzdCaVksYUFBTCxDQUFtQmpZLE1BQW5CLElBQTZCLEdBQTdCOzs7YUFHR2lZLGFBQUwsQ0FBbUIzVyxDQUFuQixJQUF3QjJZLEdBQXhCO2VBQ08sS0FBS2xCLGNBQUwsQ0FBb0J6WCxDQUFwQixDQUFQOzs7VUFHRSxLQUFLa1csU0FBTCxDQUFlK0MsaUJBQWYsSUFBb0MsS0FBSy9DLFNBQUwsQ0FBZStDLGlCQUFmLEVBQXhDLEVBQTRFO2VBQ25FLEtBQUsvQyxTQUFMLENBQWVqQixPQUFmLENBQXVCOEQsS0FBdkIsRUFBOEIvWSxDQUE5QixFQUFpQyxZQUFNO2lCQUN2QzBXLE9BQUwsR0FBZSxPQUFLQyxhQUFMLENBQW1Cb0MsS0FBbkIsQ0FBZjtTQURLLENBQVA7OztVQUtFUixVQUFKLEVBQWdCO2FBQ1QsSUFBSTNTLElBQUk1RixJQUFJLENBQWpCLEVBQW9CNEYsS0FBS21ULEtBQXpCLEVBQWdDblQsR0FBaEMsRUFBcUM7ZUFDOUJBLENBQUwsSUFBVSxJQUFWO2VBQ0tzVCxjQUFMLENBQW9CdFQsQ0FBcEIsRUFBdUIyUyxVQUF2Qjs7T0FISixNQUtPO1lBQ0NZLFlBQVlkLGtCQUFrQjdRLEtBQUtrUSxHQUFMLGNBQVMxWCxJQUFJLENBQWIsMkJBQW1Cc0IsT0FBT21TLElBQVAsQ0FBWSxLQUFLbUQsY0FBakIsQ0FBbkIsR0FBcEM7YUFDSyxJQUFJaFIsS0FBSW1ULEtBQWIsRUFBb0JuVCxNQUFLdVQsU0FBekIsRUFBb0N2VCxJQUFwQyxFQUF5QztlQUNsQ0EsRUFBTCxJQUFVLElBQVY7ZUFDS3NULGNBQUwsQ0FBb0J0VCxFQUFwQixFQUF1QjJTLFVBQXZCOzs7O2FBSUc5RSxJQUFQLENBQVksS0FBS21ELGNBQWpCLEVBQWlDOUMsT0FBakMsQ0FBeUM7ZUFBTzBFLEtBQUsxUCxHQUFMLEtBQWEsT0FBS3NRLGNBQUwsQ0FBb0J0USxHQUFwQixFQUF5QnlQLFVBQXpCLENBQXBCO09BQXpDOzs7Ozs7Ozs7O21DQU9hN0QsS0E3TWpCLEVBNk13QjZELFVBN014QixFQTZNb0M7OztVQUMxQmhELE9BQU8sS0FBS3FCLGNBQUwsQ0FBb0JsQyxLQUFwQixDQUFiO1VBQ0lhLElBQUosRUFBVTthQUNIVyxTQUFMLENBQWVtRCxVQUFmLENBQTBCM0UsS0FBMUIsRUFBaUNhLElBQWpDLEVBRFE7Ozs7V0FLTFcsU0FBTCxDQUFlZixlQUFmLENBQStCVCxLQUEvQixFQUFzQyxnQkFBUTtZQUN4QzZELFVBQUosRUFBZ0I7aUJBQ1R0QyxlQUFMLENBQXFCalQsWUFBckIsQ0FBa0N1UyxLQUFLckIsT0FBdkMsRUFBZ0QsT0FBSytCLGVBQUwsQ0FBcUJHLFFBQXJCLENBQThCLE9BQUtELFlBQW5DLENBQWhEO2lCQUNLTyxPQUFMLEdBQWUsT0FBS0MsYUFBTCxDQUFtQmpDLEtBQW5CLENBQWY7ZUFDS2dCLE1BQUwsR0FBYyxPQUFLaUIsYUFBTCxDQUFtQmpDLFFBQVEsQ0FBM0IsSUFBZ0MsT0FBS2lDLGFBQUwsQ0FBbUJqQyxLQUFuQixDQUE5QztTQUhGLE1BSU87aUJBQ0F1QixlQUFMLENBQXFCblQsV0FBckIsQ0FBaUN5UyxLQUFLckIsT0FBdEM7OztlQUdHMEMsY0FBTCxDQUFvQmxDLEtBQXBCLElBQTZCYSxJQUE3QjtPQVRGOzs7Ozs7Ozs7O21DQWlCYWIsS0FyT2pCLEVBcU8yQztVQUFuQjZELFVBQW1CLHVFQUFOLElBQU07O2NBQy9CLENBQUU3RCxLQUFWO1VBQ01hLE9BQU8sS0FBS3FCLGNBQUwsQ0FBb0JsQyxLQUFwQixDQUFiO1dBQ0t3QixTQUFMLENBQWVQLFdBQWYsQ0FBMkJqQixLQUEzQixFQUFrQ2EsSUFBbEM7O1VBRUlnRCxVQUFKLEVBQWdCO2FBQ1Q1QixhQUFMLENBQW1CakMsUUFBUSxDQUEzQixJQUFnQ3JMLFNBQWhDO09BREYsTUFFTzthQUNBcU4sT0FBTCxHQUFlLEtBQUtBLE9BQUwsR0FBZSxLQUFLZSxjQUFMLENBQW9CL0MsS0FBcEIsQ0FBOUI7OztVQUdFYSxLQUFLckIsT0FBTCxDQUFhb0YsYUFBakIsRUFBZ0M7YUFDekJwRixPQUFMLENBQWFvRixhQUFiLENBQTJCcFcsV0FBM0IsQ0FBdUNxUyxLQUFLckIsT0FBNUM7OzthQUdLLEtBQUswQyxjQUFMLENBQW9CbEMsS0FBcEIsQ0FBUDs7Ozt5Q0FHbUI7OzthQUNaakIsSUFBUCxDQUFZLEtBQUttRCxjQUFqQixFQUFpQzlDLE9BQWpDLENBQXlDO2VBQU8sT0FBS3NGLGNBQUwsQ0FBb0J0USxHQUFwQixDQUFQO09BQXpDOzs7OzZDQUd1QmlRLEtBM1AzQixFQTJQa0NRLEdBM1BsQyxFQTJQdUM7V0FDOUIsSUFBSXZaLElBQUkrWSxLQUFiLEVBQW9CL1ksS0FBS3VaLEdBQXpCLEVBQThCdlosR0FBOUIsRUFBbUM7YUFDNUIyVyxhQUFMLENBQW1CM1csSUFBSSxDQUF2QixJQUE0QixLQUFLMlcsYUFBTCxDQUFtQjNXLENBQW5CLElBQXdCLEtBQUt5WCxjQUFMLENBQW9CelgsQ0FBcEIsQ0FBcEQ7Ozs7O3lDQUlpQnNULE9BalF2QixFQWlRZ0M7VUFDdEJ5RSxpQkFBaUIsS0FBS0Msa0JBQUwsRUFBdkI7VUFDTUosZ0JBQWdCLEtBQUtDLGlCQUFMLEVBQXRCOzs7V0FHSzJCLHdCQUFMLENBQThCekIsY0FBOUIsRUFBOENILGFBQTlDOztVQUVJbUIsUUFBUSxDQUFaO1VBQ0lRLE1BQU0sS0FBS3pCLFdBQUwsS0FBcUIsQ0FBL0I7OztlQUdTO1lBQ0QyQixTQUFTalMsS0FBS2tTLEtBQUwsQ0FBVyxDQUFDWCxRQUFRUSxHQUFULElBQWdCLENBQTNCLENBQWY7WUFDTW5TLFFBQVFrTSxVQUFVLEtBQUtxRCxhQUFMLENBQW1COEMsTUFBbkIsQ0FBeEI7O1lBRUlGLE1BQU1SLEtBQVYsRUFBaUI7aUJBQ1IsQ0FBUDtTQURGLE1BRU8sSUFBSTNSLFNBQVMsQ0FBVCxJQUFjQSxRQUFRLEtBQUtxUSxjQUFMLENBQW9CZ0MsTUFBcEIsQ0FBUixHQUFzQyxDQUF4RCxFQUEyRDtpQkFDekRBLE1BQVA7U0FESyxNQUVBLElBQUlFLE1BQU12UyxLQUFOLEtBQWdCQSxTQUFTLENBQTdCLEVBQWdDO2dCQUMvQnFTLFNBQVMsQ0FBZjtTQURLLE1BRUE7a0JBQ0dBLFNBQVMsQ0FBakI7Ozs7Ozs4QkFLSUcsSUE1UlosRUE0UmtCQyxJQTVSbEIsRUE0UndCQyxTQTVSeEIsRUE0Um1DO1VBQzNCQyxnQkFBSjthQUNPLFlBQVc7Ozs7WUFDVkMsVUFBVUYsYUFBYSxDQUFDQyxPQUE5QjtxQkFDYUEsT0FBYjtZQUNJQyxPQUFKLEVBQWE7ZUFDTm5VLEtBQUwsQ0FBVyxJQUFYLEVBQWlCSCxTQUFqQjtTQURGLE1BRU87b0JBQ0t1VSxXQUFXLFlBQU07c0JBQ2YsSUFBVjtpQkFDS3BVLEtBQUw7V0FGUSxFQUdQZ1UsSUFITyxDQUFWOztPQU5KOzs7OzRDQWNzQjtXQUNqQjVFLE9BQUw7V0FDS2lGLFNBQUwsQ0FBZSxLQUFLakYsT0FBTCxDQUFhN1UsSUFBYixDQUFrQixJQUFsQixDQUFmLEVBQXdDLEdBQXhDOzs7O3lDQUdtQjtXQUNkK1osYUFBTCxDQUFtQixJQUFuQixFQUF5QixDQUFDLFdBQUQsRUFBYyx1QkFBZCxDQUF6Qjs7VUFFSXBPLFNBQVNvQixLQUFULEVBQUosRUFBc0I7YUFDZmlOLGNBQUwsR0FBc0IsS0FBS0YsU0FBTCxDQUFlLEtBQUtFLGNBQXBCLEVBQW9DLEVBQXBDLENBQXRCOzs7V0FHRzlELFlBQUwsQ0FBa0JsWCxnQkFBbEIsQ0FBbUMsUUFBbkMsRUFBNkMsS0FBS2diLGNBQWxELEVBQWtFLElBQWxFOztVQUVJck8sU0FBU29CLEtBQVQsRUFBSixFQUFzQjthQUNmbUosWUFBTCxDQUFrQmxYLGdCQUFsQixDQUFtQyxXQUFuQyxFQUFnRCxLQUFLZ2IsY0FBckQsRUFBcUUsSUFBckU7YUFDSzlELFlBQUwsQ0FBa0JsWCxnQkFBbEIsQ0FBbUMsVUFBbkMsRUFBK0MsS0FBS2liLDBCQUFwRCxFQUFnRixJQUFoRjs7O2FBR0t0WixRQUFQLENBQWdCM0IsZ0JBQWhCLENBQWlDLFFBQWpDLEVBQTJDLEtBQUtnYixjQUFoRCxFQUFnRSxJQUFoRTs7Ozs0Q0FHc0I7V0FDakI5RCxZQUFMLENBQWtCM0csbUJBQWxCLENBQXNDLFFBQXRDLEVBQWdELEtBQUt5SyxjQUFyRCxFQUFxRSxJQUFyRTs7VUFFSXJPLFNBQVNvQixLQUFULEVBQUosRUFBc0I7YUFDZm1KLFlBQUwsQ0FBa0IzRyxtQkFBbEIsQ0FBc0MsV0FBdEMsRUFBbUQsS0FBS3lLLGNBQXhELEVBQXdFLElBQXhFO2FBQ0s5RCxZQUFMLENBQWtCM0csbUJBQWxCLENBQXNDLFVBQXRDLEVBQWtELEtBQUswSywwQkFBdkQsRUFBbUYsSUFBbkY7OzthQUdLdFosUUFBUCxDQUFnQjRPLG1CQUFoQixDQUFvQyxRQUFwQyxFQUE4QyxLQUFLeUssY0FBbkQsRUFBbUUsSUFBbkU7Ozs7OEJBR1E7V0FDSGxDLGtCQUFMO1dBQ0toQyxTQUFMLENBQWVOLE9BQWY7V0FDSzBFLGNBQUwsR0FBc0IsS0FBS3BFLFNBQUwsR0FBaUIsS0FBS1UsY0FBTCxHQUFzQixJQUE3RDtXQUNLMkQscUJBQUw7Ozs7d0JBM1NZO2FBQ0x6TixTQUFTLEtBQUttSixlQUFMLENBQXFCcUIsS0FBckIsQ0FBMkJrRCxVQUFwQyxFQUFnRCxFQUFoRCxDQUFQO0tBdkNKO3NCQTBDY0MsUUExQ2QsRUEwQ3dCO1dBQ2Z4RSxlQUFMLENBQXFCcUIsS0FBckIsQ0FBMkJrRCxVQUEzQixHQUF3Q0MsV0FBVyxJQUFuRDs7Ozt3QkE0RHFCO2FBQ2QsS0FBS3ZFLFNBQUwsQ0FBZUwsVUFBZixJQUE2QixLQUFLc0IsV0FBekM7Ozs7OztBQzdPSjs7Ozs7Ozs7Ozs7Ozs7OztBQWdCQSxBQUNBLEFBQ0EsQUFDQSxBQUVBbkksV0FBU3lDLGVBQVQsR0FBMkJBLGVBQTNCO0FBQ0F6QyxXQUFTb0UsWUFBVCxHQUF3QkEsWUFBeEI7QUFDQXBFLFdBQVM4RyxrQkFBVCxHQUE4QkEsa0JBQTlCO0FBQ0E5RyxXQUFTNEYsa0JBQVQsR0FBOEJBLGtCQUE5QixDQUVBOztBQzFCQTs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFpQkEsQUFDQSxBQUVBLElBQUk4RixtQkFBbUIsSUFBdkI7OztBQUdBLElBQU1DLGVBQWU7V0FDVixnQkFEVTtXQUVWLGdCQUZVO2FBR1IsZ0JBSFE7U0FJWixFQUpZO2tCQUtILHNCQUxHO2dCQU1MLE9BTks7Y0FPUCxFQVBPO2FBUVIsRUFSUTtjQVNQO0NBVGQ7O0FBWUEsSUFBTUMsWUFBWSxFQUFsQjs7QUFFQUEsVUFBVUMsT0FBVixHQUFvQixtQkFBVzs7TUFFekIsQ0FBQyxzQ0FBc0N2ZSxJQUF0QyxDQUEyQzRYLFFBQVFtQyxPQUFSLENBQWdCcEssV0FBaEIsRUFBM0MsQ0FBRCxJQUNGLENBQUMsV0FBVzNQLElBQVgsQ0FBZ0I0WCxRQUFRelcsWUFBUixDQUFxQixVQUFyQixDQUFoQixDQURILEVBQ3NEOztRQUU5Q3FkLGNBQWM1RyxRQUFRelcsWUFBUixDQUFxQixVQUFyQixLQUFvQyxFQUF4RDs7UUFFTXNkLGNBQWNELFlBQVk5TyxJQUFaLEdBQW1CL1AsS0FBbkIsQ0FBeUIsS0FBekIsRUFBZ0NxUyxHQUFoQyxDQUFvQzthQUFLcU0sYUFBYTNSLGNBQWIsQ0FBNEIvTCxDQUE1QixJQUFpQzBkLGFBQWExZCxDQUFiLENBQWpDLEdBQW1EQSxDQUF4RDtLQUFwQyxDQUFwQjtnQkFDWStkLE9BQVosQ0FBb0IsVUFBcEI7O1lBRVFuWCxZQUFSLENBQXFCLFVBQXJCLEVBQWlDa1gsWUFBWXJVLElBQVosQ0FBaUIsR0FBakIsRUFBc0JzRixJQUF0QixFQUFqQzs7OztNQUlFLDJEQUEyRDFQLElBQTNELENBQWdFNFgsUUFBUW1DLE9BQVIsQ0FBZ0JwSyxXQUFoQixFQUFoRSxLQUNDLENBQUNpSSxRQUFRTyxZQUFSLENBQXFCLFFBQXJCLENBREYsSUFFQyxDQUFDUCxRQUFRK0csYUFBUixDQUFzQixZQUF0QixDQUZOLEVBRTJDOztRQUVyQy9HLFFBQVFtQyxPQUFSLENBQWdCcEssV0FBaEIsT0FBa0MsZUFBdEMsRUFBdUQ7VUFDakRpSSxRQUFRTyxZQUFSLENBQXFCLFVBQXJCLENBQUosRUFBc0M7Z0JBQzVCNVEsWUFBUixDQUFxQixRQUFyQixFQUErQixFQUEvQjtnQkFDUUUsZUFBUixDQUF3QixVQUF4Qjs7S0FISixNQUtPO2NBQ0dGLFlBQVIsQ0FBcUIsUUFBckIsRUFBK0IsRUFBL0I7OztDQXhCTjs7QUE2QkErVyxVQUFVTSxHQUFWLEdBQWdCLG1CQUFXOzs7TUFHdEIsV0FBVzVlLElBQVgsQ0FBZ0I0WCxRQUFRelcsWUFBUixDQUFxQixVQUFyQixDQUFoQixDQUFKLEVBQXVEO1NBQ2hEMGQsY0FBTCxDQUFvQmpILE9BQXBCLEVBQTZCLFVBQTdCOztRQUVJdkIsS0FBS3dJLGNBQUwsQ0FBb0JqSCxPQUFwQixFQUE2QixnQkFBN0IsQ0FBSixFQUFvRDtXQUM3Q2tILFdBQUwsQ0FBaUJsSCxPQUFqQixFQUEyQnZCLEtBQUt3SSxjQUFMLENBQW9CakgsT0FBcEIsRUFBNkIsT0FBN0IsQ0FBRCxHQUEwQyxjQUExQyxHQUEyRCxPQUFyRjs7O1FBR0UsQ0FBQ0EsUUFBUXpXLFlBQVIsQ0FBcUIsVUFBckIsQ0FBTCxFQUF1QztjQUM3QnNHLGVBQVIsQ0FBd0IsVUFBeEI7Ozs7O01BS0FtUSxRQUFRTyxZQUFSLENBQXFCLFFBQXJCLENBQUosRUFBb0M7UUFDOUJQLFFBQVFtQyxPQUFSLENBQWdCcEssV0FBaEIsT0FBa0MsZUFBdEMsRUFBdUQ7Y0FDN0NwSSxZQUFSLENBQXFCLFVBQXJCLEVBQWlDLEVBQWpDOzs7WUFHTUUsZUFBUixDQUF3QixRQUF4Qjs7Q0FyQkg7O0FBeUJBLElBQU1zWCxXQUFXO1dBQ047Q0FEWDs7QUFJQSxJQUFNQyxtQkFBbUIsU0FBbkJBLGdCQUFtQixDQUFDcEgsT0FBRCxFQUFVcUgsS0FBVixFQUFvQjtNQUN2Q2Isb0JBQW9CLENBQUN4RyxRQUFRTyxZQUFSLENBQXFCLHNCQUFyQixDQUF6QixFQUF1RTtRQUMvRCtHLFdBQVdDLFNBQVk1TSxXQUFaLEVBQWpCO1FBQ0krTCxVQUFVNVIsY0FBVixDQUF5QndTLFFBQXpCLE1BQXVDSCxTQUFTclMsY0FBVCxDQUF3QndTLFFBQXhCLEtBQXFDRCxLQUE1RSxDQUFKLEVBQXdGO2dCQUM1RUMsUUFBVixFQUFvQnRILE9BQXBCOzs7Q0FKTjs7QUFTQSxJQUFNd0gsY0FBYyxTQUFkQSxXQUFjLENBQUM5SCxRQUFELEVBQVdNLE9BQVgsRUFBb0JxSCxLQUFwQixFQUE4QjtNQUM1Q2Isb0JBQW9CLENBQUN4RyxRQUFRTyxZQUFSLENBQXFCLHNCQUFyQixDQUF6QixFQUF1RTtRQUMvRCtHLFdBQVdDLFNBQVk1TSxXQUFaLEVBQWpCO1FBQ0krTCxVQUFVNVIsY0FBVixDQUF5QndTLFFBQXpCLE1BQXVDSCxTQUFTclMsY0FBVCxDQUF3QndTLFFBQXhCLEtBQXFDRCxLQUE1RSxDQUFKLEVBQXdGO2FBQy9FWixhQUFhM1IsY0FBYixDQUE0QjRLLFFBQTVCLElBQXdDK0csYUFBYS9HLFFBQWIsQ0FBeEMsR0FBaUVBLFFBQXhFOzs7O1NBSUdBLFFBQVA7Q0FSRjs7QUFXQSxnQkFBZTthQUNGO1dBQU04RyxnQkFBTjtHQURFO1VBRUw7V0FBTUEsbUJBQW1CLElBQXpCO0dBRks7V0FHSjtXQUFNQSxtQkFBbUIsS0FBekI7R0FISTtXQUlKWSxnQkFKSTs7Q0FBZjs7QUNuSEE7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBaUJBLEFBRUEsSUFBTUssU0FBUyxTQUFUQSxNQUFTO1NBQVVDLE9BQU9yVixLQUFQLENBQWEsQ0FBYixFQUFnQixDQUFDLENBQWpCLENBQVY7Q0FBZjtBQUNBLElBQU1zVixpQkFBaUIsU0FBakJBLGNBQWlCO1NBQVVELE9BQU9FLFVBQVAsQ0FBa0IsR0FBbEIsS0FBMEJGLE9BQU9HLFFBQVAsQ0FBZ0IsR0FBaEIsQ0FBcEM7Q0FBdkI7QUFDQSxJQUFNQyxnQkFBZ0IsU0FBaEJBLGFBQWdCO1NBQVVKLE9BQU9FLFVBQVAsQ0FBa0IsR0FBbEIsS0FBMEJGLE9BQU9HLFFBQVAsQ0FBZ0IsR0FBaEIsQ0FBcEM7Q0FBdEI7QUFDQSxJQUFNRSxpQkFBaUIsU0FBakJBLGNBQWlCO1NBQVdMLE9BQU9FLFVBQVAsQ0FBa0IsSUFBbEIsS0FBMkJGLE9BQU9HLFFBQVAsQ0FBZ0IsSUFBaEIsQ0FBNUIsSUFBdURILE9BQU9FLFVBQVAsQ0FBa0IsR0FBbEIsS0FBMEJGLE9BQU9HLFFBQVAsQ0FBZ0IsR0FBaEIsQ0FBM0Y7Q0FBdkI7O0FBRUEsSUFBTXZLLFVBQVEsU0FBUkEsT0FBUSxDQUFDeEQsS0FBRCxFQUFRNE4sTUFBUixFQUFnQk0sY0FBaEIsRUFBbUM7UUFDekMsSUFBSXpjLEtBQUosQ0FBVSx3QkFBd0J1TyxLQUF4QixHQUFnQyxpQkFBaEMsSUFBcURrTyxlQUFleGQsTUFBZixHQUF3QmtkLE9BQU9sZCxNQUEvQixHQUF3QyxDQUE3RixJQUFrRyxnQkFBbEcsR0FBcUh3ZCxjQUFySCxHQUFzSSxJQUFoSixDQUFOO0NBREY7O0FBSUEsSUFBTUMsZUFBZSxTQUFmQSxZQUFlLENBQUNuTyxLQUFELEVBQVE0TixNQUFSLEVBQWdCTSxjQUFoQixFQUFtQztNQUNsRGxPLFVBQVUsTUFBVixJQUFvQkEsVUFBVSxPQUFsQyxFQUEyQztXQUNsQ0EsVUFBVSxNQUFqQjtHQURGLE1BRU8sSUFBSWlPLGVBQWVqTyxLQUFmLENBQUosRUFBMkI7V0FDekIyTixPQUFPM04sS0FBUCxDQUFQO0dBREssTUFFQSxJQUFJLENBQUMyTCxNQUFNM0wsS0FBTixDQUFMLEVBQW1CO1dBQ2pCLENBQUVBLEtBQVQ7R0FESyxNQUVBLElBQUk2TixlQUFlN04sS0FBZixDQUFKLEVBQTJCO1dBQ3pCb08sWUFBWVQsT0FBTzNOLEtBQVAsQ0FBWixDQUFQO0dBREssTUFFQSxJQUFJZ08sY0FBY2hPLEtBQWQsQ0FBSixFQUEwQjtXQUN4QnFPLFdBQVdWLE9BQU8zTixLQUFQLENBQVgsQ0FBUDtHQURLLE1BRUE7WUFDQ0EsS0FBTixFQUFhNE4sTUFBYixFQUFxQk0sY0FBckI7O0NBWko7O0FBZ0JBLElBQU1JLFlBQVksU0FBWkEsU0FBWSxDQUFDVixNQUFELEVBQVk7V0FDbkJBLE9BQU9XLFFBQVAsRUFBVDtNQUNJM0QsUUFBUWdELE9BQU9sZCxNQUFuQjs7TUFFSWtkLE9BQU8sQ0FBUCxNQUFjLEdBQWQsSUFBcUJBLE9BQU8sQ0FBUCxNQUFjLEdBQXZDLEVBQTRDOztZQUVsQyxDQUFSO0dBRkYsTUFJTyxJQUFJQSxPQUFPLENBQVAsTUFBYyxHQUFkLElBQXFCQSxPQUFPLENBQVAsTUFBYyxHQUF2QyxFQUE0Qzs7UUFFM0MxZSxJQUFJMGUsT0FBT1ksVUFBUCxDQUFrQixDQUFsQixDQUFWO1FBQ0lDLGVBQWUsQ0FBbkI7U0FDSyxJQUFJemMsSUFBSSxDQUFiLEVBQWdCQSxJQUFJNGIsT0FBT2xkLE1BQTNCLEVBQW1Dc0IsR0FBbkMsRUFBd0M7VUFDbEM0YixPQUFPWSxVQUFQLENBQWtCeGMsQ0FBbEIsTUFBeUI5QyxDQUE3QixFQUFnQzs7T0FBaEMsTUFFTyxJQUFJMGUsT0FBT1ksVUFBUCxDQUFrQnhjLENBQWxCLE1BQXlCOUMsSUFBSSxDQUFqQyxFQUFvQzs7WUFFckN1ZixpQkFBaUIsQ0FBckIsRUFBd0I7a0JBQ2R6YyxJQUFJLENBQVo7Ozs7O0dBVkQsTUFnQkEsSUFBSTRiLE9BQU8sQ0FBUCxNQUFjLElBQWQsSUFBc0JBLE9BQU8sQ0FBUCxNQUFjLElBQXhDLEVBQThDOztTQUU5QyxJQUFJNWIsS0FBSSxDQUFiLEVBQWdCQSxLQUFJNGIsT0FBT2xkLE1BQTNCLEVBQW1Dc0IsSUFBbkMsRUFBd0M7VUFDbEM0YixPQUFPNWIsRUFBUCxNQUFjNGIsT0FBTyxDQUFQLENBQWxCLEVBQTZCO2dCQUNuQjViLEtBQUksQ0FBWjs7OztHQUpDLE1BU0E7O1NBRUEsSUFBSUEsTUFBSSxDQUFiLEVBQWdCQSxNQUFJNGIsT0FBT2xkLE1BQTNCLEVBQW1Dc0IsS0FBbkMsRUFBd0M7VUFDbEMsQ0FBQyxHQUFELEVBQU0sR0FBTixFQUFXLEdBQVgsRUFBZ0JDLE9BQWhCLENBQXdCMmIsT0FBTzViLEdBQVAsQ0FBeEIsTUFBdUMsQ0FBQyxDQUE1QyxFQUErQztnQkFDckNBLEdBQVI7Ozs7OztTQU9DNGIsT0FBT3JWLEtBQVAsQ0FBYSxDQUFiLEVBQWdCcVMsS0FBaEIsQ0FBUDtDQTVDRjs7QUErQ0EsSUFBTXdELGNBQWMsU0FBZEEsV0FBYyxDQUFDUixNQUFELEVBQVk7TUFDeEJjLGFBQWEsU0FBYkEsVUFBYTtXQUFPLDJCQUEwQnBnQixJQUExQixDQUErQndNLEdBQS9COztHQUExQjs7V0FFUzhTLE9BQU81UCxJQUFQLEVBQVQ7TUFDTWtRLGlCQUFpQk4sTUFBdkI7TUFDTS9TLFNBQVMsRUFBZjtNQUNJOFQsYUFBYSxJQUFqQjtNQUF1QjdULFlBQXZCO01BQTRCOFQsc0JBQTVCO01BQTJDNU8sY0FBM0M7O1NBRU00TixPQUFPbGQsTUFBUCxHQUFnQixDQUF0QixFQUF5QjtvQkFDUHNQLEtBQWhCO1lBQ1FzTyxVQUFVVixNQUFWLENBQVI7YUFDU0EsT0FBT3JWLEtBQVAsQ0FBYXlILE1BQU10UCxNQUFuQixFQUEyQmtkLE9BQU9sZCxNQUFsQyxFQUEwQzZkLFFBQTFDLEVBQVQ7O1FBRUt2TyxVQUFVLEdBQVYsS0FBa0IsQ0FBQzJPLFVBQUQsSUFBZSxDQUFDQyxhQUFoQixJQUFpQ0Esa0JBQWtCLEdBQXJFLENBQUQsSUFDRzVPLFVBQVUsR0FBVixJQUFpQjJPLFVBRHBCLElBRUczTyxVQUFVLEdBQVYsSUFBaUJBLFVBQVUsR0FBM0IsSUFBbUM0TyxpQkFBaUJBLGtCQUFrQixHQUFuQyxJQUEwQ0Esa0JBQWtCLEdBRnRHLEVBRTZHO2NBQ3JHNU8sS0FBTixFQUFhNE4sTUFBYixFQUFxQk0sY0FBckI7S0FIRixNQUlPLElBQUlsTyxVQUFVLEdBQVYsSUFBaUIyTyxVQUFqQixJQUErQkMsYUFBbkMsRUFBa0Q7VUFDbkRGLFdBQVdFLGFBQVgsQ0FBSixFQUErQjtjQUN2QkEsYUFBTjtxQkFDYSxLQUFiO09BRkYsTUFHTztjQUNDLElBQUluZCxLQUFKLENBQVUseUJBQXlCbWQsYUFBekIsR0FBeUMsZ0NBQXpDLEdBQTRFVixjQUE1RSxHQUE2RixJQUF2RyxDQUFOOztLQUxHLE1BT0EsSUFBSWxPLFVBQVUsR0FBVixJQUFpQixDQUFDMk8sVUFBbEIsSUFBZ0NDLGFBQXBDLEVBQW1EO2FBQ2pEOVQsR0FBUCxJQUFjcVQsYUFBYVMsYUFBYixFQUE0QmhCLE1BQTVCLEVBQW9DTSxjQUFwQyxDQUFkO21CQUNhLElBQWI7Ozs7TUFJQWxPLEtBQUosRUFBVztXQUNGbEYsR0FBUCxJQUFjcVQsYUFBYW5PLEtBQWIsRUFBb0I0TixNQUFwQixFQUE0Qk0sY0FBNUIsQ0FBZDs7O1NBR0tyVCxNQUFQO0NBbENGOztBQXFDQSxJQUFNd1QsYUFBYSxTQUFiQSxVQUFhLENBQUNULE1BQUQsRUFBWTtXQUNwQkEsT0FBTzVQLElBQVAsRUFBVDtNQUNNa1EsaUJBQWlCTixNQUF2QjtNQUNNaUIsUUFBUSxFQUFkO01BQ0lELHNCQUFKO01BQW1CNU8sY0FBbkI7O1NBRU00TixPQUFPbGQsTUFBUCxHQUFnQixDQUF0QixFQUF5QjtvQkFDUHNQLEtBQWhCO1lBQ1FzTyxVQUFVVixNQUFWLENBQVI7YUFDU0EsT0FBT3JWLEtBQVAsQ0FBYXlILE1BQU10UCxNQUFuQixFQUEyQmtkLE9BQU9sZCxNQUFsQyxFQUEwQzZkLFFBQTFDLEVBQVQ7O1FBRUl2TyxVQUFVLEdBQVYsS0FBa0IsQ0FBQzRPLGFBQUQsSUFBa0JBLGtCQUFrQixHQUF0RCxDQUFKLEVBQWdFO2NBQ3hENU8sS0FBTixFQUFhNE4sTUFBYixFQUFxQk0sY0FBckI7S0FERixNQUVPLElBQUlsTyxVQUFVLEdBQWQsRUFBbUI7WUFDbEIxUCxJQUFOLENBQVc2ZCxhQUFhUyxhQUFiLEVBQTRCaEIsTUFBNUIsRUFBb0NNLGNBQXBDLENBQVg7Ozs7TUFJQWxPLEtBQUosRUFBVztRQUNMQSxVQUFVLEdBQWQsRUFBbUI7WUFDWDFQLElBQU4sQ0FBVzZkLGFBQWFuTyxLQUFiLEVBQW9CNE4sTUFBcEIsRUFBNEJNLGNBQTVCLENBQVg7S0FERixNQUVPO2NBQ0NsTyxLQUFOLEVBQWE0TixNQUFiLEVBQXFCTSxjQUFyQjs7OztTQUlHVyxLQUFQO0NBMUJGOztBQTZCQSxJQUFNQyxRQUFRLFNBQVJBLEtBQVEsQ0FBQ2xCLE1BQUQsRUFBWTtXQUNmQSxPQUFPNVAsSUFBUCxFQUFUOztNQUVJNlAsZUFBZUQsTUFBZixDQUFKLEVBQTRCO1dBQ25CUSxZQUFZVCxPQUFPQyxNQUFQLENBQVosQ0FBUDtHQURGLE1BRU8sSUFBSUksY0FBY0osTUFBZCxDQUFKLEVBQTJCO1dBQ3pCUyxXQUFXVixPQUFPQyxNQUFQLENBQVgsQ0FBUDtHQURLLE1BRUE7VUFDQyxJQUFJbmMsS0FBSixDQUFVLG1EQUFtRG1jLE1BQTdELENBQU47O0NBUkosQ0FZQTs7QUN6S0E7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBaUJBLEFBQ0EsQUFDQSxBQUVBLElBQU1qSixPQUFPLEVBQWI7Ozs7OztBQU1BQSxLQUFLb0ssWUFBTCxHQUFvQixVQUFDNU0sS0FBRCxFQUFXO1NBQ3RCQSxpQkFBaUJuUCxRQUFqQixHQUE0Qm1QLEtBQTVCLEdBQW9DLFVBQUMrRCxPQUFEO1dBQWF2QixLQUFLM0YsS0FBTCxDQUFXa0gsT0FBWCxFQUFvQi9ELEtBQXBCLENBQWI7R0FBM0M7Q0FERjs7Ozs7OztBQVNBd0MsS0FBSzNGLEtBQUwsR0FBYSxVQUFDL1AsQ0FBRCxFQUFJeUUsQ0FBSjtTQUFVLENBQUN6RSxFQUFFK2YsT0FBRixJQUFhL2YsRUFBRWdnQixxQkFBZixJQUF3Q2hnQixFQUFFaWdCLGtCQUExQyxJQUFnRWpnQixFQUFFa2dCLGlCQUFuRSxFQUFzRnBkLElBQXRGLENBQTJGOUMsQ0FBM0YsRUFBOEZ5RSxDQUE5RixDQUFWO0NBQWI7Ozs7Ozs7QUFPQWlSLEtBQUt1RSxTQUFMLEdBQWlCLFVBQUNoRCxPQUFELEVBQVUvRCxLQUFWLEVBQW9CO01BQzdCbkQsUUFBUTJGLEtBQUtvSyxZQUFMLENBQWtCNU0sS0FBbEIsQ0FBZDs7O09BR0ssSUFBSW5RLElBQUksQ0FBYixFQUFnQkEsSUFBSWtVLFFBQVE5TixVQUFSLENBQW1CMUgsTUFBdkMsRUFBK0NzQixHQUEvQyxFQUFvRDtRQUM1Q29kLE9BQU9sSixRQUFROU4sVUFBUixDQUFtQnBHLENBQW5CLENBQWI7UUFDSW9kLEtBQUtqZ0IsUUFBTCxLQUFrQkMsS0FBS0MsWUFBM0IsRUFBeUM7Ozs7UUFHckMyUCxNQUFNb1EsSUFBTixDQUFKLEVBQWlCO2FBQ1JBLElBQVA7OztTQUdHLElBQVA7Q0FiRjs7Ozs7OztBQXFCQXpLLEtBQUtzRSxVQUFMLEdBQWtCLFVBQUMvQyxPQUFELEVBQVUvRCxLQUFWLEVBQW9CO01BQzlCbkQsUUFBUTJGLEtBQUtvSyxZQUFMLENBQWtCNU0sS0FBbEIsQ0FBZDs7TUFFSWtOLFNBQVNuSixRQUFRdlgsVUFBckI7V0FDUztRQUNILENBQUMwZ0IsTUFBRCxJQUFXQSxXQUFXdGMsUUFBMUIsRUFBb0M7YUFDM0IsSUFBUDs7UUFFRWlNLE1BQU1xUSxNQUFOLENBQUosRUFBbUI7YUFDVkEsTUFBUDs7YUFFT0EsT0FBTzFnQixVQUFoQjs7Q0FYSjs7Ozs7O0FBbUJBZ1csS0FBSzJLLFVBQUwsR0FBa0IsVUFBQ3BKLE9BQUQsRUFBYTtTQUN0Qm5ULFNBQVN3YyxlQUFULEtBQTZCckosT0FBcEMsRUFBNkM7UUFDdkMsQ0FBQ0EsT0FBTCxFQUFjO2FBQ0wsS0FBUDs7Y0FFUUEsUUFBUXZYLFVBQWxCOztTQUVLLElBQVA7Q0FQRjs7Ozs7O0FBY0FnVyxLQUFLNkssdUJBQUwsR0FBK0IsVUFBQ3RKLE9BQUQsRUFBYTtTQUNuQ0EsV0FBV25ULFNBQVN3YyxlQUFULEtBQTZCckosT0FBL0MsRUFBd0Q7Y0FDNUNBLFFBQVF2WCxVQUFsQjtRQUNJdVgsV0FBV0EsUUFBUWxFLFFBQVIsQ0FBaUIvRCxXQUFqQixHQUErQmUsS0FBL0IsQ0FBcUMsc0VBQXJDLENBQWYsRUFBNkg7YUFDcEgsSUFBUDs7O1NBR0csS0FBUDtDQVBGOzs7Ozs7QUFjQTJGLEtBQUs4SyxlQUFMLEdBQXVCLFVBQUN2SixPQUFELEVBQVV3SixNQUFWLEVBQXFCO09BQ3JDLElBQUkxZCxJQUFJLENBQWIsRUFBZ0JBLElBQUlrVSxRQUFROU4sVUFBUixDQUFtQjFILE1BQXZDLEVBQStDc0IsR0FBL0MsRUFBb0Q7UUFDNUMyZCxRQUFRekosUUFBUTlOLFVBQVIsQ0FBbUJwRyxDQUFuQixDQUFkO1FBQ0kyZCxNQUFNRCxNQUFOLGFBQXlCMWMsUUFBN0IsRUFBdUM7WUFDL0IwYyxNQUFOO0tBREYsTUFFTztXQUNBRCxlQUFMLENBQXFCRSxLQUFyQixFQUE0QkQsTUFBNUI7OztDQU5OOzs7Ozs7O0FBaUJBL0ssS0FBS2lMLE1BQUwsR0FBYyxZQUErQjtNQUE5QnhKLFFBQThCLHVFQUFuQixFQUFtQjtNQUFma0QsS0FBZSx1RUFBUCxFQUFPOztNQUNyQ3RELFlBQVlJLFNBQVNuWSxLQUFULENBQWUsR0FBZixDQUFsQjtNQUNNaVksVUFBVW5ULFNBQVNtQixhQUFULENBQXVCOFIsVUFBVXZTLEtBQVYsTUFBcUIsS0FBNUMsQ0FBaEI7O01BRUl1UyxVQUFVdFYsTUFBZCxFQUFzQjtZQUNabWYsU0FBUixHQUFvQjdKLFVBQVV0TixJQUFWLENBQWUsR0FBZixDQUFwQjs7O09BR0drTSxNQUFMLENBQVlzQixRQUFRb0QsS0FBcEIsRUFBMkJBLEtBQTNCOztTQUVPcEQsT0FBUDtDQVZGOzs7Ozs7QUFpQkF2QixLQUFLelEsYUFBTCxHQUFxQixVQUFDb04sSUFBRCxFQUFVO01BQ3ZCd08sVUFBVS9jLFNBQVNtQixhQUFULENBQXVCLEtBQXZCLENBQWhCO1VBQ1E4RSxTQUFSLEdBQW9Cc0ksSUFBcEI7O01BRUl3TyxRQUFRMUgsUUFBUixDQUFpQjFYLE1BQWpCLEdBQTBCLENBQTlCLEVBQWlDO1VBQ3pCLElBQUllLEtBQUosQ0FBVSxxQ0FBVixDQUFOOzs7U0FHS3FlLFFBQVExSCxRQUFSLENBQWlCLENBQWpCLENBQVA7Q0FSRjs7Ozs7O0FBZUF6RCxLQUFLb0wsY0FBTCxHQUFzQixVQUFDek8sSUFBRCxFQUFVO01BQ3hCd08sVUFBVS9jLFNBQVNtQixhQUFULENBQXVCLEtBQXZCLENBQWhCO1VBQ1E4RSxTQUFSLEdBQW9Cc0ksSUFBcEI7TUFDTTBPLFdBQVdqZCxTQUFTa2Qsc0JBQVQsRUFBakI7O1NBRU9ILFFBQVFsZ0IsVUFBZixFQUEyQjthQUNoQmtGLFdBQVQsQ0FBcUJnYixRQUFRbGdCLFVBQTdCOzs7U0FHS29nQixRQUFQO0NBVEY7Ozs7Ozs7QUFpQkFyTCxLQUFLQyxNQUFMLEdBQWMsVUFBQ3NMLEdBQUQsRUFBa0I7b0NBQVRDLElBQVM7UUFBQTs7O09BQ3pCLElBQUluZSxJQUFJLENBQWIsRUFBZ0JBLElBQUltZSxLQUFLemYsTUFBekIsRUFBaUNzQixHQUFqQyxFQUFzQztRQUNoQ21lLEtBQUtuZSxDQUFMLENBQUosRUFBYTtVQUNMeVQsT0FBT25TLE9BQU9tUyxJQUFQLENBQVkwSyxLQUFLbmUsQ0FBTCxDQUFaLENBQWI7V0FDSyxJQUFJNEYsSUFBSSxDQUFiLEVBQWdCQSxJQUFJNk4sS0FBSy9VLE1BQXpCLEVBQWlDa0gsR0FBakMsRUFBc0M7WUFDOUJrRCxNQUFNMkssS0FBSzdOLENBQUwsQ0FBWjtZQUNJa0QsR0FBSixJQUFXcVYsS0FBS25lLENBQUwsRUFBUThJLEdBQVIsQ0FBWDs7Ozs7U0FLQ29WLEdBQVA7Q0FYRjs7Ozs7O0FBa0JBdkwsS0FBS3lMLFNBQUwsR0FBaUIsVUFBQ0MsU0FBRCxFQUFlO1NBQ3ZCaFksTUFBTXZHLFNBQU4sQ0FBZ0J5RyxLQUFoQixDQUFzQlYsS0FBdEIsQ0FBNEJ3WSxTQUE1QixDQUFQO0NBREY7Ozs7Ozs7QUFTQTFMLEtBQUsyTCxxQkFBTCxHQUE2QixVQUFDckwsVUFBRCxFQUErQjtNQUFsQnNMLFFBQWtCLHVFQUFQLEVBQU87O01BQ3REO1FBQ0lyTCxTQUFTc0wsS0FBSzFCLEtBQUwsQ0FBVyxLQUFLN0osVUFBaEIsQ0FBZjtRQUNJLFFBQU9DLE1BQVAseUNBQU9BLE1BQVAsT0FBa0IsUUFBbEIsSUFBOEJBLFdBQVcsSUFBN0MsRUFBbUQ7YUFDMUNBLE1BQVA7O0dBSEosQ0FLRSxPQUFNalcsQ0FBTixFQUFTO1dBQ0ZzaEIsUUFBUDs7U0FFS0EsUUFBUDtDQVRGOzs7Ozs7QUFnQkE1TCxLQUFLOEwsWUFBTCxHQUFvQixVQUFDQyxJQUFELEVBQVU7U0FDckJBLEtBQUt6aUIsS0FBTCxDQUFXLEdBQVgsQ0FBUDtNQUNJMGlCLEtBQUtoakIsTUFBVDtNQUFpQm1OLEdBQWpCO1NBQ09BLE1BQU00VixLQUFLamQsS0FBTCxFQUFiLEVBQTJCOztTQUNwQmtkLEdBQUc3VixHQUFILENBQUw7O1NBRUs2VixFQUFQO0NBTkY7Ozs7OztBQWFBaE0sS0FBS2lNLFVBQUwsR0FBa0I7U0FBYUMsY0FBY0EsVUFBVXhJLE9BQVYsQ0FBa0JwSyxXQUFsQixPQUFvQyxVQUFwQyxHQUFpRDRTLFNBQWpELEdBQTZEQSxVQUFVQyxPQUFyRixLQUFpRyxJQUE5RztDQUFsQjs7Ozs7O0FBTUFuTSxLQUFLb00sZUFBTCxHQUF1QixxQkFBYTtNQUM1QnhPLE9BQU9vQyxLQUFLaU0sVUFBTCxDQUFnQkMsU0FBaEIsQ0FBYjs7TUFFSXRPLElBQUosRUFBVTtRQUNKb0MsS0FBS3VFLFNBQUwsQ0FBZTNHLElBQWYsRUFBcUIsYUFBckIsQ0FBSixFQUF5QzthQUNoQ0EsSUFBUDs7O1NBR0csSUFBSXZRLElBQUksQ0FBYixFQUFnQkEsSUFBSXVRLEtBQUt5TyxlQUFMLENBQXFCNUksUUFBckIsQ0FBOEIxWCxNQUFsRCxFQUEwRHNCLEdBQTFELEVBQStEO1VBQ3ZEaWYsV0FBV3RNLEtBQUtpTSxVQUFMLENBQWdCck8sS0FBS3lPLGVBQUwsQ0FBcUI1SSxRQUFyQixDQUE4QnBXLENBQTlCLENBQWhCLENBQWpCO1VBQ0lpZixRQUFKLEVBQWM7ZUFDTHRNLEtBQUtvTSxlQUFMLENBQXFCRSxRQUFyQixDQUFQOzs7OztTQUtDLElBQVA7Q0FoQkY7Ozs7Ozs7O0FBeUJBdE0sS0FBS3VNLG1CQUFMLEdBQTJCLFVBQUN4VSxNQUFELEVBQVN5VSxTQUFULEVBQW9DO01BQWhCQyxNQUFnQix1RUFBUCxFQUFPOzs7TUFFdkRDLFFBQVEsSUFBSUMsV0FBSixDQUFnQkgsU0FBaEIsRUFBMkI7YUFDOUIsSUFEOEI7Z0JBRTNCLElBRjJCO1lBRy9CQztHQUhJLENBQWQ7O1NBTU8zTCxJQUFQLENBQVkyTCxNQUFaLEVBQW9CdEwsT0FBcEIsQ0FBNEIsZUFBTztVQUMzQmhMLEdBQU4sSUFBYXNXLE9BQU90VyxHQUFQLENBQWI7R0FERjs7U0FJT3lXLGFBQVAsQ0FBcUJGLEtBQXJCOztTQUVPQSxLQUFQO0NBZEY7Ozs7Ozs7QUFzQkExTSxLQUFLNk0sV0FBTCxHQUFtQixVQUFDOVUsTUFBRCxFQUFTK1UsWUFBVCxFQUEwQjtNQUN2QyxDQUFDL1UsT0FBTytKLFlBQVAsQ0FBb0IsVUFBcEIsQ0FBTCxFQUFzQztXQUM3QixLQUFQOztTQUVLL0osT0FBT2pOLFlBQVAsQ0FBb0IsVUFBcEIsRUFBZ0N4QixLQUFoQyxDQUFzQyxLQUF0QyxFQUE2Q3lqQixJQUE3QyxDQUFrRDtXQUFLemlCLE1BQU13aUIsWUFBWDtHQUFsRCxDQUFQO0NBSkY7Ozs7Ozs7OztBQWNBOU0sS0FBS3lJLFdBQUwsR0FBbUIsVUFBQzFRLE1BQUQsRUFBUytVLFlBQVQsRUFBd0M7TUFBakJwTixPQUFpQix1RUFBUCxFQUFPOztNQUNyREEsUUFBUXNOLFNBQVosRUFBdUI7bUJBQ05BLFVBQVVqRSxXQUFWLENBQXNCK0QsWUFBdEIsRUFBb0MvVSxNQUFwQyxFQUE0QzJILFFBQVF1TixjQUFwRCxDQUFmOzs7TUFHRWpOLEtBQUs2TSxXQUFMLENBQWlCOVUsTUFBakIsRUFBeUIrVSxZQUF6QixDQUFKLEVBQTRDO1dBQ25DLEtBQVA7OztpQkFHYUEsYUFBYXpULElBQWIsRUFBZjtNQUNNNlQsb0JBQW9CblYsT0FBT2pOLFlBQVAsQ0FBb0IsVUFBcEIsS0FBbUMsRUFBN0Q7U0FDT29HLFlBQVAsQ0FBb0IsVUFBcEIsRUFBZ0MsQ0FBQ2djLG9CQUFvQixHQUFwQixHQUEwQkosWUFBM0IsRUFBeUN6VCxJQUF6QyxFQUFoQztTQUNPLElBQVA7Q0FaRjs7Ozs7Ozs7O0FBc0JBMkcsS0FBS3dJLGNBQUwsR0FBc0IsVUFBQ3pRLE1BQUQsRUFBUytVLFlBQVQsRUFBd0M7TUFBakJwTixPQUFpQix1RUFBUCxFQUFPOztNQUN4RCxDQUFDM0gsT0FBT2pOLFlBQVAsQ0FBb0IsVUFBcEIsQ0FBTCxFQUFzQztXQUM3QixLQUFQOzs7TUFHRTRVLFFBQVFzTixTQUFaLEVBQXVCO21CQUNOQSxVQUFVakUsV0FBVixDQUFzQitELFlBQXRCLEVBQW9DL1UsTUFBcEMsRUFBNEMySCxRQUFRdU4sY0FBcEQsQ0FBZjs7O01BR0lFLFlBQVlwVixPQUFPak4sWUFBUCxDQUFvQixVQUFwQixFQUFnQ3hCLEtBQWhDLENBQXNDLEtBQXRDLENBQWxCOztNQUVNOGpCLGVBQWVELFVBQVVuYSxNQUFWLENBQWlCO1dBQVE0UCxRQUFRQSxTQUFTa0ssWUFBekI7R0FBakIsQ0FBckI7U0FDTzViLFlBQVAsQ0FBb0IsVUFBcEIsRUFBZ0NrYyxhQUFhclosSUFBYixDQUFrQixHQUFsQixDQUFoQzs7U0FFT29aLFVBQVVwaEIsTUFBVixLQUFxQnFoQixhQUFhcmhCLE1BQXpDO0NBZEY7OztBQWtCQWlVLEtBQUtxTixvQkFBTCxHQUE0QixVQUFDckIsRUFBRCxFQUFRO01BQzlCLENBQUNBLEdBQUdzQixjQUFKLElBQXNCdEIsR0FBR3JGLGFBQTdCLEVBQTRDO1FBQ3RDM2QsT0FBT3VrQixnQkFBUCxDQUF3QnZCLEdBQUdyRixhQUEzQixFQUEwQzZHLGdCQUExQyxDQUEyRCxVQUEzRCxNQUEyRSxRQUEvRSxFQUF5RjtTQUNwRjdHLGFBQUgsQ0FBaUJoQyxLQUFqQixDQUF1QjhJLFFBQXZCLEdBQWtDLFVBQWxDOztPQUVDSCxjQUFILEdBQW9CLElBQXBCOztDQUxKOztBQVNBdE4sS0FBSzBOLGVBQUwsR0FBdUIsVUFBQ25NLE9BQUQsRUFBVS9KLElBQVYsRUFBZ0IvQyxLQUFoQixFQUEwQjtNQUMzQ0EsS0FBSixFQUFXO1lBQ0R2RCxZQUFSLENBQXFCc0csSUFBckIsRUFBMkIvQyxLQUEzQjtHQURGLE1BRU87WUFDR3JELGVBQVIsQ0FBd0JvRyxJQUF4Qjs7Q0FKSjs7QUFRQXdJLEtBQUt3SCxhQUFMLEdBQXFCLFVBQUNqRyxPQUFELEVBQVVvTSxhQUFWLEVBQTRCO2dCQUNqQ3hNLE9BQWQsQ0FBc0IsZ0JBQVE7UUFDdEJ5TSxZQUFZcFcsS0FBSzhDLE9BQUwsQ0FBYSxTQUFiLEVBQXdCLFdBQVc5QyxLQUFLLENBQUwsRUFBUXFXLFdBQVIsRUFBbkMsQ0FBbEI7WUFDUUQsU0FBUixJQUFxQnJNLFFBQVFxTSxTQUFSLEtBQXNCck0sUUFBUS9KLElBQVIsRUFBYy9KLElBQWQsQ0FBbUI4VCxPQUFuQixDQUEzQztHQUZGO0NBREY7O0FBT0F2QixLQUFLOE4sSUFBTCxHQUFZLFVBQUNDLEdBQUQsRUFBTXppQixDQUFOO1NBQVlxRCxPQUFPbVMsSUFBUCxDQUFZaU4sR0FBWixFQUFpQjVNLE9BQWpCLENBQXlCO1dBQU83VixFQUFFNkssR0FBRixFQUFPNFgsSUFBSTVYLEdBQUosQ0FBUCxDQUFQO0dBQXpCLENBQVo7Q0FBWjs7Ozs7O0FBT0E2SixLQUFLZ08sWUFBTCxHQUFvQixVQUFDalcsTUFBRCxFQUFTa1csU0FBVCxFQUF1QjtNQUNyQ0EsY0FBY3ZYLFNBQWxCLEVBQTZCO2dCQUNmcUIsT0FBTytKLFlBQVAsQ0FBb0IsUUFBcEIsQ0FBWjs7O01BR0lvTSxnQkFBZ0JsTyxLQUFLdUUsU0FBTCxDQUFleE0sTUFBZixFQUF1QixZQUF2QixDQUF0Qjs7TUFFSWtXLFNBQUosRUFBZTtRQUNULENBQUNDLGFBQUwsRUFBb0I7YUFDWDdkLFlBQVAsQ0FBb0JqQyxTQUFTbUIsYUFBVCxDQUF1QixZQUF2QixDQUFwQixFQUEwRHdJLE9BQU85TSxVQUFqRTs7R0FGSixNQUlPLElBQUlpakIsYUFBSixFQUFtQjtrQkFDVjViLE1BQWQ7O0NBWko7Ozs7OztBQW9CQTBOLEtBQUtRLHFCQUFMLEdBQTZCQSxLQUE3Qjs7Ozs7QUFLQVIsS0FBS21PLFNBQUwsR0FBaUIsVUFBQzFaLEtBQUQsRUFBVztTQUNuQixPQUFPQSxLQUFQLEtBQWlCLFFBQWpCLElBQ0wyWixTQUFTM1osS0FBVCxDQURLLElBRUxJLEtBQUtrUyxLQUFMLENBQVd0UyxLQUFYLE1BQXNCQSxLQUZ4QjtDQURGOzs7OztBQVNBdUwsS0FBS3FPLEtBQUwsR0FBYSxZQUFNO01BQ1hDLFdBQVcsRUFBakI7V0FDU0MsT0FBVCxHQUFtQixJQUFJdGdCLE9BQUosQ0FBWSxVQUFDNFAsT0FBRCxFQUFVN08sTUFBVixFQUFxQjthQUN6QzZPLE9BQVQsR0FBbUJBLE9BQW5CO2FBQ1M3TyxNQUFULEdBQWtCQSxNQUFsQjtHQUZpQixDQUFuQjtTQUlPc2YsUUFBUDtDQU5GOzs7Ozs7O0FBY0F0TyxLQUFLNUwsSUFBTCxHQUFZLFlBQWE7TUFDbkIsQ0FBQ2lJLFdBQVNDLE1BQVQsQ0FBZ0JrUyxnQkFBckIsRUFBdUM7Ozt5QkFDN0JwYSxJQUFSOztDQUZKLENBTUE7O0FDemFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQXFCQSxBQUVBLElBQUlxYSxnQkFBZ0IsR0FBcEI7O0FBRUEsSUFBSXpPLFNBQU8sRUFBWDs7O0FBSUFBLE9BQUswTyxVQUFMLEdBQWtCLFVBQVNDLEdBQVQsRUFBYztTQUN2QkEsSUFBSXZULE1BQUosQ0FBVyxDQUFYLEVBQWN5UyxXQUFkLEtBQThCYyxJQUFJL2EsS0FBSixDQUFVLENBQVYsQ0FBckM7Q0FERjs7Ozs7Ozs7QUFVQW9NLE9BQUs0TyxvQkFBTCxHQUE0QixVQUFTQyxNQUFULEVBQWlCO1NBQ3BDQyxRQUFQLEdBQWtCRCxPQUFPQyxRQUFQLElBQW1CLEtBQXJDO1NBQ08xTyxRQUFQLEdBQWtCeU8sT0FBT3pPLFFBQVAsSUFBbUIsR0FBckM7U0FDTzJPLE1BQVAsR0FBZ0JGLE9BQU9FLE1BQVAsSUFBaUIsUUFBakM7O01BRUlDLFFBQVFILE9BQU9DLFFBQVAsQ0FBZ0J4bEIsS0FBaEIsQ0FBc0IsSUFBdEIsQ0FBWjs7U0FFTzBsQixNQUFNclQsR0FBTixDQUFVLFVBQVNzVCxJQUFULEVBQWU7V0FDdkJBLE9BQU8sR0FBUCxHQUFhSixPQUFPek8sUUFBcEIsR0FBK0IsSUFBL0IsR0FBc0N5TyxPQUFPRSxNQUFwRDtHQURLLEVBRUpoYixJQUZJLENBRUMsSUFGRCxDQUFQO0NBUEY7Ozs7O0FBZUFpTSxPQUFLa1AsbUJBQUwsR0FBMkIsVUFBUzNOLE9BQVQsRUFBa0IxRSxRQUFsQixFQUE0QjtNQUNqRCxDQUFDMEUsT0FBTCxFQUFjO1dBQ0wsWUFBVyxFQUFsQjs7O01BR0U5TCxLQUFLLFNBQUxBLEVBQUssQ0FBU2lYLEtBQVQsRUFBZ0I7UUFDbkJuTCxXQUFXbUwsTUFBTTNVLE1BQXJCLEVBQTZCO1lBQ3JCb1gsZUFBTjs7Ozs7R0FGSjs7TUFTSUMsa0JBQWtCLFNBQWxCQSxlQUFrQixHQUFXO1dBQzFCQyxvQkFBTCxDQUEwQmxPLE9BQTFCLENBQWtDLFVBQVNxTCxTQUFULEVBQW9CO2NBQzVDeFAsbUJBQVIsQ0FBNEJ3UCxTQUE1QixFQUF1Qy9XLEVBQXZDLEVBQTJDLEtBQTNDO0tBREY7R0FERjs7U0FNSzRaLG9CQUFMLENBQTBCbE8sT0FBMUIsQ0FBa0MsVUFBU3FMLFNBQVQsRUFBb0I7WUFDNUMvZixnQkFBUixDQUF5QitmLFNBQXpCLEVBQW9DL1csRUFBcEMsRUFBd0MsS0FBeEM7R0FERjs7U0FJTzJaLGVBQVA7Q0F4QkY7O0FBMkJBcFAsT0FBS3FQLG9CQUFMLEdBQTZCLFlBQVc7O01BRWxDLHFCQUFxQnJtQixNQUF6QixFQUFpQztXQUN4QixDQUFDLGVBQUQsQ0FBUDs7O01BR0UsMkJBQTJCQSxNQUEvQixFQUF1QztXQUM5QixDQUFDLHFCQUFELENBQVA7OztNQUdFZ1gsT0FBS3NQLFlBQUwsS0FBc0IsUUFBdEIsSUFBa0N0UCxPQUFLc1AsWUFBTCxLQUFzQixHQUF4RCxJQUErRHRQLE9BQUtzUCxZQUFMLEtBQXNCLEtBQXJGLElBQThGdFAsT0FBS3NQLFlBQUwsS0FBc0IsSUFBeEgsRUFBOEg7V0FDckgsQ0FBQ3RQLE9BQUtzUCxZQUFMLEdBQW9CLGVBQXJCLEVBQXNDLGVBQXRDLENBQVA7OztTQUdLLEVBQVA7Q0FkMEIsRUFBNUI7O0FBaUJBdFAsT0FBS3VQLGdCQUFMLEdBQXlCLFlBQVc7TUFDOUJDLFNBQVN4bUIsT0FBT3VrQixnQkFBUCxDQUF3Qm5mLFNBQVN3YyxlQUFqQyxFQUFrRCxFQUFsRCxDQUFiO01BQ0kxSixPQUFPLEVBQVg7TUFDSXpYLElBQUksSUFBSW9nQixVQUFKLENBQWUsQ0FBZixDQUFSO01BQ0l6ZCxJQUFJLElBQUl5ZCxVQUFKLENBQWUsQ0FBZixDQUFSOztNQUVJNEYsUUFBUSxTQUFSQSxLQUFRLENBQVMxZ0IsQ0FBVCxFQUFZO1dBQ2ZBLEVBQUUyZ0IsTUFBRixDQUFTLENBQVQsRUFBWTdCLFdBQVosRUFBUDtHQURGOztPQUlLLElBQUl4Z0IsSUFBSSxDQUFiLEVBQWdCQSxJQUFJbWlCLE9BQU96akIsTUFBM0IsRUFBbUNzQixHQUFuQyxFQUF3Qzs7UUFFbEM4SSxNQUFNcVosT0FBT25pQixDQUFQLEVBQ1RpTixPQURTLENBQ0QsUUFEQyxFQUNTLEVBRFQsRUFFVEEsT0FGUyxDQUVELFlBRkMsRUFFYW1WLEtBRmIsRUFHVG5WLE9BSFMsQ0FHRCxNQUhDLEVBR08sS0FIUCxDQUFWOztRQUtJN1EsS0FBSzBNLElBQUkwVCxVQUFKLENBQWUsQ0FBZixDQUFMLElBQTBCemQsS0FBSytKLElBQUkwVCxVQUFKLENBQWUsQ0FBZixDQUFuQyxFQUFzRDtVQUNoRDFULFFBQVEsU0FBUixJQUFxQkEsUUFBUSxZQUFqQyxFQUErQzthQUN4Q0EsR0FBTCxJQUFZLElBQVo7Ozs7O1NBS0MrSyxJQUFQO0NBeEJzQixFQUF4Qjs7QUEyQkFsQixPQUFLMlAsY0FBTCxHQUFzQixVQUFTblksSUFBVCxFQUFlO1NBQzVCQSxRQUFRd0ksT0FBS3VQLGdCQUFwQjtDQURGOzs7OztBQU9BdlAsT0FBS3NQLFlBQUwsR0FBcUIsWUFBVztNQUMxQkUsU0FBU3htQixPQUFPdWtCLGdCQUFQLENBQXdCbmYsU0FBU3djLGVBQWpDLEVBQWtELEVBQWxELENBQWI7TUFDRWdGLE1BQU0sQ0FBQ2xjLE1BQU12RyxTQUFOLENBQWdCeUcsS0FBaEIsQ0FDSnhHLElBREksQ0FDQ29pQixNQURELEVBRUp6YixJQUZJLENBRUMsRUFGRCxFQUdKc0csS0FISSxDQUdFLG1CQUhGLEtBRzJCbVYsT0FBT0ssS0FBUCxLQUFpQixFQUFqQixJQUF1QixDQUFDLEVBQUQsRUFBSyxHQUFMLENBSG5ELEVBSUosQ0FKSSxDQURSO1NBTVNELEdBQVA7Q0FQZ0IsRUFBcEI7O0FBVUE1UCxPQUFLOFAsaUJBQUwsR0FBeUIsVUFBU0MsUUFBVCxFQUFtQmxULFFBQW5CLEVBQTZCO09BQy9DbVQsY0FBTCxDQUFvQixZQUFXO2FBQ3BCN08sT0FBVCxDQUFpQixVQUFTSSxPQUFULEVBQWtCOztjQUV6QmtELFlBQVI7S0FGRjs7R0FERjtDQURGOztBQVVBekUsT0FBS2dRLGNBQUwsR0FBdUIsWUFBVztNQUM1QkMsWUFBWSxFQUFoQjs7U0FFTyxVQUFTcFQsUUFBVCxFQUFtQjtRQUNwQm9ULFVBQVVsa0IsTUFBVixLQUFxQixDQUF6QixFQUE0QjttQkFDYixZQUFXO1lBQ2xCbWtCLHFCQUFxQkQsVUFBVXJjLEtBQVYsQ0FBZ0IsQ0FBaEIsQ0FBekI7b0JBQ1ksRUFBWjsyQkFDbUJ1TixPQUFuQixDQUEyQixVQUFTdEUsUUFBVCxFQUFtQjs7U0FBOUM7T0FIRjs7O2NBU1FsUixJQUFWLENBQWVrUixRQUFmO0dBWEY7Q0FIb0IsRUFBdEI7O0FBa0JBbUQsT0FBS21RLG1CQUFMLEdBQTRCLFlBQVc7TUFDakNGLFlBQVksRUFBaEI7O01BRUlHLE1BQU1wbkIsT0FBT3FuQixxQkFBUCxJQUNScm5CLE9BQU9zbkIsMkJBREMsSUFFUnRuQixPQUFPdW5CLHdCQUZDLElBR1J2bkIsT0FBT3duQixzQkFIQyxJQUlSeG5CLE9BQU95bkIsdUJBSkMsSUFLUixVQUFTNVQsUUFBVCxFQUFtQjtlQUNSQSxRQUFYLEVBQXFCLE9BQU8sRUFBNUI7R0FORjs7U0FTTyxVQUFTQSxRQUFULEVBQW1CO1FBQ3BCb1QsVUFBVWxrQixNQUFWLEtBQXFCLENBQXpCLEVBQTRCO1VBQ3RCLFlBQVc7WUFDVG1rQixxQkFBcUJELFVBQVVyYyxLQUFWLENBQWdCLENBQWhCLENBQXpCO29CQUNZLEVBQVo7MkJBQ21CdU4sT0FBbkIsQ0FBMkIsVUFBU3RFLFFBQVQsRUFBbUI7O1NBQTlDO09BSEY7OztjQVNRbFIsSUFBVixDQUFla1IsUUFBZjtHQVhGO0NBWnlCLEVBQTNCOztBQTJCQW1ELE9BQUswUSxzQkFBTCxHQUErQixZQUFXO01BQ3BDMVEsT0FBSzJQLGNBQUwsQ0FBb0Isb0JBQXBCLENBQUosRUFBK0M7V0FDdEMsWUFBUDs7O01BR0UzUCxPQUFLMlAsY0FBTCxDQUFvQjNQLE9BQUtzUCxZQUFMLEdBQW9CLG9CQUF4QyxDQUFKLEVBQW1FO1dBQzFEdFAsT0FBS3NQLFlBQUwsR0FBb0IsWUFBM0I7OztRQUdJLElBQUl4aUIsS0FBSixDQUFVLGVBQVYsQ0FBTjtDQVQ0QixFQUE5Qjs7Ozs7QUFnQkEsSUFBSTZqQixTQUFTLFNBQVRBLE1BQVMsQ0FBU3BQLE9BQVQsRUFBa0I7TUFDekIsRUFBRSxnQkFBZ0JvUCxNQUFsQixDQUFKLEVBQStCO1dBQ3RCLElBQUlBLE1BQUosQ0FBV3BQLE9BQVgsQ0FBUDs7O01BR0VBLG1CQUFtQi9PLFdBQXZCLEVBQW9DO1NBQzdCdWQsUUFBTCxHQUFnQixDQUFDeE8sT0FBRCxDQUFoQjtHQURGLE1BRU8sSUFBSTVTLE9BQU94QixTQUFQLENBQWlCd0ksUUFBakIsQ0FBMEJ2SSxJQUExQixDQUErQm1VLE9BQS9CLE1BQTRDLGdCQUFoRCxFQUFrRTtTQUNsRXdPLFFBQUwsR0FBZ0J4TyxPQUFoQjtHQURLLE1BR0E7VUFDQyxJQUFJelUsS0FBSixDQUFVLGdFQUFWLENBQU47OztPQUdHOGpCLGVBQUwsR0FBdUIsRUFBdkI7T0FDS0Msc0JBQUwsR0FBOEIsRUFBOUI7Q0FmRjs7QUFrQkFGLE9BQU94akIsU0FBUCxHQUFtQjs7Ozs7bUJBS0F1SixTQUxBOzs7OztZQVVQQSxTQVZPOzs7Ozs7O1FBaUJYLGNBQVNtRyxRQUFULEVBQW1CO1FBQ25CLE9BQU9BLFFBQVAsS0FBb0IsVUFBeEIsRUFBb0M7V0FDN0IrVCxlQUFMLENBQXFCamxCLElBQXJCLENBQTBCLFVBQVM0VyxJQUFULEVBQWU7OztPQUF6Qzs7O1NBTUd1TyxjQUFMOztXQUVPLElBQVA7R0EzQmU7Ozs7Ozs7Ozs7OztTQXdDVixlQUFTQyxVQUFULEVBQXFCclIsT0FBckIsRUFBOEI7UUFDL0JzUixRQUFRLEtBQUtKLGVBQWpCOztRQUVJRyxjQUFjclIsT0FBbEIsRUFBMkI7Y0FDakJ1UixHQUFSLEdBQWNGLFVBQWQ7bUJBQ2EsSUFBSUosT0FBT08sVUFBWCxDQUFzQnhSLE9BQXRCLENBQWI7OztRQUdFLEVBQUVxUixzQkFBc0IxaUIsUUFBdEIsSUFBa0MwaUIsc0JBQXNCSixPQUFPTyxVQUFqRSxDQUFKLEVBQWtGO1VBQzVFSCxXQUFXRSxHQUFmLEVBQW9CO3FCQUNMLElBQUlOLE9BQU9PLFVBQVgsQ0FBc0JILFVBQXRCLENBQWI7T0FERixNQUVPO3FCQUNRLElBQUlKLE9BQU9PLFVBQVgsQ0FBc0I7ZUFDNUJIO1NBRE0sQ0FBYjs7OztRQU1BQSxzQkFBc0IxaUIsUUFBMUIsRUFBb0M7WUFDNUIxQyxJQUFOLENBQVdvbEIsVUFBWDtLQURGLE1BRU8sSUFBSUEsc0JBQXNCSixPQUFPTyxVQUFqQyxFQUE2QztZQUM1Q3ZsQixJQUFOLENBQVdvbEIsV0FBV0ksS0FBWCxFQUFYO0tBREssTUFFQTtZQUNDLElBQUlya0IsS0FBSixDQUFVLG1CQUFWLENBQU47OztXQUdLLElBQVA7R0FsRWU7Ozs7Ozs7UUEwRVgsY0FBU3NrQixPQUFULEVBQWtCO1FBQ2xCQSxVQUFVLENBQWQsRUFBaUI7V0FDVlIsZUFBTCxDQUFxQmpsQixJQUFyQixDQUEwQixVQUFTNFcsSUFBVCxFQUFlO21CQUM1QkEsSUFBWCxFQUFpQixPQUFPNk8sT0FBeEI7T0FERjs7O1dBS0ssSUFBUDtHQWpGZTs7YUFvRk4scUJBQVc7O1NBRWZSLGVBQUwsQ0FBcUJqbEIsSUFBckIsQ0FBMEIsVUFBUzRXLElBQVQsRUFBZTtXQUNsQ3dOLFFBQUwsQ0FBYzVPLE9BQWQsQ0FBc0IsVUFBU0ksT0FBVCxFQUFrQlEsS0FBbEIsRUFBeUI7WUFDekNrUCxNQUFNLEtBQUtKLHNCQUFMLENBQTRCOU8sS0FBNUIsSUFBcUMsRUFBL0M7O2FBRUssSUFBSTFVLElBQUksQ0FBYixFQUFnQkEsSUFBSWtVLFFBQVFvRCxLQUFSLENBQWM1WSxNQUFsQyxFQUEwQ3NCLEdBQTFDLEVBQStDO2NBQ3pDa1UsUUFBUW9ELEtBQVIsQ0FBY3RYLENBQWQsQ0FBSixJQUF3QmtVLFFBQVFvRCxLQUFSLENBQWNwRCxRQUFRb0QsS0FBUixDQUFjdFgsQ0FBZCxDQUFkLENBQXhCOztPQUprQixDQU1wQkksSUFOb0IsQ0FNZixJQU5lLENBQXRCOztLQUR3QixDQVN4QkEsSUFUd0IsQ0FTbkIsSUFUbUIsQ0FBMUI7O1dBV08sSUFBUDtHQWpHZTs7Ozs7Ozs7OztnQkE0R0gsc0JBQVNpUyxPQUFULEVBQWtCO2NBQ3BCQSxXQUFXLEVBQXJCO1FBQ0loTCxPQUFPLElBQVg7O1FBRUlnTCxRQUFRcVIsVUFBUixJQUFzQixDQUFDclIsUUFBUVUsUUFBbkMsRUFBNkM7WUFDckMsSUFBSXRULEtBQUosQ0FBVSxzRUFBVixDQUFOOzs7UUFHRXVrQixpQkFBaUJyUixPQUFLMFEsc0JBQTFCOztRQUVJaFIsUUFBUXFSLFVBQVIsSUFBdUJyUixRQUFRVSxRQUFSLElBQW9CVixRQUFRVSxRQUFSLEdBQW1CLENBQWxFLEVBQXNFO1VBQ2hFa1Isa0JBQWtCNVIsUUFBUXFSLFVBQVIsSUFBdUIsU0FBU3JSLFFBQVFVLFFBQWpCLEdBQTRCLElBQTVCLElBQW9DVixRQUFRcVAsTUFBUixJQUFrQixRQUF0RCxDQUE3Qzs7V0FFSzZCLGVBQUwsQ0FBcUJqbEIsSUFBckIsQ0FBMEIsVUFBUzRXLElBQVQsRUFBZTtZQUNuQ3dOLFdBQVcsS0FBS0EsUUFBcEI7WUFDSXdCLFNBQUo7O1lBRUlDLGtCQUFrQixTQUFsQkEsZUFBa0IsR0FBVzttQkFDdEJyUSxPQUFULENBQWlCLFVBQVNJLE9BQVQsRUFBa0I7b0JBQ3pCb0QsS0FBUixDQUFjME0sY0FBZCxJQUFnQyxFQUFoQztXQURGO1NBREY7OztZQU9JakMsa0JBQWtCcFAsT0FBS2tQLG1CQUFMLENBQXlCYSxTQUFTLENBQVQsQ0FBekIsRUFBc0MsWUFBVzt1QkFDeER3QixTQUFiOzs7U0FEb0IsQ0FBdEI7OztvQkFPWWpLLFdBQVcsWUFBVzs7OztTQUF0QixFQUlUNUgsUUFBUVUsUUFBUixHQUFtQixJQUFuQixHQUEwQnFPLGFBSmpCLENBQVo7OztpQkFPU3ROLE9BQVQsQ0FBaUIsVUFBU0ksT0FBVCxFQUFrQlEsS0FBbEIsRUFBeUI7O2NBRXBDa1AsTUFBTXZjLEtBQUttYyxzQkFBTCxDQUE0QjlPLEtBQTVCLENBQVY7O2NBRUksQ0FBQ2tQLEdBQUwsRUFBVTtrQkFDRixJQUFJbmtCLEtBQUosQ0FBVSxvRUFBVixDQUFOOzs7ZUFHRytqQixzQkFBTCxDQUE0QjlPLEtBQTVCLElBQXFDckwsU0FBckM7O2NBRUljLElBQUo7ZUFDSyxJQUFJbkssSUFBSSxDQUFSLEVBQVdva0IsTUFBTWxRLFFBQVFvRCxLQUFSLENBQWM1WSxNQUFwQyxFQUE0Q3NCLElBQUlva0IsR0FBaEQsRUFBcURwa0IsR0FBckQsRUFBMEQ7bUJBQ2pEa1UsUUFBUW9ELEtBQVIsQ0FBY3RYLENBQWQsQ0FBUDtnQkFDSTRqQixJQUFJelosSUFBSixNQUFjZCxTQUFsQixFQUE2QjtrQkFDdkJjLElBQUosSUFBWSxFQUFaOzs7O2tCQUlJbU4sS0FBUixDQUFjME0sY0FBZCxJQUFnQ0MsZUFBaEM7O2lCQUVPeFEsSUFBUCxDQUFZbVEsR0FBWixFQUFpQjlQLE9BQWpCLENBQXlCLFVBQVNoTCxHQUFULEVBQWM7Z0JBQ2pDQSxRQUFRa2IsY0FBWixFQUE0QjtzQkFDbEIxTSxLQUFSLENBQWN4TyxHQUFkLElBQXFCOGEsSUFBSTlhLEdBQUosQ0FBckI7O1dBRko7O2tCQU1Rd08sS0FBUixDQUFjME0sY0FBZCxJQUFnQ0MsZUFBaEM7U0ExQkY7T0F6QkY7S0FIRixNQXlETztXQUNBVixlQUFMLENBQXFCamxCLElBQXJCLENBQTBCLFVBQVM0VyxJQUFULEVBQWU7OztPQUF6Qzs7O1dBTUssSUFBUDs7YUFFU21QLEtBQVQsR0FBaUI7O1dBRVYzQixRQUFMLENBQWM1TyxPQUFkLENBQXNCLFVBQVNJLE9BQVQsRUFBa0JRLEtBQWxCLEVBQXlCO2dCQUNyQzRDLEtBQVIsQ0FBYzBNLGNBQWQsSUFBZ0MsTUFBaEM7O1lBRUlKLE1BQU12YyxLQUFLbWMsc0JBQUwsQ0FBNEI5TyxLQUE1QixDQUFWOztZQUVJLENBQUNrUCxHQUFMLEVBQVU7Z0JBQ0YsSUFBSW5rQixLQUFKLENBQVUsb0VBQVYsQ0FBTjs7O2FBR0crakIsc0JBQUwsQ0FBNEI5TyxLQUE1QixJQUFxQ3JMLFNBQXJDOzthQUVLLElBQUlySixJQUFJLENBQVIsRUFBV21LLE9BQU8sRUFBdkIsRUFBMkJuSyxJQUFJa1UsUUFBUW9ELEtBQVIsQ0FBYzVZLE1BQTdDLEVBQXFEc0IsR0FBckQsRUFBMEQ7aUJBQ2pEa1UsUUFBUW9ELEtBQVIsQ0FBY3RYLENBQWQsQ0FBUDtjQUNJLE9BQU80akIsSUFBSTFQLFFBQVFvRCxLQUFSLENBQWN0WCxDQUFkLENBQUosQ0FBUCxLQUFpQyxXQUFyQyxFQUFrRDtnQkFDNUNrVSxRQUFRb0QsS0FBUixDQUFjdFgsQ0FBZCxDQUFKLElBQXdCLEVBQXhCOzs7O2VBSUd5VCxJQUFQLENBQVltUSxHQUFaLEVBQWlCOVAsT0FBakIsQ0FBeUIsVUFBU2hMLEdBQVQsRUFBYztrQkFDN0J3TyxLQUFSLENBQWN4TyxHQUFkLElBQXFCOGEsSUFBSTlhLEdBQUosQ0FBckI7U0FERjtPQWxCRjs7R0ExTGE7Ozs7O2tCQXVORCwwQkFBVztTQUNwQndiLGtCQUFMOztXQUVPLElBQVA7R0ExTmU7O3NCQTZORyw4QkFBVztRQUN6QlosYUFBYSxLQUFLSCxlQUFMLENBQXFCOWhCLEtBQXJCLEVBQWpCO1FBQ0ksS0FBSzhpQixrQkFBVCxFQUE2QjtZQUNyQixJQUFJOWtCLEtBQUosQ0FBVSw0QkFBVixDQUFOOztTQUVHOGtCLGtCQUFMLEdBQTBCYixVQUExQjtRQUNJcmMsT0FBTyxJQUFYO1FBQ0ltZCxTQUFTLEtBQWI7O1FBRUl0UCxPQUFPLFNBQVBBLElBQU8sR0FBVztVQUNoQixDQUFDc1AsTUFBTCxFQUFhO2lCQUNGLElBQVQ7YUFDS0Qsa0JBQUwsR0FBMEJsYixTQUExQjthQUNLaWIsa0JBQUw7T0FIRixNQUlPO2NBQ0MsSUFBSTdrQixLQUFKLENBQVUsK0NBQVYsQ0FBTjs7S0FOSjs7UUFVSWlrQixVQUFKLEVBQWdCO2lCQUNIM2pCLElBQVgsQ0FBZ0IsSUFBaEIsRUFBc0JtVixJQUF0Qjs7OztDQWpQTjs7Ozs7QUEwUEFvTyxPQUFPbUIsTUFBUCxHQUFnQiw4QkFBNkI7T0FDdEMsSUFBSXprQixJQUFJLENBQWIsRUFBZ0JBLElBQUkwRixVQUFVaEgsTUFBOUIsRUFBc0NzQixHQUF0QyxFQUEyQztjQUMvQkEsQ0FBVixFQUFhMGtCLElBQWI7O0NBRko7Ozs7Ozs7O0FBYUFwQixPQUFPTyxVQUFQLEdBQW9CLFVBQVN4UixPQUFULEVBQWtCO09BQy9CQSxPQUFMLEdBQWVBLFdBQVcsRUFBMUI7T0FDS0EsT0FBTCxDQUFhVSxRQUFiLEdBQXdCLEtBQUtWLE9BQUwsQ0FBYVUsUUFBYixJQUF5QixDQUFqRDtPQUNLVixPQUFMLENBQWFxUCxNQUFiLEdBQXNCLEtBQUtyUCxPQUFMLENBQWFxUCxNQUFiLElBQXVCLFFBQTdDO09BQ0tyUCxPQUFMLENBQWF1UixHQUFiLEdBQW1CLEtBQUt2UixPQUFMLENBQWF1UixHQUFiLElBQW9CLEVBQXZDO09BQ0t2UixPQUFMLENBQWFvUCxRQUFiLEdBQXdCLEtBQUtwUCxPQUFMLENBQWFvUCxRQUFiLElBQXlCLEtBQWpEO0NBTEY7O0FBUUE2QixPQUFPTyxVQUFQLENBQWtCL2pCLFNBQWxCLEdBQThCOzs7Ozs7U0FNckIsaUJBQVc7O1FBRVp3QixPQUFPbVMsSUFBUCxDQUFZLEtBQUtwQixPQUFMLENBQWF1UixHQUF6QixFQUE4QmxsQixNQUE5QixLQUF5QyxDQUE3QyxFQUFnRDtZQUN4QyxJQUFJZSxLQUFKLENBQVUsMEJBQVYsQ0FBTjs7O1FBR0Vta0IsTUFBTWUscUJBQXFCLEtBQUt0UyxPQUFMLENBQWF1UixHQUFsQyxDQUFWOztRQUVJLEtBQUt2UixPQUFMLENBQWFVLFFBQWIsR0FBd0IsQ0FBNUIsRUFBK0I7VUFDekJrUixrQkFBa0J0UixPQUFLNE8sb0JBQUwsQ0FBMEIsS0FBS2xQLE9BQS9CLENBQXRCO1VBQ0loTCxPQUFPLElBQVg7O2FBRU8sVUFBU21JLFFBQVQsRUFBbUI7WUFDcEJrVCxXQUFXLEtBQUtBLFFBQXBCO1lBQ0kzSSxVQUFVMVMsS0FBS2dMLE9BQUwsQ0FBYVUsUUFBYixHQUF3QixJQUF4QixHQUErQnFPLGFBQTdDO1lBQ0k4QyxTQUFKOztZQUVJbkMsa0JBQWtCcFAsT0FBS2tQLG1CQUFMLENBQXlCYSxTQUFTLENBQVQsQ0FBekIsRUFBc0MsWUFBVzt1QkFDeER3QixTQUFiOztTQURvQixDQUF0Qjs7b0JBS1lqSyxXQUFXLFlBQVc7OztTQUF0QixFQUdURixPQUhTLENBQVo7O2lCQUtTakcsT0FBVCxDQUFpQixVQUFTSSxPQUFULEVBQWtCO2tCQUN6Qm9ELEtBQVIsQ0FBYzNFLE9BQUswUSxzQkFBbkIsSUFBNkNZLGVBQTdDOztpQkFFT3hRLElBQVAsQ0FBWW1RLEdBQVosRUFBaUI5UCxPQUFqQixDQUF5QixVQUFTM0osSUFBVCxFQUFlO29CQUM5Qm1OLEtBQVIsQ0FBY25OLElBQWQsSUFBc0J5WixJQUFJelosSUFBSixDQUF0QjtXQURGO1NBSEY7T0FmRjs7O1FBMEJFLEtBQUtrSSxPQUFMLENBQWFVLFFBQWIsSUFBeUIsQ0FBN0IsRUFBZ0M7YUFDdkIsVUFBU3ZELFFBQVQsRUFBbUI7WUFDcEJrVCxXQUFXLEtBQUtBLFFBQXBCOztpQkFFUzVPLE9BQVQsQ0FBaUIsVUFBU0ksT0FBVCxFQUFrQjtrQkFDekJvRCxLQUFSLENBQWMzRSxPQUFLMFEsc0JBQW5CLElBQTZDLEVBQTdDOztpQkFFTzVQLElBQVAsQ0FBWW1RLEdBQVosRUFBaUI5UCxPQUFqQixDQUF5QixVQUFTM0osSUFBVCxFQUFlO29CQUM5Qm1OLEtBQVIsQ0FBY25OLElBQWQsSUFBc0J5WixJQUFJelosSUFBSixDQUF0QjtXQURGO1NBSEY7O1lBUUl1WSxTQUFTaGtCLE1BQVQsR0FBa0IsQ0FBdEIsRUFBeUI7aUJBQ2xCK2pCLGlCQUFMLENBQXVCQyxRQUF2QixFQUFpQyxZQUFXO21CQUNyQ0ksbUJBQUwsQ0FBeUJ0VCxRQUF6QjtXQURGO1NBREYsTUFJTztpQkFDQXNULG1CQUFMLENBQXlCdFQsUUFBekI7O09BaEJKOzs7YUFxQk9tVixvQkFBVCxDQUE4QmYsR0FBOUIsRUFBbUM7VUFDN0IxUSxTQUFTLEVBQWI7O2FBRU9PLElBQVAsQ0FBWW1RLEdBQVosRUFBaUI5UCxPQUFqQixDQUF5QixVQUFTM0osSUFBVCxFQUFlO1lBQ2xDL0MsUUFBUXdjLElBQUl6WixJQUFKLENBQVo7O1lBRUl3SSxPQUFLMlAsY0FBTCxDQUFvQm5ZLElBQXBCLENBQUosRUFBK0I7aUJBQ3RCQSxJQUFQLElBQWUvQyxLQUFmOzs7O1lBSUV3ZCxXQUFXalMsT0FBS3NQLFlBQUwsR0FBb0J0UCxPQUFLME8sVUFBTCxDQUFnQmxYLElBQWhCLENBQW5DO1lBQ0l3SSxPQUFLMlAsY0FBTCxDQUFvQnNDLFFBQXBCLENBQUosRUFBbUM7aUJBQzFCQSxRQUFQLElBQW1CeGQsS0FBbkI7U0FERixNQUVPO2lCQUNFd2QsUUFBUCxJQUFtQnhkLEtBQW5CO2lCQUNPK0MsSUFBUCxJQUFlL0MsS0FBZjs7T0FiSjs7YUFpQk84TCxNQUFQOzs7Q0F0Rk4sQ0E0RkE7O0FDbGxCQTs7OztBQUlBLEFBRUEsSUFBSTJSLE9BQUo7SUFBV0MsS0FBWDtJQUFrQkMsU0FBbEI7SUFBNkJDLFlBQTdCOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUF3QkEsSUFBSUMsa0JBQWtCLFNBQVNBLGVBQVQsQ0FBeUIvUSxPQUF6QixFQUFrQzdCLE9BQWxDLEVBQTJDO1NBQ3hELElBQUk0UyxnQkFBZ0JDLFFBQXBCLENBQTZCaFIsT0FBN0IsRUFBc0M3QixXQUFXLEVBQWpELENBQVA7Q0FERjs7Ozs7Ozs7Ozs7Ozs7OztBQW1CQTRTLGdCQUFnQkUsUUFBaEIsR0FBMkI7WUFDZjs7aUJBRUssT0FGTDtrQkFHTSxNQUhOO29CQUlRLE1BSlI7Y0FLRSxNQUxGO3VCQU1XOztDQVB2Qjs7Ozs7Ozs7QUFpQkFGLGdCQUFnQkcsUUFBaEIsR0FBMkJya0IsUUFBM0I7Ozs7Ozs7QUFPQWtrQixnQkFBZ0JJLGlCQUFoQixHQUFvQy9ZLFVBQVVnWixjQUFWLElBQTRCaFosVUFBVWlaLGdCQUExRTs7Ozs7OztBQU9BTixnQkFBZ0JPLGVBQWhCLEdBQW1DLGtCQUFrQjdwQixNQUFyRDs7Ozs7OztBQU9Bc3BCLGdCQUFnQlEsU0FBaEIsR0FBNEIsNkNBQTZDbnBCLElBQTdDLENBQWtEZ1EsVUFBVUMsU0FBNUQsQ0FBNUI7Ozs7Ozs7QUFPQTBZLGdCQUFnQlMsY0FBaEIsR0FBa0NULGdCQUFnQk8sZUFBaEIsSUFBbUNQLGdCQUFnQlEsU0FBcEQsSUFBa0VSLGdCQUFnQkksaUJBQW5IOzs7Ozs7OztBQVFBSixnQkFBZ0JVLGtCQUFoQixHQUFxQyxFQUFyQzs7Ozs7Ozs7OztBQVVBLElBQUlDLGNBQWMsRUFBbEI7Ozs7Ozs7OztBQVNBLElBQUlDLGlCQUFpQlosZ0JBQWdCWSxjQUFoQixHQUFpQyxNQUF0RDtBQUNBLElBQUlDLGlCQUFpQmIsZ0JBQWdCYSxjQUFoQixHQUFpQyxNQUF0RDtBQUNBLElBQUlDLGVBQWVkLGdCQUFnQmMsWUFBaEIsR0FBK0IsSUFBbEQ7QUFDQSxJQUFJQyxrQkFBa0JmLGdCQUFnQmUsZUFBaEIsR0FBa0MsT0FBeEQ7Ozs7Ozs7OztBQVNBLElBQUlDLGdCQUFnQmhCLGdCQUFnQmdCLGFBQWhCLEdBQWdDLE9BQXBEO0FBQ0EsSUFBSUMsZ0JBQWdCakIsZ0JBQWdCaUIsYUFBaEIsR0FBZ0MsT0FBcEQ7QUFDQSxJQUFJQyxjQUFjbEIsZ0JBQWdCa0IsV0FBaEIsR0FBOEIsS0FBaEQ7Ozs7Ozs7OztBQVNBLElBQUlDLGNBQWNuQixnQkFBZ0JtQixXQUFoQixHQUE4QixPQUFoRDtBQUNBLElBQUlDLGFBQWFwQixnQkFBZ0JvQixVQUFoQixHQUE2QixNQUE5QztBQUNBLElBQUlDLFlBQVlyQixnQkFBZ0JxQixTQUFoQixHQUE0QixLQUE1QztBQUNBLElBQUlDLGdCQUFnQnRCLGdCQUFnQnNCLGFBQWhCLEdBQWdDLFNBQXBEO0FBQ0EsSUFBSUMsY0FBY3ZCLGdCQUFnQnVCLFdBQWhCLEdBQThCLE9BQWhEOzs7Ozs7Ozs7QUFTQXZCLGdCQUFnQndCLEtBQWhCLEdBQXdCLEtBQXhCOzs7Ozs7O0FBT0F4QixnQkFBZ0J5QixPQUFoQixHQUEwQnpCLGdCQUFnQnlCLE9BQWhCLElBQTJCLEVBQXJEOzs7Ozs7OztBQVFBekIsZ0JBQWdCMEIsUUFBaEIsR0FBMkIxQixnQkFBZ0IwQixRQUFoQixJQUE0QixFQUF2RDs7Ozs7OztBQU9BLFNBQVNDLEtBQVQsR0FBaUI7TUFDWjNCLGdCQUFnQndCLEtBQW5CLEVBQTBCOzs7OztVQUtwQkksbUJBQU47OztRQUdNcEcsSUFBTixDQUFXd0UsZ0JBQWdCMEIsUUFBM0IsRUFBcUMsVUFBU0csT0FBVCxFQUFrQjtjQUMzQzVXLFFBQVYsQ0FBbUI0VyxPQUFuQjtHQURGOzs7VUFLTUMsT0FBTixDQUFjOUIsZ0JBQWdCRyxRQUE5QixFQUF3Q2lCLFVBQXhDLEVBQW9EdEIsVUFBVWlDLE1BQTlEO1VBQ01ELE9BQU4sQ0FBYzlCLGdCQUFnQkcsUUFBOUIsRUFBd0NrQixTQUF4QyxFQUFtRHZCLFVBQVVpQyxNQUE3RDs7O2tCQUdnQlAsS0FBaEIsR0FBd0IsSUFBeEI7Ozs7Ozs7OztBQVNGM0IsUUFBUUcsZ0JBQWdCZ0MsS0FBaEIsR0FBd0I7Ozs7Ozs7OztVQVN0QixTQUFTclUsTUFBVCxDQUFnQnNVLElBQWhCLEVBQXNCQyxHQUF0QixFQUEyQkMsS0FBM0IsRUFBa0M7U0FDbkMsSUFBSXRlLEdBQVQsSUFBZ0JxZSxHQUFoQixFQUFxQjtVQUNmQSxJQUFJbmUsY0FBSixDQUFtQkYsR0FBbkIsTUFBNEJvZSxLQUFLcGUsR0FBTCxNQUFjTyxTQUFkLElBQTJCLENBQUMrZCxLQUF4RCxDQUFKLEVBQW9FO2FBQzdEdGUsR0FBTCxJQUFZcWUsSUFBSXJlLEdBQUosQ0FBWjs7O1dBR0dvZSxJQUFQO0dBZjRCOzs7Ozs7OztNQXdCMUIsU0FBU0csRUFBVCxDQUFZblQsT0FBWixFQUFxQmhLLElBQXJCLEVBQTJCb2QsT0FBM0IsRUFBb0M7WUFDOUJsb0IsZ0JBQVIsQ0FBeUI4SyxJQUF6QixFQUErQm9kLE9BQS9CLEVBQXdDLEtBQXhDO0dBekI0Qjs7Ozs7Ozs7T0FrQ3pCLFNBQVNDLEdBQVQsQ0FBYXJULE9BQWIsRUFBc0JoSyxJQUF0QixFQUE0Qm9kLE9BQTVCLEVBQXFDO1lBQ2hDM1gsbUJBQVIsQ0FBNEJ6RixJQUE1QixFQUFrQ29kLE9BQWxDLEVBQTJDLEtBQTNDO0dBbkM0Qjs7Ozs7Ozs7Ozs7UUErQ3hCLFNBQVM3RyxJQUFULENBQWNDLEdBQWQsRUFBbUI4RyxRQUFuQixFQUE2QkMsT0FBN0IsRUFBc0M7UUFDdEN6bkIsQ0FBSixFQUFPb2tCLEdBQVA7OztRQUdHLGFBQWExRCxHQUFoQixFQUFxQjtVQUNmNU0sT0FBSixDQUFZMFQsUUFBWixFQUFzQkMsT0FBdEI7O0tBREYsTUFHTyxJQUFHL0csSUFBSWhpQixNQUFKLEtBQWUySyxTQUFsQixFQUE2QjtXQUM5QnJKLElBQUksQ0FBSixFQUFPb2tCLE1BQU0xRCxJQUFJaGlCLE1BQXJCLEVBQTZCc0IsSUFBSW9rQixHQUFqQyxFQUFzQ3BrQixHQUF0QyxFQUEyQztZQUN0Q3duQixTQUFTem5CLElBQVQsQ0FBYzBuQixPQUFkLEVBQXVCL0csSUFBSTFnQixDQUFKLENBQXZCLEVBQStCQSxDQUEvQixFQUFrQzBnQixHQUFsQyxNQUEyQyxLQUE5QyxFQUFxRDs7Ozs7S0FGbEQsTUFPQTtXQUNEMWdCLENBQUosSUFBUzBnQixHQUFULEVBQWM7WUFDVEEsSUFBSTFYLGNBQUosQ0FBbUJoSixDQUFuQixLQUNEd25CLFNBQVN6bkIsSUFBVCxDQUFjMG5CLE9BQWQsRUFBdUIvRyxJQUFJMWdCLENBQUosQ0FBdkIsRUFBK0JBLENBQS9CLEVBQWtDMGdCLEdBQWxDLE1BQTJDLEtBRDdDLEVBQ29EOzs7OztHQWhFNUI7Ozs7Ozs7O1NBNkV2QixTQUFTZ0gsS0FBVCxDQUFlUCxHQUFmLEVBQW9CUSxJQUFwQixFQUEwQjtXQUN4QlIsSUFBSWxuQixPQUFKLENBQVkwbkIsSUFBWixJQUFvQixDQUFDLENBQTVCO0dBOUU0Qjs7Ozs7Ozs7V0F1RnJCLFNBQVNDLE9BQVQsQ0FBaUJULEdBQWpCLEVBQXNCUSxJQUF0QixFQUE0QjtRQUNoQ1IsSUFBSWxuQixPQUFQLEVBQWdCO1VBQ1Z5VSxRQUFReVMsSUFBSWxuQixPQUFKLENBQVkwbkIsSUFBWixDQUFaO2FBQ1FqVCxVQUFVLENBQUMsQ0FBWixHQUFpQixLQUFqQixHQUF5QkEsS0FBaEM7S0FGRixNQUdPO1dBQ0QsSUFBSTFVLElBQUksQ0FBUixFQUFXb2tCLE1BQU0rQyxJQUFJem9CLE1BQXpCLEVBQWlDc0IsSUFBSW9rQixHQUFyQyxFQUEwQ3BrQixHQUExQyxFQUErQztZQUMxQ21uQixJQUFJbm5CLENBQUosTUFBVzJuQixJQUFkLEVBQW9CO2lCQUNYM25CLENBQVA7OzthQUdHLEtBQVA7O0dBakcwQjs7Ozs7OztXQTBHckIsU0FBUzZuQixPQUFULENBQWlCbkgsR0FBakIsRUFBc0I7V0FDdEJyYSxNQUFNdkcsU0FBTixDQUFnQnlHLEtBQWhCLENBQXNCeEcsSUFBdEIsQ0FBMkIyZ0IsR0FBM0IsRUFBZ0MsQ0FBaEMsQ0FBUDtHQTNHNEI7Ozs7Ozs7O2FBb0huQixTQUFTb0gsU0FBVCxDQUFtQjFLLElBQW5CLEVBQXlCQyxNQUF6QixFQUFpQztXQUNwQ0QsSUFBTixFQUFZO1VBQ1BBLFFBQVFDLE1BQVgsRUFBbUI7ZUFDVixJQUFQOzthQUVLRCxLQUFLemdCLFVBQVo7O1dBRUssS0FBUDtHQTNINEI7Ozs7Ozs7YUFtSW5CLFNBQVNvckIsU0FBVCxDQUFtQkMsT0FBbkIsRUFBNEI7UUFDakNDLFFBQVEsRUFBWjtRQUNJQyxRQUFRLEVBRFo7UUFFSUMsVUFBVSxFQUZkO1FBR0lDLFVBQVUsRUFIZDtRQUlJelEsTUFBTW5RLEtBQUttUSxHQUpmO1FBS0lELE1BQU1sUSxLQUFLa1EsR0FMZjs7O1FBUUdzUSxRQUFRdHBCLE1BQVIsS0FBbUIsQ0FBdEIsRUFBeUI7YUFDaEI7ZUFDRXNwQixRQUFRLENBQVIsRUFBV0MsS0FEYjtlQUVFRCxRQUFRLENBQVIsRUFBV0UsS0FGYjtpQkFHSUYsUUFBUSxDQUFSLEVBQVdHLE9BSGY7aUJBSUlILFFBQVEsQ0FBUixFQUFXSTtPQUp0Qjs7O1VBUUkzSCxJQUFOLENBQVd1SCxPQUFYLEVBQW9CLFVBQVNLLEtBQVQsRUFBZ0I7WUFDNUIvcEIsSUFBTixDQUFXK3BCLE1BQU1KLEtBQWpCO1lBQ00zcEIsSUFBTixDQUFXK3BCLE1BQU1ILEtBQWpCO2NBQ1E1cEIsSUFBUixDQUFhK3BCLE1BQU1GLE9BQW5CO2NBQ1E3cEIsSUFBUixDQUFhK3BCLE1BQU1ELE9BQW5CO0tBSkY7O1dBT087YUFDRSxDQUFDelEsSUFBSTlSLEtBQUosQ0FBVTJCLElBQVYsRUFBZ0J5Z0IsS0FBaEIsSUFBeUJ2USxJQUFJN1IsS0FBSixDQUFVMkIsSUFBVixFQUFnQnlnQixLQUFoQixDQUExQixJQUFvRCxDQUR0RDthQUVFLENBQUN0USxJQUFJOVIsS0FBSixDQUFVMkIsSUFBVixFQUFnQjBnQixLQUFoQixJQUF5QnhRLElBQUk3UixLQUFKLENBQVUyQixJQUFWLEVBQWdCMGdCLEtBQWhCLENBQTFCLElBQW9ELENBRnREO2VBR0ksQ0FBQ3ZRLElBQUk5UixLQUFKLENBQVUyQixJQUFWLEVBQWdCMmdCLE9BQWhCLElBQTJCelEsSUFBSTdSLEtBQUosQ0FBVTJCLElBQVYsRUFBZ0IyZ0IsT0FBaEIsQ0FBNUIsSUFBd0QsQ0FINUQ7ZUFJSSxDQUFDeFEsSUFBSTlSLEtBQUosQ0FBVTJCLElBQVYsRUFBZ0I0Z0IsT0FBaEIsSUFBMkIxUSxJQUFJN1IsS0FBSixDQUFVMkIsSUFBVixFQUFnQjRnQixPQUFoQixDQUE1QixJQUF3RDtLQUpuRTtHQTVKNEI7Ozs7Ozs7OztlQTJLakIsU0FBU0UsV0FBVCxDQUFxQkMsU0FBckIsRUFBZ0NDLE1BQWhDLEVBQXdDQyxNQUF4QyxFQUFnRDtXQUNwRDtTQUNGamhCLEtBQUtraEIsR0FBTCxDQUFTRixTQUFTRCxTQUFsQixLQUFnQyxDQUQ5QjtTQUVGL2dCLEtBQUtraEIsR0FBTCxDQUFTRCxTQUFTRixTQUFsQixLQUFnQztLQUZyQztHQTVLNEI7Ozs7Ozs7O1lBd0xwQixTQUFTSSxRQUFULENBQWtCQyxNQUFsQixFQUEwQkMsTUFBMUIsRUFBa0M7UUFDdENscUIsSUFBSWtxQixPQUFPVixPQUFQLEdBQWlCUyxPQUFPVCxPQUFoQztRQUNJcnBCLElBQUkrcEIsT0FBT1QsT0FBUCxHQUFpQlEsT0FBT1IsT0FEaEM7O1dBR081Z0IsS0FBS3NoQixLQUFMLENBQVdocUIsQ0FBWCxFQUFjSCxDQUFkLElBQW1CLEdBQW5CLEdBQXlCNkksS0FBS3VoQixFQUFyQztHQTVMNEI7Ozs7Ozs7O2dCQXFNaEIsU0FBU0MsWUFBVCxDQUFzQkosTUFBdEIsRUFBOEJDLE1BQTlCLEVBQXNDO1FBQzlDbHFCLElBQUk2SSxLQUFLa2hCLEdBQUwsQ0FBU0UsT0FBT1QsT0FBUCxHQUFpQlUsT0FBT1YsT0FBakMsQ0FBUjtRQUNJcnBCLElBQUkwSSxLQUFLa2hCLEdBQUwsQ0FBU0UsT0FBT1IsT0FBUCxHQUFpQlMsT0FBT1QsT0FBakMsQ0FEUjs7UUFHR3pwQixLQUFLRyxDQUFSLEVBQVc7YUFDRjhwQixPQUFPVCxPQUFQLEdBQWlCVSxPQUFPVixPQUF4QixHQUFrQyxDQUFsQyxHQUFzQ3JDLGNBQXRDLEdBQXVERSxlQUE5RDs7V0FFSzRDLE9BQU9SLE9BQVAsR0FBaUJTLE9BQU9ULE9BQXhCLEdBQWtDLENBQWxDLEdBQXNDckMsWUFBdEMsR0FBcURGLGNBQTVEO0dBNU00Qjs7Ozs7Ozs7ZUFxTmpCLFNBQVNvRCxXQUFULENBQXFCTCxNQUFyQixFQUE2QkMsTUFBN0IsRUFBcUM7UUFDNUNscUIsSUFBSWtxQixPQUFPVixPQUFQLEdBQWlCUyxPQUFPVCxPQUFoQztRQUNJcnBCLElBQUkrcEIsT0FBT1QsT0FBUCxHQUFpQlEsT0FBT1IsT0FEaEM7O1dBR081Z0IsS0FBSzBoQixJQUFMLENBQVd2cUIsSUFBSUEsQ0FBTCxHQUFXRyxJQUFJQSxDQUF6QixDQUFQO0dBek40Qjs7Ozs7Ozs7O1lBbU9wQixTQUFTcXFCLFFBQVQsQ0FBa0JwUSxLQUFsQixFQUF5QlEsR0FBekIsRUFBOEI7O1FBRW5DUixNQUFNcmEsTUFBTixJQUFnQixDQUFoQixJQUFxQjZhLElBQUk3YSxNQUFKLElBQWMsQ0FBdEMsRUFBeUM7YUFDaEMsS0FBS3VxQixXQUFMLENBQWlCMVAsSUFBSSxDQUFKLENBQWpCLEVBQXlCQSxJQUFJLENBQUosQ0FBekIsSUFBbUMsS0FBSzBQLFdBQUwsQ0FBaUJsUSxNQUFNLENBQU4sQ0FBakIsRUFBMkJBLE1BQU0sQ0FBTixDQUEzQixDQUExQzs7V0FFSyxDQUFQO0dBeE80Qjs7Ozs7Ozs7ZUFpUGpCLFNBQVNxUSxXQUFULENBQXFCclEsS0FBckIsRUFBNEJRLEdBQTVCLEVBQWlDOztRQUV6Q1IsTUFBTXJhLE1BQU4sSUFBZ0IsQ0FBaEIsSUFBcUI2YSxJQUFJN2EsTUFBSixJQUFjLENBQXRDLEVBQXlDO2FBQ2hDLEtBQUtpcUIsUUFBTCxDQUFjcFAsSUFBSSxDQUFKLENBQWQsRUFBc0JBLElBQUksQ0FBSixDQUF0QixJQUFnQyxLQUFLb1AsUUFBTCxDQUFjNVAsTUFBTSxDQUFOLENBQWQsRUFBd0JBLE1BQU0sQ0FBTixDQUF4QixDQUF2Qzs7V0FFSyxDQUFQO0dBdFA0Qjs7Ozs7OztjQThQbEIsU0FBU3NRLFVBQVQsQ0FBb0JDLFNBQXBCLEVBQStCO1dBQ2xDQSxhQUFhdkQsWUFBYixJQUE2QnVELGFBQWF6RCxjQUFqRDtHQS9QNEI7Ozs7Ozs7Ozs7a0JBMFFkLFNBQVMwRCxjQUFULENBQXdCclYsT0FBeEIsRUFBaUMwTixJQUFqQyxFQUF1Q3hhLEtBQXZDLEVBQThDb2lCLE1BQTlDLEVBQXNEO1FBQ2hFQyxXQUFXLENBQUMsRUFBRCxFQUFLLFFBQUwsRUFBZSxLQUFmLEVBQXNCLEdBQXRCLEVBQTJCLElBQTNCLENBQWY7V0FDTzNFLE1BQU00RSxXQUFOLENBQWtCOUgsSUFBbEIsQ0FBUDs7U0FFSSxJQUFJNWhCLElBQUksQ0FBWixFQUFlQSxJQUFJeXBCLFNBQVMvcUIsTUFBNUIsRUFBb0NzQixHQUFwQyxFQUF5QztVQUNuQ29CLElBQUl3Z0IsSUFBUjs7VUFFRzZILFNBQVN6cEIsQ0FBVCxDQUFILEVBQWdCO1lBQ1Z5cEIsU0FBU3pwQixDQUFULElBQWNvQixFQUFFbUYsS0FBRixDQUFRLENBQVIsRUFBVyxDQUFYLEVBQWNpYSxXQUFkLEVBQWQsR0FBNENwZixFQUFFbUYsS0FBRixDQUFRLENBQVIsQ0FBaEQ7Ozs7VUFJQ25GLEtBQUs4UyxRQUFRb0QsS0FBaEIsRUFBdUI7Z0JBQ2JBLEtBQVIsQ0FBY2xXLENBQWQsSUFBbUIsQ0FBQ29vQixXQUFXLElBQVgsSUFBbUJBLE1BQXBCLEtBQStCcGlCLEtBQS9CLElBQXdDLEVBQTNEOzs7O0dBdlJ3Qjs7Ozs7Ozs7Ozs7a0JBc1NkLFNBQVN1aUIsY0FBVCxDQUF3QnpWLE9BQXhCLEVBQWlDeU4sS0FBakMsRUFBd0M2SCxNQUF4QyxFQUFnRDtRQUMzRCxDQUFDN0gsS0FBRCxJQUFVLENBQUN6TixPQUFYLElBQXNCLENBQUNBLFFBQVFvRCxLQUFsQyxFQUF5Qzs7Ozs7VUFLbkNtSixJQUFOLENBQVdrQixLQUFYLEVBQWtCLFVBQVN2YSxLQUFULEVBQWdCd2EsSUFBaEIsRUFBc0I7WUFDaEMySCxjQUFOLENBQXFCclYsT0FBckIsRUFBOEIwTixJQUE5QixFQUFvQ3hhLEtBQXBDLEVBQTJDb2lCLE1BQTNDO0tBREY7O1FBSUlJLFVBQVVKLFVBQVUsWUFBVzthQUMxQixLQUFQO0tBREY7OztRQUtHN0gsTUFBTWtJLFVBQU4sSUFBb0IsTUFBdkIsRUFBK0I7Y0FDckJDLGFBQVIsR0FBd0JGLE9BQXhCOzs7UUFHQ2pJLE1BQU1vSSxRQUFOLElBQWtCLE1BQXJCLEVBQTZCO2NBQ25CQyxXQUFSLEdBQXNCSixPQUF0Qjs7R0ExVDBCOzs7Ozs7OztlQW9VakIsU0FBU0YsV0FBVCxDQUFxQnBJLEdBQXJCLEVBQTBCO1dBQzlCQSxJQUFJclUsT0FBSixDQUFZLGNBQVosRUFBNEIsVUFBU3ZMLENBQVQsRUFBWTthQUN0Q0EsRUFBRSxDQUFGLEVBQUs4ZSxXQUFMLEVBQVA7S0FESyxDQUFQOztDQXJVSjs7Ozs7Ozs7O0FBbVZBcUUsVUFBUUksZ0JBQWdCNUYsS0FBaEIsR0FBd0I7Ozs7Ozs7O3NCQVFWLEtBUlU7Ozs7Ozs7O1dBZ0JyQixLQWhCcUI7Ozs7Ozs7O2dCQXdCaEIsS0F4QmdCOzs7Ozs7Ozs7O01Ba0MxQixTQUFTZ0ksRUFBVCxDQUFZblQsT0FBWixFQUFxQmhLLElBQXJCLEVBQTJCb2QsT0FBM0IsRUFBb0MyQyxJQUFwQyxFQUEwQztRQUN4Q0MsUUFBUWhnQixLQUFLak8sS0FBTCxDQUFXLEdBQVgsQ0FBWjtVQUNNd2tCLElBQU4sQ0FBV3lKLEtBQVgsRUFBa0IsVUFBU2hnQixJQUFULEVBQWU7WUFDekJtZCxFQUFOLENBQVNuVCxPQUFULEVBQWtCaEssSUFBbEIsRUFBd0JvZCxPQUF4QjtjQUNRMkMsS0FBSy9mLElBQUwsQ0FBUjtLQUZGO0dBcEM0Qjs7Ozs7Ozs7OztPQWtEekIsU0FBU3FkLEdBQVQsQ0FBYXJULE9BQWIsRUFBc0JoSyxJQUF0QixFQUE0Qm9kLE9BQTVCLEVBQXFDMkMsSUFBckMsRUFBMkM7UUFDMUNDLFFBQVFoZ0IsS0FBS2pPLEtBQUwsQ0FBVyxHQUFYLENBQVo7VUFDTXdrQixJQUFOLENBQVd5SixLQUFYLEVBQWtCLFVBQVNoZ0IsSUFBVCxFQUFlO1lBQ3pCcWQsR0FBTixDQUFVclQsT0FBVixFQUFtQmhLLElBQW5CLEVBQXlCb2QsT0FBekI7Y0FDUTJDLEtBQUsvZixJQUFMLENBQVI7S0FGRjtHQXBENEI7Ozs7Ozs7Ozs7V0FrRXJCLFNBQVM2YyxPQUFULENBQWlCN1MsT0FBakIsRUFBMEJpVyxTQUExQixFQUFxQzdDLE9BQXJDLEVBQThDO1FBQ2pEamdCLE9BQU8sSUFBWDs7UUFFSStpQixpQkFBaUIsU0FBU0EsY0FBVCxDQUF3QkMsRUFBeEIsRUFBNEI7VUFDM0NDLFVBQVVELEdBQUduZ0IsSUFBSCxDQUFRK0IsV0FBUixFQUFkO1VBQ0lzZSxZQUFZdEYsZ0JBQWdCSSxpQkFEaEM7VUFFSW1GLFVBQVUxRixNQUFNNEMsS0FBTixDQUFZNEMsT0FBWixFQUFxQixPQUFyQixDQUZkO1VBR0lHLFdBSEo7Ozs7VUFPR0QsV0FBV25qQixLQUFLcWpCLGtCQUFuQixFQUF1Qzs7OztPQUF2QyxNQUlPLElBQUdGLFdBQVdMLGFBQWEvRCxXQUF4QixJQUF1Q2lFLEdBQUdNLE1BQUgsS0FBYyxDQUF4RCxFQUEyRDthQUMzREQsa0JBQUwsR0FBMEIsS0FBMUI7YUFDS0UsWUFBTCxHQUFvQixJQUFwQjtPQUZLLE1BR0EsSUFBR0wsYUFBYUosYUFBYS9ELFdBQTdCLEVBQTBDO2FBQzFDd0UsWUFBTCxHQUFxQlAsR0FBR1EsT0FBSCxLQUFlLENBQWYsSUFBb0I3RixhQUFhOEYsU0FBYixDQUF1QjVFLGFBQXZCLEVBQXNDbUUsRUFBdEMsQ0FBekM7O09BREssTUFHQSxJQUFHLENBQUNHLE9BQUQsSUFBWUwsYUFBYS9ELFdBQTVCLEVBQXlDO2FBQ3pDc0Usa0JBQUwsR0FBMEIsSUFBMUI7YUFDS0UsWUFBTCxHQUFvQixJQUFwQjs7OztVQUlDTCxhQUFhSixhQUFhN0QsU0FBN0IsRUFBd0M7cUJBQ3pCeUUsYUFBYixDQUEyQlosU0FBM0IsRUFBc0NFLEVBQXRDOzs7O1VBSUNoakIsS0FBS3VqQixZQUFSLEVBQXNCO3NCQUNOdmpCLEtBQUsyakIsUUFBTCxDQUFjanJCLElBQWQsQ0FBbUJzSCxJQUFuQixFQUF5QmdqQixFQUF6QixFQUE2QkYsU0FBN0IsRUFBd0NqVyxPQUF4QyxFQUFpRG9ULE9BQWpELENBQWQ7Ozs7O1VBS0NtRCxlQUFlbkUsU0FBbEIsRUFBNkI7YUFDdEJvRSxrQkFBTCxHQUEwQixLQUExQjthQUNLRSxZQUFMLEdBQW9CLEtBQXBCO3FCQUNhdkcsS0FBYjs7OztVQUlDa0csYUFBYUosYUFBYTdELFNBQTdCLEVBQXdDO3FCQUN6QnlFLGFBQWIsQ0FBMkJaLFNBQTNCLEVBQXNDRSxFQUF0Qzs7S0EzQ0o7O1NBK0NLaEQsRUFBTCxDQUFRblQsT0FBUixFQUFpQjBSLFlBQVl1RSxTQUFaLENBQWpCLEVBQXlDQyxjQUF6QztXQUNPQSxjQUFQO0dBckg0Qjs7Ozs7Ozs7Ozs7WUFpSXBCLFNBQVNZLFFBQVQsQ0FBa0JYLEVBQWxCLEVBQXNCRixTQUF0QixFQUFpQ2pXLE9BQWpDLEVBQTBDb1QsT0FBMUMsRUFBbUQ7UUFDdkQyRCxZQUFZLEtBQUtDLFlBQUwsQ0FBa0JiLEVBQWxCLEVBQXNCRixTQUF0QixDQUFoQjtRQUNJZ0Isa0JBQWtCRixVQUFVdnNCLE1BQWhDO1FBQ0krckIsY0FBY04sU0FBbEI7UUFDSWlCLGdCQUFnQkgsVUFBVUksT0FBOUIsQ0FKMkQ7UUFLdkRDLGdCQUFnQkgsZUFBcEI7OztRQUdHaEIsYUFBYS9ELFdBQWhCLEVBQTZCO3NCQUNYSSxXQUFoQjs7S0FERixNQUdPLElBQUcyRCxhQUFhN0QsU0FBaEIsRUFBMkI7c0JBQ2hCQyxhQUFoQjs7O3NCQUdnQjBFLFVBQVV2c0IsTUFBVixJQUFxQjJyQixHQUFHa0IsY0FBSixHQUFzQmxCLEdBQUdrQixjQUFILENBQWtCN3NCLE1BQXhDLEdBQWlELENBQXJFLENBQWhCOzs7Ozs7UUFNQzRzQixnQkFBZ0IsQ0FBaEIsSUFBcUIsS0FBS0UsT0FBN0IsRUFBc0M7b0JBQ3RCbkYsVUFBZDs7OztTQUlHbUYsT0FBTCxHQUFlLElBQWY7OztRQUdJQyxTQUFTLEtBQUtDLGdCQUFMLENBQXNCeFgsT0FBdEIsRUFBK0J1VyxXQUEvQixFQUE0Q1EsU0FBNUMsRUFBdURaLEVBQXZELENBQWI7Ozs7UUFJR0YsYUFBYTdELFNBQWhCLEVBQTJCO2NBQ2pCdm1CLElBQVIsQ0FBYWdsQixTQUFiLEVBQXdCMEcsTUFBeEI7Ozs7UUFJQ0wsYUFBSCxFQUFrQjthQUNURSxhQUFQLEdBQXVCQSxhQUF2QjthQUNPbkIsU0FBUCxHQUFtQmlCLGFBQW5COztjQUVRcnJCLElBQVIsQ0FBYWdsQixTQUFiLEVBQXdCMEcsTUFBeEI7O2FBRU90QixTQUFQLEdBQW1CTSxXQUFuQjthQUNPZ0IsT0FBT0gsYUFBZDs7OztRQUlDYixlQUFlbkUsU0FBbEIsRUFBNkI7Y0FDbkJ2bUIsSUFBUixDQUFhZ2xCLFNBQWIsRUFBd0IwRyxNQUF4Qjs7OztXQUlLRCxPQUFMLEdBQWUsS0FBZjs7O1dBR0tmLFdBQVA7R0ExTDRCOzs7Ozs7Ozt1QkFtTVQsU0FBUzVELG1CQUFULEdBQStCO1FBQzlDcUQsS0FBSjtRQUNHakYsZ0JBQWdCSSxpQkFBbkIsRUFBc0M7VUFDakMxcEIsT0FBT3FwQixZQUFWLEVBQXdCO2dCQUNkLENBQ04sYUFETSxFQUVOLGFBRk0sRUFHTiw0Q0FITSxDQUFSO09BREYsTUFNTztnQkFDRyxDQUNOLGVBRE0sRUFFTixlQUZNLEVBR04sa0RBSE0sQ0FBUjs7S0FSSixNQWNPLElBQUdDLGdCQUFnQlMsY0FBbkIsRUFBbUM7Y0FDaEMsQ0FDTixZQURNLEVBRU4sV0FGTSxFQUdOLHNCQUhNLENBQVI7S0FESyxNQU1BO2NBQ0csQ0FDTixzQkFETSxFQUVOLHFCQUZNLEVBR04sOEJBSE0sQ0FBUjs7O2dCQU9VVSxXQUFaLElBQTJCOEQsTUFBTSxDQUFOLENBQTNCO2dCQUNZN0QsVUFBWixJQUEwQjZELE1BQU0sQ0FBTixDQUExQjtnQkFDWTVELFNBQVosSUFBeUI0RCxNQUFNLENBQU4sQ0FBekI7V0FDT3RFLFdBQVA7R0FwTzRCOzs7Ozs7OztnQkE2T2hCLFNBQVNzRixZQUFULENBQXNCYixFQUF0QixFQUEwQkYsU0FBMUIsRUFBcUM7O1FBRTlDbEYsZ0JBQWdCSSxpQkFBbkIsRUFBc0M7YUFDN0JMLGFBQWFrRyxZQUFiLEVBQVA7Ozs7UUFJQ2IsR0FBR3JDLE9BQU4sRUFBZTtVQUNWbUMsYUFBYTlELFVBQWhCLEVBQTRCO2VBQ25CZ0UsR0FBR3JDLE9BQVY7OztVQUdFMkQsY0FBYyxFQUFsQjtVQUNJdmlCLFNBQVMsR0FBR0EsTUFBSCxDQUFVMGIsTUFBTStDLE9BQU4sQ0FBY3dDLEdBQUdyQyxPQUFqQixDQUFWLEVBQXFDbEQsTUFBTStDLE9BQU4sQ0FBY3dDLEdBQUdrQixjQUFqQixDQUFyQyxDQUFiO1VBQ0lOLFlBQVksRUFBaEI7O1lBRU14SyxJQUFOLENBQVdyWCxNQUFYLEVBQW1CLFVBQVNpZixLQUFULEVBQWdCO1lBQzlCdkQsTUFBTThDLE9BQU4sQ0FBYytELFdBQWQsRUFBMkJ0RCxNQUFNdUQsVUFBakMsTUFBaUQsS0FBcEQsRUFBMkQ7b0JBQy9DdHRCLElBQVYsQ0FBZStwQixLQUFmOztvQkFFVS9wQixJQUFaLENBQWlCK3BCLE1BQU11RCxVQUF2QjtPQUpGOzthQU9PWCxTQUFQOzs7O09BSUNXLFVBQUgsR0FBZ0IsQ0FBaEI7V0FDTyxDQUFDdkIsRUFBRCxDQUFQO0dBelE0Qjs7Ozs7Ozs7OztvQkFvUlosU0FBU3FCLGdCQUFULENBQTBCeFgsT0FBMUIsRUFBbUNpVyxTQUFuQyxFQUE4Q25DLE9BQTlDLEVBQXVEcUMsRUFBdkQsRUFBMkQ7O1FBRXZFd0IsY0FBYzNGLGFBQWxCO1FBQ0dwQixNQUFNNEMsS0FBTixDQUFZMkMsR0FBR25nQixJQUFmLEVBQXFCLE9BQXJCLEtBQWlDOGEsYUFBYThGLFNBQWIsQ0FBdUI3RSxhQUF2QixFQUFzQ29FLEVBQXRDLENBQXBDLEVBQStFO29CQUMvRHBFLGFBQWQ7S0FERixNQUVPLElBQUdqQixhQUFhOEYsU0FBYixDQUF1QjNFLFdBQXZCLEVBQW9Da0UsRUFBcEMsQ0FBSCxFQUE0QztvQkFDbkNsRSxXQUFkOzs7V0FHSztjQUNHckIsTUFBTWlELFNBQU4sQ0FBZ0JDLE9BQWhCLENBREg7aUJBRU04RCxLQUFLQyxHQUFMLEVBRk47Y0FHRzFCLEdBQUczZixNQUhOO2VBSUlzZCxPQUpKO2lCQUtNbUMsU0FMTjttQkFNUTBCLFdBTlI7Z0JBT0t4QixFQVBMOzs7Ozs7c0JBYVcsMEJBQVc7WUFDckIyQixXQUFXLEtBQUtBLFFBQXBCO2lCQUNTQyxtQkFBVCxJQUFnQ0QsU0FBU0MsbUJBQVQsRUFBaEM7aUJBQ1NDLGNBQVQsSUFBMkJGLFNBQVNFLGNBQVQsRUFBM0I7T0FoQkc7Ozs7O3VCQXNCWSwyQkFBVzthQUNyQkYsUUFBTCxDQUFjbEssZUFBZDtPQXZCRzs7Ozs7OztrQkErQk8sc0JBQVc7ZUFDZGlELFVBQVVvSCxVQUFWLEVBQVA7O0tBaENKOztDQTdSSjs7Ozs7Ozs7QUEwVUFuSCxlQUFlQyxnQkFBZ0JELFlBQWhCLEdBQStCOzs7Ozs7WUFNbEMsRUFOa0M7Ozs7OztnQkFZOUIsU0FBU2tHLFlBQVQsR0FBd0I7UUFDaENrQixZQUFZLEVBQWhCOztVQUVNM0wsSUFBTixDQUFXLEtBQUs0TCxRQUFoQixFQUEwQixVQUFTQyxPQUFULEVBQWtCO2dCQUNoQ2h1QixJQUFWLENBQWVndUIsT0FBZjtLQURGO1dBR09GLFNBQVA7R0FsQjBDOzs7Ozs7O2lCQTBCN0IsU0FBU3JCLGFBQVQsQ0FBdUJaLFNBQXZCLEVBQWtDb0MsWUFBbEMsRUFBZ0Q7UUFDMURwQyxhQUFhN0QsU0FBYixJQUEyQjZELGFBQWE3RCxTQUFiLElBQTBCaUcsYUFBYTFCLE9BQWIsS0FBeUIsQ0FBakYsRUFBcUY7YUFDNUUsS0FBS3dCLFFBQUwsQ0FBY0UsYUFBYUMsU0FBM0IsQ0FBUDtLQURGLE1BRU87bUJBQ1FaLFVBQWIsR0FBMEJXLGFBQWFDLFNBQXZDO1dBQ0tILFFBQUwsQ0FBY0UsYUFBYUMsU0FBM0IsSUFBd0NELFlBQXhDOztHQS9Cd0M7Ozs7Ozs7YUF3Q2pDLFNBQVN6QixTQUFULENBQW1CZSxXQUFuQixFQUFnQ3hCLEVBQWhDLEVBQW9DO1FBQzFDLENBQUNBLEdBQUd3QixXQUFQLEVBQW9CO2FBQ1gsS0FBUDs7O1FBR0VZLEtBQUtwQyxHQUFHd0IsV0FBWjtRQUNJM0IsUUFBUSxFQURaOztVQUdNakUsYUFBTixJQUF3QndHLFFBQVFwQyxHQUFHcUMsb0JBQUgsSUFBMkJ6RyxhQUFuQyxDQUF4QjtVQUNNQyxhQUFOLElBQXdCdUcsUUFBUXBDLEdBQUdzQyxvQkFBSCxJQUEyQnpHLGFBQW5DLENBQXhCO1VBQ01DLFdBQU4sSUFBc0JzRyxRQUFRcEMsR0FBR3VDLGtCQUFILElBQXlCekcsV0FBakMsQ0FBdEI7V0FDTytELE1BQU0yQixXQUFOLENBQVA7R0FuRDBDOzs7OztTQXlEckMsU0FBU2dCLFNBQVQsR0FBcUI7U0FDckJSLFFBQUwsR0FBZ0IsRUFBaEI7O0NBMURKOzs7Ozs7OztBQXFFQXRILFlBQVlFLGdCQUFnQjZILFNBQWhCLEdBQTRCOztZQUU1QixFQUY0Qjs7O1dBSzdCLElBTDZCOzs7O1lBUzVCLElBVDRCOzs7V0FZN0IsS0FaNkI7Ozs7Ozs7ZUFtQnpCLFNBQVNDLFdBQVQsQ0FBcUJDLElBQXJCLEVBQTJCQyxTQUEzQixFQUFzQzs7UUFFOUMsS0FBSzNaLE9BQVIsRUFBaUI7Ozs7U0FJWjRaLE9BQUwsR0FBZSxLQUFmOzs7U0FHSzVaLE9BQUwsR0FBZTtZQUNQMFosSUFETztrQkFFRGxJLE1BQU1sUyxNQUFOLENBQWEsRUFBYixFQUFpQnFhLFNBQWpCLENBRkM7aUJBR0YsS0FIRTtxQkFJRSxLQUpGO3VCQUtJLEtBTEo7b0JBTUMsRUFORDtZQU9QLEVBUE87S0FBZjs7U0FVS2pHLE1BQUwsQ0FBWWlHLFNBQVo7R0F0Q29DOzs7Ozs7O1VBOEM5QixTQUFTakcsTUFBVCxDQUFnQmlHLFNBQWhCLEVBQTJCO1FBQzlCLENBQUMsS0FBSzNaLE9BQU4sSUFBaUIsS0FBSzRaLE9BQXpCLEVBQWtDOzs7OztnQkFLdEIsS0FBS0MsZUFBTCxDQUFxQkYsU0FBckIsQ0FBWjs7O1FBR0lELE9BQU8sS0FBSzFaLE9BQUwsQ0FBYTBaLElBQXhCO1FBQ0lJLGNBQWNKLEtBQUszYSxPQUR2Qjs7O1VBSU1vTyxJQUFOLENBQVcsS0FBS2tHLFFBQWhCLEVBQTBCLFNBQVMwRyxjQUFULENBQXdCdkcsT0FBeEIsRUFBaUM7O1VBRXRELENBQUMsS0FBS29HLE9BQU4sSUFBaUJGLEtBQUtNLE9BQXRCLElBQWlDRixZQUFZdEcsUUFBUTNjLElBQXBCLENBQXBDLEVBQStEO2dCQUNyRG1kLE9BQVIsQ0FBZ0J2bkIsSUFBaEIsQ0FBcUIrbUIsT0FBckIsRUFBOEJtRyxTQUE5QixFQUF5Q0QsSUFBekM7O0tBSEosRUFLRyxJQUxIOzs7UUFRRyxLQUFLMVosT0FBUixFQUFpQjtXQUNWQSxPQUFMLENBQWFpYSxTQUFiLEdBQXlCTixTQUF6Qjs7O1FBR0NBLFVBQVU5QyxTQUFWLElBQXVCN0QsU0FBMUIsRUFBcUM7V0FDOUI2RixVQUFMOzs7V0FHS2MsU0FBUCxDQTdCaUM7R0E5Q0c7Ozs7Ozs7Y0FtRjFCLFNBQVNkLFVBQVQsR0FBc0I7OztTQUczQnFCLFFBQUwsR0FBZ0IxSSxNQUFNbFMsTUFBTixDQUFhLEVBQWIsRUFBaUIsS0FBS1UsT0FBdEIsQ0FBaEI7OztTQUdLQSxPQUFMLEdBQWUsSUFBZjtTQUNLNFosT0FBTCxHQUFlLElBQWY7R0ExRm9DOzs7Ozs7Ozs7O3FCQXFHbkIsU0FBU08saUJBQVQsQ0FBMkJwRCxFQUEzQixFQUErQnFELE1BQS9CLEVBQXVDbkYsU0FBdkMsRUFBa0RDLE1BQWxELEVBQTBEQyxNQUExRCxFQUFrRTtRQUMvRWtGLE1BQU0sS0FBS3JhLE9BQWY7UUFDSXNhLFNBQVMsS0FEYjtRQUVJQyxTQUFTRixJQUFJRyxhQUZqQjtRQUdJQyxXQUFXSixJQUFJSyxZQUhuQjs7UUFLR0gsVUFBVXhELEdBQUc0RCxTQUFILEdBQWVKLE9BQU9JLFNBQXRCLEdBQWtDaEosZ0JBQWdCVSxrQkFBL0QsRUFBbUY7ZUFDeEVrSSxPQUFPSCxNQUFoQjtrQkFDWXJELEdBQUc0RCxTQUFILEdBQWVKLE9BQU9JLFNBQWxDO2VBQ1M1RCxHQUFHcUQsTUFBSCxDQUFVdkYsT0FBVixHQUFvQjBGLE9BQU9ILE1BQVAsQ0FBY3ZGLE9BQTNDO2VBQ1NrQyxHQUFHcUQsTUFBSCxDQUFVdEYsT0FBVixHQUFvQnlGLE9BQU9ILE1BQVAsQ0FBY3RGLE9BQTNDO2VBQ1MsSUFBVDs7O1FBR0NpQyxHQUFHRixTQUFILElBQWdCM0QsV0FBaEIsSUFBK0I2RCxHQUFHRixTQUFILElBQWdCNUQsYUFBbEQsRUFBaUU7VUFDM0QySCxlQUFKLEdBQXNCN0QsRUFBdEI7OztRQUdDLENBQUNzRCxJQUFJRyxhQUFMLElBQXNCRixNQUF6QixFQUFpQztlQUN0Qk8sUUFBVCxHQUFvQnJKLE1BQU13RCxXQUFOLENBQWtCQyxTQUFsQixFQUE2QkMsTUFBN0IsRUFBcUNDLE1BQXJDLENBQXBCO2VBQ1MyRixLQUFULEdBQWlCdEosTUFBTTZELFFBQU4sQ0FBZStFLE1BQWYsRUFBdUJyRCxHQUFHcUQsTUFBMUIsQ0FBakI7ZUFDU3BFLFNBQVQsR0FBcUJ4RSxNQUFNa0UsWUFBTixDQUFtQjBFLE1BQW5CLEVBQTJCckQsR0FBR3FELE1BQTlCLENBQXJCOztVQUVJSSxhQUFKLEdBQW9CSCxJQUFJTyxlQUFKLElBQXVCN0QsRUFBM0M7VUFDSTZELGVBQUosR0FBc0I3RCxFQUF0Qjs7O09BR0NnRSxTQUFILEdBQWVOLFNBQVNJLFFBQVQsQ0FBa0J4dkIsQ0FBakM7T0FDRzJ2QixTQUFILEdBQWVQLFNBQVNJLFFBQVQsQ0FBa0JydkIsQ0FBakM7T0FDR3l2QixZQUFILEdBQWtCUixTQUFTSyxLQUEzQjtPQUNHSSxnQkFBSCxHQUFzQlQsU0FBU3pFLFNBQS9CO0dBbklvQzs7Ozs7OzttQkEySXJCLFNBQVM2RCxlQUFULENBQXlCOUMsRUFBekIsRUFBNkI7UUFDeENzRCxNQUFNLEtBQUtyYSxPQUFmO1FBQ0ltYixVQUFVZCxJQUFJZSxVQURsQjtRQUVJQyxTQUFTaEIsSUFBSUosU0FBSixJQUFpQmtCLE9BRjlCOzs7UUFLR3BFLEdBQUdGLFNBQUgsSUFBZ0IzRCxXQUFoQixJQUErQjZELEdBQUdGLFNBQUgsSUFBZ0I1RCxhQUFsRCxFQUFpRTtjQUN2RHlCLE9BQVIsR0FBa0IsRUFBbEI7WUFDTXZILElBQU4sQ0FBVzRKLEdBQUdyQyxPQUFkLEVBQXVCLFVBQVNLLEtBQVQsRUFBZ0I7Z0JBQzdCTCxPQUFSLENBQWdCMXBCLElBQWhCLENBQXFCO21CQUNWK3BCLE1BQU1GLE9BREk7bUJBRVZFLE1BQU1EO1NBRmpCO09BREY7OztRQVFFRyxZQUFZOEIsR0FBRzRELFNBQUgsR0FBZVEsUUFBUVIsU0FBdkM7UUFDSXpGLFNBQVM2QixHQUFHcUQsTUFBSCxDQUFVdkYsT0FBVixHQUFvQnNHLFFBQVFmLE1BQVIsQ0FBZXZGLE9BRGhEO1FBRUlNLFNBQVM0QixHQUFHcUQsTUFBSCxDQUFVdEYsT0FBVixHQUFvQnFHLFFBQVFmLE1BQVIsQ0FBZXRGLE9BRmhEOztTQUlLcUYsaUJBQUwsQ0FBdUJwRCxFQUF2QixFQUEyQnNFLE9BQU9qQixNQUFsQyxFQUEwQ25GLFNBQTFDLEVBQXFEQyxNQUFyRCxFQUE2REMsTUFBN0Q7O1VBRU03VixNQUFOLENBQWF5WCxFQUFiLEVBQWlCO2tCQUNIb0UsT0FERzs7aUJBR0psRyxTQUhJO2NBSVBDLE1BSk87Y0FLUEMsTUFMTzs7Z0JBT0wzRCxNQUFNbUUsV0FBTixDQUFrQndGLFFBQVFmLE1BQTFCLEVBQWtDckQsR0FBR3FELE1BQXJDLENBUEs7YUFRUjVJLE1BQU02RCxRQUFOLENBQWU4RixRQUFRZixNQUF2QixFQUErQnJELEdBQUdxRCxNQUFsQyxDQVJRO2lCQVNKNUksTUFBTWtFLFlBQU4sQ0FBbUJ5RixRQUFRZixNQUEzQixFQUFtQ3JELEdBQUdxRCxNQUF0QyxDQVRJO2FBVVI1SSxNQUFNcUUsUUFBTixDQUFlc0YsUUFBUXpHLE9BQXZCLEVBQWdDcUMsR0FBR3JDLE9BQW5DLENBVlE7Z0JBV0xsRCxNQUFNc0UsV0FBTixDQUFrQnFGLFFBQVF6RyxPQUExQixFQUFtQ3FDLEdBQUdyQyxPQUF0QztLQVhaOztXQWNPcUMsRUFBUDtHQS9Lb0M7Ozs7Ozs7WUF1TDVCLFNBQVNuYSxRQUFULENBQWtCNFcsT0FBbEIsRUFBMkI7O1FBRS9CelUsVUFBVXlVLFFBQVEzQixRQUFSLElBQW9CLEVBQWxDO1FBQ0c5UyxRQUFReVUsUUFBUTNjLElBQWhCLE1BQTBCZCxTQUE3QixFQUF3QztjQUM5QnlkLFFBQVEzYyxJQUFoQixJQUF3QixJQUF4Qjs7OztVQUlJeUksTUFBTixDQUFhcVMsZ0JBQWdCRSxRQUE3QixFQUF1QzlTLE9BQXZDLEVBQWdELElBQWhEOzs7WUFHUXFDLEtBQVIsR0FBZ0JvUyxRQUFRcFMsS0FBUixJQUFpQixJQUFqQzs7O1NBR0tpUyxRQUFMLENBQWNyb0IsSUFBZCxDQUFtQndvQixPQUFuQjs7O1NBR0tILFFBQUwsQ0FBY2lJLElBQWQsQ0FBbUIsVUFBU3h5QixDQUFULEVBQVlELENBQVosRUFBZTtVQUM3QkMsRUFBRXNZLEtBQUYsR0FBVXZZLEVBQUV1WSxLQUFmLEVBQXNCO2VBQ2IsQ0FBQyxDQUFSOztVQUVDdFksRUFBRXNZLEtBQUYsR0FBVXZZLEVBQUV1WSxLQUFmLEVBQXNCO2VBQ2IsQ0FBUDs7YUFFSyxDQUFQO0tBUEY7O1dBVU8sS0FBS2lTLFFBQVo7O0NBbE5KOzs7Ozs7Ozs7Ozs7Ozs7O0FBcU9BMUIsZ0JBQWdCQyxRQUFoQixHQUEyQixVQUFTaFIsT0FBVCxFQUFrQjdCLE9BQWxCLEVBQTJCO01BQ2hEaEwsT0FBTyxJQUFYOzs7Ozs7Ozs7O09BVUs2TSxPQUFMLEdBQWVBLE9BQWY7Ozs7Ozs7T0FPS29aLE9BQUwsR0FBZSxJQUFmOzs7Ozs7OztRQVFNN00sSUFBTixDQUFXcE8sT0FBWCxFQUFvQixVQUFTakwsS0FBVCxFQUFnQitDLElBQWhCLEVBQXNCO1dBQ2pDa0ksUUFBUWxJLElBQVIsQ0FBUDtZQUNRMmEsTUFBTTRFLFdBQU4sQ0FBa0J2ZixJQUFsQixDQUFSLElBQW1DL0MsS0FBbkM7R0FGRjs7T0FLS2lMLE9BQUwsR0FBZXlTLE1BQU1sUyxNQUFOLENBQWFrUyxNQUFNbFMsTUFBTixDQUFhLEVBQWIsRUFBaUJxUyxnQkFBZ0JFLFFBQWpDLENBQWIsRUFBeUQ5UyxXQUFXLEVBQXBFLENBQWY7OztNQUdHLEtBQUtBLE9BQUwsQ0FBYXdjLFFBQWhCLEVBQTBCO1VBQ2xCbEYsY0FBTixDQUFxQixLQUFLelYsT0FBMUIsRUFBbUMsS0FBSzdCLE9BQUwsQ0FBYXdjLFFBQWhELEVBQTBELElBQTFEOzs7Ozs7OztPQVFHQyxpQkFBTCxHQUF5QmpLLFFBQU1rQyxPQUFOLENBQWM3UyxPQUFkLEVBQXVCa1MsV0FBdkIsRUFBb0MsVUFBU2lFLEVBQVQsRUFBYTtRQUNyRWhqQixLQUFLaW1CLE9BQUwsSUFBZ0JqRCxHQUFHRixTQUFILElBQWdCL0QsV0FBbkMsRUFBZ0Q7Z0JBQ3BDMkcsV0FBVixDQUFzQjFsQixJQUF0QixFQUE0QmdqQixFQUE1QjtLQURGLE1BRU8sSUFBR0EsR0FBR0YsU0FBSCxJQUFnQjNELFdBQW5CLEVBQWdDO2dCQUMzQlEsTUFBVixDQUFpQnFELEVBQWpCOztHQUpxQixDQUF6Qjs7Ozs7OztPQWFLMEUsYUFBTCxHQUFxQixFQUFyQjtDQXhERjs7QUEyREE5SixnQkFBZ0JDLFFBQWhCLENBQXlCcGxCLFNBQXpCLEdBQXFDOzs7Ozs7Ozs7Ozs7OztNQWMvQixTQUFTa3ZCLE9BQVQsQ0FBaUJySSxRQUFqQixFQUEyQlcsT0FBM0IsRUFBb0M7UUFDbENqZ0IsT0FBTyxJQUFYO1lBQ01nZ0IsRUFBTixDQUFTaGdCLEtBQUs2TSxPQUFkLEVBQXVCeVMsUUFBdkIsRUFBaUNXLE9BQWpDLEVBQTBDLFVBQVNwZCxJQUFULEVBQWU7V0FDbEQ2a0IsYUFBTCxDQUFtQnp3QixJQUFuQixDQUF3QixFQUFFd29CLFNBQVM1YyxJQUFYLEVBQWlCb2QsU0FBU0EsT0FBMUIsRUFBeEI7S0FERjtXQUdPamdCLElBQVA7R0FuQmlDOzs7Ozs7Ozs7Ozs7Ozs7T0FtQzlCLFNBQVM0bkIsUUFBVCxDQUFrQnRJLFFBQWxCLEVBQTRCVyxPQUE1QixFQUFxQztRQUNwQ2pnQixPQUFPLElBQVg7O1lBRU1rZ0IsR0FBTixDQUFVbGdCLEtBQUs2TSxPQUFmLEVBQXdCeVMsUUFBeEIsRUFBa0NXLE9BQWxDLEVBQTJDLFVBQVNwZCxJQUFULEVBQWU7VUFDcER3SyxRQUFRb1EsTUFBTThDLE9BQU4sQ0FBYyxFQUFFZCxTQUFTNWMsSUFBWCxFQUFpQm9kLFNBQVNBLE9BQTFCLEVBQWQsQ0FBWjtVQUNHNVMsVUFBVSxLQUFiLEVBQW9CO2FBQ2JxYSxhQUFMLENBQW1CcGEsTUFBbkIsQ0FBMEJELEtBQTFCLEVBQWlDLENBQWpDOztLQUhKO1dBTU9yTixJQUFQO0dBNUNpQzs7Ozs7Ozs7O1dBc0QxQixTQUFTNm5CLFlBQVQsQ0FBc0JwSSxPQUF0QixFQUErQm1HLFNBQS9CLEVBQTBDOztRQUU5QyxDQUFDQSxTQUFKLEVBQWU7a0JBQ0QsRUFBWjs7OztRQUlFNU4sUUFBUTRGLGdCQUFnQkcsUUFBaEIsQ0FBeUIrSixXQUF6QixDQUFxQyxPQUFyQyxDQUFaO1VBQ01DLFNBQU4sQ0FBZ0J0SSxPQUFoQixFQUF5QixJQUF6QixFQUErQixJQUEvQjtVQUNNQSxPQUFOLEdBQWdCbUcsU0FBaEI7Ozs7UUFJSS9ZLFVBQVUsS0FBS0EsT0FBbkI7UUFDRzRRLE1BQU1nRCxTQUFOLENBQWdCbUYsVUFBVXZpQixNQUExQixFQUFrQ3dKLE9BQWxDLENBQUgsRUFBK0M7Z0JBQ25DK1ksVUFBVXZpQixNQUFwQjs7O1lBR002VSxhQUFSLENBQXNCRixLQUF0QjtXQUNPLElBQVA7R0F6RWlDOzs7Ozs7Ozs7Ozs7VUFzRjNCLFNBQVNnUSxNQUFULENBQWdCQyxLQUFoQixFQUF1QjtTQUN4QmhDLE9BQUwsR0FBZWdDLEtBQWY7V0FDTyxJQUFQO0dBeEZpQzs7Ozs7Ozs7O1dBa0cxQixTQUFTQyxPQUFULEdBQW1CO1FBQ3RCdnZCLENBQUosRUFBT3d2QixFQUFQOzs7VUFHTTdGLGNBQU4sQ0FBcUIsS0FBS3pWLE9BQTFCLEVBQW1DLEtBQUs3QixPQUFMLENBQWF3YyxRQUFoRCxFQUEwRCxLQUExRDs7O1NBR0k3dUIsSUFBSSxDQUFDLENBQVQsRUFBYXd2QixLQUFLLEtBQUtULGFBQUwsQ0FBbUIsRUFBRS91QixDQUFyQixDQUFsQixHQUE2Qzs7WUFDckN1bkIsR0FBTixDQUFVLEtBQUtyVCxPQUFmLEVBQXdCc2IsR0FBRzFJLE9BQTNCLEVBQW9DMEksR0FBR2xJLE9BQXZDOzs7U0FHR3lILGFBQUwsR0FBcUIsRUFBckI7OztZQUdNeEgsR0FBTixDQUFVLEtBQUtyVCxPQUFmLEVBQXdCMFIsWUFBWVEsV0FBWixDQUF4QixFQUFrRCxLQUFLMEksaUJBQXZEOztXQUVPLElBQVA7O0NBbEhKOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQXVLQSxDQUFDLFVBQVMza0IsSUFBVCxFQUFlO01BQ1ZzbEIsWUFBWSxLQUFoQjs7V0FFU0MsV0FBVCxDQUFxQnJGLEVBQXJCLEVBQXlCMkMsSUFBekIsRUFBK0I7UUFDekJXLE1BQU01SSxVQUFVelIsT0FBcEI7OztRQUdHMFosS0FBSzNhLE9BQUwsQ0FBYXNkLGNBQWIsR0FBOEIsQ0FBOUIsSUFDRHRGLEdBQUdyQyxPQUFILENBQVd0cEIsTUFBWCxHQUFvQnN1QixLQUFLM2EsT0FBTCxDQUFhc2QsY0FEbkMsRUFDbUQ7Ozs7WUFJNUN0RixHQUFHRixTQUFWO1dBQ0svRCxXQUFMO29CQUNjLEtBQVo7OztXQUdHQyxVQUFMOzs7WUFHS2dFLEdBQUd1RixRQUFILEdBQWM1QyxLQUFLM2EsT0FBTCxDQUFhd2QsZUFBM0IsSUFDRGxDLElBQUl4akIsSUFBSixJQUFZQSxJQURkLEVBQ29COzs7O1lBSWhCMmxCLGNBQWNuQyxJQUFJZSxVQUFKLENBQWVoQixNQUFqQzs7O1lBR0dDLElBQUl4akIsSUFBSixJQUFZQSxJQUFmLEVBQXFCO2NBQ2ZBLElBQUosR0FBV0EsSUFBWDtjQUNHNmlCLEtBQUszYSxPQUFMLENBQWEwZCxzQkFBYixJQUF1QzFGLEdBQUd1RixRQUFILEdBQWMsQ0FBeEQsRUFBMkQ7Ozs7Z0JBSXJESSxTQUFTeG9CLEtBQUtraEIsR0FBTCxDQUFTc0UsS0FBSzNhLE9BQUwsQ0FBYXdkLGVBQWIsR0FBK0J4RixHQUFHdUYsUUFBM0MsQ0FBYjt3QkFDWTNILEtBQVosSUFBcUJvQyxHQUFHN0IsTUFBSCxHQUFZd0gsTUFBakM7d0JBQ1k5SCxLQUFaLElBQXFCbUMsR0FBRzVCLE1BQUgsR0FBWXVILE1BQWpDO3dCQUNZN0gsT0FBWixJQUF1QmtDLEdBQUc3QixNQUFILEdBQVl3SCxNQUFuQzt3QkFDWTVILE9BQVosSUFBdUJpQyxHQUFHNUIsTUFBSCxHQUFZdUgsTUFBbkM7OztpQkFHS2pMLFVBQVVvSSxlQUFWLENBQTBCOUMsRUFBMUIsQ0FBTDs7Ozs7WUFLRHNELElBQUlKLFNBQUosQ0FBYzBDLGNBQWQsSUFDQ2pELEtBQUszYSxPQUFMLENBQWE0ZCxjQUFiLElBQ0FqRCxLQUFLM2EsT0FBTCxDQUFhNmQsbUJBQWIsSUFBb0M3RixHQUFHdUYsUUFGM0MsRUFHSzthQUNFSyxjQUFILEdBQW9CLElBQXBCOzs7O1lBSUVFLGdCQUFnQnhDLElBQUlKLFNBQUosQ0FBY2pFLFNBQWxDO1lBQ0dlLEdBQUc0RixjQUFILElBQXFCRSxrQkFBa0I5RixHQUFHZixTQUE3QyxFQUF3RDtjQUNuRHhFLE1BQU11RSxVQUFOLENBQWlCOEcsYUFBakIsQ0FBSCxFQUFvQztlQUMvQjdHLFNBQUgsR0FBZ0JlLEdBQUc1QixNQUFILEdBQVksQ0FBYixHQUFrQjFDLFlBQWxCLEdBQWlDRixjQUFoRDtXQURGLE1BRU87ZUFDRnlELFNBQUgsR0FBZ0JlLEdBQUc3QixNQUFILEdBQVksQ0FBYixHQUFrQjFDLGNBQWxCLEdBQW1DRSxlQUFsRDs7Ozs7WUFLRCxDQUFDeUosU0FBSixFQUFlO2VBQ1JwRSxPQUFMLENBQWFsaEIsT0FBTyxPQUFwQixFQUE2QmtnQixFQUE3QjtzQkFDWSxJQUFaOzs7O2FBSUdnQixPQUFMLENBQWFsaEIsSUFBYixFQUFtQmtnQixFQUFuQjthQUNLZ0IsT0FBTCxDQUFhbGhCLE9BQU9rZ0IsR0FBR2YsU0FBdkIsRUFBa0NlLEVBQWxDOztZQUVJaEIsYUFBYXZFLE1BQU11RSxVQUFOLENBQWlCZ0IsR0FBR2YsU0FBcEIsQ0FBakI7OztZQUdJMEQsS0FBSzNhLE9BQUwsQ0FBYStkLGlCQUFiLElBQWtDL0csVUFBbkMsSUFDQTJELEtBQUszYSxPQUFMLENBQWFnZSxtQkFBYixJQUFvQyxDQUFDaEgsVUFEeEMsRUFDcUQ7YUFDaEQ2QyxjQUFIOzs7O1dBSUMzRixhQUFMO1lBQ0trSixhQUFhcEYsR0FBR2lCLGFBQUgsSUFBb0IwQixLQUFLM2EsT0FBTCxDQUFhc2QsY0FBakQsRUFBaUU7ZUFDMUR0RSxPQUFMLENBQWFsaEIsT0FBTyxLQUFwQixFQUEyQmtnQixFQUEzQjtzQkFDWSxLQUFaOzs7O1dBSUMvRCxTQUFMO29CQUNjLEtBQVo7Ozs7O2tCQUtZSyxRQUFoQixDQUF5QjJKLElBQXpCLEdBQWdDO1VBQ3hCbm1CLElBRHdCO1dBRXZCLEVBRnVCO2FBR3JCdWxCLFdBSHFCO2NBSXBCOzs7Ozs7O3VCQU9TLEVBUFQ7Ozs7Ozs7Ozs7OzhCQWtCZ0IsSUFsQmhCOzs7Ozs7OztzQkEwQlEsQ0ExQlI7Ozs7Ozs7Ozs7MkJBb0NhLEtBcENiOzs7Ozs7Ozt5QkE0Q1csS0E1Q1g7Ozs7Ozs7OztzQkFxRFEsS0FyRFI7Ozs7Ozs7OzsyQkE4RGE7O0dBbEV6QjtDQS9GSixFQW9LSyxNQXBLTDs7Ozs7Ozs7Ozs7Ozs7OztBQW9MRXpLLGdCQUFnQjBCLFFBQWhCLENBQXlCNEosT0FBekIsR0FBbUM7UUFDM0IsU0FEMkI7U0FFMUIsSUFGMEI7V0FHeEIsU0FBU0MsY0FBVCxDQUF3Qm5HLEVBQXhCLEVBQTRCMkMsSUFBNUIsRUFBa0M7U0FDcEMzQixPQUFMLENBQWEsS0FBS2xoQixJQUFsQixFQUF3QmtnQixFQUF4Qjs7Q0FKSjs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQXlCQSxDQUFDLFVBQVNsZ0IsSUFBVCxFQUFlO01BQ1ZzbUIsS0FBSjs7V0FFU0MsV0FBVCxDQUFxQnJHLEVBQXJCLEVBQXlCMkMsSUFBekIsRUFBK0I7UUFDekIzYSxVQUFVMmEsS0FBSzNhLE9BQW5CO1FBQ0lpQixVQUFVeVIsVUFBVXpSLE9BRHhCOztZQUdPK1csR0FBR0YsU0FBVjtXQUNLL0QsV0FBTDtxQkFDZXFLLEtBQWI7OztnQkFHUXRtQixJQUFSLEdBQWVBLElBQWY7Ozs7Z0JBSVE4UCxXQUFXLFlBQVc7Y0FDekIzRyxXQUFXQSxRQUFRbkosSUFBUixJQUFnQkEsSUFBOUIsRUFBb0M7aUJBQzdCa2hCLE9BQUwsQ0FBYWxoQixJQUFiLEVBQW1Ca2dCLEVBQW5COztTQUZJLEVBSUxoWSxRQUFRc2UsV0FKSCxDQUFSOzs7V0FPR3RLLFVBQUw7WUFDS2dFLEdBQUd1RixRQUFILEdBQWN2ZCxRQUFRdWUsYUFBekIsRUFBd0M7dUJBQ3pCSCxLQUFiOzs7O1dBSUNsSyxhQUFMO3FCQUNla0ssS0FBYjs7Ozs7a0JBS1k5SixRQUFoQixDQUF5QmtLLElBQXpCLEdBQWdDO1VBQ3hCMW1CLElBRHdCO1dBRXZCLEVBRnVCO2NBR3BCOzs7Ozs7bUJBTUssR0FOTDs7Ozs7Ozs7cUJBY087S0FqQmE7YUFtQnJCdW1CO0dBbkJYO0NBbkNGLEVBd0RHLE1BeERIOzs7Ozs7Ozs7Ozs7Ozs7QUF1RUF6TCxnQkFBZ0IwQixRQUFoQixDQUF5Qm1LLE9BQXpCLEdBQW1DO1FBQzNCLFNBRDJCO1NBRTFCQyxRQUYwQjtXQUd4QixTQUFTUCxjQUFULENBQXdCbkcsRUFBeEIsRUFBNEIyQyxJQUE1QixFQUFrQztRQUN0QzNDLEdBQUdGLFNBQUgsSUFBZ0I1RCxhQUFuQixFQUFrQztXQUMzQjhFLE9BQUwsQ0FBYSxLQUFLbGhCLElBQWxCLEVBQXdCa2dCLEVBQXhCOzs7Q0FMTjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUE4Q0FwRixnQkFBZ0IwQixRQUFoQixDQUF5QnFLLEtBQXpCLEdBQWlDO1FBQ3pCLE9BRHlCO1NBRXhCLEVBRndCO1lBR3JCOzs7Ozs7cUJBTVMsQ0FOVDs7Ozs7OztxQkFhUyxDQWJUOzs7Ozs7OztvQkFxQlEsR0FyQlI7Ozs7Ozs7O29CQTZCUTtHQWhDYTs7V0FtQ3RCLFNBQVNDLFlBQVQsQ0FBc0I1RyxFQUF0QixFQUEwQjJDLElBQTFCLEVBQWdDO1FBQ3BDM0MsR0FBR0YsU0FBSCxJQUFnQjVELGFBQW5CLEVBQWtDO1VBQzVCeUIsVUFBVXFDLEdBQUdyQyxPQUFILENBQVd0cEIsTUFBekI7VUFDSTJULFVBQVUyYSxLQUFLM2EsT0FEbkI7OztVQUlHMlYsVUFBVTNWLFFBQVE2ZSxlQUFsQixJQUNEbEosVUFBVTNWLFFBQVE4ZSxlQURwQixFQUNxQzs7Ozs7O1VBTWxDOUcsR0FBR2dFLFNBQUgsR0FBZWhjLFFBQVErZSxjQUF2QixJQUNEL0csR0FBR2lFLFNBQUgsR0FBZWpjLFFBQVFnZixjQUR6QixFQUN5Qzs7YUFFbENoRyxPQUFMLENBQWEsS0FBS2xoQixJQUFsQixFQUF3QmtnQixFQUF4QjthQUNLZ0IsT0FBTCxDQUFhLEtBQUtsaEIsSUFBTCxHQUFZa2dCLEdBQUdmLFNBQTVCLEVBQXVDZSxFQUF2Qzs7OztDQXBEUjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUErRUEsQ0FBQyxVQUFTbGdCLElBQVQsRUFBZTtNQUNWbW5CLFdBQVcsS0FBZjs7V0FFU0MsVUFBVCxDQUFvQmxILEVBQXBCLEVBQXdCMkMsSUFBeEIsRUFBOEI7UUFDeEIzYSxVQUFVMmEsS0FBSzNhLE9BQW5CO1FBQ0lpQixVQUFVeVIsVUFBVXpSLE9BRHhCO1FBRUlrZSxPQUFPek0sVUFBVXlJLFFBRnJCO1FBR0lpRSxTQUhKO1FBSUlDLFlBSko7O1lBTU9ySCxHQUFHRixTQUFWO1dBQ0svRCxXQUFMO21CQUNhLEtBQVg7OztXQUdHQyxVQUFMO21CQUNhaUwsWUFBYWpILEdBQUd1RixRQUFILEdBQWN2ZCxRQUFRc2YsY0FBOUM7OztXQUdHckwsU0FBTDtZQUNLLENBQUN4QixNQUFNNEMsS0FBTixDQUFZMkMsR0FBRzJCLFFBQUgsQ0FBWTloQixJQUF4QixFQUE4QixRQUE5QixDQUFELElBQTRDbWdCLEdBQUc5QixTQUFILEdBQWVsVyxRQUFRdWYsVUFBbkUsSUFBaUYsQ0FBQ04sUUFBckYsRUFBK0Y7O3NCQUVqRkUsUUFBUUEsS0FBS2pFLFNBQWIsSUFBMEJsRCxHQUFHNEQsU0FBSCxHQUFldUQsS0FBS2pFLFNBQUwsQ0FBZVUsU0FBcEU7eUJBQ2UsS0FBZjs7O2NBR0d1RCxRQUFRQSxLQUFLcm5CLElBQUwsSUFBYUEsSUFBckIsSUFDQXNuQixhQUFhQSxZQUFZcGYsUUFBUXdmLGlCQURqQyxJQUVEeEgsR0FBR3VGLFFBQUgsR0FBY3ZkLFFBQVF5ZixpQkFGeEIsRUFFMkM7aUJBQ3BDekcsT0FBTCxDQUFhLFdBQWIsRUFBMEJoQixFQUExQjsyQkFDZSxJQUFmOzs7O2NBSUMsQ0FBQ3FILFlBQUQsSUFBaUJyZixRQUFRMGYsU0FBNUIsRUFBdUM7b0JBQzdCNW5CLElBQVIsR0FBZUEsSUFBZjtpQkFDS2toQixPQUFMLENBQWEvWCxRQUFRbkosSUFBckIsRUFBMkJrZ0IsRUFBM0I7Ozs7Ozs7a0JBT1ExRCxRQUFoQixDQUF5QnFMLEdBQXpCLEdBQStCO1VBQ3ZCN25CLElBRHVCO1dBRXRCLEdBRnNCO2FBR3BCb25CLFVBSG9CO2NBSW5COzs7Ozs7O2tCQU9JLEdBUEo7Ozs7Ozs7O3NCQWVRLEVBZlI7Ozs7Ozs7O2lCQXVCRyxJQXZCSDs7Ozs7Ozs7eUJBK0JXLEVBL0JYOzs7Ozs7Ozt5QkF1Q1c7O0dBM0N2QjtDQTNDRixFQXlGRyxLQXpGSDs7Ozs7Ozs7Ozs7Ozs7O0FBd0dBdE0sZ0JBQWdCMEIsUUFBaEIsQ0FBeUJzTCxLQUF6QixHQUFpQztRQUN6QixPQUR5QjtTQUV4QixDQUFDbEIsUUFGdUI7WUFHckI7Ozs7Ozs7OztvQkFTUSxLQVRSOzs7Ozs7OztrQkFpQk07R0FwQmU7V0FzQnRCLFNBQVNtQixZQUFULENBQXNCN0gsRUFBdEIsRUFBMEIyQyxJQUExQixFQUFnQztRQUNwQ0EsS0FBSzNhLE9BQUwsQ0FBYThmLFlBQWIsSUFBNkI5SCxHQUFHd0IsV0FBSCxJQUFrQjVGLGFBQWxELEVBQWlFO1NBQzVEa0csVUFBSDs7OztRQUlDYSxLQUFLM2EsT0FBTCxDQUFhNlosY0FBaEIsRUFBZ0M7U0FDM0JBLGNBQUg7OztRQUdDN0IsR0FBR0YsU0FBSCxJQUFnQjNELFdBQW5CLEVBQWdDO1dBQ3pCNkUsT0FBTCxDQUFhLE9BQWIsRUFBc0JoQixFQUF0Qjs7O0NBakNOOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQTZFQSxDQUFDLFVBQVNsZ0IsSUFBVCxFQUFlO01BQ1ZzbEIsWUFBWSxLQUFoQjs7V0FFUzJDLGdCQUFULENBQTBCL0gsRUFBMUIsRUFBOEIyQyxJQUE5QixFQUFvQztZQUMzQjNDLEdBQUdGLFNBQVY7V0FDSy9ELFdBQUw7b0JBQ2MsS0FBWjs7O1dBR0dDLFVBQUw7O1lBRUtnRSxHQUFHckMsT0FBSCxDQUFXdHBCLE1BQVgsR0FBb0IsQ0FBdkIsRUFBMEI7Ozs7WUFJdEIyekIsaUJBQWlCN3FCLEtBQUtraEIsR0FBTCxDQUFTLElBQUkyQixHQUFHaUksS0FBaEIsQ0FBckI7WUFDSUMsb0JBQW9CL3FCLEtBQUtraEIsR0FBTCxDQUFTMkIsR0FBR21JLFFBQVosQ0FBeEI7Ozs7WUFJR0gsaUJBQWlCckYsS0FBSzNhLE9BQUwsQ0FBYW9nQixpQkFBOUIsSUFDREYsb0JBQW9CdkYsS0FBSzNhLE9BQUwsQ0FBYXFnQixvQkFEbkMsRUFDeUQ7Ozs7O2tCQUsvQ3BmLE9BQVYsQ0FBa0JuSixJQUFsQixHQUF5QkEsSUFBekI7OztZQUdHLENBQUNzbEIsU0FBSixFQUFlO2VBQ1JwRSxPQUFMLENBQWFsaEIsT0FBTyxPQUFwQixFQUE2QmtnQixFQUE3QjtzQkFDWSxJQUFaOzs7YUFHR2dCLE9BQUwsQ0FBYWxoQixJQUFiLEVBQW1Ca2dCLEVBQW5CLEVBekJGOzs7WUE0QktrSSxvQkFBb0J2RixLQUFLM2EsT0FBTCxDQUFhcWdCLG9CQUFwQyxFQUEwRDtlQUNuRHJILE9BQUwsQ0FBYSxRQUFiLEVBQXVCaEIsRUFBdkI7Ozs7WUFJQ2dJLGlCQUFpQnJGLEtBQUszYSxPQUFMLENBQWFvZ0IsaUJBQWpDLEVBQW9EO2VBQzdDcEgsT0FBTCxDQUFhLE9BQWIsRUFBc0JoQixFQUF0QjtlQUNLZ0IsT0FBTCxDQUFhLFdBQVdoQixHQUFHaUksS0FBSCxHQUFXLENBQVgsR0FBZSxJQUFmLEdBQXNCLEtBQWpDLENBQWIsRUFBc0RqSSxFQUF0RDs7OztXQUlDOUQsYUFBTDtZQUNLa0osYUFBYXBGLEdBQUdpQixhQUFILEdBQW1CLENBQW5DLEVBQXNDO2VBQy9CRCxPQUFMLENBQWFsaEIsT0FBTyxLQUFwQixFQUEyQmtnQixFQUEzQjtzQkFDWSxLQUFaOzs7Ozs7a0JBTVUxRCxRQUFoQixDQUF5QmdNLFNBQXpCLEdBQXFDO1VBQzdCeG9CLElBRDZCO1dBRTVCLEVBRjRCO2NBR3pCOzs7Ozs7O3lCQU9XLElBUFg7Ozs7Ozs7OzRCQWVjO0tBbEJXOzthQXFCMUJpb0I7R0FyQlg7Q0F6REYsRUFnRkcsV0FoRkgsRUFrRkY7O0FDL2dFQTs7Ozs7Ozs7Ozs7Ozs7OztBQWdCQSxJQUFNUSxXQUFXLElBQUlDLE9BQUosRUFBakI7QUFDQSxJQUFNQyxXQUFXLElBQUlELE9BQUosRUFBakI7O0FBRUEsU0FBU0UsY0FBVCxDQUF3QjdlLE9BQXhCLEVBQWlDO01BQzNCQSxRQUFROU4sVUFBUixDQUFtQjFILE1BQW5CLEdBQTRCLENBQWhDLEVBQW1DO29CQUNqQndWLE9BQWhCOztTQUVLMGUsU0FBU3YyQixHQUFULENBQWE2WCxPQUFiLENBQVA7OztBQUdGLFNBQVM4ZSxlQUFULENBQXlCOWUsT0FBekIsRUFBa0M7V0FDdkIvVixHQUFULENBQWErVixPQUFiLEVBQXNCLElBQXRCOzs7QUFHRixTQUFTK2UsV0FBVCxDQUFxQi9lLE9BQXJCLEVBQThCOUwsRUFBOUIsRUFBa0M7TUFDNUIsQ0FBQzBxQixTQUFTejJCLEdBQVQsQ0FBYTZYLE9BQWIsQ0FBTCxFQUE0QjthQUNqQi9WLEdBQVQsQ0FBYStWLE9BQWIsRUFBc0IsRUFBdEI7O1dBRU8zVSxHQUFULENBQWEyVSxPQUFiLEVBQXNCNVYsSUFBdEIsQ0FBMkI4SixFQUEzQjs7O0FBR0YsU0FBUzhxQixZQUFULENBQXNCaGYsT0FBdEIsRUFBK0I7TUFDdkIwTyxZQUFZa1EsU0FBU3Z6QixHQUFULENBQWEyVSxPQUFiLEVBQXNCLEVBQXRCLEtBQTZCLEVBQS9DO1dBQ1M1VSxNQUFULENBQWdCNFUsT0FBaEI7WUFDVUosT0FBVixDQUFrQjtXQUFZdEUsVUFBWjtHQUFsQjs7O0FBR0YsQUFBZSxTQUFTMmpCLFlBQVQsQ0FBc0JqZixPQUF0QixFQUE4QztNQUFmOUwsRUFBZSx1RUFBVixZQUFNLEVBQUk7O2NBQy9DOEwsT0FBWixFQUFxQjlMLEVBQXJCOztNQUVJMnFCLGVBQWU3ZSxPQUFmLENBQUosRUFBNkI7aUJBQ2RBLE9BQWI7Ozs7TUFJSWtmLFdBQVcsSUFBSWp6QixnQkFBSixDQUFxQixtQkFBVztvQkFDL0IrVCxPQUFoQjtpQkFDYUEsT0FBYjtHQUZlLENBQWpCO1dBSVM3VCxPQUFULENBQWlCNlQsT0FBakIsRUFBMEIsRUFBQzVULFdBQVcsSUFBWixFQUFrQit5QixlQUFlLElBQWpDLEVBQTFCOzs7ZUFHYSxZQUFNO29CQUNEbmYsT0FBaEI7aUJBQ2FBLE9BQWI7R0FGRjs7O0FDMURGOzs7Ozs7Ozs7Ozs7Ozs7OztBQWlCQSxBQUNBLEFBRUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFrQ0EsSUFBTW9mLGVBQWUsRUFBckI7O0FBRUFBLGFBQWFDLGtCQUFiLEdBQWtDLG1CQUFXOztNQUV2Q0MsY0FBYyxFQUFsQjtNQUNJbmhCLFFBQVFvaEIsUUFBWixFQUFzQjt1R0FJUnBoQixRQUFRcWhCLFNBQVIsSUFBcUIsTUFIakMsa0NBSW1CcmhCLFFBQVFzaEIsV0FBUixJQUF1QixFQUoxQyw0QkFLYXRoQixRQUFRdWhCLFlBQVIsSUFBd0IsRUFMckM7Ozs7TUFZRS9JLFVBQVUsRUFBZDtVQUNRZ0osWUFBUixDQUFxQi9mLE9BQXJCLENBQTZCLFVBQUNnZ0IsS0FBRCxFQUFRcGYsS0FBUixFQUFrQjttRkFJdkNBLFVBQVVyQyxRQUFRMGhCLGtCQUFsQixHQUF1Qyw4QkFBdkMsR0FBd0UsRUFIOUUsb0JBSU0xaEIsUUFBUXdoQixZQUFSLENBQXFCbjFCLE1BQXJCLElBQStCLENBQS9CLEdBQW1DLGlDQUFuQyxHQUF1RSxFQUo3RSw2QkFNTW8xQixLQU5OO0dBREY7OztNQWFJblYsS0FBSyxFQUFUO01BQ01xVixpQkFBaUIsU0FBakJBLGNBQWlCLEdBQU07UUFDdkJyVixHQUFHc1YsTUFBSCxDQUFVQyxjQUFkLEVBQThCO1NBQ3pCRCxNQUFILENBQVV0a0IsbUJBQVYsQ0FBOEIsZUFBOUIsRUFBK0NnUCxHQUFHc1YsTUFBSCxDQUFVQyxjQUF6RDs7O1dBR0t6Z0IsSUFBUCxDQUFZa0wsRUFBWixFQUFnQjdLLE9BQWhCLENBQXdCO2FBQU8sT0FBTzZLLEdBQUc3VixHQUFILENBQWQ7S0FBeEI7U0FDSyxJQUFMOztRQUVJdUosUUFBUXVELE9BQVIsWUFBMkI1VSxRQUEvQixFQUF5QztjQUMvQjRVLE9BQVI7O0dBVEo7O0tBYUdxZSxNQUFILEdBQVlsekIsU0FBU21CLGFBQVQsQ0FBdUIsa0JBQXZCLENBQVo7S0FDRyt4QixNQUFILENBQVVqdEIsU0FBVixzTEFLVXFMLFFBQVE4aEIsS0FBUixJQUFpQixFQUwzQixrRkFRVTloQixRQUFRK2hCLE9BQVIsSUFBbUIvaEIsUUFBUWdpQixXQVJyQyxxQkFTVWIsV0FUViwwRkFhVW5oQixRQUFRd2hCLFlBQVIsQ0FBcUJuMUIsTUFBckIsSUFBK0IsQ0FBL0IsR0FBbUMsaUNBQW5DLEdBQXVFLEVBYmpGLGlDQWVVbXNCLE9BZlY7ZUFvQmFsTSxHQUFHc1YsTUFBaEI7OztHQUdDLElBQUQsRUFBTyxPQUFQLEVBQWdCLFdBQWhCLEVBQ0duZ0IsT0FESCxDQUNXO1dBQUt6QixRQUFRckosY0FBUixDQUF1QjVNLENBQXZCLEtBQTZCdWlCLEdBQUdzVixNQUFILENBQVVwd0IsWUFBVixDQUF1QnpILENBQXZCLEVBQTBCaVcsUUFBUWpXLENBQVIsQ0FBMUIsQ0FBbEM7R0FEWDtNQUVJaVcsUUFBUXVCLFFBQVosRUFBc0I7U0FDZndILFdBQUwsQ0FBaUJ1RCxHQUFHc1YsTUFBcEIsRUFBNEI1aEIsUUFBUXVCLFFBQXBDOzs7TUFHSXFOLFdBQVd0TyxLQUFLcU8sS0FBTCxFQUFqQjs7O01BR0kzTyxRQUFRb2hCLFFBQVIsSUFBb0JwaEIsUUFBUWlpQixhQUFoQyxFQUErQztPQUMxQ0MsS0FBSCxHQUFXNVYsR0FBR3NWLE1BQUgsQ0FBVWhaLGFBQVYsQ0FBd0IsYUFBeEIsQ0FBWDtPQUNHc1osS0FBSCxDQUFTQyxVQUFULEdBQXNCLGlCQUFTO1VBQ3pCblYsTUFBTW9WLE9BQU4sS0FBa0IsRUFBdEIsRUFBMEI7V0FDckJSLE1BQUgsQ0FBVXBxQixJQUFWLEdBQ0cwSCxJQURILENBQ1EsWUFBTTtjQUNOb04sRUFBSixFQUFRO2dCQUNBK1YsZUFBZS9WLEdBQUc0VixLQUFILENBQVNudEIsS0FBOUI7O29CQUVRb0ksUUFBUixDQUFpQmtsQixZQUFqQjtxQkFDU2xrQixPQUFULENBQWlCa2tCLFlBQWpCOztTQU5OOztLQUZKOzs7O0tBZ0JDQyxNQUFILEdBQVloVyxHQUFHc1YsTUFBSCxDQUFVaFosYUFBVixDQUF3QixzQkFBeEIsQ0FBWjtPQUNLbUQsU0FBTCxDQUFlTyxHQUFHc1YsTUFBSCxDQUFVNWpCLGdCQUFWLENBQTJCLHNCQUEzQixDQUFmLEVBQW1FeUQsT0FBbkUsQ0FBMkUsVUFBQzhnQixhQUFELEVBQWdCbGdCLEtBQWhCLEVBQTBCO2tCQUNyRm1nQixPQUFkLEdBQXdCLFlBQU07U0FDdkJaLE1BQUgsQ0FBVXBxQixJQUFWLEdBQ0cwSCxJQURILENBQ1EsWUFBTTtZQUNOb04sRUFBSixFQUFRO2NBQ0ErVixlQUFlcmlCLFFBQVFvaEIsUUFBUixHQUFtQjlVLEdBQUc0VixLQUFILENBQVNudEIsS0FBNUIsR0FBb0NzTixLQUF6RDthQUNHdWYsTUFBSCxDQUFVaHZCLE1BQVY7O2tCQUVRdUssUUFBUixDQUFpQmtsQixZQUFqQjttQkFDU2xrQixPQUFULENBQWlCa2tCLFlBQWpCOztPQVBOO0tBREo7O09BYUdDLE1BQUgsQ0FBVTd4QixXQUFWLENBQXNCOHhCLGFBQXRCO0dBZEY7OztNQWtCSXZpQixRQUFReWlCLFVBQVosRUFBd0I7T0FDbkJiLE1BQUgsQ0FBVWEsVUFBVixHQUF1QixJQUF2QjtPQUNHYixNQUFILENBQVVDLGNBQVYsR0FBMkIsWUFBTTttQkFDbEIsWUFBTTtXQUNkRCxNQUFILENBQVVodkIsTUFBVjs7T0FERjtVQUlNeXZCLGVBQWVyaUIsUUFBUW9oQixRQUFSLEdBQW1CLElBQW5CLEdBQTBCLENBQUMsQ0FBaEQ7Y0FDUWprQixRQUFSLENBQWlCa2xCLFlBQWpCO2VBQ1MveUIsTUFBVCxDQUFnQit5QixZQUFoQjtLQVBGO09BU0dULE1BQUgsQ0FBVTcwQixnQkFBVixDQUEyQixlQUEzQixFQUE0Q3VmLEdBQUdzVixNQUFILENBQVVDLGNBQXRELEVBQXNFLEtBQXRFOzs7O1dBSU9hLElBQVQsQ0FBY2p5QixXQUFkLENBQTBCNmIsR0FBR3NWLE1BQTdCO1VBQ1FlLE9BQVIsQ0FBZ0JyVyxHQUFHc1YsTUFBbkI7ZUFDYSxZQUFNO09BQ2RBLE1BQUgsQ0FBVWdCLElBQVYsR0FDRzFqQixJQURILENBQ1EsWUFBTTtVQUNOb04sR0FBRzRWLEtBQUgsSUFBWWxpQixRQUFRb2hCLFFBQXBCLElBQWdDcGhCLFFBQVE2aUIsU0FBNUMsRUFBdUQ7V0FDbERYLEtBQUgsQ0FBU1ksS0FBVDs7S0FITjtHQURGOztTQVNPbFUsU0FBU0MsT0FBaEI7Q0E1SUY7O0FBK0lBLElBQU1rVSxzQkFBc0IsU0FBdEJBLG1CQUFzQixDQUFDaEIsT0FBRCxFQUEwQztNQUFoQy9oQixPQUFnQyx1RUFBdEIsRUFBc0I7TUFBbEI4UyxRQUFrQix1RUFBUCxFQUFPOztTQUM3RGlQLE9BQVAsS0FBbUIsUUFBbkIsR0FBK0IvaEIsUUFBUStoQixPQUFSLEdBQWtCQSxPQUFqRCxHQUE2RC9oQixVQUFVK2hCLE9BQXZFO01BQ0ksQ0FBQy9oQixRQUFRK2hCLE9BQVQsSUFBb0IsQ0FBQy9oQixRQUFRZ2lCLFdBQWpDLEVBQThDO1VBQ3RDLElBQUk1MEIsS0FBSixDQUFVLHNDQUFWLENBQU47OztNQUdFNFMsUUFBUXJKLGNBQVIsQ0FBdUIsY0FBdkIsS0FBMENxSixRQUFRckosY0FBUixDQUF1QixhQUF2QixDQUE5QyxFQUFxRjtZQUMzRTZxQixZQUFSLEdBQXVCeGhCLFFBQVF3aEIsWUFBUixJQUF3QnhoQixRQUFRZ2pCLFdBQXZEO1FBQ0ksQ0FBQ2h2QixNQUFNaXZCLE9BQU4sQ0FBY2pqQixRQUFRd2hCLFlBQXRCLENBQUwsRUFBMEM7Y0FDaENBLFlBQVIsR0FBdUIsQ0FBQ3hoQixRQUFRd2hCLFlBQVIsSUFBd0IsRUFBekIsQ0FBdkI7Ozs7U0FJR2xoQixLQUFLQyxNQUFMLENBQVk7YUFDTjthQUFTMmlCLEtBQVQ7S0FETTtjQUVMO2FBQVNBLEtBQVQ7S0FGSztrQkFHRCxDQUFDLElBQUQsQ0FIQzt3QkFJSyxDQUpMO2VBS0osU0FMSTtnQkFNSDtHQU5ULEVBT0ZwUSxRQVBFLEVBT1E5UyxPQVBSLENBQVA7Q0FiRjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUF5RkFpaEIsYUFBYWtDLEtBQWIsR0FBcUIsVUFBQ3BCLE9BQUQsRUFBVS9oQixPQUFWLEVBQXNCO1lBQy9CK2lCLG9CQUFvQmhCLE9BQXBCLEVBQTZCL2hCLE9BQTdCLEVBQXNDO1dBQ3ZDO0dBREMsQ0FBVjs7U0FJT2loQixhQUFhQyxrQkFBYixDQUFnQ2xoQixPQUFoQyxDQUFQO0NBTEY7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQTZDQWloQixhQUFhbUMsT0FBYixHQUF1QixVQUFDckIsT0FBRCxFQUFVL2hCLE9BQVYsRUFBc0I7WUFDakMraUIsb0JBQW9CaEIsT0FBcEIsRUFBNkIvaEIsT0FBN0IsRUFBc0M7a0JBQ2hDLENBQUMsUUFBRCxFQUFXLElBQVgsQ0FEZ0M7d0JBRTFCLENBRjBCO1dBR3ZDO0dBSEMsQ0FBVjs7U0FNT2loQixhQUFhQyxrQkFBYixDQUFnQ2xoQixPQUFoQyxDQUFQO0NBUEY7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBNkRBaWhCLGFBQWFvQyxNQUFiLEdBQXNCLFVBQUN0QixPQUFELEVBQVUvaEIsT0FBVixFQUFzQjtZQUNoQytpQixvQkFBb0JoQixPQUFwQixFQUE2Qi9oQixPQUE3QixFQUFzQztXQUN2QyxPQUR1QztjQUVwQyxJQUZvQztlQUduQyxJQUhtQzttQkFJL0I7R0FKUCxDQUFWOztTQU9PaWhCLGFBQWFDLGtCQUFiLENBQWdDbGhCLE9BQWhDLENBQVA7Q0FSRixDQVdBOztBQ3JaQTs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFpQkEsSUFBTXVMLFNBQVMsU0FBVEEsTUFBUyxHQUFNOzs7Ozs7Ozs7TUFTYjhDLE1BQU07Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztpQkF5REcsS0F6REg7Ozs7Ozs7Ozs7OztnQkFxRUUsc0JBQVc7YUFDZCxLQUFLaVYsV0FBTCxFQUFQO0tBdEVROzs7Ozs7Ozs7Ozs7aUJBbUZHLHVCQUFXO2FBQ2YsQ0FBQyxLQUFLQyxVQUFMLEVBQVI7S0FwRlE7O1dBdUZILGlCQUFXO2VBQ1B4MkIsZ0JBQVQsQ0FBMEIsa0JBQTFCLEVBQThDLEtBQUt5MkIsbUJBQUwsQ0FBeUJ6MUIsSUFBekIsQ0FBOEIsSUFBOUIsQ0FBOUMsRUFBbUYsS0FBbkY7O1VBRUksaUJBQWlCekUsTUFBckIsRUFBNkI7ZUFDcEJ5RCxnQkFBUCxDQUF3QixtQkFBeEIsRUFBNkMsS0FBSzAyQixvQkFBTCxDQUEwQjExQixJQUExQixDQUErQixJQUEvQixDQUE3QyxFQUFtRixLQUFuRjtPQURGLE1BRU87ZUFDRWhCLGdCQUFQLENBQXdCLFFBQXhCLEVBQWtDLEtBQUsyMkIsU0FBTCxDQUFlMzFCLElBQWYsQ0FBb0IsSUFBcEIsQ0FBbEMsRUFBNkQsS0FBN0Q7OztXQUdHdTFCLFdBQUwsR0FBbUIsWUFBVztlQUNyQmg2QixPQUFPa2QsV0FBUCxHQUFxQmxkLE9BQU9xNkIsVUFBbkM7T0FERjs7YUFJTyxJQUFQO0tBcEdROzt5QkF1R1csK0JBQVc7V0FDekJDLGdDQUFMO1dBQ0tDLElBQUwsQ0FBVSxRQUFWLEVBQW9CLEVBQUNOLFlBQVksS0FBS0EsVUFBTCxFQUFiLEVBQXBCO0tBekdROztzQ0E0R3dCLDRDQUFXO1VBQ3JDQSxhQUFhajZCLE9BQU9xNkIsVUFBUCxHQUFvQnI2QixPQUFPa2QsV0FBOUM7O1VBRUksRUFBRSxpQkFBaUJsZCxNQUFuQixDQUFKLEVBQWdDO2FBQ3pCZzZCLFdBQUwsR0FBbUIsWUFBVztpQkFDckJoNkIsT0FBT2tkLFdBQVAsR0FBcUJsZCxPQUFPcTZCLFVBQW5DO1NBREY7T0FERixNQUlPLElBQUlyNkIsT0FBT3c2QixXQUFQLEdBQXFCLEdBQXJCLEtBQTZCLENBQWpDLEVBQW9DO2FBQ3BDUixXQUFMLEdBQW1CLFlBQVc7aUJBQ3JCbnVCLEtBQUtraEIsR0FBTCxDQUFTL3NCLE9BQU93NkIsV0FBUCxHQUFxQixHQUE5QixNQUF1QyxDQUF2QyxHQUEyQ1AsVUFBM0MsR0FBd0QsQ0FBQ0EsVUFBaEU7U0FERjtPQURLLE1BSUE7YUFDQUQsV0FBTCxHQUFtQixZQUFXO2lCQUNyQm51QixLQUFLa2hCLEdBQUwsQ0FBUy9zQixPQUFPdzZCLFdBQVAsR0FBcUIsR0FBOUIsTUFBdUMsRUFBdkMsR0FBNENQLFVBQTVDLEdBQXlELENBQUNBLFVBQWpFO1NBREY7O0tBeEhNOzswQkE4SFksZ0NBQVc7OztVQUN6QkEsYUFBYSxLQUFLRCxXQUFMLEVBQW5COzs7O1VBSUlTLFFBQVEsQ0FBWjtVQUNNQyxXQUFXQyxZQUFZLFlBQU07OztZQUczQjkzQixJQUFJN0MsT0FBT3E2QixVQUFqQjtZQUNNejRCLElBQUk1QixPQUFPa2QsV0FBakI7O1lBRUsrYyxjQUFjcDNCLEtBQUtqQixDQUFwQixJQUNBLENBQUNxNEIsVUFBRCxJQUFlcDNCLEtBQUtqQixDQUR4QixFQUM0QjtnQkFDckIyNEIsSUFBTCxDQUFVLFFBQVYsRUFBb0IsRUFBQ04sWUFBWUEsVUFBYixFQUFwQjt3QkFDY1MsUUFBZDtTQUhGLE1BSU8sSUFBSUQsVUFBVSxFQUFkLEVBQWtCO2dCQUNsQkYsSUFBTCxDQUFVLFFBQVYsRUFBb0IsRUFBQ04sWUFBWUEsVUFBYixFQUFwQjt3QkFDY1MsUUFBZDs7T0FaYSxFQWNkLEVBZGMsQ0FBakI7S0FwSVE7OztlQXNKQyxxQkFBVztXQUNmSCxJQUFMLENBQVUsUUFBVixFQUFvQixFQUFDTixZQUFZLEtBQUtBLFVBQUwsRUFBYixFQUFwQjs7R0F2Sko7O2FBMkpXVyxLQUFYLENBQWlCN1YsR0FBakI7O1NBRU9BLEdBQVA7Q0F0S0Y7O0FBeUtBLGtCQUFlOUMsU0FBUzRZLEtBQVQsRUFBZjs7QUMxTEE7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBaUJBLEFBRUEsSUFBTUMsbUJBQW1CLElBQUlDLFVBQUosRUFBekI7QUFDQUQsaUJBQWlCRSxRQUFqQixHQUE0QixLQUE1Qjs7QUFFQSxJQUFNQyxTQUFTLFNBQVRBLE1BQVMsR0FBTTttQkFDRkQsUUFBakIsR0FBNEIsSUFBNUI7bUJBQ2lCVCxJQUFqQixDQUFzQixNQUF0QjtDQUZGOztBQUtBLElBQU1XLFNBQVMsU0FBVEEsTUFBUyxHQUFNO21CQUNGRixRQUFqQixHQUE0QixLQUE1QjttQkFDaUJULElBQWpCLENBQXNCLE1BQXRCO0NBRkY7O0FBS0EsSUFBTVksYUFBYSxTQUFiQSxVQUFhLEdBQU07TUFDbkIsT0FBT0MsUUFBUCxLQUFvQixXQUF4QixFQUFxQzs7YUFFMUJDLE1BQVQsR0FBa0JKLE1BQWxCO2FBQ1NLLE1BQVQsR0FBa0JKLE1BQWxCO3FCQUNpQlgsSUFBakIsQ0FBc0IsTUFBdEIsRUFBOEIsRUFBQ2dCLFNBQVNILFNBQVNJLFNBQW5CLEVBQTlCOztXQUVPLElBQVA7R0FORixNQU9PLElBQUksT0FBT2pyQixRQUFRd2EsT0FBZixLQUEyQixXQUEzQixJQUEwQyxPQUFPeGEsUUFBUXdhLE9BQVIsQ0FBZ0JxUSxRQUF2QixLQUFvQyxXQUFsRixFQUErRjs7V0FFN0YzM0IsZ0JBQVAsQ0FBd0IscUJBQXhCLEVBQStDdzNCLE1BQS9DO1dBQ094M0IsZ0JBQVAsQ0FBd0IscUJBQXhCLEVBQStDeTNCLE1BQS9DO3FCQUNpQlgsSUFBakIsQ0FBc0IsTUFBdEIsRUFBOEIsRUFBQ2dCLFNBQVNockIsUUFBUXdhLE9BQVIsQ0FBZ0JxUSxRQUFoQixDQUF5QkksU0FBbkMsRUFBOUI7O1dBRU8sSUFBUDs7O1NBR0ssS0FBUDtDQWpCRjs7QUFvQkEsSUFBTUMsZ0JBQWdCLFNBQWhCQSxhQUFnQixHQUFNO09BQ3JCcndCLElBQUwsQ0FBVSx1REFBVjtDQURGOztBQUlBaEcsU0FBUzNCLGdCQUFULENBQTBCLGFBQTFCLEVBQXlDLFlBQU07TUFDekMsQ0FBQzAzQixZQUFMLEVBQW1CO1FBQ2IvMUIsU0FBU2thLGFBQVQsQ0FBdUIsdUJBQXZCLEtBQ0ZsYSxTQUFTa2EsYUFBVCxDQUF1Qix5QkFBdkIsQ0FERixFQUNxRDs7OztxQkFJcENvTSxFQUFqQixHQUFzQitQLGFBQXRCOztDQVBKLEVBV0E7O0FDbkVBOzs7Ozs7Ozs7Ozs7Ozs7OztBQWlCQSxBQUdBLElBQU16a0IsU0FBTztVQUNILEtBREc7O3FCQUdRLEtBSFI7O3VCQUtVLCtCQUFNO1dBQ3BCMGtCLGlCQUFMLEdBQXlCLElBQXpCOztRQUVJdHJCLFNBQVNnRCxTQUFULEVBQUosRUFBMEI7YUFDakJoTyxRQUFQLENBQWdCM0IsZ0JBQWhCLENBQWlDLGFBQWpDLEVBQWdELFlBQU07ZUFDL0NrNEIsTUFBTCxHQUFjLElBQWQ7T0FERixFQUVHLEtBRkg7S0FERixNQUlPO2FBQ0FBLE1BQUwsR0FBYyxJQUFkOztHQWJPOzt5QkFpQlksK0JBQVNsdkIsRUFBVCxFQUFhO1FBQzlCLENBQUMsS0FBS2l2QixpQkFBVixFQUE2QjtZQUNyQixJQUFJNTNCLEtBQUosQ0FBVSxpREFBVixDQUFOOzs7UUFHRSxLQUFLNjNCLE1BQVQsRUFBaUI7YUFDUnYyQixRQUFQLENBQWdCM0IsZ0JBQWhCLENBQWlDLFlBQWpDLEVBQStDZ0osRUFBL0MsRUFBbUQsS0FBbkQ7S0FERixNQUVPO2FBQ0VySCxRQUFQLENBQWdCM0IsZ0JBQWhCLENBQWlDLGFBQWpDLEVBQWdELFlBQVc7ZUFDbEQyQixRQUFQLENBQWdCM0IsZ0JBQWhCLENBQWlDLFlBQWpDLEVBQStDZ0osRUFBL0MsRUFBbUQsS0FBbkQ7T0FERjs7R0F6Qk87OzRCQStCZSxrQ0FBU0EsRUFBVCxFQUFhO1FBQ2pDLENBQUMsS0FBS2l2QixpQkFBVixFQUE2QjtZQUNyQixJQUFJNTNCLEtBQUosQ0FBVSxpREFBVixDQUFOOzs7UUFHRSxLQUFLNjNCLE1BQVQsRUFBaUI7YUFDUnYyQixRQUFQLENBQWdCNE8sbUJBQWhCLENBQW9DLFlBQXBDLEVBQWtEdkgsRUFBbEQsRUFBc0QsS0FBdEQ7S0FERixNQUVPO2FBQ0VySCxRQUFQLENBQWdCM0IsZ0JBQWhCLENBQWlDLGFBQWpDLEVBQWdELFlBQVc7ZUFDbEQyQixRQUFQLENBQWdCNE8sbUJBQWhCLENBQW9DLFlBQXBDLEVBQWtEdkgsRUFBbEQsRUFBc0QsS0FBdEQ7T0FERjs7O0NBdkNOO0FBNkNBek0sT0FBT3lELGdCQUFQLENBQXdCLGtCQUF4QixFQUE0QztTQUFNdVQsT0FBS2tqQixtQkFBTCxFQUFOO0NBQTVDLEVBQThFLEtBQTlFOztBQUVBLElBQU0wQixvQkFBb0I7VUFDaEIsRUFEZ0I7O1VBR2YsWUFBTTtRQUNUdjNCLElBQUksQ0FBUjtXQUNPO2FBQU1BLEdBQU47S0FBUDtHQUZNLEVBSGdCOztPQVFuQixhQUFTa1UsT0FBVCxFQUFrQm9ULE9BQWxCLEVBQTJCO1FBQzFCcFQsUUFBUXNqQixPQUFSLENBQWdCQyx5QkFBcEIsRUFBK0M7V0FDeEN4eUIsTUFBTCxDQUFZaVAsT0FBWjs7UUFFSWpMLEtBQUtpTCxRQUFRc2pCLE9BQVIsQ0FBZ0JDLHlCQUFoQixHQUE0Q0Ysa0JBQWtCRyxNQUFsQixFQUF2RDtTQUNLQyxNQUFMLENBQVkxdUIsRUFBWixJQUFrQnFlLE9BQWxCO0dBYnNCOztVQWdCaEIsZ0JBQVNwVCxPQUFULEVBQWtCO1FBQ3BCQSxRQUFRc2pCLE9BQVIsQ0FBZ0JDLHlCQUFwQixFQUErQzthQUN0QyxLQUFLRSxNQUFMLENBQVl6akIsUUFBUXNqQixPQUFSLENBQWdCQyx5QkFBNUIsQ0FBUDthQUNPdmpCLFFBQVFzakIsT0FBUixDQUFnQkMseUJBQXZCOztHQW5Cb0I7O09BdUJuQixhQUFTdmpCLE9BQVQsRUFBa0I7UUFDakIsQ0FBQ0EsUUFBUXNqQixPQUFSLENBQWdCQyx5QkFBckIsRUFBZ0Q7YUFDdkNwdUIsU0FBUDs7O1FBR0lKLEtBQUtpTCxRQUFRc2pCLE9BQVIsQ0FBZ0JDLHlCQUEzQjs7UUFFSSxDQUFDLEtBQUtFLE1BQUwsQ0FBWTF1QixFQUFaLENBQUwsRUFBc0I7WUFDZCxJQUFJeEosS0FBSixFQUFOOzs7V0FHSyxLQUFLazRCLE1BQUwsQ0FBWTF1QixFQUFaLENBQVA7R0FsQ3NCOztPQXFDbkIsYUFBU2lMLE9BQVQsRUFBa0I7UUFDakIsQ0FBQ0EsUUFBUXNqQixPQUFiLEVBQXNCO2FBQ2IsS0FBUDs7O1FBR0l2dUIsS0FBS2lMLFFBQVFzakIsT0FBUixDQUFnQkMseUJBQTNCOztXQUVPLENBQUMsQ0FBQyxLQUFLRSxNQUFMLENBQVkxdUIsRUFBWixDQUFUOztDQTVDSjs7SUFnRE0ydUI7d0NBQ1U7OztTQUNQQyxVQUFMLEdBQWtCLEtBQWxCO1NBQ0tDLGNBQUwsR0FBc0IsS0FBS0MsU0FBTCxDQUFlMzNCLElBQWYsQ0FBb0IsSUFBcEIsQ0FBdEI7Ozs7Ozs7Ozs7NkJBT087VUFDSCxDQUFDLEtBQUt5M0IsVUFBVixFQUFzQjtlQUNmRyxxQkFBTCxDQUEyQixLQUFLRixjQUFoQzthQUNLRCxVQUFMLEdBQWtCLElBQWxCOzs7Ozs7Ozs7OzhCQU9NO1VBQ0osS0FBS0EsVUFBVCxFQUFxQjtlQUNkSSx3QkFBTCxDQUE4QixLQUFLSCxjQUFuQzthQUNLRCxVQUFMLEdBQWtCLEtBQWxCOzs7Ozs7Ozs7O2dEQU93QjtVQUNwQnhZLFFBQVF0ZSxTQUFTb3VCLFdBQVQsQ0FBcUIsT0FBckIsQ0FBZDtZQUNNQyxTQUFOLENBQWdCLFlBQWhCLEVBQThCLElBQTlCLEVBQW9DLElBQXBDO2VBQ1M3UCxhQUFULENBQXVCRixLQUF2Qjs7OztnQ0FHVTtXQUNMNlksOEJBQUw7Ozs7Ozs7Ozs7a0NBT1loa0IsU0FBUzFFLFVBQVU7VUFDM0IsRUFBRTBFLG1CQUFtQi9PLFdBQXJCLENBQUosRUFBdUM7Y0FDL0IsSUFBSTFGLEtBQUosQ0FBVSw0Q0FBVixDQUFOOzs7VUFHRSxFQUFFK1Asb0JBQW9CeE8sUUFBdEIsQ0FBSixFQUFxQztjQUM3QixJQUFJdkIsS0FBSixDQUFVLDBDQUFWLENBQU47OztVQUdJNm5CLFVBQVU7bUJBQ0g5WCxRQURHO2tCQUVKMEUsT0FGSTs7aUJBSUwsbUJBQVc7NEJBQ0FqUCxNQUFsQixDQUF5QmlQLE9BQXpCO1NBTFk7O3FCQVFELHFCQUFTMUUsUUFBVCxFQUFtQjtlQUN6QnVvQixTQUFMLEdBQWlCdm9CLFFBQWpCO1NBVFk7O2dCQVlOLGtCQUFXOzRCQUNDclIsR0FBbEIsQ0FBc0IrVixPQUF0QixFQUErQixJQUEvQjtTQWJZOzttQkFnQkgscUJBQVc7aUJBQ2JxakIsa0JBQWtCaDRCLEdBQWxCLENBQXNCMlUsT0FBdEIsTUFBbUMsSUFBMUM7U0FqQlk7O2lCQW9CTCxtQkFBVzs0QkFDQWpQLE1BQWxCLENBQXlCaVAsT0FBekI7ZUFDSzZqQixTQUFMLEdBQWlCLEtBQUtJLFFBQUwsR0FBZ0IsSUFBakM7O09BdEJKOztjQTBCUTlJLE1BQVI7O2FBRU8vSCxPQUFQOzs7O3FEQUcrQjtVQUN6QjhRLE9BQU8sS0FBS0MsWUFBTCxFQUFiOztVQUVNbmtCLFVBQVUsS0FBS29rQix1QkFBTCxDQUE2QkYsSUFBN0IsQ0FBaEI7O1VBRUk5USxVQUFVaVEsa0JBQWtCaDRCLEdBQWxCLENBQXNCMlUsT0FBdEIsQ0FBZDtjQUNRNmpCLFNBQVIsQ0FBa0I1SSxZQUFZamIsT0FBWixDQUFsQjs7ZUFFU2liLFdBQVQsQ0FBcUJqYixPQUFyQixFQUE4QjtlQUNyQjtvQkFDS0EsT0FETDs2QkFFYyw2QkFBVztnQkFDeEJtSixTQUFTLEtBQUs4YSxRQUFMLENBQWN4N0IsVUFBM0I7O21CQUVPMGdCLE1BQVAsRUFBZTt3QkFDSGthLGtCQUFrQmg0QixHQUFsQixDQUFzQjhkLE1BQXRCLENBQVY7a0JBQ0lpSyxPQUFKLEVBQWE7dUJBQ0pBLFFBQVF5USxTQUFSLENBQWtCNUksWUFBWTlSLE1BQVosQ0FBbEIsQ0FBUDs7dUJBRU9BLE9BQU8xZ0IsVUFBaEI7OztTQVZOOzs7Ozs7Ozs7O21DQW9CVzthQUNONDdCLFdBQVd4M0IsU0FBU2cwQixJQUFwQixDQUFQOztlQUVTd0QsVUFBVCxDQUFvQnJrQixPQUFwQixFQUE2QjtZQUNyQmtrQixPQUFPO21CQUNGbGtCLE9BREU7b0JBRUQ3TixNQUFNdkcsU0FBTixDQUFnQnNKLE1BQWhCLENBQXVCdkQsS0FBdkIsQ0FBNkIsRUFBN0IsRUFBaUMyeUIsUUFBUXRrQixRQUFRa0MsUUFBaEIsRUFBMEI5SCxHQUExQixDQUE4QixVQUFTbXFCLFlBQVQsRUFBdUI7O2dCQUUxRkEsYUFBYW5oQixLQUFiLENBQW1Cb2hCLE9BQW5CLEtBQStCLE1BQW5DLEVBQTJDO3FCQUNsQyxFQUFQOzs7Z0JBR0VELGFBQWFyaUIsUUFBYixDQUFzQjFYLE1BQXRCLEtBQWlDLENBQWpDLElBQXNDLENBQUM2NEIsa0JBQWtCbDdCLEdBQWxCLENBQXNCbzhCLFlBQXRCLENBQTNDLEVBQWdGO3FCQUN2RSxFQUFQOzs7Z0JBR0l2bEIsU0FBU3FsQixXQUFXRSxZQUFYLENBQWY7O2dCQUVJdmxCLE9BQU9rRCxRQUFQLENBQWdCMVgsTUFBaEIsS0FBMkIsQ0FBM0IsSUFBZ0MsQ0FBQzY0QixrQkFBa0JsN0IsR0FBbEIsQ0FBc0I2VyxPQUFPZ0IsT0FBN0IsQ0FBckMsRUFBNEU7cUJBQ25FLEVBQVA7OzttQkFHSyxDQUFDaEIsTUFBRCxDQUFQO1dBaEJ5QyxDQUFqQztTQUZaOztZQXNCSSxDQUFDcWtCLGtCQUFrQmw3QixHQUFsQixDQUFzQis3QixLQUFLbGtCLE9BQTNCLENBQUwsRUFBMEM7Ozs7OztpQ0FDbEJra0IsS0FBS2hpQixRQUEzQiw4SEFBcUM7a0JBQTFCdWlCLE9BQTBCOztrQkFDL0JwQixrQkFBa0JsN0IsR0FBbEIsQ0FBc0JzOEIsUUFBUXprQixPQUE5QixDQUFKLEVBQTRDO3VCQUNuQ3lrQixPQUFQOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O2VBS0NQLElBQVA7OztlQUdPSSxPQUFULENBQWlCOXRCLE1BQWpCLEVBQXlCO1lBQ2pCd0ksU0FBUyxFQUFmO2FBQ0ssSUFBSWxULElBQUksQ0FBYixFQUFnQkEsSUFBSTBLLE9BQU9oTSxNQUEzQixFQUFtQ3NCLEdBQW5DLEVBQXdDO2lCQUMvQjFCLElBQVAsQ0FBWW9NLE9BQU8xSyxDQUFQLENBQVo7O2VBRUtrVCxNQUFQOzs7Ozs7Ozs7Ozs0Q0FRb0JrbEIsTUFBTTthQUNyQnpRLEtBQUt5USxJQUFMLENBQVA7O2VBRVN6USxJQUFULENBQWN2SyxJQUFkLEVBQW9CO1lBQ2RBLEtBQUtoSCxRQUFMLENBQWMxWCxNQUFkLEtBQXlCLENBQTdCLEVBQWdDO2lCQUN2QjBlLEtBQUtsSixPQUFaOzs7WUFHRWtKLEtBQUtoSCxRQUFMLENBQWMxWCxNQUFkLEtBQXlCLENBQTdCLEVBQWdDO2lCQUN2QmlwQixLQUFLdkssS0FBS2hILFFBQUwsQ0FBYyxDQUFkLENBQUwsQ0FBUDs7O2VBR0tnSCxLQUFLaEgsUUFBTCxDQUFjOUgsR0FBZCxDQUFrQixVQUFTc3FCLFNBQVQsRUFBb0I7aUJBQ3BDQSxVQUFVMWtCLE9BQWpCO1NBREssRUFFSlIsTUFGSSxDQUVHLFVBQVNtbEIsSUFBVCxFQUFlQyxLQUFmLEVBQXNCO2NBQzFCLENBQUNELElBQUwsRUFBVzttQkFDRkMsS0FBUDs7O2NBR0lDLFFBQVFqc0IsU0FBU25SLE9BQU91a0IsZ0JBQVAsQ0FBd0IyWSxJQUF4QixFQUE4QixFQUE5QixFQUFrQ0csTUFBM0MsRUFBbUQsRUFBbkQsQ0FBZDtjQUNNQyxTQUFTbnNCLFNBQVNuUixPQUFPdWtCLGdCQUFQLENBQXdCNFksS0FBeEIsRUFBK0IsRUFBL0IsRUFBbUNFLE1BQTVDLEVBQW9ELEVBQXBELENBQWY7O2NBRUksQ0FBQ3JmLE1BQU1vZixLQUFOLENBQUQsSUFBaUIsQ0FBQ3BmLE1BQU1zZixNQUFOLENBQXRCLEVBQXFDO21CQUM1QkYsUUFBUUUsTUFBUixHQUFpQkosSUFBakIsR0FBd0JDLEtBQS9COzs7Z0JBR0ksSUFBSXI1QixLQUFKLENBQVUsMENBQVYsQ0FBTjtTQWRLLEVBZUosSUFmSSxDQUFQOzs7Ozs7O0FBb0JOLGlDQUFlLElBQUltNEIsMEJBQUosRUFBZjs7QUN0VEE7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBaUJBLElBQU1zQixhQUFjLFlBQVc7TUFDekJsNUIsSUFBSSxDQUFSO1NBQ08sWUFBVztXQUNUQSxHQUFQO0dBREY7Q0FGaUIsRUFBbkI7Ozs7Ozs7OztJQWFxQm01QjtzQkFFTztRQUFkOW1CLE9BQWMsdUVBQUosRUFBSTs7O1NBQ25CK21CLFNBQUwsR0FBaUIsRUFBakI7U0FDS0MsU0FBTCxHQUFpQixFQUFqQjtTQUNLQyxJQUFMLEdBQVlqbkIsUUFBUWtuQixHQUFSLElBQWUsWUFBVyxFQUF0Qzs7Ozs7Ozs7Ozs7OzJCQVFLOzs7VUFDQ0MsU0FBUyxTQUFUQSxNQUFTLEdBQU07Y0FDZEMsT0FBTCxDQUFhRCxNQUFiO09BREY7YUFHT3Z3QixFQUFQLEdBQVlpd0IsWUFBWjtXQUNLRSxTQUFMLENBQWU5NkIsSUFBZixDQUFvQms3QixNQUFwQjtXQUNLRixJQUFMLENBQVUsV0FBWUUsT0FBT3Z3QixFQUE3Qjs7YUFFT3V3QixNQUFQOzs7OzRCQUdNcHhCLElBQUk7VUFDSnNNLFFBQVEsS0FBSzBrQixTQUFMLENBQWVuNUIsT0FBZixDQUF1Qm1JLEVBQXZCLENBQWQ7VUFDSXNNLFVBQVUsQ0FBQyxDQUFmLEVBQWtCO2NBQ1YsSUFBSWpWLEtBQUosQ0FBVSxtREFBVixDQUFOOzs7V0FHRzI1QixTQUFMLENBQWV6a0IsTUFBZixDQUFzQkQsS0FBdEIsRUFBNkIsQ0FBN0I7V0FDSzRrQixJQUFMLENBQVUsYUFBYWx4QixHQUFHYSxFQUExQjs7V0FFS3l3QixrQkFBTDs7Ozt5Q0FHbUI7YUFDWixDQUFDLEtBQUtDLFFBQUwsRUFBRCxJQUFvQixLQUFLTixTQUFMLENBQWUzNkIsTUFBZixHQUF3QixDQUFuRCxFQUFzRDthQUMvQzI2QixTQUFMLENBQWU1M0IsS0FBZjs7Ozs7Ozs7Ozs7OytCQVNPK04sVUFBVTtVQUNmLEVBQUVBLG9CQUFvQnhPLFFBQXRCLENBQUosRUFBcUM7Y0FDN0IsSUFBSXZCLEtBQUosQ0FBVSx3Q0FBVixDQUFOOzs7VUFHRSxLQUFLazZCLFFBQUwsRUFBSixFQUFxQjthQUNkTixTQUFMLENBQWUvNkIsSUFBZixDQUFvQmtSLFFBQXBCO09BREYsTUFFTzs7Ozs7Ozs7Ozs7K0JBUUU7YUFDRixLQUFLNHBCLFNBQUwsQ0FBZTE2QixNQUFmLEdBQXdCLENBQS9COzs7Ozs7QUM3Rko7Ozs7Ozs7Ozs7Ozs7Ozs7QUFnQkEsQUFDQSxBQUVBO0FBQ0EsU0FBU2s3QixRQUFULE9BQStDMWtCLElBQS9DLEVBQXFEO01BQWxDM0UsSUFBa0MsUUFBbENBLElBQWtDO01BQTVCOE0sTUFBNEIsUUFBNUJBLE1BQTRCO3lCQUFwQm1FLE1BQW9CO01BQXBCQSxNQUFvQiwrQkFBWCxFQUFXOzthQUMxQ3JRLGdCQUFULENBQTBCWixJQUExQixFQUFnQ2dCLElBQWhDLENBQXFDLGdCQUFRO1FBQ3JDc29CLGNBQWNsbkIsS0FBS3pRLGFBQUwsQ0FBbUJvTixLQUFLdEQsSUFBTCxFQUFuQixDQUFwQjtXQUNPbEosV0FBUCxDQUFtQisyQixXQUFuQjs7U0FFS0EsV0FBTDtHQUpGOzs7QUFRRixTQUFTQyxVQUFULENBQW9CNWxCLE9BQXBCLEVBQTZCO01BQ3ZCQSxRQUFRNmxCLFFBQVIsWUFBNEIvNEIsUUFBaEMsRUFBMEM7WUFDaEMrNEIsUUFBUjtHQURGLE1BRU87WUFDRzkwQixNQUFSOzs7O0FBSUosSUFBYSswQixVQUFiOzs7O3NCQUljQyxNQUFaLEVBQW9CQyxRQUFwQixFQUE4Qjs7O1NBQ3ZCQyxPQUFMLEdBQWVGLGtCQUFrQmo1QixRQUFsQixHQUE2Qmk1QixNQUE3QixHQUFzQ0wsUUFBckQ7U0FDS1EsU0FBTCxHQUFpQkYsb0JBQW9CbDVCLFFBQXBCLEdBQStCazVCLFFBQS9CLEdBQTBDSixVQUEzRDs7Ozs7Ozs7Ozs7Ozs7Ozs7O2dDQXVCZ0M1a0IsSUE3QnBDLEVBNkIwQztVQUFsQzNFLElBQWtDLFNBQWxDQSxJQUFrQztVQUE1QjhNLE1BQTRCLFNBQTVCQSxNQUE0QjsrQkFBcEJtRSxNQUFvQjtVQUFwQkEsTUFBb0IsZ0NBQVgsRUFBVzs7V0FDakMyWSxPQUFMLENBQWEsRUFBQzVwQixVQUFELEVBQU84TSxjQUFQLEVBQWVtRSxjQUFmLEVBQWIsRUFBcUMsdUJBQWU7WUFDOUMsRUFBRXFZLHVCQUF1QnIyQixPQUF6QixDQUFKLEVBQXVDO2dCQUMvQi9ELE1BQU0sNkNBQU4sQ0FBTjs7O2FBR0dvNkIsV0FBTDtPQUxGOzs7OzJCQVNLQSxXQXZDVCxFQXVDc0I7VUFDZCxFQUFFQSx1QkFBdUJyMkIsT0FBekIsQ0FBSixFQUF1QztjQUMvQi9ELE1BQU0sNkNBQU4sQ0FBTjs7O1dBR0cyNkIsU0FBTCxDQUFlUCxXQUFmOzs7O3NCQWhDaUJ6eEIsRUFackIsRUFZeUI7VUFDakIsRUFBRUEsY0FBY3BILFFBQWhCLENBQUosRUFBK0I7Y0FDdkJ2QixNQUFNLGlEQUFOLENBQU47O1dBRUcwNkIsT0FBTCxHQUFlL3hCLEVBQWY7S0FoQko7d0JBbUJ1QjthQUNaLEtBQUsreEIsT0FBWjs7Ozs7O0FBNEJKLEFBQU8sSUFBTUUsb0JBQW9CLElBQUlMLFVBQUosRUFBMUI7O0FBRVAsQUFBTyxJQUFNTSxvQkFBb0IsSUFBSU4sVUFBSixDQUMvQixpQkFBc0M5a0IsSUFBdEMsRUFBNEM7TUFBbEMzRSxJQUFrQyxTQUFsQ0EsSUFBa0M7TUFBNUI4TSxNQUE0QixTQUE1QkEsTUFBNEI7MkJBQXBCbUUsTUFBb0I7TUFBcEJBLE1BQW9CLGdDQUFYLEVBQVc7O01BQ3BDdE4sVUFBVXZCLEtBQUt6USxhQUFMLENBQW1CcU8sS0FBS3ZFLElBQUwsRUFBbkIsQ0FBaEI7U0FDT2xKLFdBQVAsQ0FBbUJvUixPQUFuQjs7T0FFS0EsT0FBTDtDQUw2QixFQU8vQjRsQixVQVArQixDQUExQjs7QUN2RlA7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBaUJBLElBRXFCUzs7Ozs7Ozs7MEJBUU87UUFBZGxvQixPQUFjLHVFQUFKLEVBQUk7OztTQUNuQnFQLE1BQUwsR0FBY3JQLFFBQVFxUCxNQUFSLElBQWtCLFFBQWhDO1NBQ0szTyxRQUFMLEdBQWdCVixRQUFRVSxRQUFSLElBQW9CLENBQXBDO1NBQ0tDLEtBQUwsR0FBYVgsUUFBUVcsS0FBUixJQUFpQixDQUE5Qjs7Ozs7NkJBRzZCO1VBQWpCd25CLFVBQWlCLHVFQUFKLEVBQUk7O1VBQ3ZCQyxtQkFBbUIsSUFBekI7VUFDTUMsY0FBYyxTQUFkQSxXQUFjLEdBQVc7eUJBQ1o3MEIsS0FBakIsQ0FBdUIsSUFBdkIsRUFBNkJILFNBQTdCO2FBQ0trTixNQUFMLENBQVksSUFBWixFQUFrQjRuQixVQUFsQjtPQUZGOztrQkFLWTE2QixTQUFaLEdBQXdCLEtBQUtBLFNBQTdCO2FBQ080NkIsV0FBUDs7Ozs7O0FDekNKOzs7Ozs7Ozs7Ozs7Ozs7OztBQWlCQSxBQUNBLEFBQ0EsQUFDQSxBQUNBLEFBQ0EsQUFDQSxBQUNBLEFBQ0EsQUFDQSxBQUNBLEFBQ0EsQUFDQSxBQUNBLEFBQ0EsQUFDQSxBQUVBOzs7Ozs7O0FBT0EsSUFBTUMsUUFBTSxFQUFaOztBQUVBQSxNQUFJQyxLQUFKLEdBQVlqb0IsSUFBWjtBQUNBZ29CLE1BQUlFLE1BQUosR0FBYUEsTUFBYjtBQUNBRixNQUFJRywyQkFBSixHQUFrQ0MsMEJBQWxDO0FBQ0FKLE1BQUlLLFNBQUosR0FBZ0Joc0IsVUFBaEI7QUFDQTJyQixNQUFJMVYsZUFBSixHQUFzQkEsZUFBdEI7QUFDQTBWLE1BQUk1dUIsUUFBSixHQUFlQSxRQUFmO0FBQ0E0dUIsTUFBSWxFLGdCQUFKLEdBQXVCQSxnQkFBdkI7QUFDQWtFLE1BQUludEIsdUJBQUosR0FBOEJ5dEIsdUJBQTlCO0FBQ0FOLE1BQUl4RSxXQUFKLEdBQWtCQSxXQUFsQjtBQUNBd0UsTUFBSXJILFlBQUosR0FBbUJBLFlBQW5CO0FBQ0FxSCxNQUFJTyx1QkFBSixHQUE4QkMsS0FBOUI7QUFDQVIsTUFBSVMsVUFBSixHQUFpQnpiLFNBQWpCO0FBQ0FnYixNQUFJVSxTQUFKLEdBQWdCbEMsUUFBaEI7QUFDQXdCLE1BQUlXLGFBQUosR0FBb0JuSSxZQUFwQjtBQUNBd0gsTUFBSU4saUJBQUosR0FBd0JBLGlCQUF4QjtBQUNBTSxNQUFJWCxVQUFKLEdBQWlCQSxVQUFqQjtBQUNBVyxNQUFJWSxhQUFKLEdBQW9CaEIsWUFBcEI7O0FBRUFJLE1BQUlhLFVBQUosR0FBaUIsSUFBSXJDLFFBQUosRUFBakI7O0FBRUF3QixNQUFJNXVCLFFBQUosQ0FBYTB2QixNQUFiLENBQW9CLENBQUM5L0IsT0FBTysvQixRQUFQLENBQWdCQyxNQUFoQixDQUF1QjN1QixLQUF2QixDQUE2QixtQkFBN0IsS0FBcUQsRUFBdEQsRUFBMEQsQ0FBMUQsQ0FBcEI7O0FBRUE0dUI7Ozs7Ozs7Ozs7OztBQVlBakIsTUFBSWtCLE9BQUosR0FBYyxZQUFNO1NBQ1gsQ0FBQ2xCLE1BQUlhLFVBQUosQ0FBZTdCLFFBQWYsRUFBUjtDQURGOzs7Ozs7Ozs7Ozs7QUFjQWdCLE1BQUk1ckIsU0FBSixHQUFnQjRyQixNQUFJNXVCLFFBQUosQ0FBYWdELFNBQTdCOzs7Ozs7Ozs7Ozs7QUFZQTRyQixNQUFJbUIsS0FBSixHQUFZLG9CQUFZO01BQ2xCbkIsTUFBSWtCLE9BQUosRUFBSixFQUFtQjs7R0FBbkIsTUFFTztVQUNETCxVQUFKLENBQWVPLFVBQWYsQ0FBMEJ2c0IsUUFBMUI7O0NBSko7Ozs7Ozs7Ozs7OztBQWtCQW1yQixNQUFJcUIsa0NBQUosR0FBeUMsVUFBU0MsUUFBVCxFQUFtQjtRQUN0REMsK0JBQUosQ0FBb0NDLFdBQXBDLENBQWdERixRQUFoRDtDQURGOzs7Ozs7Ozs7QUFXQXRCLE1BQUl5Qiw4QkFBSixHQUFxQyxZQUFXO1FBQzFDdEIsMkJBQUosQ0FBZ0N1QixPQUFoQztDQURGOzs7Ozs7Ozs7QUFXQTFCLE1BQUkyQiw2QkFBSixHQUFvQyxZQUFXO1FBQ3pDeEIsMkJBQUosQ0FBZ0N6TCxNQUFoQztDQURGOzs7Ozs7Ozs7QUFZQXNMLE1BQUk0Qix1QkFBSixHQUE4QixZQUFNO01BQzlCNUIsTUFBSWtCLE9BQUosRUFBSixFQUFtQjtVQUNYLElBQUlwOEIsS0FBSixDQUFVLDBEQUFWLENBQU47O1FBRUV1N0IsU0FBSixDQUFjL3JCLE1BQWQsQ0FBcUJHLGlCQUFyQixHQUF5QyxJQUF6QztDQUpGOzs7Ozs7Ozs7QUFjQXVyQixNQUFJNkIsd0JBQUosR0FBK0IsWUFBTTtNQUMvQjdCLE1BQUlrQixPQUFKLEVBQUosRUFBbUI7VUFDWCxJQUFJcDhCLEtBQUosQ0FBVSwwREFBVixDQUFOOztRQUVFdTdCLFNBQUosQ0FBYy9yQixNQUFkLENBQXFCRyxpQkFBckIsR0FBeUMsS0FBekM7Q0FKRjs7Ozs7Ozs7O0FBY0F1ckIsTUFBSThCLGlCQUFKLEdBQXdCLFlBQU07UUFDeEJ6QixTQUFKLENBQWMvckIsTUFBZCxDQUFxQjZELGtCQUFyQixHQUEwQyxJQUExQztDQURGOzs7Ozs7Ozs7QUFXQTZuQixNQUFJK0IsZ0JBQUosR0FBdUIsWUFBTTtRQUN2QjFCLFNBQUosQ0FBYy9yQixNQUFkLENBQXFCNkQsa0JBQXJCLEdBQTBDLEtBQTFDO0NBREY7O0FBSUE2bkIsTUFBSWdDLGdCQUFKLEdBQXVCLFlBQU07UUFDdkIzQixTQUFKLENBQWMvckIsTUFBZCxDQUFxQmtTLGdCQUFyQixHQUF3QyxJQUF4QztDQURGOztBQUlBd1osTUFBSWlDLGVBQUosR0FBc0IsWUFBTTtRQUN0QjVCLFNBQUosQ0FBYy9yQixNQUFkLENBQXFCa1MsZ0JBQXJCLEdBQXdDLEtBQXhDO0NBREY7Ozs7Ozs7OztBQVdBd1osTUFBSWtDLGtCQUFKLEdBQXlCbEMsTUFBSVMsVUFBSixDQUFlaUIsT0FBeEM7Ozs7Ozs7OztBQVNBMUIsTUFBSW1DLGlCQUFKLEdBQXdCbkMsTUFBSVMsVUFBSixDQUFlL0wsTUFBdkM7Ozs7Ozs7Ozs7QUFVQXNMLE1BQUlvQyxvQkFBSixHQUEyQix1QkFBZTtRQUNwQ0QsaUJBQUo7UUFDSS93QixRQUFKLENBQWEwdkIsTUFBYixDQUFvQnVCLGVBQWUsS0FBbkM7O1FBRUlwQyxLQUFKLENBQVV4YyxTQUFWLENBQW9CcmQsU0FBU3NQLGdCQUFULENBQTBCLEdBQTFCLENBQXBCLEVBQ0d5RCxPQURILENBQ1csVUFBU0ksT0FBVCxFQUFrQjtRQUNyQkEsUUFBUW1DLE9BQVIsQ0FBZ0JwSyxXQUFoQixPQUFrQyxRQUF0QyxFQUFnRDtjQUN0Q2d4QixlQUFSO0tBREYsTUFFTyxJQUFJL29CLFFBQVFtQyxPQUFSLENBQWdCckosS0FBaEIsQ0FBc0IsUUFBdEIsQ0FBSixFQUFxQztZQUN0Q291QixVQUFKLENBQWU4QixPQUFmLENBQXVCaHBCLE9BQXZCLEVBQWdDLElBQWhDO1VBQ0lBLFFBQVFtQyxPQUFSLENBQWdCcEssV0FBaEIsT0FBa0MsWUFBdEMsRUFBb0Q7Z0JBQzFDa3hCLGVBQVI7OztHQVBSO0NBSkY7Ozs7Ozs7O0FBdUJBeEMsTUFBSXlDLHNCQUFKLEdBQTZCLFVBQVM3c0IsSUFBVCxFQUE2QjtNQUFkOEIsT0FBYyx1RUFBSixFQUFJOzs7TUFFcEQsQ0FBQzlCLElBQUwsRUFBVztVQUNILElBQUk5USxLQUFKLENBQVUsMkJBQVYsQ0FBTjs7O1NBR0trN0IsTUFBSUssU0FBSixDQUFjN3BCLGdCQUFkLENBQStCWixJQUEvQixFQUFxQ2dCLElBQXJDLENBQTBDLGdCQUFRO1dBQ2hEakMsS0FBS3RDLEtBQUwsQ0FBVyxnQkFBWCxjQUF1Q3NDLElBQXZDLGdDQUFzRUEsSUFBdEUsbUJBQVA7UUFDTSt0QixNQUFNMUMsTUFBSUMsS0FBSixDQUFVMTRCLGFBQVYsQ0FBd0IsVUFBVW9OLElBQVYsR0FBaUIsUUFBekMsQ0FBWjs7UUFFTWd1QixVQUFVRCxJQUFJcGlCLGFBQUosQ0FBa0IsYUFBbEIsQ0FBaEI7YUFDUzhaLElBQVQsQ0FBY2p5QixXQUFkLENBQTBCdzZCLE9BQTFCOztRQUVJanJCLFFBQVFrckIsSUFBUixZQUF3QnY4QixRQUE1QixFQUFzQztjQUM1QnU4QixJQUFSLENBQWFELE9BQWI7OztXQUdLQSxPQUFQO0dBWEssQ0FBUDtDQU5GOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUF3Q0EzQyxNQUFJNkMsYUFBSixHQUFvQjdDLE1BQUl5QyxzQkFBeEI7Ozs7Ozs7O0FBUUF6QyxNQUFJOEMscUJBQUosR0FBNEIsVUFBU2x0QixJQUFULEVBQTZCO01BQWQ4QixPQUFjLHVFQUFKLEVBQUk7OztNQUVuRCxDQUFDOUIsSUFBTCxFQUFXO1VBQ0gsSUFBSTlRLEtBQUosQ0FBVSwyQkFBVixDQUFOOzs7U0FHS2s3QixNQUFJSyxTQUFKLENBQWM3cEIsZ0JBQWQsQ0FBK0JaLElBQS9CLEVBQXFDZ0IsSUFBckMsQ0FBMEMsZ0JBQVE7V0FDaERqQyxLQUFLdEMsS0FBTCxDQUFXLGVBQVgsY0FBc0NzQyxJQUF0QywrQkFBb0VBLElBQXBFLGtCQUFQO1FBQ00rdEIsTUFBTTFDLE1BQUlDLEtBQUosQ0FBVTE0QixhQUFWLENBQXdCLFVBQVVvTixJQUFWLEdBQWlCLFFBQXpDLENBQVo7O1FBRU0ya0IsU0FBU29KLElBQUlwaUIsYUFBSixDQUFrQixZQUFsQixDQUFmO2FBQ1M4WixJQUFULENBQWNqeUIsV0FBZCxDQUEwQm14QixNQUExQjs7UUFFSTVoQixRQUFRa3JCLElBQVIsWUFBd0J2OEIsUUFBNUIsRUFBc0M7Y0FDNUJ1OEIsSUFBUixDQUFhdEosTUFBYjs7O1dBR0tBLE1BQVA7R0FYSyxDQUFQO0NBTkY7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQXFDQTBHLE1BQUkrQyxZQUFKLEdBQW1CL0MsTUFBSThDLHFCQUF2Qjs7Ozs7Ozs7QUFRQTlDLE1BQUlnRCwwQkFBSixHQUFpQyxVQUFTcHRCLElBQVQsRUFBNkI7TUFBZDhCLE9BQWMsdUVBQUosRUFBSTs7O01BRXhELENBQUM5QixJQUFMLEVBQVc7VUFDSCxJQUFJOVEsS0FBSixDQUFVLDJCQUFWLENBQU47OztTQUdLazdCLE1BQUlLLFNBQUosQ0FBYzdwQixnQkFBZCxDQUErQlosSUFBL0IsRUFBcUNnQixJQUFyQyxDQUEwQyxnQkFBUTtXQUNoRGpDLEtBQUt0QyxLQUFMLENBQVcscUJBQVgsY0FBNENzQyxJQUE1QyxxQ0FBZ0ZBLElBQWhGLHdCQUFQO1FBQ00rdEIsTUFBTTFDLE1BQUlDLEtBQUosQ0FBVTE0QixhQUFWLENBQXdCLFVBQVVvTixJQUFWLEdBQWlCLFFBQXpDLENBQVo7O1FBRU1zdUIsY0FBY1AsSUFBSXBpQixhQUFKLENBQWtCLGtCQUFsQixDQUFwQjthQUNTOFosSUFBVCxDQUFjanlCLFdBQWQsQ0FBMEI4NkIsV0FBMUI7O1FBRUl2ckIsUUFBUWtyQixJQUFSLFlBQXdCdjhCLFFBQTVCLEVBQXNDO2NBQzVCdThCLElBQVIsQ0FBYUssV0FBYjs7O1dBR0tBLFdBQVA7R0FYSyxDQUFQO0NBTkY7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQXFDQWpELE1BQUlrRCxpQkFBSixHQUF3QmxELE1BQUlnRCwwQkFBNUI7Ozs7OztBQU1BaEQsTUFBSW1ELGtDQUFKLEdBQXlDLFVBQVN2dEIsSUFBVCxFQUFlZ3RCLElBQWYsRUFBcUI7TUFDdEQ3YSxXQUFXaVksTUFBSUMsS0FBSixDQUFVeGMsU0FBVixDQUFvQnppQixPQUFPb0YsUUFBUCxDQUFnQnNQLGdCQUFoQixDQUFpQywyQkFBakMsQ0FBcEIsQ0FBakI7O01BRUlxUyxTQUFTaGtCLE1BQVQsR0FBa0IsQ0FBdEIsRUFBeUI7YUFFcEJpSCxNQURILENBQ1U7YUFBVyxDQUFDdU8sUUFBUXpXLFlBQVIsQ0FBcUIsTUFBckIsQ0FBWjtLQURWLEVBRUdxVyxPQUZILENBRVcsbUJBQVc7Y0FDVmpRLFlBQVIsQ0FBcUIseUJBQXJCLEVBQWdEME0sSUFBaEQ7WUFDSXd0QiwwQkFBSixDQUErQjdwQixPQUEvQixFQUF3QzNELElBQXhDLEVBQThDZ3RCLElBQTlDO0tBSko7R0FERixNQU9PO1VBQ0MsSUFBSTk5QixLQUFKLENBQVUsb0NBQVYsQ0FBTjs7Q0FYSjs7Ozs7Ozs7Ozs7O0FBeUJBazdCLE1BQUlxRCx5QkFBSixHQUFnQ3JELE1BQUltRCxrQ0FBcEM7O0FBRUFuRCxNQUFJc0QseUJBQUosR0FBZ0MsWUFBVztRQUNyQ25DLEtBQUosQ0FBVSxZQUFNO1FBQ1JwWixXQUFXaVksTUFBSUMsS0FBSixDQUFVeGMsU0FBVixDQUFvQnppQixPQUFPb0YsUUFBUCxDQUFnQnNQLGdCQUFoQixDQUFpQywyQkFBakMsQ0FBcEIsQ0FBakI7O2FBRVN5RCxPQUFULENBQWlCLG1CQUFXO1VBQ3BCdkQsT0FBTzJELFFBQVF6VyxZQUFSLENBQXFCLHlCQUFyQixDQUFiO1VBQ0ksT0FBTzhTLElBQVAsS0FBZ0IsUUFBcEIsRUFBOEI7Y0FDeEJ3dEIsMEJBQUosQ0FBK0I3cEIsT0FBL0IsRUFBd0MzRCxJQUF4Qzs7S0FISjtHQUhGO0NBREY7O0FBYUFvcUIsTUFBSW9ELDBCQUFKLEdBQWlDLFVBQVM3cEIsT0FBVCxFQUFrQjNELElBQWxCLEVBQXdCZ3RCLElBQXhCLEVBQThCO1NBQ3REQSxRQUFRLFVBQVNycEIsT0FBVCxFQUFrQmdCLElBQWxCLEVBQXdCOztHQUF2QztRQUNJOGxCLFNBQUosQ0FBYzdwQixnQkFBZCxDQUErQlosSUFBL0IsRUFBcUNnQixJQUFyQyxDQUEwQyxnQkFBUTs7V0FFekMyQyxRQUFRdFcsVUFBZixFQUEyQjtjQUNqQnNGLFdBQVIsQ0FBb0JnUixRQUFRdFcsVUFBNUI7OztRQUdJc2dDLGlCQUFpQnZELE1BQUlDLEtBQUosQ0FBVTE0QixhQUFWLENBQXdCLFVBQVVvTixJQUFWLEdBQWlCLFFBQXpDLENBQXZCO21CQUNlZ0ksS0FBZixDQUFxQm9oQixPQUFyQixHQUErQixNQUEvQjs7WUFFUTUxQixXQUFSLENBQW9CbzdCLGNBQXBCOztTQUVLQSxjQUFMLEVBQXFCLFlBQVc7cUJBQ2Y1bUIsS0FBZixDQUFxQm9oQixPQUFyQixHQUErQixFQUEvQjtLQURGO0dBWEYsRUFlR3lGLEtBZkgsQ0FlUyxpQkFBUztVQUNWLElBQUkxK0IsS0FBSixDQUFVLHFDQUFxQytSLEtBQS9DLENBQU47R0FoQkY7Q0FGRjs7QUFzQkEsU0FBU29xQixlQUFULEdBQTJCO01BQ25Cd0Msb0JBQW9CekQsTUFBSWEsVUFBSixDQUFlNkMsSUFBZixFQUExQjtTQUNPai9CLGdCQUFQLENBQXdCLGtCQUF4QixFQUE0QyxZQUFNO1FBQzVDdTdCLE1BQUk1ckIsU0FBSixFQUFKLEVBQXFCO2FBQ1poTyxRQUFQLENBQWdCM0IsZ0JBQWhCLENBQWlDLGFBQWpDLEVBQWdEZy9CLGlCQUFoRCxFQUFtRSxLQUFuRTtLQURGLE1BRU87OztHQUhULEVBTUcsS0FOSDs7O0FBU0Z6aUMsT0FBTzJpQyxlQUFQLEdBQXlCM0QsS0FBekIsQ0FDQTs7QUNqZEE7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBaUJBLFNBQVM0RCxlQUFULEdBQTJCO01BQ3JCLE9BQU9wNUIsV0FBUCxLQUF1QixVQUEzQixFQUF1Qzs7UUFDL0JxNUIsZUFBYyxTQUFkQSxZQUFjLEdBQU0sRUFBMUI7aUJBQ1kxK0IsU0FBWixHQUF3QmlCLFNBQVNtQixhQUFULENBQXVCLEtBQXZCLENBQXhCO1dBQ09zOEIsWUFBUDtHQUhGLE1BSU87V0FDRXI1QixXQUFQOzs7O0lBSWlCcTVCOzs7eUJBQ0w7Ozs7O1VBRVBDLElBQUw7Ozs7OzsyQkFHSzs7O0VBTmdDRjs7QUMzQnpDOzs7Ozs7Ozs7Ozs7Ozs7OztBQWlCQSxBQUNBLEFBRUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztJQWdDcUJHOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsyQkFVWjtXQUNBM3VCLFFBQUwsR0FBZ0IsS0FBSy9JLFNBQXJCOzthQUVPLEtBQUtwSixVQUFaLEVBQXdCO2FBQ2pCc0YsV0FBTCxDQUFpQixLQUFLdEYsVUFBdEI7Ozs7O3dDQUlnQjtVQUNkLEtBQUtqQixVQUFULEVBQXFCOzs7WUFFZixLQUFLQSxVQUFMLEtBQW9Cb0UsU0FBU2cwQixJQUFqQyxFQUF1Qzs7ZUFDaENodUIsSUFBTCx5QkFBZ0MsS0FBS3RKLFlBQUwsQ0FBa0IsSUFBbEIsQ0FBaEMsbURBQXFHLEtBQUtkLFVBQUwsQ0FBZ0JnaUMsU0FBaEIsYUFBb0MsS0FBS2hpQyxVQUFMLENBQWdCZ2lDLFNBQXBELEdBQWtFLEdBQXZLOzs7O1VBSUF0ZixRQUFRLElBQUlDLFdBQUosQ0FBZ0IsaUJBQWhCLEVBQW1DLEVBQUNzZixTQUFTLElBQVYsRUFBZ0I5SixZQUFZLElBQTVCLEVBQW5DLENBQVo7WUFDTS9rQixRQUFOLEdBQWlCLEtBQUtBLFFBQXRCO1lBQ01FLFVBQU4sR0FBbUIsS0FBS3hTLFlBQUwsQ0FBa0IsSUFBbEIsQ0FBbkI7O1dBRUs4aEIsYUFBTCxDQUFtQkYsS0FBbkI7Ozs7RUE5QnlDbWY7O0FBa0M3QzVpQyxlQUFla0csTUFBZixDQUFzQixjQUF0QixFQUFzQzQ4QixlQUF0Qzs7QUN0RkE7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBaUJBLEFBQ0EsQUFDQSxBQUNBLEFBRUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBeUJxQkc7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzJCQW1CWjs7O21CQUNRLElBQWIsRUFBbUIsWUFBTTtZQUNuQjl5QixTQUFTRCxlQUFULEtBQTZCLElBQWpDLEVBQXVDO2lCQUNoQ214QixlQUFMO1NBREYsTUFFTyxJQUFJLENBQUMsT0FBSzZCLGtCQUFMLEVBQUwsRUFBZ0M7aUJBQzlCLE9BQUsxNEIsVUFBTCxDQUFnQixDQUFoQixDQUFQLEVBQTJCO21CQUNwQkEsVUFBTCxDQUFnQixDQUFoQixFQUFtQm5CLE1BQW5COztpQkFFR2c0QixlQUFMOztPQVBKOztXQVdLbkgsb0JBQUw7Ozs7d0NBR2tCO2tCQUNOek8sRUFBWixDQUFlLFFBQWYsRUFBeUIsS0FBS3lPLG9CQUFMLENBQTBCMTFCLElBQTFCLENBQStCLElBQS9CLENBQXpCOzs7OzZDQU91QitKLE1BQU07VUFDekJBLFNBQVMsYUFBYixFQUE0QjthQUNyQjJyQixvQkFBTDs7Ozs7MkNBSW1CO2tCQUNUdk8sR0FBWixDQUFnQixRQUFoQixFQUEwQixLQUFLdU8sb0JBQS9COzs7O3NDQUdnQjtXQUNYeGUsS0FBTCxDQUFXb2hCLE9BQVgsR0FBcUIsS0FBS29HLGtCQUFMLEtBQTRCLEVBQTVCLEdBQWlDLE1BQXREOzs7O3lDQUdtQjthQUNaLENBQUMsS0FBS3JoQyxZQUFMLENBQWtCLFVBQWxCLENBQUQsSUFBa0MsS0FBS0EsWUFBTCxDQUFrQixVQUFsQixFQUE4QnhCLEtBQTlCLENBQW9DLEtBQXBDLEVBQTJDZ0UsT0FBM0MsQ0FBbUQ4TCxTQUFTOEMsV0FBVCxFQUFuRCxLQUE4RSxDQUF2SDs7OzsyQ0FHcUI7VUFDakIsS0FBSzRGLFlBQUwsQ0FBa0IsYUFBbEIsS0FBb0MsS0FBS3FxQixrQkFBTCxFQUF4QyxFQUFtRTtZQUMzREMseUJBQXlCLEtBQUt0aEMsWUFBTCxDQUFrQixhQUFsQixFQUFpQ3dPLFdBQWpDLEVBQS9CO1lBQ00reUIscUJBQXFCN0ksWUFBWVAsVUFBWixLQUEyQixVQUEzQixHQUF3QyxXQUFuRTs7YUFFS3RlLEtBQUwsQ0FBV29oQixPQUFYLEdBQXNCcUcsMkJBQTJCQyxrQkFBNUIsR0FBa0QsRUFBbEQsR0FBdUQsTUFBNUU7Ozs7O3dCQTNCNEI7YUFDdkIsQ0FBQyxhQUFELENBQVA7Ozs7RUF2Q21DUjs7QUFzRXZDNWlDLGVBQWVrRyxNQUFmLENBQXNCLFFBQXRCLEVBQWdDKzhCLFNBQWhDOztBQ3JIQTs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFpQkEsQUFDQSxBQUVBLElBQWFJLG1CQUFiOzs7aUNBRW1FO21GQUFKLEVBQUk7MkJBQXBEdmQsTUFBb0Q7UUFBcERBLE1BQW9ELCtCQUEzQyxRQUEyQzswQkFBakMxTyxLQUFpQztRQUFqQ0EsS0FBaUMsOEJBQXpCLENBQXlCOzZCQUF0QkQsUUFBc0I7UUFBdEJBLFFBQXNCLGlDQUFYLEdBQVc7OztvSUFDekQsRUFBRTJPLGNBQUYsRUFBVTFPLFlBQVYsRUFBaUJELGtCQUFqQixFQUR5RDs7Ozs7Ozs7Ozs7eUJBUTVEa2hCLE1BVlAsRUFVZS9lLElBVmYsRUFVcUI7Ozs7Ozs7Ozs7O3lCQVFkK2UsTUFsQlAsRUFrQmUvZSxJQWxCZixFQWtCcUI7Ozs7O0VBbEJvQnFsQixZQUF6Qzs7Ozs7QUEwQkEsSUFBYTJFLDBCQUFiOzs7d0NBRXdGO29GQUFKLEVBQUk7NkJBQXpFeGQsTUFBeUU7UUFBekVBLE1BQXlFLGdDQUFoRSw2QkFBZ0U7K0JBQWpDM08sUUFBaUM7UUFBakNBLFFBQWlDLGtDQUF0QixHQUFzQjs0QkFBakJDLEtBQWlCO1FBQWpCQSxLQUFpQiwrQkFBVCxDQUFTOzs7a0pBQzlFLEVBQUNELGtCQUFELEVBQVcyTyxjQUFYLEVBQW1CMU8sWUFBbkIsRUFEOEU7Ozs7Ozs7Ozs7O3lCQVFqRmloQixNQVZQLEVBVWV6a0IsUUFWZixFQVV5QjtpQkFDVkEsV0FBV0EsUUFBWCxHQUFzQixZQUFXLEVBQTVDOzthQUVPaVYsTUFBUCxDQUVFb1csT0FBTzVHLE9BQU9rTCxLQUFkLEVBQ0d4YixLQURILENBQ1M7aUJBQ0k7T0FGYixFQUlHOUosSUFKSCxDQUlRLEtBQUs3RyxLQUpiLEVBS0cyUSxLQUxILENBS1M7aUJBQ0k7T0FOYixFQU9LO2tCQUNTLEtBQUs1USxRQURkO2dCQUVPLEtBQUsyTztPQVRqQixDQUZGLEVBY0VtWixPQUFPNUcsT0FBT21MLE9BQWQsRUFDR0MsU0FESCxHQUVHMWIsS0FGSCxDQUVTO2FBQ0E7cUJBQ1EsbURBRFI7bUJBRU07U0FITjtrQkFLSztPQVBkLEVBU0c5SixJQVRILENBU1EsS0FBSzdHLEtBVGIsRUFVRzJRLEtBVkgsQ0FVUzthQUNBO3FCQUNRLG1EQURSO21CQUVNO1NBSE47a0JBS0ssS0FBSzVRLFFBTFY7Z0JBTUcsS0FBSzJPO09BaEJqQixFQWtCRzRkLFlBbEJILEdBbUJHM2IsS0FuQkgsQ0FtQlMsVUFBU3pPLElBQVQsRUFBZTs7O09BbkJ4QixDQWRGOzs7Ozs7Ozs7O3lCQTRDRytlLE1BekRQLEVBeURlemtCLFFBekRmLEVBeUR5QjtpQkFDVkEsV0FBV0EsUUFBWCxHQUFzQixZQUFXLEVBQTVDOzthQUVPaVYsTUFBUCxDQUVFb1csT0FBTzVHLE9BQU9rTCxLQUFkLEVBQ0d4YixLQURILENBQ1M7aUJBQ0k7T0FGYixFQUlHOUosSUFKSCxDQUlRLEtBQUs3RyxLQUpiLEVBS0cyUSxLQUxILENBS1M7aUJBQ0k7T0FOYixFQU9LO2tCQUNTLEtBQUs1USxRQURkO2dCQUVPLEtBQUsyTztPQVRqQixDQUZGLEVBY0VtWixPQUFPNUcsT0FBT21MLE9BQWQsRUFDR0MsU0FESCxHQUVHMWIsS0FGSCxDQUVTO2FBQ0E7cUJBQ1EsbURBRFI7bUJBRU07U0FITjtrQkFLSztPQVBkLEVBU0c5SixJQVRILENBU1EsS0FBSzdHLEtBVGIsRUFVRzJRLEtBVkgsQ0FVUzthQUNBO3FCQUNRLG1EQURSO21CQUVNO1NBSE47a0JBS0ssS0FBSzVRLFFBTFY7Z0JBTUcsS0FBSzJPO09BaEJqQixFQWtCRzRkLFlBbEJILEdBbUJHM2IsS0FuQkgsQ0FtQlMsVUFBU3pPLElBQVQsRUFBZTs7O09BbkJ4QixDQWRGOzs7O0VBNUQ0QytwQixtQkFBaEQ7Ozs7O0FBd0dBLElBQWFNLHNCQUFiOzs7b0NBRXdGO29GQUFKLEVBQUk7NkJBQXpFN2QsTUFBeUU7UUFBekVBLE1BQXlFLGdDQUFoRSw2QkFBZ0U7K0JBQWpDM08sUUFBaUM7UUFBakNBLFFBQWlDLGtDQUF0QixHQUFzQjs0QkFBakJDLEtBQWlCO1FBQWpCQSxLQUFpQiwrQkFBVCxDQUFTOzs7MElBQzlFLEVBQUNELGtCQUFELEVBQVcyTyxjQUFYLEVBQW1CMU8sWUFBbkIsRUFEOEU7Ozs7Ozs7Ozs7O3lCQVFqRmloQixNQVZQLEVBVWV6a0IsUUFWZixFQVV5QjtpQkFDVkEsV0FBV0EsUUFBWCxHQUFzQixZQUFXLEVBQTVDOzthQUVPaVYsTUFBUCxDQUVFb1csT0FBTzVHLE9BQU9rTCxLQUFkLEVBQ0d4YixLQURILENBQ1M7aUJBQ0k7T0FGYixFQUlHOUosSUFKSCxDQUlRLEtBQUs3RyxLQUpiLEVBS0cyUSxLQUxILENBS1M7aUJBQ0k7T0FOYixFQU9LO2tCQUNTLEtBQUs1USxRQURkO2dCQUVPLEtBQUsyTztPQVRqQixDQUZGLEVBY0VtWixPQUFPNUcsT0FBT21MLE9BQWQsRUFDR0MsU0FESCxHQUVHMWIsS0FGSCxDQUVTO2FBQ0E7cUJBQ1EsbURBRFI7bUJBRU07U0FITjtrQkFLSztPQVBkLEVBU0c5SixJQVRILENBU1EsS0FBSzdHLEtBVGIsRUFVRzJRLEtBVkgsQ0FVUzthQUNBO3FCQUNRLG1EQURSO21CQUVNO1NBSE47a0JBS0ssS0FBSzVRLFFBTFY7Z0JBTUcsS0FBSzJPO09BaEJqQixFQWtCRzRkLFlBbEJILEdBbUJHM2IsS0FuQkgsQ0FtQlMsVUFBU3pPLElBQVQsRUFBZTs7O09BbkJ4QixDQWRGOzs7Ozs7Ozs7O3lCQTRDRytlLE1BekRQLEVBeURlemtCLFFBekRmLEVBeUR5QjtpQkFDVkEsV0FBV0EsUUFBWCxHQUFzQixZQUFXLEVBQTVDOzthQUVPaVYsTUFBUCxDQUVFb1csT0FBTzVHLE9BQU9rTCxLQUFkLEVBQ0d4YixLQURILENBQ1M7aUJBQ0k7T0FGYixFQUlHOUosSUFKSCxDQUlRLEtBQUs3RyxLQUpiLEVBS0cyUSxLQUxILENBS1M7aUJBQ0k7T0FOYixFQU9LO2tCQUNTLEtBQUs1USxRQURkO2dCQUVPLEtBQUsyTztPQVRqQixDQUZGLEVBY0VtWixPQUFPNUcsT0FBT21MLE9BQWQsRUFDR0MsU0FESCxHQUVHMWIsS0FGSCxDQUVTO2FBQ0E7bUJBQ007U0FGTjtrQkFJSztPQU5kLEVBUUc5SixJQVJILENBUVEsS0FBSzdHLEtBUmIsRUFTRzJRLEtBVEgsQ0FTUzthQUNBO21CQUNNO1NBRk47a0JBSUssS0FBSzVRLFFBSlY7Z0JBS0csS0FBSzJPO09BZGpCLEVBZ0JHNGQsWUFoQkgsR0FpQkczYixLQWpCSCxDQWlCUyxVQUFTek8sSUFBVCxFQUFlOzs7T0FqQnhCLENBZEY7Ozs7RUE1RHdDK3BCLG1CQUE1Qzs7QUN0SkE7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBaUJBLEFBQ0EsQUFDQSxBQUNBLEFBQ0EsQUFDQSxBQUNBLEFBQ0EsQUFDQSxBQUNBLEFBRUEsSUFBTTlxQixTQUFTO21CQUNJLGlCQURKOzZCQUVjLDJCQUZkO3lCQUdVLHVCQUhWOzJCQUlZLHlCQUpaOzBCQUtXLHdCQUxYOzBCQU1XLHdCQU5YO3FDQU9zQixtQ0FQdEI7cUNBUXNCLG1DQVJ0QjtrQ0FTbUIsZ0NBVG5CO3dCQVVTLHNCQVZUO2lCQVdFO0NBWGpCOztBQWNBLElBQU1xckIsZ0JBQWdCO1VBQ1pQLG1CQURZO2FBRVQ7V0FBTWx6QixTQUFTbUIsU0FBVCxLQUF1Qmd5QiwwQkFBdkIsR0FBb0RLLHNCQUExRDtHQUZTO1VBR1o7V0FBTXh6QixTQUFTbUIsU0FBVCxLQUF1Qmd5QiwwQkFBdkIsR0FBb0RLLHNCQUExRDs7Q0FIVjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFrRHFCRTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7MkJBb0daOzs7bUJBQ1EsSUFBYixFQUFtQjtlQUFNLE9BQUtDLFFBQUwsRUFBTjtPQUFuQjs7V0FFSy9JLFFBQUwsR0FBZ0IsS0FBaEI7V0FDS2dKLFNBQUwsR0FBaUIsSUFBSXhHLFFBQUosRUFBakI7V0FDS3lHLFlBQUwsR0FBb0I7ZUFBTSxPQUFLQyxPQUFMLEVBQU47T0FBcEI7O1dBRUtDLHNCQUFMOzs7Ozs7Ozs7NkNBZ0N1QjtXQUNsQkMsZ0JBQUwsR0FBd0IsSUFBSXR1QixlQUFKLENBQW9CO21CQUMvQit0QixhQUQrQjttQkFFL0JQLG1CQUYrQjt1QkFHM0IscUJBSDJCOzBCQUl4QixLQUFLeGhDLFlBQUwsQ0FBa0IsV0FBbEI7T0FKSSxDQUF4Qjs7OzsrQkFRUztnQkFDQ3kvQixPQUFWLENBQWtCLElBQWxCOztXQUVLNWxCLEtBQUwsQ0FBV29oQixPQUFYLEdBQXFCLE1BQXJCO1dBQ0twaEIsS0FBTCxDQUFXMGhCLE1BQVgsR0FBb0IsS0FBcEI7Ozs7Ozs7Ozs7Ozs7VUFhTS94QixVQUFVbEcsU0FBU2tkLHNCQUFULEVBQWhCOztVQUVJLENBQUMsS0FBS2toQixLQUFOLElBQWUsQ0FBQyxLQUFLQyxPQUF6QixFQUFrQztlQUN6QixLQUFLeGhDLFVBQVosRUFBd0I7a0JBQ2RrRixXQUFSLENBQW9CLEtBQUtsRixVQUF6Qjs7OztVQUlBLENBQUMsS0FBS3VoQyxLQUFWLEVBQWlCO1lBQ1RhLE9BQU9qL0IsU0FBU21CLGFBQVQsQ0FBdUIsS0FBdkIsQ0FBYjthQUNLOFIsU0FBTCxDQUFlclcsR0FBZixDQUFtQixtQkFBbkI7YUFDS3FGLFlBQUwsQ0FBa0JnOUIsSUFBbEIsRUFBd0IsS0FBSzVwQixRQUFMLENBQWMsQ0FBZCxDQUF4Qjs7O1VBR0UsQ0FBQyxLQUFLZ3BCLE9BQVYsRUFBbUI7WUFDWG5MLFNBQVNsekIsU0FBU21CLGFBQVQsQ0FBdUIsS0FBdkIsQ0FBZjtlQUNPOFIsU0FBUCxDQUFpQnJXLEdBQWpCLENBQXFCLGNBQXJCO2FBQ0txRixZQUFMLENBQWtCaXhCLE1BQWxCLEVBQTBCLElBQTFCOzs7VUFHRSxDQUFDdGhCLEtBQUt1RSxTQUFMLENBQWUsS0FBS2tvQixPQUFwQixFQUE2Qix5QkFBN0IsQ0FBTCxFQUE4RDtZQUN0RHZnQixZQUFZOWQsU0FBU21CLGFBQVQsQ0FBdUIsS0FBdkIsQ0FBbEI7a0JBQ1U4UixTQUFWLENBQW9CclcsR0FBcEIsQ0FBd0Isd0JBQXhCO2FBQ0t5aEMsT0FBTCxDQUFhdDhCLFdBQWIsQ0FBeUIrYixTQUF6Qjs7O1dBR0d1Z0IsT0FBTCxDQUFhaHBCLFFBQWIsQ0FBc0IsQ0FBdEIsRUFBeUJ0VCxXQUF6QixDQUFxQ21FLE9BQXJDOztXQUVLbTRCLE9BQUwsQ0FBYTluQixLQUFiLENBQW1CMGhCLE1BQW5CLEdBQTRCLEtBQTVCO1dBQ0ttRyxLQUFMLENBQVc3bkIsS0FBWCxDQUFpQjBoQixNQUFqQixHQUEwQixLQUExQjs7VUFFSSxLQUFLdjdCLFlBQUwsQ0FBa0IsWUFBbEIsQ0FBSixFQUFxQzthQUM5QjBoQyxLQUFMLENBQVc3bkIsS0FBWCxDQUFpQjJvQixlQUFqQixHQUFtQyxLQUFLeGlDLFlBQUwsQ0FBa0IsWUFBbEIsQ0FBbkM7OzttQkFHV3lpQyxZQUFiLENBQTBCLElBQTFCLEVBQWdDL3JCLE1BQWhDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzJCQXVEaUI7OztVQUFkOUIsT0FBYyx1RUFBSixFQUFJOztVQUNiOHRCLFdBQVMsS0FBYjtVQUNNM3dCLFdBQVc2QyxRQUFRN0MsUUFBUixJQUFvQixZQUFXLEVBQWhEOztjQUVRcUQsZ0JBQVIsR0FBMkJGLEtBQUtDLE1BQUwsQ0FDekJQLFFBQVFRLGdCQUFSLElBQTRCLEVBREgsRUFFekJwQixnQkFBZ0IydUIsMkJBQWhCLENBQTRDLEtBQUszaUMsWUFBTCxDQUFrQixtQkFBbEIsQ0FBNUMsQ0FGeUIsQ0FBM0I7O1dBS0t5aEIsbUJBQUwsQ0FBeUIsSUFBekIsRUFBK0IsU0FBL0IsRUFBMEM7cUJBQzNCLElBRDJCO2dCQUVoQyxrQkFBVztxQkFDUixJQUFUOztPQUhKOztVQU9JLENBQUNpaEIsUUFBTCxFQUFhO1lBQ0xFLFVBQVUsU0FBVkEsT0FBVSxHQUFNO2NBQ2Q3RyxTQUFTLE9BQUttRyxTQUFMLENBQWV0QixJQUFmLEVBQWY7Y0FDTTlyQixXQUFXLE9BQUt3dEIsZ0JBQUwsQ0FBc0JyRixXQUF0QixDQUFrQ3JvQixPQUFsQyxDQUFqQjs7aUJBRUtpRixLQUFMLENBQVdvaEIsT0FBWCxHQUFxQixPQUFyQjtpQkFDS3lHLEtBQUwsQ0FBVzduQixLQUFYLENBQWlCZ3BCLE9BQWpCLEdBQTJCLEdBQTNCOztpQkFFTyxJQUFJMS9CLE9BQUosQ0FBWSxtQkFBVztpQ0FDVCxZQUFNO3VCQUNkcTBCLElBQVQsU0FBb0IsWUFBTTt1QkFDbkIwQixRQUFMLEdBQWdCLElBQWhCOzs7cUJBR0t6WCxtQkFBTCxTQUErQixVQUEvQixFQUEyQyxFQUFDMGUsbUJBQUQsRUFBM0M7Ozs7ZUFKRjthQURGO1dBREssQ0FBUDtTQVBGOztlQXNCTyxJQUFJaDlCLE9BQUosQ0FBWSxtQkFBVztpQkFDdkIrK0IsU0FBTCxDQUFlNUQsVUFBZixDQUEwQjttQkFBTXZyQixRQUFRNnZCLFNBQVIsQ0FBTjtXQUExQjtTQURLLENBQVA7T0F2QkYsTUEwQk87ZUFDRXovQixRQUFRZSxNQUFSLENBQWUsNEJBQWYsQ0FBUDs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7MkJBMEJlOzs7VUFBZDBRLE9BQWMsdUVBQUosRUFBSTs7VUFDYjh0QixXQUFTLEtBQWI7VUFDTTN3QixXQUFXNkMsUUFBUTdDLFFBQVIsSUFBb0IsWUFBVyxFQUFoRDs7Y0FFUXFELGdCQUFSLEdBQTJCRixLQUFLQyxNQUFMLENBQ3pCUCxRQUFRUSxnQkFBUixJQUE0QixFQURILEVBRXpCcEIsZ0JBQWdCMnVCLDJCQUFoQixDQUE0QyxLQUFLM2lDLFlBQUwsQ0FBa0IsbUJBQWxCLENBQTVDLENBRnlCLENBQTNCOztXQUtLeWhCLG1CQUFMLENBQXlCLElBQXpCLEVBQStCLFNBQS9CLEVBQTBDO3FCQUMzQixJQUQyQjtnQkFFaEMsa0JBQVc7cUJBQ1IsSUFBVDs7T0FISjs7VUFPSSxDQUFDaWhCLFFBQUwsRUFBYTtZQUNMSSxVQUFVLFNBQVZBLE9BQVUsR0FBTTtjQUNkL0csU0FBUyxPQUFLbUcsU0FBTCxDQUFldEIsSUFBZixFQUFmO2NBQ005ckIsV0FBVyxPQUFLd3RCLGdCQUFMLENBQXNCckYsV0FBdEIsQ0FBa0Nyb0IsT0FBbEMsQ0FBakI7O2lCQUVPLElBQUl6UixPQUFKLENBQVksbUJBQVc7aUNBQ1QsWUFBTTt1QkFDZGlKLElBQVQsU0FBb0IsWUFBTTt1QkFDbkJ5TixLQUFMLENBQVdvaEIsT0FBWCxHQUFxQixNQUFyQjt1QkFDSy9CLFFBQUwsR0FBZ0IsS0FBaEI7OztxQkFHS3pYLG1CQUFMLFNBQStCLFVBQS9CLEVBQTJDLEVBQUMwZSxtQkFBRCxFQUEzQzs7OztlQUxGO2FBREY7V0FESyxDQUFQO1NBSkY7O2VBb0JPLElBQUloOUIsT0FBSixDQUFZLG1CQUFXO2lCQUN2QisrQixTQUFMLENBQWU1RCxVQUFmLENBQTBCO21CQUFNdnJCLFFBQVErdkIsU0FBUixDQUFOO1dBQTFCO1NBREssQ0FBUDtPQXJCRixNQXdCTztlQUNFMy9CLFFBQVFlLE1BQVIsQ0FBZSw0QkFBZixDQUFQOzs7Ozs7Ozs7Ozs7Ozs7OEJBbUNNOzs7VUFDSixLQUFLbXpCLFVBQUwsSUFBbUIsQ0FBQyxLQUFLMEwsUUFBN0IsRUFBdUM7YUFDaENBLFFBQUwsR0FBZ0IsSUFBaEI7YUFDSzMyQixJQUFMLEdBQ0cwSCxJQURILENBRUksWUFBTTtpQkFDQ2l2QixRQUFMLEdBQWdCLEtBQWhCO2VBQ0t0aEIsbUJBQUwsU0FBK0IsZUFBL0I7U0FKTixFQU1JO2lCQUFNLE9BQUtzaEIsUUFBTCxHQUFnQixLQUF0QjtTQU5KOzs7Ozt3Q0FXZ0I7OztXQUNiQyxrQkFBTCxHQUEwQjtlQUFLLE9BQUszTCxVQUFMLEdBQWtCLE9BQUsrSyxPQUFMLEVBQWxCLEdBQW1DNWlDLEVBQUV5akMsaUJBQUYsRUFBeEM7T0FBMUI7O21CQUVhLElBQWIsRUFBbUIsWUFBTTtlQUNsQnZCLEtBQUwsQ0FBVy8vQixnQkFBWCxDQUE0QixPQUE1QixFQUFxQyxPQUFLd2dDLFlBQTFDLEVBQXdELEtBQXhEO09BREY7Ozs7MkNBS3FCO1dBQ2hCZSxrQkFBTCxDQUF3Qi9xQixPQUF4QjtXQUNLK3FCLGtCQUFMLEdBQTBCLElBQTFCOztXQUVLeEIsS0FBTCxDQUFXeHZCLG1CQUFYLENBQStCLE9BQS9CLEVBQXdDLEtBQUtpd0IsWUFBTCxDQUFrQngvQixJQUFsQixDQUF1QixJQUF2QixDQUF4QyxFQUFzRSxLQUF0RTs7Ozs2Q0FPdUIrSixNQUFNa0osTUFBTUMsU0FBUztVQUN4Q25KLFNBQVMsVUFBYixFQUF5QjtlQUNoQmlKLGFBQWF3dEIsaUJBQWIsQ0FBK0J2dEIsSUFBL0IsRUFBcUNDLE9BQXJDLEVBQThDLElBQTlDLEVBQW9EYSxNQUFwRCxDQUFQO09BREYsTUFHSyxJQUFJaEssU0FBUyxXQUFiLEVBQTBCO2FBQ3hCMjFCLHNCQUFMOzs7Ozt3QkFyVVE7YUFDSG50QixLQUFLdUUsU0FBTCxDQUFlLElBQWYsRUFBcUIsb0JBQXJCLENBQVA7Ozs7Ozs7Ozt3QkFNWTthQUNMdkUsS0FBS3VFLFNBQUwsQ0FBZSxJQUFmLEVBQXFCLGVBQXJCLENBQVA7Ozs7Ozs7Ozt3QkFPa0I7YUFDWHZFLEtBQUt1RSxTQUFMLENBQWUsS0FBS2tvQixPQUFMLENBQWFocEIsUUFBYixDQUFzQixDQUF0QixDQUFmLEVBQXlDLHFCQUF6QyxDQUFQOzs7Ozs7Ozs7d0JBTW9CO2FBQ2J6RCxLQUFLdUUsU0FBTCxDQUFlLEtBQUtrb0IsT0FBTCxDQUFhaHBCLFFBQWIsQ0FBc0IsQ0FBdEIsQ0FBZixFQUF5Qyx1QkFBekMsQ0FBUDs7OztzQkEwRVdoUCxPQUFPO2FBQ1h1TCxLQUFLME4sZUFBTCxDQUFxQixJQUFyQixFQUEyQixVQUEzQixFQUF1Q2paLEtBQXZDLENBQVA7O3dCQUdhO2FBQ04sS0FBS3FOLFlBQUwsQ0FBa0IsVUFBbEIsQ0FBUDs7Ozs7Ozs7Ozs7OztzQkFVYXJOLE9BQU87YUFDYnVMLEtBQUswTixlQUFMLENBQXFCLElBQXJCLEVBQTJCLFlBQTNCLEVBQXlDalosS0FBekMsQ0FBUDs7d0JBR2U7YUFDUixLQUFLcU4sWUFBTCxDQUFrQixZQUFsQixDQUFQOzs7O3dCQW1KWTthQUNMLEtBQUtraUIsUUFBWjs7Ozs7Ozs7Ozs7Ozt3QkFVdUI7YUFDaEIsS0FBS2dLLGtCQUFaOztzQkFHcUJueEIsVUFBVTtVQUMzQixLQUFLbXhCLGtCQUFULEVBQTZCO2FBQ3RCQSxrQkFBTCxDQUF3Qi9xQixPQUF4Qjs7O1dBR0crcUIsa0JBQUwsR0FBMEI1RiwyQkFBMkI4RixhQUEzQixDQUF5QyxJQUF6QyxFQUErQ3J4QixRQUEvQyxDQUExQjs7Ozs7Ozs7OztxQ0FxRHNCckYsTUFBTXNJLFVBQVU7VUFDbEMsRUFBRUEsU0FBUzNTLFNBQVQsWUFBOEJtL0IsbUJBQWhDLENBQUosRUFBMEQ7Y0FDbEQsSUFBSXgvQixLQUFKLENBQVUseUVBQVYsQ0FBTjs7b0JBRVkwSyxJQUFkLElBQXNCc0ksUUFBdEI7Ozs7d0JBekI4QjthQUN2QixDQUFDLFVBQUQsRUFBYSxXQUFiLENBQVA7Ozs7d0JBWWtCO2FBQ1gsQ0FBQyxTQUFELEVBQVksVUFBWixFQUF3QixTQUF4QixFQUFtQyxVQUFuQyxFQUErQyxlQUEvQyxDQUFQOzs7O3dCQWNxQjthQUNkK3NCLGFBQVA7Ozs7d0JBRytCO2FBQ3hCUCxtQkFBUDs7OztFQTljNENUOztBQWtkaEQ1aUMsZUFBZWtHLE1BQWYsQ0FBc0Isa0JBQXRCLEVBQTBDMjlCLGtCQUExQzs7QUM5aUJBOzs7Ozs7Ozs7Ozs7Ozs7OztBQWlCQSxBQUNBLEFBQ0EsQUFDQSxBQUNBLEFBRUEsSUFBTXFCLG1CQUFtQixhQUF6Qjs7QUFFQSxJQUFNM3NCLFdBQVM7TUFDVCxnQkFEUzt3QkFFUyxzQkFGVDt5QkFHVTtDQUh6Qjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztJQXNDcUI0c0I7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7MkJBU1o7OzttQkFDUSxJQUFiLEVBQW1CLFlBQU07ZUFDbEJyQixRQUFMO09BREY7O1dBSUtzQixRQUFMLEdBQWdCLEVBQWhCO1dBQ0tDLGFBQUwsR0FBcUIsS0FBS0MsUUFBTCxDQUFjOWdDLElBQWQsQ0FBbUIsSUFBbkIsQ0FBckI7Ozs7K0JBR1M7Z0JBQ0M4OEIsT0FBVixDQUFrQixJQUFsQjs7V0FFS2xwQixTQUFMLENBQWVyVyxHQUFmLENBQW1CbWpDLGdCQUFuQjs7VUFFSSxDQUFDbnVCLEtBQUt1RSxTQUFMLENBQWUsSUFBZixFQUFxQixxQkFBckIsQ0FBTCxFQUFrRDtZQUMxQzRjLFFBQVFuaEIsS0FBS2lMLE1BQUwsQ0FBWSx5QkFBWixDQUFkOztlQUVPLEtBQUt4WCxVQUFMLENBQWdCLENBQWhCLENBQVAsRUFBMkI7Z0JBQ25CdEQsV0FBTixDQUFrQixLQUFLc0QsVUFBTCxDQUFnQixDQUFoQixDQUFsQjs7YUFFR3RELFdBQUwsQ0FBaUJneEIsS0FBakI7OztVQUdFLENBQUNuaEIsS0FBS3VFLFNBQUwsQ0FBZSxJQUFmLEVBQXFCLG9CQUFyQixDQUFMLEVBQWlEO1lBQ3pDaXFCLE9BQU94dUIsS0FBS2lMLE1BQUwsQ0FBWSx3QkFBWixDQUFiOzthQUVLNWEsWUFBTCxDQUFrQm0rQixJQUFsQixFQUF3QixLQUFLL3FCLFFBQUwsQ0FBYyxDQUFkLENBQXhCOzs7bUJBR1c4cEIsWUFBYixDQUEwQixJQUExQixFQUFnQy9yQixRQUFoQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7K0JBMkRTO1VBQ0wsS0FBS2l0QixPQUFULEVBQWtCO2FBQ1hBLE9BQUwsQ0FBYXY3QixLQUFiLENBQW1CLElBQW5CO09BREYsTUFHSztZQUNHeUcsWUFBWXFHLEtBQUtzRSxVQUFMLENBQWdCLElBQWhCLEVBQXNCLGVBQXRCLENBQWxCO1lBQ0kzSyxTQUFKLEVBQWU7b0JBQ0grMEIsT0FBVixDQUFrQixLQUFLaHZCLE9BQXZCOzs7Ozs7d0NBS2M7V0FDYmpULGdCQUFMLENBQXNCLE9BQXRCLEVBQStCLEtBQUs2aEMsYUFBcEMsRUFBbUQsS0FBbkQ7Ozs7NkNBT3VCOTJCLE1BQU1rSixNQUFNQyxTQUFTO2NBQ3BDbkosSUFBUjthQUNPLE9BQUw7Y0FDTSxDQUFDLEtBQUs2SixTQUFMLENBQWVzdEIsUUFBZixDQUF3QlIsZ0JBQXhCLENBQUwsRUFBZ0Q7aUJBQ3pDampCLFNBQUwsR0FBaUJpakIsbUJBQW1CLEdBQW5CLEdBQXlCeHRCLE9BQTFDOzs7O2FBSUMsVUFBTDt1QkFDZXN0QixpQkFBYixDQUErQnZ0QixJQUEvQixFQUFxQ0MsT0FBckMsRUFBOEMsSUFBOUMsRUFBb0RhLFFBQXBEOzs7Ozs7MkNBS2lCO1dBQ2hCeEUsbUJBQUwsQ0FBeUIsT0FBekIsRUFBa0MsS0FBS3N4QixhQUF2QyxFQUFzRCxLQUF0RDs7OzsyQkFHSztXQUNBM3BCLEtBQUwsQ0FBV29oQixPQUFYLEdBQXFCLGNBQXJCOzs7OzJCQUdLO1dBQ0FwaEIsS0FBTCxDQUFXb2hCLE9BQVgsR0FBcUIsTUFBckI7Ozs7d0JBMURZO2FBQ0wsS0FBS3NJLFFBQVo7O3NCQUdVbjRCLFFBQVE7V0FDYm00QixRQUFMLEdBQWdCbjRCLE1BQWhCOzs7O3dCQTBCOEI7YUFDdkIsQ0FBQyxVQUFELEVBQWEsT0FBYixDQUFQOzs7O0VBbEgyQzIxQjs7QUFnSi9DNWlDLGVBQWVrRyxNQUFmLENBQXNCLGlCQUF0QixFQUF5Q2kvQixpQkFBekM7O0FDL01BOzs7Ozs7Ozs7Ozs7Ozs7OztBQWlCQSxBQUNBLEFBQ0EsQUFDQSxBQUVBLElBQU1ELHFCQUFtQixZQUF6QjtBQUNBLElBQU0zc0IsV0FBUyxFQUFDLElBQUksZUFBTCxFQUFmOzs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFpQnFCb3RCOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OzJCQVNaO1dBQ0F2dEIsU0FBTCxDQUFlclcsR0FBZixDQUFtQm1qQyxrQkFBbkI7bUJBQ2FaLFlBQWIsQ0FBMEIsSUFBMUIsRUFBZ0MvckIsUUFBaEM7Ozs7d0NBR2tCO1VBQ2R4QixLQUFLM0YsS0FBTCxDQUFXLEtBQUtyUSxVQUFoQixFQUE0QixVQUE1QixDQUFKLEVBQTZDO2FBQ3RDQSxVQUFMLENBQWdCcVgsU0FBaEIsQ0FBMEJyVyxHQUExQixDQUE4QiwwQkFBOUI7Ozs7OzZDQVFxQndNLE1BQU1rSixNQUFNQyxTQUFTO2NBQ3BDbkosSUFBUjthQUNPLE9BQUw7Y0FDTSxDQUFDLEtBQUs2SixTQUFMLENBQWVzdEIsUUFBZixDQUF3QlIsa0JBQXhCLENBQUwsRUFBZ0Q7aUJBQ3pDampCLFNBQUwsR0FBaUJpakIscUJBQW1CLEdBQW5CLEdBQXlCeHRCLE9BQTFDOzs7YUFHQyxVQUFMO3VCQUNlc3RCLGlCQUFiLENBQStCdnRCLElBQS9CLEVBQXFDQyxPQUFyQyxFQUE4QyxJQUE5QyxFQUFvRGEsUUFBcEQ7Ozs7Ozt3QkFaMEI7YUFDdkIsQ0FBQyxVQUFELEVBQWEsT0FBYixDQUFQOzs7O0VBckI4Q3FxQjs7QUF1Q2xENWlDLGVBQWVrRyxNQUFmLENBQXNCLG9CQUF0QixFQUE0Q3kvQixvQkFBNUM7O0FDL0VBOzs7Ozs7Ozs7Ozs7Ozs7OztBQWlCQSxBQUNBLEFBQ0EsQUFDQSxBQUVBLElBQU1wdEIsV0FBUyxFQUFDLElBQUksV0FBTCxFQUFmOztBQUVBLElBQU0yc0IscUJBQW1CLFFBQXpCOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBaURxQlU7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7MkJBd0JaO1dBQ0E5QixRQUFMOzs7OzZDQU91QnYxQixNQUFNa0osTUFBTUMsU0FBUztjQUNwQ25KLElBQVI7YUFDTyxPQUFMO2NBQ00sQ0FBQyxLQUFLNkosU0FBTCxDQUFlc3RCLFFBQWYsQ0FBd0JSLGtCQUF4QixDQUFMLEVBQWdEO2lCQUN6Q2pqQixTQUFMLEdBQWlCaWpCLHFCQUFtQixHQUFuQixHQUF5Qnh0QixPQUExQzs7O2FBR0MsVUFBTDt1QkFDZXN0QixpQkFBYixDQUErQnZ0QixJQUEvQixFQUFxQ0MsT0FBckMsRUFBOEMsSUFBOUMsRUFBb0RhLFFBQXBEOzthQUVHLFFBQUw7ZUFDT3N0QixhQUFMOzs7Ozs7Ozs7Ozs7OzsrQkFtQks7Z0JBQ0N2RSxPQUFWLENBQWtCLElBQWxCOztXQUVLbHBCLFNBQUwsQ0FBZXJXLEdBQWYsQ0FBbUJtakMsa0JBQW5COztXQUVLVyxhQUFMOzttQkFFYXZCLFlBQWIsQ0FBMEIsSUFBMUIsRUFBZ0MvckIsUUFBaEM7Ozs7b0NBR2M7V0FDVHdNLFlBQUwsQ0FBa0IsSUFBbEI7Ozs7c0JBbkJXdlosT0FBTzthQUNYdUwsS0FBSzBOLGVBQUwsQ0FBcUIsSUFBckIsRUFBMkIsVUFBM0IsRUFBdUNqWixLQUF2QyxDQUFQOzt3QkFHYTthQUNOLEtBQUtxTixZQUFMLENBQWtCLFVBQWxCLENBQVA7Ozs7d0JBL0I4QjthQUN2QixDQUFDLFVBQUQsRUFBYSxRQUFiLEVBQXVCLE9BQXZCLENBQVA7Ozs7RUE3QnVDK3BCOztBQTZFM0M1aUMsZUFBZWtHLE1BQWYsQ0FBc0IsWUFBdEIsRUFBb0MwL0IsYUFBcEM7O0FDdEpBOzs7Ozs7Ozs7Ozs7Ozs7OztBQWlCQSxBQUNBLEFBQ0EsQUFDQSxJQUFNcnRCLFdBQVMsRUFBQyxJQUFJLGtCQUFMLEVBQWY7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBeUJxQnV0Qjs7Ozs7Ozs7OzsyQkFFWjtXQUNBcHFCLEtBQUwsQ0FBV3FxQixLQUFYLEdBQW1CLE1BQW5CO21CQUNhekIsWUFBYixDQUEwQixJQUExQixFQUFnQy9yQixRQUFoQzs7Ozs2Q0FPdUJoSyxNQUFNa0osTUFBTUMsU0FBUztVQUN4Q25KLFNBQVMsVUFBYixFQUF5QjtlQUNoQmlKLGFBQWF3dEIsaUJBQWIsQ0FBK0J2dEIsSUFBL0IsRUFBcUNDLE9BQXJDLEVBQThDLElBQTlDLEVBQW9EYSxRQUFwRCxDQUFQOzs7Ozt3QkFONEI7YUFDdkIsQ0FBQyxVQUFELENBQVA7Ozs7RUFSNkNxcUI7O0FBa0JqRDVpQyxlQUFla0csTUFBZixDQUFzQixtQkFBdEIsRUFBMkM0L0IsbUJBQTNDOztBQy9EQTs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFpQkEsQUFDQSxBQUNBLEFBQ0EsQUFDQSxBQUVBLElBQU1FLG9CQUFvQjs7bUJBRVAseUJBQVN2aUIsS0FBVCxFQUFnQjtXQUN4QkEsTUFBTXlILE9BQU4sQ0FBYzJCLE1BQXJCO0dBSHNCOztzQkFNSiw0QkFBU3BKLEtBQVQsRUFBZ0I7V0FDM0JBLE1BQU15SCxPQUFOLENBQWN3SCxTQUFyQjtHQVBzQjs7bUJBVVAsMkJBQVc7UUFDdEIsQ0FBQyxLQUFLdVQsbUJBQVYsRUFBK0I7V0FDeEJBLG1CQUFMLEdBQTJCLEtBQUtucEIscUJBQUwsR0FBNkJoRCxNQUF4RDs7O1dBR0ssS0FBS21zQixtQkFBWjtHQWZzQjs7NEJBa0JFLGtDQUFTQyxNQUFULEVBQWlCO1dBQ2xDLHNCQUFzQixDQUFDQSxNQUF2QixHQUFnQyxVQUF2QztHQW5Cc0I7O3dCQXNCRixnQ0FBVTtTQUN6QkMsTUFBTCxHQUFjcG1DLE9BQU91a0IsZ0JBQVAsQ0FBd0IsSUFBeEIsQ0FBZDtTQUNLOGhCLFdBQUwsR0FBbUIsS0FBS3RwQixxQkFBTCxFQUFuQjtHQXhCc0I7O2lCQTJCVCx5QkFBVTtRQUNuQixLQUFLdXBCLFFBQVQsRUFBbUI7VUFDWHZzQixTQUFTLENBQUMsS0FBS3NzQixXQUFMLENBQWlCdHNCLE1BQWpCLElBQTJCLENBQTVCLElBQWlDNUksU0FBUyxLQUFLaTFCLE1BQUwsQ0FBWXZuQixVQUFyQixFQUFpQyxFQUFqQyxDQUFqQyxHQUF3RTFOLFNBQVMsS0FBS2kxQixNQUFMLENBQVlHLGFBQXJCLEVBQW9DLEVBQXBDLENBQXZGO1dBQ0tDLE9BQUwsR0FBZSxFQUFFenNCLFNBQVMsS0FBSzBzQixvQkFBTCxFQUFYLElBQTBDLENBQXpEOztHQTlCb0I7O3dCQWtDRixnQ0FBVztRQUN6QmhzQixXQUFXLEtBQUtpc0Isd0JBQUwsRUFBakI7O1FBRU1DLFdBQVcsS0FBS0Msd0JBQUwsRUFBakI7UUFDTUMsV0FBVyxLQUFLQyxvQkFBTCxDQUEwQkgsUUFBMUIsQ0FBakI7O1NBRUssSUFBSXRpQyxJQUFJLENBQWIsRUFBZ0JBLElBQUlvVyxTQUFTMVgsTUFBN0IsRUFBcUNzQixHQUFyQyxFQUEwQztlQUMvQkEsQ0FBVCxFQUFZc1gsS0FBWixDQUFrQjhJLFFBQWxCLEdBQTZCLFVBQTdCO2VBQ1NwZ0IsQ0FBVCxFQUFZc1gsS0FBWixDQUFrQjVCLE1BQWxCLEdBQTJCNHNCLFFBQTNCO2VBQ1N0aUMsQ0FBVCxFQUFZc1gsS0FBWixDQUFrQkMsVUFBbEIsR0FBK0IsU0FBL0I7ZUFDU3ZYLENBQVQsRUFBWXNYLEtBQVosQ0FBa0JxQixHQUFsQixHQUF5QjNZLElBQUl3aUMsU0FBU0UsTUFBZCxHQUF3QkYsU0FBU0csSUFBekQ7O0dBNUNvQjs7VUFnRGhCLGtCQUFVO1NBQ1hDLG9CQUFMO1NBQ0tDLGFBQUw7U0FDS0Msb0JBQUw7O0NBbkRKOztBQXVEQSxJQUFNQyxzQkFBc0I7O21CQUVULHlCQUFTMWpCLEtBQVQsRUFBZ0I7V0FDeEJBLE1BQU15SCxPQUFOLENBQWMwQixNQUFyQjtHQUh3Qjs7c0JBTU4sNEJBQVNuSixLQUFULEVBQWdCO1dBQzNCQSxNQUFNeUgsT0FBTixDQUFjdUgsU0FBckI7R0FQd0I7O21CQVVULDJCQUFXO1FBQ3RCLENBQUMsS0FBS3dULG1CQUFWLEVBQStCO1dBQ3hCQSxtQkFBTCxHQUEyQixLQUFLbnBCLHFCQUFMLEdBQTZCaXBCLEtBQXhEOzs7V0FHSyxLQUFLRSxtQkFBWjtHQWZ3Qjs7NEJBa0JBLGtDQUFTQyxNQUFULEVBQWlCO1dBQ2xDLGlCQUFpQixDQUFDQSxNQUFsQixHQUEyQixlQUFsQztHQW5Cd0I7O3dCQXNCSixnQ0FBVTtTQUN6QkMsTUFBTCxHQUFjcG1DLE9BQU91a0IsZ0JBQVAsQ0FBd0IsSUFBeEIsQ0FBZDtTQUNLOGhCLFdBQUwsR0FBbUIsS0FBS3RwQixxQkFBTCxFQUFuQjtHQXhCd0I7O2lCQTJCWCx5QkFBVTtRQUNuQixLQUFLdXBCLFFBQVQsRUFBbUI7VUFDWE4sUUFBUSxDQUFDLEtBQUtLLFdBQUwsQ0FBaUJMLEtBQWpCLElBQTBCLENBQTNCLElBQWdDNzBCLFNBQVMsS0FBS2kxQixNQUFMLENBQVlpQixXQUFyQixFQUFrQyxFQUFsQyxDQUFoQyxHQUF3RWwyQixTQUFTLEtBQUtpMUIsTUFBTCxDQUFZa0IsWUFBckIsRUFBbUMsRUFBbkMsQ0FBdEY7V0FDS2QsT0FBTCxHQUFlLEVBQUVSLFFBQVEsS0FBS1Msb0JBQUwsRUFBVixJQUF5QyxDQUF4RDs7R0E5QnNCOzt3QkFrQ0osZ0NBQVc7UUFDekJoc0IsV0FBVyxLQUFLaXNCLHdCQUFMLEVBQWpCOztRQUVNQyxXQUFXLEtBQUtDLHdCQUFMLEVBQWpCO1FBQ01DLFdBQVcsS0FBS0Msb0JBQUwsQ0FBMEJILFFBQTFCLENBQWpCOztTQUVLLElBQUl0aUMsSUFBSSxDQUFiLEVBQWdCQSxJQUFJb1csU0FBUzFYLE1BQTdCLEVBQXFDc0IsR0FBckMsRUFBMEM7ZUFDL0JBLENBQVQsRUFBWXNYLEtBQVosQ0FBa0I4SSxRQUFsQixHQUE2QixVQUE3QjtlQUNTcGdCLENBQVQsRUFBWXNYLEtBQVosQ0FBa0JxcUIsS0FBbEIsR0FBMEJXLFFBQTFCO2VBQ1N0aUMsQ0FBVCxFQUFZc1gsS0FBWixDQUFrQkMsVUFBbEIsR0FBK0IsU0FBL0I7ZUFDU3ZYLENBQVQsRUFBWXNYLEtBQVosQ0FBa0J1aEIsSUFBbEIsR0FBMEI3NEIsSUFBSXdpQyxTQUFTRSxNQUFkLEdBQXdCRixTQUFTRyxJQUExRDs7R0E1Q3NCOztVQWdEbEIsa0JBQVU7U0FDWEMsb0JBQUw7U0FDS0MsYUFBTDtTQUNLQyxvQkFBTDs7Q0FuREo7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFnRnFCSTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsyQkFrS1o7V0FDQXZELFNBQUwsR0FBaUIsSUFBSXhHLFFBQUosRUFBakI7V0FDS2dLLE9BQUwsR0FBZSxDQUFmO1dBQ0toQixPQUFMLEdBQWUsQ0FBZjtXQUNLaUIsZ0JBQUwsR0FBd0IsQ0FBeEI7O1dBRUtDLFlBQUwsR0FBb0IsS0FBS0MsT0FBTCxDQUFhbGpDLElBQWIsQ0FBa0IsSUFBbEIsQ0FBcEI7V0FDS21qQyxlQUFMLEdBQXVCLEtBQUtDLFVBQUwsQ0FBZ0JwakMsSUFBaEIsQ0FBcUIsSUFBckIsQ0FBdkI7V0FDS3FqQyxjQUFMLEdBQXNCLEtBQUsxTixTQUFMLENBQWUzMUIsSUFBZixDQUFvQixJQUFwQixDQUF0Qjs7V0FFS3NqQyxNQUFMLENBQVksS0FBS0MsV0FBTCxLQUFxQi9CLGlCQUFyQixHQUF5Q21CLG1CQUFyRDs7OztnQ0FHVTtVQUNKL2lDLElBQUksS0FBS21qQyxPQUFMLEdBQWUsS0FBS3RCLG1CQUE5QjthQUNPLEtBQUtBLG1CQUFaO1dBQ0srQixjQUFMLENBQW9CNWpDLENBQXBCOzs7O3lDQUdtQjtVQUNmLEtBQUsyakMsV0FBTCxFQUFKLEVBQXdCO2FBQ2pCcnNCLEtBQUwsQ0FBV3VzQixTQUFYLEdBQXVCLE1BQXZCO2FBQ0t2c0IsS0FBTCxDQUFXd3NCLFNBQVgsR0FBdUIsRUFBdkI7T0FGRixNQUdPO2FBQ0F4c0IsS0FBTCxDQUFXdXNCLFNBQVgsR0FBdUIsRUFBdkI7YUFDS3ZzQixLQUFMLENBQVd3c0IsU0FBWCxHQUF1QixNQUF2Qjs7O1dBR0dDLE9BQUw7Ozs7cUNBR2U7V0FDVkMsVUFBTCxHQUFrQjtxQkFDSCxLQUFLNUIsb0JBQUwsRUFERzs4QkFFTSxLQUFLNkIsU0FGWDtlQUdULEtBQUs3QixvQkFBTCxLQUE4QixLQUFLNkI7T0FINUM7Ozs7Ozs7OzsyQ0FVcUI7VUFDZjNCLFdBQVcsS0FBS0Msd0JBQUwsRUFBakI7VUFDTUMsV0FBVyxLQUFLQyxvQkFBTCxDQUEwQkgsUUFBMUIsQ0FBakI7VUFDTTRCLGNBQWMsS0FBS0MsZUFBTCxFQUFwQjs7VUFFSTNCLFNBQVNHLElBQVQsS0FBa0IsR0FBdEIsRUFBMkI7ZUFDbEJuN0IsS0FBSzQ4QixLQUFMLENBQVc1QixTQUFTRSxNQUFULEdBQWtCLEdBQWxCLEdBQXdCd0IsV0FBbkMsQ0FBUDtPQURGLE1BRU8sSUFBSTFCLFNBQVNHLElBQVQsS0FBa0IsSUFBdEIsRUFBNEI7ZUFDMUJILFNBQVNFLE1BQWhCO09BREssTUFFQTtjQUNDLElBQUlqakMsS0FBSixDQUFVLGVBQVYsQ0FBTjs7Ozs7Ozs7Ozt1Q0FPZTtVQUNYaVYsUUFBUTVILFNBQVMsS0FBS3JQLFlBQUwsQ0FBa0IsZUFBbEIsQ0FBVCxFQUE2QyxFQUE3QyxDQUFkOztVQUVJLE9BQU9pWCxLQUFQLEtBQWlCLFFBQWpCLElBQTZCLENBQUNpRixNQUFNakYsS0FBTixDQUFsQyxFQUFnRDtlQUN2Q2xOLEtBQUtrUSxHQUFMLENBQVNsUSxLQUFLbVEsR0FBTCxDQUFTakQsS0FBVCxFQUFnQixLQUFLdXZCLFNBQUwsR0FBaUIsQ0FBakMsQ0FBVCxFQUE4QyxDQUE5QyxDQUFQO09BREYsTUFFTztlQUNFLENBQVA7Ozs7Ozs7Ozs7K0NBT3VCO1VBQ25CSSxXQUFXLFdBQVcsS0FBS1YsV0FBTCxLQUFxQixRQUFyQixHQUFnQyxPQUEzQyxDQUFqQjtVQUNNVyxlQUFlLENBQUMsS0FBSyxLQUFLN21DLFlBQUwsQ0FBa0I0bUMsUUFBbEIsQ0FBTixFQUFtQ3I0QixJQUFuQyxFQUFyQjs7YUFFT3M0QixhQUFhdDNCLEtBQWIsQ0FBbUIsYUFBbkIsSUFBb0NzM0IsWUFBcEMsR0FBbUQsTUFBMUQ7Ozs7Ozs7Ozt5Q0FNbUJDLE1BQU07VUFDbkJ2bkIsVUFBVXVuQixLQUFLdjNCLEtBQUwsQ0FBVyxjQUFYLENBQWhCOzthQUVPO2dCQUNHRixTQUFTa1EsUUFBUSxDQUFSLENBQVQsRUFBcUIsRUFBckIsQ0FESDtjQUVDQSxRQUFRLENBQVI7T0FGUjs7Ozt5Q0FNbUI7V0FDZG1tQixPQUFMLEdBQWUsQ0FBQyxLQUFLaEIsT0FBTCxJQUFnQixDQUFqQixJQUFzQixLQUFLQyxvQkFBTCxLQUE4QixLQUFLb0MsZ0JBQUwsRUFBbkU7V0FDS3BCLGdCQUFMLEdBQXdCLEtBQUtvQixnQkFBTCxFQUF4QjtXQUNLQyxTQUFMLENBQWUsS0FBS3RCLE9BQXBCOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O21DQTRCYXp1QixPQUFxQjs7O1VBQWRyQyxPQUFjLHVFQUFKLEVBQUk7O1VBQzlCQSxXQUFXLFFBQU9BLE9BQVAseUNBQU9BLE9BQVAsTUFBa0IsUUFBakMsRUFBMkM7Y0FDbkMsSUFBSTVTLEtBQUosQ0FBVSw2Q0FBNkM0UyxPQUF2RCxDQUFOOzs7Y0FHTUcsU0FBUixHQUFvQkgsUUFBUUcsU0FBUixJQUFxQixLQUFLL1UsWUFBTCxDQUFrQixXQUFsQixDQUF6QztjQUNRb1YsZ0JBQVIsR0FBMkJGLEtBQUtDLE1BQUwsQ0FDekIsRUFBRUcsVUFBVSxHQUFaLEVBQWlCMk8sUUFBUSw2QkFBekIsRUFEeUIsRUFFekJyUCxRQUFRUSxnQkFBUixJQUE0QixFQUZILEVBR3pCLEtBQUs0QixZQUFMLENBQWtCLG1CQUFsQixJQUF5QzlCLEtBQUtRLHFCQUFMLENBQTJCLEtBQUsxVixZQUFMLENBQWtCLG1CQUFsQixDQUEzQixDQUF6QyxHQUE4RyxFQUhyRixDQUEzQjs7Y0FNUStKLEtBQUtrUSxHQUFMLENBQVMsQ0FBVCxFQUFZbFEsS0FBS21RLEdBQUwsQ0FBU2pELEtBQVQsRUFBZ0IsS0FBS3V2QixTQUFMLEdBQWlCLENBQWpDLENBQVosQ0FBUjtVQUNNbkMsU0FBUyxDQUFDLEtBQUtLLE9BQUwsSUFBZ0IsQ0FBakIsSUFBc0IsS0FBS0Msb0JBQUwsS0FBOEIxdEIsS0FBbkU7VUFDTWdELE1BQU0sS0FBS2d0QixtQkFBTCxFQUFaOztXQUVLdkIsT0FBTCxHQUFlMzdCLEtBQUtrUSxHQUFMLENBQVMsQ0FBVCxFQUFZbFEsS0FBS21RLEdBQUwsQ0FBU0QsR0FBVCxFQUFjb3FCLE1BQWQsQ0FBWixDQUFmO2FBQ08sS0FBSzJDLFNBQUwsQ0FBZSxLQUFLdEIsT0FBcEIsRUFBNkI5d0IsT0FBN0IsRUFBc0NkLElBQXRDLENBQTJDLFlBQU07ZUFDakRvekIsdUJBQUw7O09BREssQ0FBUDs7Ozs7Ozs7Ozs7Ozs7OztxQ0FpQmU7VUFDVDdDLFNBQVMsS0FBS3FCLE9BQUwsSUFBZ0IsS0FBS2hCLE9BQUwsSUFBZ0IsQ0FBaEMsQ0FBZjtVQUNNOXNCLFFBQVEsS0FBSzR1QixTQUFuQjtVQUNNTSxPQUFPLEtBQUtuQyxvQkFBTCxFQUFiOztVQUVJTixTQUFTLENBQWIsRUFBZ0I7ZUFDUCxDQUFQOzs7VUFHRTloQyxVQUFKO1dBQ0tBLElBQUksQ0FBVCxFQUFZQSxJQUFJcVYsS0FBaEIsRUFBdUJyVixHQUF2QixFQUE0QjtZQUN0QnVrQyxPQUFPdmtDLENBQVAsSUFBWThoQyxNQUFaLElBQXNCeUMsUUFBUXZrQyxJQUFJLENBQVosSUFBaUI4aEMsTUFBM0MsRUFBbUQ7aUJBQzFDOWhDLENBQVA7Ozs7O2FBS0dBLENBQVA7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7eUJBeUJHcVMsU0FBUzthQUNMLEtBQUt1eEIsY0FBTCxDQUFvQixLQUFLZ0IsY0FBTCxLQUF3QixDQUE1QyxFQUErQ3Z5QixPQUEvQyxDQUFQOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O3lCQXlCR0EsU0FBUzthQUNMLEtBQUt1eEIsY0FBTCxDQUFvQixLQUFLZ0IsY0FBTCxLQUF3QixDQUE1QyxFQUErQ3Z5QixPQUEvQyxDQUFQOzs7Ozs7Ozs7NENBTXNCO1VBQ2hCNnhCLGNBQWMsS0FBS0MsZUFBTCxFQUFwQjtVQUNNVSxtQkFBbUIsS0FBS3pDLG9CQUFMLEVBQXpCOzthQUVPLEtBQUswQyxVQUFMLElBQW1CdDlCLEtBQUtraEIsR0FBTCxDQUFTd2IsY0FBY1csZ0JBQXZCLElBQTJDLEdBQXJFOzs7Ozs7Ozs7a0NBTVk7YUFDTCxLQUFLcG5DLFlBQUwsQ0FBa0IsV0FBbEIsTUFBbUMsVUFBMUM7Ozs7NkNBR3VCOzs7V0FDbEJzbkMsZ0JBQUwsR0FBd0IsSUFBSTlmLGVBQUosQ0FBb0IsSUFBcEIsRUFBMEI7eUJBQy9CLENBRCtCO3dCQUVoQztPQUZNLENBQXhCO1dBSUsrZixpQkFBTCxHQUF5QixJQUFJN2tDLGdCQUFKLENBQXFCO2VBQU0sT0FBSzRqQyxPQUFMLEVBQU47T0FBckIsQ0FBekI7O1dBRUtrQixnQkFBTDtXQUNLQyxrQkFBTDs7YUFFTzlsQyxnQkFBUCxDQUF3QixRQUF4QixFQUFrQyxLQUFLcWtDLGNBQXZDLEVBQXVELElBQXZEOzs7OzRDQUdzQjtXQUNqQnNCLGdCQUFMLENBQXNCeFYsT0FBdEI7V0FDS3dWLGdCQUFMLEdBQXdCLElBQXhCOztXQUVLQyxpQkFBTCxDQUF1QnZrQyxVQUF2QjtXQUNLdWtDLGlCQUFMLEdBQXlCLElBQXpCOzthQUVPcjFCLG1CQUFQLENBQTJCLFFBQTNCLEVBQXFDLEtBQUs4ekIsY0FBMUMsRUFBMEQsSUFBMUQ7Ozs7dUNBR2lCO1VBQ2IsS0FBS3NCLGdCQUFULEVBQTJCO1lBQ3JCLEtBQUtJLFNBQVQsRUFBb0I7ZUFDYkosZ0JBQUwsQ0FBc0IxZCxFQUF0QixDQUF5QixzRkFBekIsRUFBaUgsS0FBS2djLFlBQXRIO2VBQ0swQixnQkFBTCxDQUFzQjFkLEVBQXRCLENBQXlCLFNBQXpCLEVBQW9DLEtBQUtrYyxlQUF6QztTQUZGLE1BR087ZUFDQXdCLGdCQUFMLENBQXNCeGQsR0FBdEIsQ0FBMEIsc0ZBQTFCLEVBQWtILEtBQUs4YixZQUF2SDtlQUNLMEIsZ0JBQUwsQ0FBc0J4ZCxHQUF0QixDQUEwQixTQUExQixFQUFxQyxLQUFLZ2MsZUFBMUM7Ozs7Ozt5Q0FLZTtVQUNmLEtBQUt5QixpQkFBVCxFQUE0QjtZQUN0QixLQUFLdndCLFlBQUwsQ0FBa0IsY0FBbEIsQ0FBSixFQUF1QztlQUNoQ3V3QixpQkFBTCxDQUF1QjNrQyxPQUF2QixDQUErQixJQUEvQixFQUFxQyxFQUFDQyxXQUFXLElBQVosRUFBckM7U0FERixNQUVPO2VBQ0Ewa0MsaUJBQUwsQ0FBdUJ2a0MsVUFBdkI7Ozs7Ozs4Q0FLb0I7VUFDbEJvTixlQUFlLEtBQUsrMkIsY0FBTCxFQUFyQjs7VUFFSSxLQUFLeEIsZ0JBQUwsS0FBMEJ2MUIsWUFBOUIsRUFBNEM7WUFDcEN1M0Isa0JBQWtCLEtBQUtoQyxnQkFBN0I7YUFDS0EsZ0JBQUwsR0FBd0J2MUIsWUFBeEI7O2FBRUtxUixtQkFBTCxDQUF5QixJQUF6QixFQUErQixZQUEvQixFQUE2QztvQkFDakMsSUFEaUM7dUJBRTlCclIsWUFGOEI7MkJBRzFCdTNCO1NBSG5COzs7OztzQ0FRYzluQyxHQUFHOzthQUVaLEtBQUtxbUMsV0FBTCxLQUFzQnJtQyxNQUFNLE1BQU4sSUFBZ0JBLE1BQU0sT0FBNUMsR0FBd0RBLE1BQU0sSUFBTixJQUFjQSxNQUFNLE1BQW5GOzs7OzRCQUdNK2hCLE9BQU87VUFDVCxLQUFLZ21CLGlCQUFMLENBQXVCaG1CLE1BQU15SCxPQUFOLENBQWN3QyxTQUFyQyxLQUFvRGpLLE1BQU0zVSxNQUFOLElBQWdCMlUsTUFBTTNVLE1BQU4sQ0FBYTJMLE9BQWIsQ0FBcUJwSyxXQUFyQixPQUF1QyxPQUF2RCxJQUFrRW9ULE1BQU0zVSxNQUFOLENBQWFSLElBQWIsS0FBc0IsT0FBaEosRUFBMEo7Ozs7WUFJcEo0WCxlQUFOOztXQUVLd2pCLGNBQUwsR0FBc0JqbUIsS0FBdEI7O1VBRU15aUIsU0FBUyxLQUFLcUIsT0FBTCxHQUFlLEtBQUtvQyxlQUFMLENBQXFCbG1CLEtBQXJCLENBQTlCO1dBQ0tvbEIsU0FBTCxDQUFlM0MsTUFBZjtZQUNNaGIsT0FBTixDQUFjb0YsY0FBZDs7V0FFS3lZLHVCQUFMOzs7OytCQUdTdGxCLE9BQU87OztVQUNaLENBQUMsS0FBS2ltQixjQUFWLEVBQTBCOzs7V0FHckJ6RCxtQkFBTCxHQUEyQng0QixTQUEzQjtXQUNLODVCLE9BQUwsR0FBZSxLQUFLQSxPQUFMLEdBQWUsS0FBS29DLGVBQUwsQ0FBcUJsbUIsS0FBckIsQ0FBOUI7Ozs7OztVQU1JLEtBQUttbUIsYUFBTCxDQUFtQixLQUFLckMsT0FBeEIsQ0FBSixFQUFzQztZQUNoQ3NDLGdCQUFnQixLQUFwQjthQUNLdm1CLG1CQUFMLENBQXlCLElBQXpCLEVBQStCLFlBQS9CLEVBQTZDO29CQUNqQyxJQURpQzt1QkFFOUIsS0FBSzBsQixjQUFMLEVBRjhCO3FCQUdoQyxLQUFLYyx1QkFBTCxFQUhnQzt3QkFJN0Isc0JBQUN4a0IsT0FBRCxFQUFhOzRCQUNULElBQWhCO29CQUNRM1AsSUFBUixDQUFhO3FCQUFNLE9BQUtvMEIsdUJBQUwsRUFBTjthQUFiOztTQU5KOztZQVVJLENBQUNGLGFBQUwsRUFBb0I7ZUFDYkUsdUJBQUw7O09BYkosTUFlTzthQUNBQyxvQkFBTDs7V0FFR04sY0FBTCxHQUFzQixJQUF0Qjs7WUFFTXhlLE9BQU4sQ0FBY29GLGNBQWQ7Ozs7Ozs7OzsyQkFNSzJaLE9BQU87YUFDTHB5QixJQUFQLENBQVlveUIsS0FBWixFQUFtQi94QixPQUFuQixDQUEyQixVQUFTaEwsR0FBVCxFQUFjO2FBQ2xDQSxHQUFMLElBQVkrOEIsTUFBTS84QixHQUFOLENBQVo7T0FEeUIsQ0FFekIxSSxJQUZ5QixDQUVwQixJQUZvQixDQUEzQjs7OzsyQ0FLcUI7VUFDakIsS0FBS2tsQyxjQUFULEVBQXlCO1lBQ2pCblgsV0FBVyxLQUFLMlgsa0JBQUwsQ0FBd0IsS0FBS1IsY0FBN0IsQ0FBakI7WUFDTXZ5QixXQUFXLEdBQWpCO1lBQ01nekIsY0FBY2h6QixXQUFXLEdBQVgsR0FBaUJvYixRQUFyQztZQUNNMlQsU0FBUyxLQUFLa0Usd0JBQUwsQ0FDYixLQUFLN0MsT0FBTCxJQUFnQixLQUFLb0MsZUFBTCxDQUFxQixLQUFLRCxjQUExQixJQUE0QyxDQUE1QyxHQUFnRCxDQUFDUyxXQUFqRCxHQUErREEsV0FBL0UsQ0FEYSxDQUFmOzthQUlLNUMsT0FBTCxHQUFlckIsTUFBZjs7ZUFFTyxLQUFLTyx3QkFBTCxFQUFQLEVBQ0cxZSxLQURILENBQ1M7cUJBQ00sS0FBS3NpQix3QkFBTCxDQUE4QixLQUFLOUMsT0FBbkM7U0FGZixFQUdLO29CQUNTcHdCLFFBRFQ7a0JBRU87U0FMWixFQU9HNFEsS0FQSCxDQU9TLFVBQVN6TyxJQUFULEVBQWU7O2VBRWZ5dkIsdUJBQUw7U0FGSyxDQUdMdmtDLElBSEssQ0FHQSxJQUhBLENBUFQsRUFXR3NrQixJQVhIOzs7Ozs2Q0FlcUJvZCxRQUFRO1VBQ3pCcHFCLE1BQU0sS0FBS2d0QixtQkFBTCxFQUFaOztVQUVJLENBQUMsS0FBS0ksVUFBVixFQUFzQjtlQUNidDlCLEtBQUtrUSxHQUFMLENBQVMsQ0FBVCxFQUFZbFEsS0FBS21RLEdBQUwsQ0FBU0QsR0FBVCxFQUFjb3FCLE1BQWQsQ0FBWixDQUFQOztVQUVFb0UsTUFBTSxFQUFWO1VBQ00zQixPQUFPLEtBQUtuQyxvQkFBTCxFQUFiO1VBQ00rRCxhQUFhLEtBQUtsQyxTQUF4Qjs7V0FFSyxJQUFJamtDLElBQUksQ0FBYixFQUFnQkEsSUFBSW1tQyxVQUFwQixFQUFnQ25tQyxHQUFoQyxFQUFxQztZQUMvQkEsSUFBSXVrQyxJQUFKLEdBQVcsS0FBS3BDLE9BQWhCLEdBQTBCenFCLEdBQTlCLEVBQW1DO2NBQzdCcFosSUFBSixDQUFTMEIsSUFBSXVrQyxJQUFKLEdBQVcsS0FBS3BDLE9BQXpCOzs7VUFHQTdqQyxJQUFKLENBQVNvWixHQUFUOztVQUVJa1gsSUFBSixDQUFTLFVBQVNpSyxJQUFULEVBQWVDLEtBQWYsRUFBc0I7ZUFDdEJ0eEIsS0FBS2toQixHQUFMLENBQVNtUSxPQUFPaUosTUFBaEIsQ0FBUDtnQkFDUXQ2QixLQUFLa2hCLEdBQUwsQ0FBU29RLFFBQVFnSixNQUFqQixDQUFSOztlQUVPakosT0FBT0MsS0FBZDtPQUpGOztZQU9Nb04sSUFBSXZnQyxNQUFKLENBQVcsVUFBUzRQLElBQVQsRUFBZTZ3QixHQUFmLEVBQW9CO2VBQzVCLENBQUNBLEdBQUQsSUFBUTd3QixRQUFRMndCLElBQUlFLE1BQU0sQ0FBVixDQUF2QjtPQURJLENBQU47O1VBSU1DLGFBQWEsS0FBS2pELGdCQUFMLEdBQXdCbUIsSUFBeEIsR0FBK0IsS0FBS3BDLE9BQXZEO1VBQ01tRSxjQUFjOStCLEtBQUtraEIsR0FBTCxDQUFTb1osU0FBU3VFLFVBQWxCLElBQWdDOUIsSUFBcEQ7VUFDSXJ4QixTQUFTZ3pCLElBQUksQ0FBSixDQUFiOztVQUVJSSxlQUFlLEtBQUtDLGVBQXhCLEVBQXlDO2lCQUM5QkYsVUFBVDtPQURGLE1BRU8sSUFBSUMsY0FBYyxHQUFsQixFQUF1QjtZQUN4QkosSUFBSSxDQUFKLE1BQVdHLFVBQVgsSUFBeUJILElBQUl4bkMsTUFBSixHQUFhLENBQTFDLEVBQTZDO21CQUNsQ3duQyxJQUFJLENBQUosQ0FBVDs7OzthQUlHMStCLEtBQUtrUSxHQUFMLENBQVMsQ0FBVCxFQUFZbFEsS0FBS21RLEdBQUwsQ0FBU0QsR0FBVCxFQUFjeEUsTUFBZCxDQUFaLENBQVA7Ozs7Ozs7OzsrQ0FNeUI7YUFDbEJQLEtBQUt5TCxTQUFMLENBQWUsS0FBS2hJLFFBQXBCLEVBQ0p6USxNQURJLENBQ0csVUFBQ2dZLEtBQUQ7ZUFBV0EsTUFBTTNOLFFBQU4sQ0FBZS9ELFdBQWYsT0FBaUMsbUJBQTVDO09BREgsQ0FBUDs7Ozs7Ozs7Ozs7OEJBU1E2MUIsUUFBc0I7OztVQUFkenZCLE9BQWMsdUVBQUosRUFBSTs7VUFDeEJtMEIsbUJBQW1CLEtBQUtDLGNBQTlCOztVQUVNQyxrQkFBa0IsU0FBbEJBLGVBQWtCLENBQUM1RSxNQUFELEVBQVk7WUFDNUI2RSxRQUFRLElBQWQ7O1lBRUk3RSxTQUFTLENBQWIsRUFBZ0I7aUJBQ1AwRSxtQkFBbUJoL0IsS0FBSzQ4QixLQUFMLENBQVd0QyxTQUFTNkUsS0FBcEIsQ0FBbkIsR0FBZ0QsQ0FBdkQ7OztZQUdJQyxZQUFZLE9BQUtsQyxtQkFBTCxFQUFsQjtZQUNJa0MsWUFBWTlFLE1BQWhCLEVBQXdCO2lCQUNmMEUsbUJBQW1CSSxZQUFZcC9CLEtBQUs0OEIsS0FBTCxDQUFXLENBQUN0QyxTQUFTOEUsU0FBVixJQUF1QkQsS0FBbEMsQ0FBL0IsR0FBMEVDLFNBQWpGOzs7ZUFHSzlFLE1BQVA7T0FaRjs7YUFlTyxJQUFJbGhDLE9BQUosQ0FBWSxtQkFBVztlQUNyQixPQUFLeWhDLHdCQUFMLEVBQVAsRUFDRzFlLEtBREgsQ0FDUztxQkFDTSxPQUFLc2lCLHdCQUFMLENBQThCUyxnQkFBZ0I1RSxNQUFoQixDQUE5QjtTQUZmLEVBR0t6dkIsUUFBUUcsU0FBUixLQUF1QixNQUF2QixHQUFnQ0gsUUFBUVEsZ0JBQXhDLEdBQTJELEVBSGhFLEVBSUc2UixJQUpILENBSVEsWUFBTTtjQUNOclMsUUFBUTdDLFFBQVIsWUFBNEJ4TyxRQUFoQyxFQUEwQztvQkFDaEN3TyxRQUFSOzs7U0FOTjtPQURLLENBQVA7Ozs7MENBY29CO1VBQ2RrSSxNQUFNLEtBQUt1c0IsU0FBTCxHQUFpQixLQUFLN0Isb0JBQUwsRUFBakIsR0FBK0MsS0FBSytCLGVBQUwsRUFBM0Q7YUFDTzM4QixLQUFLcS9CLElBQUwsQ0FBVW52QixNQUFNLENBQU4sR0FBVSxDQUFWLEdBQWNBLEdBQXhCLENBQVAsQ0FGb0I7Ozs7a0NBS1JvcUIsUUFBUTtVQUNoQkEsU0FBUyxDQUFULElBQWNBLFNBQVMsS0FBSzRDLG1CQUFMLEVBQTNCLEVBQXVEO2VBQzlDLElBQVA7O2FBRUssS0FBUDs7Ozs4Q0FHd0I7VUFDcEIsS0FBS2YsV0FBTCxFQUFKLEVBQXdCO2VBQ2YsS0FBS1IsT0FBTCxJQUFnQixDQUFoQixHQUFvQixJQUFwQixHQUEyQixNQUFsQztPQURGLE1BRU87ZUFDRSxLQUFLQSxPQUFMLElBQWdCLENBQWhCLEdBQW9CLE1BQXBCLEdBQTZCLE9BQXBDOzs7Ozs4Q0FJc0I7VUFDbEJwd0IsV0FBVyxHQUFqQjs7VUFFSSxLQUFLb3dCLE9BQUwsR0FBZSxDQUFuQixFQUFzQjtlQUNiLEtBQUtkLHdCQUFMLEVBQVAsRUFDRzFlLEtBREgsQ0FDUztxQkFDTSxLQUFLc2lCLHdCQUFMLENBQThCLENBQTlCO1NBRmYsRUFHSztvQkFDU2x6QixRQURUO2tCQUVPO1NBTFosRUFPRzRRLEtBUEgsQ0FPUyxVQUFTek8sSUFBVCxFQUFlOztlQUVmeXZCLHVCQUFMO1NBRkssQ0FHTHZrQyxJQUhLLENBR0EsSUFIQSxDQVBULEVBV0dza0IsSUFYSDthQVlLeWUsT0FBTCxHQUFlLENBQWY7Ozs7VUFJSXlELFlBQVksS0FBS2xDLG1CQUFMLEVBQWxCOztVQUVJa0MsWUFBWSxLQUFLekQsT0FBckIsRUFBOEI7ZUFDckIsS0FBS2Qsd0JBQUwsRUFBUCxFQUNHMWUsS0FESCxDQUNTO3FCQUNNLEtBQUtzaUIsd0JBQUwsQ0FBOEJXLFNBQTlCO1NBRmYsRUFHSztvQkFDUzd6QixRQURUO2tCQUVPO1NBTFosRUFPRzRRLEtBUEgsQ0FPUyxVQUFTek8sSUFBVCxFQUFlOztlQUVmeXZCLHVCQUFMO1NBRkssQ0FHTHZrQyxJQUhLLENBR0EsSUFIQSxDQVBULEVBV0dza0IsSUFYSDthQVlLeWUsT0FBTCxHQUFleUQsU0FBZjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzhCQTBCTTs7VUFFSixLQUFLeEUsb0JBQUwsT0FBZ0MsQ0FBcEMsRUFBdUM7Ozs7V0FJbENzQixNQUFMLENBQVksS0FBS0MsV0FBTCxLQUFxQi9CLGlCQUFyQixHQUF5Q21CLG1CQUFyRDtXQUNLK0QsTUFBTDs7VUFFSSxLQUFLOUMsVUFBTCxJQUFtQixLQUFLQSxVQUFMLENBQWdCckMsS0FBaEIsR0FBd0IsQ0FBL0MsRUFBa0Q7WUFDNUNHLFNBQVMsS0FBS3FCLE9BQWxCLENBRGdEOztZQUc1QyxLQUFLcUMsYUFBTCxDQUFtQjFELE1BQW5CLENBQUosRUFBZ0M7ZUFDekI2RCx1QkFBTDtTQURGLE1BRU87Y0FDRCxLQUFLYixVQUFULEVBQXFCO3FCQUNWLEtBQUtrQix3QkFBTCxDQUE4QmxFLE1BQTlCLENBQVQ7OztlQUdHMkMsU0FBTCxDQUFlM0MsTUFBZjs7OztXQUlDaUYsY0FBTDs7V0FFSzduQixtQkFBTCxDQUF5QixJQUF6QixFQUErQixTQUEvQixFQUEwQyxFQUFDOG5CLFVBQVUsSUFBWCxFQUExQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzswQkF5QkkzMEIsU0FBUzthQUNOLEtBQUt1eEIsY0FBTCxDQUFvQixDQUFwQixFQUF1QnZ4QixPQUF2QixDQUFQOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O3lCQXlCR0EsU0FBUztXQUNQdXhCLGNBQUwsQ0FDRXA4QixLQUFLa1EsR0FBTCxDQUFTLEtBQUt1c0IsU0FBTCxHQUFpQixDQUExQixFQUE2QixDQUE3QixDQURGLEVBQ21DNXhCLE9BRG5DOzs7O3dDQUtrQjs7O1dBQ2I0MEIsc0JBQUw7O1dBRUtILE1BQUw7V0FDS0ksa0JBQUw7O1dBRUtILGNBQUw7OztVQUdJLEtBQUszdkIsWUFBTCxLQUFzQixDQUExQixFQUE2QjtxQkFDZDtpQkFBTSxPQUFLMnNCLE9BQUwsRUFBTjtTQUFiOzs7Ozs2Q0FRcUI1NUIsTUFBTWtKLE1BQU1DLFNBQVM7Y0FDcENuSixJQUFSO2FBQ08sV0FBTDtlQUNPODZCLGdCQUFMOzthQUVHLGNBQUw7ZUFDT0Msa0JBQUw7O2FBRUcsV0FBTDtlQUNPaUMsa0JBQUw7Ozs7OzJDQUlpQjtXQUNoQjVzQixxQkFBTDs7Ozs7Ozs7Ozs7Ozt3QkE3SGM7YUFDUCxLQUFLOG5CLHdCQUFMLEdBQWdDM2pDLE1BQXZDOzs7O3dCQXNJb0I7VUFDZDBvQyxPQUFPLEtBQUszcEMsWUFBTCxDQUFrQixtQkFBbEIsQ0FBYjs7VUFFSSxDQUFDMnBDLElBQUwsRUFBVztlQUNGLEdBQVA7OztVQUdJZCxjQUFjZSxXQUFXRCxJQUFYLENBQXBCO1VBQ0lkLGNBQWMsR0FBZCxJQUFxQkEsY0FBYyxHQUF2QyxFQUE0QztjQUNwQyxJQUFJN21DLEtBQUosQ0FBVSxnQkFBVixDQUFOOzs7YUFHS2thLE1BQU0yc0IsV0FBTixJQUFxQixHQUFyQixHQUEyQkEsV0FBbEM7O3NCQUdrQkssT0FBTztVQUNyQkEsUUFBUSxHQUFSLElBQWVBLFFBQVEsR0FBM0IsRUFBZ0M7Y0FDeEIsSUFBSWxuQyxLQUFKLENBQVUsZ0JBQVYsQ0FBTjs7O1dBR0dvRSxZQUFMLENBQWtCLG1CQUFsQixFQUF1QzhpQyxLQUF2Qzs7Ozs7Ozs7Ozs7Ozt3QkFVYzthQUNQLEtBQUtseUIsWUFBTCxDQUFrQixXQUFsQixDQUFQOztzQkFHWXJOLE9BQU87YUFDWnVMLEtBQUswTixlQUFMLENBQXFCLElBQXJCLEVBQTJCLFdBQTNCLEVBQXdDalosS0FBeEMsQ0FBUDs7Ozs7Ozs7Ozs7Ozt3QkFVZTthQUNSLEtBQUtxTixZQUFMLENBQWtCLGFBQWxCLENBQVA7O3NCQUdhck4sT0FBTzthQUNidUwsS0FBSzBOLGVBQUwsQ0FBcUIsSUFBckIsRUFBMkIsYUFBM0IsRUFBMENqWixLQUExQyxDQUFQOzs7Ozs7Ozs7Ozs7O3dCQVVhO2FBQ04sS0FBS3FOLFlBQUwsQ0FBa0IsVUFBbEIsQ0FBUDs7c0JBR1dyTixPQUFPO2FBQ1h1TCxLQUFLME4sZUFBTCxDQUFxQixJQUFyQixFQUEyQixVQUEzQixFQUF1Q2paLEtBQXZDLENBQVA7Ozs7Ozs7Ozs7Ozs7d0JBVW1CO2FBQ1osS0FBS3FOLFlBQUwsQ0FBa0IsZ0JBQWxCLENBQVA7O3NCQUdpQnJOLE9BQU87YUFDakJ1TCxLQUFLME4sZUFBTCxDQUFxQixJQUFyQixFQUEyQixnQkFBM0IsRUFBNkNqWixLQUE3QyxDQUFQOzs7Ozs7Ozs7Ozs7O3dCQVVhO2FBQ04sS0FBS3FOLFlBQUwsQ0FBa0IsVUFBbEIsQ0FBUDs7c0JBR1dyTixPQUFPO2FBQ1h1TCxLQUFLME4sZUFBTCxDQUFxQixJQUFyQixFQUEyQixVQUEzQixFQUF1Q2paLEtBQXZDLENBQVA7Ozs7d0JBM0g4QjthQUN2QixDQUFDLFdBQUQsRUFBYyxjQUFkLEVBQThCLFdBQTlCLENBQVA7Ozs7d0JBNkhrQjthQUNYLENBQUMsWUFBRCxFQUFlLFNBQWYsRUFBMEIsWUFBMUIsQ0FBUDs7OztFQXI3QnlDbzNCOztBQXk3QjdDNWlDLGVBQWVrRyxNQUFmLENBQXNCLGNBQXRCLEVBQXNDb2hDLGVBQXRDOztBQ3ZsQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBaUJBLEFBRUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFvQ3FCb0U7Ozs7Ozs7Ozs7MkJBRVo7VUFDRCxLQUFLN3BDLFlBQUwsQ0FBa0IsT0FBbEIsQ0FBSixFQUFnQzthQUN6QjhwQyxZQUFMOzs7Ozs2Q0FRcUJwOUIsTUFBTWtKLE1BQU1DLFNBQVM7VUFDeENuSixTQUFTLE9BQWIsRUFBc0I7YUFDZm85QixZQUFMOzs7OzttQ0FJVztVQUNUNUYsUUFBUSxLQUFLbGtDLFlBQUwsQ0FBa0IsT0FBbEIsQ0FBWjtVQUNJLE9BQU9ra0MsS0FBUCxLQUFrQixRQUF0QixFQUFnQztnQkFDdEIsQ0FBQyxLQUFLQSxLQUFOLEVBQWEzMUIsSUFBYixFQUFSO2dCQUNRMjFCLE1BQU0zMEIsS0FBTixDQUFZLE9BQVosSUFBdUIyMEIsUUFBUSxHQUEvQixHQUFxQ0EsS0FBN0M7O2FBRUtycUIsS0FBTCxDQUFXa3dCLGFBQVgsR0FBMkIsR0FBM0I7YUFDS2x3QixLQUFMLENBQVdtd0IsVUFBWCxHQUF3QixTQUFTOUYsS0FBakM7YUFDS3JxQixLQUFMLENBQVdvd0IsVUFBWCxHQUF3QixHQUF4QjthQUNLcHdCLEtBQUwsQ0FBV3F3QixPQUFYLEdBQXFCLFNBQVNoRyxLQUE5QjthQUNLcnFCLEtBQUwsQ0FBV3N3QixNQUFYLEdBQW9CLFNBQVNqRyxLQUE3QjthQUNLcnFCLEtBQUwsQ0FBV3V3QixJQUFYLEdBQWtCLFNBQVNsRyxLQUEzQjthQUNLcnFCLEtBQUwsQ0FBV3d3QixRQUFYLEdBQXNCbkcsS0FBdEI7Ozs7O3dCQXRCNEI7YUFDdkIsQ0FBQyxPQUFELENBQVA7Ozs7RUFUb0NuRDs7QUFtQ3hDNWlDLGVBQWVrRyxNQUFmLENBQXNCLFNBQXRCLEVBQWlDd2xDLFVBQWpDOztBQzFGQTs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFpQkEsQUFDQSxBQUVBLElBQWFTLGNBQWI7Ozs0QkFFbUU7bUZBQUosRUFBSTsyQkFBcERybUIsTUFBb0Q7UUFBcERBLE1BQW9ELCtCQUEzQyxRQUEyQzswQkFBakMxTyxLQUFpQztRQUFqQ0EsS0FBaUMsOEJBQXpCLENBQXlCOzZCQUF0QkQsUUFBc0I7UUFBdEJBLFFBQXNCLGlDQUFYLEdBQVc7OzswSEFDekQsRUFBRTJPLGNBQUYsRUFBVTFPLFlBQVYsRUFBaUJELGtCQUFqQixFQUR5RDs7Ozs7Ozs7Ozs7eUJBUTVEa2hCLE1BVlAsRUFVZS9lLElBVmYsRUFVcUI7Ozs7Ozs7Ozs7O3lCQVFkK2UsTUFsQlAsRUFrQmUvZSxJQWxCZixFQWtCcUI7Ozs7O0VBbEJlcWxCLFlBQXBDOzs7OztBQTBCQSxJQUFheU4scUJBQWI7OzttQ0FFd0U7b0ZBQUosRUFBSTs2QkFBekR0bUIsTUFBeUQ7UUFBekRBLE1BQXlELGdDQUFoRCxhQUFnRDs0QkFBakMxTyxLQUFpQztRQUFqQ0EsS0FBaUMsK0JBQXpCLENBQXlCOytCQUF0QkQsUUFBc0I7UUFBdEJBLFFBQXNCLGtDQUFYLEdBQVc7Ozt3SUFDOUQsRUFBQzJPLGNBQUQsRUFBUzFPLFlBQVQsRUFBZ0JELGtCQUFoQixFQUQ4RDs7Ozs7Ozs7Ozs7eUJBUWpFa2hCLE1BVlAsRUFVZXprQixRQVZmLEVBVXlCO2lCQUNWQSxXQUFXQSxRQUFYLEdBQXNCLFlBQVcsRUFBNUM7O2FBRU9pVixNQUFQLENBRUVvVyxPQUFPNUcsT0FBT2tMLEtBQWQsRUFDR3hiLEtBREgsQ0FDUztpQkFDSTtPQUZiLEVBSUc5SixJQUpILENBSVEsS0FBSzdHLEtBSmIsRUFLRzJRLEtBTEgsQ0FLUztpQkFDSTtPQU5iLEVBT0s7a0JBQ1MsS0FBSzVRLFFBRGQ7Z0JBRU8sS0FBSzJPO09BVGpCLENBRkYsRUFjRW1aLE9BQU81RyxPQUFPbUwsT0FBZCxFQUNHQyxTQURILEdBRUcxYixLQUZILENBRVM7YUFDQTtxQkFDUSw0QkFEUjttQkFFTTtTQUhOO2tCQUtLO09BUGQsRUFTRzlKLElBVEgsQ0FTUSxLQUFLN0csS0FUYixFQVVHMlEsS0FWSCxDQVVTO2FBQ0E7cUJBQ1EsNEJBRFI7bUJBRU07U0FITjtrQkFLSyxLQUFLNVEsUUFMVjtnQkFNRyxLQUFLMk87T0FoQmpCLEVBa0JHNGQsWUFsQkgsR0FtQkczYixLQW5CSCxDQW1CUyxVQUFTek8sSUFBVCxFQUFlOzs7T0FuQnhCLENBZEY7Ozs7Ozs7Ozs7eUJBNENHK2UsTUF6RFAsRUF5RGV6a0IsUUF6RGYsRUF5RHlCO2lCQUNWQSxXQUFXQSxRQUFYLEdBQXNCLFlBQVcsRUFBNUM7O2FBRU9pVixNQUFQLENBRUVvVyxPQUFPNUcsT0FBT2tMLEtBQWQsRUFDR3hiLEtBREgsQ0FDUztpQkFDSTtPQUZiLEVBSUc5SixJQUpILENBSVEsS0FBSzdHLEtBSmIsRUFLRzJRLEtBTEgsQ0FLUztpQkFDSTtPQU5iLEVBT0s7a0JBQ1MsS0FBSzVRLFFBRGQ7Z0JBRU8sS0FBSzJPO09BVGpCLENBRkYsRUFjRW1aLE9BQU81RyxPQUFPbUwsT0FBZCxFQUNHQyxTQURILEdBRUcxYixLQUZILENBRVM7YUFDQTtxQkFDUSw0QkFEUjttQkFFTTtTQUhOO2tCQUtLO09BUGQsRUFTRzlKLElBVEgsQ0FTUSxLQUFLN0csS0FUYixFQVVHMlEsS0FWSCxDQVVTO2FBQ0E7cUJBQ1EsNEJBRFI7bUJBRU07U0FITjtrQkFLSyxLQUFLNVEsUUFMVjtnQkFNRyxLQUFLMk87T0FoQmpCLEVBa0JHNGQsWUFsQkgsR0FtQkczYixLQW5CSCxDQW1CUyxVQUFTek8sSUFBVCxFQUFlOzs7T0FuQnhCLENBZEY7Ozs7RUE1RHVDNnlCLGNBQTNDOzs7OztBQXlHQSxJQUFhRSxpQkFBYjs7OytCQUV3RTtvRkFBSixFQUFJOzZCQUF6RHZtQixNQUF5RDtRQUF6REEsTUFBeUQsZ0NBQWhELGFBQWdEOzRCQUFqQzFPLEtBQWlDO1FBQWpDQSxLQUFpQywrQkFBekIsQ0FBeUI7K0JBQXRCRCxRQUFzQjtRQUF0QkEsUUFBc0Isa0NBQVgsR0FBVzs7OztzSUFDOUQsRUFBQzJPLGNBQUQsRUFBUzFPLFlBQVQsRUFBZ0JELGtCQUFoQixFQUQ4RDs7V0FHL0RtMUIsVUFBTCxHQUFrQm5uQyxTQUFTZzBCLElBQVQsQ0FBY29ULFlBQWhDLENBSG9FOzs7Ozs7Ozs7Ozs7eUJBVWpFbFUsTUFaUCxFQVllemtCLFFBWmYsRUFZeUI7aUJBQ1ZBLFdBQVdBLFFBQVgsR0FBc0IsWUFBVyxFQUE1Qzs7YUFFT2lWLE1BQVAsQ0FFRW9XLE9BQU81RyxPQUFPa0wsS0FBZCxFQUNHeGIsS0FESCxDQUNTO2lCQUNJO09BRmIsRUFJRzlKLElBSkgsQ0FJUSxLQUFLN0csS0FKYixFQUtHMlEsS0FMSCxDQUtTO2lCQUNJO09BTmIsRUFPSztrQkFDUyxLQUFLNVEsUUFEZDtnQkFFTyxLQUFLMk87T0FUakIsQ0FGRixFQWNFbVosT0FBTzVHLE9BQU9tTCxPQUFkLEVBQ0dDLFNBREgsR0FFRzFiLEtBRkgsQ0FFUzthQUNBOzZDQUM2QixLQUFLdWtCLFVBQUwsR0FBa0IsR0FBbEIsR0FBd0IsQ0FBeEQ7U0FGRztrQkFJSztPQU5kLEVBUUdydUIsSUFSSCxDQVFRLEtBQUs3RyxLQVJiLEVBU0cyUSxLQVRILENBU1M7YUFDQTtxQkFDUTtTQUZSO2tCQUlLLEtBQUs1USxRQUpWO2dCQUtHLEtBQUsyTztPQWRqQixFQWdCRzRkLFlBaEJILEdBaUJHM2IsS0FqQkgsQ0FpQlMsVUFBU3pPLElBQVQsRUFBZTs7O09BakJ4QixDQWRGOzs7Ozs7Ozs7O3lCQTBDRytlLE1BekRQLEVBeURlemtCLFFBekRmLEVBeUR5QjtpQkFDVkEsV0FBV0EsUUFBWCxHQUFzQixZQUFXLEVBQTVDOzthQUVPaVYsTUFBUCxDQUVFb1csT0FBTzVHLE9BQU9rTCxLQUFkLEVBQ0d4YixLQURILENBQ1M7aUJBQ0k7T0FGYixFQUlHOUosSUFKSCxDQUlRLEtBQUs3RyxLQUpiLEVBS0cyUSxLQUxILENBS1M7aUJBQ0k7T0FOYixFQU9LO2tCQUNTLEtBQUs1USxRQURkO2dCQUVPLEtBQUsyTztPQVRqQixDQUZGLEVBY0VtWixPQUFPNUcsT0FBT21MLE9BQWQsRUFDR0MsU0FESCxHQUVHMWIsS0FGSCxDQUVTO2FBQ0E7cUJBQ1E7U0FGUjtrQkFJSztPQU5kLEVBUUc5SixJQVJILENBUVEsS0FBSzdHLEtBUmIsRUFTRzJRLEtBVEgsQ0FTUzthQUNBOzZDQUM2QixLQUFLdWtCLFVBQUwsR0FBa0IsR0FBbEIsR0FBd0IsQ0FBeEQ7U0FGRztrQkFJSyxLQUFLbjFCLFFBSlY7Z0JBS0csS0FBSzJPO09BZGpCLEVBZ0JHNGQsWUFoQkgsR0FpQkczYixLQWpCSCxDQWlCUyxVQUFTek8sSUFBVCxFQUFlOzs7T0FqQnhCLENBZEY7Ozs7RUE1RG1DNnlCLGNBQXZDOzs7OztBQXVHQSxJQUFhSyxtQkFBYjs7O2lDQUV3RjtvRkFBSixFQUFJOzZCQUF6RTFtQixNQUF5RTtRQUF6RUEsTUFBeUUsZ0NBQWhFLDZCQUFnRTs0QkFBakMxTyxLQUFpQztRQUFqQ0EsS0FBaUMsK0JBQXpCLENBQXlCOytCQUF0QkQsUUFBc0I7UUFBdEJBLFFBQXNCLGtDQUFYLEdBQVc7Ozs7MElBQzlFLEVBQUMyTyxjQUFELEVBQVMxTyxZQUFULEVBQWdCRCxrQkFBaEIsRUFEOEU7O1dBRy9FbTFCLFVBQUwsR0FBa0JubkMsU0FBU2cwQixJQUFULENBQWNvVCxZQUFoQyxDQUhvRjs7Ozs7Ozs7Ozs7O3lCQVVqRmxVLE1BWlAsRUFZZXprQixRQVpmLEVBWXlCO2lCQUNWQSxXQUFXQSxRQUFYLEdBQXNCLFlBQVcsRUFBNUM7O2FBRU9pVixNQUFQLENBRUVvVyxPQUFPNUcsT0FBT2tMLEtBQWQsRUFDR3hiLEtBREgsQ0FDUztpQkFDSTtPQUZiLEVBSUc5SixJQUpILENBSVEsS0FBSzdHLEtBSmIsRUFLRzJRLEtBTEgsQ0FLUztpQkFDSTtPQU5iLEVBT0s7a0JBQ1MsS0FBSzVRLFFBRGQ7Z0JBRU8sS0FBSzJPO09BVGpCLENBRkYsRUFjRW1aLE9BQU81RyxPQUFPbUwsT0FBZCxFQUNHQyxTQURILEdBRUcxYixLQUZILENBRVM7YUFDQTs7NkNBRTZCLEVBQUcsS0FBS3VrQixVQUFMLEdBQWtCLEdBQXJCLElBQTRCLENBQTVCLEdBQWdDalUsT0FBT21MLE9BQVAsQ0FBZStJLFlBQS9FO1NBSEc7a0JBS0s7T0FQZCxFQVNHdHVCLElBVEgsQ0FTUSxLQUFLN0csS0FUYixFQVVHMlEsS0FWSCxDQVVTO2FBQ0E7cUJBQ1E7U0FGUjtrQkFJSyxLQUFLNVEsUUFKVjtnQkFLRyxLQUFLMk87T0FmakIsRUFpQkc0ZCxZQWpCSCxHQWtCRzNiLEtBbEJILENBa0JTLFVBQVN6TyxJQUFULEVBQWU7OztPQWxCeEIsQ0FkRjs7Ozs7Ozs7Ozt5QkEyQ0crZSxNQTFEUCxFQTBEZXprQixRQTFEZixFQTBEeUI7aUJBQ1ZBLFdBQVdBLFFBQVgsR0FBc0IsWUFBVyxFQUE1Qzs7YUFFT2lWLE1BQVAsQ0FFRW9XLE9BQU81RyxPQUFPa0wsS0FBZCxFQUNHeGIsS0FESCxDQUNTO2lCQUNJO09BRmIsRUFJRzlKLElBSkgsQ0FJUSxLQUFLN0csS0FKYixFQUtHMlEsS0FMSCxDQUtTO2lCQUNJO09BTmIsRUFPSztrQkFDUyxLQUFLNVEsUUFEZDtnQkFFTyxLQUFLMk87T0FUakIsQ0FGRixFQWNFbVosT0FBTzVHLE9BQU9tTCxPQUFkLEVBQ0dDLFNBREgsR0FFRzFiLEtBRkgsQ0FFUzthQUNBO3FCQUNRO1NBRlI7a0JBSUs7T0FOZCxFQVFHOUosSUFSSCxDQVFRLEtBQUs3RyxLQVJiLEVBU0cyUSxLQVRILENBU1M7YUFDQTs7NkNBRTZCLEVBQUcsS0FBS3VrQixVQUFMLEdBQWtCLEdBQXJCLElBQTRCLENBQTVCLEdBQWdDalUsT0FBT21MLE9BQVAsQ0FBZStJLFlBQS9FO1NBSEc7a0JBS0ssS0FBS3AxQixRQUxWO2dCQU1HLEtBQUsyTztPQWZqQixFQWlCRzRkLFlBakJILEdBa0JHM2IsS0FsQkgsQ0FrQlMsVUFBU3pPLElBQVQsRUFBZTs7O09BbEJ4QixDQWRGOzs7O0VBN0RxQzZ5QixjQUF6Qzs7QUM5UEE7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBaUJBLEFBQ0EsQUFDQSxBQUNBLEFBQ0EsQUFDQSxBQUNBLEFBQ0EsQUFDQSxBQUNBLEFBRUEsSUFBTTV6QixXQUFTO2FBQ0YsV0FERTt1QkFFUSxxQkFGUjtrQkFHRztDQUhsQjs7QUFNQSxJQUFNcXJCLGtCQUFnQjthQUNUO1dBQU16ekIsU0FBU21CLFNBQVQsS0FBdUI4NkIscUJBQXZCLEdBQStDQyxpQkFBckQ7R0FEUztXQUVYRyxtQkFGVztVQUdaTDtDQUhWOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztJQStDcUJNOzs7Ozs7Ozs7OzJCQTRHWjs7O21CQUNRLElBQWIsRUFBbUI7ZUFBTSxPQUFLM0ksUUFBTCxFQUFOO09BQW5COztXQUVLL0ksUUFBTCxHQUFnQixLQUFoQjtXQUNLZ0osU0FBTCxHQUFpQixJQUFJeEcsUUFBSixFQUFqQjtXQUNLeUcsWUFBTCxHQUFvQjtlQUFNLE9BQUtDLE9BQUwsRUFBTjtPQUFwQjs7V0FFS0Msc0JBQUw7Ozs7NkNBR3VCO1dBQ2xCQyxnQkFBTCxHQUF3QixJQUFJdHVCLGVBQUosQ0FBb0I7bUJBQy9CK3RCLGVBRCtCO21CQUUvQnVJLGNBRitCO3VCQUczQixnQkFIMkI7MEJBSXhCLEtBQUt0cUMsWUFBTCxDQUFrQixXQUFsQjtPQUpJLENBQXhCOzs7OytCQVFTO2dCQUNDeS9CLE9BQVYsQ0FBa0IsSUFBbEI7O1dBRUs1bEIsS0FBTCxDQUFXb2hCLE9BQVgsR0FBcUIsTUFBckI7V0FDS3BoQixLQUFMLENBQVcwaEIsTUFBWCxHQUFvQixLQUFwQjs7Ozs7Ozs7Ozs7VUFXSSxDQUFDLEtBQUtvRyxPQUFWLEVBQW1CO1lBQ1huTCxTQUFTbHpCLFNBQVNtQixhQUFULENBQXVCLEtBQXZCLENBQWY7ZUFDTzhSLFNBQVAsQ0FBaUJyVyxHQUFqQixDQUFxQixRQUFyQjs7WUFFTWtoQixZQUFZOWQsU0FBU21CLGFBQVQsQ0FBdUIsS0FBdkIsQ0FBbEI7a0JBQ1U4UixTQUFWLENBQW9CclcsR0FBcEIsQ0FBd0Isa0JBQXhCO2VBQ08sS0FBS0MsVUFBWixFQUF3QjtvQkFDWmtGLFdBQVYsQ0FBc0IsS0FBS2xGLFVBQTNCOztlQUVLa0YsV0FBUCxDQUFtQitiLFNBQW5COzthQUVLL2IsV0FBTCxDQUFpQm14QixNQUFqQjs7O1VBR0UsQ0FBQyxLQUFLa0wsS0FBVixFQUFpQjtZQUNUYSxPQUFPai9CLFNBQVNtQixhQUFULENBQXVCLEtBQXZCLENBQWI7YUFDSzhSLFNBQUwsQ0FBZXJXLEdBQWYsQ0FBbUIsYUFBbkI7YUFDS3FGLFlBQUwsQ0FBa0JnOUIsSUFBbEIsRUFBd0IsS0FBS3BpQyxVQUE3Qjs7O1dBR0d3aEMsT0FBTCxDQUFhOW5CLEtBQWIsQ0FBbUIwaEIsTUFBbkIsR0FBNEIsS0FBNUI7V0FDS21HLEtBQUwsQ0FBVzduQixLQUFYLENBQWlCMGhCLE1BQWpCLEdBQTBCLEtBQTFCOztXQUVLbjFCLFlBQUwsQ0FBa0IsaUJBQWxCLEVBQXFDLEVBQXJDOzttQkFFYXE4QixZQUFiLENBQTBCLElBQTFCLEVBQWdDL3JCLFFBQWhDOzs7Ozs7Ozs7Ozs7OzhCQXNCUTs7O1VBQ0osS0FBSzJnQixVQUFMLElBQW1CLENBQUMsS0FBSzBMLFFBQTdCLEVBQXVDO2FBQ2hDQSxRQUFMLEdBQWdCLElBQWhCO2FBQ0szMkIsSUFBTCxHQUNHMEgsSUFESCxDQUVJLFlBQU07aUJBQ0NpdkIsUUFBTCxHQUFnQixLQUFoQjtlQUNLdGhCLG1CQUFMLFNBQStCLGVBQS9CO1NBSk4sRUFNSTtpQkFBTSxPQUFLc2hCLFFBQUwsR0FBZ0IsS0FBdEI7U0FOSjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzJCQStCZTs7O1VBQWRudUIsT0FBYyx1RUFBSixFQUFJOztVQUNiOHRCLFdBQVMsS0FBYjtVQUNNM3dCLFdBQVc2QyxRQUFRN0MsUUFBUixJQUFvQixZQUFXLEVBQWhEOztjQUVRcUQsZ0JBQVIsR0FBMkJGLEtBQUtDLE1BQUwsQ0FDekJQLFFBQVFRLGdCQUFSLElBQTRCLEVBREgsRUFFekJwQixnQkFBZ0IydUIsMkJBQWhCLENBQTRDLEtBQUszaUMsWUFBTCxDQUFrQixtQkFBbEIsQ0FBNUMsQ0FGeUIsQ0FBM0I7O1dBS0t5aEIsbUJBQUwsQ0FBeUIsSUFBekIsRUFBK0IsU0FBL0IsRUFBMEM7Z0JBQ2hDLElBRGdDO2dCQUVoQyxrQkFBVztxQkFDUixJQUFUOztPQUhKOztVQU9JLENBQUNpaEIsUUFBTCxFQUFhO1lBQ0xFLFVBQVUsU0FBVkEsT0FBVSxHQUFNO2NBQ2Q3RyxTQUFTLE9BQUttRyxTQUFMLENBQWV0QixJQUFmLEVBQWY7Y0FDTTlyQixXQUFXLE9BQUt3dEIsZ0JBQUwsQ0FBc0JyRixXQUF0QixDQUFrQ3JvQixPQUFsQyxDQUFqQjs7aUJBRUtpRixLQUFMLENBQVdvaEIsT0FBWCxHQUFxQixPQUFyQjtpQkFDS3lHLEtBQUwsQ0FBVzduQixLQUFYLENBQWlCZ3BCLE9BQWpCLEdBQTJCLEdBQTNCOztpQkFFTyxJQUFJMS9CLE9BQUosQ0FBWSxtQkFBVztpQ0FDVCxZQUFNO3VCQUNkcTBCLElBQVQsU0FBb0IsWUFBTTt1QkFDbkIwQixRQUFMLEdBQWdCLElBQWhCOzs7cUJBR0t6WCxtQkFBTCxTQUErQixVQUEvQixFQUEyQyxFQUFDK1UsY0FBRCxFQUEzQzs7OztlQUpGO2FBREY7V0FESyxDQUFQO1NBUEY7O2VBc0JPLElBQUlyekIsT0FBSixDQUFZLG1CQUFXO2lCQUN2QisrQixTQUFMLENBQWU1RCxVQUFmLENBQTBCO21CQUFNdnJCLFFBQVE2dkIsU0FBUixDQUFOO1dBQTFCO1NBREssQ0FBUDtPQXZCRixNQTBCTztlQUNFei9CLFFBQVFlLE1BQVIsQ0FBZSw0QkFBZixDQUFQOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsyQkEwQmU7OztVQUFkMFEsT0FBYyx1RUFBSixFQUFJOztVQUNiOHRCLFdBQVMsS0FBYjtVQUNNM3dCLFdBQVc2QyxRQUFRN0MsUUFBUixJQUFvQixZQUFXLEVBQWhEOztjQUVRcUQsZ0JBQVIsR0FBMkJGLEtBQUtDLE1BQUwsQ0FDekJQLFFBQVFRLGdCQUFSLElBQTRCLEVBREgsRUFFekJwQixnQkFBZ0IydUIsMkJBQWhCLENBQTRDLEtBQUszaUMsWUFBTCxDQUFrQixtQkFBbEIsQ0FBNUMsQ0FGeUIsQ0FBM0I7O1dBS0t5aEIsbUJBQUwsQ0FBeUIsSUFBekIsRUFBK0IsU0FBL0IsRUFBMEM7Z0JBQ2hDLElBRGdDO2dCQUVoQyxrQkFBVztxQkFDUixJQUFUOztPQUhKOztVQU9JLENBQUNpaEIsUUFBTCxFQUFhO1lBQ0xJLFVBQVUsU0FBVkEsT0FBVSxHQUFNO2NBQ2QvRyxTQUFTLE9BQUttRyxTQUFMLENBQWV0QixJQUFmLEVBQWY7Y0FDTTlyQixXQUFXLE9BQUt3dEIsZ0JBQUwsQ0FBc0JyRixXQUF0QixDQUFrQ3JvQixPQUFsQyxDQUFqQjs7aUJBRU8sSUFBSXpSLE9BQUosQ0FBWSxtQkFBVztpQ0FDVCxZQUFNO3VCQUNkaUosSUFBVCxTQUFvQixZQUFNO3VCQUNuQnlOLEtBQUwsQ0FBV29oQixPQUFYLEdBQXFCLE1BQXJCO3VCQUNLL0IsUUFBTCxHQUFnQixLQUFoQjs7O3FCQUdLelgsbUJBQUwsU0FBK0IsVUFBL0IsRUFBMkMsRUFBQytVLGNBQUQsRUFBM0M7Ozs7ZUFMRjthQURGO1dBREssQ0FBUDtTQUpGOztlQW9CTyxJQUFJcnpCLE9BQUosQ0FBWSxtQkFBVztpQkFDdkIrK0IsU0FBTCxDQUFlNUQsVUFBZixDQUEwQjttQkFBTXZyQixRQUFRK3ZCLFNBQVIsQ0FBTjtXQUExQjtTQURLLENBQVA7T0FyQkYsTUF3Qk87ZUFDRTMvQixRQUFRZSxNQUFSLENBQWUsNEJBQWYsQ0FBUDs7Ozs7Ozs7Ozs7Ozs7O3dDQThDZ0I7OztXQUNiOCtCLGtCQUFMLEdBQTBCO2VBQUssT0FBSzNMLFVBQUwsR0FBa0IsT0FBSytLLE9BQUwsRUFBbEIsR0FBbUM1aUMsRUFBRXlqQyxpQkFBRixFQUF4QztPQUExQjs7bUJBRWEsSUFBYixFQUFtQixZQUFNO2VBQ2xCdkIsS0FBTCxDQUFXLy9CLGdCQUFYLENBQTRCLE9BQTVCLEVBQXFDLE9BQUt3Z0MsWUFBMUMsRUFBd0QsS0FBeEQ7T0FERjs7OzsyQ0FLcUI7V0FDaEJlLGtCQUFMLENBQXdCL3FCLE9BQXhCO1dBQ0srcUIsa0JBQUwsR0FBMEIsSUFBMUI7O1dBRUt4QixLQUFMLENBQVd4dkIsbUJBQVgsQ0FBK0IsT0FBL0IsRUFBd0MsS0FBS2l3QixZQUFMLENBQWtCeC9CLElBQWxCLENBQXVCLElBQXZCLENBQXhDLEVBQXNFLEtBQXRFOzs7OzZDQU91QitKLE1BQU1rSixNQUFNQyxTQUFTO1VBQ3hDbkosU0FBUyxVQUFiLEVBQXlCO2VBQ2hCaUosYUFBYXd0QixpQkFBYixDQUErQnZ0QixJQUEvQixFQUFxQ0MsT0FBckMsRUFBOEMsSUFBOUMsRUFBb0RhLFFBQXBELENBQVA7T0FERixNQUdLLElBQUloSyxTQUFTLFdBQWIsRUFBMEI7YUFDeEIyMUIsc0JBQUw7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozt3QkEvU1E7YUFDSG50QixLQUFLdUUsU0FBTCxDQUFlLElBQWYsRUFBcUIsY0FBckIsQ0FBUDs7Ozt3QkFHWTthQUNMdkUsS0FBS3VFLFNBQUwsQ0FBZSxJQUFmLEVBQXFCLFNBQXJCLENBQVA7Ozs7d0JBd0V1QjthQUNoQixLQUFLeXBCLGtCQUFaOztzQkFHcUJueEIsVUFBVTtVQUMzQixLQUFLbXhCLGtCQUFULEVBQTZCO2FBQ3RCQSxrQkFBTCxDQUF3Qi9xQixPQUF4Qjs7O1dBR0crcUIsa0JBQUwsR0FBMEI1RiwyQkFBMkI4RixhQUEzQixDQUF5QyxJQUF6QyxFQUErQ3J4QixRQUEvQyxDQUExQjs7Ozt3QkErSlk7YUFDTCxLQUFLbW5CLFFBQVo7Ozs7Ozs7Ozs7Ozs7c0JBVVd2dkIsT0FBTzthQUNYdUwsS0FBSzBOLGVBQUwsQ0FBcUIsSUFBckIsRUFBMkIsVUFBM0IsRUFBdUNqWixLQUF2QyxDQUFQOzt3QkFHYTthQUNOLEtBQUtxTixZQUFMLENBQWtCLFVBQWxCLENBQVA7Ozs7Ozs7Ozs7Ozs7c0JBVWFyTixPQUFPO2FBQ2J1TCxLQUFLME4sZUFBTCxDQUFxQixJQUFyQixFQUEyQixZQUEzQixFQUF5Q2paLEtBQXpDLENBQVA7O3dCQUdlO2FBQ1IsS0FBS3FOLFlBQUwsQ0FBa0IsWUFBbEIsQ0FBUDs7Ozs7Ozs7OztxQ0F1Q3NCdEssTUFBTXNJLFVBQVU7VUFDbEMsRUFBRUEsU0FBUzNTLFNBQVQsWUFBOEJpb0MsY0FBaEMsQ0FBSixFQUFxRDtjQUM3QyxJQUFJdG9DLEtBQUosQ0FBVSwrREFBVixDQUFOOztzQkFFWTBLLElBQWQsSUFBc0JzSSxRQUF0Qjs7Ozt3QkF6QjhCO2FBQ3ZCLENBQUMsVUFBRCxFQUFhLFdBQWIsQ0FBUDs7Ozt3QkFZa0I7YUFDWCxDQUFDLFNBQUQsRUFBWSxVQUFaLEVBQXdCLFNBQXhCLEVBQW1DLFVBQW5DLEVBQStDLGVBQS9DLENBQVA7Ozs7d0JBY3FCO2FBQ2Qrc0IsZUFBUDs7Ozt3QkFHMEI7YUFDbkJ1SSxjQUFQOzs7O0VBM2F1Q3ZKOztBQSthM0M1aUMsZUFBZWtHLE1BQWYsQ0FBc0IsWUFBdEIsRUFBb0N1bUMsYUFBcEM7O0FDaGdCQTs7Ozs7Ozs7Ozs7OztBQWFBLEFBQ0EsQUFDQSxBQUNBLEFBQ0EsQUFFQSxJQUFNdkgscUJBQW1CLEtBQXpCOztBQUVBLElBQU0zc0IsV0FBUztNQUNULFFBRFM7Z0JBRUM7Q0FGaEI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFxQnFCbTBCOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7MkJBZ0NaOzs7OztXQUdBeitCLElBQUw7V0FDS21LLFNBQUwsQ0FBZXJXLEdBQWYsQ0FBbUJtakMsa0JBQW5COzttQkFFYSxJQUFiLEVBQW1CLFlBQU07ZUFDbEJwQixRQUFMO09BREY7Ozs7K0JBS1M7Z0JBQ0N4QyxPQUFWLENBQWtCLElBQWxCOztVQUVJLENBQUN2cUIsS0FBS3VFLFNBQUwsQ0FBZSxJQUFmLEVBQXFCLFlBQXJCLENBQUwsRUFBeUM7WUFDakNqUSxVQUFVbEcsU0FBU21CLGFBQVQsQ0FBdUIsTUFBdkIsQ0FBaEI7Z0JBQ1E4UixTQUFSLENBQWtCclcsR0FBbEIsQ0FBc0IsV0FBdEI7O2FBRUt5Z0IsU0FBTCxDQUFlLEtBQUtoWSxVQUFwQixFQUFnQzBOLE9BQWhDLENBQXdDLG1CQUFXO2NBQzdDLENBQUNJLFFBQVFtQyxPQUFULElBQW9CbkMsUUFBUW1DLE9BQVIsQ0FBZ0JwSyxXQUFoQixPQUFrQyxZQUExRCxFQUF3RTtvQkFDOURuSixXQUFSLENBQW9Cb1IsT0FBcEI7O1NBRko7YUFLS3BSLFdBQUwsQ0FBaUJtRSxPQUFqQjs7O1dBR0d3NkIsYUFBTDs7bUJBRWF2QixZQUFiLENBQTBCLElBQTFCLEVBQWdDL3JCLFFBQWhDOztXQUVLZ3BCLGVBQUw7Ozs7d0NBR2tCOzs7bUJBQ0w7ZUFBTSxPQUFLbEksSUFBTCxFQUFOO09BQWI7Ozs7NkNBT3VCOXFCLE1BQU1rSixNQUFNQyxTQUFTO2NBQ3BDbkosSUFBUjthQUNPLE9BQUw7Y0FDTSxDQUFDLEtBQUs2SixTQUFMLENBQWVzdEIsUUFBZixDQUF3QlIsa0JBQXhCLENBQUwsRUFBZ0Q7aUJBQ3pDampCLFNBQUwsR0FBaUJpakIscUJBQW1CLEdBQW5CLEdBQXlCeHRCLE9BQTFDOzs7YUFHQyxVQUFMO3VCQUNlc3RCLGlCQUFiLENBQStCdnRCLElBQS9CLEVBQXFDQyxPQUFyQyxFQUE4QyxJQUE5QyxFQUFvRGEsUUFBcEQ7O2FBRUcsUUFBTDtlQUNPc3RCLGFBQUw7O2FBRUcsVUFBTDtlQUNPdEUsZUFBTDs7Ozs7OzRCQUtFO1dBQ0RsSSxJQUFMOzs7OzRCQUdNOzs7bUJBQ087ZUFBTSxPQUFLcHJCLElBQUwsRUFBTjtPQUFiOzs7O29DQUdjO1dBQ1Q4VyxZQUFMLENBQWtCLElBQWxCOzs7O3NDQUdnQjtVQUNWUCxXQUFXLEtBQUszaUIsWUFBTCxDQUFrQixVQUFsQixDQUFqQjtXQUNLdVcsU0FBTCxDQUFlL08sTUFBZixDQUNFLGdCQURGLEVBRUUsb0JBRkYsRUFHRSxtQkFIRixFQUlFLGlCQUpGLEVBS0Usa0JBTEYsRUFNRSxxQkFORjtjQU9RbWIsUUFBUjthQUNPLFdBQUw7YUFDSyxXQUFMO2VBQ09wTSxTQUFMLENBQWVyVyxHQUFmLENBQW1CLGlCQUFuQjs7YUFFRyxVQUFMO2FBQ0ssVUFBTDtlQUNPcVcsU0FBTCxDQUFlclcsR0FBZixDQUFtQixnQkFBbkI7O2FBRUcsY0FBTDthQUNLLGNBQUw7ZUFDT3FXLFNBQUwsQ0FBZXJXLEdBQWYsQ0FBbUIsb0JBQW5COzthQUVHLGFBQUw7YUFDSyxhQUFMO2VBQ09xVyxTQUFMLENBQWVyVyxHQUFmLENBQW1CLG1CQUFuQjs7YUFFRyxZQUFMO2FBQ0ssWUFBTDtlQUNPcVcsU0FBTCxDQUFlclcsR0FBZixDQUFtQixrQkFBbkI7O2FBRUcsZUFBTDthQUNLLGVBQUw7ZUFDT3FXLFNBQUwsQ0FBZXJXLEdBQWYsQ0FBbUIscUJBQW5COzs7Ozs7Ozs7Ozs7Ozs7OzsyQkFjYTtVQUFkMFUsT0FBYyx1RUFBSixFQUFJOztXQUNaaUYsS0FBTCxDQUFXaXhCLFNBQVgsR0FBdUIsVUFBdkI7V0FDS2p4QixLQUFMLENBQVdreEIsZUFBWCxHQUE2QixVQUE3Qjs7Ozs7Ozs7Ozs7OzsyQkFVaUI7VUFBZG4yQixPQUFjLHVFQUFKLEVBQUk7O1dBQ1ppRixLQUFMLENBQVdpeEIsU0FBWCxHQUF1QixVQUF2QjtXQUNLanhCLEtBQUwsQ0FBV2t4QixlQUFYLEdBQTZCLFVBQTdCOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzZCQXFDTztXQUNGdFIsT0FBTCxHQUFlLEtBQUtydEIsSUFBTCxFQUFmLEdBQTZCLEtBQUtvckIsSUFBTCxFQUE3Qjs7OztzQkE1Qlc3dEIsT0FBTzthQUNYdUwsS0FBSzBOLGVBQUwsQ0FBcUIsSUFBckIsRUFBMkIsVUFBM0IsRUFBdUNqWixLQUF2QyxDQUFQOzt3QkFHYTthQUNOLEtBQUtxTixZQUFMLENBQWtCLFVBQWxCLENBQVA7Ozs7Ozs7Ozs7Ozs7O3dCQVdZO2FBQ0wsS0FBSzZDLEtBQUwsQ0FBV2l4QixTQUFYLEtBQXlCLFVBQXpCLElBQXVDLEtBQUtqeEIsS0FBTCxDQUFXb2hCLE9BQVgsS0FBdUIsTUFBckU7Ozs7d0JBMUg4QjthQUN2QixDQUFDLFVBQUQsRUFBYSxRQUFiLEVBQXVCLFVBQXZCLEVBQW1DLE9BQW5DLENBQVA7Ozs7RUF0RW9DOEY7O0FBOE14QzVpQyxlQUFla0csTUFBZixDQUFzQixTQUF0QixFQUFpQ3dtQyxVQUFqQzs7QUN4UEE7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBaUJBLEFBQ0EsQUFFQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBZ0NxQkc7Ozs7Ozs7Ozs7MkJBQ1o7V0FDQTFELGdCQUFMLEdBQXdCLElBQUk5ZixlQUFKLENBQW9CLElBQXBCLENBQXhCOzs7O0VBRmdEdVo7O0FBTXBENWlDLGVBQWVrRyxNQUFmLENBQXNCLHNCQUF0QixFQUE4QzJtQyxzQkFBOUM7O0FDMURBOzs7Ozs7Ozs7Ozs7Ozs7OztBQWlCQSxBQUNBLEFBQ0EsQUFFQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztJQTJCcUJDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsyQkE0RVo7V0FDQWhKLFFBQUw7Ozs7NkNBT3VCdjFCLE1BQU1rSixNQUFNQyxTQUFTO1VBQ3hDLENBQUMsTUFBRCxFQUFTLE1BQVQsRUFBaUIsVUFBakIsRUFBNkJyVCxPQUE3QixDQUFxQ2tLLElBQXJDLE1BQStDLENBQUMsQ0FBcEQsRUFBdUQ7YUFDaER3K0IsT0FBTDs7Ozs7K0JBSU87OztnQkFDQ3pMLE9BQVYsQ0FBa0IsSUFBbEI7V0FDS3lMLE9BQUw7bUJBQ2E7ZUFBTSxPQUFLQSxPQUFMLEVBQU47T0FBYixFQUhTOzs7OzhCQU1EOzs7V0FDSEMsb0JBQUw7O2lDQUMyQixLQUFLQyxtQkFBTCxDQUF5QixLQUFLQyxhQUFMLENBQW1CLE1BQW5CLENBQXpCLEVBQXFELEtBQUtBLGFBQUwsQ0FBbUIsTUFBbkIsQ0FBckQsQ0FGbkI7VUFFRDkwQixTQUZDLHdCQUVEQSxTQUZDO1VBRVVzRCxLQUZWLHdCQUVVQSxLQUZWOztXQUdIMUUsTUFBTCxDQUFZLEtBQUswRSxLQUFqQixFQUF3QkEsS0FBeEI7O2dCQUVVeEQsT0FBVixDQUFrQjtlQUFhLE9BQUtFLFNBQUwsQ0FBZXJXLEdBQWYsQ0FBbUJrZ0IsU0FBbkIsQ0FBYjtPQUFsQjs7OztrQ0FHWXVwQixNQUFNO1VBQ1oyQixRQUFRLENBQUMsS0FBS3RyQyxZQUFMLENBQWtCMnBDLElBQWxCLEtBQTJCLEVBQTVCLEVBQWdDbnJDLEtBQWhDLENBQXNDLFNBQXRDLENBQWQ7VUFDTStzQyxNQUFNRCxNQUFNLENBQU4sQ0FBWjtVQUNJRSxLQUFLRixNQUFNLENBQU4sQ0FBVDtXQUNLLENBQUNFLE1BQU0sRUFBUCxFQUFXaHRDLEtBQVgsQ0FBaUIsU0FBakIsQ0FBTDthQUNPLENBQUMwVyxLQUFLNk0sV0FBTCxDQUFpQixJQUFqQixFQUF1QnlwQixHQUFHLENBQUgsQ0FBdkIsSUFBZ0NBLEdBQUcsQ0FBSCxDQUFoQyxHQUF3Q0QsR0FBekMsS0FBaUQsRUFBeEQ7Ozs7Ozs7OzsyQ0FNcUI7OztXQUNoQjVxQixTQUFMLENBQWUsS0FBS3BLLFNBQXBCLEVBQ0dyTyxNQURILENBQ1U7ZUFBYSx5QkFBd0JySixJQUF4QixDQUE2QnVoQixTQUE3Qjs7T0FEdkIsRUFFRy9KLE9BRkgsQ0FFVztlQUFhLE9BQUtFLFNBQUwsQ0FBZS9PLE1BQWYsQ0FBc0I0WSxTQUF0QixDQUFiO09BRlg7O1dBSUs3SixTQUFMLENBQWUvTyxNQUFmLENBQXNCLE1BQXRCO1dBQ0srTyxTQUFMLENBQWUvTyxNQUFmLENBQXNCLGVBQXRCOzs7O3dDQUdrQmlrQyxVQUFVM0UsTUFBTTtVQUM1QnZ3QixZQUFZLENBQUMsVUFBRCxDQUFsQjtVQUNNc0QsUUFBUSxFQUFkOzs7VUFHSTR4QixTQUFTanBDLE9BQVQsQ0FBaUIsTUFBakIsTUFBNkIsQ0FBakMsRUFBb0M7a0JBQ3hCM0IsSUFBVixDQUFlNHFDLFFBQWY7a0JBQ1U1cUMsSUFBVixDQUFlLGVBQWY7T0FGRixNQUdPLElBQUk0cUMsU0FBU2pwQyxPQUFULENBQWlCLEtBQWpCLE1BQTRCLENBQWhDLEVBQW1DO2tCQUM5QjNCLElBQVYsQ0FBZTRxQyxRQUFmO2tCQUNVNXFDLElBQVYsQ0FBZSxJQUFmO09BRkssTUFHQSxJQUFHNHFDLFNBQVNqcEMsT0FBVCxDQUFpQixLQUFqQixNQUE0QixDQUEvQixFQUFtQztrQkFDOUIzQixJQUFWLENBQWUsTUFBZjtrQkFDVUEsSUFBVixDQUFlLFVBQVU0cUMsU0FBU2p0QyxLQUFULENBQWUsU0FBZixFQUEwQixDQUExQixDQUF6QjtPQUZLLE1BR0E7a0JBQ0txQyxJQUFWLENBQWUsSUFBZjtrQkFDVUEsSUFBVixDQUFlLFFBQVE0cUMsUUFBdkI7Ozs7VUFJRTNFLEtBQUt2M0IsS0FBTCxDQUFXLGFBQVgsQ0FBSixFQUErQjtrQkFDbkIxTyxJQUFWLENBQWUsUUFBUWltQyxJQUF2QjthQUNLanRCLEtBQUwsQ0FBVzZ4QixjQUFYLENBQTBCLFdBQTFCO09BRkYsTUFHTztjQUNDQyxRQUFOLEdBQWlCN0UsSUFBakI7OzthQUdLO21CQUNNdndCLFNBRE47ZUFFRXNEO09BRlQ7Ozs7d0JBdkU4QjthQUN2QixDQUFDLE1BQUQsRUFBUyxNQUFULEVBQWlCLFVBQWpCLENBQVA7Ozs7RUFqRnFDa25COztBQThKekM1aUMsZUFBZWtHLE1BQWYsQ0FBc0IsVUFBdEIsRUFBa0M0bUMsV0FBbEM7O0FDOU1BOzs7Ozs7Ozs7Ozs7O0FBYUEsQUFDQSxBQUNBLEFBRUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBaURxQlc7Ozs7Ozs7Ozs7d0NBRUM7O1VBRWQsS0FBSzUwQixZQUFMLENBQWtCLFVBQWxCLENBQUosRUFBbUM7YUFDNUJ1QixRQUFMLEdBQWdCcmEsT0FBTyxLQUFLOEIsWUFBTCxDQUFrQixVQUFsQixDQUFQLENBQWhCOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzhCQTZGTTtXQUNINnJDLG1CQUFMLElBQTRCLEtBQUtBLG1CQUFMLENBQXlCdkYsT0FBekIsRUFBNUI7Ozs7NkNBR3VCNTVCLE1BQU1rSixNQUFNQyxTQUFTOzs7MkNBRXZCO1VBQ2pCLEtBQUtnMkIsbUJBQVQsRUFBOEI7YUFDdkJBLG1CQUFMLENBQXlCMXpCLE9BQXpCO2FBQ0swekIsbUJBQUwsR0FBMkIsSUFBM0I7Ozs7O3NCQS9CU3owQixjQUFjO1dBQ3BCeTBCLG1CQUFMLElBQTRCLEtBQUtBLG1CQUFMLENBQXlCMXpCLE9BQXpCLEVBQTVCOztVQUVJLENBQUMsS0FBS1osZ0JBQU4sSUFBMEIsS0FBS29CLFFBQUwsQ0FBYyxDQUFkLENBQTlCLEVBQWdEO2FBQ3pDcEIsZ0JBQUwsR0FBd0IsS0FBSzlSLFdBQUwsQ0FBaUIsS0FBS2tULFFBQUwsQ0FBYyxDQUFkLENBQWpCLENBQXhCOzs7VUFHSUosV0FBVyxJQUFJcEIsa0JBQUosQ0FBdUJDLFlBQXZCLEVBQXFDLEtBQUtHLGdCQUFMLElBQXlCLElBQTlELENBQWpCO1dBQ0tzMEIsbUJBQUwsR0FBMkIsSUFBSXh6QixrQkFBSixDQUF1QixLQUFLd0QsYUFBNUIsRUFBMkN0RCxRQUEzQyxDQUEzQjs7d0JBR2E7WUFDUCxJQUFJdlcsS0FBSixDQUFVLDREQUFWLENBQU47Ozs7RUF4RjJDKytCOztBQWlIL0M1aUMsZUFBZWtHLE1BQWYsQ0FBc0IsaUJBQXRCLEVBQXlDdW5DLGlCQUF6Qzs7QUNuTEE7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBaUJBLEFBQ0EsQUFDQSxBQUNBLEFBRUEsSUFBTXZJLHFCQUFtQixhQUF6QjtBQUNBLElBQU0zc0IsV0FBUyxFQUFDLElBQUksZ0JBQUwsRUFBZjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztJQTJCcUJvMUI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzJCQVVaO1dBQ0E3SixRQUFMOzs7OytCQUdTO2dCQUNDeEMsT0FBVixDQUFrQixJQUFsQjtXQUNLbHBCLFNBQUwsQ0FBZXJXLEdBQWYsQ0FBbUJtakMsa0JBQW5CO21CQUNhWixZQUFiLENBQTBCLElBQTFCLEVBQWdDL3JCLFFBQWhDOzs7OzZDQU91QmhLLE1BQU1rSixNQUFNQyxTQUFTO2NBQ3BDbkosSUFBUjthQUNPLE9BQUw7Y0FDTSxDQUFDLEtBQUs2SixTQUFMLENBQWVzdEIsUUFBZixDQUF3QlIsa0JBQXhCLENBQUwsRUFBZ0Q7aUJBQ3pDampCLFNBQUwsR0FBaUJpakIscUJBQW1CLEdBQW5CLEdBQXlCeHRCLE9BQTFDOzs7YUFHQyxVQUFMO3VCQUNlc3RCLGlCQUFiLENBQStCdnRCLElBQS9CLEVBQXFDQyxPQUFyQyxFQUE4QyxJQUE5QyxFQUFvRGEsUUFBcEQ7Ozs7Ozt3QkFaMEI7YUFDdkIsQ0FBQyxVQUFELEVBQWEsT0FBYixDQUFQOzs7O0VBckIyQ3FxQjs7QUFzQy9DNWlDLGVBQWVrRyxNQUFmLENBQXNCLGlCQUF0QixFQUF5Q3luQyxpQkFBekM7O0FDeEZBOzs7Ozs7Ozs7Ozs7Ozs7OztBQWlCQSxBQUNBLEFBQ0EsQUFDQSxBQUNBLEFBRUEsSUFBTXpJLHFCQUFtQixXQUF6QjtBQUNBLElBQU0zc0IsV0FBUztnQkFDQyxjQUREO3NCQUVPLG9CQUZQO3dCQUdTLHNCQUhUO3VCQUlRLHFCQUpSO3VCQUtRLHFCQUxSO3VCQU1RLHFCQU5SOzBCQU9XLHdCQVBYOzJCQVFZLHlCQVJaO3NCQVNPO0NBVHRCOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUF3RXFCcTFCOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsyQkFrQ1o7OzttQkFDUSxJQUFiLEVBQW1CLFlBQU07ZUFDbEI5SixRQUFMO09BREY7Ozs7K0JBS1M7V0FDSjFyQixTQUFMLENBQWVyVyxHQUFmLENBQW1CbWpDLGtCQUFuQjs7VUFFSWpJLGFBQUo7VUFBVW5MLGVBQVY7VUFBa0JvTCxjQUFsQjs7V0FFSyxJQUFJOTRCLElBQUksQ0FBYixFQUFnQkEsSUFBSSxLQUFLb1csUUFBTCxDQUFjMVgsTUFBbEMsRUFBMENzQixHQUExQyxFQUErQztZQUN2QzJlLEtBQUssS0FBS3ZJLFFBQUwsQ0FBY3BXLENBQWQsQ0FBWDs7WUFFSTJlLEdBQUczSyxTQUFILENBQWFzdEIsUUFBYixDQUFzQixNQUF0QixDQUFKLEVBQW1DO2FBQzlCdHRCLFNBQUgsQ0FBYXJXLEdBQWIsQ0FBaUIsaUJBQWpCO2lCQUNPZ2hCLEVBQVA7U0FGRixNQUlLLElBQUlBLEdBQUczSyxTQUFILENBQWFzdEIsUUFBYixDQUFzQixRQUF0QixDQUFKLEVBQXFDO21CQUMvQjNpQixFQUFUO1NBREcsTUFHQSxJQUFJQSxHQUFHM0ssU0FBSCxDQUFhc3RCLFFBQWIsQ0FBc0IsT0FBdEIsQ0FBSixFQUFvQzthQUNwQ3R0QixTQUFILENBQWFyVyxHQUFiLENBQWlCLGtCQUFqQjtrQkFDUWdoQixFQUFSOzs7O1VBSUEsQ0FBQytPLE1BQUwsRUFBYTtpQkFDRjNzQixTQUFTbUIsYUFBVCxDQUF1QixLQUF2QixDQUFUOztZQUVJLENBQUMyMkIsSUFBRCxJQUFTLENBQUNDLEtBQWQsRUFBcUI7aUJBQ1osS0FBSzF5QixVQUFMLENBQWdCLENBQWhCLENBQVAsRUFBMkI7bUJBQ2xCdEQsV0FBUCxDQUFtQixLQUFLc0QsVUFBTCxDQUFnQixDQUFoQixDQUFuQjs7U0FGSixNQUlPO2VBQ0EsSUFBSXBHLEtBQUksS0FBS29HLFVBQUwsQ0FBZ0IxSCxNQUFoQixHQUF5QixDQUF0QyxFQUF5Q3NCLE1BQUssQ0FBOUMsRUFBaURBLElBQWpELEVBQXNEO2dCQUM5QzJlLE1BQUssS0FBS3ZZLFVBQUwsQ0FBZ0JwRyxFQUFoQixDQUFYO2dCQUNJMmUsUUFBT2thLElBQVAsSUFBZWxhLFFBQU9tYSxLQUExQixFQUFpQztxQkFDeEI5MUIsWUFBUCxDQUFvQjJiLEdBQXBCLEVBQXdCK08sT0FBTzl2QixVQUEvQjs7Ozs7YUFLRG9GLFlBQUwsQ0FBa0IwcUIsTUFBbEIsRUFBMEJvTCxTQUFTLElBQW5DOzs7YUFHSzlrQixTQUFQLENBQWlCclcsR0FBakIsQ0FBcUIsUUFBckI7YUFDT3FXLFNBQVAsQ0FBaUJyVyxHQUFqQixDQUFxQixtQkFBckI7O1dBRUs4akMsYUFBTDs7bUJBRWF2QixZQUFiLENBQTBCLElBQTFCLEVBQWdDL3JCLFFBQWhDOztnQkFFVStvQixPQUFWLENBQWtCLElBQWxCOzs7OzZDQU91Qi95QixNQUFNa0osTUFBTUMsU0FBUztjQUNwQ25KLElBQVI7YUFDTyxPQUFMO2NBQ00sQ0FBQyxLQUFLNkosU0FBTCxDQUFlc3RCLFFBQWYsQ0FBd0JSLGtCQUF4QixDQUFMLEVBQWdEO2lCQUN6Q2pqQixTQUFMLEdBQWlCaWpCLHFCQUFtQixHQUFuQixHQUF5Qnh0QixPQUExQzs7O2FBR0MsVUFBTDt1QkFDZXN0QixpQkFBYixDQUErQnZ0QixJQUEvQixFQUFxQ0MsT0FBckMsRUFBOEMsSUFBOUMsRUFBb0RhLFFBQXBEOzthQUVHLFFBQUw7ZUFDT3N0QixhQUFMOzs7Ozs7d0NBS2M7V0FDYnJpQyxnQkFBTCxDQUFzQixNQUF0QixFQUE4QixLQUFLa2tDLE9BQW5DO1dBQ0tsa0MsZ0JBQUwsQ0FBc0IsWUFBdEIsRUFBb0MsS0FBS3FxQyxRQUF6QztXQUNLcnFDLGdCQUFMLENBQXNCLFdBQXRCLEVBQW1DLEtBQUtxcUMsUUFBeEM7V0FDS3JxQyxnQkFBTCxDQUFzQixVQUF0QixFQUFrQyxLQUFLc3FDLFVBQXZDO1dBQ0t0cUMsZ0JBQUwsQ0FBc0IsV0FBdEIsRUFBbUMsS0FBS3NxQyxVQUF4QztXQUNLdHFDLGdCQUFMLENBQXNCLGFBQXRCLEVBQXFDLEtBQUtzcUMsVUFBMUM7V0FDS3RxQyxnQkFBTCxDQUFzQixTQUF0QixFQUFpQyxLQUFLc3FDLFVBQXRDO1dBQ0t0cUMsZ0JBQUwsQ0FBc0IsVUFBdEIsRUFBa0MsS0FBS3NxQyxVQUF2QztXQUNLdHFDLGdCQUFMLENBQXNCLFlBQXRCLEVBQW9DLEtBQUtzcUMsVUFBekM7O1dBRUtDLHdCQUFMLEdBQWdDLEtBQUtyeUIsS0FBTCxDQUFXMm9CLGVBQTNDOztXQUVLMkosTUFBTCxHQUFjLEtBQWQ7Ozs7MkNBR3FCO1dBQ2hCajZCLG1CQUFMLENBQXlCLE1BQXpCLEVBQWlDLEtBQUsyekIsT0FBdEM7V0FDSzN6QixtQkFBTCxDQUF5QixZQUF6QixFQUF1QyxLQUFLODVCLFFBQTVDO1dBQ0s5NUIsbUJBQUwsQ0FBeUIsV0FBekIsRUFBc0MsS0FBSzg1QixRQUEzQztXQUNLOTVCLG1CQUFMLENBQXlCLFVBQXpCLEVBQXFDLEtBQUsrNUIsVUFBMUM7V0FDSy81QixtQkFBTCxDQUF5QixXQUF6QixFQUFzQyxLQUFLKzVCLFVBQTNDO1dBQ0svNUIsbUJBQUwsQ0FBeUIsYUFBekIsRUFBd0MsS0FBSys1QixVQUE3QztXQUNLLzVCLG1CQUFMLENBQXlCLFNBQXpCLEVBQW9DLEtBQUsrNUIsVUFBekM7V0FDSy81QixtQkFBTCxDQUF5QixVQUF6QixFQUFxQyxLQUFLKzVCLFVBQTFDO1dBQ0svNUIsbUJBQUwsQ0FBeUIsWUFBekIsRUFBdUMsS0FBSys1QixVQUE1Qzs7OztvQ0FlYztXQUNUL29CLFlBQUwsQ0FBa0IsSUFBbEI7Ozs7NEJBR010QixPQUFPO1VBQ1B5SCxVQUFVekgsTUFBTXlILE9BQXRCOztVQUVJLEtBQUsraUIsaUJBQUwsTUFBNEIsQ0FBQyxNQUFELEVBQVMsT0FBVCxFQUFrQjVwQyxPQUFsQixDQUEwQjZtQixRQUFRd0MsU0FBbEMsSUFBK0MsQ0FBQyxDQUFoRixFQUFtRjtnQkFDekU0QyxjQUFSOzs7OzsrQkFJTztVQUNMLEtBQUswZCxNQUFULEVBQWlCOzs7O1dBSVpBLE1BQUwsR0FBYyxJQUFkOztXQUVLdHlCLEtBQUwsQ0FBV29NLFVBQVgsR0FBd0IsS0FBS29tQixXQUE3QjtXQUNLeHlCLEtBQUwsQ0FBV3l5QixnQkFBWCxHQUE4QixLQUFLRCxXQUFuQztXQUNLeHlCLEtBQUwsQ0FBVzB5QixhQUFYLEdBQTJCLEtBQUtGLFdBQWhDOztVQUVJLEtBQUtHLFNBQVQsRUFBb0I7WUFDZCxLQUFLM3lCLEtBQUwsQ0FBVzJvQixlQUFmLEVBQWdDO2VBQ3pCMEosd0JBQUwsR0FBZ0MsS0FBS3J5QixLQUFMLENBQVcyb0IsZUFBM0M7OzthQUdHM29CLEtBQUwsQ0FBVzJvQixlQUFYLEdBQTZCLEtBQUtpSyxtQkFBbEM7YUFDSzV5QixLQUFMLENBQVc2eUIsU0FBWCx5QkFBMkMsS0FBS0QsbUJBQWhEOzs7OztpQ0FJUztXQUNOTixNQUFMLEdBQWMsS0FBZDs7V0FFS3R5QixLQUFMLENBQVdvTSxVQUFYLEdBQXdCLEVBQXhCO1dBQ0twTSxLQUFMLENBQVd5eUIsZ0JBQVgsR0FBOEIsRUFBOUI7V0FDS3p5QixLQUFMLENBQVcweUIsYUFBWCxHQUEyQixFQUEzQjs7V0FFSzF5QixLQUFMLENBQVcyb0IsZUFBWCxHQUE2QixLQUFLMEosd0JBQUwsSUFBaUMsRUFBOUQ7V0FDS3J5QixLQUFMLENBQVc2eUIsU0FBWCxHQUF1QixFQUF2Qjs7Ozt3Q0FHa0I7YUFDWCxLQUFLMTFCLFlBQUwsQ0FBa0IsY0FBbEIsQ0FBUDs7Ozt3QkF6RGdCO2FBQ1Qsa0VBQVA7Ozs7d0JBR2M7YUFDUCxLQUFLQSxZQUFMLENBQWtCLFVBQWxCLENBQVA7Ozs7d0JBR3dCO2FBQ2pCLEtBQUtoWCxZQUFMLENBQWtCLHNCQUFsQixLQUE2QyxTQUFwRDs7Ozt3QkF6RDhCO2FBQ3ZCLENBQUMsVUFBRCxFQUFhLE9BQWIsRUFBc0IsUUFBdEIsQ0FBUDs7OztFQTNGeUMrZ0M7O0FBdU03QzVpQyxlQUFla0csTUFBZixDQUFzQixlQUF0QixFQUF1QzBuQyxlQUF2Qzs7QUN2U0E7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBaUJBLEFBQ0EsQUFDQSxBQUNBLEFBRUEsSUFBTTFJLHFCQUFtQixNQUF6QjtBQUNBLElBQU0zc0IsV0FBUyxFQUFDLElBQUksU0FBTCxFQUFmOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFzQ3FCaTJCOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsyQkFVWjtXQUNBMUssUUFBTDs7OzsrQkFHUztnQkFDQ3hDLE9BQVYsQ0FBa0IsSUFBbEI7V0FDS2xwQixTQUFMLENBQWVyVyxHQUFmLENBQW1CbWpDLGtCQUFuQjttQkFDYVosWUFBYixDQUEwQixJQUExQixFQUFnQy9yQixRQUFoQzs7Ozs2Q0FPdUJoSyxNQUFNa0osTUFBTUMsU0FBUztjQUNwQ25KLElBQVI7YUFDTyxPQUFMO2NBQ00sQ0FBQyxLQUFLNkosU0FBTCxDQUFlc3RCLFFBQWYsQ0FBd0JSLGtCQUF4QixDQUFMLEVBQWdEO2lCQUN6Q2pqQixTQUFMLEdBQWlCaWpCLHFCQUFtQixHQUFuQixHQUF5Qnh0QixPQUExQzs7O2FBR0MsVUFBTDt1QkFDZXN0QixpQkFBYixDQUErQnZ0QixJQUEvQixFQUFxQ0MsT0FBckMsRUFBOEMsSUFBOUMsRUFBb0RhLFFBQXBEOzs7Ozs7d0JBWjBCO2FBQ3ZCLENBQUMsVUFBRCxFQUFhLE9BQWIsQ0FBUDs7OztFQXJCcUNxcUI7O0FBc0N6QzVpQyxlQUFla0csTUFBZixDQUFzQixVQUF0QixFQUFrQ3NvQyxXQUFsQzs7QUNuR0E7Ozs7Ozs7Ozs7Ozs7QUFhQSxBQUNBLEFBQ0EsQUFDQSxBQUNBLEFBRUEsSUFBTUMsdUJBQXVCLFVBQTdCO0FBQ0EsSUFBTUMsMEJBQTBCLGNBQWhDOztBQUVBLElBQU1uMkIsWUFBUztpQkFDRSxlQURGO3dCQUVTLHNCQUZUO21CQUdJLGlCQUhKOzBCQUlXLHdCQUpYOzhCQUtlLDRCQUxmO2VBTUEsYUFOQTtzQkFPTyxvQkFQUDswQkFRVztDQVIxQjs7QUFXQSxJQUFNbzJCLG1CQUFtQixDQUN2QixnQkFEdUIsRUFFdkIsY0FGdUIsRUFHdkIsYUFIdUIsRUFJdkIsV0FKdUIsRUFLdkIsVUFMdUIsRUFNdkIsV0FOdUIsRUFPdkIsS0FQdUIsRUFRdkIsV0FSdUIsRUFTdkIsS0FUdUIsRUFVdkIsV0FWdUIsRUFXdkIsTUFYdUIsRUFZdkIsU0FadUIsRUFhdkIsYUFidUIsRUFjdkIsVUFkdUIsRUFldkIsTUFmdUIsRUFnQnZCLE1BaEJ1QixFQWlCdkIsTUFqQnVCLEVBa0J2QixXQWxCdUIsRUFtQnZCLE9BbkJ1QixDQUF6Qjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztJQThEcUJDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsyQkFxQ1o7OzttQkFDUSxJQUFiLEVBQW1CLFlBQU07ZUFDbEI5SyxRQUFMO2VBQ0s5L0Isd0JBQUwsQ0FBOEIsU0FBOUIsRUFBeUMsSUFBekMsRUFBK0MsT0FBS25DLFlBQUwsQ0FBa0IsU0FBbEIsQ0FBL0M7T0FGRjs7V0FLS2d0QyxhQUFMLEdBQXFCLEtBQUtDLFFBQUwsQ0FBY3RxQyxJQUFkLENBQW1CLElBQW5CLENBQXJCO1dBQ0t1cUMsZUFBTCxHQUF1QixLQUFLQyxVQUFMLENBQWdCeHFDLElBQWhCLENBQXFCLElBQXJCLENBQXZCO1dBQ0t5cUMsbUJBQUwsR0FBMkIsS0FBS0MsY0FBTCxDQUFvQjFxQyxJQUFwQixDQUF5QixJQUF6QixDQUEzQjs7OzsrQkFHUztnQkFDQzg4QixPQUFWLENBQWtCLElBQWxCOztVQUVJLEtBQUs5bUIsUUFBTCxDQUFjMVgsTUFBZCxLQUF5QixDQUE3QixFQUFnQzs7OztVQUkxQnFzQyxTQUFTaHFDLFNBQVNtQixhQUFULENBQXVCLE1BQXZCLENBQWY7YUFDTzhSLFNBQVAsQ0FBaUJyVyxHQUFqQixDQUFxQixTQUFyQjs7VUFFTWtoQixZQUFZOWQsU0FBU21CLGFBQVQsQ0FBdUIsT0FBdkIsQ0FBbEI7Z0JBQ1VZLFdBQVYsQ0FBc0IvQixTQUFTbUIsYUFBVCxDQUF1QixPQUF2QixDQUF0QjtnQkFDVVksV0FBVixDQUFzQmlvQyxNQUF0Qjs7VUFFTWpYLFFBQVEveUIsU0FBU21CLGFBQVQsQ0FBdUIsTUFBdkIsQ0FBZDtZQUNNOFIsU0FBTixDQUFnQnJXLEdBQWhCLENBQW9CLGFBQXBCOztXQUVLeWdCLFNBQUwsQ0FBZSxLQUFLaFksVUFBcEIsRUFBZ0MwTixPQUFoQyxDQUF3QztlQUFXZ2dCLE1BQU1oeEIsV0FBTixDQUFrQm9SLE9BQWxCLENBQVg7T0FBeEM7V0FDS08sWUFBTCxDQUFrQixjQUFsQixJQUFvQ29LLFVBQVU3YixZQUFWLENBQXVCOHdCLEtBQXZCLEVBQThCalYsVUFBVWpoQixVQUF4QyxDQUFwQyxHQUEwRmloQixVQUFVL2IsV0FBVixDQUFzQmd4QixLQUF0QixDQUExRjs7V0FFS2h4QixXQUFMLENBQWlCK2IsU0FBakI7O2NBRVEsS0FBS3BoQixZQUFMLENBQWtCLE1BQWxCLENBQVI7YUFDTyxVQUFMO2VBQ091VyxTQUFMLENBQWVyVyxHQUFmLENBQW1CMHNDLG9CQUFuQjtlQUNLVyxNQUFMLENBQVloM0IsU0FBWixDQUFzQnJXLEdBQXRCLENBQTBCLGlCQUExQjtlQUNLc3RDLE9BQUwsQ0FBYWozQixTQUFiLENBQXVCclcsR0FBdkIsQ0FBMkIscUJBQTNCO2VBQ0t1dEMsc0JBQUw7OzthQUdHLE9BQUw7ZUFDT2wzQixTQUFMLENBQWVyVyxHQUFmLENBQW1CMnNDLHVCQUFuQjtlQUNLVSxNQUFMLENBQVloM0IsU0FBWixDQUFzQnJXLEdBQXRCLENBQTBCLHFCQUExQjtlQUNLc3RDLE9BQUwsQ0FBYWozQixTQUFiLENBQXVCclcsR0FBdkIsQ0FBMkIseUJBQTNCO2VBQ0t1dEMsc0JBQUw7Ozs7ZUFJS0YsTUFBTCxDQUFZaDNCLFNBQVosQ0FBc0JyVyxHQUF0QixDQUEwQixZQUExQjtlQUNLc3RDLE9BQUwsQ0FBYWozQixTQUFiLENBQXVCclcsR0FBdkIsQ0FBMkIsbUJBQTNCO2VBQ0txdEMsTUFBTCxDQUFZMXhCLGFBQVosQ0FBMEJ0RixTQUExQixDQUFvQ3JXLEdBQXBDLENBQXdDLHVCQUF4Qzs7ZUFFS3d0QyxZQUFMO2VBQ0tELHNCQUFMO2VBQ0tFLGlCQUFMOzs7O1VBSUEsS0FBSzMyQixZQUFMLENBQWtCLFVBQWxCLENBQUosRUFBbUM7YUFDNUJ1MkIsTUFBTCxDQUFZL2hDLEVBQVosR0FBaUIsS0FBS3hMLFlBQUwsQ0FBa0IsVUFBbEIsQ0FBakI7OzttQkFHV3lpQyxZQUFiLENBQTBCLElBQTFCLEVBQWdDL3JCLFNBQWhDOzs7OzZDQU91QmhLLE1BQU1rSixNQUFNQyxTQUFTOzs7Y0FDcENuSixJQUFSO2FBQ08sVUFBTDt1QkFDZSxJQUFiLEVBQW1CO21CQUFNaUosYUFBYXd0QixpQkFBYixDQUErQnZ0QixJQUEvQixFQUFxQ0MsT0FBckMsVUFBb0RhLFNBQXBELENBQU47V0FBbkI7O2FBRUcsYUFBTDt1QkFDZSxJQUFiLEVBQW1CO21CQUFNLE9BQUtnM0IsWUFBTCxFQUFOO1dBQW5COzthQUVHLFVBQUw7dUJBQ2UsSUFBYixFQUFtQjttQkFBTSxPQUFLSCxNQUFMLENBQVkvaEMsRUFBWixHQUFpQnFLLE9BQXZCO1dBQW5COzthQUVHLFNBQUw7ZUFDTyszQixPQUFMLEdBQWUvM0IsWUFBWSxJQUEzQjs7YUFFRyxPQUFMO2tCQUNVLEtBQUs3VixZQUFMLENBQWtCLE1BQWxCLENBQVI7aUJBQ08sVUFBTDtrQkFDTSxDQUFDLEtBQUt1VyxTQUFMLENBQWVzdEIsUUFBZixDQUF3QitJLG9CQUF4QixDQUFMLEVBQW9EO3FCQUM3Q3hzQixTQUFMLEdBQWlCd3NCLHVCQUF1QixHQUF2QixHQUE2Qi8yQixPQUE5Qzs7O2lCQUdDLE9BQUw7a0JBQ00sQ0FBQyxLQUFLVSxTQUFMLENBQWVzdEIsUUFBZixDQUF3QmdKLHVCQUF4QixDQUFMLEVBQXVEO3FCQUNoRHpzQixTQUFMLEdBQWlCeXNCLDBCQUEwQixHQUExQixHQUFnQ2gzQixPQUFqRDs7Ozs7OztVQU9OaTNCLGlCQUFpQnRxQyxPQUFqQixDQUF5QmtLLElBQXpCLEtBQWtDLENBQXRDLEVBQXlDO3FCQUMxQixJQUFiLEVBQW1CO2lCQUFNLE9BQUsrZ0Msc0JBQUwsRUFBTjtTQUFuQjs7Ozs7d0NBSWdCOzs7bUJBQ0wsSUFBYixFQUFtQixZQUFNO1lBQ25CLE9BQUtGLE1BQUwsQ0FBWTlnQyxJQUFaLEtBQXFCLFVBQXJCLElBQW1DLE9BQUs4Z0MsTUFBTCxDQUFZOWdDLElBQVosS0FBcUIsT0FBNUQsRUFBcUU7aUJBQzlEOGdDLE1BQUwsQ0FBWTVyQyxnQkFBWixDQUE2QixPQUE3QixFQUFzQyxPQUFLcXJDLGFBQTNDO2lCQUNLTyxNQUFMLENBQVk1ckMsZ0JBQVosQ0FBNkIsU0FBN0IsRUFBd0MsT0FBS3VyQyxlQUE3QztpQkFDS0ssTUFBTCxDQUFZNXJDLGdCQUFaLENBQTZCLFVBQTdCLEVBQXlDLE9BQUtrc0MsZ0JBQTlDOzs7ZUFHR04sTUFBTCxDQUFZNXJDLGdCQUFaLENBQTZCLE9BQTdCLEVBQXNDLE9BQUt5ckMsbUJBQTNDO2VBQ0tHLE1BQUwsQ0FBWTVyQyxnQkFBWixDQUE2QixNQUE3QixFQUFxQyxPQUFLeXJDLG1CQUExQztPQVJGOzs7OzJDQVlxQjs7O21CQUNSLElBQWIsRUFBbUIsWUFBTTtlQUNsQkcsTUFBTCxDQUFZcjdCLG1CQUFaLENBQWdDLE9BQWhDLEVBQXlDLE9BQUs4NkIsYUFBOUM7ZUFDS08sTUFBTCxDQUFZcjdCLG1CQUFaLENBQWdDLFNBQWhDLEVBQTJDLE9BQUtnN0IsZUFBaEQ7ZUFDS0ssTUFBTCxDQUFZcjdCLG1CQUFaLENBQWdDLE9BQWhDLEVBQXlDLE9BQUtrN0IsbUJBQTlDO2VBQ0tHLE1BQUwsQ0FBWXI3QixtQkFBWixDQUFnQyxNQUFoQyxFQUF3QyxPQUFLazdCLG1CQUE3QztPQUpGOzs7OzhCQVFRempDLE9BQU87VUFDWCxPQUFPLEtBQUs2akMsT0FBTCxDQUFheGtDLFdBQXBCLEtBQW9DLFdBQXhDLEVBQXFEO2FBQzlDd2tDLE9BQUwsQ0FBYXhrQyxXQUFiLEdBQTJCVyxLQUEzQjtPQURGLE1BR0s7YUFDRTZqQyxPQUFMLENBQWFNLFNBQWIsR0FBeUJua0MsS0FBekI7Ozs7O21DQUlXO1dBQ1Jva0MsU0FBTCxDQUFlLEtBQUsvMkIsWUFBTCxDQUFrQixhQUFsQixJQUFtQyxLQUFLaFgsWUFBTCxDQUFrQixhQUFsQixDQUFuQyxHQUFzRSxFQUFyRjs7Ozs2Q0FHdUI7Ozt1QkFDTnFXLE9BQWpCLENBQXlCLFVBQUNzekIsSUFBRCxFQUFVO1lBQzdCLE9BQUszeUIsWUFBTCxDQUFrQjJ5QixJQUFsQixDQUFKLEVBQTZCO2lCQUN0QjRELE1BQUwsQ0FBWW5uQyxZQUFaLENBQXlCdWpDLElBQXpCLEVBQStCLE9BQUszcEMsWUFBTCxDQUFrQjJwQyxJQUFsQixDQUEvQjtTQURGLE1BR0s7aUJBQ0U0RCxNQUFMLENBQVlqbkMsZUFBWixDQUE0QnFqQyxJQUE1Qjs7T0FMSjs7Ozt3Q0FVa0I7VUFDZCxLQUFLaGdDLEtBQUwsS0FBZSxFQUFuQixFQUF1QjthQUNoQjZqQyxPQUFMLENBQWFqM0IsU0FBYixDQUF1Qi9PLE1BQXZCLENBQThCLHFDQUE5QjtPQURGLE1BR0ssSUFBSSxDQUFDLFVBQUQsRUFBYSxPQUFiLEVBQXNCaEYsT0FBdEIsQ0FBOEIsS0FBS3hDLFlBQUwsQ0FBa0IsTUFBbEIsQ0FBOUIsTUFBNkQsQ0FBQyxDQUFsRSxFQUFvRTthQUNsRXd0QyxPQUFMLENBQWFqM0IsU0FBYixDQUF1QnJXLEdBQXZCLENBQTJCLHFDQUEzQjs7Ozs7bUNBSVcwaEIsT0FBTztVQUNkcGlCLElBQUksSUFBSXFpQixXQUFKLENBQWdCRCxNQUFNblYsSUFBdEIsRUFBNEI7aUJBQzNCLEtBRDJCO29CQUV4QjtPQUZKLENBQVY7O2FBS08sS0FBS3FWLGFBQUwsQ0FBbUJ0aUIsQ0FBbkIsQ0FBUDs7Ozs2QkFHT29pQixPQUFPO1dBQ1QrckIsaUJBQUw7Ozs7K0JBR1MvckIsT0FBTztXQUNYK3JCLGlCQUFMOzs7O3dCQUdXO2FBQ0osS0FBS253QixhQUFMLENBQW1CLE9BQW5CLENBQVA7Ozs7d0JBR1k7YUFDTCxLQUFLQSxhQUFMLENBQW1CLFVBQW5CLENBQVA7Ozs7Ozs7Ozs7Ozs7d0JBVVU7YUFDSCxLQUFLK3ZCLE1BQUwsS0FBZ0IsSUFBaEIsR0FDSCxLQUFLdnRDLFlBQUwsQ0FBa0IsT0FBbEIsQ0FERyxHQUVILEtBQUt1dEMsTUFBTCxDQUFZNWpDLEtBRmhCOztzQkFLUWlCLEtBQUs7OzttQkFDQSxJQUFiLEVBQW1CLFlBQU07WUFDbkJBLGVBQWV5akIsSUFBbkIsRUFBeUI7Z0JBQ2pCempCLElBQUlvakMsV0FBSixHQUFrQng5QixTQUFsQixDQUE0QixDQUE1QixFQUErQixFQUEvQixDQUFOOztlQUVHKzhCLE1BQUwsQ0FBWTVqQyxLQUFaLEdBQW9CaUIsR0FBcEI7ZUFDS3FpQyxRQUFMO09BTEY7Ozs7Ozs7Ozs7Ozs7d0JBZ0JZO2FBQ0wsS0FBS00sTUFBTCxDQUFZSyxPQUFuQjs7c0JBR1VoakMsS0FBSzs7O21CQUNGLElBQWIsRUFBbUIsWUFBTTtlQUNsQjJpQyxNQUFMLENBQVlLLE9BQVosR0FBc0JoakMsR0FBdEI7T0FERjs7Ozs7Ozs7Ozs7OztzQkFZV2pCLE9BQU87YUFDWHVMLEtBQUswTixlQUFMLENBQXFCLElBQXJCLEVBQTJCLFVBQTNCLEVBQXVDalosS0FBdkMsQ0FBUDs7d0JBR2E7YUFDTixLQUFLcU4sWUFBTCxDQUFrQixVQUFsQixDQUFQOzs7O3dCQUdpQjthQUNWLEtBQUt2SyxJQUFMLEtBQWMsT0FBZCxJQUF5QixLQUFLQSxJQUFMLEtBQWMsVUFBOUM7Ozs7d0JBR1M7YUFDRixLQUFLek0sWUFBTCxDQUFrQixNQUFsQixDQUFQOzs7O3dCQW5MOEI7Y0FDdEIsT0FBUixFQUFpQixVQUFqQixFQUE2QixhQUE3QixFQUE0QyxVQUE1QyxFQUF3RCxTQUF4RCxTQUFzRThzQyxnQkFBdEU7Ozs7d0JBcUxrQjthQUNYLENBQUMsUUFBRCxFQUFXLE9BQVgsRUFBb0IsT0FBcEIsRUFBNkIsU0FBN0IsRUFBd0MsVUFBeEMsRUFBb0QsTUFBcEQsQ0FBUDs7OztFQTlSc0MvTDs7QUFrUzFDNWlDLGVBQWVrRyxNQUFmLENBQXNCLFdBQXRCLEVBQW1DMG9DLFlBQW5DOztBQ2pZQTs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFpQkEsSUFFcUJrQjs7Ozs7Ozs7OzJCQVE4QzttRkFBSixFQUFJOzJCQUFwRGhxQixNQUFvRDtRQUFwREEsTUFBb0QsK0JBQTNDLFFBQTJDOzBCQUFqQzFPLEtBQWlDO1FBQWpDQSxLQUFpQyw4QkFBekIsQ0FBeUI7NkJBQXRCRCxRQUFzQjtRQUF0QkEsUUFBc0IsaUNBQVgsR0FBVzs7O3dIQUN6RCxFQUFFMk8sY0FBRixFQUFVMU8sWUFBVixFQUFpQkQsa0JBQWpCLEVBRHlEOzs7Ozs7Ozs7Ozt5QkFRNUQ0NEIsT0FBT244QixVQUFVOzs7Ozs7Ozs7Ozt5QkFRakJtOEIsT0FBT244QixVQUFVOzs7OztFQXhCbUIrcUI7O0FDbEIzQzs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFpQkEsQUFDQSxBQUVBOzs7O0lBR3FCcVI7OzsrQkFFOEM7bUZBQUosRUFBSTsyQkFBcERscUIsTUFBb0Q7UUFBcERBLE1BQW9ELCtCQUEzQyxRQUEyQzswQkFBakMxTyxLQUFpQztRQUFqQ0EsS0FBaUMsOEJBQXpCLENBQXlCOzZCQUF0QkQsUUFBc0I7UUFBdEJBLFFBQXNCLGlDQUFYLEdBQVc7OztnSUFDekQsRUFBRTJPLGNBQUYsRUFBVTFPLFlBQVYsRUFBaUJELGtCQUFqQixFQUR5RDs7Ozs7Ozs7Ozs7eUJBUTVENDRCLE9BQU9uOEIsVUFBVTtpQkFDVEEsV0FBV0EsUUFBWCxHQUFzQixZQUFXLEVBQTVDOzthQUVPbThCLEtBQVAsRUFDR2hvQixLQURILENBQ1M7aUJBQ0k7T0FGYixFQUlHOUosSUFKSCxDQUlRLEtBQUs3RyxLQUpiLEVBS0cyUSxLQUxILENBS1M7aUJBQ0k7T0FOYixFQU9LO2tCQUNTLEtBQUs1USxRQURkO2dCQUVPLEtBQUsyTztPQVRqQixFQVdHaUMsS0FYSCxDQVdTLFVBQVN6TyxJQUFULEVBQWU7OztPQVh4QixFQWVHd1AsSUFmSDs7Ozs7Ozs7Ozt5QkFzQkdpbkIsT0FBT244QixVQUFVO2lCQUNUQSxXQUFXQSxRQUFYLEdBQXNCLFlBQVcsRUFBNUM7O2FBRU9tOEIsS0FBUCxFQUNHaG9CLEtBREgsQ0FDUztpQkFDSTtPQUZiLEVBSUc5SixJQUpILENBSVEsS0FBSzdHLEtBSmIsRUFLRzJRLEtBTEgsQ0FLUztpQkFDSTtPQU5iLEVBT0s7a0JBQ1MsS0FBSzVRLFFBRGQ7Z0JBRU8sS0FBSzJPO09BVGpCLEVBV0dpQyxLQVhILENBV1MsVUFBU3pPLElBQVQsRUFBZTs7O09BWHhCLEVBZUd3UCxJQWZIOzs7O0VBdEMyQ2duQjs7QUN4Qi9DOzs7Ozs7Ozs7Ozs7Ozs7OztBQWlCQSxBQUNBLEFBQ0EsQUFDQSxBQUNBLEFBQ0EsQUFDQSxBQUNBLEFBQ0EsQUFDQSxBQUVBLElBQU12M0IsWUFBUztNQUNULFVBRFM7b0JBRUs7Q0FGcEI7O0FBS0EsSUFBTTJzQixxQkFBbUIsT0FBekI7O0FBRUEsSUFBTXRCLGtCQUFnQjthQUNUa00sYUFEUztVQUVaRSxpQkFGWTtVQUdaRjtDQUhWOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztJQW1DcUJHOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsyQkFtQlo7OzttQkFDUSxJQUFiLEVBQW1CLFlBQU07ZUFDbEJuTSxRQUFMO09BREY7O1dBSUtDLFNBQUwsR0FBaUIsSUFBSXhHLFFBQUosRUFBakI7O1dBRUs0RyxnQkFBTCxHQUF3QixJQUFJdHVCLGVBQUosQ0FBb0I7bUJBQy9CK3RCLGVBRCtCO21CQUUvQmtNLGFBRitCO3VCQUczQixlQUgyQjswQkFJeEIsS0FBS2p1QyxZQUFMLENBQWtCLFdBQWxCO09BSkksQ0FBeEI7Ozs7Ozs7Ozs7Ozs7K0JBMkJTO1dBQ0o2WixLQUFMLENBQVdvaEIsT0FBWCxHQUFxQixNQUFyQjtXQUNLcGhCLEtBQUwsQ0FBVzBoQixNQUFYLEdBQW9CLEtBQXBCO1dBQ0tobEIsU0FBTCxDQUFlclcsR0FBZixDQUFtQm1qQyxrQkFBbkI7O1VBRUksQ0FBQ251QixLQUFLdUUsU0FBTCxDQUFlLElBQWYsRUFBcUIsaUJBQXJCLENBQUwsRUFBOEM7WUFDdENqUSxVQUFVbEcsU0FBU21CLGFBQVQsQ0FBdUIsS0FBdkIsQ0FBaEI7Z0JBQ1E4UixTQUFSLENBQWtCclcsR0FBbEIsQ0FBc0IsZ0JBQXRCOztlQUVPLEtBQUt5SSxVQUFMLENBQWdCLENBQWhCLENBQVAsRUFBMkI7Y0FDbkJnWCxPQUFPLEtBQUtoWCxVQUFMLENBQWdCLENBQWhCLENBQWI7ZUFDS2xELFdBQUwsQ0FBaUJrYSxJQUFqQjtrQkFDUXBhLFlBQVIsQ0FBcUJvYSxJQUFyQixFQUEyQixJQUEzQjs7O2FBR0d0YSxXQUFMLENBQWlCbUUsT0FBakI7OzttQkFHV2k1QixZQUFiLENBQTBCLElBQTFCLEVBQWdDL3JCLFNBQWhDOzs7OzJDQUdxQjtVQUNqQixLQUFLd3NCLGtCQUFULEVBQTZCO2FBQ3RCQSxrQkFBTCxDQUF3Qi9xQixPQUF4Qjs7Ozs7d0NBSWdCO1dBQ2I2cUIsa0JBQUwsR0FBMEI7ZUFBTXAzQixTQUFOO09BQTFCOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsyQkFrQ2lCOzs7VUFBZGdKLE9BQWMsdUVBQUosRUFBSTs7Y0FDVFEsZ0JBQVIsR0FBMkJGLEtBQUtDLE1BQUwsQ0FDekJQLFFBQVFRLGdCQUFSLElBQTRCLEVBREgsRUFFekJwQixnQkFBZ0IydUIsMkJBQWhCLENBQTRDLEtBQUszaUMsWUFBTCxDQUFrQixtQkFBbEIsQ0FBNUMsQ0FGeUIsQ0FBM0I7O1VBS00rUixXQUFXNkMsUUFBUTdDLFFBQVIsSUFBb0IsWUFBVyxFQUFoRDs7VUFFTTZ3QixVQUFVLFNBQVZBLE9BQVUsR0FBTTtZQUNkN0csU0FBUyxPQUFLbUcsU0FBTCxDQUFldEIsSUFBZixFQUFmO1lBQ005ckIsV0FBVyxPQUFLd3RCLGdCQUFMLENBQXNCckYsV0FBdEIsQ0FBa0Nyb0IsT0FBbEMsQ0FBakI7O2VBRU8sSUFBSXpSLE9BQUosQ0FBWSxtQkFBVzsrQkFDVCxZQUFNO21CQUNsQjBXLEtBQUwsQ0FBV29oQixPQUFYLEdBQXFCLE9BQXJCO3FCQUNTekQsSUFBVCxTQUFvQixZQUFNOzs7bUJBR25CeFgsZUFBTCxTQUEyQixPQUEzQjs7O2FBSEY7V0FGRjtTQURLLENBQVA7T0FKRjs7YUFrQk8sSUFBSTdjLE9BQUosQ0FBWSxtQkFBVztlQUN2QisrQixTQUFMLENBQWU1RCxVQUFmLENBQTBCO2lCQUFNdnJCLFFBQVE2dkIsU0FBUixDQUFOO1NBQTFCO09BREssQ0FBUDs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs2QkFxQk87VUFDSCxLQUFLbkosT0FBVCxFQUFrQjtlQUNULEtBQUtydEIsSUFBTCxDQUFVaEUsS0FBVixDQUFnQixJQUFoQixFQUFzQkgsU0FBdEIsQ0FBUDtPQURGLE1BRU87ZUFDRSxLQUFLdXZCLElBQUwsQ0FBVXB2QixLQUFWLENBQWdCLElBQWhCLEVBQXNCSCxTQUF0QixDQUFQOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsyQkF1QmU7OztVQUFkMk0sT0FBYyx1RUFBSixFQUFJOztjQUNUUSxnQkFBUixHQUEyQkYsS0FBS0MsTUFBTCxDQUN6QlAsUUFBUVEsZ0JBQVIsSUFBNEIsRUFESCxFQUV6QnBCLGdCQUFnQjJ1QiwyQkFBaEIsQ0FBNEMsS0FBSzNpQyxZQUFMLENBQWtCLG1CQUFsQixDQUE1QyxDQUZ5QixDQUEzQjs7VUFLTStSLFdBQVc2QyxRQUFRN0MsUUFBUixJQUFvQixZQUFXLEVBQWhEOztVQUVNK3dCLFVBQVUsU0FBVkEsT0FBVSxHQUFNO1lBQ2QvRyxTQUFTLE9BQUttRyxTQUFMLENBQWV0QixJQUFmLEVBQWY7WUFDTTlyQixXQUFXLE9BQUt3dEIsZ0JBQUwsQ0FBc0JyRixXQUF0QixDQUFrQ3JvQixPQUFsQyxDQUFqQjs7ZUFFTyxJQUFJelIsT0FBSixDQUFZLG1CQUFXOytCQUNULFlBQU07cUJBQ2RpSixJQUFULFNBQW9CLFlBQU07cUJBQ25CeU4sS0FBTCxDQUFXb2hCLE9BQVgsR0FBcUIsTUFBckI7OzttQkFHS2piLGVBQUwsU0FBMkIsT0FBM0I7OzthQUpGO1dBREY7U0FESyxDQUFQO09BSkY7O2FBa0JPLElBQUk3YyxPQUFKLENBQVksbUJBQVc7ZUFDdkIrK0IsU0FBTCxDQUFlNUQsVUFBZixDQUEwQjtpQkFBTXZyQixRQUFRK3ZCLFNBQVIsQ0FBTjtTQUExQjtPQURLLENBQVA7Ozs7NkNBU3VCcDJCLE1BQU1rSixNQUFNQyxTQUFTO1VBQ3hDbkosU0FBUyxPQUFiLEVBQXNCO1lBQ2hCLENBQUMsS0FBSzZKLFNBQUwsQ0FBZXN0QixRQUFmLENBQXdCUixrQkFBeEIsQ0FBTCxFQUFnRDtlQUN6Q2pqQixTQUFMLEdBQWlCaWpCLHFCQUFtQixHQUFuQixHQUF5Qnh0QixPQUExQzs7T0FGSixNQUlPLElBQUluSixTQUFTLFVBQWIsRUFBeUI7ZUFDdkJpSixhQUFhd3RCLGlCQUFiLENBQStCdnRCLElBQS9CLEVBQXFDQyxPQUFyQyxFQUE4QyxJQUE5QyxFQUFvRGEsU0FBcEQsQ0FBUDs7Ozs7Ozs7Ozs7d0JBN0xxQjthQUNoQixLQUFLd3NCLGtCQUFaOztzQkFHcUJyWixTQUFTO1VBQzFCLEtBQUtxWixrQkFBVCxFQUE2QjthQUN0QkEsa0JBQUwsQ0FBd0IvcUIsT0FBeEI7OztXQUdHK3FCLGtCQUFMLEdBQTBCNUYsMkJBQTJCOEYsYUFBM0IsQ0FBeUMsSUFBekMsRUFBK0N2WixPQUEvQyxDQUExQjs7Ozt3QkEwQ1k7YUFDTCxLQUFLaFEsS0FBTCxDQUFXb2hCLE9BQVgsS0FBdUIsTUFBOUI7Ozs7cUNBaUpzQnZ1QixNQUFNc0ksVUFBVTtVQUNsQyxFQUFFQSxTQUFTM1MsU0FBVCxZQUE4QjRyQyxhQUFoQyxDQUFKLEVBQW9EO2NBQzVDLElBQUlqc0MsS0FBSixDQUFVLDZEQUFWLENBQU47O3NCQUVZMEssSUFBZCxJQUFzQnNJLFFBQXRCOzs7O3dCQXRCOEI7YUFDdkIsQ0FBQyxVQUFELEVBQWEsT0FBYixDQUFQOzs7O3dCQXdCcUI7YUFDZCtzQixlQUFQOzs7O3dCQUd5QjthQUNsQmtNLGFBQVA7Ozs7RUExUHNDbE47O0FBOFAxQzVpQyxlQUFla0csTUFBZixDQUFzQixXQUF0QixFQUFtQytwQyxZQUFuQzs7QUNwVUE7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBaUJBLEFBQ0EsSUFFcUJDOzs7Ozs7Ozs7dUNBUVB6NUIsT0FBWixFQUFxQjs7O2NBQ1RNLEtBQUtDLE1BQUwsQ0FBWTtjQUNaLFFBRFk7Z0JBRVYsS0FGVTthQUdiO0tBSEMsRUFJUFAsV0FBVyxFQUpKLENBQVY7O29KQU1NQSxPQVBhOzs7Ozt5QkFVaEIwNUIsV0FBV0MsV0FBV3g4QixVQUFVOzs7Ozt3QkFJakN1OEIsV0FBV0MsV0FBV3g4QixVQUFVOzs7OzswQkFJOUJlLE1BQU07VUFDSjA3QixVQUFVdDVCLEtBQUt6USxhQUFMLG1JQUFoQjtXQUdLdkYsVUFBTCxDQUFnQm1HLFdBQWhCLENBQTRCbXBDLE9BQTVCO2FBQ087ZUFBTUEsUUFBUWhuQyxNQUFSLEVBQU47T0FBUDs7OztFQS9CcURzMUI7O0FDcEJ6RDs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFpQkEsQUFDQSxBQUNBLEFBQ0EsQUFFQTs7OztJQUdxQjJSOzs7aURBRTRDO21GQUFKLEVBQUk7MkJBQWxEeHFCLE1BQWtEO1FBQWxEQSxNQUFrRCwrQkFBekMsTUFBeUM7MEJBQWpDMU8sS0FBaUM7UUFBakNBLEtBQWlDLDhCQUF6QixDQUF5Qjs2QkFBdEJELFFBQXNCO1FBQXRCQSxRQUFzQixpQ0FBWCxHQUFXOzs7O3lLQUN2RCxFQUFFMk8sY0FBRixFQUFVMU8sWUFBVixFQUFpQkQsa0JBQWpCLEVBRHVEOztVQUd4RG81QixjQUFMLEdBQXNCeDVCLEtBQUt6USxhQUFMLDZJQUF0Qjs7Ozs7OzsrQkFPU3FPLE1BQU07VUFDVDY3QixVQUFVNzdCLEtBQUs4N0Isa0JBQUwsRUFBaEI7VUFDTXhULE9BQU91VCxRQUFRRSwyQkFBUixFQUFiO1VBQ014VCxRQUFRc1QsUUFBUUcsNEJBQVIsRUFBZDs7VUFFTUMsb0JBQW9CLFNBQXBCQSxpQkFBb0IsQ0FBUzlwQixRQUFULEVBQW1CO1lBQ3JDeFAsU0FBUyxFQUFmOzthQUVLLElBQUlsVCxJQUFJLENBQWIsRUFBZ0JBLElBQUkwaUIsU0FBU2hrQixNQUE3QixFQUFxQ3NCLEdBQXJDLEVBQTBDO2NBQ3BDMGlCLFNBQVMxaUIsQ0FBVCxFQUFZZ1EsUUFBWixDQUFxQi9ELFdBQXJCLE9BQXVDLGlCQUEzQyxFQUE4RDttQkFDckQzTixJQUFQLENBQVlva0IsU0FBUzFpQixDQUFULENBQVo7Ozs7ZUFJR2tULE1BQVA7T0FURjs7VUFZTXU1QixRQUFRLEdBQ1hyakMsTUFEVyxDQUNKeXZCLEtBQUt6aUIsUUFBTCxDQUFjMVgsTUFBZCxLQUF5QixDQUF6QixHQUE2Qm02QixJQUE3QixHQUFvQzJULGtCQUFrQjNULEtBQUt6aUIsUUFBdkIsQ0FEaEMsRUFFWGhOLE1BRlcsQ0FFSjB2QixNQUFNMWlCLFFBQU4sQ0FBZTFYLE1BQWYsS0FBMEIsQ0FBMUIsR0FBOEJvNkIsS0FBOUIsR0FBc0MwVCxrQkFBa0IxVCxNQUFNMWlCLFFBQXhCLENBRmxDLENBQWQ7O2FBSU87dUJBQ1VnMkIsUUFBUU0sNkJBQVIsRUFEVjt3QkFFV04sUUFBUU8sZ0NBQVIsRUFGWDt5QkFHWVAsUUFBUVEsaUNBQVIsRUFIWjtlQUlFSCxLQUpGO2lCQUtJbDhCLEtBQUtzOEIsa0JBQUwsRUFMSjtvQkFNT3Q4QixLQUFLdThCLHFCQUFMLEVBTlA7aUJBT0lWLE9BUEo7dUJBUVU3N0IsS0FBS3c4Qix3QkFBTDtPQVJqQjs7OzswQ0FZb0JoQixXQUFXQyxXQUFXO1VBQ3BDZ0IscUJBQ0pqQixVQUFVa0Isa0JBQVYsTUFBa0NqQixVQUFVaUIsa0JBQVYsRUFEcEM7O1VBR0lDLG9CQUNGLENBQUNuQixVQUFVTSxrQkFBVixHQUErQnI0QixTQUEvQixDQUF5Q3N0QixRQUF6QyxDQUFrRCxtQkFBbEQsQ0FBRCxJQUNBLENBQUMwSyxVQUFVSyxrQkFBVixHQUErQnI0QixTQUEvQixDQUF5Q3N0QixRQUF6QyxDQUFrRCxtQkFBbEQsQ0FGSDs7YUFJTzBMLHNCQUFzQkUsaUJBQTdCOzs7O29DQUdjaDVCLFNBQVNpNUIsZUFBZTtVQUNsQ2haLGNBQUo7VUFBV0wsY0FBWDs7VUFFTXNaLFdBQVdsNUIsUUFBUXdFLHFCQUFSLEVBQWpCO1VBQ0l5MEIsY0FBY0UsZUFBZCxDQUE4QnI1QixTQUE5QixDQUF3Q3N0QixRQUF4QyxDQUFpRCxvQkFBakQsQ0FBSixFQUE0RTtZQUNwRWdNLFlBQVlILGNBQWNFLGVBQWQsQ0FBOEIzMEIscUJBQTlCLEVBQWxCO2dCQUNRbFIsS0FBSzQ4QixLQUFMLENBQVlnSixTQUFTekwsS0FBVCxHQUFpQixDQUFsQixHQUF3QjJMLFVBQVUzTCxLQUFWLEdBQWtCLENBQTFDLEdBQStDMkwsVUFBVXpVLElBQXBFLENBQVI7T0FGRixNQUdPO2dCQUNHcnhCLEtBQUs0OEIsS0FBTCxDQUFZZ0osU0FBU3pMLEtBQVQsR0FBaUIsQ0FBbEIsR0FBdUIsR0FBbEMsQ0FBUjs7O1VBR0V3TCxjQUFjSSxjQUFkLENBQTZCdjVCLFNBQTdCLENBQXVDc3RCLFFBQXZDLENBQWdELG1CQUFoRCxDQUFKLEVBQTBFO2dCQUNoRTZMLGNBQWNJLGNBQWQsQ0FBNkI3MEIscUJBQTdCLEdBQXFEb2dCLEtBQXJELEdBQTZELENBQXJFOzs7YUFHSyxFQUFDM0UsWUFBRCxFQUFRTCxZQUFSLEVBQVA7Ozs7Ozs7Ozs7O3lCQVFHaVksV0FBV0MsV0FBV3g4QixVQUFVOzs7V0FDOUIyOEIsY0FBTCxDQUFvQmxuQyxNQUFwQjtnQkFDVXRJLFVBQVYsQ0FBcUJxRyxZQUFyQixDQUFrQyxLQUFLbXBDLGNBQXZDLEVBQXVESCxVQUFVanZDLFdBQWpFOztVQUVNeXdDLDJLQUFzQnpCLFNBQXRCLENBQU47O21CQUVhQSxTQUFiLEVBQXdCLFlBQU07WUFDdEIwQixrQkFBa0I5NkIsS0FBS29NLGVBQUwsQ0FBcUJndEIsU0FBckIsS0FBbUNBLFNBQTNEO1lBQ00yQixrQkFBa0IvNkIsS0FBS29NLGVBQUwsQ0FBcUJpdEIsU0FBckIsS0FBbUNBLFNBQTNEO1lBQ00yQix5QkFBeUIsT0FBS0MsVUFBTCxDQUFnQkgsZUFBaEIsQ0FBL0I7WUFDTUkseUJBQXlCLE9BQUtELFVBQUwsQ0FBZ0JGLGVBQWhCLENBQS9COztZQUVNSSxRQUFRLE9BQUtDLGVBQUwsQ0FBcUIvQixTQUFyQixFQUFnQzJCLHNCQUFoQyxDQUFkOztZQUVNSyxZQUFZblQsT0FBTyxPQUFLc1IsY0FBWixFQUNmOU0sU0FEZSxHQUVmMWIsS0FGZSxDQUVUO21CQUNJLENBREo7cUJBRU07U0FKRyxFQU1mOUosSUFOZSxDQU1WLE9BQUs3RyxLQU5LLEVBT2YyUSxLQVBlLENBT1Q7bUJBQ0k7U0FSSyxFQVNiO29CQUNTLE9BQUs1USxRQURkO2tCQUVPLE9BQUsyTztTQVhDLEVBYWY0ZCxZQWJlLEdBY2YzYixLQWRlLENBY1QsVUFBQ3pPLElBQUQsRUFBVTtpQkFDVmkzQixjQUFMLENBQW9CbG5DLE1BQXBCOztTQWZjLENBQWxCOztZQW1CTWdwQyx1QkFBdUIsT0FBS0MscUJBQUwsQ0FBMkJULGVBQTNCLEVBQTRDQyxlQUE1QyxDQUE3Qjs7WUFFSU8sb0JBQUosRUFBMEI7O2NBRWxCRSx5QkFBeUJSLHVCQUF1QnZCLE9BQXZCLENBQStCMXpCLHFCQUEvQixHQUF1RGhELE1BQXZELEdBQWdFLElBQS9GO2lCQUNLeTJCLGNBQUwsQ0FBb0I3MEIsS0FBcEIsQ0FBMEJxQixHQUExQixHQUFnQ3cxQixzQkFBaEM7O2lCQUVPMXBCLE1BQVAsQ0FFRXVwQixTQUZGLEVBSUVuVCxPQUFPLENBQUM4Uyx1QkFBdUIxbUMsT0FBeEIsRUFBaUMwbUMsdUJBQXVCUyxhQUF4RCxFQUF1RVQsdUJBQXVCVSxVQUE5RixDQUFQLEVBQ0doUCxTQURILEdBRUcxYixLQUZILENBRVM7aUJBQ0E7eUJBQ1E7YUFGUjtzQkFJSztXQU5kLEVBUUc5SixJQVJILENBUVEsT0FBSzdHLEtBUmIsRUFTRzJRLEtBVEgsQ0FTUztpQkFDQTt5QkFDUTthQUZSO3NCQUlLLE9BQUs1USxRQUpWO29CQUtHLE9BQUsyTztXQWRqQixFQWdCRzRkLFlBaEJILEVBSkYsRUFzQkV6RSxPQUFPOFMsdUJBQXVCdkIsT0FBOUIsRUFDRy9NLFNBREgsR0FFRzFiLEtBRkgsQ0FFUztpQkFDQTt1QkFDTTthQUZOO3NCQUlLO1dBTmQsRUFRR0EsS0FSSCxDQVFTO2lCQUNBO3VCQUNNO2FBRk47c0JBSUssT0FBSzVRLFFBSlY7b0JBS0csT0FBSzJPO1dBYmpCLEVBZUc0ZCxZQWZILEVBdEJGLEVBdUNFekUsT0FBTzhTLHVCQUF1QlUsVUFBOUIsRUFDRzFxQixLQURILENBQ1M7aUJBQ0E7bUJBQ0V3cUI7YUFGRjtzQkFJSztXQUxkLENBdkNGLEVBK0NFdFQsT0FBTzhTLHVCQUF1QlcsYUFBOUIsRUFDR2pQLFNBREgsR0FFRzFiLEtBRkgsQ0FFUztpQkFDQTt5QkFDUSx5QkFEUjt1QkFFTTthQUhOO3NCQUtLO1dBUGQsRUFTRzlKLElBVEgsQ0FTUSxPQUFLN0csS0FUYixFQVVHMlEsS0FWSCxDQVVTO2lCQUNBO3lCQUNRLHNCQURSO3VCQUVNO2FBSE47c0JBS0ssT0FBSzVRLFFBTFY7b0JBTUcsT0FBSzJPO1dBaEJqQixFQWtCRzRkLFlBbEJILEVBL0NGLEVBbUVFekUsT0FBTzhTLHVCQUF1Qk4sZUFBOUIsRUFDR2hPLFNBREgsR0FFRzFiLEtBRkgsQ0FFUztpQkFDQTt5QkFDUSxpQkFBaUJtcUIsTUFBTTNaLEtBQXZCLEdBQStCLFdBRHZDO3VCQUVNO2FBSE47c0JBS0s7V0FQZCxFQVNHdGEsSUFUSCxDQVNRLE9BQUs3RyxLQVRiLEVBVUcyUSxLQVZILENBVVM7aUJBQ0E7eUJBQ1Esc0JBRFI7dUJBRU07YUFITjtzQkFLSyxPQUFLNVEsUUFMVjtvQkFNRyxPQUFLMk87V0FoQmpCLEVBa0JHNGQsWUFsQkgsRUFuRUYsRUF1RkV6RSxPQUFPOFMsdUJBQXVCbEIsS0FBOUIsRUFDR3BOLFNBREgsR0FFRzFiLEtBRkgsQ0FFUztpQkFDQSxFQUFDMmMsU0FBUyxDQUFWLEVBREE7c0JBRUs7V0FKZCxFQU1Hem1CLElBTkgsQ0FNUSxPQUFLN0csS0FOYixFQU9HMlEsS0FQSCxDQU9TO2lCQUNBLEVBQUMyYyxTQUFTLENBQVYsRUFEQTtzQkFFSyxPQUFLdnRCLFFBRlY7b0JBR0csT0FBSzJPO1dBVmpCLEVBWUc0ZCxZQVpILEVBdkZGLEVBcUdFekUsT0FBTyxDQUFDZ1QsdUJBQXVCNW1DLE9BQXhCLEVBQWlDNG1DLHVCQUF1Qk8sYUFBeEQsRUFBdUVQLHVCQUF1QlEsVUFBOUYsQ0FBUCxFQUNHaFAsU0FESCxHQUVHMWIsS0FGSCxDQUVTO2lCQUNBO3lCQUNRO2FBRlI7c0JBSUs7V0FOZCxFQVFHOUosSUFSSCxDQVFRLE9BQUs3RyxLQVJiLEVBU0cyUSxLQVRILENBU1M7aUJBQ0E7eUJBQ1E7YUFGUjtzQkFJSyxPQUFLNVEsUUFKVjtvQkFLRyxPQUFLMk87V0FkakIsRUFnQkc0ZCxZQWhCSCxHQWlCRzNiLEtBakJILENBaUJTLGdCQUFROzs7O1dBakJqQixDQXJHRixFQTRIRWtYLE9BQU9nVCx1QkFBdUJTLGFBQTlCLEVBQ0dqUCxTQURILEdBRUcxYixLQUZILENBRVM7aUJBQ0E7eUJBQ1Esc0JBRFI7dUJBRU07YUFITjtzQkFLSztXQVBkLEVBU0c5SixJQVRILENBU1EsT0FBSzdHLEtBVGIsRUFVRzJRLEtBVkgsQ0FVUztpQkFDQTt5QkFDUSxrQkFBa0JtcUIsTUFBTTNaLEtBQXhCLEdBQWdDLFdBRHhDO3VCQUVNO2FBSE47c0JBS0ssT0FBS3BoQixRQUxWO29CQU1HLE9BQUsyTztXQWhCakIsRUFrQkc0ZCxZQWxCSCxFQTVIRixFQWdKRXpFLE9BQU9nVCx1QkFBdUJSLGVBQTlCLEVBQ0doTyxTQURILEdBRUcxYixLQUZILENBRVM7aUJBQ0E7eUJBQ1Esc0JBRFI7dUJBRU07YUFITjtzQkFLSztXQVBkLEVBU0c5SixJQVRILENBU1EsT0FBSzdHLEtBVGIsRUFVRzJRLEtBVkgsQ0FVUztpQkFDQTt5QkFDUSxrQkFBa0JtcUIsTUFBTWhhLEtBQXhCLEdBQWdDLFdBRHhDO3VCQUVNO2FBSE47c0JBS0ssT0FBSy9nQixRQUxWO29CQU1HLE9BQUsyTztXQWhCakIsRUFrQkc0ZCxZQWxCSCxFQWhKRixFQW9LRXpFLE9BQU9nVCx1QkFBdUJwQixLQUE5QixFQUNHcE4sU0FESCxHQUVHMWIsS0FGSCxDQUVTO2lCQUNBLEVBQUMyYyxTQUFTLENBQVYsRUFEQTtzQkFFSztXQUpkLEVBTUd6bUIsSUFOSCxDQU1RLE9BQUs3RyxLQU5iLEVBT0cyUSxLQVBILENBT1M7aUJBQ0EsRUFBQzJjLFNBQVMsQ0FBVixFQURBO3NCQUVLLE9BQUt2dEIsUUFGVjtvQkFHRyxPQUFLMk87V0FWakIsRUFZRzRkLFlBWkgsRUFwS0Y7U0FMRixNQXlMTzs7aUJBRUU3YSxNQUFQLENBRUV1cEIsU0FGRixFQUlFblQsT0FBT2tSLFNBQVAsRUFDRzFNLFNBREgsR0FFRzFiLEtBRkgsQ0FFUztpQkFDQTt5QkFDUTthQUZSO3NCQUlLO1dBTmQsRUFRRzlKLElBUkgsQ0FRUSxPQUFLN0csS0FSYixFQVNHMlEsS0FUSCxDQVNTO2lCQUNBO3lCQUNRO2FBRlI7c0JBSUssT0FBSzVRLFFBSlY7b0JBS0csT0FBSzJPO1dBZGpCLEVBZ0JHNGQsWUFoQkgsRUFKRixFQXNCRXpFLE9BQU9tUixTQUFQLEVBQ0czTSxTQURILEdBRUcxYixLQUZILENBRVM7aUJBQ0E7eUJBQ1E7YUFGUjtzQkFJSztXQU5kLEVBUUc5SixJQVJILENBUVEsT0FBSzdHLEtBUmIsRUFTRzJRLEtBVEgsQ0FTUztpQkFDQTt5QkFDUTthQUZSO3NCQUlLLE9BQUs1USxRQUpWO29CQUtHLE9BQUsyTztXQWRqQixFQWdCRzRkLFlBaEJILEdBaUJHM2IsS0FqQkgsQ0FpQlMsZ0JBQVE7Ozs7V0FqQmpCLENBdEJGOztPQXhOSjs7Ozs7Ozs7Ozs7d0JBK1FFb29CLFdBQVdDLFdBQVd4OEIsVUFBVTs7O1dBQzdCMjhCLGNBQUwsQ0FBb0JsbkMsTUFBcEI7Z0JBQ1V0SSxVQUFWLENBQXFCcUcsWUFBckIsQ0FBa0MsS0FBS21wQyxjQUF2QyxFQUF1REosVUFBVWh2QyxXQUFqRTs7VUFFTXl3QywyS0FBc0J6QixTQUF0QixDQUFOOztVQUVNMEIsa0JBQWtCOTZCLEtBQUtvTSxlQUFMLENBQXFCZ3RCLFNBQXJCLEtBQW1DQSxTQUEzRDtVQUNNMkIsa0JBQWtCLzZCLEtBQUtvTSxlQUFMLENBQXFCaXRCLFNBQXJCLEtBQW1DQSxTQUEzRDtVQUNNMkIseUJBQXlCLEtBQUtDLFVBQUwsQ0FBZ0JILGVBQWhCLENBQS9CO1VBQ01JLHlCQUF5QixLQUFLRCxVQUFMLENBQWdCRixlQUFoQixDQUEvQjs7VUFFTUksUUFBUSxLQUFLQyxlQUFMLENBQXFCL0IsU0FBckIsRUFBZ0M2QixzQkFBaEMsQ0FBZDs7VUFFTUcsWUFBWW5ULE9BQU8sS0FBS3NSLGNBQVosRUFDZjlNLFNBRGUsR0FFZjFiLEtBRmUsQ0FFVDtpQkFDSSxHQURKO21CQUVNO09BSkcsRUFNZjlKLElBTmUsQ0FNVixLQUFLN0csS0FOSyxFQU9mMlEsS0FQZSxDQU9UO2lCQUNJO09BUkssRUFTYjtrQkFDUyxLQUFLNVEsUUFEZDtnQkFFTyxLQUFLMk87T0FYQyxFQWFmNGQsWUFiZSxHQWNmM2IsS0FkZSxDQWNULFVBQUN6TyxJQUFELEVBQVU7O09BZEQsQ0FBbEI7O1VBa0JNKzRCLHVCQUF1QixLQUFLQyxxQkFBTCxDQUEyQlQsZUFBM0IsRUFBNENDLGVBQTVDLENBQTdCOztVQUVJTyxvQkFBSixFQUEwQjtZQUNsQkUseUJBQXlCUix1QkFBdUJ2QixPQUF2QixDQUErQjF6QixxQkFBL0IsR0FBdURoRCxNQUF2RCxHQUFnRSxJQUEvRjthQUNLeTJCLGNBQUwsQ0FBb0I3MEIsS0FBcEIsQ0FBMEJxQixHQUExQixHQUFnQ3cxQixzQkFBaEM7O2VBRU8xcEIsTUFBUCxDQUVFdXBCLFNBRkYsRUFJRW5ULE9BQU8sQ0FBQzhTLHVCQUF1QjFtQyxPQUF4QixFQUFpQzBtQyx1QkFBdUJTLGFBQXhELEVBQXVFVCx1QkFBdUJVLFVBQTlGLENBQVAsRUFDR2hQLFNBREgsR0FFRzFiLEtBRkgsQ0FFUztlQUNBO3VCQUNRLDZCQURSO3FCQUVNO1dBSE47b0JBS0s7U0FQZCxFQVNHOUosSUFUSCxDQVNRLEtBQUs3RyxLQVRiLEVBVUcyUSxLQVZILENBVVM7ZUFDQTt1QkFDUSw0QkFEUjtxQkFFTTtXQUhOO29CQUtLLEtBQUs1USxRQUxWO2tCQU1HLEtBQUsyTztTQWhCakIsRUFrQkc0ZCxZQWxCSCxFQUpGLEVBd0JFekUsT0FBTzhTLHVCQUF1QlcsYUFBOUIsRUFDR2pQLFNBREgsR0FFRzFiLEtBRkgsQ0FFUztlQUNBO3VCQUNRLGtCQUFrQm1xQixNQUFNM1osS0FBeEIsR0FBZ0MsV0FEeEM7cUJBRU07V0FITjtvQkFLSztTQVBkLEVBU0d0YSxJQVRILENBU1EsS0FBSzdHLEtBVGIsRUFVRzJRLEtBVkgsQ0FVUztlQUNBO3VCQUNRLHNCQURSO3FCQUVNO1dBSE47b0JBS0ssS0FBSzVRLFFBTFY7a0JBTUcsS0FBSzJPO1NBaEJqQixFQWtCRzRkLFlBbEJILEVBeEJGLEVBNENFekUsT0FBTzhTLHVCQUF1Qk4sZUFBOUIsRUFDR2hPLFNBREgsR0FFRzFiLEtBRkgsQ0FFUztlQUNBO3VCQUNRLGtCQUFrQm1xQixNQUFNaGEsS0FBeEIsR0FBZ0M7V0FGeEM7b0JBSUs7U0FOZCxFQVFHamEsSUFSSCxDQVFRLEtBQUs3RyxLQVJiLEVBU0cyUSxLQVRILENBU1M7ZUFDQTt1QkFDUTtXQUZSO29CQUlLLEtBQUs1USxRQUpWO2tCQUtHLEtBQUsyTztTQWRqQixFQWdCRzRkLFlBaEJILEVBNUNGLEVBOERFekUsT0FBTzhTLHVCQUF1QmxCLEtBQTlCLEVBQ0dwTixTQURILEdBRUcxYixLQUZILENBRVM7ZUFDQSxFQUFDMmMsU0FBUyxDQUFWLEVBREE7b0JBRUs7U0FKZCxFQU1Hem1CLElBTkgsQ0FNUSxLQUFLN0csS0FOYixFQU9HMlEsS0FQSCxDQU9TO2VBQ0EsRUFBQzJjLFNBQVMsQ0FBVixFQURBO29CQUVLLEtBQUt2dEIsUUFGVjtrQkFHRyxLQUFLMk87U0FWakIsRUFZRzRkLFlBWkgsRUE5REYsRUE0RUV6RSxPQUFPZ1QsdUJBQXVCUSxVQUE5QixFQUNHMXFCLEtBREgsQ0FDUztlQUNBO2lCQUNFd3FCO1dBRkY7b0JBSUs7U0FMZCxDQTVFRixFQW9GRXRULE9BQU8sQ0FBQ2dULHVCQUF1QjVtQyxPQUF4QixFQUFpQzRtQyx1QkFBdUJPLGFBQXhELEVBQXVFUCx1QkFBdUJRLFVBQTlGLENBQVAsRUFDRzFxQixLQURILENBQ1M7ZUFDQTt1QkFDUTtXQUZSO29CQUlLO1NBTGQsRUFPRzlKLElBUEgsQ0FPUSxLQUFLN0csS0FQYixFQVFHMlEsS0FSSCxDQVFTO2VBQ0E7dUJBQ1E7V0FGUjtvQkFJSyxLQUFLNVEsUUFKVjtrQkFLRyxLQUFLMk87U0FiakIsRUFlRzdILElBZkgsQ0FlUSxDQWZSLEVBZ0JHOEosS0FoQkgsQ0FnQlMsZ0JBQVE7aUJBQ1J3b0IsY0FBTCxDQUFvQmxuQyxNQUFwQjs7OztTQWpCSixDQXBGRixFQTJHRTQxQixPQUFPZ1QsdUJBQXVCekIsT0FBOUIsRUFDR3pvQixLQURILENBQ1M7ZUFDQTtxQkFDTTtXQUZOO29CQUlLO1NBTGQsRUFPR0EsS0FQSCxDQU9TO2VBQ0E7cUJBQ007V0FGTjtvQkFJSyxLQUFLNVEsUUFKVjtrQkFLRyxLQUFLMk87U0FaakIsQ0EzR0YsRUEwSEVtWixPQUFPZ1QsdUJBQXVCUyxhQUE5QixFQUNHM3FCLEtBREgsQ0FDUztlQUNBO3VCQUNRO1dBRlI7b0JBSUs7U0FMZCxFQU9HOUosSUFQSCxDQU9RLEtBQUs3RyxLQVBiLEVBUUcyUSxLQVJILENBUVM7ZUFDQTt1QkFDUTtXQUZSO29CQUlLLEtBQUs1USxRQUpWO2tCQUtHLEtBQUsyTztTQWJqQixDQTFIRixFQTBJRW1aLE9BQU9nVCx1QkFBdUJSLGVBQTlCLEVBQ0cxcEIsS0FESCxDQUNTO2VBQ0E7dUJBQ1Esc0JBRFI7cUJBRU07V0FITjtvQkFLSztTQU5kLEVBUUc5SixJQVJILENBUVEsS0FBSzdHLEtBUmIsRUFTRzJRLEtBVEgsQ0FTUztlQUNBO3VCQUNRLGlCQUFpQm1xQixNQUFNM1osS0FBdkIsR0FBK0IsV0FEdkM7cUJBRU07V0FITjtvQkFLSyxLQUFLcGhCLFFBTFY7a0JBTUcsS0FBSzJPO1NBZmpCLENBMUlGO09BSkYsTUFnS087ZUFDRStDLE1BQVAsQ0FFRXVwQixTQUZGLEVBSUVuVCxPQUFPa1IsU0FBUCxFQUNHMU0sU0FESCxHQUVHMWIsS0FGSCxDQUVTO2VBQ0E7dUJBQ1EsNkJBRFI7cUJBRU07V0FITjtvQkFLSztTQVBkLEVBU0c5SixJQVRILENBU1EsS0FBSzdHLEtBVGIsRUFVRzJRLEtBVkgsQ0FVUztlQUNBO3VCQUNRLDRCQURSO3FCQUVNO1dBSE47b0JBS0ssS0FBSzVRLFFBTFY7a0JBTUcsS0FBSzJPO1NBaEJqQixFQWtCRzRkLFlBbEJILEVBSkYsRUF3QkV6RSxPQUFPbVIsU0FBUCxFQUNHcm9CLEtBREgsQ0FDUztlQUNBO3VCQUNRO1dBRlI7b0JBSUs7U0FMZCxFQU9HOUosSUFQSCxDQU9RLEtBQUs3RyxLQVBiLEVBUUcyUSxLQVJILENBUVM7ZUFDQTt1QkFDUTtXQUZSO29CQUlLLEtBQUs1USxRQUpWO2tCQUtHLEtBQUsyTztTQWJqQixFQWVHaUMsS0FmSCxDQWVTLGdCQUFRO2lCQUNSd29CLGNBQUwsQ0FBb0JsbkMsTUFBcEI7Ozs7U0FoQkosQ0F4QkY7Ozs7O0VBdGlCMkQ2bUM7O0FDekJqRTs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFpQkEsQUFDQSxBQUNBLEFBRUE7Ozs7SUFHcUJ5Qzs7O2dEQUVtRTttRkFBSixFQUFJOzJCQUF6RTdzQixNQUF5RTtRQUF6RUEsTUFBeUUsK0JBQWhFLDZCQUFnRTswQkFBakMxTyxLQUFpQztRQUFqQ0EsS0FBaUMsOEJBQXpCLENBQXlCOzZCQUF0QkQsUUFBc0I7UUFBdEJBLFFBQXNCLGlDQUFYLEdBQVc7Ozs7dUtBQzlFLEVBQUUyTyxjQUFGLEVBQVUxTyxZQUFWLEVBQWlCRCxrQkFBakIsRUFEOEU7O1VBRy9FbzVCLGNBQUwsR0FBc0J4NUIsS0FBS3pRLGFBQUwsd0lBQXRCOzs7Ozs7Ozs7Ozs7O3lCQVdHNnBDLFdBQVdDLFdBQVd4OEIsVUFBVTs7O1dBQzlCMjhCLGNBQUwsQ0FBb0JsbkMsTUFBcEI7Z0JBQ1V0SSxVQUFWLENBQXFCcUcsWUFBckIsQ0FBa0MsS0FBS21wQyxjQUF2QyxFQUF1REgsU0FBdkQ7O1VBRU13Qix5S0FBc0J6QixTQUF0QixDQUFOOztVQUVNaUMsWUFBWW5ULE9BQU8sS0FBS3NSLGNBQVosRUFDZnR5QixJQURlLENBQ1YsS0FBSzdHLEtBQUwsR0FBYSxLQUFLRCxRQURSLEVBRWY0USxLQUZlLENBRVQsZ0JBQVE7ZUFDUndvQixjQUFMLENBQW9CbG5DLE1BQXBCOztPQUhjLENBQWxCOzthQU9Pd2YsTUFBUCxDQUVFdXBCLFNBRkYsRUFJRW5ULE9BQU9rUixTQUFQLEVBQ0cxTSxTQURILEdBRUcxYixLQUZILENBRVM7YUFDQTtxQkFDUTtTQUZSO2tCQUlLO09BTmQsRUFRRzlKLElBUkgsQ0FRUSxLQUFLN0csS0FSYixFQVNHMlEsS0FUSCxDQVNTO2FBQ0E7cUJBQ1E7U0FGUjtrQkFJSyxLQUFLNVEsUUFKVjtnQkFLRyxLQUFLMk87T0FkakIsRUFnQkc0ZCxZQWhCSCxHQWlCRzNiLEtBakJILENBaUJTLGdCQUFROzs7O09BakJqQixDQUpGLEVBMkJFa1gsT0FBT21SLFNBQVAsRUFDR3JvQixLQURILENBQ1M7YUFDQTtxQkFDUSxzQkFEUjttQkFFTTtTQUhOO2tCQUtLO09BTmQsRUFRRzlKLElBUkgsQ0FRUSxLQUFLN0csS0FSYixFQVNHMlEsS0FUSCxDQVNTO2FBQ0E7cUJBQ1EseUJBRFI7bUJBRU07U0FITjtrQkFLSyxLQUFLNVEsUUFMVjtnQkFNRyxLQUFLMk87T0FmakIsQ0EzQkY7Ozs7Ozs7Ozs7O3dCQXFERXFxQixXQUFXQyxXQUFXeDhCLFVBQVU7OztXQUM3QjI4QixjQUFMLENBQW9CbG5DLE1BQXBCO2dCQUNVdEksVUFBVixDQUFxQnFHLFlBQXJCLENBQWtDLEtBQUttcEMsY0FBdkMsRUFBdURKLFNBQXZEOztVQUVNeUIseUtBQXNCekIsU0FBdEIsQ0FBTjs7YUFFT3RuQixNQUFQLENBRUVvVyxPQUFPLEtBQUtzUixjQUFaLEVBQ0d0eUIsSUFESCxDQUNRLEtBQUs3RyxLQUFMLEdBQWEsS0FBS0QsUUFEMUIsRUFFRzRRLEtBRkgsQ0FFUyxnQkFBUTtlQUNSd29CLGNBQUwsQ0FBb0JsbkMsTUFBcEI7O09BSEosQ0FGRixFQVNFNDFCLE9BQU9rUixTQUFQLEVBQ0dwb0IsS0FESCxDQUNTO2FBQ0E7cUJBQ1EseUJBRFI7bUJBRU07U0FITjtrQkFLSztPQU5kLEVBUUc5SixJQVJILENBUVEsS0FBSzdHLEtBUmIsRUFTRzJRLEtBVEgsQ0FTUzthQUNBO3FCQUNRLHNCQURSO21CQUVNO1NBSE47a0JBS0ssS0FBSzVRLFFBTFY7Z0JBTUcsS0FBSzJPO09BZmpCLEVBaUJHaUMsS0FqQkgsQ0FpQlMsZ0JBQVE7Ozs7T0FqQmpCLENBVEYsRUFnQ0VrWCxPQUFPbVIsU0FBUCxFQUNHcm9CLEtBREgsQ0FDUzthQUNBO3FCQUNRO1NBRlI7a0JBSUs7T0FMZCxFQU9HOUosSUFQSCxDQU9RLEtBQUs3RyxLQVBiLEVBUUcyUSxLQVJILENBUVM7YUFDQTtxQkFDUTtTQUZSO2tCQUlLLEtBQUs1USxRQUpWO2dCQUtHLEtBQUsyTztPQWJqQixDQWhDRjs7OztFQXhGNERvcUI7O0FDeEJoRTs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFpQkEsQUFDQSxBQUNBLEFBRUE7Ozs7SUFHcUIwQzs7O2dEQUU4QzttRkFBSixFQUFJOzJCQUFwRDlzQixNQUFvRDtRQUFwREEsTUFBb0QsK0JBQTNDLFFBQTJDOzBCQUFqQzFPLEtBQWlDO1FBQWpDQSxLQUFpQyw4QkFBekIsQ0FBeUI7NkJBQXRCRCxRQUFzQjtRQUF0QkEsUUFBc0IsaUNBQVgsR0FBVzs7O2tLQUN6RCxFQUFFMk8sY0FBRixFQUFVMU8sWUFBVixFQUFpQkQsa0JBQWpCLEVBRHlEOzs7Ozs7Ozs7Ozs7eUJBUzVEZzVCLFdBQVdDLFdBQVd4OEIsVUFBVTtVQUM3QmcrQix5S0FBc0J6QixTQUF0QixDQUFOOzthQUVPdG5CLE1BQVAsQ0FFRW9XLE9BQU8sQ0FBQ2tSLFVBQVVjLGtCQUFWLEVBQUQsRUFBaUNkLFVBQVVlLHFCQUFWLEVBQWpDLENBQVAsRUFDR3pOLFNBREgsR0FFRzFiLEtBRkgsQ0FFUzthQUNBO3FCQUNRLHNCQURSO21CQUVNO1NBSE47a0JBS0s7T0FQZCxFQVNHOUosSUFUSCxDQVNRLEtBQUs3RyxLQVRiLEVBVUcyUSxLQVZILENBVVM7YUFDQTtxQkFDUSxzQkFEUjttQkFFTTtTQUhOO2tCQUtLLEtBQUs1USxRQUxWO2dCQU1HLEtBQUsyTztPQWhCakIsRUFrQkc0ZCxZQWxCSCxHQW1CRzNiLEtBbkJILENBbUJTLGdCQUFROzs7O09BbkJqQixDQUZGLEVBMkJFa1gsT0FBT2tSLFVBQVVNLGtCQUFWLEVBQVAsRUFDR2hOLFNBREgsR0FFRzFiLEtBRkgsQ0FFUzthQUNBO3FCQUNRLHNCQURSO21CQUVNO1NBSE47a0JBS0s7T0FQZCxFQVNHOUosSUFUSCxDQVNRLEtBQUs3RyxLQVRiLEVBVUcyUSxLQVZILENBVVM7YUFDQTtxQkFDUSxzQkFEUjttQkFFTTtTQUhOO2tCQUtLLEtBQUs1USxRQUxWO2dCQU1HLEtBQUsyTztPQWhCakIsRUFrQkc0ZCxZQWxCSCxFQTNCRjs7Ozs7Ozs7Ozs7d0JBdURFeU0sV0FBV0MsV0FBV3g4QixVQUFVO1VBQzVCZytCLHlLQUFzQnpCLFNBQXRCLENBQU47O2FBRU90bkIsTUFBUCxDQUVFb1csT0FBTyxDQUFDbVIsVUFBVWEsa0JBQVYsRUFBRCxFQUFpQ2IsVUFBVWMscUJBQVYsRUFBakMsQ0FBUCxFQUNHbnBCLEtBREgsQ0FDUzthQUNBO3FCQUNRLHNCQURSO21CQUVNO1NBSE47a0JBS0s7T0FOZCxFQVFHOUosSUFSSCxDQVFRLEtBQUs3RyxLQVJiLEVBU0cyUSxLQVRILENBU1M7YUFDQTtxQkFDUSxzQkFEUjttQkFFTTtTQUhOO2tCQUtLLEtBQUs1USxRQUxWO2dCQU1HLEtBQUsyTztPQWZqQixFQWlCR2lDLEtBakJILENBaUJTLGdCQUFROzs7O09BakJqQixDQUZGLEVBeUJFa1gsT0FBT21SLFVBQVVLLGtCQUFWLEVBQVAsRUFDRzFvQixLQURILENBQ1M7YUFDQTtxQkFDUSxzQkFEUjttQkFFTTtTQUhOO2tCQUtLO09BTmQsRUFRRzlKLElBUkgsQ0FRUSxLQUFLN0csS0FSYixFQVNHMlEsS0FUSCxDQVNTO2FBQ0E7cUJBQ1Esc0JBRFI7bUJBRU07U0FITjtrQkFLSyxLQUFLNVEsUUFMVjtnQkFNRyxLQUFLMk87T0FmakIsQ0F6QkY7Ozs7RUF4RTREb3FCOztBQ3hCaEU7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBaUJBLEFBQ0EsQUFDQSxBQUVBOzs7O0lBR3FCMkM7OztnREFFbUU7bUZBQUosRUFBSTsyQkFBekUvc0IsTUFBeUU7UUFBekVBLE1BQXlFLCtCQUFoRSw2QkFBZ0U7MEJBQWpDMU8sS0FBaUM7UUFBakNBLEtBQWlDLDhCQUF6QixDQUF5Qjs2QkFBdEJELFFBQXNCO1FBQXRCQSxRQUFzQixpQ0FBWCxHQUFXOzs7O3VLQUM5RSxFQUFFMk8sY0FBRixFQUFVMU8sWUFBVixFQUFpQkQsa0JBQWpCLEVBRDhFOztVQUcvRW81QixjQUFMLEdBQXNCeDVCLEtBQUt6USxhQUFMLDhJQUF0QjtVQUlLd3NDLGdCQUFMLEdBQXdCLEdBQXhCOzs7Ozs7Ozs7Ozs7O3lCQVFHM0MsV0FBV0MsV0FBV3g4QixVQUFVOzs7V0FDOUIyOEIsY0FBTCxDQUFvQmxuQyxNQUFwQjtnQkFDVXFVLGFBQVYsQ0FBd0J0VyxZQUF4QixDQUFxQyxLQUFLbXBDLGNBQTFDLEVBQTBESCxVQUFVanZDLFdBQXBFOztVQUVNeXdDLHlLQUFzQnpCLFNBQXRCLENBQU47O2FBRU90bkIsTUFBUCxDQUVFb1csT0FBTyxLQUFLc1IsY0FBWixFQUNHOU0sU0FESCxHQUVHMWIsS0FGSCxDQUVTO2lCQUNJLENBREo7bUJBRU07T0FKZixFQU1HOUosSUFOSCxDQU1RLEtBQUs3RyxLQU5iLEVBT0cyUSxLQVBILENBT1M7aUJBQ0ksS0FBSytxQjtPQVJsQixFQVNLO2tCQUNTLEtBQUszN0IsUUFEZDtnQkFFTyxLQUFLMk87T0FYakIsRUFhRzRkLFlBYkgsR0FjRzNiLEtBZEgsQ0FjUyxnQkFBUTtlQUNSd29CLGNBQUwsQ0FBb0JsbkMsTUFBcEI7O09BZkosQ0FGRixFQXFCRTQxQixPQUFPa1IsU0FBUCxFQUNHMU0sU0FESCxHQUVHMWIsS0FGSCxDQUVTO2FBQ0E7cUJBQ1E7U0FGUjtrQkFJSztPQU5kLEVBUUc5SixJQVJILENBUVEsS0FBSzdHLEtBUmIsRUFTRzJRLEtBVEgsQ0FTUzthQUNBO3FCQUNRO1NBRlI7a0JBSUssS0FBSzVRLFFBSlY7Z0JBS0csS0FBSzJPO09BZGpCLEVBZ0JHNGQsWUFoQkgsRUFyQkYsRUF1Q0V6RSxPQUFPbVIsU0FBUCxFQUNHM00sU0FESCxHQUVHMWIsS0FGSCxDQUVTO2FBQ0E7cUJBQ1E7U0FGUjtrQkFJSztPQU5kLEVBUUc5SixJQVJILENBUVEsS0FBSzdHLEtBUmIsRUFTRzJRLEtBVEgsQ0FTUzthQUNBO3FCQUNRO1NBRlI7a0JBSUssS0FBSzVRLFFBSlY7Z0JBS0csS0FBSzJPO09BZGpCLEVBZ0JHNGQsWUFoQkgsR0FpQkd6bEIsSUFqQkgsQ0FpQlEsR0FqQlIsRUFrQkc4SixLQWxCSCxDQWtCUyxnQkFBUTs7OztPQWxCakIsQ0F2Q0Y7Ozs7Ozs7Ozs7O3dCQXNFRW9vQixXQUFXQyxXQUFXeDhCLFVBQVU7OztXQUM3QjI4QixjQUFMLENBQW9CbG5DLE1BQXBCO2dCQUNVdEksVUFBVixDQUFxQnFHLFlBQXJCLENBQWtDLEtBQUttcEMsY0FBdkMsRUFBdURKLFVBQVVodkMsV0FBakU7O1VBRU15d0MseUtBQXNCekIsU0FBdEIsQ0FBTjs7YUFFT3RuQixNQUFQLENBRUVvVyxPQUFPLEtBQUtzUixjQUFaLEVBQ0c5TSxTQURILEdBRUcxYixLQUZILENBRVM7aUJBQ0ksS0FBSytxQixnQkFEVDttQkFFTTtPQUpmLEVBTUc3MEIsSUFOSCxDQU1RLEtBQUs3RyxLQU5iLEVBT0cyUSxLQVBILENBT1M7aUJBQ0k7T0FSYixFQVNLO2tCQUNTLEtBQUs1USxRQURkO2dCQUVPLEtBQUsyTztPQVhqQixFQWFHNGQsWUFiSCxHQWNHM2IsS0FkSCxDQWNTLGdCQUFRO2VBQ1J3b0IsY0FBTCxDQUFvQmxuQyxNQUFwQjs7T0FmSixDQUZGLEVBcUJFNDFCLE9BQU9rUixTQUFQLEVBQ0cxTSxTQURILEdBRUcxYixLQUZILENBRVM7YUFDQTtxQkFDUSw2QkFEUjttQkFFTTtTQUhOO2tCQUtLO09BUGQsRUFTRzlKLElBVEgsQ0FTUSxLQUFLN0csS0FUYixFQVVHMlEsS0FWSCxDQVVTO2FBQ0E7cUJBQ1EsNEJBRFI7bUJBRU07U0FITjtrQkFLSyxLQUFLNVEsUUFMVjtnQkFNRyxLQUFLMk87T0FoQmpCLEVBa0JHNGQsWUFsQkgsRUFyQkYsRUF5Q0V6RSxPQUFPbVIsU0FBUCxFQUNHcm9CLEtBREgsQ0FDUzthQUNBO3FCQUNRO1NBRlI7a0JBSUs7T0FMZCxFQU9HOUosSUFQSCxDQU9RLEtBQUs3RyxLQVBiLEVBUUcyUSxLQVJILENBUVM7YUFDQTtxQkFDUTtTQUZSO2tCQUlLLEtBQUs1USxRQUpWO2dCQUtHLEtBQUsyTztPQWJqQixFQWVHN0gsSUFmSCxDQWVRLEdBZlIsRUFnQkc4SixLQWhCSCxDQWdCUyxnQkFBUTs7OztPQWhCakIsQ0F6Q0Y7Ozs7RUFuRzREbW9COztBQ3hCaEU7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBaUJBLEFBQ0EsQUFDQSxBQUVBOzs7O0lBR3FCNkM7OzsrQ0FFc0U7bUZBQUosRUFBSTsyQkFBNUVqdEIsTUFBNEU7UUFBNUVBLE1BQTRFLCtCQUFuRSw2QkFBbUU7MEJBQXBDMU8sS0FBb0M7UUFBcENBLEtBQW9DLDhCQUE1QixJQUE0Qjs2QkFBdEJELFFBQXNCO1FBQXRCQSxRQUFzQixpQ0FBWCxHQUFXOzs7O3FLQUNqRixFQUFFMk8sY0FBRixFQUFVMU8sWUFBVixFQUFpQkQsa0JBQWpCLEVBRGlGOztVQUdsRm81QixjQUFMLEdBQXNCeDVCLEtBQUt6USxhQUFMLHNIQUF0Qjs7Ozs7Ozs7Ozs7Ozt5QkFXRzZwQyxXQUFXQyxXQUFXeDhCLFVBQVU7OztXQUM5QjI4QixjQUFMLENBQW9CbG5DLE1BQXBCO2dCQUNVdEksVUFBVixDQUFxQnFHLFlBQXJCLENBQWtDLEtBQUttcEMsY0FBdkMsRUFBdURILFNBQXZEOztVQUVNd0IsdUtBQXNCekIsU0FBdEIsQ0FBTjs7VUFFTWlDLFlBQVluVCxPQUFPLEtBQUtzUixjQUFaLEVBQ2Z0eUIsSUFEZSxDQUNWLEtBQUs3RyxLQUFMLEdBQWEsS0FBS0QsUUFEUixFQUVmNFEsS0FGZSxDQUVULGdCQUFRO2VBQ1J3b0IsY0FBTCxDQUFvQmxuQyxNQUFwQjs7T0FIYyxDQUFsQjs7YUFPT3dmLE1BQVAsQ0FFRXVwQixTQUZGLEVBSUVuVCxPQUFPa1IsU0FBUCxFQUNHMU0sU0FESCxHQUVHMWIsS0FGSCxDQUVTO2FBQ0E7cUJBQ1E7U0FGUjtrQkFJSztPQU5kLEVBUUc5SixJQVJILENBUVEsS0FBSzdHLEtBUmIsRUFTRzJRLEtBVEgsQ0FTUzthQUNBO3FCQUNRO1NBRlI7a0JBSUssS0FBSzVRLFFBSlY7Z0JBS0csS0FBSzJPO09BZGpCLEVBZ0JHNGQsWUFoQkgsR0FpQkczYixLQWpCSCxDQWlCUyxnQkFBUTs7OztPQWpCakIsQ0FKRixFQTJCRWtYLE9BQU9tUixTQUFQLEVBQ0dyb0IsS0FESCxDQUNTO2FBQ0E7bUJBQ007U0FGTjtrQkFJSztPQUxkLEVBT0dBLEtBUEgsQ0FPUzthQUNBO21CQUNNO1NBRk47a0JBSUssS0FBSzVRLFFBSlY7Z0JBS0csS0FBSzJPO09BWmpCLENBM0JGOzs7Ozs7Ozs7Ozt3QkFrREVxcUIsV0FBV0MsV0FBV3g4QixVQUFVOzs7V0FDN0IyOEIsY0FBTCxDQUFvQmxuQyxNQUFwQjtnQkFDVXRJLFVBQVYsQ0FBcUJxRyxZQUFyQixDQUFrQyxLQUFLbXBDLGNBQXZDLEVBQXVESixTQUF2RDs7VUFFTXlCLHVLQUFzQnpCLFNBQXRCLENBQU47O2FBRU90bkIsTUFBUCxDQUVFb1csT0FBTyxLQUFLc1IsY0FBWixFQUNHdHlCLElBREgsQ0FDUSxLQUFLN0csS0FBTCxHQUFhLEtBQUtELFFBRDFCLEVBRUc0USxLQUZILENBRVMsZ0JBQVE7ZUFDUndvQixjQUFMLENBQW9CbG5DLE1BQXBCOztPQUhKLENBRkYsRUFTRTQxQixPQUFPa1IsU0FBUCxFQUNHcG9CLEtBREgsQ0FDUzthQUNBO3FCQUNRLHNCQURSO21CQUVNO1NBSE47a0JBS0s7T0FOZCxFQVFHOUosSUFSSCxDQVFRLEtBQUs3RyxLQVJiLEVBU0cyUSxLQVRILENBU1M7YUFDQTtxQkFDUSxzQkFEUjttQkFFTTtTQUhOO2tCQUtLLEtBQUs1USxRQUxWO2dCQU1HLEtBQUsyTztPQWZqQixFQWlCR2lDLEtBakJILENBaUJTLGdCQUFROzs7O09BakJqQixDQVRGLEVBZ0NFa1gsT0FBT21SLFNBQVAsRUFDR3JvQixLQURILENBQ1M7YUFDQTtxQkFDUTtTQUZSO2tCQUlLO09BTGQsRUFPRzlKLElBUEgsQ0FPUSxLQUFLN0csS0FQYixFQVFHMlEsS0FSSCxDQVFTO2FBQ0E7cUJBQ1E7U0FGUjtrQkFJSyxLQUFLNVEsUUFKVjtnQkFLRyxLQUFLMk87T0FiakIsQ0FoQ0Y7Ozs7RUFyRjJEb3FCOztBQ3hCL0Q7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBaUJBLEFBQ0EsQUFDQSxBQUVBOzs7O0lBR3FCOEM7OzsrQ0FFaUQ7bUZBQUosRUFBSTsyQkFBdkRsdEIsTUFBdUQ7UUFBdkRBLE1BQXVELCtCQUE5QyxVQUE4QzswQkFBbEMxTyxLQUFrQztRQUFsQ0EsS0FBa0MsOEJBQTFCLENBQTBCOzZCQUF2QkQsUUFBdUI7UUFBdkJBLFFBQXVCLGlDQUFaLElBQVk7OztnS0FDNUQsRUFBRTJPLGNBQUYsRUFBVTFPLFlBQVYsRUFBaUJELGtCQUFqQixFQUQ0RDs7Ozs7Ozs7Ozs7O3lCQVMvRGc1QixXQUFXQyxXQUFXeDhCLFVBQVU7VUFDN0JnK0IsdUtBQXNCekIsU0FBdEIsQ0FBTjs7YUFFT3RuQixNQUFQLENBRUVvVyxPQUFPa1IsU0FBUCxFQUNHMU0sU0FESCxHQUVHMWIsS0FGSCxDQUVTO2FBQ0E7cUJBQ1EseUJBRFI7bUJBRU07U0FITjtrQkFLSztPQVBkLEVBU0c5SixJQVRILENBU1EsS0FBSzdHLEtBVGIsRUFVRzJRLEtBVkgsQ0FVUzthQUNBO3FCQUNRLHNCQURSO21CQUVNO1NBSE47a0JBS0ssS0FBSzVRLFFBTFY7Z0JBTUcsS0FBSzJPO09BaEJqQixFQWtCRzRkLFlBbEJILEdBbUJHM2IsS0FuQkgsQ0FtQlMsZ0JBQVE7Ozs7T0FuQmpCLENBRkY7Ozs7Ozs7Ozs7O3dCQW1DRW9vQixXQUFXQyxXQUFXeDhCLFVBQVU7VUFDNUJnK0IsdUtBQXNCekIsU0FBdEIsQ0FBTjs7YUFFT3RuQixNQUFQLENBRUVvVyxPQUFPbVIsU0FBUCxFQUNHcm9CLEtBREgsQ0FDUzthQUNBO3FCQUNRO1NBRlI7a0JBSUs7T0FMZCxFQU9HOUosSUFQSCxDQU9RLElBUFIsRUFRRzhKLEtBUkgsQ0FRUzthQUNBO3FCQUNRO1NBRlI7a0JBSUssS0FBSzVRLFFBSlY7Z0JBS0csS0FBSzJPO09BYmpCLEVBZUdpQyxLQWZILENBZVMsZ0JBQVE7Ozs7T0FmakIsQ0FGRixFQXVCRWtYLE9BQU9tUixTQUFQLEVBQ0dyb0IsS0FESCxDQUNTO2FBQ0E7bUJBQ007U0FGTjtrQkFJSztPQUxkLEVBT0c5SixJQVBILENBT1EsSUFQUixFQVFHOEosS0FSSCxDQVFTO2FBQ0E7bUJBQ007U0FGTjtrQkFJSyxLQUFLNVEsUUFKVjtnQkFLRyxLQUFLMk87T0FiakIsQ0F2QkY7Ozs7RUFwRDJEb3FCOztBQ3hCL0Q7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBaUJBLElBRXFCK0M7OzsyQ0FDUHg4QixPQUFaLEVBQXFCOzs0SkFDYkEsT0FEYTs7Ozs7eUJBR2hCMDVCLFdBQVdDLFdBQVd4OEIsVUFBVTs7Ozs7d0JBSWpDdThCLFdBQVdDLFdBQVd4OEIsVUFBVTs7Ozs7RUFSdUJzOEI7O0FDbkI3RDs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFpQkEsQUFDQSxBQUNBLEFBQ0EsQUFDQSxBQUNBLEFBQ0EsQUFDQSxBQUNBLEFBQ0EsQUFDQSxBQUNBLEFBQ0EsQUFDQSxBQUNBLEFBQ0EsQUFFQSxJQUFNdE0sa0JBQWdCO2FBQ1Q7V0FBTXp6QixTQUFTbUIsU0FBVCxLQUF1QjBoQyxpQ0FBdkIsR0FBMkQxQyxtQ0FBakU7R0FEUztXQUVYO1dBQU1uZ0MsU0FBU21CLFNBQVQsS0FBdUJ1aEMsa0NBQXZCLEdBQTREdkMsbUNBQWxFO0dBRlc7VUFHWjtXQUFNbmdDLFNBQVNtQixTQUFULEtBQXVCeWhDLGlDQUF2QixHQUEyREosa0NBQWpFO0dBSFk7VUFJWjtXQUFNeGlDLFNBQVNtQixTQUFULEtBQXVCMGhDLGlDQUF2QixHQUEyREosa0NBQWpFO0dBSlk7ZUFLUHRDLG1DQUxPO2NBTVJ1QyxrQ0FOUTtjQU9SRixrQ0FQUTthQVFUSSxpQ0FSUztjQVNSSCxrQ0FUUTthQVVUSSxpQ0FWUztVQVdaQztDQVhWOztBQWNBLElBQU1DLGNBQWM7Ozs7O09BQUEsaUJBS1pDLGdCQUxZLEVBS012L0IsUUFMTixFQUtnQjs7O0NBTHBDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFtRXFCdy9COzs7Ozs7Ozs7OzJCQXdHWjtXQUNBQyxVQUFMLEdBQWtCLEtBQWxCO1dBQ0tDLFlBQUwsR0FBb0IsS0FBcEI7V0FDS0MsV0FBTCxHQUFtQjlVLGlCQUFuQjtXQUNLK1UsUUFBTCxHQUFnQixJQUFJdmMsT0FBSixFQUFoQjs7V0FFS2lOLHNCQUFMOzs7Ozs7Ozs7Ozs7O3FDQXFCZTthQUNSLEtBQUt1UCxLQUFMLElBQWMsS0FBSzV4QyxZQUFMLENBQWtCLE1BQWxCLENBQXJCOzs7Ozs7Ozs7Ozs7O3dDQWtCa0I7OztXQUNiZ2pDLGtCQUFMLEdBQTBCLEtBQUs2TyxtQkFBTCxDQUF5Qmx2QyxJQUF6QixDQUE4QixJQUE5QixDQUExQjs7VUFFSSxLQUFLOHVDLFlBQVQsRUFBdUI7Ozs7V0FJbEJBLFlBQUwsR0FBb0IsSUFBcEI7O2tCQUVZcFQsS0FBWixDQUFrQixJQUFsQixFQUF3QixZQUFNO1lBQ3hCLE9BQUsxcUIsS0FBTCxDQUFXMVMsTUFBWCxLQUFzQixDQUF0QixJQUEyQixPQUFLNndDLGNBQUwsRUFBL0IsRUFBc0Q7aUJBQy9DQyxRQUFMLENBQWMsT0FBS0QsY0FBTCxFQUFkLEVBQXFDLEVBQUMvOEIsV0FBVyxNQUFaLEVBQXJDO1NBREYsTUFFTyxJQUFJLE9BQUtwQixLQUFMLENBQVcxUyxNQUFYLEdBQW9CLENBQXhCLEVBQTJCO2VBQzNCLElBQUlzQixJQUFJLENBQWIsRUFBZ0JBLElBQUksT0FBS29SLEtBQUwsQ0FBVzFTLE1BQS9CLEVBQXVDc0IsR0FBdkMsRUFBNEM7Z0JBQ3RDLE9BQUtvUixLQUFMLENBQVdwUixDQUFYLEVBQWNnUSxRQUFkLEtBQTJCLFVBQS9CLEVBQTJDO29CQUNuQyxJQUFJdlEsS0FBSixDQUFVLCtEQUFWLENBQU47Ozs7Y0FJQSxPQUFLcWYsT0FBVCxFQUFrQjt5QkFDSCxPQUFLQSxPQUFsQixFQUEyQjtxQkFDekI3RSxXQUFXLFlBQU07dUJBQ1Y2RSxPQUFMLENBQWEyd0IsS0FBYjt1QkFDS0MseUJBQUw7ZUFGRixFQUdHLENBSEgsQ0FEeUI7YUFBM0I7O1NBUkcsTUFlQTsrQkFDYyxZQUFNO2dCQUNuQixPQUFLdCtCLEtBQUwsQ0FBVzFTLE1BQVgsS0FBc0IsQ0FBdEIsSUFBMkIsT0FBSzZ3QyxjQUFMLEVBQS9CLEVBQXNEO3FCQUMvQ0MsUUFBTCxDQUFjLE9BQUtELGNBQUwsRUFBZCxFQUFxQyxFQUFDLzhCLFdBQVcsTUFBWixFQUFyQzs7V0FGSjs7T0FuQko7Ozs7NkNBNEJ1QjtXQUNsQnV0QixnQkFBTCxHQUF3QixJQUFJdHVCLGVBQUosQ0FBb0I7bUJBQy9CK3RCLGVBRCtCO21CQUUvQnNNLDJCQUYrQjt1QkFHM0IsNkJBSDJCOzBCQUl4QixLQUFLcnVDLFlBQUwsQ0FBa0IsV0FBbEI7T0FKSSxDQUF4Qjs7OzsyQ0FRcUI7V0FDaEJrakMsa0JBQUwsQ0FBd0IvcUIsT0FBeEI7V0FDSytxQixrQkFBTCxHQUEwQixJQUExQjs7Ozs2Q0FPdUJ4MkIsTUFBTWtKLE1BQU1DLFNBQVM7VUFDeENuSixTQUFTLFdBQWIsRUFBMEI7YUFDbkIyMUIsc0JBQUw7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs4QkFvQ2tCOzs7VUFBZHp0QixPQUFjLHVFQUFKLEVBQUk7O2tDQUNQLEtBQUtzOUIsc0JBQUwsQ0FBNEIsSUFBNUIsRUFBa0N0OUIsT0FBbEMsQ0FETzs7YUFBQSx5QkFDbEJBLE9BRGtCOzs7VUFHZHU5QixZQUFZLFNBQVpBLFNBQVk7ZUFBTSxJQUFJaHZDLE9BQUosQ0FBWSxVQUFDNFAsT0FBRCxFQUFhO2lCQUMxQzIrQixXQUFMLENBQWlCVSxNQUFqQixDQUF3QixPQUFLeitCLEtBQUwsQ0FBVyxPQUFLQSxLQUFMLENBQVcxUyxNQUFYLEdBQW9CLENBQS9CLENBQXhCOztTQURzQixDQUFOO09BQWxCOztVQUtJLENBQUMyVCxRQUFRMHhCLE9BQWIsRUFBc0I7ZUFDYixLQUFLK0wsUUFBTCxDQUFjejlCLE9BQWQsRUFBdUJ1OUIsU0FBdkIsQ0FBUDtPQURGLE1BRU87ZUFDRSxLQUFLRyxrQkFBTCxDQUF3QjE5QixPQUF4QixFQUFpQ3U5QixTQUFqQyxDQUFQOzs7Ozt1Q0FJZXY5QixTQUFTdTlCLFdBQVc7OztXQUNoQzdvQyxJQUFMLENBQVUsOEZBQVY7O1VBRU0yTixRQUFRLEtBQUt0RCxLQUFMLENBQVcxUyxNQUFYLEdBQW9CLENBQWxDO1VBQ01zeEMsVUFBVSxLQUFLNStCLEtBQUwsQ0FBV3NELEtBQVgsQ0FBaEI7O1VBRUksQ0FBQyxLQUFLMDZCLFFBQUwsQ0FBYy95QyxHQUFkLENBQWtCMnpDLE9BQWxCLENBQUwsRUFBaUM7Y0FDekIsSUFBSXZ3QyxLQUFKLENBQVUsbUdBQVYsQ0FBTjs7O1VBR0k4USxPQUFPLEtBQUs2K0IsUUFBTCxDQUFjN3ZDLEdBQWQsQ0FBa0J5d0MsT0FBbEIsQ0FBYjs7YUFFTyxJQUFJcHZDLE9BQUosQ0FBWSxtQkFBVztZQUN0QnlSLFVBQVU7Z0JBQ1I5QixJQURRO3dCQUFBO2tCQUdOeS9CLFFBQVFDLGFBQVIsR0FBd0JELFFBQVFDLGFBQVIsQ0FBc0JDLElBQTlDLEdBQXFEO1NBSC9EOztlQU1LZixXQUFMLENBQWlCZ0IsSUFBakIsQ0FBc0I5OUIsT0FBdEIsRUFBK0IsdUJBQWU7aUJBQ3ZDKzhCLFFBQUwsQ0FBY2p4QyxHQUFkLENBQWtCMDdCLFdBQWxCLEVBQStCdHBCLElBQS9COzt3QkFFY29DLEtBQUtDLE1BQUwsQ0FBWWluQixXQUFaLEVBQXlCO2tCQUMvQm1XLFFBQVFFLElBRHVCOzJCQUV0QkYsUUFBUUMsYUFBUixJQUF5QjtXQUY1QixDQUFkOztpQkFLS2p0QyxZQUFMLENBQWtCNjJCLFdBQWxCLEVBQStCbVcsVUFBVUEsT0FBVixHQUFvQixJQUFuRDtpQkFDS2IsV0FBTCxDQUFpQlUsTUFBakIsQ0FBd0JHLE9BQXhCOztTQVRGO09BUEssRUFvQkp6K0IsSUFwQkksQ0FvQkM7ZUFBTSxPQUFLdStCLFFBQUwsQ0FBY3o5QixPQUFkLEVBQXVCdTlCLFNBQXZCLENBQU47T0FwQkQsQ0FBUDs7Ozs2QkF3Qk92OUIsU0FBMkM7OztVQUFsQys5QixNQUFrQyx1RUFBekI7ZUFBTXh2QyxRQUFRNFAsT0FBUixFQUFOO09BQXlCOztVQUM5QyxLQUFLeStCLFVBQVQsRUFBcUI7ZUFDWnJ1QyxRQUFRZSxNQUFSLENBQWUsNkJBQWYsQ0FBUDs7O1VBR0UsS0FBS3lQLEtBQUwsQ0FBVzFTLE1BQVgsSUFBcUIsQ0FBekIsRUFBNEI7ZUFDbkJrQyxRQUFRZSxNQUFSLENBQWUsdUNBQWYsQ0FBUDs7O1VBR0UsS0FBSzB1QyxnQkFBTCxFQUFKLEVBQTZCO2VBQ3BCenZDLFFBQVFlLE1BQVIsQ0FBZSwyQkFBZixDQUFQOzs7VUFHSWpELFNBQVMsS0FBSzBTLEtBQUwsQ0FBVzFTLE1BQTFCOztXQUVLdXdDLFVBQUwsR0FBa0IsSUFBbEI7O1dBRUs3OUIsS0FBTCxDQUFXMVMsU0FBUyxDQUFwQixFQUF1QjR4QyxnQkFBdkIsQ0FBeUM1eEMsU0FBUyxDQUFWLEdBQWUsQ0FBdkQ7O2FBRU8sSUFBSWtDLE9BQUosQ0FBWSxtQkFBVztZQUN0Qm9yQyxZQUFZLE9BQUs1NkIsS0FBTCxDQUFXMVMsU0FBUyxDQUFwQixDQUFsQjtZQUNNcXRDLFlBQVksT0FBSzM2QixLQUFMLENBQVcxUyxTQUFTLENBQXBCLENBQWxCOztnQkFFUThULFNBQVIsR0FBb0JILFFBQVFHLFNBQVIsS0FBc0J3NUIsVUFBVWlFLGFBQVYsR0FBMEJqRSxVQUFVaUUsYUFBVixDQUF3Qno5QixTQUFsRCxHQUE4RG5KLFNBQXBGLENBQXBCO2dCQUNRd0osZ0JBQVIsR0FBMkJGLEtBQUtDLE1BQUwsQ0FDekIsRUFEeUIsRUFFekJvNUIsVUFBVWlFLGFBQVYsR0FBMEJqRSxVQUFVaUUsYUFBVixDQUF3QnA5QixnQkFBbEQsR0FBcUUsRUFGNUMsRUFHekJSLFFBQVFRLGdCQUFSLElBQTRCLEVBSEgsQ0FBM0I7O1lBTUlSLFFBQVE2OUIsSUFBWixFQUFrQjtvQkFDTkEsSUFBVixHQUFpQnY5QixLQUFLQyxNQUFMLENBQVksRUFBWixFQUFnQm01QixVQUFVbUUsSUFBVixJQUFrQixFQUFsQyxFQUFzQzc5QixRQUFRNjlCLElBQVIsSUFBZ0IsRUFBdEQsQ0FBakI7OztZQUdJMWdDLFdBQVcsU0FBWEEsUUFBVyxHQUFNO21CQUNaK0IsSUFBVCxDQUFjLFlBQU07bUJBQ2IwOUIsVUFBTCxHQUFrQixLQUFsQjs7c0JBRVVRLEtBQVY7aUJBQ0t2d0IsbUJBQUwsU0FBK0IsU0FBL0IsRUFBMEMsRUFBQzhzQixvQkFBRCxFQUFZRCxvQkFBWixFQUF1QnovQixpQkFBdkIsRUFBMUM7O2dCQUVJLE9BQU8rRixRQUFRN0MsUUFBZixLQUE0QixVQUFoQyxFQUE0QztzQkFDbENBLFFBQVI7OztvQkFHTXU4QixTQUFSO1dBVkY7U0FERjs7a0JBZVV3RSxLQUFWO1lBQ01oK0IsV0FBVyxPQUFLd3RCLGdCQUFMLENBQXNCckYsV0FBdEIsQ0FBa0Nyb0IsT0FBbEMsQ0FBakI7aUJBQ1MzUyxHQUFULENBQWEsT0FBSzBSLEtBQUwsQ0FBVzFTLFNBQVMsQ0FBcEIsQ0FBYixFQUFxQyxPQUFLMFMsS0FBTCxDQUFXMVMsU0FBUyxDQUFwQixDQUFyQyxFQUE2RDhRLFFBQTdEO09BaENLLEVBaUNKMnVCLEtBakNJLENBaUNFO2VBQU0sT0FBSzhRLFVBQUwsR0FBa0IsS0FBeEI7T0FqQ0YsQ0FBUDs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7NkJBMkVPMStCLE1BQW9COzs7VUFBZDhCLE9BQWMsdUVBQUosRUFBSTs7bUNBQ1IsS0FBS3M5QixzQkFBTCxDQUE0QnAvQixJQUE1QixFQUFrQzhCLE9BQWxDLENBRFE7O1VBQUEsMEJBQ3pCOUIsSUFEeUI7YUFBQSwwQkFDbkI4QixPQURtQjs7O1VBR3JCNnFCLFVBQVUsU0FBVkEsT0FBVSxjQUFlO2VBQ3hCc1Qsa0JBQUwsQ0FBd0IzVyxXQUF4QjtlQUNLdVYsUUFBTCxDQUFjanhDLEdBQWQsQ0FBa0IwN0IsV0FBbEIsRUFBK0J0cEIsSUFBL0I7c0JBQ2NvQyxLQUFLQyxNQUFMLENBQVlpbkIsV0FBWixFQUF5QjtnQkFDL0J4bkIsUUFBUTY5QjtTQURGLENBQWQ7b0JBR1k1NEIsS0FBWixDQUFrQkMsVUFBbEIsR0FBK0IsUUFBL0I7T0FORjs7VUFTSWxGLFFBQVFvK0IsUUFBWixFQUFzQjtlQUNiLEtBQUtDLFNBQUwsQ0FBZXIrQixPQUFmLEVBQXdCO2lCQUFNLElBQUl6UixPQUFKLENBQVksbUJBQVc7OEJBQ3hDdXZDLElBQWxCLENBQXVCLEVBQUM1L0IsTUFBTThCLFFBQVFvK0IsUUFBZixFQUF5QnB6QixjQUF6QixFQUF1Q21FLFFBQVFuUCxRQUFRNjlCLElBQXZELEVBQXZCLEVBQXFGLHVCQUFlO3NCQUMxRnJXLFdBQVI7O2FBREY7V0FEbUMsQ0FBTjtTQUF4QixDQUFQOzs7YUFRSyxLQUFLNlcsU0FBTCxDQUFlcitCLE9BQWYsRUFBd0I7ZUFBTSxJQUFJelIsT0FBSixDQUFZLG1CQUFXO2lCQUNyRHV1QyxXQUFMLENBQWlCZ0IsSUFBakIsQ0FBc0IsRUFBQzUvQixVQUFELEVBQU84TSxjQUFQLEVBQXFCbUUsUUFBUW5QLFFBQVE2OUIsSUFBckMsRUFBdEIsRUFBa0UsdUJBQWU7b0JBQ3ZFclcsV0FBUjs7V0FERjtTQURtQyxDQUFOO09BQXhCLENBQVA7Ozs7Z0NBUXdEOzs7VUFBaER4bkIsT0FBZ0QsdUVBQXRDLEVBQXNDO1VBQWxDKzlCLE1BQWtDLHVFQUF6QjtlQUFNeHZDLFFBQVE0UCxPQUFSLEVBQU47T0FBeUI7O1VBQ3BELEtBQUt5K0IsVUFBVCxFQUFxQjtlQUNacnVDLFFBQVFlLE1BQVIsQ0FBZSw4QkFBZixDQUFQOzs7VUFHRSxLQUFLZ3ZDLGlCQUFMLEVBQUosRUFBOEI7ZUFDckIvdkMsUUFBUWUsTUFBUixDQUFlLDRCQUFmLENBQVA7OztXQUdHc3RDLFVBQUwsR0FBa0IsSUFBbEI7O1VBRU1wOEIsbUJBQW1CcEIsZ0JBQWdCMnVCLDJCQUFoQixDQUE0QyxLQUFLM2lDLFlBQUwsQ0FBa0IsbUJBQWxCLENBQTVDLENBQXpCO2dCQUNVa1YsS0FBS0MsTUFBTCxDQUFZLEVBQVosRUFBZ0IsS0FBS1AsT0FBTCxJQUFnQixFQUFoQyxFQUFvQyxFQUFDUSxrQ0FBRCxFQUFwQyxFQUF3RFIsT0FBeEQsQ0FBVjs7VUFFTUUsV0FBVyxLQUFLd3RCLGdCQUFMLENBQXNCckYsV0FBdEIsQ0FBa0Nyb0IsT0FBbEMsQ0FBakI7O2FBRU8rOUIsU0FBUzcrQixJQUFULENBQWMsWUFBTTtZQUNuQnEvQixhQUFhLE9BQUt4L0IsS0FBTCxDQUFXMVMsTUFBOUI7O1lBRU1xdEMsWUFBYSxPQUFLMzZCLEtBQUwsQ0FBV3cvQixhQUFhLENBQXhCLENBQW5CO1lBQ001RSxZQUFZMzVCLFFBQVEyNUIsU0FBUixJQUFxQixPQUFLNTZCLEtBQUwsQ0FBV3cvQixhQUFhLENBQXhCLENBQXZDOztZQUVJN0UsVUFBVS83QixRQUFWLEtBQXVCLFVBQTNCLEVBQXVDO2dCQUMvQixJQUFJdlEsS0FBSixDQUFVLGlFQUFWLENBQU47OztrQkFHUTZ3QyxnQkFBVixDQUEyQk0sYUFBYSxDQUF4Qzs7a0JBRVVYLGFBQVYsR0FBMEJ0OUIsS0FBS0MsTUFBTCxDQUFZLEVBQVosRUFBZ0JtNUIsVUFBVWtFLGFBQVYsSUFBMkIsRUFBM0MsRUFBK0M1OUIsV0FBVyxFQUExRCxDQUExQjtrQkFDVTY5QixJQUFWLEdBQWlCdjlCLEtBQUtDLE1BQUwsQ0FBWSxFQUFaLEVBQWdCbTVCLFVBQVVtRSxJQUFWLElBQWtCLEVBQWxDLEVBQXNDNzlCLFFBQVE2OUIsSUFBUixJQUFnQixFQUF0RCxDQUFqQjtrQkFDVUwsTUFBVixHQUFtQjlELFVBQVU4RCxNQUFWLElBQW9CeDlCLFFBQVF3OUIsTUFBL0M7O2VBRU8sSUFBSWp2QyxPQUFKLENBQVksbUJBQVc7Y0FDdEJzVSxPQUFPLFNBQVBBLElBQU8sR0FBTTttQkFDWis1QixVQUFMLEdBQWtCLEtBQWxCOzt5QkFFYTtxQkFBTWxELFVBQVUwRCxLQUFWLEVBQU47YUFBYjtpQkFDS3Z3QixtQkFBTCxTQUErQixVQUEvQixFQUEyQyxFQUFDOHNCLG9CQUFELEVBQVlELG9CQUFaLEVBQXVCei9CLGlCQUF2QixFQUEzQzs7Z0JBRUksT0FBTytGLFFBQVE3QyxRQUFmLEtBQTRCLFVBQWhDLEVBQTRDO3NCQUNsQ0EsUUFBUjs7O29CQUdNdThCLFNBQVI7V0FWRjs7b0JBYVV6MEIsS0FBVixDQUFnQkMsVUFBaEIsR0FBNkIsRUFBN0I7Y0FDSXkwQixTQUFKLEVBQWU7c0JBQ0h1RSxLQUFWO3FCQUNTanlDLElBQVQsQ0FBY3l0QyxTQUFkLEVBQXlCQyxTQUF6QixFQUFvQzkyQixJQUFwQztXQUZGLE1BR087OztTQWxCRixDQUFQO09BaEJLLEVBc0NKaXBCLEtBdENJLENBc0NFLFVBQUMzc0IsS0FBRCxFQUFXO2VBQ2J5OUIsVUFBTCxHQUFrQixLQUFsQjtjQUNNejlCLEtBQU47T0F4Q0ssQ0FBUDs7Ozs7Ozs7Ozs7Ozs7OztnQ0FzRFVqQixNQUFvQjs7O1VBQWQ4QixPQUFjLHVFQUFKLEVBQUk7O2FBQ3ZCLEtBQUttOUIsUUFBTCxDQUFjai9CLElBQWQsRUFBb0I4QixPQUFwQixFQUNKZCxJQURJLENBQ0MseUJBQWlCO1lBQ2pCLE9BQUtILEtBQUwsQ0FBVzFTLE1BQVgsR0FBb0IsQ0FBeEIsRUFBMkI7aUJBQ3BCeXdDLFdBQUwsQ0FBaUJVLE1BQWpCLENBQXdCLE9BQUt6K0IsS0FBTCxDQUFXLE9BQUtBLEtBQUwsQ0FBVzFTLE1BQVgsR0FBb0IsQ0FBL0IsQ0FBeEI7O2VBRUdneEMseUJBQUw7O2VBRU85dUMsUUFBUTRQLE9BQVIsQ0FBZ0JxZ0MsYUFBaEIsQ0FBUDtPQVBHLENBQVA7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7K0JBd0JTbjhCLE9BQU9uRSxNQUFvQjs7O1VBQWQ4QixPQUFjLHVFQUFKLEVBQUk7O21DQUNqQixLQUFLczlCLHNCQUFMLENBQTRCcC9CLElBQTVCLEVBQWtDOEIsT0FBbEMsQ0FEaUI7O1VBQUEsMEJBQ2xDOUIsSUFEa0M7YUFBQSwwQkFDNUI4QixPQUQ0Qjs7Y0FFNUIsS0FBS3krQixlQUFMLENBQXFCcDhCLEtBQXJCLENBQVI7O1VBRUlBLFNBQVMsS0FBS3RELEtBQUwsQ0FBVzFTLE1BQXhCLEVBQWdDO2VBQ3ZCLEtBQUs4d0MsUUFBTCxDQUFjai9CLElBQWQsRUFBb0I4QixPQUFwQixDQUFQOzs7YUFHSyxPQUFPQSxRQUFRbytCLFFBQWYsS0FBNEIsUUFBNUIsR0FBdUNwK0IsUUFBUW8rQixRQUEvQyxHQUEwRGxnQyxJQUFqRTtVQUNNMHBCLFNBQVMsT0FBTzVuQixRQUFRbytCLFFBQWYsS0FBNEIsUUFBNUIsR0FBdUNuVyxpQkFBdkMsR0FBMkQsS0FBSzZVLFdBQS9FOzthQUVPLElBQUl2dUMsT0FBSixDQUFZLG1CQUFXO2VBQ3JCdXZDLElBQVAsQ0FBWSxFQUFDNS9CLFVBQUQsRUFBTzhNLGNBQVAsRUFBWixFQUFrQyx1QkFBZTtpQkFDMUNtekIsa0JBQUwsQ0FBd0IzVyxXQUF4QjtpQkFDS3VWLFFBQUwsQ0FBY2p4QyxHQUFkLENBQWtCMDdCLFdBQWxCLEVBQStCdHBCLElBQS9CO3dCQUNjb0MsS0FBS0MsTUFBTCxDQUFZaW5CLFdBQVosRUFBeUI7a0JBQy9CeG5CLFFBQVE2OUIsSUFEdUI7MkJBRXRCNzlCO1dBRkgsQ0FBZDs7a0JBS1FRLGdCQUFSLEdBQTJCRixLQUFLQyxNQUFMLENBQ3pCLEVBRHlCLEVBRXpCbkIsZ0JBQWdCMnVCLDJCQUFoQixDQUE0QyxPQUFLM2lDLFlBQUwsQ0FBa0IsbUJBQWxCLENBQTVDLENBRnlCLEVBR3pCNFUsUUFBUVEsZ0JBQVIsSUFBNEIsRUFISCxDQUEzQjs7aUJBTUs3UCxZQUFMLENBQWtCNjJCLFdBQWxCLEVBQStCLE9BQUt6b0IsS0FBTCxDQUFXc0QsS0FBWCxDQUEvQjtpQkFDS29LLE9BQUwsQ0FBYXd4QixnQkFBYixDQUE4QixJQUE5Qjs7cUJBRVcsWUFBTTswQkFDRCxJQUFkO29CQUNRLE9BQUtsL0IsS0FBTCxDQUFXc0QsS0FBWCxDQUFSO1dBRkYsRUFHRyxPQUFPLEVBSFY7U0FqQkY7T0FESyxDQUFQOzs7Ozs7Ozs7Ozs7Ozs7O2dDQW9DVW5FLE1BQW9COzs7VUFBZDhCLE9BQWMsdUVBQUosRUFBSTs7bUNBQ1gsS0FBS3M5QixzQkFBTCxDQUE0QnAvQixJQUE1QixFQUFrQzhCLE9BQWxDLENBRFc7O1VBQUEsMEJBQzVCOUIsSUFENEI7YUFBQSwwQkFDdEI4QixPQURzQjs7O1VBRzFCLENBQUNBLFFBQVFFLFFBQVQsSUFBcUIsQ0FBQ0YsUUFBUUcsU0FBbEMsRUFBNkM7Z0JBQ25DQSxTQUFSLEdBQW9CLE1BQXBCOzs7VUFHSWhELFdBQVc2QyxRQUFRN0MsUUFBekI7O2NBRVFBLFFBQVIsR0FBbUIsWUFBTTtlQUNoQixRQUFLNEIsS0FBTCxDQUFXMVMsTUFBWCxHQUFvQixDQUEzQixFQUE4QjtrQkFDdkJ5d0MsV0FBTCxDQUFpQlUsTUFBakIsQ0FBd0IsUUFBS3orQixLQUFMLENBQVcsQ0FBWCxDQUF4Qjs7O2dCQUdHQSxLQUFMLENBQVcsQ0FBWCxFQUFjay9CLGdCQUFkLENBQStCLEtBQS9CO29CQUNZOWdDLFVBQVo7T0FORjs7VUFTSSxDQUFDNkMsUUFBUTlCLElBQVQsSUFBaUIsQ0FBQzhCLFFBQVFvK0IsUUFBMUIsSUFBc0MsS0FBS2xCLGNBQUwsRUFBMUMsRUFBaUU7ZUFDeERsOUIsUUFBUTlCLElBQVIsR0FBZSxLQUFLZy9CLGNBQUwsRUFBdEI7OzthQUdLLEtBQUtDLFFBQUwsQ0FBY2ovQixJQUFkLEVBQW9COEIsT0FBcEIsQ0FBUDs7Ozs7Ozs7Ozs7Ozs7Ozs7OztpQ0FnQldrRCxNQUFvQjtVQUFkbEQsT0FBYyx1RUFBSixFQUFJOztVQUMzQixDQUFDLFFBQUQsRUFBVyxRQUFYLEVBQXFCcFMsT0FBckIsUUFBb0NzVixJQUFwQyx5Q0FBb0NBLElBQXBDLE9BQThDLENBQUMsQ0FBbkQsRUFBc0Q7Y0FDOUMsSUFBSTlWLEtBQUosQ0FBVSx1RkFBdUY4VixJQUFqRyxDQUFOOztVQUVJYixRQUFRLE9BQU9hLElBQVAsS0FBZ0IsUUFBaEIsR0FBMkIsS0FBS3U3QixlQUFMLENBQXFCdjdCLElBQXJCLENBQTNCLEdBQXdELEtBQUt3N0IsZ0JBQUwsQ0FBc0J4N0IsSUFBdEIsQ0FBdEU7VUFDTWhGLE9BQU8sS0FBS2EsS0FBTCxDQUFXc0QsS0FBWCxDQUFiOztVQUVJQSxRQUFRLENBQVosRUFBZTtlQUNOLEtBQUs4NkIsUUFBTCxDQUFjajZCLElBQWQsRUFBb0JsRCxPQUFwQixDQUFQOzs7bUNBRVcsS0FBS3M5QixzQkFBTCxDQUE0QnAvQixJQUE1QixFQUFrQzhCLE9BQWxDLENBVmtCOzthQUFBLDBCQVU3QkEsT0FWNkI7OztVQVkzQnFDLFVBQVUsS0FBS3RELEtBQUwsQ0FBVzFTLE1BQVgsR0FBb0IsQ0FBbEMsRUFBcUM7ZUFDNUJrQyxRQUFRNFAsT0FBUixDQUFnQkQsSUFBaEIsQ0FBUDs7VUFFRSxDQUFDQSxJQUFMLEVBQVc7Y0FDSCxJQUFJOVEsS0FBSixDQUFVLHlCQUF5QjhWLElBQW5DLENBQU47O1VBRUUsS0FBSzA1QixVQUFULEVBQXFCO2VBQ1pydUMsUUFBUWUsTUFBUixDQUFlLDhCQUFmLENBQVA7O1VBRUUsS0FBS2d2QyxpQkFBTCxFQUFKLEVBQThCO2VBQ3JCL3ZDLFFBQVFlLE1BQVIsQ0FBZSw0QkFBZixDQUFQOzs7V0FHRzJWLEtBQUwsQ0FBV0MsVUFBWCxHQUF3QixRQUF4QjtXQUNLMVQsWUFBTCxDQUFrQixXQUFsQixFQUErQixFQUEvQjtXQUNLbEgsVUFBTCxDQUFnQm1HLFdBQWhCLENBQTRCeU4sSUFBNUI7YUFDTyxLQUFLbWdDLFNBQUwsQ0FBZXIrQixPQUFmLENBQVA7Ozs7MkNBR3FCOUIsTUFBb0I7VUFBZDhCLE9BQWMsdUVBQUosRUFBSTs7VUFDckMsUUFBT0EsT0FBUCx5Q0FBT0EsT0FBUCxNQUFrQixRQUF0QixFQUFnQztjQUN4QixJQUFJNVMsS0FBSixDQUFVLDZDQUE2QzRTLE9BQXZELENBQU47OztVQUdFLENBQUM5QixTQUFTLElBQVQsSUFBaUJBLFNBQVNsSCxTQUEzQixLQUF5Q2dKLFFBQVE5QixJQUFyRCxFQUEyRDtlQUNsRDhCLFFBQVE5QixJQUFmOzs7Z0JBR1FvQyxLQUFLQyxNQUFMLENBQVksRUFBWixFQUFnQixLQUFLUCxPQUFMLElBQWdCLEVBQWhDLEVBQW9DQSxPQUFwQyxFQUE2QyxFQUFDOUIsVUFBRCxFQUE3QyxDQUFWOzthQUVPLEVBQUNBLFVBQUQsRUFBTzhCLGdCQUFQLEVBQVA7Ozs7Z0RBRzBCO1VBQ3BCcUMsUUFBUSxLQUFLdEQsS0FBTCxDQUFXMVMsTUFBWCxHQUFvQixDQUFsQztVQUNJZ1csU0FBUyxDQUFiLEVBQWdCO2FBQ1R0RCxLQUFMLENBQVdzRCxLQUFYLEVBQWtCNDdCLGdCQUFsQixDQUFtQzU3QixRQUFRLENBQTNDOzs7OztvQ0FJWUEsT0FBTzthQUNkQSxTQUFTLENBQVQsR0FBYUEsS0FBYixHQUFxQmxOLEtBQUtraEIsR0FBTCxDQUFTLEtBQUt0WCxLQUFMLENBQVcxUyxNQUFYLEdBQW9CZ1csS0FBN0IsSUFBc0MsS0FBS3RELEtBQUwsQ0FBVzFTLE1BQTdFOzs7O3dDQUdrQjJnQixPQUFPO1VBQ3JCLEtBQUtqTyxLQUFMLENBQVcxUyxNQUFYLEdBQW9CLENBQXhCLEVBQTJCO2FBQ3BCMmlDLE9BQUw7T0FERixNQUVPO2NBQ0NYLGlCQUFOOzs7OztxQ0FJYXNRLFVBQVU7VUFDckJ0OEIsY0FBSjtXQUNLQSxRQUFRLEtBQUt0RCxLQUFMLENBQVcxUyxNQUFYLEdBQW9CLENBQWpDLEVBQW9DZ1csU0FBUyxDQUE3QyxFQUFnREEsT0FBaEQsRUFBeUQ7WUFDbkQsQ0FBQyxLQUFLMDZCLFFBQUwsQ0FBYy95QyxHQUFkLENBQWtCLEtBQUsrVSxLQUFMLENBQVdzRCxLQUFYLENBQWxCLENBQUwsRUFBMkM7Z0JBQ25DalYsTUFBTSxjQUFOLENBQU47OztZQUdFdXhDLGFBQWEsS0FBSzVCLFFBQUwsQ0FBYzd2QyxHQUFkLENBQWtCLEtBQUs2UixLQUFMLENBQVdzRCxLQUFYLENBQWxCLENBQWpCLEVBQXVEOzs7O2FBSWxEQSxLQUFQOzs7O2tDQUdZdkssTUFBaUI7VUFBWCtsQyxJQUFXLHVFQUFKLEVBQUk7O1VBQ3pCZSxhQUFhLEtBQWpCOztXQUVLL3hCLG1CQUFMLENBQXlCLElBQXpCLEVBQStCLFFBQVEvVSxJQUF2QyxFQUE2Q3dJLEtBQUtDLE1BQUwsQ0FBWTttQkFDNUMsSUFENEM7cUJBRTFDLEtBQUt4QixLQUFMLENBQVcsS0FBS0EsS0FBTCxDQUFXMVMsTUFBWCxHQUFvQixDQUEvQixDQUYwQztnQkFHL0M7aUJBQU11eUMsYUFBYSxJQUFuQjs7T0FIbUMsRUFJMUNmLElBSjBDLENBQTdDOzthQU1PZSxVQUFQOzs7O3dDQUdrQjthQUNYLEtBQUtDLGFBQUwsQ0FBbUIsTUFBbkIsQ0FBUDs7Ozt1Q0FHaUI7VUFDWDMwQyxJQUFJLEtBQUs2VSxLQUFMLENBQVcxUyxNQUFyQjthQUNPLEtBQUt3eUMsYUFBTCxDQUFtQixLQUFuQixFQUEwQjttQkFDcEIsS0FBSzkvQixLQUFMLENBQVc3VSxJQUFJLENBQWYsQ0FEb0I7bUJBRXBCLEtBQUs2VSxLQUFMLENBQVc3VSxJQUFJLENBQWY7T0FGTixDQUFQOzs7Ozs7O3VDQU9pQjQwQyxjQUFjO1VBQ3pCdFgsY0FBY2xuQixLQUFLelEsYUFBTCxDQUFtQjhNLFdBQVNLLGlCQUFULENBQTJCOGhDLFlBQTNCLENBQW5CLENBQXBCO1dBQ0tYLGtCQUFMLENBQXdCM1csV0FBeEI7YUFDT0EsV0FBUDs7Ozs7Ozs7O3VDQU1pQjNsQixTQUFTO1VBQ3RCQSxRQUFRbEUsUUFBUixDQUFpQi9ELFdBQWpCLE9BQW1DLFVBQXZDLEVBQW1EO2NBQzNDLElBQUl4TSxLQUFKLENBQVUsMkRBQVYsQ0FBTjs7Ozs7Ozs7Ozs7Ozs7NEJBeUdJO1VBQ0YsS0FBS3FmLE9BQVQsRUFBa0I7YUFDWEEsT0FBTCxDQUFhMndCLEtBQWI7Ozs7OzRCQUlJO1VBQ0YsS0FBSzN3QixPQUFULEVBQWtCO2FBQ1hBLE9BQUwsQ0FBYXl4QixLQUFiOzs7OzsrQkFJTztXQUNKLElBQUl2d0MsSUFBSSxLQUFLb1IsS0FBTCxDQUFXMVMsTUFBWCxHQUFvQixDQUFqQyxFQUFvQ3NCLEtBQUssQ0FBekMsRUFBNENBLEdBQTVDLEVBQWlEO2FBQzFDbXZDLFdBQUwsQ0FBaUJVLE1BQWpCLENBQXdCLEtBQUt6K0IsS0FBTCxDQUFXcFIsQ0FBWCxDQUF4Qjs7O1dBR0dpRixNQUFMOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozt3QkE3dEJvQjthQUNiLEtBQUs4NkIsZ0JBQVo7Ozs7d0JBbUJlO2FBQ1IsS0FBS29QLFdBQVo7O3NCQUdhaUMsWUFBWTtVQUNyQixFQUFFQSxzQkFBc0JwWCxVQUF4QixDQUFKLEVBQXlDO2NBQ2pDdjZCLE1BQU0sb0RBQU4sQ0FBTjs7V0FFRzB2QyxXQUFMLEdBQW1CaUMsVUFBbkI7Ozs7d0JBY1M7YUFDRixLQUFLL0IsS0FBWjs7c0JBR085K0IsTUFBTTtXQUNSOCtCLEtBQUwsR0FBYTkrQixJQUFiOzs7O3dCQStqQnVCO2FBQ2hCLEtBQUtvd0Isa0JBQVo7O3NCQUdxQm54QixVQUFVO1VBQzNCLEtBQUtteEIsa0JBQVQsRUFBNkI7YUFDdEJBLGtCQUFMLENBQXdCL3FCLE9BQXhCOzs7V0FHRytxQixrQkFBTCxHQUEwQjVGLDJCQUEyQjhGLGFBQTNCLENBQXlDLElBQXpDLEVBQStDcnhCLFFBQS9DLENBQTFCOzs7Ozs7Ozs7Ozs7Ozt3QkFXWTthQUNMLEtBQUs0QixLQUFMLENBQVcsS0FBS0EsS0FBTCxDQUFXMVMsTUFBWCxHQUFvQixDQUEvQixLQUFxQyxJQUE1Qzs7Ozs7Ozs7Ozs7Ozs7d0JBV1U7YUFDSGlVLEtBQUt5TCxTQUFMLENBQWUsS0FBS2hJLFFBQXBCLEVBQ0p6USxNQURJLENBQ0c7ZUFBV3VPLFFBQVFtQyxPQUFSLEtBQW9CLFVBQS9CO09BREgsQ0FBUDs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozt3QkErQ1k7YUFDTCxLQUFLMnFCLFFBQVo7O3NCQUVVbjRCLFFBQVE7V0FDYm00QixRQUFMLEdBQWdCbjRCLE1BQWhCOzs7O3NCQUdhekIsT0FBTztXQUNmdkQsWUFBTCxDQUFrQixhQUFsQixFQUFpQ3VELFFBQVEsTUFBUixHQUFpQixPQUFsRDs7d0JBRWU7YUFDVG9YLEtBQUsxQixLQUFMLENBQVcsS0FBS3JmLFlBQUwsQ0FBa0IsYUFBbEIsQ0FBWCxDQUFQOzs7O3FDQTJCdUIwTSxNQUFNc0ksVUFBVTtVQUNsQyxFQUFFQSxTQUFTM1MsU0FBVCxZQUE4QmdzQywyQkFBaEMsQ0FBSixFQUFrRTtjQUMxRCxJQUFJcnNDLEtBQUosQ0FBVSw0RUFBVixDQUFOOzs7c0JBR1kwSyxJQUFkLElBQXNCc0ksUUFBdEI7Ozs7d0JBcG9COEI7YUFDdkIsQ0FBQyxXQUFELENBQVA7Ozs7d0JBc29CcUI7YUFDZCtzQixlQUFQOzs7O3dCQUd1QzthQUNoQ3NNLDJCQUFQOzs7O3dCQUdrQjthQUNYLENBQUMsU0FBRCxFQUFZLFVBQVosRUFBd0IsUUFBeEIsRUFBa0MsU0FBbEMsQ0FBUDs7Ozt3QkFHdUI7YUFDaEJnRCxXQUFQOzs7O0VBNzFCMEN0UTs7QUFpMkI5QzVpQyxlQUFla0csTUFBZixDQUFzQixlQUF0QixFQUF1Q2t0QyxnQkFBdkM7O0FDcDlCQTs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFpQkEsQUFDQSxBQUNBLEFBQ0EsQUFDQSxBQUNBLEFBRUEsSUFBTWxPLHFCQUFtQixTQUF6Qjs7QUFFQSxJQUFNM3NCLFlBQVM7TUFDVCxZQURTO29CQUVLLGtCQUZMO3NCQUdPLG9CQUhQO3FCQUlNO0NBSnJCOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBNERxQms5Qjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzJCQWlCWjs7O21CQUNRLElBQWIsRUFBbUIsWUFBTTtlQUNsQjNSLFFBQUw7T0FERjs7Ozs2Q0FTdUJ2MUIsTUFBTWtKLE1BQU1DLFNBQVM7Y0FDcENuSixJQUFSO2FBQ08sT0FBTDtjQUNNLENBQUMsS0FBSzZKLFNBQUwsQ0FBZXN0QixRQUFmLENBQXdCUixrQkFBeEIsQ0FBTCxFQUFnRDtpQkFDekNqakIsU0FBTCxHQUFpQmlqQixxQkFBbUIsR0FBbkIsR0FBeUJ4dEIsT0FBMUM7OzthQUdDLFVBQUw7dUJBQ2VzdEIsaUJBQWIsQ0FBK0J2dEIsSUFBL0IsRUFBcUNDLE9BQXJDLEVBQThDLElBQTlDLEVBQW9EYSxTQUFwRDs7Ozs7Ozs7Ozs7a0RBUXdCO2FBQ3JCLEtBQUs4RyxhQUFMLENBQW1CLE9BQW5CLEtBQStCak0sV0FBU0UsV0FBL0M7Ozs7Ozs7OztvREFNOEI7YUFDdkIsS0FBSytMLGFBQUwsQ0FBbUIsU0FBbkIsS0FBaUNqTSxXQUFTRSxXQUFqRDs7Ozs7Ozs7O21EQU02QjthQUN0QixLQUFLK0wsYUFBTCxDQUFtQixRQUFuQixLQUFnQ2pNLFdBQVNFLFdBQWhEOzs7Ozs7Ozs7d0RBTWtDO2FBQzNCLEtBQUsrTCxhQUFMLENBQW1CLHFDQUFuQixLQUE2RGpNLFdBQVNFLFdBQTdFOzs7Ozs7Ozs7dURBTWlDO2FBQzFCLEtBQUsrTCxhQUFMLENBQW1CLG9DQUFuQixLQUE0RGpNLFdBQVNFLFdBQTVFOzs7OytCQUdTO2dCQUNDZ3VCLE9BQVYsQ0FBa0IsSUFBbEI7V0FDS2xwQixTQUFMLENBQWVyVyxHQUFmLENBQW1CbWpDLGtCQUFuQjtXQUNLd1EsMEJBQUw7bUJBQ2FwUixZQUFiLENBQTBCLElBQTFCLEVBQWdDL3JCLFNBQWhDOzs7O2lEQUcyQjtXQUN0QixJQUFJblUsSUFBSSxLQUFLb0csVUFBTCxDQUFnQjFILE1BQWhCLEdBQXlCLENBQXRDLEVBQXlDc0IsS0FBSyxDQUE5QyxFQUFrREEsR0FBbEQsRUFBdUQ7O1lBRWpELEtBQUtvRyxVQUFMLENBQWdCcEcsQ0FBaEIsRUFBbUI3QyxRQUFuQixJQUErQixDQUFuQyxFQUFzQztlQUMvQitGLFdBQUwsQ0FBaUIsS0FBS2tELFVBQUwsQ0FBZ0JwRyxDQUFoQixDQUFqQjs7OztVQUlFMHRCLFNBQVMsS0FBSzZqQixxQkFBTCxDQUEyQixRQUEzQixDQUFmO2FBQ092OUIsU0FBUCxDQUFpQnJXLEdBQWpCLENBQXFCLGdCQUFyQjs7VUFFSSxLQUFLeVksUUFBTCxDQUFjMVgsTUFBZCxLQUF5QixDQUF6QixJQUE4QixDQUFDLEtBQUswWCxRQUFMLENBQWMsQ0FBZCxFQUFpQnBDLFNBQWpCLENBQTJCc3RCLFFBQTNCLENBQW9DLFFBQXBDLENBQW5DLEVBQWtGO1lBQzFFekksT0FBTyxLQUFLMFkscUJBQUwsQ0FBMkIsTUFBM0IsQ0FBYjtZQUNNelksUUFBUSxLQUFLeVkscUJBQUwsQ0FBMkIsT0FBM0IsQ0FBZDs7WUFFSSxLQUFLbjdCLFFBQUwsQ0FBYyxDQUFkLE1BQXFCeWlCLElBQXJCLElBQTZCLEtBQUt6aUIsUUFBTCxDQUFjLENBQWQsTUFBcUJzWCxNQUFsRCxJQUE0RCxLQUFLdFgsUUFBTCxDQUFjLENBQWQsTUFBcUIwaUIsS0FBckYsRUFBNEY7ZUFDckZoMkIsV0FBTCxDQUFpQisxQixJQUFqQjtlQUNLLzFCLFdBQUwsQ0FBaUI0cUIsTUFBakI7ZUFDSzVxQixXQUFMLENBQWlCZzJCLEtBQWpCOzs7Ozs7MENBS2dCM3VCLE1BQU07VUFDdEJ3SSxLQUFLdUUsU0FBTCxDQUFlLElBQWYsRUFBcUIsZUFBZS9NLElBQXBDLENBQUosRUFBK0M7WUFDdkMrSixXQUFVdkIsS0FBS3VFLFNBQUwsQ0FBZSxJQUFmLEVBQXFCLGVBQWUvTSxJQUFwQyxDQUFoQjtpQkFDUTZKLFNBQVIsQ0FBa0JyVyxHQUFsQixDQUFzQndNLElBQXRCO2VBQ08rSixRQUFQOzs7VUFHSUEsVUFBVXZCLEtBQUt1RSxTQUFMLENBQWUsSUFBZixFQUFxQixNQUFNL00sSUFBM0IsS0FBb0N3SSxLQUFLaUwsTUFBTCxDQUFZLE1BQU16VCxJQUFsQixDQUFwRDtjQUNRNkosU0FBUixDQUFrQnJXLEdBQWxCLENBQXNCLGNBQWN3TSxJQUFwQzs7YUFFTytKLE9BQVA7Ozs7d0JBNUY4QjthQUN2QixDQUFDLFVBQUQsRUFBYSxPQUFiLENBQVA7Ozs7RUF4QndDc3FCOztBQXVINUM1aUMsZUFBZWtHLE1BQWYsQ0FBc0IsYUFBdEIsRUFBcUN1dkMsY0FBckM7O0FDN01BOzs7Ozs7Ozs7Ozs7Ozs7OztBQWlCQSxBQUNBLEFBQ0EsQUFDQSxBQUNBLEFBQ0EsQUFDQSxBQUVBLEFBRUEsSUFBTXZRLHFCQUFtQixNQUF6QjtBQUNBLElBQU0zc0IsWUFBUztNQUNULFNBRFM7b0JBRUssa0JBRkw7dUJBR1E7Q0FIdkI7O0FBTUEsSUFBTXE5QixxQkFBcUJ6d0MsU0FBU21CLGFBQVQsQ0FBdUIsYUFBdkIsQ0FBM0I7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFrRXFCdXZDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7MkJBa0RaOzs7V0FDQXo5QixTQUFMLENBQWVyVyxHQUFmLENBQW1CbWpDLGtCQUFuQjtXQUNLb08sWUFBTCxHQUFvQixLQUFwQjs7bUJBRWEsSUFBYixFQUFtQixZQUFNO2VBQ2xCeFAsUUFBTDs7ZUFFS2dTLFFBQUwsR0FBZ0IsS0FBaEI7ZUFDSzF5QixlQUFMLEdBQXVCLE9BQUs2dEIsa0JBQUwsRUFBdkI7ZUFDSzhFLFFBQUwsR0FBZ0IsT0FBS2w5QixZQUFMLENBQWtCLFFBQWxCLENBQWhCO2VBQ0ttOUIsU0FBTCxHQUFpQixPQUFLbjlCLFlBQUwsQ0FBa0IsV0FBbEIsQ0FBakI7T0FORjs7Ozt3Q0FVa0I7OztVQUNkLEtBQUt5NkIsWUFBVCxFQUF1Qjs7OztXQUlsQkEsWUFBTCxHQUFvQixJQUFwQjs7bUJBRWEsSUFBYixFQUFtQixZQUFNO1lBQ25CLENBQUMsT0FBS3lDLFFBQVYsRUFBb0I7Y0FDZCxPQUFLQyxTQUFULEVBQW9CO21CQUNiN3RDLGVBQUwsQ0FBcUIsV0FBckI7V0FERixNQUVPO3lCQUNRO3FCQUFNNE8sS0FBS3VNLG1CQUFMLFNBQStCLE1BQS9CLENBQU47YUFBYjs7OztZQUlBLENBQUN2TSxLQUFLNkssdUJBQUwsUUFBTCxFQUF5Qzt1QkFDMUI7bUJBQU0sT0FBS2l5QixLQUFMLEVBQU47V0FBYjs7O2VBR0dvQyxtQkFBTDs7WUFFSSxPQUFLcDlCLFlBQUwsQ0FBa0Isb0JBQWxCLENBQUosRUFBNkM7aUJBQ3RDN1Usd0JBQUwsQ0FBOEIsb0JBQTlCLEVBQW9ELElBQXBELEVBQTBELE9BQUtuQyxZQUFMLENBQWtCLG9CQUFsQixDQUExRDs7T0FoQko7Ozs7cUNBcUJldzNCLE1BQU07VUFDakIsS0FBSzZjLFVBQVQsRUFBcUI7ZUFDWixLQUFLQSxVQUFMLENBQWdCN2MsSUFBaEIsRUFBUCxHQUFnQyxLQUFLNmMsVUFBTCxDQUFnQmpvQyxJQUFoQixFQUFoQzs7Ozs7MENBZ0JpQjs7O2lCQUNWdUYsaUJBQVQsQ0FBMkIsWUFBTTtZQUN6QjJpQyxTQUFTcC9CLEtBQUtzRSxVQUFMLFNBQXNCO2lCQUFLaGEsRUFBRXdYLFlBQUYsQ0FBZSxpQkFBZixDQUFMO1NBQXRCLENBQWY7YUFDSzRMLGVBQUwsU0FBMkIsaUJBQTNCLEVBQThDLENBQUMweEIsTUFBRCxLQUFZLE9BQUs5RSxrQkFBTCxNQUE2QixDQUFDLE9BQUsrRSxxQkFBTCxFQUExQyxDQUE5QztPQUZGOzs7OzRDQU1zQjthQUNmci9CLEtBQUt1RSxTQUFMLENBQWUsS0FBSzhILGVBQXBCLEVBQXFDO2VBQUsvaEIsRUFBRStTLFFBQUYsQ0FBV2hELEtBQVgsQ0FBaUIsK0NBQWpCLENBQUw7T0FBckMsQ0FBUDs7Ozs7Ozs7Ozs7O2dDQThCVTs7O1VBQ0o5UCxJQUFJLEtBQUs4aEIsZUFBZjtVQUNFaXpCLFlBQVksQ0FBQy8wQyxFQUFFdVosU0FBRixHQUFjdlosRUFBRWlyQyxZQUFqQixJQUFpQ2pyQyxFQUFFZzFDLFlBQW5DLElBQW1ELEtBQUtDLG9CQUR0RTs7VUFHSSxLQUFLQyxpQkFBTCxJQUEwQixDQUFDLEtBQUtDLGVBQWhDLElBQW1ESixTQUF2RCxFQUFrRTthQUMzREksZUFBTCxHQUF1QixJQUF2QjthQUNLRCxpQkFBTCxDQUF1QjtpQkFBTSxPQUFLQyxlQUFMLEdBQXVCLEtBQTdCO1NBQXZCOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O3lDQTJCaUI7VUFDYm4vQixTQUFTUCxLQUFLdUUsU0FBTCxDQUFlLElBQWYsRUFBcUIsZ0JBQXJCLENBQWY7VUFDSWhFLE1BQUosRUFBWTtlQUNIQSxNQUFQOztZQUVJelQsTUFBTSx1Q0FBTixDQUFOOzs7Ozs7Ozs7eUNBTW1CO1VBQ2ZrVCxLQUFLdUUsU0FBTCxDQUFlLElBQWYsRUFBcUIsYUFBckIsQ0FBSixFQUF5QztlQUNoQyxJQUFQOzthQUVLLENBQUMsQ0FBQ3ZFLEtBQUt1RSxTQUFMLENBQWUsS0FBSzhILGVBQXBCLEVBQXFDLGNBQU07ZUFDM0NyTSxLQUFLM0YsS0FBTCxDQUFXMlIsRUFBWCxFQUFlLGFBQWYsS0FBaUMsQ0FBQ0EsR0FBR2xLLFlBQUgsQ0FBZ0IsUUFBaEIsQ0FBekM7T0FETyxDQUFUOzs7Ozs7Ozs7NENBUXNCO1VBQ2hCdkIsU0FBU1AsS0FBS3VFLFNBQUwsQ0FBZSxJQUFmLEVBQXFCLG1CQUFyQixDQUFmO1VBQ0loRSxNQUFKLEVBQVk7ZUFDSEEsTUFBUDs7WUFFSXpULE1BQU0sMENBQU4sQ0FBTjs7Ozs7Ozs7OytDQU15QjthQUNsQmtULEtBQUt1RSxTQUFMLENBQWUsSUFBZixFQUFxQixvQkFBckIsS0FBOENsSSxXQUFTRSxXQUE5RDs7Ozs7Ozs7O3lDQU9tQjthQUNaeUQsS0FBS3VFLFNBQUwsQ0FBZSxJQUFmLEVBQXFCLGFBQXJCLEtBQXVDczZCLGtCQUE5Qzs7Ozs2Q0FPdUJybkMsTUFBTWtKLE1BQU1DLFNBQVM7OztjQUNwQ25KLElBQVI7YUFDTyxPQUFMO2NBQ00sQ0FBQyxLQUFLNkosU0FBTCxDQUFlc3RCLFFBQWYsQ0FBd0JSLGtCQUF4QixDQUFMLEVBQWdEO2lCQUN6Q2pqQixTQUFMLEdBQWlCaWpCLHFCQUFtQixHQUFuQixHQUF5Qnh0QixPQUExQzs7O2FBR0MsVUFBTDt1QkFDZXN0QixpQkFBYixDQUErQnZ0QixJQUEvQixFQUFxQ0MsT0FBckMsRUFBOEMsSUFBOUMsRUFBb0RhLFNBQXBEOzthQUVHLFFBQUw7ZUFDT3c5QixRQUFMLEdBQWdCLEtBQUtsOUIsWUFBTCxDQUFrQixRQUFsQixDQUFoQjs7YUFFRyxXQUFMO2VBQ09tOUIsU0FBTCxHQUFpQixLQUFLbjlCLFlBQUwsQ0FBa0IsV0FBbEIsQ0FBakI7O2FBRUcsb0JBQUw7Y0FDTW5CLFlBQVksSUFBaEIsRUFBc0I7aUJBQ2ZnL0IsZ0JBQUwsR0FBd0IsSUFBeEI7V0FERixNQUVPO2lCQUNBQSxnQkFBTCxHQUF3QixVQUFDcDlCLElBQUQsRUFBVTtrQkFDMUJqWCxJQUFJMFUsS0FBSzhMLFlBQUwsQ0FBa0JuTCxPQUFsQixDQUFWO3FCQUNLZy9CLGdCQUFMLEdBQXdCcjBDLENBQXhCO2dCQUNFaVgsSUFBRjthQUhGOzs7Ozs7OytCQVVHOzs7Z0JBQ0Nnb0IsT0FBVixDQUFrQixJQUFsQjs7VUFFSXZxQixLQUFLdUUsU0FBTCxDQUFlLElBQWYsRUFBcUIsVUFBckIsQ0FBSixFQUFzQzthQUMvQkEsU0FBTCxDQUFlLElBQWYsRUFBcUIsVUFBckIsRUFBaUNsRCxTQUFqQyxDQUEyQ3JXLEdBQTNDLENBQStDLGVBQS9DOzs7VUFHRWdWLEtBQUt1RSxTQUFMLENBQWUsSUFBZixFQUFxQixhQUFyQixDQUFKLEVBQXlDO2FBQ2xDQSxTQUFMLENBQWUsSUFBZixFQUFxQixhQUFyQixFQUFvQ2xELFNBQXBDLENBQThDclcsR0FBOUMsQ0FBa0Qsa0JBQWxEOzs7VUFHRSxDQUFDZ1YsS0FBS3VFLFNBQUwsQ0FBZSxJQUFmLEVBQXFCLGdCQUFyQixDQUFMLEVBQTZDO1lBQ3JDalEsVUFBVTBMLEtBQUtpTCxNQUFMLENBQVksZ0JBQVosQ0FBaEI7O2FBRUtRLFNBQUwsQ0FBZSxLQUFLaFksVUFBcEIsRUFBZ0MwTixPQUFoQyxDQUF3QyxnQkFBUTtjQUMxQ3NKLEtBQUtqZ0IsUUFBTCxLQUFrQixDQUFsQixJQUF1QixPQUFLbzFDLHFCQUFMLENBQTJCbjFCLElBQTNCLENBQTNCLEVBQTZEO29CQUNuRHRhLFdBQVIsQ0FBb0JzYSxJQUFwQjs7U0FGSjs7WUFNTW8xQixXQUFXNy9CLEtBQUt1RSxTQUFMLENBQWUsSUFBZixFQUFxQixtQkFBckIsS0FBNkN2RSxLQUFLdUUsU0FBTCxDQUFlLElBQWYsRUFBcUIsYUFBckIsQ0FBOUQ7O2FBRUtsVSxZQUFMLENBQWtCaUUsT0FBbEIsRUFBMkJ1ckMsWUFBWUEsU0FBU3oxQyxXQUFoRDs7O1VBR0UsQ0FBQzRWLEtBQUt1RSxTQUFMLENBQWUsSUFBZixFQUFxQixtQkFBckIsQ0FBTCxFQUFnRDtZQUN4Q20zQixhQUFhMTdCLEtBQUtpTCxNQUFMLENBQVksbUJBQVosQ0FBbkI7YUFDSzVhLFlBQUwsQ0FBa0JxckMsVUFBbEIsRUFBOEIxN0IsS0FBS3VFLFNBQUwsQ0FBZSxJQUFmLEVBQXFCLGdCQUFyQixDQUE5Qjs7O21CQUdXZ3BCLFlBQWIsQ0FBMEIsSUFBMUIsRUFBZ0MvckIsU0FBaEM7Ozs7MENBR29Cd0ssSUFBSTtVQUNwQkEsR0FBRzNLLFNBQUgsQ0FBYXN0QixRQUFiLENBQXNCLGtCQUF0QixDQUFKLEVBQStDO2VBQ3RDLEtBQVA7O1VBRUlqckIsVUFBVXNJLEdBQUd0SSxPQUFILENBQVdwSyxXQUFYLEVBQWhCO1VBQ0lvSyxZQUFZLFNBQWhCLEVBQTJCO2VBQ2xCLENBQUNzSSxHQUFHbEssWUFBSCxDQUFnQixVQUFoQixDQUFSOztVQUVJZytCLGdCQUFnQixDQUFDLGFBQUQsRUFBZ0Isb0JBQWhCLEVBQXNDLFdBQXRDLEVBQW1ELGdCQUFuRCxFQUFxRSxZQUFyRSxFQUFtRixrQkFBbkYsRUFBdUcsYUFBdkcsQ0FBdEI7YUFDTzl6QixHQUFHbEssWUFBSCxDQUFnQixRQUFoQixLQUE2QmcrQixjQUFjeHlDLE9BQWQsQ0FBc0JvVyxPQUF0QixNQUFtQyxDQUFDLENBQXhFOzs7OzRCQUdNO1VBQ0YsQ0FBQyxLQUFLcTdCLFFBQU4sSUFBa0IvK0IsS0FBSzJLLFVBQUwsQ0FBZ0IsSUFBaEIsQ0FBdEIsRUFBNkM7YUFDdENvMEIsUUFBTCxHQUFnQixJQUFoQjs7WUFFSSxDQUFDLEtBQUtDLFFBQVYsRUFBb0I7ZUFDYnp5QixtQkFBTCxDQUF5QixJQUF6QixFQUErQixNQUEvQjs7O2FBR0d6QixlQUFMLENBQXFCLElBQXJCLEVBQTJCLE9BQTNCOzs7Ozs0QkFJSTtVQUNGLEtBQUtpMEIsUUFBVCxFQUFtQjthQUNaQSxRQUFMLEdBQWdCLEtBQWhCOztZQUVJLENBQUMsS0FBS0MsUUFBVixFQUFvQjtlQUNienlCLG1CQUFMLENBQXlCLElBQXpCLEVBQStCLE1BQS9COzs7YUFHR3pCLGVBQUwsQ0FBcUIsSUFBckIsRUFBMkIsT0FBM0I7Ozs7OytCQUlPO1dBQ0o4eUIsS0FBTDs7VUFFSSxDQUFDLEtBQUtvQixRQUFWLEVBQW9CO2FBQ2J6eUIsbUJBQUwsQ0FBeUIsSUFBekIsRUFBK0IsU0FBL0I7OztVQUdFLEtBQUt1aEIsa0JBQVQsRUFBNkI7YUFDdEJBLGtCQUFMLENBQXdCN3FCLE9BQXhCOzs7V0FHRzZILGVBQUwsQ0FBcUIsSUFBckIsRUFBMkIsVUFBM0I7O1dBRUt4WSxNQUFMOzs7O3NCQXJQT3FjLEtBQUs7V0FDUHpkLFlBQUwsQ0FBa0IsTUFBbEIsRUFBMEJ5ZCxHQUExQjs7d0JBR1M7YUFDRixLQUFLN2pCLFlBQUwsQ0FBa0IsTUFBbEIsQ0FBUDs7Ozt3QkFHZTthQUNSLEtBQUt3ZCxhQUFMLENBQW1CLGlCQUFuQixDQUFQOzs7O3NCQW9CbUI3VCxPQUFPOzs7VUFDdEJBLFVBQVUsSUFBZCxFQUFvQjthQUNiZ3JDLGlCQUFMLEdBQXlCLElBQXpCO2FBQ0twekIsZUFBTCxDQUFxQnJQLG1CQUFyQixDQUF5QyxRQUF6QyxFQUFtRCxLQUFLK2lDLGNBQXhEOzs7VUFHRSxFQUFFdHJDLGlCQUFpQnBHLFFBQW5CLENBQUosRUFBa0M7Y0FDMUIsSUFBSXZCLEtBQUosQ0FBVSw2Q0FBVixDQUFOOztVQUVFLENBQUMsS0FBSzJ5QyxpQkFBVixFQUE2QjthQUN0QkQsb0JBQUwsR0FBNEIsR0FBNUI7YUFDS08sY0FBTCxHQUFzQixLQUFLQyxTQUFMLENBQWV2eUMsSUFBZixDQUFvQixJQUFwQixDQUF0QjtxQkFDYTtpQkFBTSxPQUFLNGUsZUFBTCxDQUFxQjVmLGdCQUFyQixDQUFzQyxRQUF0QyxFQUFnRCxPQUFLc3pDLGNBQXJELENBQU47U0FBYjs7V0FFR04saUJBQUwsR0FBeUJockMsS0FBekI7O3dCQUdxQjthQUNkLEtBQUtnckMsaUJBQVo7Ozs7d0JBcUJ1QjthQUNoQixLQUFLelIsa0JBQVo7O3NCQUdxQm54QixVQUFVO1VBQzNCLEtBQUtteEIsa0JBQVQsRUFBNkI7YUFDdEJBLGtCQUFMLENBQXdCL3FCLE9BQXhCOzs7V0FHRytxQixrQkFBTCxHQUEwQjVGLDJCQUEyQjhGLGFBQTNCLENBQXlDLElBQXpDLEVBQStDcnhCLFFBQS9DLENBQTFCOzs7O3dCQW9EOEI7YUFDdkIsQ0FBQyxVQUFELEVBQWEsUUFBYixFQUF1QixXQUF2QixFQUFvQyxvQkFBcEMsRUFBMEQsT0FBMUQsQ0FBUDs7Ozt3QkFzSGtCO2FBQ1gsQ0FBQyxNQUFELEVBQVMsTUFBVCxFQUFpQixNQUFqQixFQUF5QixTQUF6QixDQUFQOzs7Ozs7Ozs7Ozs7O0VBM1ZxQ2d2Qjs7QUF1V3pDNWlDLGVBQWVrRyxNQUFmLENBQXNCLFVBQXRCLEVBQWtDMnZDLFdBQWxDOztBQzNjQTs7Ozs7Ozs7Ozs7Ozs7OztBQWdCQSxBQUNBLEFBQ0EsQUFFQSxJQUFhbUIsZUFBYjs7Ozs7Ozs7OzZCQVF3RjttRkFBSixFQUFJOzJCQUF6RWx4QixNQUF5RTtRQUF6RUEsTUFBeUUsK0JBQWhFLDZCQUFnRTswQkFBakMxTyxLQUFpQztRQUFqQ0EsS0FBaUMsOEJBQXpCLENBQXlCOzZCQUF0QkQsUUFBc0I7UUFBdEJBLFFBQXNCLGlDQUFYLEdBQVc7Ozs0SEFDOUUsRUFBRTJPLGNBQUYsRUFBVTFPLFlBQVYsRUFBaUJELGtCQUFqQixFQUQ4RTs7Ozs7eUJBSWpGdXFCLE9BWlAsRUFZZ0I5dEIsUUFaaEIsRUFZMEI7Ozs7O3lCQUluQjh0QixPQWhCUCxFQWdCZ0I5dEIsUUFoQmhCLEVBZ0IwQjs7Ozs7NkJBSWYwRSxPQXBCWCxTQW9CK0U7VUFBMUQyK0IsSUFBMEQsU0FBMURBLElBQTBEO1VBQXBEQyxFQUFvRCxTQUFwREEsRUFBb0Q7VUFBaER6Z0MsT0FBZ0QsU0FBaERBLE9BQWdEO1VBQXZDN0MsUUFBdUMsU0FBdkNBLFFBQXVDO2dDQUE3QnVqQyxPQUE2QjtVQUE3QkEsT0FBNkIsaUNBQW5CLEtBQW1CO1VBQVp2Z0MsU0FBWSxTQUFaQSxTQUFZOztnQkFDakVHLEtBQUtDLE1BQUwsQ0FBWSxFQUFaLEVBQWdCLEtBQUtQLE9BQXJCLEVBQThCQSxPQUE5QixDQUFWOztVQUVJRyxTQUFKLEVBQWU7ZUFDTkEsVUFBVXFnQyxJQUFqQjthQUNLcmdDLFVBQVVzZ0MsRUFBZjs7O2tCQUdValksT0FBTzNtQixPQUFQLENBQVo7VUFDSTYrQixPQUFKLEVBQWE7b0JBQ0N2Z0MsVUFBVTZzQixTQUFWLEVBQVo7O2tCQUVVN3NCLFVBQVVtUixLQUFWLENBQWdCa3ZCLElBQWhCLEVBQXNCaDVCLElBQXRCLENBQTJCLEtBQUs3RyxLQUFoQyxFQUF1QzJRLEtBQXZDLENBQTZDO2FBQ2xEbXZCLEVBRGtEO2tCQUU3QyxLQUFLLy9CLFFBRndDO2dCQUcvQyxLQUFLMk87T0FISCxDQUFaO1VBS0lxeEIsT0FBSixFQUFhO29CQUNDdmdDLFVBQVU4c0IsWUFBVixFQUFaOztVQUVFOXZCLFFBQUosRUFBYztvQkFDQWdELFVBQVVtUixLQUFWLENBQWdCLFVBQUN6TyxJQUFELEVBQVU7OztTQUExQixDQUFaOzthQUtLMUMsU0FBUDs7OztnQ0FHVTBCLE9BakRkLEVBaUR1QjgrQixVQWpEdkIsRUFpRG1DOzs7YUFDeEJ2L0IsSUFBUCxDQUFZdS9CLFVBQVosRUFBd0JsL0IsT0FBeEIsQ0FBZ0M7ZUFBTyxPQUFLbS9CLFFBQUwsQ0FBYy8rQixRQUFRcEwsR0FBUixDQUFkLEVBQTRCa3FDLFdBQVdscUMsR0FBWCxDQUE1QixFQUE2QzRiLElBQTdDLEVBQVA7T0FBaEM7Ozs7RUFsRGlDNlYsWUFBckM7O0FBdURBLElBQU0yWSxTQUFPO09BQ047VUFDRyxFQUFDNVMsU0FBUyxHQUFWLEVBREg7UUFFQyxFQUFDQSxTQUFTLENBQVY7R0FISztNQUtQO1VBQ0ksRUFBQ0EsU0FBUyxDQUFWLEVBREo7UUFFRSxFQUFDQSxTQUFTLEdBQVY7O0NBUFI7O0FBV0EsSUFBYTZTLHFCQUFiOzs7Ozs7Ozs7O3lCQUNPN1YsT0FEUCxFQUNnQjl0QixRQURoQixFQUMwQjtXQUNqQjRqQyxXQUFMLENBQWlCOVYsT0FBakIsRUFBMEI7ZUFDakI0VixPQUFLRyxFQURZO2tCQUVkLEVBQUM3Z0MsV0FBVzBnQyxPQUFLRyxFQUFqQixFQUFxQk4sU0FBUyxJQUE5QixFQUFvQ3ZqQyxrQkFBcEM7T0FGWjs7Ozt5QkFNRzh0QixPQVJQLEVBUWdCOXRCLFFBUmhCLEVBUTBCO1dBQ2pCNGpDLFdBQUwsQ0FBaUI5VixPQUFqQixFQUEwQjtlQUNqQjRWLE9BQUtwb0MsR0FEWTtrQkFFZCxFQUFDMEgsV0FBVzBnQyxPQUFLcG9DLEdBQWpCLEVBQXNCaW9DLFNBQVMsSUFBL0IsRUFBcUN2akMsa0JBQXJDO09BRlo7Ozs7RUFUdUNvakMsZUFBM0M7O0FBZ0JBLElBQWFVLHNCQUFiOzs7Ozs7Ozs7O3lCQUNPaFcsT0FEUCxFQUNnQjl0QixRQURoQixFQUMwQjtXQUNqQjRqQyxXQUFMLENBQWlCOVYsT0FBakIsRUFBMEI7ZUFDakI0VixPQUFLRyxFQURZO2tCQUVkO2dCQUNGO3VCQUNPLHdCQURQO3FCQUVLO1dBSEg7Y0FLSjt1QkFDUyx5QkFEVDtxQkFFTztXQVBIO21CQVNDLElBVEQ7OztPQUZaOzs7O0VBRndDRixxQkFBNUM7O0FDdEdBOzs7Ozs7Ozs7Ozs7Ozs7OztBQWlCQSxBQUNBLEFBQ0EsQUFDQSxBQUNBLEFBQ0EsQUFDQSxBQUNBLEFBQ0EsQUFDQSxBQUVBLElBQU1oL0IsWUFBUztjQUNELFlBREM7bUJBRUksaUJBRko7dUJBR1EscUJBSFI7cUJBSU07Q0FKckI7O0FBT0EsSUFBTXFyQixrQkFBZ0I7YUFDVDtXQUFNenpCLFNBQVNtQixTQUFULEtBQXVCaW1DLHFCQUF2QixHQUErQ0csc0JBQXJEO0dBRFM7VUFFWlYsZUFGWTtjQUdSVSxzQkFIUTthQUlUSDtDQUpiOztBQU9BLElBQU1JLGlCQUFpQjVnQyxLQUFLb0wsY0FBTCwrSkFBdkI7O0FBUUEsSUFBTXkxQixZQUFZO01BQ1osUUFEWTtRQUVWLE9BRlU7UUFHVixLQUhVO1NBSVQ7Q0FKVDs7QUFPQSxBQUNBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztJQWtDcUJDOzs7Ozs7Ozs7OzJCQWlJWjs7O21CQUNRLElBQWIsRUFBbUIsWUFBTTtlQUNsQi9ULFFBQUw7ZUFDS2dVLG9CQUFMO2VBQ0twOEIsS0FBTCxDQUFXb2hCLE9BQVgsR0FBcUIsTUFBckI7T0FIRjs7V0FNS2lILFNBQUwsR0FBaUIsSUFBSXhHLFFBQUosRUFBakI7V0FDSy9lLGNBQUwsR0FBc0IsS0FBS3JELFNBQUwsQ0FBZTNXLElBQWYsQ0FBb0IsSUFBcEIsQ0FBdEI7V0FDS3cvQixZQUFMLEdBQW9CO2VBQU0sT0FBS0MsT0FBTCxFQUFOO09BQXBCOzs7OzJDQUdxQjtVQUNmOFQsVUFBVSxJQUFJbGlDLGVBQUosQ0FBb0I7bUJBQ3ZCK3RCLGVBRHVCO21CQUV2Qm9ULGVBRnVCO3VCQUduQixpQkFIbUI7MEJBSWhCLEtBQUtuMUMsWUFBTCxDQUFrQixXQUFsQixLQUFrQztPQUp0QyxDQUFoQjtXQU1LbTJDLFNBQUwsR0FBaUIsVUFBQ3ZoQyxPQUFEO2VBQWFzaEMsUUFBUWpaLFdBQVIsQ0FBb0Jyb0IsT0FBcEIsQ0FBYjtPQUFqQjs7OztxQ0FHZTNILFFBQVE7VUFDUG1wQyxNQURPLEdBQzhDLElBRDlDLENBQ2hCQyxPQURnQjtVQUNXNVYsY0FEWCxHQUM4QyxJQUQ5QyxDQUNDNlYsUUFERDtVQUNvQ0MsTUFEcEMsR0FDOEMsSUFEOUMsQ0FDMkJDLE9BRDNCOztVQUVqQkMsYUFBYXhwQyxPQUFPZ08scUJBQVAsRUFBbkI7VUFDTXk3QixPQUFPeGhDLEtBQUs2TSxXQUFMLENBQWlCLElBQWpCLEVBQXVCLFVBQXZCLENBQWI7VUFDTTQwQixRQUFRRCxRQUFRLEtBQUsxL0IsWUFBTCxDQUFrQixjQUFsQixDQUF0Qjs7VUFFTTQvQixpQkFBaUI7YUFDaEJILFdBQVd2N0IsR0FBWCxHQUFpQnE3QixNQUREO2NBRWZFLFdBQVdyYixJQUFYLEdBQWtCbWIsTUFGSDtlQUdkcjRDLE9BQU9xNkIsVUFBUCxHQUFvQmtlLFdBQVdwYixLQUEvQixHQUF1Q2tiLE1BSHpCO2dCQUlicjRDLE9BQU9rZCxXQUFQLEdBQXFCcTdCLFdBQVdJLE1BQWhDLEdBQXlDTjtPQUpuRDs7VUFPTU8sMkJBQTJCO2FBQzFCTCxXQUFXdjdCLEdBQVgsR0FBaUJuUixLQUFLNDhCLEtBQUwsQ0FBVzhQLFdBQVd4K0IsTUFBWCxHQUFvQixDQUEvQixDQURTO2dCQUV2Qi9aLE9BQU9rZCxXQUFQLEdBQXFCcTdCLFdBQVdJLE1BQWhDLEdBQXlDOXNDLEtBQUs0OEIsS0FBTCxDQUFXOFAsV0FBV3grQixNQUFYLEdBQW9CLENBQS9CLENBRmxCO2NBR3pCdytCLFdBQVdyYixJQUFYLEdBQWtCcnhCLEtBQUs0OEIsS0FBTCxDQUFXOFAsV0FBV3ZTLEtBQVgsR0FBbUIsQ0FBOUIsQ0FITztlQUl4QmhtQyxPQUFPcTZCLFVBQVAsR0FBb0JrZSxXQUFXcGIsS0FBL0IsR0FBdUN0eEIsS0FBSzQ4QixLQUFMLENBQVc4UCxXQUFXdlMsS0FBWCxHQUFtQixDQUE5QjtPQUpoRDs7a0NBT3lELEtBQUs2UyxvQkFBTCxDQUEwQkgsY0FBMUIsQ0FwQmxDO1VBb0JoQkksUUFwQmdCLHlCQW9CaEJBLFFBcEJnQjtVQW9CR0MsZ0JBcEJILHlCQW9CTkMsT0FwQk07VUFvQnFCQyxTQXBCckIseUJBb0JxQkEsU0FwQnJCOzttQkFxQlZ4NUIsV0FBYixDQUF5QixJQUF6QixFQUErQnM1QixnQkFBL0I7O1VBRU1HLFdBQVdKLFdBQVcsT0FBWCxHQUFxQixRQUF0Qzs7VUFFTUssY0FBZTtlQUFVO2lCQUN0QmhvQyxTQUFTd0ssTUFBTTZJLGdCQUFOLENBQXVCLE9BQXZCLENBQVQsRUFBMEMsRUFBMUMsQ0FEc0I7a0JBRXJCclQsU0FBU3dLLE1BQU02SSxnQkFBTixDQUF1QixRQUF2QixDQUFULEVBQTJDLEVBQTNDO1NBRlc7T0FBRCxDQUdoQnhrQixPQUFPdWtCLGdCQUFQLENBQXdCZ2UsY0FBeEIsQ0FIZ0IsQ0FBcEI7OztVQU1NemxCLFNBQVMyN0IsUUFBUSxDQUFSLEdBQVksQ0FBQ0ssV0FBV1AsV0FBV3grQixNQUF0QixHQUErQncrQixXQUFXdlMsS0FBM0MsS0FBcUR3UyxPQUFPLENBQVAsR0FBVyxFQUFoRSxDQUEzQjtXQUNLWSxRQUFMLENBQWN6OUIsS0FBZCxDQUFvQm85QixnQkFBcEIsSUFBd0NsdEMsS0FBS2tRLEdBQUwsQ0FBU3M4QixNQUFULEVBQWlCSyxlQUFlSyxnQkFBZixJQUFtQ2o4QixNQUFuQyxHQUE0Q3U3QixNQUE3RCxJQUF1RSxJQUEvRztVQUNNZ0Isa0JBQWtCeHRDLEtBQUtrUSxHQUFMLENBQVNzOEIsTUFBVCxFQUFpQkEsU0FBU0ssZUFBZU8sU0FBZixDQUFULEdBQXFDLENBQUNFLFlBQVlELFFBQVosSUFBd0JYLFdBQVdXLFFBQVgsQ0FBekIsSUFBaUQsQ0FBdkcsQ0FBeEI7V0FDS0UsUUFBTCxDQUFjejlCLEtBQWQsQ0FBb0JzOUIsU0FBcEIsSUFBaUNJLGtCQUFrQixJQUFuRDs7O1dBR0tDLE1BQUwsQ0FBWTM5QixLQUFaLENBQWtCczlCLFNBQWxCLElBQStCcHRDLEtBQUtrUSxHQUFMLENBQVNtOEIsTUFBVCxFQUFrQlUseUJBQXlCSyxTQUF6QixJQUFzQ0ksZUFBeEQsSUFBNEUsSUFBM0c7Ozs7eUNBR21CcGxCLFVBQVU7VUFDdkJ2ZCxVQUFVLENBQUMsS0FBSzVVLFlBQUwsQ0FBa0IsV0FBbEIsS0FBa0Msb0JBQW5DLEVBQXlEeEIsS0FBekQsQ0FBK0QsS0FBL0QsRUFBc0VxUyxHQUF0RSxDQUEwRTtlQUFLa2xDLFVBQVV2MkMsQ0FBVixDQUFMO09BQTFFLENBQWhCO1VBQ00wM0MsVUFBVXRpQyxRQUFRdWMsSUFBUixDQUFhLFVBQUN4eUIsQ0FBRCxFQUFJRCxDQUFKO2VBQVV5ekIsU0FBU3h6QixDQUFULElBQWN3ekIsU0FBU3p6QixDQUFULENBQXhCO09BQWIsRUFBa0QsQ0FBbEQsQ0FBaEI7VUFDTXM0QyxXQUFXLFNBQVNFLE9BQVQsSUFBb0IsWUFBWUEsT0FBakQ7VUFDSUMsa0JBQUo7O1VBRUlILFFBQUosRUFBYztvQkFDQTdrQixTQUFTaUosSUFBVCxHQUFnQmpKLFNBQVNrSixLQUF6QixHQUFpQyxNQUFqQyxHQUEwQyxPQUF0RDtPQURGLE1BRU87b0JBQ09sSixTQUFTalgsR0FBVCxHQUFlaVgsU0FBUzBrQixNQUF4QixHQUFpQyxLQUFqQyxHQUF5QyxRQUFyRDs7O2FBR0ssRUFBQ0csa0JBQUQsRUFBV0UsZ0JBQVgsRUFBb0JDLG9CQUFwQixFQUFQOzs7O21DQUdhOzs7T0FDWixLQUFELEVBQVEsUUFBUixFQUFrQixNQUFsQixFQUEwQixPQUExQixFQUFtQzlnQyxPQUFuQyxDQUEyQyxhQUFLO2VBQ3pDbWhDLE1BQUwsQ0FBWTM5QixLQUFaLENBQWtCcmEsQ0FBbEIsSUFBdUIsT0FBSzgyQyxRQUFMLENBQWN6OEIsS0FBZCxDQUFvQnJhLENBQXBCLElBQXlCLE9BQUs4M0MsUUFBTCxDQUFjejlCLEtBQWQsQ0FBb0JyYSxDQUFwQixJQUF5QixFQUF6RTtxQkFDYWtlLGNBQWIsU0FBa0NsZSxDQUFsQztPQUZGOzs7O2dDQU1VOzs7bUJBQ0csWUFBTTtZQUNiLE9BQUtpNEMsY0FBVCxFQUF5QjtpQkFDbEJDLGdCQUFMLENBQXNCLE9BQUtELGNBQTNCOztPQUZKOzs7OytCQU9TO2dCQUNDaFksT0FBVixDQUFrQixJQUFsQjs7VUFFSSxLQUFLNlgsUUFBTCxJQUFpQixLQUFLNVYsS0FBMUIsRUFBaUM7Ozs7VUFJM0JpVyxzQkFBc0IsS0FBS0wsUUFBTCxJQUFpQixLQUFLaEIsUUFBbEQ7O1VBRUlxQixtQkFBSixFQUF5Qjs7WUFFbkIsQ0FBQyxLQUFLalcsS0FBVixFQUFpQjtjQUNUYSxPQUFPai9CLFNBQVNtQixhQUFULENBQXVCLEtBQXZCLENBQWI7ZUFDSzhSLFNBQUwsQ0FBZXJXLEdBQWYsQ0FBbUIsY0FBbkI7ZUFDS3FGLFlBQUwsQ0FBa0JnOUIsSUFBbEIsRUFBd0IsS0FBS3BpQyxVQUE3Qjs7O1lBR0UsQ0FBQyxLQUFLcTNDLE1BQVYsRUFBa0I7Y0FDVkksUUFBUXQwQyxTQUFTbUIsYUFBVCxDQUF1QixLQUF2QixDQUFkO2dCQUNNOFIsU0FBTixDQUFnQnJXLEdBQWhCLENBQW9CLGdCQUFwQjtlQUNLbzNDLFFBQUwsQ0FBY2p5QyxXQUFkLENBQTBCdXlDLEtBQTFCOztPQVhKLE1BY087O1lBRUN0bEMsV0FBV3dqQyxlQUFlM3dDLFNBQWYsQ0FBeUIsSUFBekIsQ0FBakI7WUFDTXFFLFVBQVU4SSxTQUFTa0wsYUFBVCxDQUF1QixtQkFBdkIsQ0FBaEI7O2VBRU8sS0FBSzdVLFVBQUwsQ0FBZ0IsQ0FBaEIsQ0FBUCxFQUEyQjtrQkFDakJ0RCxXQUFSLENBQW9CLEtBQUtzRCxVQUFMLENBQWdCLENBQWhCLENBQXBCOzs7YUFHR3RELFdBQUwsQ0FBaUJpTixRQUFqQjs7OztVQUlFLEtBQUswRSxZQUFMLENBQWtCLE9BQWxCLENBQUosRUFBZ0M7YUFDekJzZ0MsUUFBTCxDQUFjbHhDLFlBQWQsQ0FBMkIsT0FBM0IsRUFBb0MsS0FBS3BHLFlBQUwsQ0FBa0IsT0FBbEIsQ0FBcEM7YUFDS3NHLGVBQUwsQ0FBcUIsT0FBckI7Ozs7VUFJRSxLQUFLMFEsWUFBTCxDQUFrQixZQUFsQixDQUFKLEVBQXFDO2FBQzlCMHFCLEtBQUwsQ0FBVzduQixLQUFYLENBQWlCMm9CLGVBQWpCLEdBQW1DLEtBQUt4aUMsWUFBTCxDQUFrQixZQUFsQixDQUFuQzs7O21CQUdXeWlDLFlBQWIsQ0FBMEIsSUFBMUIsRUFBZ0MvckIsU0FBaEM7Ozs7NkNBR3VCOUIsU0FBUztVQUM1QkEsUUFBUUcsU0FBUixJQUFxQixFQUFFSCxRQUFRRyxTQUFSLElBQXFCZ3RCLGVBQXZCLENBQXpCLEVBQWdFO2NBQ3hELElBQUkvL0IsS0FBSixlQUFzQjRTLFFBQVFHLFNBQTlCLHlCQUFOOzs7Y0FHTUssZ0JBQVIsR0FBMkJGLEtBQUtDLE1BQUwsQ0FDekJuQixnQkFBZ0IydUIsMkJBQWhCLENBQTRDLEtBQUszaUMsWUFBTCxDQUFrQixtQkFBbEIsQ0FBNUMsQ0FEeUIsRUFFekI0VSxRQUFRUSxnQkFBUixJQUE0QixFQUZILENBQTNCOzs7O21DQU1heWlDLFNBQXVCOzs7VUFBZGpqQyxPQUFjLHVFQUFKLEVBQUk7O1VBQzlCN0MsV0FBVzZDLFFBQVE3QyxRQUF6QjtVQUNPa08sTUFGNkIsR0FFSjQzQixPQUZJLENBRTdCNTNCLE1BRjZCO1VBRXJCL1ksTUFGcUIsR0FFSjJ3QyxPQUZJLENBRXJCM3dDLE1BRnFCO1VBRWJFLEtBRmEsR0FFSnl3QyxPQUZJLENBRWJ6d0MsS0FGYTs7O1dBSS9CMHdDLHdCQUFMLENBQThCbGpDLE9BQTlCOztVQUVJbWpDLFdBQVcsS0FBZjtXQUNLdDJCLG1CQUFMLENBQXlCLElBQXpCLFVBQXFDeEIsTUFBckMsRUFBK0M7aUJBQ3BDLElBRG9DO2dCQUVyQztpQkFBTTgzQixXQUFXLElBQWpCOztPQUZWOztVQUtJQSxRQUFKLEVBQWM7ZUFDTDUwQyxRQUFRZSxNQUFSLHFCQUFpQytiLE1BQWpDLGFBQVA7OzthQUdLLElBQUk5YyxPQUFKLENBQVksbUJBQVc7ZUFDdkIrK0IsU0FBTCxDQUFlNUQsVUFBZixDQUEwQixZQUFNO2NBQ3hCdkMsU0FBUyxPQUFLbUcsU0FBTCxDQUFldEIsSUFBZixFQUFmOztvQkFFVTE1QixRQUFWOzsrQkFFbUIsWUFBTTttQkFDbEJpdkMsU0FBTCxDQUFldmhDLE9BQWYsRUFBd0JxTCxNQUF4QixVQUFzQyxZQUFNO3VCQUNqQzdZLE9BQVQ7Ozs7bUJBSUtxYSxtQkFBTCxrQkFBc0N4QixNQUF0QyxFQUFnRCxFQUFDNGYsZUFBRCxFQUFoRDs7MEJBRVk5dEIsVUFBWjs7YUFQRjtXQURGO1NBTEY7T0FESyxDQUFQOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O3lCQStDRzlFLFFBQXNCOzs7VUFBZDJILE9BQWMsdUVBQUosRUFBSTs7O1VBRXJCM0gsVUFBVSxRQUFPQSxNQUFQLHlDQUFPQSxNQUFQLE9BQWtCLFFBQTVCLElBQXdDLEVBQUVBLGtCQUFrQm1hLEtBQXBCLENBQXhDLElBQXNFLEVBQUVuYSxrQkFBa0J2RixXQUFwQixDQUExRSxFQUE0RztrQkFDaEd1RixNQUFWO2lCQUNTMkgsUUFBUTNILE1BQWpCOzs7VUFHRSxPQUFPQSxNQUFQLEtBQWtCLFFBQXRCLEVBQWdDO2lCQUNyQjNKLFNBQVNrYSxhQUFULENBQXVCdlEsTUFBdkIsQ0FBVDtPQURGLE1BRU8sSUFBSUEsa0JBQWtCbWEsS0FBdEIsRUFBNkI7aUJBQ3pCbmEsT0FBT0EsTUFBaEI7OztVQUdFLE9BQU9BLE1BQVAsS0FBa0IsV0FBdEIsRUFBbUM7Y0FDM0IsSUFBSWpMLEtBQUosQ0FBVSxvREFBVixDQUFOOzs7VUFHRSxFQUFFaUwsa0JBQWtCdkYsV0FBcEIsQ0FBSixFQUFzQztjQUMvQixJQUFJMUYsS0FBSixDQUFVLGdCQUFWLENBQU47OzthQUdNLEtBQUtnMkMsY0FBTCxDQUFvQjtnQkFDakIsTUFEaUI7Z0JBRWpCLGtCQUFNO2lCQUNQbitCLEtBQUwsQ0FBV29oQixPQUFYLEdBQXFCLE9BQXJCO2lCQUNLd2MsY0FBTCxHQUFzQnhxQyxNQUF0QjtpQkFDS3lxQyxnQkFBTCxDQUFzQnpxQyxNQUF0Qjs7T0FMRyxFQU9KMkgsT0FQSSxDQUFQOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzJCQWdDaUI7OztVQUFkQSxPQUFjLHVFQUFKLEVBQUk7O2FBQ1YsS0FBS29qQyxjQUFMLENBQW9CO2dCQUNqQixNQURpQjtlQUVsQixpQkFBTTtpQkFDTm4rQixLQUFMLENBQVdvaEIsT0FBWCxHQUFxQixNQUFyQjtpQkFDS2dkLFlBQUw7O09BSkcsRUFNSnJqQyxPQU5JLENBQVA7Ozs7Ozs7Ozs7Ozs7O3dDQTJEa0I7OzttQkFDTCxJQUFiLEVBQW1CLFlBQU07ZUFDbEI0aEMsT0FBTCxHQUFlLE9BQUtBLE9BQUwsSUFBZ0JubkMsU0FBU25SLE9BQU91a0IsZ0JBQVAsU0FBOEJDLGdCQUE5QixDQUErQyxLQUEvQyxDQUFULENBQS9COzs7WUFHSSxDQUFDLE9BQUs4ekIsT0FBVixFQUFtQjtpQkFDWkEsT0FBTCxHQUFlLENBQWY7OztlQUdHSCxPQUFMLEdBQWVobkMsU0FBU25SLE9BQU91a0IsZ0JBQVAsQ0FBd0IsT0FBSzZ6QixRQUE3QixFQUF1QzV6QixnQkFBdkMsQ0FBd0Qsd0JBQXhELENBQVQsQ0FBZjs7ZUFFS2dmLEtBQUwsQ0FBVy8vQixnQkFBWCxDQUE0QixPQUE1QixFQUFxQyxPQUFLd2dDLFlBQTFDLEVBQXdELEtBQXhEOztlQUVLYSxrQkFBTCxHQUEwQjtpQkFBSyxPQUFLM0wsVUFBTCxHQUFrQixPQUFLK0ssT0FBTCxFQUFsQixHQUFtQzVpQyxFQUFFeWpDLGlCQUFGLEVBQXhDO1NBQTFCOztlQUVPdGhDLGdCQUFQLENBQXdCLFFBQXhCLEVBQWtDLE9BQUtnYixjQUF2QyxFQUF1RCxLQUF2RDtPQWRGOzs7OzJDQWtCcUI7OzttQkFDUixJQUFiLEVBQW1CLFlBQU07ZUFDbEIra0IsS0FBTCxDQUFXeHZCLG1CQUFYLENBQStCLE9BQS9CLEVBQXdDLE9BQUtpd0IsWUFBN0MsRUFBMkQsS0FBM0Q7O2VBRUtlLGtCQUFMLENBQXdCL3FCLE9BQXhCO2VBQ0srcUIsa0JBQUwsR0FBMEIsSUFBMUI7O2VBRU9oeEIsbUJBQVAsQ0FBMkIsUUFBM0IsRUFBcUMsT0FBS3lLLGNBQTFDLEVBQTBELEtBQTFEO09BTkY7Ozs7NkNBY3VCalEsTUFBTWtKLE1BQU1DLFNBQVM7Y0FDcENuSixJQUFSO2FBQ08sVUFBTDt1QkFDZXkyQixpQkFBYixDQUErQnZ0QixJQUEvQixFQUFxQ0MsT0FBckMsRUFBOEMsSUFBOUMsRUFBb0RhLFNBQXBEOzthQUVHLFdBQUw7ZUFDT2lHLGNBQUw7O2FBRUcsV0FBTDtlQUNPczVCLG9CQUFMOzs7Ozs7OEJBTUk7OztVQUNKLEtBQUs1ZSxVQUFULEVBQXFCO2FBQ2RqckIsSUFBTCxDQUFVO29CQUNFLG9CQUFNO2lCQUNUcVYsbUJBQUwsVUFBK0IsZUFBL0I7O1NBRko7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7d0JBM1lRO2FBQ0h2TSxLQUFLdUUsU0FBTCxDQUFlLElBQWYsRUFBcUIsZUFBckIsQ0FBUDs7Ozt3QkFHYTthQUNOdkUsS0FBS3VFLFNBQUwsQ0FBZSxJQUFmLEVBQXFCLFVBQXJCLENBQVA7Ozs7d0JBR2E7YUFDTnZFLEtBQUt1RSxTQUFMLENBQWUsS0FBSzY5QixRQUFwQixFQUE4QixtQkFBOUIsQ0FBUDs7Ozt3QkFHVzthQUNKcGlDLEtBQUt1RSxTQUFMLENBQWUsS0FBSzY5QixRQUFwQixFQUE4QixpQkFBOUIsQ0FBUDs7Ozt3QkFpU1k7YUFDTHA1QyxPQUFPdWtCLGdCQUFQLENBQXdCLElBQXhCLEVBQThCQyxnQkFBOUIsQ0FBK0MsU0FBL0MsTUFBOEQsTUFBckU7Ozs7Ozs7Ozs7Ozs7Ozs7O3NCQWNhL1ksT0FBTzthQUNidUwsS0FBSzBOLGVBQUwsQ0FBcUIsSUFBckIsRUFBMkIsWUFBM0IsRUFBeUNqWixLQUF6QyxDQUFQOzt3QkFHZTthQUNSLEtBQUtxTixZQUFMLENBQWtCLFlBQWxCLENBQVA7Ozs7Ozs7Ozs7Ozs7d0JBVXVCO2FBQ2hCLEtBQUtrc0Isa0JBQVo7O3NCQUdxQm54QixVQUFVO1VBQzNCLEtBQUtteEIsa0JBQVQsRUFBNkI7YUFDdEJBLGtCQUFMLENBQXdCL3FCLE9BQXhCOzs7V0FHRytxQixrQkFBTCxHQUEwQjVGLDJCQUEyQjhGLGFBQTNCLENBQXlDLEtBQUtrVSxRQUE5QyxFQUF3RHZsQyxRQUF4RCxDQUExQjs7Ozs7Ozs7OztxQ0FzRXNCckYsTUFBTXNJLFVBQVU7VUFDbEMsRUFBRUEsU0FBUzNTLFNBQVQsWUFBOEI4eUMsZUFBaEMsQ0FBSixFQUFzRDtjQUM5QyxJQUFJbnpDLEtBQUosQ0FBVSwrQ0FBVixDQUFOOztzQkFFWTBLLElBQWQsSUFBc0JzSSxRQUF0Qjs7Ozt3QkF6QzhCO2FBQ3ZCLENBQUMsVUFBRCxFQUFhLFdBQWIsRUFBMEIsV0FBMUIsQ0FBUDs7Ozt3QkE0QmtCO2FBQ1gsQ0FBQyxTQUFELEVBQVksVUFBWixFQUF3QixTQUF4QixFQUFtQyxVQUFuQyxFQUErQyxlQUEvQyxDQUFQOzs7O3dCQWNxQjthQUNkK3NCLGVBQVA7Ozs7d0JBRzJCO2FBQ3BCb1QsZUFBUDs7OztFQXhoQndDcFU7O0FBNGhCNUM1aUMsZUFBZWtHLE1BQWYsQ0FBc0IsYUFBdEIsRUFBcUMyeEMsY0FBckM7O0FDeG5CQTs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFpQkEsQUFDQSxBQUNBLEFBQ0EsQUFFQSxJQUFNdC9CLFlBQVM7bUJBQ0ksaUJBREo7NEJBRWEsMEJBRmI7OEJBR2U7Q0FIOUI7O0FBTUEsSUFBTXBFLFdBQVc0QyxLQUFLelEsYUFBTCw4SUFBakI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBOEJxQnl6Qzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsyQkFpQ1o7OzttQkFDUSxJQUFiLEVBQW1CO2VBQU0sT0FBS2pXLFFBQUwsRUFBTjtPQUFuQjs7OzsrQkFHUztVQUNMLENBQUMsS0FBS2tXLFdBQUwsRUFBTCxFQUF5QjthQUNsQkMsU0FBTCxHQUFpQjlsQyxTQUFTbk4sU0FBVCxDQUFtQixJQUFuQixDQUFqQjtPQURGLE1BRU87YUFDQWl6QyxTQUFMLEdBQWlCbGpDLEtBQUt1RSxTQUFMLENBQWUsSUFBZixFQUFxQixlQUFyQixDQUFqQjs7O1dBR0c0K0IsUUFBTCxHQUFnQm5qQyxLQUFLdUUsU0FBTCxDQUFlLEtBQUsyK0IsU0FBcEIsRUFBK0Isd0JBQS9CLENBQWhCO1dBQ0tFLFVBQUwsR0FBa0JwakMsS0FBS3VFLFNBQUwsQ0FBZSxLQUFLMitCLFNBQXBCLEVBQStCLDBCQUEvQixDQUFsQjs7V0FFS0csa0JBQUw7V0FDS0MsWUFBTDs7V0FFS256QyxXQUFMLENBQWlCLEtBQUsreUMsU0FBdEI7O21CQUVhM1YsWUFBYixDQUEwQixJQUExQixFQUFnQy9yQixTQUFoQzs7OztrQ0FHWTtVQUNSLENBQUN4QixLQUFLdUUsU0FBTCxDQUFlLElBQWYsRUFBcUIsZUFBckIsQ0FBTCxFQUE0QztlQUNuQyxLQUFQOzs7VUFHSWcvQixhQUFhdmpDLEtBQUt1RSxTQUFMLENBQWUsSUFBZixFQUFxQixlQUFyQixDQUFuQjs7VUFFSSxDQUFDdkUsS0FBS3VFLFNBQUwsQ0FBZWcvQixVQUFmLEVBQTJCLDBCQUEzQixDQUFMLEVBQTZEO2VBQ3BELEtBQVA7OztVQUdFLENBQUN2akMsS0FBS3VFLFNBQUwsQ0FBZWcvQixVQUFmLEVBQTJCLHdCQUEzQixDQUFMLEVBQTJEO2VBQ2xELEtBQVA7OzthQUdLLElBQVA7Ozs7NkNBT3VCL3JDLE1BQU1rSixNQUFNQyxTQUFTO1VBQ3hDbkosU0FBUyxVQUFiLEVBQXlCO2VBQ2hCaUosYUFBYXd0QixpQkFBYixDQUErQnZ0QixJQUEvQixFQUFxQ0MsT0FBckMsRUFBOEMsSUFBOUMsRUFBb0RhLFNBQXBELENBQVA7T0FERixNQUVPLElBQUloSyxTQUFTLE9BQVQsSUFBb0JBLFNBQVMsaUJBQWpDLEVBQW9EO2FBQ3BEOHJDLFlBQUw7T0FESyxNQUVBLElBQUk5ckMsU0FBUyxlQUFiLEVBQThCO2FBQzlCNnJDLGtCQUFMOzs7Ozt5Q0FJaUI7OztVQUNmLEtBQUt2aEMsWUFBTCxDQUFrQixlQUFsQixDQUFKLEVBQXdDO3FCQUN6QixJQUFiLEVBQW1CLFlBQU07aUJBQ2xCb2hDLFNBQUwsQ0FBZTdoQyxTQUFmLENBQXlCclcsR0FBekI7aUJBQ0trNEMsU0FBTCxDQUFlN2hDLFNBQWYsQ0FBeUIvTyxNQUF6QjtTQUZGO09BREYsTUFNSztxQkFDVSxJQUFiLEVBQW1CLFlBQU07aUJBQ2xCNHdDLFNBQUwsQ0FBZTdoQyxTQUFmLENBQXlCclcsR0FBekI7aUJBQ0trNEMsU0FBTCxDQUFlN2hDLFNBQWYsQ0FBeUIvTyxNQUF6QjtTQUZGOzs7OzttQ0FPVzs7O21CQUNBLElBQWIsRUFBbUIsWUFBTTtlQUNsQjZ3QyxRQUFMLENBQWN4K0IsS0FBZCxDQUFvQnFxQixLQUFwQixHQUE2QixPQUFLbHRCLFlBQUwsQ0FBa0IsT0FBbEIsQ0FBRCxHQUErQixPQUFLaFgsWUFBTCxDQUFrQixPQUFsQixJQUE2QixHQUE1RCxHQUFrRSxJQUE5RjtlQUNLczRDLFVBQUwsQ0FBZ0J6K0IsS0FBaEIsQ0FBc0JxcUIsS0FBdEIsR0FBOEIsT0FBS2x0QixZQUFMLENBQWtCLGlCQUFsQixJQUF1QyxPQUFLaFgsWUFBTCxDQUFrQixpQkFBbEIsSUFBdUMsR0FBOUUsR0FBb0YsSUFBbEg7T0FGRjs7Ozs7Ozs7Ozs7OztzQkFhUTJKLE9BQU87VUFDWCxPQUFPQSxLQUFQLEtBQWlCLFFBQWpCLElBQTZCQSxRQUFRLENBQXJDLElBQTBDQSxRQUFRLEdBQXRELEVBQTJEO2NBQ25ELElBQUkzSCxLQUFKLENBQVUsZUFBVixDQUFOOzs7V0FHR29FLFlBQUwsQ0FBa0IsT0FBbEIsRUFBMkIyRCxLQUFLa1MsS0FBTCxDQUFXdFMsS0FBWCxDQUEzQjs7d0JBR1U7YUFDSDBGLFNBQVMsS0FBS3JQLFlBQUwsQ0FBa0IsT0FBbEIsS0FBOEIsR0FBdkMsQ0FBUDs7Ozs7Ozs7Ozs7OztzQkFVaUIySixPQUFPO1VBQ3BCLE9BQU9BLEtBQVAsS0FBaUIsUUFBakIsSUFBNkJBLFFBQVEsQ0FBckMsSUFBMENBLFFBQVEsR0FBdEQsRUFBMkQ7Y0FDbkQsSUFBSTNILEtBQUosQ0FBVSxlQUFWLENBQU47OztXQUdHb0UsWUFBTCxDQUFrQixpQkFBbEIsRUFBcUMyRCxLQUFLa1MsS0FBTCxDQUFXdFMsS0FBWCxDQUFyQzs7d0JBR21CO2FBQ1owRixTQUFTLEtBQUtyUCxZQUFMLENBQWtCLGlCQUFsQixLQUF3QyxHQUFqRCxDQUFQOzs7Ozs7Ozs7Ozs7O3NCQVVnQjJKLE9BQU87VUFDbkJBLEtBQUosRUFBVzthQUNKdkQsWUFBTCxDQUFrQixlQUFsQixFQUFtQyxFQUFuQztPQURGLE1BR0s7YUFDRUUsZUFBTCxDQUFxQixlQUFyQjs7O3dCQUlnQjthQUNYLEtBQUswUSxZQUFMLENBQWtCLGVBQWxCLENBQVA7Ozs7d0JBM0Y4QjthQUN2QixDQUFDLFVBQUQsRUFBYSxPQUFiLEVBQXNCLGlCQUF0QixFQUF5QyxlQUF6QyxDQUFQOzs7O0VBMUU0QytwQjs7QUF3S2hENWlDLGVBQWVrRyxNQUFmLENBQXNCLGtCQUF0QixFQUEwQzZ6QyxrQkFBMUM7O0FDbE9BOzs7Ozs7Ozs7Ozs7Ozs7OztBQWlCQSxBQUNBLEFBQ0EsQUFDQSxBQUVBLElBQU14aEMsWUFBUzt3QkFDUyxzQkFEVDtpQ0FFa0IsK0JBRmxCO21DQUdvQjtDQUhuQzs7QUFNQSxJQUFNcEUsYUFBVzRDLEtBQUt6USxhQUFMLDJKQUFqQjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUE4QnFCaTBDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzJCQWlDWjs7O21CQUNRLElBQWIsRUFBbUI7ZUFBTSxPQUFLelcsUUFBTCxFQUFOO09BQW5COzs7OzZDQU91QnYxQixNQUFNa0osTUFBTUMsU0FBUztVQUN4Q25KLFNBQVMsVUFBYixFQUF5QjtlQUNoQmlKLGFBQWF3dEIsaUJBQWIsQ0FBK0J2dEIsSUFBL0IsRUFBcUNDLE9BQXJDLEVBQThDLElBQTlDLEVBQW9EYSxTQUFwRCxDQUFQO09BREYsTUFFTyxJQUFJaEssU0FBUyxPQUFULElBQW9CQSxTQUFTLGlCQUFqQyxFQUFvRDthQUNwRDhyQyxZQUFMO09BREssTUFFQSxJQUFJOXJDLFNBQVMsZUFBYixFQUE4QjthQUM5QjZyQyxrQkFBTDs7Ozs7eUNBSWlCOzs7VUFDZixLQUFLdmhDLFlBQUwsQ0FBa0IsZUFBbEIsQ0FBSixFQUF3QztxQkFDekIsSUFBYixFQUFtQixZQUFNO3VCQUNWMkcsV0FBYixTQUErQixlQUEvQjtTQURGO09BREYsTUFLSztxQkFDVSxJQUFiLEVBQW1CLFlBQU07dUJBQ1ZELGNBQWIsU0FBa0MsZUFBbEM7U0FERjs7Ozs7bUNBTVc7OztVQUNULEtBQUsxRyxZQUFMLENBQWtCLE9BQWxCLENBQUosRUFBZ0M7cUJBQ2pCLElBQWIsRUFBbUIsWUFBTTtjQUNqQjJoQyxNQUFNNXVDLEtBQUtxL0IsSUFBTCxDQUFVLE9BQUtwcEMsWUFBTCxDQUFrQixPQUFsQixJQUE2QixNQUE3QixHQUFzQyxJQUFoRCxDQUFaO2lCQUNLcTRDLFFBQUwsQ0FBY3grQixLQUFkLENBQW9CLGtCQUFwQixJQUEwQzgrQixNQUFNLFlBQWhEO1NBRkY7O1VBS0UsS0FBSzNoQyxZQUFMLENBQWtCLGlCQUFsQixDQUFKLEVBQTBDO3FCQUMzQixJQUFiLEVBQW1CLFlBQU07Y0FDakIyaEMsTUFBTzV1QyxLQUFLcS9CLElBQUwsQ0FBVSxPQUFLcHBDLFlBQUwsQ0FBa0IsaUJBQWxCLElBQXVDLE1BQXZDLEdBQWdELElBQTFELENBQWI7aUJBQ0tzNEMsVUFBTCxDQUFnQnorQixLQUFoQixDQUFzQm9oQixPQUF0QixHQUFnQyxJQUFoQztpQkFDS3FkLFVBQUwsQ0FBZ0J6K0IsS0FBaEIsQ0FBc0Isa0JBQXRCLElBQTRDOCtCLE1BQU0sWUFBbEQ7U0FIRjtPQURGLE1BTU87cUJBQ1EsSUFBYixFQUFtQixZQUFNO2lCQUNsQkwsVUFBTCxDQUFnQnorQixLQUFoQixDQUFzQm9oQixPQUF0QixHQUFnQyxNQUFoQztTQURGOzs7Ozs7Ozs7Ozs7OzsrQkFnRU87VUFDTCxLQUFLa2QsV0FBTCxFQUFKLEVBQXdCO2FBQ2pCQyxTQUFMLEdBQWlCbGpDLEtBQUt1RSxTQUFMLENBQWUsSUFBZixFQUFxQixvQkFBckIsQ0FBakI7T0FERixNQUVPO2FBQ0EyK0IsU0FBTCxHQUFpQjlsQyxXQUFTbk4sU0FBVCxDQUFtQixJQUFuQixDQUFqQjs7O1dBR0drekMsUUFBTCxHQUFnQm5qQyxLQUFLdUUsU0FBTCxDQUFlLEtBQUsyK0IsU0FBcEIsRUFBK0IsNkJBQS9CLENBQWhCO1dBQ0tFLFVBQUwsR0FBa0JwakMsS0FBS3VFLFNBQUwsQ0FBZSxLQUFLMitCLFNBQXBCLEVBQStCLCtCQUEvQixDQUFsQjs7V0FFS0csa0JBQUw7V0FDS0MsWUFBTDs7V0FFS256QyxXQUFMLENBQWlCLEtBQUsreUMsU0FBdEI7O21CQUVhM1YsWUFBYixDQUEwQixJQUExQixFQUFnQy9yQixTQUFoQzs7OztrQ0FHWTtVQUNSLENBQUN4QixLQUFLdUUsU0FBTCxDQUFlLElBQWYsRUFBcUIsb0JBQXJCLENBQUwsRUFBaUQ7ZUFDeEMsS0FBUDs7O1VBR0ltL0IsTUFBTTFqQyxLQUFLdUUsU0FBTCxDQUFlLElBQWYsRUFBcUIsb0JBQXJCLENBQVo7O1VBRUksQ0FBQ3ZFLEtBQUt1RSxTQUFMLENBQWVtL0IsR0FBZixFQUFvQiwrQkFBcEIsQ0FBTCxFQUEyRDtlQUNsRCxLQUFQOzs7VUFHRSxDQUFDMWpDLEtBQUt1RSxTQUFMLENBQWVtL0IsR0FBZixFQUFvQiw2QkFBcEIsQ0FBTCxFQUF5RDtlQUNoRCxLQUFQOzs7YUFHSyxJQUFQOzs7O3NCQXBGUWp2QyxPQUFPO1VBQ1gsT0FBT0EsS0FBUCxLQUFpQixRQUFqQixJQUE2QkEsUUFBUSxDQUFyQyxJQUEwQ0EsUUFBUSxHQUF0RCxFQUEyRDtjQUNuRCxJQUFJM0gsS0FBSixDQUFVLGVBQVYsQ0FBTjs7O1dBR0dvRSxZQUFMLENBQWtCLE9BQWxCLEVBQTJCMkQsS0FBS2tTLEtBQUwsQ0FBV3RTLEtBQVgsQ0FBM0I7O3dCQUdVO2FBQ0gwRixTQUFTLEtBQUtyUCxZQUFMLENBQWtCLE9BQWxCLEtBQThCLEdBQXZDLENBQVA7Ozs7Ozs7Ozs7Ozs7c0JBVWlCMkosT0FBTztVQUNwQixPQUFPQSxLQUFQLEtBQWlCLFFBQWpCLElBQTZCQSxRQUFRLENBQXJDLElBQTBDQSxRQUFRLEdBQXRELEVBQTJEO2NBQ25ELElBQUkzSCxLQUFKLENBQVUsZUFBVixDQUFOOzs7V0FHR29FLFlBQUwsQ0FBa0IsaUJBQWxCLEVBQXFDMkQsS0FBS2tTLEtBQUwsQ0FBV3RTLEtBQVgsQ0FBckM7O3dCQUdtQjthQUNaMEYsU0FBUyxLQUFLclAsWUFBTCxDQUFrQixpQkFBbEIsS0FBd0MsR0FBakQsQ0FBUDs7Ozs7Ozs7Ozs7OztzQkFVZ0IySixPQUFPO1VBQ25CQSxLQUFKLEVBQVc7YUFDSnZELFlBQUwsQ0FBa0IsZUFBbEIsRUFBbUMsRUFBbkM7T0FERixNQUdLO2FBQ0VFLGVBQUwsQ0FBcUIsZUFBckI7Ozt3QkFJZ0I7YUFDWCxLQUFLMFEsWUFBTCxDQUFrQixlQUFsQixDQUFQOzs7O3dCQXRHOEI7YUFDdkIsQ0FBQyxVQUFELEVBQWEsT0FBYixFQUFzQixpQkFBdEIsRUFBeUMsZUFBekMsQ0FBUDs7OztFQXRDaUQrcEI7O0FBbUxyRDVpQyxlQUFla0csTUFBZixDQUFzQix1QkFBdEIsRUFBK0NxMEMsdUJBQS9DOztBQzdPQTs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFpQkEsQUFDQSxBQUNBLEFBQ0EsQUFDQSxBQUVBLElBQU1HLGdCQUFnQixTQUF0QjtBQUNBLElBQU1DLGtCQUFrQixXQUF4QjtBQUNBLElBQU1DLGVBQWUsUUFBckI7O0FBRUEsSUFBTUMsa0JBQWtCLFNBQWxCQSxlQUFrQixDQUFDOTNCLEVBQUQsRUFBUTtLQUMzQnJILEtBQUgsQ0FBU2l4QixTQUFULEdBQXFCLEVBQXJCO0tBQ0dqeEIsS0FBSCxDQUFTby9CLGVBQVQsR0FBMkIsRUFBM0I7S0FDR3AvQixLQUFILENBQVNvTSxVQUFULEdBQXNCLEVBQXRCO0tBQ0dwTSxLQUFILENBQVNxL0IsZ0JBQVQsR0FBNEIsRUFBNUI7Q0FKRjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztJQWdDcUJDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzJCQWdEWjtXQUNBdlQsWUFBTCxHQUFvQixLQUFLQyxPQUFMLENBQWFsakMsSUFBYixDQUFrQixJQUFsQixDQUFwQjtXQUNLeTJDLGlCQUFMLEdBQXlCLEtBQUtDLFlBQUwsQ0FBa0IxMkMsSUFBbEIsQ0FBdUIsSUFBdkIsQ0FBekI7V0FDS21qQyxlQUFMLEdBQXVCLEtBQUtDLFVBQUwsQ0FBZ0JwakMsSUFBaEIsQ0FBcUIsSUFBckIsQ0FBdkI7V0FDS3N5QyxjQUFMLEdBQXNCLEtBQUtDLFNBQUwsQ0FBZXZ5QyxJQUFmLENBQW9CLElBQXBCLENBQXRCOztXQUVLMjJDLFNBQUwsQ0FBZVQsYUFBZixFQUE4QixJQUE5QjtXQUNLL0YsS0FBTCxHQVBLOzs7O2dDQVVLO1VBQ0o3NkIsU0FBUyxLQUFLQSxNQUFwQjs7V0FFSzRCLEtBQUwsQ0FBVzVCLE1BQVgsR0FBdUJBLE1BQXZCO1dBQ0s0QixLQUFMLENBQVcwL0IsVUFBWCxHQUEyQnRoQyxNQUEzQjtXQUNLNEIsS0FBTCxDQUFXMi9CLFNBQVgsR0FBdUIsTUFBdkI7V0FDS0MsWUFBTCxDQUFrQjUvQixLQUFsQixDQUF3QjIvQixTQUF4QixTQUF3Q3ZoQyxNQUF4Qzs7Ozs4QkFHUTJKLE9BQU87VUFDVG5MLFVBQVUsS0FBS2dqQyxZQUFyQjs7VUFFSWhqQyxRQUFRdUMsU0FBUixHQUFvQixDQUF4QixFQUEyQjtnQkFDakJBLFNBQVIsR0FBb0IsQ0FBcEI7Ozs7O2tEQUkwQnFyQixRQUFRO21DQUNUQSxNQUEzQjs7Ozs0QkFHTXppQixPQUFPOzs7VUFDVCxLQUFLODNCLFFBQVQsRUFBbUI7Ozs7Ozs7VUFPZnByQyxTQUFTbUIsU0FBVCxFQUFKLEVBQTBCO1lBQ2xCZ0gsVUFBVSxLQUFLZ2pDLFlBQXJCO2dCQUNRemdDLFNBQVIsR0FBb0IsS0FBSzJnQyxZQUFMLEdBQW9CLzNCLE1BQU15SCxPQUFOLENBQWMyQixNQUF0RDtZQUNJdlUsUUFBUXVDLFNBQVIsR0FBb0I5YSxPQUFPa2QsV0FBM0IsSUFBMEN3RyxNQUFNeUgsT0FBTixDQUFjd0MsU0FBZCxLQUE0QixJQUExRSxFQUFnRjtnQkFDeEV4QyxPQUFOLENBQWNvRixjQUFkOzs7O1VBSUEsS0FBS21yQixtQkFBTCxLQUE2QixDQUE3QixJQUFrQyxLQUFLQyxpQkFBTCxPQUE2QixDQUFuRSxFQUFzRTthQUMvREMscUJBQUwsR0FBNkJsNEIsTUFBTXlILE9BQU4sQ0FBYzJCLE1BQTNDOztZQUVNYSxZQUFZakssTUFBTXlILE9BQU4sQ0FBYzBILGdCQUFoQztZQUNJbEYsY0FBYyxNQUFsQixFQUEwQjtlQUNuQml1QixxQkFBTCxJQUE4QixDQUE5QjtTQURGLE1BRU87ZUFDQUEscUJBQUwsSUFBOEIsQ0FBOUI7Ozs7VUFJRXpWLFNBQVN0NkIsS0FBS2tRLEdBQUwsQ0FBUzJILE1BQU15SCxPQUFOLENBQWMyQixNQUFkLEdBQXVCLEtBQUsydUIsWUFBckMsRUFBbUQsQ0FBbkQsQ0FBZjs7VUFFSSxLQUFLSSx1QkFBTCxNQUFrQzFWLFVBQVUsS0FBSzJWLGVBQXJELEVBQXNFO2NBQzlEM3dCLE9BQU4sQ0FBY3FGLFVBQWQ7O3FCQUVhO2lCQUFNLE9BQUt1ckIsT0FBTCxFQUFOO1NBQWI7T0FIRixNQUlPLElBQUk1VixVQUFVLEtBQUtwc0IsTUFBbkIsRUFBMkI7YUFDM0JxaEMsU0FBTCxDQUFlUixlQUFmO09BREssTUFFQTthQUNBUSxTQUFMLENBQWVULGFBQWY7Ozs7OztVQU1FajNCLE1BQU15SCxPQUFOLENBQWN3QyxTQUFkLEtBQTRCLElBQTVCLElBQW9DakssTUFBTXlILE9BQU4sQ0FBY3dDLFNBQWQsS0FBNEIsTUFBcEUsRUFBNEU7Y0FDbEV4SCxlQUFOOztXQUVDNjFCLFlBQUwsQ0FBa0I3VixNQUFsQjs7OztpQ0FHV3ppQixPQUFPO1VBQ2QsS0FBSzgzQixRQUFULEVBQW1COzs7O1dBSWRDLFlBQUwsR0FBb0IsS0FBS0UsaUJBQUwsRUFBcEI7Ozs7K0JBR1NqNEIsT0FBTztVQUNaLEtBQUs4M0IsUUFBVCxFQUFtQjs7OztVQUlmLEtBQUtFLG1CQUFMLEdBQTJCLENBQS9CLEVBQWtDO1lBQzFCdlYsU0FBUyxLQUFLdVYsbUJBQXBCOztZQUVJdlYsU0FBUyxLQUFLcHNCLE1BQWxCLEVBQTBCO2VBQ25CZ2lDLE9BQUw7U0FERixNQUVPO2VBQ0FDLFlBQUwsQ0FBa0IsQ0FBbEIsRUFBcUIsRUFBQ0MsU0FBUyxJQUFWLEVBQXJCOzs7Ozs7Ozs7Ozs7Ozs7OEJBdUJJOzs7V0FDSGIsU0FBTCxDQUFlUCxZQUFmO1dBQ0ttQixZQUFMLENBQWtCLEtBQUtqaUMsTUFBdkIsRUFBK0IsRUFBQ2tpQyxTQUFTLElBQVYsRUFBL0I7VUFDTWw2QixTQUFTLEtBQUttNkIsUUFBTCxJQUFrQjtlQUFRM2lDLE1BQVI7T0FBakM7YUFDTyxZQUFNO2VBQ055aUMsWUFBTCxDQUFrQixDQUFsQixFQUFxQixFQUFDQyxTQUFTLElBQVYsRUFBckI7ZUFDS2IsU0FBTCxDQUFlVCxhQUFmO09BRkY7Ozs7Ozs7Ozs7Ozs7OENBNEN3QjtVQUNsQndCLEtBQUssS0FBS0wsZUFBaEI7YUFDT0ssS0FBSyxDQUFMLElBQVVBLE1BQU0sS0FBS3BpQyxNQUE1Qjs7Ozs4QkFHUTRaLE9BQU95b0IsU0FBUztVQUNsQkMsWUFBWSxLQUFLQyxTQUFMLEVBQWxCOztXQUVLcDBDLFlBQUwsQ0FBa0IsT0FBbEIsRUFBMkJ5ckIsS0FBM0I7O1VBRUksQ0FBQ3lvQixPQUFELElBQVlDLGNBQWMsS0FBS0MsU0FBTCxFQUE5QixFQUFnRDthQUN6Qy80QixtQkFBTCxDQUF5QixJQUF6QixFQUErQixhQUEvQixFQUE4QztvQkFDbEMsSUFEa0M7aUJBRXJDb1EsS0FGcUM7cUJBR2pDMG9CO1NBSGI7Ozs7O2dDQVFRO2FBQ0gsS0FBS3Y2QyxZQUFMLENBQWtCLE9BQWxCLENBQVA7Ozs7Ozs7Ozs7Ozs7O3dDQWVrQjthQUNYLEtBQUt5NUMsWUFBTCxDQUFrQnpnQyxTQUF6Qjs7Ozs7Ozs7Ozs7Ozs7c0NBOEJnQjthQUNULEtBQUtoQyxZQUFMLENBQWtCLGVBQWxCLENBQVA7Ozs7NENBR3NCO1VBQ2xCLEtBQUt5akMsZUFBTCxFQUFKLEVBQTRCO2VBQ25CLElBQVA7T0FERixNQUVPO2VBQ0UsS0FBS2hCLFlBQVo7Ozs7OzRCQUlJO1dBQ0Q1L0IsS0FBTCxDQUFXQyxVQUFYLEdBQXdCLEVBQXhCOzs7OzRCQUdNO1dBQ0RELEtBQUwsQ0FBV0MsVUFBWCxHQUF3QixRQUF4Qjs7Ozs7Ozs7Ozs7aUNBUVd1cUIsUUFBc0I7OztVQUFkenZCLE9BQWMsdUVBQUosRUFBSTs7VUFDN0IsS0FBS2dsQyxtQkFBTCxJQUE0QixDQUE1QixJQUFpQ3ZWLFVBQVUsQ0FBL0MsRUFBa0Q7Ozs7VUFJNUM1c0IsT0FBTyxTQUFQQSxJQUFPLEdBQU07WUFDYjRzQixXQUFXLENBQWYsRUFBa0I7Y0FDVm5qQixLQUFLLE9BQUt3NUIscUJBQUwsRUFBWDswQkFDZ0J4NUIsRUFBaEI7OztZQUdFdE0sUUFBUTdDLFFBQVosRUFBc0I7a0JBQ1pBLFFBQVI7O09BUEo7O1dBV0s2bkMsbUJBQUwsR0FBMkJ2VixNQUEzQjs7VUFFSXp2QixRQUFRdWxDLE9BQVosRUFBcUI7ZUFDWixLQUFLTyxxQkFBTCxFQUFQLEVBQ0d4MEIsS0FESCxDQUNTO3FCQUNNLEtBQUt5MEIsNkJBQUwsQ0FBbUN0VyxNQUFuQztTQUZmLEVBR0s7b0JBQ1MsR0FEVDtrQkFFTztTQUxaLEVBT0dwZCxJQVBILENBT1F4UCxJQVBSO09BREYsTUFTTztlQUNFLEtBQUtpakMscUJBQUwsRUFBUCxFQUNHeDBCLEtBREgsQ0FDUztxQkFDTSxLQUFLeTBCLDZCQUFMLENBQW1DdFcsTUFBbkM7U0FGZixFQUlHcGQsSUFKSCxDQUlReFAsSUFKUjs7Ozs7dUNBUWU7O1dBQ1ptakMsaUJBQUwsR0FBeUIsSUFBekI7V0FDS0Msc0JBQUw7V0FDS0MscUJBQUw7Ozs7NENBR3NCO1dBQ2pCeFQsZ0JBQUwsR0FBd0IsSUFBSTlmLGVBQUosQ0FBb0IsS0FBS2l5QixZQUF6QixFQUF1Qzt5QkFDNUMsQ0FENEM7Z0NBRXJDLEtBRnFDO3dCQUc3QyxDQUFDLEtBQUttQjtPQUhBLENBQXhCOzs7Ozs7OztXQVlLdFQsZ0JBQUwsQ0FBc0IxZCxFQUF0QixDQUF5QixvQ0FBekIsRUFBK0QsS0FBS2djLFlBQXBFO1dBQ0swQixnQkFBTCxDQUFzQjFkLEVBQXRCLENBQXlCLFdBQXpCLEVBQXNDLEtBQUt3dkIsaUJBQTNDO1dBQ0s5UixnQkFBTCxDQUFzQjFkLEVBQXRCLENBQXlCLFNBQXpCLEVBQW9DLEtBQUtrYyxlQUF6Qzs7V0FFSzJULFlBQUwsQ0FBa0I5M0MsZ0JBQWxCLENBQW1DLFFBQW5DLEVBQTZDLEtBQUtzekMsY0FBbEQsRUFBa0UsS0FBbEU7Ozs7NkNBR3VCO1VBQ25CLEtBQUszTixnQkFBVCxFQUEyQjthQUNwQkEsZ0JBQUwsQ0FBc0J4ZCxHQUF0QixDQUEwQixvQ0FBMUIsRUFBZ0UsS0FBSzhiLFlBQXJFO2FBQ0swQixnQkFBTCxDQUFzQnhkLEdBQXRCLENBQTBCLFdBQTFCLEVBQXVDLEtBQUtzdkIsaUJBQTVDO2FBQ0s5UixnQkFBTCxDQUFzQnhkLEdBQXRCLENBQTBCLFNBQTFCLEVBQXFDLEtBQUtnYyxlQUExQzs7YUFFS3dCLGdCQUFMLENBQXNCeFYsT0FBdEI7YUFDS3dWLGdCQUFMLEdBQXdCLElBQXhCOzs7V0FHR21TLFlBQUwsQ0FBa0J2bkMsbUJBQWxCLENBQXNDLFFBQXRDLEVBQWdELEtBQUsraUMsY0FBckQsRUFBcUUsS0FBckU7Ozs7d0NBR2tCO1dBQ2IyRSxtQkFBTCxHQUEyQixDQUEzQjtXQUNLSCxZQUFMLEdBQW9CLEtBQUt2NkMsVUFBekI7O1dBRUs0N0MscUJBQUw7V0FDS0MsU0FBTDs7OzsyQ0FHcUI7V0FDaEJ0QixZQUFMLENBQWtCNS9CLEtBQWxCLENBQXdCMi9CLFNBQXhCLEdBQW9DLEVBQXBDOztXQUVLcUIsc0JBQUw7Ozs7NkNBT3VCbnVDLE1BQU1rSixNQUFNQyxTQUFTO1VBQ3hDbkosU0FBUyxRQUFiLEVBQXVCO2FBQ2hCcXVDLFNBQUw7Ozs7O3dCQXJQVzthQUNOLEtBQUtDLFNBQVo7O3NCQUdXcnhDLE9BQU87VUFDZCxFQUFFQSxpQkFBaUJwRyxRQUFuQixLQUFnQ29HLFVBQVUsSUFBOUMsRUFBb0Q7Y0FDNUMsSUFBSTNILEtBQUosQ0FBVSxxQ0FBVixDQUFOOztXQUVHZzVDLFNBQUwsR0FBaUJyeEMsS0FBakI7Ozs7c0JBb0JTQSxPQUFPO1VBQ1osQ0FBQ3VMLEtBQUttTyxTQUFMLENBQWUxWixLQUFmLENBQUwsRUFBNEI7Y0FDcEIsSUFBSTNILEtBQUosQ0FBVSwrQkFBVixDQUFOOzs7V0FHR29FLFlBQUwsQ0FBa0IsUUFBbEIsRUFBK0J1RCxLQUEvQjs7d0JBR1c7YUFDSjBGLFNBQVMsS0FBS3JQLFlBQUwsQ0FBa0IsUUFBbEIsS0FBK0IsSUFBeEMsRUFBOEMsRUFBOUMsQ0FBUDs7Ozs7Ozs7Ozs7OztzQkFVa0IySixPQUFPO1VBQ3JCLENBQUN1TCxLQUFLbU8sU0FBTCxDQUFlMVosS0FBZixDQUFMLEVBQTRCO2NBQ3BCLElBQUkzSCxLQUFKLENBQVUseUNBQVYsQ0FBTjs7O1dBR0dvRSxZQUFMLENBQWtCLGtCQUFsQixFQUF5Q3VELEtBQXpDOzt3QkFHb0I7YUFDYjBGLFNBQVMsS0FBS3JQLFlBQUwsQ0FBa0Isa0JBQWxCLEtBQXlDLElBQWxELEVBQXdELEVBQXhELENBQVA7Ozs7d0JBa0NVO2FBQ0gsS0FBS3c2QyxTQUFMLEVBQVA7Ozs7d0JBZWlCO2FBQ1YsS0FBS1osbUJBQVo7Ozs7Ozs7Ozs7Ozs7c0JBVVdqd0MsT0FBTzthQUNYdUwsS0FBSzBOLGVBQUwsQ0FBcUIsSUFBckIsRUFBMkIsVUFBM0IsRUFBdUNqWixLQUF2QyxDQUFQOzt3QkFHYTthQUNOLEtBQUtxTixZQUFMLENBQWtCLFVBQWxCLENBQVA7Ozs7d0JBcUg4QjthQUN2QixDQUFDLFFBQUQsQ0FBUDs7Ozt3QkFTeUI7YUFDbEI2aEMsYUFBUDs7Ozt3QkFHMkI7YUFDcEJDLGVBQVA7Ozs7d0JBR3dCO2FBQ2pCQyxZQUFQOzs7O3dCQUdrQjthQUNYLENBQUMsYUFBRCxDQUFQOzs7O0VBcGF5Q2hZOztBQXdhN0M1aUMsZUFBZWtHLE1BQWYsQ0FBc0IsZUFBdEIsRUFBdUM4MEMsZUFBdkM7O0FDbmVBOzs7Ozs7Ozs7Ozs7Ozs7OztBQWlCQSxBQUVBOzs7O0lBR004Qjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzRCQXdCSS81QixJQUFJZzZCLE9BQXVCO1VBQWhCNWxDLFFBQWdCLHVFQUFMLEdBQUs7O1VBQzdCZ0csUUFBUyxJQUFJK1MsSUFBSixFQUFELENBQWE4c0IsT0FBYixFQUFaO1VBQ0lDLFVBQVUsRUFEZDtVQUVJM3JCLFVBQVUsS0FGZDtVQUdJNHJCLE9BQU8sS0FIWDtVQUlJLytCLFVBQVUsS0FKZDtVQUtJeWdCLGFBQWFsNUIsT0FBT21TLElBQVAsQ0FBWWtsQyxLQUFaLENBTGpCOztVQU9JSSxlQUFlLFNBQWZBLFlBQWUsR0FBTTtZQUNuQnIzQyxJQUFJL0YsT0FBT3VrQixnQkFBUCxDQUF3QnZCLEVBQXhCLENBQVI7bUJBQ1c3SyxPQUFYLENBQW1CcFMsRUFBRXllLGdCQUFGLENBQW1CL2YsSUFBbkIsQ0FBd0JzQixDQUF4QixDQUFuQjtZQUNJaWQsR0FBR3ZILFlBQVA7T0FIRjs7VUFNSWxFLFNBQVM7Y0FDTCxnQkFBa0I7Y0FBakJiLE9BQWlCLHVFQUFQLEVBQU87O3FCQUNYMm1DLGFBQWFqL0IsT0FBYixDQUFYO2NBQ0k3ZCxJQUFJc0wsS0FBS21RLEdBQUwsQ0FBUyxDQUFULEVBQVksQ0FBRSxJQUFJbVUsSUFBSixFQUFELENBQWE4c0IsT0FBYixLQUF5QjcvQixLQUExQixJQUFtQ2hHLFFBQS9DLENBQVI7cUJBQ1dlLE9BQVgsQ0FBbUIsYUFBSztlQUNuQndELEtBQUgsQ0FBU3RYLENBQVQsSUFBYyxDQUFDLElBQUk5RCxDQUFMLElBQVUyOEMsUUFBUTc0QyxDQUFSLENBQVYsR0FBdUI5RCxJQUFJeThDLE1BQU0zNEMsQ0FBTixDQUEzQixJQUF1Q0EsS0FBSyxTQUFMLEdBQWlCLEVBQWpCLEdBQXNCLElBQTdELENBQWQ7V0FERjthQUdHc1gsS0FBSCxDQUFTMmhDLGtCQUFULEdBQThCLElBQTlCOztjQUVJNW1DLFFBQVE2bUMsUUFBWixFQUFzQjttQkFDYixLQUFQO1dBREYsTUFFTyxJQUFJLENBQUNoc0IsT0FBTCxFQUFjO3NCQUNULElBQVY7b0JBQ1E0ckIsTUFBUjs7aUJBRUs1bEMsTUFBUDtTQWZTO2NBaUJMLGNBQUNpbUMsRUFBRCxFQUFRO2lCQUNMQSxFQUFQO2NBQ0lqc0IsT0FBSixFQUFhO29CQUNINHJCLE1BQVI7O2lCQUVLNWxDLE1BQVA7U0F0QlM7ZUF3QkosZUFBQ2ttQyxXQUFELEVBQWlCO2NBQ2xCcHFDLFdBQVNDLE1BQVQsQ0FBZ0I2RCxrQkFBcEIsRUFBd0M7MEJBQ3hCLENBQWQ7O2NBRUUsQ0FBQ29hLE9BQUwsRUFBYzt1QkFDRDhyQixhQUFhai9CLE9BQWIsQ0FBWDs7Z0JBRU1zL0IsU0FBVSxJQUFJdnRCLElBQUosRUFBRCxDQUFhOHNCLE9BQWIsS0FBeUI3L0IsS0FBeEM7Z0JBQ083YyxJQUFJbTlDLFNBQVN0bUMsUUFBcEI7Z0JBQ011bUMsWUFBWUYsZUFBZSxJQUFJbDlDLENBQW5CLENBQWxCOzt1QkFFVzRYLE9BQVgsQ0FBbUIsYUFBSztpQkFDbkJ3RCxLQUFILENBQVN0WCxDQUFULElBQWMsQ0FBQyxJQUFJOUQsQ0FBTCxJQUFVMjhDLFFBQVE3NEMsQ0FBUixDQUFWLEdBQXVCOUQsSUFBSXk4QyxNQUFNMzRDLENBQU4sQ0FBM0IsSUFBdUNBLEtBQUssU0FBTCxHQUFpQixFQUFqQixHQUFzQixJQUE3RCxDQUFkO2FBREY7Ozs7b0JBTVEyZSxHQUFHNDZCLFdBQVg7dUJBQ1dELFNBQVg7O2VBRUdoaUMsS0FBSCxDQUFTMmhDLGtCQUFULEdBQThCbG1DLFdBQVcsSUFBWCxHQUFrQixHQUFoRDs7dUJBRVdlLE9BQVgsQ0FBbUIsYUFBSztpQkFDbkJ3RCxLQUFILENBQVN0WCxDQUFULElBQWMyNEMsTUFBTTM0QyxDQUFOLEtBQVlBLEtBQUssU0FBTCxHQUFpQixFQUFqQixHQUFzQixJQUFsQyxDQUFkO2FBREY7O3NCQUlVaWEsV0FBVy9HLE9BQU9zbUMsSUFBbEIsRUFBd0JGLFNBQXhCLENBQVY7O2lCQUVLcG1DLE1BQVA7U0FwRFM7Z0JBc0RILGtCQUF1QjtjQUF0QnVtQyxZQUFzQix1RUFBUCxFQUFPOztjQUN6QnY5QyxJQUFJLENBQUUsSUFBSTR2QixJQUFKLEVBQUQsQ0FBYThzQixPQUFiLEtBQXlCNy9CLEtBQTFCLElBQW1DaEcsUUFBM0M7O2lCQUVPMm1DLEtBQVAsQ0FBYUQsZ0JBQWdCLElBQUl2OUMsQ0FBcEIsQ0FBYjtpQkFDT2dYLE1BQVA7O09BMURKOztVQThESXlMLEdBQUdsSyxZQUFILENBQWdCLFVBQWhCLEtBQStCeVksT0FBL0IsSUFBMENsZSxXQUFTQyxNQUFULENBQWdCNkQsa0JBQTlELEVBQWtGO2VBQ3pFSSxNQUFQOzs7VUFHRW9FLFFBQVEzYixPQUFPdWtCLGdCQUFQLENBQXdCdkIsRUFBeEIsQ0FBWjtpQkFDVzdLLE9BQVgsQ0FBbUIsYUFBSztZQUNoQnZWLElBQUk4b0MsV0FBVy92QixNQUFNNkksZ0JBQU4sQ0FBdUJsakIsQ0FBdkIsQ0FBWCxDQUFWO2dCQUNRQSxDQUFSLElBQWEwYyxNQUFNcGIsQ0FBTixJQUFXLENBQVgsR0FBZUEsQ0FBNUI7T0FGRjs7VUFNSSxDQUFDMnVCLE9BQUwsRUFBYztXQUNUNVYsS0FBSCxDQUFTcWlDLGtCQUFULEdBQThCbmYsV0FBVzl6QixJQUFYLENBQWdCLEdBQWhCLENBQTlCO1dBQ0c0USxLQUFILENBQVMyaEMsa0JBQVQsR0FBOEJsbUMsV0FBVyxJQUFYLEdBQWtCLEdBQWhEOzttQkFFV2UsT0FBWCxDQUFtQixhQUFLO2FBQ25Cd0QsS0FBSCxDQUFTcmEsQ0FBVCxJQUFjMDdDLE1BQU0xN0MsQ0FBTixLQUFZQSxLQUFLLFNBQUwsR0FBaUIsRUFBakIsR0FBc0IsSUFBbEMsQ0FBZDtTQURGOzs7Z0JBS1FnZCxXQUFXL0csT0FBT3NtQyxJQUFsQixFQUF3QnptQyxRQUF4QixDQUFWO1dBQ0s2bUMsaUJBQUwsQ0FBdUJqN0IsRUFBdkIsRUFBMkJ6TCxPQUFPc21DLElBQWxDOzthQUVPdG1DLE1BQVA7Ozs7eUJBR1k7OztTQUNQMm1DLE1BQUwsR0FBYyxFQUFkO1NBQ0tDLE1BQUwsR0FBYyxDQUFkOzs7OztzQ0FHZ0JuN0IsSUFBSXNkLFVBQVU7VUFDMUJ0WSxRQUFRLEtBQUtrMkIsTUFBakI7VUFDSTc1QyxJQUFJLEtBQUs4NUMsTUFBTCxFQUFSO1lBQ01uN0IsRUFBTixJQUFZZ0YsTUFBTWhGLEVBQU4sS0FBYSxFQUF6QjtZQUNNQSxFQUFOLEVBQVUzZSxDQUFWLElBQWUsVUFBQ3FTLE9BQUQsRUFBYTtlQUNuQnNSLE1BQU1oRixFQUFOLEVBQVUzZSxDQUFWLENBQVA7WUFDSTJqQixNQUFNaEYsRUFBTixLQUFhZ0YsTUFBTWhGLEVBQU4sRUFBVWpnQixNQUFWLElBQW9CLENBQXJDLEVBQXdDO2lCQUMvQmlsQixNQUFNaEYsRUFBTixDQUFQOztlQUVLc2QsU0FBUzVwQixPQUFULENBQVA7T0FMRjs7Ozs7Ozs7Ozs7OzttQ0FnQmFzTSxJQUFrQjs7O1VBQWR0TSxPQUFjLHVFQUFKLEVBQUk7O1VBQzNCaE0sTUFBTWl2QixPQUFOLENBQWMzVyxFQUFkLENBQUosRUFBdUI7ZUFDZEEsR0FBRzdLLE9BQUgsQ0FBVyxjQUFNO2dCQUNqQmltQyxjQUFMLENBQW9CcDdCLEVBQXBCLEVBQXdCdE0sT0FBeEI7U0FESyxDQUFQOzs7T0FLRCxLQUFLd25DLE1BQUwsQ0FBWWw3QixFQUFaLEtBQW1CLEVBQXBCLEVBQXdCN0ssT0FBeEIsQ0FBZ0MsYUFBSztVQUFJekIsV0FBVyxFQUFiO09BQXZDOzs7Ozs7Ozs7Ozs7OEJBU29CO1VBQWRBLE9BQWMsdUVBQUosRUFBSTs7V0FDZjBuQyxjQUFMLENBQW9CejRDLE9BQU9tUyxJQUFQLENBQVksS0FBS29tQyxNQUFqQixDQUFwQixFQUE4Q3huQyxPQUE5Qzs7Ozs7Ozs7Ozs7O3lCQVNHc00sSUFBb0I7VUFBaEI1TCxRQUFnQix1RUFBTCxHQUFLOzthQUNoQixLQUFLNmtDLE9BQUwsQ0FBYWo1QixFQUFiLEVBQWlCLEVBQUMyaEIsU0FBUyxDQUFWLEVBQWpCLEVBQStCdnRCLFFBQS9CLENBQVA7Ozs7SUFLSjs7QUM3TUE7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBaUJBLEFBQ0EsQUFDQSxBQUNBLEFBQ0EsQUFFQSxJQUFNK3RCLHNCQUFtQixRQUF6Qjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUF5QnFCa1o7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzJCQXlCWjs7O21CQUNRLElBQWIsRUFBbUI7ZUFBTSxPQUFLdGEsUUFBTCxFQUFOO09BQW5COztXQUVLa1UsU0FBTCxHQUFpQixJQUFJbmhDLFdBQUosRUFBakI7O09BRUMsT0FBRCxFQUFVLFFBQVYsRUFBb0IsY0FBcEIsRUFBb0MsWUFBcEMsRUFBa0RxQixPQUFsRCxDQUEwRCxhQUFLO2VBQ3hEbFUsd0JBQUwsQ0FBOEIzQyxDQUE5QixFQUFpQyxJQUFqQyxFQUF1QyxPQUFLUSxZQUFMLENBQWtCUixDQUFsQixDQUF2QztPQURGOzs7OytCQUtTO1dBQ0orVyxTQUFMLENBQWVyVyxHQUFmLENBQW1CbWpDLG1CQUFuQjs7V0FFS21aLEtBQUwsR0FBYSxLQUFLQyxzQkFBTCxDQUE0QixjQUE1QixFQUE0QyxDQUE1QyxDQUFiO1dBQ0tDLFdBQUwsR0FBbUIsS0FBS0Qsc0JBQUwsQ0FBNEIsb0JBQTVCLEVBQWtELENBQWxELENBQW5COztVQUVJLEVBQUUsS0FBS0MsV0FBTCxJQUFvQixLQUFLRixLQUEzQixDQUFKLEVBQXVDO2FBQ2hDQSxLQUFMLEdBQWF0bkMsS0FBS2lMLE1BQUwsQ0FBWSxlQUFaLENBQWI7YUFDS3U4QixXQUFMLEdBQW1CeG5DLEtBQUtpTCxNQUFMLENBQVkscUJBQVosQ0FBbkI7O2FBRUs5YSxXQUFMLENBQWlCLEtBQUttM0MsS0FBdEI7YUFDS24zQyxXQUFMLENBQWlCLEtBQUtxM0MsV0FBdEI7Ozs7O3FDQUlhbDlDLEdBQUc7VUFDZDBCLENBQUosRUFBT0csQ0FBUCxFQUFVdkIsQ0FBVixFQUFhaUIsQ0FBYixFQUFnQlQsQ0FBaEI7VUFDSTVCLElBQUksS0FBS3VjLHFCQUFMLEVBQVI7VUFDSSxLQUFLMGhDLE9BQVQsRUFBa0I7WUFDWmorQyxFQUFFd2xDLEtBQUYsR0FBVSxDQUFkO1lBQ0l4bEMsRUFBRXVaLE1BQUYsR0FBVyxDQUFmO1lBQ0lsTyxLQUFLMGhCLElBQUwsQ0FBVXZxQixJQUFJQSxDQUFKLEdBQVFHLElBQUlBLENBQXRCLENBQUo7T0FIRixNQUlPO1lBQ0QsQ0FBQzdCLEVBQUVrckIsT0FBRixJQUFhbHJCLEVBQUVzdUIsY0FBRixDQUFpQixDQUFqQixFQUFvQnBELE9BQWxDLElBQTZDaHNCLEVBQUUwOEIsSUFBbkQ7WUFDSSxDQUFDNTdCLEVBQUVtckIsT0FBRixJQUFhbnJCLEVBQUVzdUIsY0FBRixDQUFpQixDQUFqQixFQUFvQm5ELE9BQWxDLElBQTZDanNCLEVBQUV3YyxHQUFuRDtZQUNJblIsS0FBS2tRLEdBQUwsQ0FBUzVZLENBQVQsRUFBWTNDLEVBQUV1WixNQUFGLEdBQVc1VyxDQUF2QixDQUFKO1lBQ0kwSSxLQUFLa1EsR0FBTCxDQUFTL1ksQ0FBVCxFQUFZeEMsRUFBRXdsQyxLQUFGLEdBQVVoakMsQ0FBdEIsQ0FBSjtZQUNJNkksS0FBSzBoQixJQUFMLENBQVUzckIsSUFBSUEsQ0FBSixHQUFRaUIsSUFBSUEsQ0FBdEIsQ0FBSjs7YUFFSyxFQUFDRyxJQUFELEVBQUlHLElBQUosRUFBT2YsSUFBUCxFQUFQOzs7O3FDQUdlZCxHQUFtQjtVQUFoQjhWLFFBQWdCLHVFQUFMLEdBQUs7O1VBRS9CNmdDLFNBRitCLEdBRVMsSUFGVCxDQUUvQkEsU0FGK0I7VUFFcEJxRyxLQUZvQixHQUVTLElBRlQsQ0FFcEJBLEtBRm9CO1VBRWJFLFdBRmEsR0FFUyxJQUZULENBRWJBLFdBRmE7VUFFQUUsS0FGQSxHQUVTLElBRlQsQ0FFQUEsS0FGQTs4QkFHcEIsS0FBS0MsZ0JBQUwsQ0FBc0JyOUMsQ0FBdEIsQ0FIb0I7VUFHL0IwQixDQUgrQixxQkFHL0JBLENBSCtCO1VBRzVCRyxDQUg0QixxQkFHNUJBLENBSDRCO1VBR3pCZixDQUh5QixxQkFHekJBLENBSHlCOztnQkFLeEJ3OEMsT0FBVixDQUFrQixFQUFDckIsVUFBVSxDQUFYLEVBQWxCO2dCQUNVdEIsT0FBVixDQUFrQnVDLFdBQWxCLEVBQStCLEVBQUM3WixTQUFTLENBQVYsRUFBL0IsRUFBNkN2dEIsUUFBN0M7O1dBRUtILE1BQUwsQ0FBWXFuQyxNQUFNM2lDLEtBQWxCLEVBQXlCO2lCQUNkLENBRGM7YUFFbEJ4WSxJQUFJdTdDLEtBQUosR0FBWSxJQUZNO2NBR2pCMTdDLElBQUkwN0MsS0FBSixHQUFZLElBSEs7ZUFJaEIsSUFBSUEsS0FBSixHQUFZLElBSkk7Z0JBS2YsSUFBSUEsS0FBSixHQUFZO09BTHRCOzthQVFPekcsVUFBVWdFLE9BQVYsQ0FBa0JxQyxLQUFsQixFQUF5QjthQUN6Qm43QyxJQUFJZixDQURxQjtjQUV4QlksSUFBSVosQ0FGb0I7Z0JBR3RCLElBQUlBLENBSGtCO2VBSXZCLElBQUlBO09BSk4sRUFLSmdWLFFBTEksQ0FBUDs7OztvQ0FRYztVQUNWLENBQUMsS0FBS2tOLGNBQU4sSUFBd0IsS0FBS3RqQixVQUFqQyxFQUE2QztZQUNyQzY5QyxnQkFBZ0I3K0MsT0FBT3VrQixnQkFBUCxDQUF3QixLQUFLdmpCLFVBQTdCLENBQXRCO1lBQ0k2OUMsY0FBY3I2QixnQkFBZCxDQUErQixVQUEvQixNQUErQyxRQUFuRCxFQUE2RDtlQUN0RHhqQixVQUFMLENBQWdCMmEsS0FBaEIsQ0FBc0I4SSxRQUF0QixHQUFpQyxVQUFqQzs7YUFFR0gsY0FBTCxHQUFzQixJQUF0Qjs7Ozs7MkJBSUdoakIsR0FBRzs7O1VBQ0osQ0FBQyxLQUFLazZDLFFBQVYsRUFBb0I7YUFDYnNELGFBQUw7YUFDS0MsZ0JBQUwsQ0FBc0J6OUMsRUFBRTZwQixPQUFGLENBQVVrRixRQUFoQyxFQUEwQ3phLElBQTFDLENBQStDLFlBQU07aUJBQzlDcWlDLFNBQUwsQ0FBZVYsSUFBZixDQUFvQixPQUFLK0csS0FBekI7aUJBQ0tyRyxTQUFMLENBQWVWLElBQWYsQ0FBb0IsT0FBS2lILFdBQXpCO1NBRkY7Ozs7OzRCQU9JbDlDLEdBQUc7VUFDTCxDQUFDLEtBQUtrNkMsUUFBVixFQUFvQjthQUNic0QsYUFBTDthQUNLRSxRQUFMLEdBQWdCLEtBQUtELGdCQUFMLENBQXNCejlDLEVBQUU2cEIsT0FBRixDQUFVa0YsUUFBaEMsRUFBMEMsSUFBMUMsQ0FBaEI7aUJBQ1M1c0IsZ0JBQVQsQ0FBMEIsU0FBMUIsRUFBcUMsS0FBS3c3QyxlQUExQzs7Ozs7K0JBSU8zOUMsR0FBRzs7O1VBQ1IsS0FBSzA5QyxRQUFULEVBQW1CO2FBQ1pBLFFBQUwsQ0FBY2pCLEtBQWQsQ0FBb0IsR0FBcEIsRUFBeUJub0MsSUFBekIsQ0FBOEIsWUFBTTtpQkFDN0JxaUMsU0FBTCxDQUFlMkcsT0FBZixDQUF1QixFQUFDckIsVUFBVSxJQUFYLEVBQXZCO2lCQUNLdEYsU0FBTCxDQUFlVixJQUFmLENBQW9CLE9BQUsrRyxLQUF6QjtpQkFDS3JHLFNBQUwsQ0FBZVYsSUFBZixDQUFvQixPQUFLaUgsV0FBekI7U0FIRjs7YUFNS1EsUUFBTCxHQUFnQixLQUFoQjs7O2VBR09ockMsbUJBQVQsQ0FBNkIsU0FBN0IsRUFBd0MsS0FBS2lyQyxlQUE3Qzs7OztpQ0FHVzM5QyxHQUFHO1VBQ1YsS0FBSzA5QyxRQUFULEVBQW1CO2VBQ1YsS0FBS2pSLFVBQUwsQ0FBZ0J6c0MsQ0FBaEIsQ0FBUDs7VUFFRSxDQUFDLE1BQUQsRUFBUyxPQUFULEVBQWtCZ0QsT0FBbEIsQ0FBMEJoRCxFQUFFNnBCLE9BQUYsQ0FBVXdDLFNBQXBDLEtBQWtELENBQUMsQ0FBdkQsRUFBMEQ7YUFDbkR1eEIsTUFBTCxDQUFZNTlDLENBQVo7Ozs7O3dDQUlnQjtXQUNiNjlDLFdBQUwsR0FBbUIsS0FBS24rQyxVQUF4QjtXQUNLbytDLFdBQUwsR0FBbUIsS0FBS0YsTUFBTCxDQUFZejZDLElBQVosQ0FBaUIsSUFBakIsQ0FBbkI7V0FDSzQ2QyxZQUFMLEdBQW9CLEtBQUtDLE9BQUwsQ0FBYTc2QyxJQUFiLENBQWtCLElBQWxCLENBQXBCO1dBQ0t5MkMsaUJBQUwsR0FBeUIsS0FBS0MsWUFBTCxDQUFrQjEyQyxJQUFsQixDQUF1QixJQUF2QixDQUF6QjtXQUNLdzZDLGVBQUwsR0FBdUIsS0FBS2xSLFVBQUwsQ0FBZ0J0cEMsSUFBaEIsQ0FBcUIsSUFBckIsQ0FBdkI7O1VBRUk0TyxXQUFTQyxNQUFULENBQWdCNkQsa0JBQXBCLEVBQXdDO2FBQ2pDcWtDLFFBQUwsR0FBZ0IsSUFBaEI7T0FERixNQUVPO2FBQ0EyRCxXQUFMLENBQWlCMTdDLGdCQUFqQixDQUFrQyxLQUFsQyxFQUF5QyxLQUFLMjdDLFdBQTlDO2FBQ0tELFdBQUwsQ0FBaUIxN0MsZ0JBQWpCLENBQWtDLE1BQWxDLEVBQTBDLEtBQUs0N0MsWUFBL0M7YUFDS0YsV0FBTCxDQUFpQjE3QyxnQkFBakIsQ0FBa0MsV0FBbEMsRUFBK0MsS0FBS3kzQyxpQkFBcEQ7Ozs7OzJDQUltQjtVQUNmcUUsS0FBSyxLQUFLSixXQUFMLElBQW9CLEtBQUtuK0MsVUFBcEM7U0FDR2dULG1CQUFILENBQXVCLEtBQXZCLEVBQThCLEtBQUtvckMsV0FBbkM7U0FDR3ByQyxtQkFBSCxDQUF1QixNQUF2QixFQUErQixLQUFLcXJDLFlBQXBDO1NBQ0dyckMsbUJBQUgsQ0FBdUIsV0FBdkIsRUFBb0MsS0FBS2tuQyxpQkFBekM7Ozs7NkNBT3VCMXNDLE1BQU1rSixNQUFNQyxTQUFTOzs7Y0FDcENuSixJQUFSOzthQUVPLE9BQUw7Y0FDTSxDQUFDLEtBQUs2SixTQUFMLENBQWVzdEIsUUFBZixDQUF3QlIsbUJBQXhCLENBQUwsRUFBZ0Q7aUJBQ3pDampCLFNBQUwsR0FBaUJpakIsc0JBQW1CLEdBQW5CLEdBQXlCeHRCLE9BQTFDOzs7O2FBSUMsY0FBTDtlQUNPK21DLEtBQUwsR0FBYTd5QyxLQUFLa1EsR0FBTCxDQUFTLENBQVQsRUFBWTJ2QixXQUFXL3pCLE9BQVgsS0FBdUIsQ0FBbkMsQ0FBYjs7O2FBR0csT0FBTDtjQUNNQSxPQUFKLEVBQWE7eUJBQ0UsSUFBYixFQUFtQixZQUFNO3FCQUNsQjJtQyxLQUFMLENBQVczaUMsS0FBWCxDQUFpQisyQixVQUFqQixHQUE4Qi82QixPQUE5QjtrQkFDSSxDQUFDLE9BQUttQixZQUFMLENBQWtCLFlBQWxCLENBQUwsRUFBc0M7dUJBQy9CMGxDLFdBQUwsQ0FBaUI3aUMsS0FBakIsQ0FBdUIrMkIsVUFBdkIsR0FBb0MvNkIsT0FBcEM7O2FBSEo7Ozs7YUFTQyxZQUFMO2NBQ01BLFdBQVdELElBQWYsRUFBcUI7Z0JBQ2ZDLFlBQVksTUFBaEIsRUFBd0I7MkJBQ1QsSUFBYixFQUFtQixZQUFNO3VCQUNsQjZtQyxXQUFMLENBQWlCdDJDLFlBQWpCLENBQThCLFVBQTlCLEVBQTBDLFVBQTFDO3VCQUNLczJDLFdBQUwsQ0FBaUI3aUMsS0FBakIsQ0FBdUIrMkIsVUFBdkIsR0FBb0MsYUFBcEM7ZUFGRjthQURGLE1BS087MkJBQ1EsSUFBYixFQUFtQixZQUFNO29CQUNuQixPQUFLOEwsV0FBTCxDQUFpQjFsQyxZQUFqQixDQUE4QixVQUE5QixDQUFKLEVBQStDO3lCQUN4QzBsQyxXQUFMLENBQWlCcDJDLGVBQWpCLENBQWlDLFVBQWpDOzt1QkFFR28yQyxXQUFMLENBQWlCN2lDLEtBQWpCLENBQXVCKzJCLFVBQXZCLEdBQW9DLzZCLE9BQXBDO2VBSkY7Ozs7O2FBVUQsUUFBTDtjQUNNbkosU0FBUyxRQUFiLEVBQXVCO2lCQUNoQml3QyxPQUFMLEdBQWU5bUMsV0FBVyxJQUFYLElBQW1CQSxXQUFXLE9BQTdDOzs7Ozs7Ozs7Ozs7Ozs7OztzQkFjS2xNLE9BQU87YUFDWHVMLEtBQUswTixlQUFMLENBQXFCLElBQXJCLEVBQTJCLFVBQTNCLEVBQXVDalosS0FBdkMsQ0FBUDs7d0JBR2E7YUFDTixLQUFLcU4sWUFBTCxDQUFrQixVQUFsQixDQUFQOzs7O3dCQW5FOEI7YUFDdkIsQ0FBQyxjQUFELEVBQWlCLE9BQWpCLEVBQTBCLFlBQTFCLEVBQXdDLFFBQXhDLEVBQWtELE9BQWxELENBQVA7Ozs7RUF0S3VDK3BCOztBQTRPM0M1aUMsZUFBZWtHLE1BQWYsQ0FBc0IsWUFBdEIsRUFBb0NrNEMsYUFBcEM7O0FDNVJBOzs7Ozs7Ozs7Ozs7Ozs7OztBQWlCQSxBQUVBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBK0JxQm1COzs7Ozs7Ozs7RUFBbUIzYzs7QUFHeEM1aUMsZUFBZWtHLE1BQWYsQ0FBc0IsU0FBdEIsRUFBaUNxNUMsVUFBakM7O0FDckRBOzs7Ozs7Ozs7Ozs7Ozs7OztBQWlCQSxBQUNBLEFBQ0EsQUFDQSxBQUNBLEFBRUEsSUFBTWhuQyxZQUFTO01BQ1QsVUFEUzttQkFFSTtDQUZuQjs7QUFLQSxJQUFNMnNCLHNCQUFtQixRQUF6Qjs7QUFFQSxJQUFNeUoscUJBQW1CLENBQ3ZCLFdBRHVCLEVBRXZCLFVBRnVCLEVBR3ZCLE1BSHVCLEVBSXZCLFVBSnVCLEVBS3ZCLE1BTHVCLEVBTXZCLFVBTnVCLEVBT3ZCLE1BUHVCLENBQXpCOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztJQXdDcUI2UTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7MkJBc0VaOzs7bUJBQ1EsSUFBYixFQUFtQixZQUFNO2VBQ2xCMWIsUUFBTDtPQURGOzs7OzZDQVN1QnYxQixNQUFNa0osTUFBTUMsU0FBUzs7O2NBQ3BDbkosSUFBUjthQUNPLE9BQUw7Y0FDTSxDQUFDLEtBQUs2SixTQUFMLENBQWVzdEIsUUFBZixDQUF3QlIsbUJBQXhCLENBQUwsRUFBZ0Q7aUJBQ3pDampCLFNBQUwsR0FBaUJpakIsc0JBQW1CLEdBQW5CLEdBQXlCeHRCLE9BQTFDOzs7YUFHQyxVQUFMO3VCQUNlc3RCLGlCQUFiLENBQStCdnRCLElBQS9CLEVBQXFDQyxPQUFyQyxFQUE4QyxJQUE5QyxFQUFvRGEsU0FBcEQ7Ozs7VUFJQW8yQixtQkFBaUJ0cUMsT0FBakIsQ0FBeUJrSyxJQUF6QixLQUFrQyxDQUF0QyxFQUF5QztxQkFDMUIsSUFBYixFQUFtQjtpQkFBTSxPQUFLK2dDLHNCQUFMLEVBQU47U0FBbkI7Ozs7OzZDQVlxQjs7O3lCQUNOcDNCLE9BQWpCLENBQXlCLFVBQUNzekIsSUFBRCxFQUFVO1lBQzdCLE9BQUszeUIsWUFBTCxDQUFrQjJ5QixJQUFsQixDQUFKLEVBQTZCO2lCQUN0QmlVLE9BQUwsQ0FBYXgzQyxZQUFiLENBQTBCdWpDLElBQTFCLEVBQWdDLE9BQUszcEMsWUFBTCxDQUFrQjJwQyxJQUFsQixDQUFoQztTQURGLE1BR0s7aUJBQ0VpVSxPQUFMLENBQWF0M0MsZUFBYixDQUE2QnFqQyxJQUE3Qjs7T0FMSjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OytCQXFDUzs7O2dCQUNDbEssT0FBVixDQUFrQixJQUFsQjs7V0FFS2xwQixTQUFMLENBQWVyVyxHQUFmLENBQW1CbWpDLG1CQUFuQjtVQUNNd2EsTUFBTSxLQUFLRCxPQUFMLElBQWdCdDZDLFNBQVNtQixhQUFULENBQXVCLFFBQXZCLENBQTVCO1VBQ0ksQ0FBQ281QyxJQUFJcnlDLEVBQUwsSUFBVyxLQUFLd0wsWUFBTCxDQUFrQixXQUFsQixDQUFmLEVBQStDO1lBQ3pDeEwsRUFBSixHQUFTLEtBQUt4TCxZQUFMLENBQWtCLFdBQWxCLENBQVQ7O1VBRUV1VyxTQUFKLENBQWNyVyxHQUFkLENBQWtCLGNBQWxCO1VBQ0ksQ0FBQyxLQUFLMDlDLE9BQVYsRUFBbUI7YUFDWmo5QixTQUFMLENBQWUsS0FBS2hZLFVBQXBCLEVBQWdDME4sT0FBaEMsQ0FBd0M7aUJBQVd3bkMsSUFBSXg0QyxXQUFKLENBQWdCb1IsT0FBaEIsQ0FBWDtTQUF4QzthQUNLcFIsV0FBTCxDQUFpQnc0QyxHQUFqQjs7O21CQUdXcGIsWUFBYixDQUEwQixJQUExQixFQUFnQy9yQixTQUFoQzs7aUJBRWtCLENBQUMsVUFBRCxFQUFhLFFBQWIsRUFBdUIsVUFBdkIsRUFBbUMsTUFBbkMsRUFBMkMsU0FBM0MsRUFBc0QsZUFBdEQsRUFBdUUsTUFBdkUsRUFBK0UsT0FBL0UsQ0FoQlQ7OztZQWdCRXJMLGNBQU47ZUFDRXl5QyxnQkFBTCxDQUFzQnp5QyxHQUF0QixFQUEyQixZQUFNO2lCQUN4QixPQUFLdXlDLE9BQUwsQ0FBYXZ5QyxHQUFiLENBQVA7U0FERjtlQUdLMHlDLGdCQUFMLENBQXNCMXlDLEdBQXRCLEVBQTJCLFVBQUMxQixLQUFELEVBQVc7aUJBQy9CaTBDLE9BQUwsQ0FBYXZ5QyxHQUFiLElBQW9CMUIsS0FBcEI7U0FERjs7OytDQUp5Rzs7O1dBUXRHbTBDLGdCQUFMLENBQXNCLE1BQXRCLEVBQThCLFlBQU07ZUFDM0IsT0FBS0YsT0FBTCxDQUFhLE1BQWIsQ0FBUDtPQURGO1dBR0tFLGdCQUFMLENBQXNCLE1BQXRCLEVBQThCLFlBQU07ZUFDM0IsT0FBS0YsT0FBTCxDQUFhLE1BQWIsQ0FBUDtPQURGOztXQUlLMTlDLEdBQUwsR0FBVyxVQUFDODlDLE1BQUQsRUFBMEI7WUFBakIvbUMsS0FBaUIsdUVBQVQsSUFBUzs7ZUFDOUIybUMsT0FBTCxDQUFhMTlDLEdBQWIsQ0FBaUI4OUMsTUFBakIsRUFBeUIvbUMsS0FBekI7T0FERjtXQUdLelAsTUFBTCxHQUFjLFVBQUN5UCxLQUFELEVBQVc7ZUFDbEIybUMsT0FBTCxDQUFhcDJDLE1BQWIsQ0FBb0J5UCxLQUFwQjtPQURGOzs7O3dCQWhGWTthQUNMLEtBQUt1RyxhQUFMLENBQW1CLFFBQW5CLENBQVA7Ozs7d0JBdEI4QjtjQUN0QixVQUFSLEVBQW9CLE9BQXBCLFNBQWdDc3ZCLGtCQUFoQzs7Ozt3QkF3QmtCO2FBQ1gsQ0FBQyxRQUFELENBQVA7Ozs7RUF0R3VDL0w7O0FBdUwzQzVpQyxlQUFla0csTUFBZixDQUFzQixZQUF0QixFQUFvQ3M1QyxhQUFwQzs7QUM3UEE7Ozs7Ozs7Ozs7Ozs7QUFhQSxBQUNBLEFBQ0EsQUFDQSxBQUVBLElBQU10YSxzQkFBbUIsZ0NBQXpCOztBQUVBLElBQU0zc0IsWUFBUztNQUNUO0NBRE47Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFnQ3FCdW5DOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsyQkFVWjtXQUNBaGMsUUFBTDtXQUNLdUIsYUFBTCxHQUFxQixLQUFLQyxRQUFMLENBQWM5Z0MsSUFBZCxDQUFtQixJQUFuQixDQUFyQjs7Ozs2Q0FPdUIrSixNQUFNa0osTUFBTUMsU0FBUztjQUNwQ25KLElBQVI7YUFDTyxPQUFMO2VBQ093eEMsZ0JBQUwsQ0FBc0Jyb0MsT0FBdEI7O2FBRUcsVUFBTDt1QkFDZXN0QixpQkFBYixDQUErQnZ0QixJQUEvQixFQUFxQ0MsT0FBckMsRUFBOEMsSUFBOUMsRUFBb0RhLFNBQXBEOzthQUVHLFFBQUw7ZUFDT3N0QixhQUFMOzs7OztxQ0FJVzVqQixXQUFXOzs7VUFDdEIsQ0FBQ2lqQixvQkFBaUI3a0MsS0FBakIsQ0FBdUIsS0FBdkIsRUFBOEIyL0MsS0FBOUIsQ0FBb0MsaUJBQVM7ZUFDekMsT0FBSzVuQyxTQUFMLENBQWVzdEIsUUFBZixDQUF3QnR6QixLQUF4QixDQUFQO09BREcsQ0FBTCxFQUVJO2FBQ0c2UCxTQUFMLEdBQWlCaWpCLHNCQUFtQixHQUFuQixHQUF5QmpqQixTQUExQzs7Ozs7d0NBSWdCO1dBQ2J6ZSxnQkFBTCxDQUFzQixPQUF0QixFQUErQixLQUFLNmhDLGFBQXBDLEVBQW1ELEtBQW5EOzs7OzJDQUdxQjtXQUNoQnR4QixtQkFBTCxDQUF5QixPQUF6QixFQUFrQyxLQUFLc3hCLGFBQXZDLEVBQXNELEtBQXREOzs7O29DQUdjO1dBQ1R0Z0IsWUFBTCxDQUFrQixJQUFsQjs7Ozs2QkFHTzFqQixHQUFHO1FBQ1I2a0IsZUFBRjs7OzsrQkFHUzs7O2dCQUNDb2IsT0FBVixDQUFrQixJQUFsQjs7MEJBRWlCamhDLEtBQWpCLENBQXVCLEtBQXZCLEVBQThCNlgsT0FBOUIsQ0FBc0MsaUJBQVM7ZUFDeENFLFNBQUwsQ0FBZXJXLEdBQWYsQ0FBbUJxUSxLQUFuQjtPQURGOztXQUlLeXpCLGFBQUw7O21CQUVhdkIsWUFBYixDQUEwQixJQUExQixFQUFnQy9yQixTQUFoQzs7Ozt3QkFsRDhCO2FBQ3ZCLENBQUMsVUFBRCxFQUFhLFFBQWIsRUFBdUIsT0FBdkIsQ0FBUDs7OztFQWhCOENxcUI7O0FBcUVsRDVpQyxlQUFla0csTUFBZixDQUFzQixxQkFBdEIsRUFBNkM0NUMsb0JBQTdDOztBQ3pIQTs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFpQkEsQUFFQTs7O0FBR0EsSUFBTUcsU0FBUyxTQUFUQSxNQUFTLENBQVMzbkMsT0FBVCxFQUFrQm9ELEtBQWxCLEVBQXlCO1NBQy9CdWtDLE9BQU9qNEIsR0FBUCxDQUFXL2QsS0FBWCxDQUFpQmcyQyxNQUFqQixFQUF5Qm4yQyxTQUF6QixDQUFQO0NBREY7Ozs7Ozs7OztBQVdBbTJDLE9BQU9qNEIsR0FBUCxHQUFhLFVBQVMxUCxPQUFULEVBQWtCaU8sTUFBbEIsRUFBMEI7TUFDakMxTyxPQUFPblMsT0FBT21TLElBQVAsQ0FBWTBPLE1BQVosQ0FBWDtPQUNLck8sT0FBTCxDQUFhLFVBQVNoTCxHQUFULEVBQWM7UUFDckJBLE9BQU9vTCxRQUFRb0QsS0FBbkIsRUFBMEI7Y0FDaEJBLEtBQVIsQ0FBY3hPLEdBQWQsSUFBcUJxWixPQUFPclosR0FBUCxDQUFyQjtLQURGLE1BRU8sSUFBSSt5QyxPQUFPQyxPQUFQLENBQWVoekMsR0FBZixLQUF1Qm9MLFFBQVFvRCxLQUFuQyxFQUEwQztjQUN2Q0EsS0FBUixDQUFjdWtDLE9BQU9DLE9BQVAsQ0FBZWh6QyxHQUFmLENBQWQsSUFBcUNxWixPQUFPclosR0FBUCxDQUFyQztLQURLLE1BRUE7V0FDQS9CLElBQUwsQ0FBVSw2QkFBNkIrQixHQUF2Qzs7R0FOSjtTQVNPb0wsT0FBUDtDQVhGOzs7Ozs7OztBQW9CQTJuQyxPQUFPQyxPQUFQLEdBQWtCLFlBQVc7TUFDdkIzNUIsU0FBU3htQixPQUFPdWtCLGdCQUFQLENBQXdCbmYsU0FBU3djLGVBQWpDLEVBQWtELEVBQWxELENBQWI7TUFDSXcrQixTQUFTLENBQUMxMUMsTUFBTXZHLFNBQU4sQ0FBZ0J5RyxLQUFoQixDQUNYeEcsSUFEVyxDQUNOb2lCLE1BRE0sRUFFWHpiLElBRlcsQ0FFTixFQUZNLEVBR1hzRyxLQUhXLENBR0wsbUJBSEssS0FHb0JtVixPQUFPSyxLQUFQLEtBQWlCLEVBQWpCLElBQXVCLENBQUMsRUFBRCxFQUFLLEdBQUwsQ0FINUMsRUFJWCxDQUpXLENBQWI7O1NBTU8sVUFBU3JZLElBQVQsRUFBZTtXQUNiNHhDLFNBQVM1eEMsS0FBS2tZLE1BQUwsQ0FBWSxDQUFaLEVBQWUsQ0FBZixFQUFrQjdCLFdBQWxCLEVBQVQsR0FBMkNyVyxLQUFLa1ksTUFBTCxDQUFZLENBQVosQ0FBbEQ7R0FERjtDQVJlLEVBQWpCOzs7OztBQWdCQXc1QixPQUFPRyxLQUFQLEdBQWUsVUFBUzluQyxPQUFULEVBQWtCO1NBQ3hCK25DLE1BQVAsQ0FBYy9uQyxPQUFkO0NBREY7Ozs7O0FBT0EybkMsT0FBT0ksTUFBUCxHQUFnQixVQUFTL25DLE9BQVQsRUFBa0I7TUFDNUJrUSxNQUFNbFEsUUFBUW9ELEtBQVIsQ0FBYzVZLE1BQXhCO01BQ0k0WSxRQUFRcEQsUUFBUW9ELEtBQXBCO01BQ0k3RCxPQUFPLEVBQVg7T0FDSyxJQUFJelQsSUFBSSxDQUFiLEVBQWdCQSxJQUFJb2tCLEdBQXBCLEVBQXlCcGtCLEdBQXpCLEVBQThCO1NBQ3ZCMUIsSUFBTCxDQUFVZ1osTUFBTXRYLENBQU4sQ0FBVjs7O09BR0c4VCxPQUFMLENBQWEsVUFBU2hMLEdBQVQsRUFBYztVQUNuQkEsR0FBTixJQUFhLEVBQWI7R0FERjtDQVJGLENBYUE7O0FDekZBOzs7Ozs7Ozs7Ozs7O0FBYUEsQUFDQSxBQUNBLEFBQ0EsQUFDQSxBQUNBLEFBRUEsSUFBTWc0QixzQkFBbUIsWUFBekI7QUFDQSxJQUFNM3NCLFlBQVM7TUFDVDtDQUROOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBZ0NxQituQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsyQkF5RFo7OzttQkFDUSxJQUFiLEVBQW1CLFlBQU07ZUFDbEJ4YyxRQUFMO09BREY7O1dBSUt5YyxVQUFMLEdBQWtCLEtBQWxCO1dBQ0tsYixhQUFMLEdBQXFCLEtBQUtDLFFBQUwsQ0FBYzlnQyxJQUFkLENBQW1CLElBQW5CLENBQXJCOzs7OytCQUdTO1dBQ0o0VCxTQUFMLENBQWVyVyxHQUFmLENBQW1CbWpDLG1CQUFuQjtnQkFDVTVELE9BQVYsQ0FBa0IsSUFBbEI7V0FDS3VFLGFBQUw7bUJBQ2F2QixZQUFiLENBQTBCLElBQTFCLEVBQWdDL3JCLFNBQWhDOztVQUVJLEtBQUtNLFlBQUwsQ0FBa0IsV0FBbEIsQ0FBSixFQUFvQzthQUM3QjJuQyxnQkFBTCxDQUFzQixLQUFLMytDLFlBQUwsQ0FBa0IsV0FBbEIsQ0FBdEI7T0FERixNQUVPO2FBQ0EyK0MsZ0JBQUwsQ0FBc0IsSUFBdEI7OztXQUdHamYsZUFBTDs7Ozs2Q0FPdUJoekIsTUFBTWtKLE1BQU1DLFNBQVM7OztjQUNwQ25KLElBQVI7YUFDTyxPQUFMO2NBQ00sQ0FBQyxLQUFLNkosU0FBTCxDQUFlc3RCLFFBQWYsQ0FBd0JSLG1CQUF4QixDQUFMLEVBQWdEO2lCQUN6Q2pqQixTQUFMLEdBQWlCaWpCLHNCQUFtQixHQUFuQixHQUF5Qnh0QixPQUExQzs7O2FBR0MsVUFBTDt1QkFDZXN0QixpQkFBYixDQUErQnZ0QixJQUEvQixFQUFxQ0MsT0FBckMsRUFBOEMsSUFBOUMsRUFBb0RhLFNBQXBEOzthQUVHLFFBQUw7dUJBQ2UsSUFBYixFQUFtQjttQkFBTSxPQUFLc3RCLGFBQUwsRUFBTjtXQUFuQjs7YUFFRyxXQUFMO3VCQUNlLElBQWIsRUFBbUI7bUJBQU0sT0FBSzJhLGdCQUFMLENBQXNCOW9DLE9BQXRCLENBQU47V0FBbkI7O2FBRUcsVUFBTDt1QkFDZSxJQUFiLEVBQW1CO21CQUFNLE9BQUs2cEIsZUFBTCxFQUFOO1dBQW5COzs7Ozs7d0NBS2M7V0FDYi85QixnQkFBTCxDQUFzQixPQUF0QixFQUErQixLQUFLNmhDLGFBQXBDLEVBQW1ELEtBQW5EOzs7OzJDQUdxQjtXQUNoQnR4QixtQkFBTCxDQUF5QixPQUF6QixFQUFrQyxLQUFLc3hCLGFBQXZDLEVBQXNELEtBQXREOzs7OzZCQVdPaGtDLEdBQUc7VUFDTixLQUFLbWtDLE9BQVQsRUFBa0I7YUFDWEEsT0FBTCxDQUFhdjdCLEtBQWIsQ0FBbUIsSUFBbkI7ZUFDT2pGLFFBQVE0UCxPQUFSLEVBQVA7T0FGRixNQUdPLElBQUksQ0FBQyxLQUFLMm1DLFFBQU4sSUFBa0IsS0FBS2pnQixPQUEzQixFQUFvQztlQUNsQyxLQUFLbWxCLFdBQUwsRUFBUDs7Ozs7NEJBSUk7VUFDRixDQUFDLEtBQUtDLE1BQVYsRUFBa0I7ZUFDVCxLQUFLcm5CLElBQUwsRUFBUDs7YUFFS3IwQixRQUFRNFAsT0FBUixFQUFQOzs7OzRCQUdNOzs7YUFDQyxJQUFJNVAsT0FBSixDQUFZLG1CQUFXO1lBQ3hCLENBQUMsT0FBSzA3QyxNQUFWLEVBQWtCO3VCQUNIO21CQUFNLE9BQUt6eUMsSUFBTCxHQUFZMEgsSUFBWixDQUFpQmYsT0FBakIsQ0FBTjtXQUFiO1NBREYsTUFFTzs7O09BSEYsQ0FBUDs7OztvQ0FTYztVQUNWLEtBQUsrckMsSUFBVCxFQUFlO2FBQ1I5bkMsWUFBTCxDQUFrQixRQUFsQixJQUE4QixLQUFLOG5DLElBQUwsQ0FBVTE0QyxZQUFWLENBQXVCLFFBQXZCLEVBQWlDLEVBQWpDLENBQTlCLEdBQXFFLEtBQUswNEMsSUFBTCxDQUFVeDRDLGVBQVYsQ0FBMEIsUUFBMUIsQ0FBckU7Ozs7O3FDQUlhdWxCLFdBQVc7VUFDcEJsVCxXQUFXLEtBQUswQyxLQUF0QjtXQUNLLElBQUk5WSxJQUFJLENBQWIsRUFBZ0JBLElBQUlvVyxTQUFTMVgsTUFBN0IsRUFBcUNzQixHQUFyQyxFQUEwQztlQUNqQ29XLFNBQVNwVyxDQUFULENBQVAsRUFBb0I7MkJBQ0QsS0FBS0EsQ0FBTCxHQUFTLElBRFI7a0JBRVYsTUFGVTtpQkFHWCxNQUhXO2VBSWIsTUFKYTtnQkFLWjtTQUxSOztjQVFNc3BCLFNBQVI7YUFDTyxJQUFMO2VBQ08sSUFBSXRwQixLQUFJLENBQWIsRUFBZ0JBLEtBQUlvVyxTQUFTMVgsTUFBN0IsRUFBcUNzQixJQUFyQyxFQUEwQztxQkFDL0JBLEVBQVQsRUFBWXNYLEtBQVosQ0FBa0JnOUIsTUFBbEIsR0FBMkIsS0FBSyxLQUFLdDBDLEVBQVYsR0FBYyxJQUF6QztxQkFDU0EsRUFBVCxFQUFZc1gsS0FBWixDQUFrQndoQixLQUFsQixHQUEwQixLQUExQjs7O2FBR0MsTUFBTDtlQUNPLElBQUk5NEIsTUFBSSxDQUFiLEVBQWdCQSxNQUFJb1csU0FBUzFYLE1BQTdCLEVBQXFDc0IsS0FBckMsRUFBMEM7cUJBQy9CQSxHQUFULEVBQVlzWCxLQUFaLENBQWtCcUIsR0FBbEIsR0FBd0IsS0FBSyxLQUFLM1ksR0FBVixHQUFjLElBQXRDO3FCQUNTQSxHQUFULEVBQVlzWCxLQUFaLENBQWtCdWhCLElBQWxCLEdBQXlCLEtBQXpCOzs7YUFHQyxNQUFMO2VBQ08sSUFBSTc0QixNQUFJLENBQWIsRUFBZ0JBLE1BQUlvVyxTQUFTMVgsTUFBN0IsRUFBcUNzQixLQUFyQyxFQUEwQztxQkFDL0JBLEdBQVQsRUFBWXNYLEtBQVosQ0FBa0JxQixHQUFsQixHQUF3QixLQUF4QjtxQkFDUzNZLEdBQVQsRUFBWXNYLEtBQVosQ0FBa0J3aEIsS0FBbEIsR0FBMEIsS0FBSyxLQUFLOTRCLEdBQVYsR0FBYyxJQUF4Qzs7O2FBR0MsT0FBTDtlQUNPLElBQUlBLE1BQUksQ0FBYixFQUFnQkEsTUFBSW9XLFNBQVMxWCxNQUE3QixFQUFxQ3NCLEtBQXJDLEVBQTBDO3FCQUMvQkEsR0FBVCxFQUFZc1gsS0FBWixDQUFrQnFCLEdBQWxCLEdBQXdCLEtBQXhCO3FCQUNTM1ksR0FBVCxFQUFZc1gsS0FBWixDQUFrQnVoQixJQUFsQixHQUF5QixLQUFLLEtBQUs3NEIsR0FBVixHQUFjLElBQXZDOzs7O2dCQUlJLElBQUlQLEtBQUosQ0FBVSxrREFBVixDQUFOOzs7OztzQ0FJWTtVQUNWMmdCLFdBQVcsS0FBSzNpQixZQUFMLENBQWtCLFVBQWxCLENBQWpCO1dBQ0t1VyxTQUFMLENBQWUvTyxNQUFmLENBQ0UsZ0JBREYsRUFFRSxvQkFGRixFQUdFLG1CQUhGLEVBSUUsaUJBSkYsRUFLRSxrQkFMRixFQU1FLHFCQU5GO2NBT09tYixRQUFQO2FBQ08sV0FBTDthQUNLLFdBQUw7ZUFDT3BNLFNBQUwsQ0FBZXJXLEdBQWYsQ0FBbUIsaUJBQW5COzthQUVHLFVBQUw7YUFDSyxVQUFMO2VBQ09xVyxTQUFMLENBQWVyVyxHQUFmLENBQW1CLGdCQUFuQjs7YUFFRyxjQUFMO2FBQ0ssY0FBTDtlQUNPcVcsU0FBTCxDQUFlclcsR0FBZixDQUFtQixvQkFBbkI7O2FBRUcsYUFBTDthQUNLLGFBQUw7ZUFDT3FXLFNBQUwsQ0FBZXJXLEdBQWYsQ0FBbUIsbUJBQW5COzthQUVHLFlBQUw7YUFDSyxZQUFMO2VBQ09xVyxTQUFMLENBQWVyVyxHQUFmLENBQW1CLGtCQUFuQjs7YUFFRyxlQUFMO2FBQ0ssZUFBTDtlQUNPcVcsU0FBTCxDQUFlclcsR0FBZixDQUFtQixxQkFBbkI7Ozs7Ozs7Ozs7Ozs7Ozs7OzJCQWNDO1dBQ0E0K0MsSUFBTCxDQUFVdG5CLElBQVY7YUFDT3IwQixRQUFRNFAsT0FBUixFQUFQOzs7Ozs7Ozs7Ozs7OzJCQVVLOzs7YUFDRSxLQUFLZ3NDLFNBQUwsR0FBaUJqckMsSUFBakIsQ0FBc0I7ZUFBSyxPQUFLZ3JDLElBQUwsQ0FBVTF5QyxJQUFWLEVBQUw7T0FBdEIsQ0FBUDs7Ozs7Ozs7Ozs7OztnQ0FVVTtVQUNOLEtBQUs0SyxZQUFMLENBQWtCLFdBQWxCLENBQUosRUFBb0M7YUFDN0IybkMsZ0JBQUwsQ0FBc0IsS0FBSzMrQyxZQUFMLENBQWtCLFdBQWxCLENBQXRCO09BREYsTUFFTzthQUNBMitDLGdCQUFMLENBQXNCLElBQXRCOzs7VUFHRUssYUFBYSxDQUFqQjtVQUNJLENBQUMsS0FBS04sVUFBVixFQUFzQjtZQUNkL2xDLFdBQVcsS0FBSzBDLEtBQXRCO2FBQ0ssSUFBSTlZLElBQUksQ0FBYixFQUFnQkEsSUFBSW9XLFNBQVMxWCxNQUE3QixFQUFxQ3NCLEdBQXJDLEVBQTBDO2NBQ2xDZ1QsUUFBUSxLQUFLaFQsQ0FBbkI7d0JBQ2NnVCxLQUFkO2lCQUNPb0QsU0FBU3BXLENBQVQsQ0FBUCxFQUFvQjt1QkFDUCxVQURPOzZCQUVEZ1QsUUFBUTtXQUYzQjs7c0JBS1ksRUFBZDs7YUFFS21wQyxVQUFMLEdBQWtCLElBQWxCO2FBQ0tqOUIsbUJBQUwsQ0FBeUIsSUFBekIsRUFBK0IsTUFBL0I7OztVQUdJK0IsV0FBV3RPLEtBQUtxTyxLQUFMLEVBQWpCO2lCQUNXQyxTQUFTelEsT0FBcEIsRUFBNkJpc0MsVUFBN0I7YUFDT3g3QixTQUFTQyxPQUFoQjs7Ozs7Ozs7Ozs7OztnQ0FVVTtVQUNOdTdCLGFBQWEsQ0FBakI7VUFDSSxLQUFLTixVQUFULEVBQXFCO1lBQ2IvbEMsV0FBVyxLQUFLMEMsS0FBdEI7YUFDSyxJQUFJOVksSUFBSSxDQUFiLEVBQWdCQSxJQUFJb1csU0FBUzFYLE1BQTdCLEVBQXFDc0IsR0FBckMsRUFBMEM7Y0FDbENnVCxRQUFRLE1BQU1vRCxTQUFTMVgsTUFBVCxHQUFrQnNCLENBQXhCLENBQWQ7d0JBQ2NnVCxLQUFkO2lCQUNPb0QsU0FBU3BXLENBQVQsQ0FBUCxFQUFvQjt1QkFDUCxVQURPOzZCQUVEZ1QsUUFBUTtXQUYzQjs7c0JBS1ksRUFBZDs7YUFFS21wQyxVQUFMLEdBQWtCLEtBQWxCO2FBQ0tqOUIsbUJBQUwsQ0FBeUIsSUFBekIsRUFBK0IsT0FBL0I7OztVQUdJK0IsV0FBV3RPLEtBQUtxTyxLQUFMLEVBQWpCO2lCQUNXQyxTQUFTelEsT0FBcEIsRUFBNkJpc0MsVUFBN0I7YUFDT3g3QixTQUFTQyxPQUFoQjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs2QkF3RE87YUFDQSxLQUFLaTdCLFVBQVo7Ozs7Ozs7Ozs7Ozs7NkJBVU87YUFDQSxLQUFLamxCLE9BQUwsR0FBZSxLQUFLcnRCLElBQUwsRUFBZixHQUE2QixLQUFLb3JCLElBQUwsRUFBcEM7Ozs7Ozs7Ozs7Ozs7a0NBVVk7YUFDTCxLQUFLeW5CLE1BQUwsS0FBZ0IsS0FBS0YsU0FBTCxFQUFoQixHQUFtQyxLQUFLRyxTQUFMLEVBQTFDOzs7O3dCQTdSVTthQUNIaHFDLEtBQUt5TCxTQUFMLENBQWUsS0FBSy9OLGdCQUFMLENBQXNCLHFCQUF0QixDQUFmLENBQVA7Ozs7d0JBR1M7YUFDRnNDLEtBQUt1RSxTQUFMLENBQWUsSUFBZixFQUFxQixTQUFyQixDQUFQOzs7O3NCQW1OVzlQLE9BQU87VUFDZEEsS0FBSixFQUFXO2FBQ0pvMUMsU0FBTDs7V0FFR3ArQixTQUFMLENBQWUsS0FBS2hJLFFBQXBCLEVBQThCdEMsT0FBOUIsQ0FBc0MsYUFBSzthQUNwQzlHLEtBQUwsQ0FBVy9QLENBQVgsRUFBYyxNQUFkLEtBQXlCMFYsS0FBSzBOLGVBQUwsQ0FBcUJwakIsQ0FBckIsRUFBd0IsVUFBeEIsRUFBb0NtSyxLQUFwQyxDQUF6QjtPQURGOzthQUlPdUwsS0FBSzBOLGVBQUwsQ0FBcUIsSUFBckIsRUFBMkIsVUFBM0IsRUFBdUNqWixLQUF2QyxDQUFQOzt3QkFHYTthQUNOLEtBQUtxTixZQUFMLENBQWtCLFVBQWxCLENBQVA7Ozs7Ozs7Ozs7Ozs7O3dCQVdXO2FBQ0osS0FBS0EsWUFBTCxDQUFrQixRQUFsQixDQUFQOzs7Ozs7Ozs7Ozs7Ozt3QkFXWTthQUNMLEtBQUs4bkMsSUFBTCxDQUFVcmxCLE9BQVYsSUFBcUIsS0FBSzVmLEtBQUwsQ0FBV29oQixPQUFYLEtBQXVCLE1BQW5EOzs7O3dCQTlSOEI7YUFDdkIsQ0FBQyxPQUFELEVBQVUsVUFBVixFQUFzQixRQUF0QixFQUFnQyxXQUFoQyxFQUE2QyxVQUE3QyxDQUFQOzs7O3dCQWlVa0I7YUFDWCxDQUFDLE1BQUQsRUFBUyxPQUFULENBQVA7Ozs7RUFwWjBDOEY7O0FBd1o5QzVpQyxlQUFla0csTUFBZixDQUFzQixnQkFBdEIsRUFBd0NvNkMsZ0JBQXhDOztBQzdjQTs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFpQkEsQUFDQSxBQUNBLEFBQ0EsQUFDQSxBQUNBLEFBRUEsSUFBTXBOLGdCQUFjOzs7OztPQUFBLGlCQUtaNTZCLE9BTFksRUFLSDFFLFFBTEcsRUFLTztpQkFDVkEsUUFBYjs7Q0FOSjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUEwQ3FCb3RDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7MkJBY1o7OztXQUNBdk4sS0FBTCxHQUFhLElBQWI7V0FDS0YsV0FBTCxHQUFtQjlVLGlCQUFuQjs7bUJBRWEsSUFBYixFQUFtQixZQUFNO3NCQUNYeUIsS0FBWixTQUF3QixZQUFNO2NBQ3RCdnJCLE9BQU8sT0FBS2cvQixjQUFMLEVBQWI7O2NBRUloL0IsSUFBSixFQUFVO21CQUNINC9CLElBQUwsQ0FBVTUvQixJQUFWOztTQUpKO09BREY7Ozs7d0NBV2tCO1VBQ2QsQ0FBQ29DLEtBQUszRixLQUFMLENBQVcsS0FBS3JRLFVBQWhCLEVBQTRCLGNBQTVCLENBQUwsRUFBa0Q7Y0FDMUMsSUFBSThDLEtBQUosa0VBQU47Ozs7O3FDQUlhO2FBQ1IsS0FBSzR2QyxLQUFMLElBQWMsS0FBSzV4QyxZQUFMLENBQWtCLE1BQWxCLENBQXJCOzs7OzJDQUdxQjs7OzZDQU1FME0sTUFBTWtKLE1BQU1DLFNBQVM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O3lCQTBEekMvQyxNQUFvQjs7O1VBQWQ4QixPQUFjLHVFQUFKLEVBQUk7O1dBQ2xCZzlCLEtBQUwsR0FBYTkrQixJQUFiO1VBQ01mLFdBQVc2QyxRQUFRN0MsUUFBUixJQUFvQixZQUFXLEVBQWhEOzthQUVPLElBQUk1TyxPQUFKLENBQVksbUJBQVc7WUFDeEJpOEMsYUFBYSxPQUFLOUksUUFBTCxJQUFpQixJQUFsQzs7ZUFFSzVFLFdBQUwsQ0FBaUJnQixJQUFqQixDQUFzQixFQUFDNS9CLFVBQUQsRUFBTzhNLGNBQVAsRUFBdEIsRUFBNEMsdUJBQWU7Y0FDckR3L0IsVUFBSixFQUFnQjttQkFDVDFOLFdBQUwsQ0FBaUJVLE1BQWpCLENBQXdCZ04sVUFBeEI7eUJBQ2EsSUFBYjs7O3VCQUdXO21CQUFNLE9BQUtwTixLQUFMLEVBQU47V0FBYjs7bUJBRVM1VixXQUFUO2tCQUNRQSxXQUFSO1NBVEY7T0FISyxDQUFQOzs7OzRCQWlCTTtVQUNGLEtBQUtrYSxRQUFULEVBQW1CO2FBQ1pBLFFBQUwsQ0FBY3RFLEtBQWQ7Ozs7OzRCQUlJO1VBQ0YsS0FBS3NFLFFBQVQsRUFBbUI7YUFDWkEsUUFBTCxDQUFjeEQsS0FBZDs7Ozs7K0JBSU87VUFDTCxLQUFLd0QsUUFBVCxFQUFtQjthQUNaNUUsV0FBTCxDQUFpQlUsTUFBakIsQ0FBd0IsS0FBS2tFLFFBQTdCOztXQUVHOXVDLE1BQUw7Ozs7d0JBckZTO2FBQ0YsS0FBS29xQyxLQUFaOzs7Ozs7O3NCQU1POStCLE1BQU07V0FDUjgrQixLQUFMLEdBQWE5K0IsSUFBYjs7Ozt3QkFHYTthQUNOLEtBQUs2RixRQUFMLENBQWMsQ0FBZCxDQUFQOzs7Ozs7Ozs7Ozs7O3dCQVVlO2FBQ1IsS0FBSys0QixXQUFaOztzQkFHYWxWLFFBQVE7VUFDakIsRUFBRUEsa0JBQWtCRCxVQUFwQixDQUFKLEVBQXFDO2NBQzdCdjZCLE1BQU0sbURBQU4sQ0FBTjs7V0FFRzB2QyxXQUFMLEdBQW1CbFYsTUFBbkI7Ozs7d0JBNUM4QjthQUN2QixFQUFQOzs7O3dCQXFHdUI7YUFDaEI2VSxhQUFQOzs7O0VBaEpnRHRROztBQW9KcEQ1aUMsZUFBZWtHLE1BQWYsQ0FBc0Isc0JBQXRCLEVBQThDODZDLHNCQUE5Qzs7QUN0TkE7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBaUJBLEFBQ0EsQUFDQSxJQUVxQkU7Ozs7Ozs7Ozs7MkJBRVo7OztXQUNBN2IsYUFBTCxHQUFxQixLQUFLQyxRQUFMLENBQWM5Z0MsSUFBZCxDQUFtQixJQUFuQixDQUFyQjttQkFDYSxJQUFiLEVBQW1CLFlBQU07WUFDbkIsT0FBS3pELFVBQUwsQ0FBZ0JvZ0QsTUFBaEIsQ0FBdUJuQixLQUF2QixDQUE2QjtpQkFBUW9CLEtBQUtDLElBQUwsS0FBYyxPQUF0QjtTQUE3QixDQUFKLEVBQWlFO2lCQUMxRHA1QyxZQUFMLENBQWtCLE9BQWxCLEVBQTJCLDBCQUEzQjs7T0FGSjs7Ozs2QkFPT3diLE9BQU87VUFDVixLQUFLK2hCLE9BQUwsWUFBd0JwZ0MsUUFBNUIsRUFBc0M7YUFDL0JvZ0MsT0FBTDtPQURGLE1BRU8sSUFBSXp1QixLQUFLM0YsS0FBTCxDQUFXLEtBQUtyUSxVQUFoQixFQUE0QixjQUE1QixDQUFKLEVBQWlEO2FBQ2pEQSxVQUFMLENBQWdCb2dELE1BQWhCLENBQXVCanBDLE9BQXZCLENBQStCO2lCQUFRa3BDLEtBQUtFLEtBQUwsQ0FBVyxNQUFYLEVBQW1CL2UsS0FBbkIsQ0FBeUIsWUFBTSxFQUEvQixDQUFSO1NBQS9COztZQUVJcmMsZUFBTjs7Ozs2Q0FPdUIzWCxNQUFNa0osTUFBTUMsU0FBUzs7O3dDQUcxQjtXQUNibFUsZ0JBQUwsQ0FBc0IsT0FBdEIsRUFBK0IsS0FBSzZoQyxhQUFwQzs7OzsyQ0FHcUI7V0FDaEJ0eEIsbUJBQUwsQ0FBeUIsT0FBekIsRUFBa0MsS0FBS3N4QixhQUF2Qzs7Ozt3QkFaOEI7YUFDdkIsRUFBUDs7OztFQXJCNkN6Qzs7QUFvQ2pENWlDLGVBQWVrRyxNQUFmLENBQXNCLG1CQUF0QixFQUEyQ2c3QyxtQkFBM0M7O0FDekRBOzs7Ozs7Ozs7Ozs7Ozs7OztBQWlCQSxBQUNBLEFBQ0EsQUFDQSxJQUVxQks7Ozs4QkFFbUU7bUZBQUosRUFBSTsyQkFBekV6N0IsTUFBeUU7UUFBekVBLE1BQXlFLCtCQUFoRSw2QkFBZ0U7NkJBQWpDM08sUUFBaUM7UUFBakNBLFFBQWlDLGlDQUF0QixHQUFzQjswQkFBakJDLEtBQWlCO1FBQWpCQSxLQUFpQiw4QkFBVCxDQUFTOzs7OEhBQzlFLEVBQUUwTyxjQUFGLEVBQVUzTyxrQkFBVixFQUFvQkMsWUFBcEIsRUFEOEU7Ozs7O29DQUkxRDtVQUFkWCxPQUFjLHVFQUFKLEVBQUk7O1dBQ3JCTyxNQUFMLENBQVksSUFBWixFQUFrQjtnQkFDUixLQUFLOE8sTUFERyxFQUNLM08sVUFBVSxLQUFLQSxRQURwQixFQUM4QkMsT0FBTyxLQUFLQTtPQUQ1RCxFQUVHWCxPQUZIOzs7Ozs7Ozs7NkJBUU8rcUMsYUFBYTs7O1VBQ2RDLFdBQVdELFlBQVl6Z0QsVUFBN0I7O21CQUVhMGdELFFBQWIsRUFBdUIsWUFBTTtlQUN0QkMsS0FBTCxHQUFhRixXQUFiO2VBQ0tySixRQUFMLEdBQWdCc0osU0FBU3AyQyxPQUF6QjtlQUNLazRCLEtBQUwsR0FBYWtlLFNBQVNyZCxJQUF0QjtPQUhGOzs7O2lDQU9XO1dBQ04rVCxRQUFMLEdBQWdCLEtBQUt1SixLQUFMLEdBQWEsS0FBS25lLEtBQUwsR0FBYSxJQUExQzs7Ozs4QkFPUXZQLFVBQVU7YUFDWCxLQUFLMHRCLEtBQVosRUFDRzM1QixLQURILENBQ1M7cUNBQ3FCLEtBQUs0NUIsS0FBTCxHQUFhM3RCLFFBQXZDO09BRkosRUFJR2xMLElBSkg7Ozs7Ozs7Ozt5QkFVR3hQLE1BQU07YUFDRnVQLE1BQVAsQ0FDRW9XLE9BQU8sS0FBS3lpQixLQUFaLEVBQ0d6akMsSUFESCxDQUNRLEtBQUs3RyxLQURiLEVBRUcyUSxLQUZILENBRVM7b0NBQ3FCLEtBQUs0NUIsS0FBL0I7T0FISixFQUlLO2tCQUNTLEtBQUt4cUMsUUFEZDtnQkFFTyxLQUFLMk87T0FOakIsRUFRR2lDLEtBUkgsQ0FRUyxvQkFBWTs7Z0JBRVR6TyxNQUFSO09BVkosQ0FERixFQWNFMmxCLE9BQU8sS0FBS3NFLEtBQVosRUFDR3RsQixJQURILENBQ1EsS0FBSzdHLEtBRGIsRUFFRzJRLEtBRkgsQ0FFUztpQkFDSTtPQUhiLEVBS0dBLEtBTEgsQ0FLUztpQkFDSTtPQU5iLEVBT0s7a0JBQ1MsS0FBSzVRLFFBRGQ7Z0JBRU87T0FUWixDQWRGOzs7Ozs7Ozs7MEJBK0JJbUMsTUFBTTs7O2FBRUh1UCxNQUFQLENBQ0VvVyxPQUFPLEtBQUt5aUIsS0FBWixFQUNHempDLElBREgsQ0FDUSxLQUFLN0csS0FEYixFQUVHMlEsS0FGSCxDQUVTO21CQUNNO09BSGYsRUFJSztrQkFDUyxLQUFLNVEsUUFEZDtnQkFFTyxLQUFLMk87T0FOakIsRUFRR2lDLEtBUkgsQ0FRUyxvQkFBWTtlQUNaMjVCLEtBQUwsQ0FBV2htQyxLQUFYLENBQWlCeXlCLGdCQUFqQixHQUFvQyxFQUFwQztnQkFDUTcwQixNQUFSOztPQVZKLENBREYsRUFlRTJsQixPQUFPLEtBQUtzRSxLQUFaLEVBQ0d0bEIsSUFESCxDQUNRLEtBQUs3RyxLQURiLEVBRUcyUSxLQUZILENBRVM7aUJBQ0k7T0FIYixFQUlLO2tCQUNTLEtBQUs1USxRQURkO2dCQUVPO09BTlosRUFRRzRRLEtBUkgsQ0FRUztpQkFDSTtPQVRiLENBZkY7Ozs7d0JBakRVO2FBQ0gsS0FBSzI1QixLQUFMLENBQVdBLEtBQVgsS0FBcUIsT0FBckIsR0FBK0IsR0FBL0IsR0FBcUMsRUFBNUM7Ozs7RUE5QjBDL2lCOztBQ3RCOUM7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBaUJBLEFBQ0EsQUFDQSxBQUNBLEFBQ0EsQUFDQSxBQUNBLEFBRUEsSUFBTWlGLGtCQUFnQjtXQUNYMmQsZ0JBRFc7V0FFWEE7Q0FGWDs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztJQTBDcUJLOzs7Ozs7Ozs7OzZCQUVWUixNQUFNO1VBQ1A5b0MsVUFBVXZCLEtBQUt1RSxTQUFMLENBQWUsSUFBZixFQUFxQixhQUFLO2VBQ2pDdkUsS0FBSzNGLEtBQUwsQ0FBVy9QLENBQVgsRUFBYyxtQkFBZCxLQUFzQ0EsRUFBRVEsWUFBRixDQUFlLE1BQWYsTUFBMkJ1L0MsSUFBeEU7T0FEYyxDQUFoQjthQUdPOW9DLE9BQVA7Ozs7Ozs7Ozs7Ozs7O3dDQWdGa0JtTCxPQUFPO1dBQ3BCMDlCLE1BQUwsQ0FBWXI5QixJQUFaLENBQWlCO2VBQUtoZSxFQUFFZzdDLE1BQUYsR0FBV2g3QyxFQUFFdzdDLEtBQUYsRUFBWCxHQUF1QixLQUE1QjtPQUFqQixLQUF1RDc5QixNQUFNcWhCLGlCQUFOLEVBQXZEOzs7O2tDQUdZempDLEdBQUc7OztVQUNYQSxFQUFFeU4sTUFBRixDQUFTL04sVUFBYixFQUF5QjtxQkFDVixJQUFiLEVBQW1CLFlBQU07aUJBQ2xCOGdELE9BQUw7U0FERjs7Ozs7OEJBTU07OztXQUNIVixNQUFMLENBQVlqcEMsT0FBWixDQUFvQixnQkFBUTtlQUNyQjdNLE9BQUwsQ0FBYXFRLEtBQWIsQ0FBbUIwbEMsS0FBS0EsSUFBeEIsSUFBZ0NBLEtBQUtDLElBQUwsS0FBYyxPQUFkLEdBQXdCRCxLQUFLVSxNQUE3QixHQUFzQyxDQUF0RTtPQURGOzs7OzJCQUtLOzs7V0FDQUMsa0JBQUwsR0FBMEIsS0FBS0MsYUFBTCxDQUFtQng5QyxJQUFuQixDQUF3QixJQUF4QixDQUExQjs7bUJBRWEsSUFBYixFQUFtQixZQUFNO2VBQ2xCcy9CLFFBQUw7ZUFDSytkLE9BQUw7T0FGRjs7OzsrQkFNUztVQUNMLENBQUMsS0FBS3pkLElBQVYsRUFBZ0I7YUFDVGw5QixXQUFMLENBQWlCL0IsU0FBU21CLGFBQVQsQ0FBdUIsbUJBQXZCLENBQWpCOzs7Ozt3Q0FJZ0I7V0FDYnUrQixrQkFBTCxHQUEwQixLQUFLNk8sbUJBQUwsQ0FBeUJsdkMsSUFBekIsQ0FBOEIsSUFBOUIsQ0FBMUI7V0FDS2hCLGdCQUFMLENBQXNCLFlBQXRCLEVBQW9DLEtBQUt1K0Msa0JBQXpDLEVBQTZELEtBQTdEOzs7OzJDQUdxQjtXQUNoQmhkLGtCQUFMLENBQXdCL3FCLE9BQXhCO1dBQ0srcUIsa0JBQUwsR0FBMEIsSUFBMUI7V0FDS2h4QixtQkFBTCxDQUF5QixZQUF6QixFQUF1QyxLQUFLZ3VDLGtCQUE1QyxFQUFnRSxLQUFoRTs7Ozs2Q0FHdUJ4ekMsTUFBTWtKLE1BQU1DLFNBQVM7Ozs0QkFFdEM7V0FDRG1LLGVBQUwsQ0FBcUIsSUFBckIsRUFBMkIsT0FBM0I7Ozs7NEJBR007V0FDREEsZUFBTCxDQUFxQixJQUFyQixFQUEyQixPQUEzQjs7OzsrQkFHUztXQUNKQSxlQUFMLENBQXFCLElBQXJCLEVBQTJCLFVBQTNCO1dBQ0t4WSxNQUFMOzs7O3dCQTdIUzthQUNGLEtBQUs0NEMsUUFBTCxDQUFjLE1BQWQsQ0FBUDs7Ozs7Ozs7Ozs7Ozt3QkFVVTthQUNILEtBQUtBLFFBQUwsQ0FBYyxPQUFkLENBQVA7Ozs7Ozs7Ozs7Ozs7O3dCQVdTO2FBQ0ZsckMsS0FBS3VFLFNBQUwsQ0FBZSxJQUFmLEVBQXFCLG1CQUFyQixDQUFQOzs7O3dCQUdXO2FBQ0osQ0FBQyxLQUFLMmhCLElBQU4sRUFBWSxLQUFLQyxLQUFqQixFQUF3Qm56QixNQUF4QixDQUErQjtlQUFLMUksQ0FBTDtPQUEvQixDQUFQOzs7Ozs7Ozs7Ozs7O3dCQVVZO2FBQ0wwVixLQUFLdUUsU0FBTCxDQUFlLElBQWYsRUFBcUIsc0JBQXJCLENBQVA7Ozs7d0JBR1k7YUFDTCxLQUFLalEsT0FBTCxDQUFhOHNDLFFBQXBCOzs7O3dCQUdTO2FBQ0ZwaEMsS0FBS3VFLFNBQUwsQ0FBZSxJQUFmLEVBQXFCLG1CQUFyQixDQUFQOzs7Ozs7Ozs7Ozs7O3dCQVV1QjthQUNoQixLQUFLeXBCLGtCQUFaOztzQkFHcUJueEIsVUFBVTtVQUMzQixLQUFLbXhCLGtCQUFULEVBQTZCO2FBQ3RCQSxrQkFBTCxDQUF3Qi9xQixPQUF4Qjs7O1dBR0crcUIsa0JBQUwsR0FBMEI1RiwyQkFBMkI4RixhQUEzQixDQUF5QyxJQUF6QyxFQUErQ3J4QixRQUEvQyxDQUExQjs7OztxQ0E4RHNCckYsTUFBTXNJLFVBQVU7VUFDbEMsRUFBRUEsb0JBQW9CMHFDLGdCQUF0QixDQUFKLEVBQTZDO2NBQ3JDLElBQUkxOUMsS0FBSixDQUFVLDZEQUFWLENBQU47O3NCQUVZMEssSUFBZCxJQUFzQnNJLFFBQXRCOzs7O3dCQUc0QjthQUNyQjBxQyxnQkFBUDs7Ozt3QkFHcUI7YUFDZDNkLGVBQVA7Ozs7RUE3SnlDaEI7O0FBaUs3QzVpQyxlQUFla0csTUFBZixDQUFzQixjQUF0QixFQUFzQzA3QyxlQUF0Qzs7QUNwT0E7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBaUJBLEFBQ0EsQUFDQSxBQUNBLEFBQ0EsQUFDQSxBQUNBLEFBQ0EsQUFDQSxBQUNBLEFBQ0EsQUFDQSxBQUVBLElBQU1NLGFBQWEsT0FBbkI7QUFDQSxJQUFNQyxnQkFBZ0IsVUFBdEI7QUFDQSxJQUFNQyxlQUFlLFFBQXJCO0FBQ0EsSUFBTUMsYUFBYSxNQUFuQjtBQUNBLElBQU1DLGlCQUFpQixVQUF2Qjs7QUFFQSxJQUFNQyxxQkFBcUIsQ0FBQyxXQUFELEVBQWMsT0FBZCxFQUF1QixNQUF2QixFQUErQixVQUEvQixFQUEyQyxXQUEzQyxFQUF3RCxvQkFBeEQsRUFBOEUsbUJBQTlFLEVBQW1HLGdCQUFuRyxDQUEzQjs7QUFHQSxJQUFNclAsZ0JBQWM7Ozs7O09BQUEsaUJBS1pzUCxtQkFMWSxFQUtTNXVDLFFBTFQsRUFLbUI7aUJBQ3RCQSxRQUFiOztDQU5KOztJQVVNNnVDOzZCQUNRbnFDLE9BQVosRUFBcUJ4SixNQUFyQixFQUE2Qjs7O1NBQ3RCeXRCLFFBQUwsR0FBZ0Jqa0IsT0FBaEI7U0FDS2tHLGNBQUwsR0FBc0IsS0FBS3JELFNBQUwsQ0FBZTNXLElBQWYsQ0FBb0IsSUFBcEIsQ0FBdEI7Y0FDVSxLQUFLaytDLFlBQUwsQ0FBa0I1ekMsTUFBbEIsQ0FBVjs7Ozs7aUNBR1dBLFFBQVE7V0FDZDJ4QixPQUFMO1dBQ0traUIsT0FBTCxHQUFlN3pDLE1BQWY7VUFDSUEsTUFBSixFQUFZO2FBQ0w4ekMsWUFBTCxHQUFvQixDQUFDLFVBQUQsRUFBYSxXQUFiLEVBQTBCditDLE9BQTFCLENBQWtDeUssTUFBbEMsTUFBOEMsQ0FBQyxDQUFuRTthQUNLK3pDLFFBQUw7Ozs7OzJCQUlHcjNDLE9BQU87VUFDUixLQUFLbzNDLFlBQVQsRUFBdUI7ZUFDZCxLQUFLRCxPQUFMLE1BQWtCbjNDLE1BQU13dUIsVUFBTixHQUFtQixVQUFuQixHQUFnQyxXQUFsRCxDQUFQOzthQUVLeHVCLE1BQU00VixPQUFiOzs7OzhCQUdRNVYsT0FBTztXQUNWK3dCLFFBQUwsQ0FBY3VtQixXQUFkLENBQTBCLEtBQUtDLE1BQUwsQ0FBWXYzQyxLQUFaLElBQXFCMjJDLGFBQXJCLEdBQXFDRCxVQUEvRDs7OzsrQkFHUztVQUNMLEtBQUtVLFlBQVQsRUFBdUI7b0JBQ1RuM0IsRUFBWixDQUFlLFFBQWYsRUFBeUIsS0FBS2pOLGNBQTlCO2FBQ0tyRCxTQUFMLENBQWUsRUFBQzZlLFlBQVlPLFlBQVlQLFVBQVosRUFBYixFQUFmO09BRkYsTUFHTzthQUNBZ3BCLFlBQUwsR0FBb0JqakQsT0FBT2tqRCxVQUFQLENBQWtCLEtBQUtOLE9BQXZCLENBQXBCO2FBQ0tLLFlBQUwsQ0FBa0JFLFdBQWxCLENBQThCLEtBQUsxa0MsY0FBbkM7YUFDS3JELFNBQUwsQ0FBZSxLQUFLNm5DLFlBQXBCOzs7Ozs4QkFJTTtVQUNKLEtBQUtKLFlBQVQsRUFBdUI7b0JBQ1RqM0IsR0FBWixDQUFnQixRQUFoQixFQUEwQixLQUFLbk4sY0FBL0I7T0FERixNQUVPLElBQUksS0FBS3drQyxZQUFULEVBQXVCO2FBQ3ZCQSxZQUFMLENBQWtCRyxjQUFsQixDQUFpQyxLQUFLM2tDLGNBQXRDO2FBQ0t3a0MsWUFBTCxHQUFvQixJQUFwQjs7Ozs7OztBQUtOLElBQU1JLFlBQVksU0FBWkEsU0FBWSxDQUFDcmQsS0FBRCxFQUFRdGtCLE1BQVIsRUFBbUI7YUFDZixDQUFDdlEsU0FBUzYwQixLQUFULEVBQWdCLEVBQWhCLENBQUQsRUFBc0IsS0FBS3JsQyxJQUFMLENBQVVxbEMsS0FBVixDQUF0QixDQURlO01BQzVCdjZCLEtBRDRCO01BQ3JCOEIsRUFEcUI7O1NBRTVCQSxLQUFLOUIsS0FBTCxHQUFhSSxLQUFLNDhCLEtBQUwsQ0FBVy9tQixPQUFPNGhDLFdBQVAsR0FBcUI3M0MsS0FBckIsR0FBNkIsR0FBeEMsQ0FBcEI7Q0FGRjs7SUFLTTgzQzs7O3dCQUNZO2FBQ1AsS0FBSy9tQixRQUFMLENBQWN5YixTQUFyQjs7Ozt3QkFHVTEvQixPQUFaLEVBQXFCOzs7U0FDZGlyQyxPQUFMLEdBQWUsS0FBZjtTQUNLQyxNQUFMLEdBQWNwQixZQUFkO1NBQ0s3bEIsUUFBTCxHQUFnQmprQixPQUFoQjtTQUNLbXJDLEtBQUwsR0FBYSxJQUFJbG1CLFFBQUosRUFBYjs7Ozs7NkJBR087YUFDQSxLQUFLZ21CLE9BQUwsSUFBZ0IsS0FBS0MsTUFBTCxLQUFnQnBCLFlBQXZDOzs7O2tDQUdZL2dELEdBQUc7VUFDWCxDQUFDLEtBQUtraUQsT0FBTixJQUFpQixLQUFLRSxLQUFMLENBQVcxbEIsUUFBWCxFQUFqQixJQUEwQyxLQUFLMmxCLG9CQUFMLEVBQTlDLEVBQTJFOzs7VUFHdkVyaUQsRUFBRWlOLElBQUYsS0FBVyxXQUFmLEVBQTRCO2FBQ3JCNHNDLFlBQUwsQ0FBa0I3NUMsQ0FBbEI7T0FERixNQUVPLElBQUksQ0FBQyxLQUFLc2lELFdBQVYsRUFBdUI7VUFDMUJyMUMsSUFBRixLQUFXLFNBQVgsR0FBdUIsS0FBS3M1QixVQUFMLENBQWdCdm1DLENBQWhCLENBQXZCLEdBQTRDLEtBQUtxbUMsT0FBTCxDQUFhcm1DLENBQWIsQ0FBNUM7Ozs7O2lDQUlTb2lCLE9BQU87VUFDWm1nQyxZQUFZLENBQUMsYUFBYWxqRCxJQUFiLENBQWtCK2lCLE1BQU15SCxPQUFOLENBQWN3QyxTQUFoQyxDQUFuQjtVQUNNc0csV0FBVyxLQUFLdUksUUFBTCxDQUFjbWxCLEtBQWQsS0FBd0IsTUFBeEIsR0FBaUNqK0IsTUFBTXlILE9BQU4sQ0FBYzRHLE1BQWQsQ0FBcUJ2RixPQUF0RCxHQUFnRXhzQixPQUFPcTZCLFVBQVAsR0FBb0IzVyxNQUFNeUgsT0FBTixDQUFjNEcsTUFBZCxDQUFxQnZGLE9BQTFIO1VBQ01zM0IsT0FBTyxLQUFLdG5CLFFBQUwsQ0FBY3VuQixpQkFBM0I7VUFDTWhELFNBQVMsS0FBS0EsTUFBTCxFQUFmO1dBQ0s2QyxXQUFMLEdBQW1CQyxhQUFjQyxRQUFRN3ZCLFdBQVc2dkIsSUFBbkIsSUFBMkIsQ0FBQy9DLE1BQTdEOztXQUVLZ0IsTUFBTCxHQUFjc0IsVUFBVSxLQUFLN21CLFFBQUwsQ0FBY3VsQixNQUF4QixFQUFnQyxLQUFLdmxCLFFBQUwsQ0FBY3g3QixVQUE5QyxDQUFkO1dBQ0tnakQsY0FBTCxHQUFzQixLQUFLQyxTQUFMLEdBQWlCbEQsU0FBUyxLQUFLZ0IsTUFBZCxHQUF1QixDQUE5RDs7Ozs0QkFHTXIrQixPQUFPO1lBQ1B5SCxPQUFOLENBQWNvRixjQUFkO1VBQ000aEIsUUFBUSxLQUFLM1YsUUFBTCxDQUFjbWxCLEtBQWQsS0FBd0IsTUFBeEIsR0FBaUNqK0IsTUFBTXlILE9BQU4sQ0FBYzBCLE1BQS9DLEdBQXdELENBQUNuSixNQUFNeUgsT0FBTixDQUFjMEIsTUFBckY7VUFDTW9ILFdBQVdwb0IsS0FBS2tRLEdBQUwsQ0FBUyxDQUFULEVBQVlsUSxLQUFLbVEsR0FBTCxDQUFTLEtBQUsrbEMsTUFBZCxFQUFzQixLQUFLaUMsY0FBTCxHQUFzQjdSLEtBQTVDLENBQVosQ0FBakI7VUFDSWxlLGFBQWEsS0FBS2d3QixTQUF0QixFQUFpQzthQUMxQmhNLFNBQUwsQ0FBZWlNLFNBQWYsQ0FBeUJqd0IsUUFBekI7YUFDS2d3QixTQUFMLEdBQWlCaHdCLFFBQWpCO2FBQ0t3dkIsTUFBTCxHQUFjbEIsY0FBZDs7Ozs7K0JBSU83K0IsT0FBTztVQUNFdVEsUUFERixHQUMyQyxJQUQzQyxDQUNUZ3dCLFNBRFM7VUFDb0JqZSxLQURwQixHQUMyQyxJQUQzQyxDQUNZK2IsTUFEWjtVQUNxQy8rQixFQURyQyxHQUMyQyxJQUQzQyxDQUMyQndaLFFBRDNCOztVQUVWN08sWUFBWWpLLE1BQU15SCxPQUFOLENBQWMwSCxnQkFBaEM7VUFDTXN4QixhQUFhbmhDLEdBQUcyK0IsS0FBSCxLQUFhaDBCLFNBQWIsSUFBMEJzRyxXQUFXK1IsUUFBUWhqQixHQUFHb2hDLFVBQW5FO1dBQ0tDLGFBQUwsQ0FBbUJGLGFBQWEsTUFBYixHQUFzQixPQUF6QztXQUNLUCxXQUFMLEdBQW1CLElBQW5COzs7OzZCQUdPO1VBQ0gsS0FBS0osT0FBTCxJQUFnQixLQUFLQyxNQUFMLEtBQWdCbkIsVUFBcEMsRUFBZ0Q7YUFDekNySyxTQUFMLENBQWVoakMsSUFBZjs7Ozs7Ozs7Z0NBS1E7VUFDTixDQUFDLEtBQUt1dUMsT0FBVixFQUFtQjthQUNaQSxPQUFMLEdBQWUsSUFBZjthQUNLYyxNQUFMOzs7Ozs7OzsrQkFLTztXQUNKZCxPQUFMLEdBQWUsS0FBZjs7OzsyQ0FHcUI7OzthQUNkeHNDLEtBQUt5TCxTQUFMLENBQWUsS0FBSytaLFFBQUwsQ0FBYzdlLGFBQWQsQ0FBNEJsRCxRQUEzQyxFQUFxRHNKLElBQXJELENBQTBELGFBQUs7ZUFDN0QvTSxLQUFLM0YsS0FBTCxDQUFXL1AsQ0FBWCxFQUFjLG1CQUFkLEtBQXNDQSxNQUFNLE1BQUtrN0IsUUFBakQsSUFBNkRsN0IsRUFBRXkvQyxNQUF0RTtPQURLLENBQVA7Ozs7Ozs7Ozs7Ozs7a0NBWVl2eUMsTUFBb0I7OztVQUFka0ksT0FBYyx1RUFBSixFQUFJOztVQUMxQjZ0QyxjQUFjLzFDLFNBQVMsTUFBVCxHQUFrQjh6QyxVQUFsQixHQUErQkQsWUFBbkQ7O1VBRUksQ0FBQyxLQUFLbUIsT0FBVixFQUFtQjtlQUNWditDLFFBQVE0UCxPQUFSLENBQWdCLEtBQWhCLENBQVA7OztVQUdFLEtBQUs0dUMsTUFBTCxLQUFnQmMsV0FBcEIsRUFBaUM7ZUFDeEJ0L0MsUUFBUTRQLE9BQVIsQ0FBZ0IsS0FBSzJuQixRQUFyQixDQUFQOztVQUVFLEtBQUtrbkIsS0FBTCxDQUFXMWxCLFFBQVgsRUFBSixFQUEyQjtlQUNsQi80QixRQUFRZSxNQUFSLENBQWUsMEJBQWYsQ0FBUDs7VUFFRXdJLFNBQVMsTUFBVCxJQUFtQixLQUFLbTFDLG9CQUFMLEVBQXZCLEVBQW9EO2VBQzNDMStDLFFBQVFlLE1BQVIsQ0FBZSwrQkFBZixDQUFQOztVQUVFLEtBQUt3MkIsUUFBTCxDQUFjZ29CLFVBQWQsU0FBK0JoMkMsSUFBL0IsQ0FBSixFQUE0QztlQUNuQ3ZKLFFBQVFlLE1BQVIscUJBQWlDd0ksSUFBakMsYUFBUDs7O1VBR0lxRixXQUFXNkMsUUFBUTdDLFFBQXpCO1VBQ01ncUIsU0FBUyxLQUFLNmxCLEtBQUwsQ0FBV2hoQixJQUFYLEVBQWY7VUFDTW5wQixPQUFPLFNBQVBBLElBQU8sR0FBTTtlQUNaa3FDLE1BQUwsR0FBY2MsV0FBZDtlQUNLRCxNQUFMOztlQUVLOW5CLFFBQUwsQ0FBY2dvQixVQUFkLFVBQWdDaDJDLElBQWhDO29CQUNZcUYsVUFBWjtPQUxGOztVQVFJNkMsUUFBUSt0QyxnQkFBWixFQUE4Qjs7ZUFFckJ4L0MsUUFBUTRQLE9BQVIsQ0FBZ0IsS0FBSzJuQixRQUFyQixDQUFQOztXQUVHaW5CLE1BQUwsR0FBY2xCLGNBQWQ7YUFDTyxJQUFJdDlDLE9BQUosQ0FBWSxtQkFBVztlQUN2Qmd6QyxTQUFMLENBQWV6cEMsSUFBZixFQUFxQixZQUFNOztrQkFFakIsT0FBS2d1QixRQUFiO1NBRkY7T0FESyxDQUFQOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUEyQ2lCa29COzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7MkJBMEtaOzs7V0FDQWhSLEtBQUwsR0FBYSxJQUFiO1dBQ0tGLFdBQUwsR0FBbUI5VSxpQkFBbkI7V0FDS2ltQixhQUFMLEdBQXFCLElBQUlwQixZQUFKLENBQWlCLElBQWpCLENBQXJCO1dBQ0txQixrQkFBTCxHQUEwQixJQUFJbEMsaUJBQUosQ0FBc0IsSUFBdEIsQ0FBMUI7O1dBRUt0ZSxnQkFBTCxHQUF3QixJQUFJdHVCLGVBQUosQ0FBb0I7bUJBQy9CK3JDLGdCQUFnQjVyQyxTQURlO21CQUUvQnVyQyxnQkFGK0I7dUJBRzNCLGtCQUgyQjswQkFJeEIsS0FBSzEvQyxZQUFMLENBQWtCLFdBQWxCO09BSkksQ0FBeEI7V0FNSytpRCxtQkFBTCxHQUEyQixVQUFDdmpELENBQUQ7ZUFBTyxPQUFLcWpELGFBQUwsQ0FBbUJHLGFBQW5CLENBQWlDeGpELENBQWpDLENBQVA7T0FBM0I7V0FDS3lqRCxrQkFBTCxHQUEwQnZDLGtCQUExQjttQkFDYSxJQUFiLEVBQW1CLFlBQU07c0JBQ1hyaUIsS0FBWixTQUF3QixZQUFNO2NBQ3RCdnJCLE9BQU8sT0FBS2cvQixjQUFMLEVBQWI7O2NBRUloL0IsSUFBSixFQUFVO21CQUNINC9CLElBQUwsQ0FBVTUvQixJQUFWOztTQUpKO09BREY7Ozs7d0NBV2tCOzs7VUFDZCxDQUFDb0MsS0FBSzNGLEtBQUwsQ0FBVyxLQUFLclEsVUFBaEIsRUFBNEIsY0FBNUIsQ0FBTCxFQUFrRDtjQUMxQyxJQUFJOEMsS0FBSixDQUFVLHlDQUFWLENBQU47OztXQUdHc2xDLGdCQUFMLEdBQXdCLElBQUk5ZixlQUFKLENBQW9CLEtBQUszTCxhQUF6QixFQUF3QyxFQUFDdVcsaUJBQWlCLENBQWxCLEVBQXhDLENBQXhCOzttQkFFYSxJQUFiLEVBQW1CLFlBQU07ZUFDbEI2d0Isa0JBQUwsQ0FBd0I1c0MsT0FBeEIsQ0FBZ0M7aUJBQUssT0FBSzYwQixPQUFMLENBQWExckMsQ0FBYixDQUFMO1NBQWhDO09BREY7O1VBSUksQ0FBQyxLQUFLd1gsWUFBTCxDQUFrQixNQUFsQixDQUFMLEVBQWdDO2FBQ3pCNVEsWUFBTCxDQUFrQixNQUFsQixFQUEwQixNQUExQjs7Ozs7cUNBSWE7YUFDUixLQUFLd3JDLEtBQUwsSUFBYyxLQUFLNXhDLFlBQUwsQ0FBa0IsTUFBbEIsQ0FBckI7Ozs7MkNBT3FCO1dBQ2hCOGlELGtCQUFMLENBQXdCbGtCLE9BQXhCO1dBQ0swSSxnQkFBTCxDQUFzQnhWLE9BQXRCO1dBQ0t3VixnQkFBTCxHQUF3QixJQUF4Qjs7Ozs2Q0FPdUI1NkIsTUFBTWtKLE1BQU1DLFNBQVM7V0FDdkNxMUIsT0FBTCxDQUFheCtCLElBQWIsRUFBbUJtSixPQUFuQjs7Ozs0QkFHTW5KLE1BQU0vQyxPQUFPO2FBQ1osWUFBWStDLEtBQUtsTyxLQUFMLENBQVcsR0FBWCxFQUFnQnFTLEdBQWhCLENBQW9CO2VBQUtyUixFQUFFLENBQUYsRUFBS3VqQixXQUFMLEtBQXFCdmpCLEVBQUVzSixLQUFGLENBQVEsQ0FBUixDQUExQjtPQUFwQixFQUEwREcsSUFBMUQsQ0FBK0QsRUFBL0QsQ0FBbkI7YUFDTyxLQUFLeUQsSUFBTCxFQUFXL0MsS0FBWCxDQUFQOzs7OytCQUdTK0MsTUFBTTtVQUNYQSxLQUFLNUQsS0FBTCxDQUFXLENBQVgsRUFBYyxDQUFkLE1BQXFCLEtBQXpCLEVBQWdDO2VBQ3ZCb00sS0FBS3VNLG1CQUFMLENBQXlCLElBQXpCLEVBQStCL1UsSUFBL0IsRUFBcUMsRUFBQzZ5QyxNQUFNLElBQVAsRUFBckMsQ0FBUDs7VUFFRS9MLGFBQWEsS0FBakI7O1dBRUsveEIsbUJBQUwsQ0FBeUIsSUFBekIsRUFBK0IvVSxJQUEvQixFQUFxQztjQUM3QixJQUQ2QjtnQkFFM0I7aUJBQU04bUMsYUFBYSxJQUFuQjs7T0FGVjs7YUFLT0EsVUFBUDs7OztzQ0FHcUQ7VUFBdkM3cEMsS0FBdUMsdUVBQS9CLEtBQUszSixZQUFMLENBQWtCLFVBQWxCLENBQStCOztVQUNqRDJKLFVBQVUsSUFBVixJQUFrQkEsVUFBVSxPQUFoQyxFQUF5QzthQUNsQ201QyxrQkFBTCxDQUF3QmxrQixPQUF4QjtlQUNPLEtBQUtxaUIsV0FBTCxDQUFpQlosVUFBakIsQ0FBUDs7VUFFRTEyQyxVQUFVLEVBQVYsSUFBZ0JBLFVBQVUsVUFBOUIsRUFBMEM7YUFDbkNtNUMsa0JBQUwsQ0FBd0Jsa0IsT0FBeEI7ZUFDTyxLQUFLcWlCLFdBQUwsQ0FBaUJYLGFBQWpCLENBQVA7OztXQUdHd0Msa0JBQUwsQ0FBd0JqQyxZQUF4QixDQUFxQ2wzQyxLQUFyQzs7Ozs7OztnQ0FJVTYxQyxNQUFNO1VBQ1pBLFNBQVMsS0FBSzBELEtBQWxCLEVBQXlCO2FBQ2xCQSxLQUFMLEdBQWExRCxJQUFiO2FBQ0txRCxhQUFMLENBQW1CckQsU0FBU2MsYUFBVCxHQUF5QixXQUF6QixHQUF1QyxVQUExRDthQUNLbDZDLFlBQUwsQ0FBa0IsTUFBbEIsRUFBMEJvNUMsSUFBMUI7O2FBRUsvOUIsbUJBQUwsQ0FBeUIsSUFBekIsRUFBK0IsWUFBL0IsRUFBNkMsRUFBQzg5QixNQUFNLElBQVAsRUFBYUMsTUFBTUEsSUFBbkIsRUFBN0M7Ozs7OzJDQUlrRTtVQUFqRDJELFNBQWlELHVFQUFyQyxLQUFLbmpELFlBQUwsQ0FBa0IsZ0JBQWxCLENBQXFDOztXQUMvRHNpRCxVQUFMLEdBQWtCdjRDLEtBQUtrUSxHQUFMLENBQVMsQ0FBVCxFQUFZbFEsS0FBS21RLEdBQUwsQ0FBUyxDQUFULEVBQVkwdkIsV0FBV3VaLFNBQVgsS0FBeUIsR0FBckMsQ0FBWixDQUFsQjs7Ozt1Q0FHMkQ7VUFBNUN6YixTQUE0Qyx1RUFBaEMsS0FBSzFuQyxZQUFMLENBQWtCLFdBQWxCLENBQWdDOztVQUNyRGlnQixTQUFTeW5CLGNBQWMsSUFBZCxHQUFxQixLQUFyQixHQUE2QixJQUE1Qzs7VUFFSSxLQUFLSixnQkFBVCxFQUEyQjthQUNwQkEsZ0JBQUwsQ0FBc0JybkIsTUFBdEIsRUFBOEIsc0NBQTlCLEVBQXNFLEtBQUs4aUMsbUJBQTNFOzs7Ozs4Q0FJcUU7VUFBakRwNUMsS0FBaUQsdUVBQXpDLEtBQUszSixZQUFMLENBQWtCLG9CQUFsQixDQUF5Qzs7V0FDbEVpaUQsaUJBQUwsR0FBeUJsNEMsS0FBS2tRLEdBQUwsQ0FBUyxDQUFULEVBQVk1SyxTQUFTMUYsS0FBVCxLQUFtQixDQUEvQixDQUF6Qjs7OzttQ0FHYTtXQUNSa1EsS0FBTCxDQUFXcXFCLEtBQVgsR0FBbUIsS0FBSytiLE1BQXhCOzs7O2tDQVk0QztVQUFsQ1YsSUFBa0MsdUVBQTNCLEtBQUt2L0MsWUFBTCxDQUFrQixNQUFsQixDQUEyQjs7V0FDdkM2L0MsS0FBTCxHQUFhTixTQUFTLE9BQVQsR0FBbUJBLElBQW5CLEdBQTBCLE1BQXZDOzs7O3VDQUcyRDtVQUE1Q3hxQyxTQUE0Qyx1RUFBaEMsS0FBSy9VLFlBQUwsQ0FBa0IsV0FBbEIsQ0FBZ0M7O1dBQ3REbTJDLFNBQUwsR0FBaUIsS0FBSzdULGdCQUFMLENBQXNCckYsV0FBdEIsQ0FBa0MsRUFBQ2xvQixvQkFBRCxFQUFsQyxDQUFqQjtXQUNLb2hDLFNBQUwsQ0FBZTZLLFFBQWYsQ0FBd0IsSUFBeEI7Ozs7OENBR3NFO1VBQWhEcjNDLEtBQWdELHVFQUF4QyxLQUFLM0osWUFBTCxDQUFrQixtQkFBbEIsQ0FBd0M7O1dBQ2pFbTJDLFNBQUwsQ0FBZWlOLGFBQWYsQ0FBNkJwdkMsZ0JBQWdCMnVCLDJCQUFoQixDQUE0Q2g1QixLQUE1QyxDQUE3Qjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsyQkFrRmlCO1VBQWRpTCxPQUFjLHVFQUFKLEVBQUk7O2FBQ1YsS0FBS2l1QyxhQUFMLENBQW1CTixhQUFuQixDQUFpQyxNQUFqQyxFQUF5QzN0QyxPQUF6QyxDQUFQOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzRCQW1Ca0I7VUFBZEEsT0FBYyx1RUFBSixFQUFJOzthQUNYLEtBQUtpdUMsYUFBTCxDQUFtQk4sYUFBbkIsQ0FBaUMsT0FBakMsRUFBMEMzdEMsT0FBMUMsQ0FBUDs7Ozs7Ozs7Ozs7Ozs7Ozs7NkJBY21CO1VBQWRBLE9BQWMsdUVBQUosRUFBSTs7YUFDWixLQUFLcXFDLE1BQUwsR0FBYyxLQUFLUSxLQUFMLENBQVc3cUMsT0FBWCxDQUFkLEdBQW9DLEtBQUt6QixJQUFMLENBQVV5QixPQUFWLENBQTNDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7eUJBa0JHOUIsTUFBb0I7OztVQUFkOEIsT0FBYyx1RUFBSixFQUFJOztXQUNsQmc5QixLQUFMLEdBQWE5K0IsSUFBYjtVQUNNZixXQUFXNkMsUUFBUTdDLFFBQVIsSUFBcUIsWUFBTSxFQUE1Qzs7YUFFTyxJQUFJNU8sT0FBSixDQUFZLG1CQUFXO1lBQ3hCaThDLGFBQWEsT0FBSzlJLFFBQUwsSUFBaUIsSUFBbEM7O2VBRUs1RSxXQUFMLENBQWlCZ0IsSUFBakIsQ0FBc0IsRUFBQzUvQixVQUFELEVBQU84TSxjQUFQLEVBQXRCLEVBQTRDLHVCQUFlO2NBQ3JEdy9CLFVBQUosRUFBZ0I7bUJBQ1QxTixXQUFMLENBQWlCVSxNQUFqQixDQUF3QmdOLFVBQXhCO3lCQUNhLElBQWI7Ozt1QkFHVzttQkFBTSxPQUFLcE4sS0FBTCxFQUFOO1dBQWI7O21CQUVTNVYsV0FBVDtrQkFDUUEsV0FBUjtTQVRGO09BSEssQ0FBUDs7Ozs0QkFpQk07VUFDRixLQUFLa2EsUUFBVCxFQUFtQjthQUNaQSxRQUFMLENBQWN0RSxLQUFkOzs7Ozs0QkFJSTtVQUNGLEtBQUtzRSxRQUFULEVBQW1CO2FBQ1pBLFFBQUwsQ0FBY3hELEtBQWQ7Ozs7OytCQUlPO1VBQ0wsS0FBS3dELFFBQVQsRUFBbUI7YUFDWjVFLFdBQUwsQ0FBaUJVLE1BQWpCLENBQXdCLEtBQUtrRSxRQUE3Qjs7V0FFRzl1QyxNQUFMOzs7O3dCQWpSUzthQUNGLEtBQUt4SCxZQUFMLENBQWtCLE1BQWxCLE1BQThCLE9BQTlCLEdBQXdDLE9BQXhDLEdBQWtELE1BQXpEOzs7O3dCQWdGVztVQUNMa2tDLFFBQVEsS0FBS2xrQyxZQUFMLENBQWtCLE9BQWxCLENBQWQ7YUFDTyxlQUFjbkIsSUFBZCxDQUFtQnFsQyxLQUFuQixJQUE0QkEsS0FBNUIsR0FBb0M7OztzQkFHbEN2NkIsT0FBTztXQUNYdkQsWUFBTCxDQUFrQixPQUFsQixFQUEyQnVELEtBQTNCOzs7O3dCQXVCUzthQUNGLEtBQUtpb0MsS0FBWjs7Ozs7OztzQkFNTzkrQixNQUFNO1dBQ1I4K0IsS0FBTCxHQUFhOStCLElBQWI7Ozs7d0JBR2E7YUFDTixLQUFLNkYsUUFBTCxDQUFjLENBQWQsQ0FBUDs7Ozs7Ozs7Ozs7O3dCQVNlO2FBQ1IsS0FBSys0QixXQUFaOztzQkFHYWxWLFFBQVE7VUFDakIsRUFBRUEsa0JBQWtCRCxVQUFwQixDQUFKLEVBQXFDO2NBQzdCdjZCLE1BQU0sb0RBQU4sQ0FBTjs7V0FFRzB2QyxXQUFMLEdBQW1CbFYsTUFBbkI7Ozs7Ozs7Ozs7Ozs7O3dCQVdTO2FBQ0YsS0FBSzBtQixLQUFaOzs7Ozs7Ozs7Ozs7Ozt3QkFXVzthQUNKLEtBQUtMLGFBQUwsQ0FBbUI1RCxNQUFuQixFQUFQOzs7O3dCQXpKOEI7YUFDdkJ5QixrQkFBUDs7Ozt3QkF5UWtCO2FBQ1gsQ0FBQyxTQUFELEVBQVksVUFBWixFQUF3QixVQUF4QixFQUFvQyxXQUFwQyxFQUFpRCxZQUFqRCxDQUFQOzs7O3dCQUd1QjthQUNoQnJQLGFBQVA7Ozs7RUFoZjZDdFE7O0FBb2ZqRDVpQyxlQUFla0csTUFBZixDQUFzQixtQkFBdEIsRUFBMkN1K0MsbUJBQTNDOztBQ2p3QkE7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBaUJBLEFBQ0EsQUFDQSxBQUNBLEFBQ0EsQUFDQSxBQUVBLElBQU12ZixzQkFBbUIsUUFBekI7O0FBRUEsSUFBTTNzQixZQUFTO01BQ1QsV0FEUztvQkFFSyxrQkFGTDtxQkFHTSxtQkFITjtxQkFJTTtDQUpyQjs7QUFPQSxJQUFNcEUsYUFBVzRDLEtBQUtvTCxjQUFMLHdMQUFqQjs7QUFTQSxJQUFNK2lDLFlBQVk7T0FDWCxDQUFDLENBQUQsRUFBSSxFQUFKLENBRFc7WUFFTixDQUFDLENBQUQsRUFBSSxFQUFKO0NBRlo7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztJQThCcUJDOzs7Ozs7Ozs7OzJCQW1HWjs7O1dBQ0FDLFFBQUwsR0FBZ0IsS0FBaEI7V0FDS0MsU0FBTCxHQUFpQixLQUFqQjs7V0FFSzdtQyxjQUFMLEdBQXNCLEtBQUtyRCxTQUFMLENBQWUzVyxJQUFmLENBQW9CLElBQXBCLENBQXRCOzttQkFFYSxJQUFiLEVBQW1CLFlBQU07ZUFDbEJzL0IsUUFBTDtTQUNDLFNBQUQsRUFBWSxVQUFaLEVBQXdCLFVBQXhCLEVBQW9DLE1BQXBDLEVBQTRDLE9BQTVDLEVBQXFELFVBQXJELEVBQWlFNXJCLE9BQWpFLENBQXlFLGFBQUs7aUJBQ3ZFbFUsd0JBQUwsQ0FBOEIzQyxDQUE5QixFQUFpQyxJQUFqQyxFQUF1QyxPQUFLUSxZQUFMLENBQWtCUixDQUFsQixDQUF2QztTQURGO09BRkY7Ozs7K0JBUVM7Z0JBQ0NpZ0MsT0FBVixDQUFrQixJQUFsQjs7V0FFS2xwQixTQUFMLENBQWVyVyxHQUFmLENBQW1CbWpDLG1CQUFuQjs7VUFFSSxFQUFFbnVCLEtBQUt1RSxTQUFMLENBQWUsSUFBZixFQUFxQixnQkFBckIsS0FBMEN2RSxLQUFLdUUsU0FBTCxDQUFlLElBQWYsRUFBcUIsaUJBQXJCLENBQTVDLENBQUosRUFBMEY7YUFDbkZwVSxXQUFMLENBQWlCaU4sV0FBU25OLFNBQVQsQ0FBbUIsSUFBbkIsQ0FBakI7OzttQkFHV3M5QixZQUFiLENBQTBCLElBQTFCLEVBQWdDL3JCLFNBQWhDOztXQUVLK3NDLFNBQUwsR0FBaUIsS0FBS2ptQyxhQUFMLENBQW1CLGdCQUFuQixDQUFqQjtXQUNLa21DLE9BQUwsR0FBZSxLQUFLbG1DLGFBQUwsQ0FBbUIsaUJBQW5CLENBQWY7O1dBRUtpbUMsU0FBTCxDQUFlN1YsT0FBZixHQUF5QixLQUFLMlYsUUFBOUI7V0FDS0UsU0FBTCxDQUFlL0osUUFBZixHQUEwQixLQUFLOEosU0FBL0I7Ozs7MkNBR3FCOzs7bUJBQ1IsSUFBYixFQUFtQixZQUFNO2VBQ2xCQyxTQUFMLENBQWV2eEMsbUJBQWYsQ0FBbUMsUUFBbkMsRUFBNkMsT0FBS3lLLGNBQWxEO2VBQ0t6SyxtQkFBTCxDQUF5QixXQUF6QixFQUFzQyxPQUFLbW5DLFlBQTNDO2VBQ0tubkMsbUJBQUwsQ0FBeUIsTUFBekIsRUFBaUMsT0FBS3NyQyxPQUF0QztlQUNLdHJDLG1CQUFMLENBQXlCLEtBQXpCLEVBQWdDLE9BQUt5eEMsS0FBckM7ZUFDS3p4QyxtQkFBTCxDQUF5QixPQUF6QixFQUFrQyxPQUFLdXhCLFFBQXZDO1lBQ0ksT0FBSzZELGdCQUFULEVBQTJCO2lCQUNwQkEsZ0JBQUwsQ0FBc0J4VixPQUF0Qjs7T0FQSjs7Ozt3Q0FZa0I7OzttQkFDTCxJQUFiLEVBQW1CLFlBQU07ZUFDbEIyeEIsU0FBTCxDQUFlOWhELGdCQUFmLENBQWdDLFFBQWhDLEVBQTBDLE9BQUtnYixjQUEvQztlQUNLaGIsZ0JBQUwsQ0FBc0IsV0FBdEIsRUFBbUMsT0FBSzAzQyxZQUF4QztlQUNLMTNDLGdCQUFMLENBQXNCLE1BQXRCLEVBQThCLE9BQUs2N0MsT0FBbkM7ZUFDSzc3QyxnQkFBTCxDQUFzQixLQUF0QixFQUE2QixPQUFLZ2lELEtBQWxDO2VBQ0toaUQsZ0JBQUwsQ0FBc0IsT0FBdEIsRUFBK0IsT0FBSzhoQyxRQUFwQztlQUNLNkQsZ0JBQUwsR0FBd0IsSUFBSTlmLGVBQUosU0FBMEIsRUFBQzRLLGlCQUFpQixDQUFsQixFQUFxQmMsYUFBYSxHQUFsQyxFQUExQixDQUF4QjtlQUNLaXFCLGVBQUwsR0FBdUIsT0FBS2xSLFVBQUwsQ0FBZ0J0cEMsSUFBaEIsUUFBdkI7T0FQRjs7Ozs4QkFXUWlmLE9BQU87VUFDWEEsU0FBU0EsTUFBTXlDLGVBQW5CLEVBQW9DO2NBQzVCQSxlQUFOOztXQUVHcy9CLEtBQUw7Ozs7NkJBR08vMkIsSUFBSTtVQUNQQSxHQUFHM2YsTUFBSCxDQUFVc0osU0FBVixDQUFvQnN0QixRQUFwQixDQUE2QixlQUE3QixDQUFKLEVBQW1EO1dBQzlDcFYsY0FBSDs7Ozs7NEJBSUk7VUFDRixDQUFDLEtBQUsrMEIsU0FBVixFQUFxQjthQUNkNVYsT0FBTCxHQUFlLENBQUMsS0FBS0EsT0FBckI7O2FBRUtuc0IsbUJBQUwsQ0FBeUIsSUFBekIsRUFBK0IsUUFBL0IsRUFBeUM7aUJBQ2hDLEtBQUttc0IsT0FEMkI7a0JBRS9CLElBRitCO3lCQUd4QjtTQUhqQjs7Ozs7aUNBUVNwdUMsR0FBRztVQUNSVixJQUFJLEtBQUs4a0QsVUFBZjthQUNPNzVDLEtBQUttUSxHQUFMLENBQVNwYixFQUFFLENBQUYsQ0FBVCxFQUFlaUwsS0FBS2tRLEdBQUwsQ0FBU25iLEVBQUUsQ0FBRixDQUFULEVBQWUsS0FBSytrRCxPQUFMLEdBQWVya0QsRUFBRTZwQixPQUFGLENBQVUwQixNQUF4QyxDQUFmLENBQVA7Ozs7NEJBR012ckIsR0FBRztVQUNMLENBQUMsS0FBS2s2QyxRQUFWLEVBQW9CO3FCQUNMLzdCLFdBQWIsQ0FBeUIsSUFBekIsRUFBK0IsUUFBL0I7aUJBQ1NoYyxnQkFBVCxDQUEwQixTQUExQixFQUFxQyxLQUFLdzdDLGVBQTFDOzs7OztpQ0FJUzM5QyxHQUFHO1VBQ1YsS0FBS2s2QyxRQUFMLElBQWlCLENBQUMsTUFBRCxFQUFTLE9BQVQsRUFBa0JsM0MsT0FBbEIsQ0FBMEJoRCxFQUFFNnBCLE9BQUYsQ0FBVXdDLFNBQXBDLE1BQW1ELENBQUMsQ0FBekUsRUFBNEU7cUJBQzdEbk8sY0FBYixDQUE0QixJQUE1QixFQUFrQyxRQUFsQzs7OztRQUlBMkcsZUFBRjs7bUJBRWExRyxXQUFiLENBQXlCLElBQXpCLEVBQStCLFFBQS9CO1dBQ0trbUMsT0FBTCxHQUFlLEtBQUtELFVBQUwsQ0FBZ0IsS0FBS2hXLE9BQUwsR0FBZSxDQUFmLEdBQW1CLENBQW5DLENBQWYsQ0FUYzs7V0FXVGpzQyxnQkFBTCxDQUFzQixNQUF0QixFQUE4QixLQUFLa2tDLE9BQW5DO2VBQ1Nsa0MsZ0JBQVQsQ0FBMEIsU0FBMUIsRUFBcUMsS0FBS3c3QyxlQUExQzs7Ozs0QkFHTTM5QyxHQUFHO1FBQ1A2cEIsT0FBRixDQUFVa0YsUUFBVixDQUFtQkUsY0FBbkI7V0FDS2kxQixPQUFMLENBQWE3cEMsS0FBYixDQUFtQnVoQixJQUFuQixHQUEwQixLQUFLMG9CLFlBQUwsQ0FBa0J0a0QsQ0FBbEIsSUFBdUIsSUFBakQ7Ozs7K0JBR1NBLEdBQUc7VUFDTlYsSUFBSSxLQUFLOGtELFVBQWY7VUFDTWpoQyxXQUFXLEtBQUttaEMsWUFBTCxDQUFrQnRrRCxDQUFsQixDQUFqQjtVQUNNdWtELGdCQUFnQixLQUFLblcsT0FBM0I7O1dBRUtBLE9BQUwsR0FBZWpyQixZQUFZLENBQUM3akIsRUFBRSxDQUFGLElBQU9BLEVBQUUsQ0FBRixDQUFSLElBQWdCLENBQTNDOztVQUVJLEtBQUs4dUMsT0FBTCxLQUFpQm1XLGFBQXJCLEVBQW9DO2FBQzdCdGlDLG1CQUFMLENBQXlCLElBQXpCLEVBQStCLFFBQS9CLEVBQXlDO2lCQUNoQyxLQUFLbXNCLE9BRDJCO2tCQUUvQixJQUYrQjt5QkFHeEI7U0FIakI7OztXQU9HMTdCLG1CQUFMLENBQXlCLE1BQXpCLEVBQWlDLEtBQUsyekIsT0FBdEM7ZUFDUzN6QixtQkFBVCxDQUE2QixTQUE3QixFQUF3QyxLQUFLaXJDLGVBQTdDOztXQUVLdUcsT0FBTCxDQUFhN3BDLEtBQWIsQ0FBbUJ1aEIsSUFBbkIsR0FBMEIsRUFBMUI7bUJBQ2ExZCxjQUFiLENBQTRCLElBQTVCLEVBQWtDLFFBQWxDOzs7OzZDQThCdUJoUixNQUFNa0osTUFBTUMsU0FBUzs7O21CQUMvQixJQUFiLEVBQW1CLFlBQU07Z0JBQ2hCbkosSUFBUDtlQUNPLE9BQUw7Z0JBQ00sQ0FBQyxPQUFLNkosU0FBTCxDQUFlc3RCLFFBQWYsQ0FBd0JSLG1CQUF4QixDQUFMLEVBQWdEO3FCQUN6Q2pqQixTQUFMLEdBQWlCaWpCLHNCQUFtQixHQUFuQixHQUF5Qnh0QixPQUExQzs7OztlQUlDLFVBQUw7bUJBQ09tdUMsV0FBTCxHQUFtQixDQUFDbnVDLFdBQVcsRUFBWixFQUFnQnJULE9BQWhCLENBQXdCLFVBQXhCLE1BQXdDLENBQUMsQ0FBNUQ7bUJBQ0tvaEQsVUFBTCxHQUFrQlAsVUFBVSxPQUFLVyxXQUFMLEdBQW1CLFVBQW5CLEdBQWdDLEtBQTFDLENBQWxCO3lCQUNhN2dCLGlCQUFiLENBQStCdnRCLElBQS9CLEVBQXFDQyxPQUFyQyxVQUFvRGEsU0FBcEQ7OztlQUdHLFVBQUw7bUJBQ08rc0MsU0FBTCxDQUFlajRDLEVBQWYsR0FBb0JxSyxPQUFwQjs7O2VBR0csU0FBTDttQkFDTzB0QyxRQUFMLEdBQWdCMXRDLFlBQVksSUFBNUI7bUJBQ0s0dEMsU0FBTCxDQUFlN1YsT0FBZixHQUF5Qi8zQixZQUFZLElBQXJDO2lCQUNLK00sZUFBTCxDQUFxQixPQUFLNmdDLFNBQTFCLEVBQXFDLzJDLElBQXJDLEVBQTJDbUosWUFBWSxJQUF2RDs7O2VBR0csVUFBTDttQkFDTzJ0QyxTQUFMLEdBQWlCM3RDLFlBQVksSUFBN0I7bUJBQ0s0dEMsU0FBTCxDQUFlL0osUUFBZixHQUEwQjdqQyxZQUFZLElBQXRDO2lCQUNLK00sZUFBTCxDQUFxQixPQUFLNmdDLFNBQTFCLEVBQXFDLzJDLElBQXJDLEVBQTJDbUosWUFBWSxJQUF2RDs7OztnQkFJSUEsWUFBWSxJQUFoQixFQUFzQjtxQkFDZjR0QyxTQUFMLENBQWVyOUMsWUFBZixDQUE0QnNHLElBQTVCLEVBQWtDbUosT0FBbEM7YUFERixNQUVPO3FCQUNBNHRDLFNBQUwsQ0FBZW45QyxlQUFmLENBQStCb0csSUFBL0I7OztPQWxDUjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O3dCQTVNWTthQUNMLEtBQUs2MkMsUUFBWjs7c0JBR1U1NUMsT0FBTztXQUNaNDVDLFFBQUwsR0FBZ0IsQ0FBQyxDQUFDNTVDLEtBQWxCO1dBQ0tpWixlQUFMLENBQXFCLElBQXJCLEVBQTJCLFNBQTNCLEVBQXNDLEtBQUsyZ0MsUUFBM0M7Ozs7Ozs7Ozs7Ozs7d0JBVWE7YUFDTixLQUFLQyxTQUFaOztzQkFHVzc1QyxPQUFPOzs7bUJBQ0wsSUFBYixFQUFtQixZQUFNO2VBQ2xCNjVDLFNBQUwsR0FBaUIsQ0FBQyxDQUFDNzVDLEtBQW5CO2FBQ0tpWixlQUFMLFNBQTJCLFVBQTNCLEVBQXVDLE9BQUs0Z0MsU0FBNUM7ZUFDS0MsU0FBTCxDQUFlL0osUUFBZixHQUEwQixPQUFLOEosU0FBL0I7T0FIRjs7Ozs7Ozs7Ozs7Ozs7d0JBZWE7YUFDTixLQUFLQyxTQUFaOzs7Ozs7Ozs7Ozs7O3dCQTBKVTthQUNILENBQUMsS0FBS2w0QyxjQUFMLENBQW9CLFdBQXBCLENBQUQsR0FDSCxLQUFLdkwsWUFBTCxDQUFrQixPQUFsQixDQURHLEdBRUgsS0FBS3lqRCxTQUFMLENBQWU5NUMsS0FGbkI7O3NCQUtRaUIsS0FBSzs7O21CQUNBLElBQWIsRUFBbUIsWUFBTTtlQUNsQjY0QyxTQUFMLENBQWU5NUMsS0FBZixHQUF1QmlCLEdBQXZCO09BREY7Ozs7d0JBdEI4QjthQUN2QixDQUFDLFVBQUQsRUFBYSxVQUFiLEVBQXlCLFNBQXpCLEVBQW9DLE9BQXBDLEVBQTZDLFVBQTdDLEVBQXlELE9BQXpELENBQVA7Ozs7d0JBR2tCO2FBQ1gsQ0FBQyxRQUFELENBQVA7Ozs7RUFoUHVDbTJCOztBQWdUM0M1aUMsZUFBZWtHLE1BQWYsQ0FBc0IsWUFBdEIsRUFBb0NpL0MsYUFBcEM7O0FDeFhBOzs7Ozs7Ozs7Ozs7Ozs7O0FBZ0JBLEFBQ0EsQUFDQSxBQUVBLElBQWFXLGNBQWI7Ozs7Ozs7Ozs0QkFRbUU7bUZBQUosRUFBSTsyQkFBcERoZ0MsTUFBb0Q7UUFBcERBLE1BQW9ELCtCQUEzQyxRQUEyQzs2QkFBakMzTyxRQUFpQztRQUFqQ0EsUUFBaUMsaUNBQXRCLEdBQXNCOzBCQUFqQkMsS0FBaUI7UUFBakJBLEtBQWlCLDhCQUFULENBQVM7OzswSEFDekQsRUFBRTBPLGNBQUYsRUFBVTNPLGtCQUFWLEVBQW9CQyxZQUFwQixFQUR5RDs7Ozs7Ozs7Ozs7Ozs7MEJBVzNEKzRCLFNBbkJSLEVBbUJtQkMsU0FuQm5CLEVBbUI4QjJWLGNBbkI5QixFQW1COENDLGNBbkI5QyxFQW1COEQxc0MsSUFuQjlELEVBbUJvRTtZQUMxRCxJQUFJelYsS0FBSixDQUFVLGtDQUFWLENBQU47Ozs7RUFwQmdDODZCLFlBQXBDOztBQXlCQSxJQUFhc25CLGtCQUFiOzs7Ozs7Ozs7OzBCQUNROVYsU0FEUixFQUNtQkMsU0FEbkIsRUFDOEI4VixVQUQ5QixFQUMwQ0MsVUFEMUMsRUFDc0Q3c0MsSUFEdEQsRUFDNEQ7aUJBQzdDQSxJQUFYLEVBQWlCLE9BQU8sRUFBeEI7Ozs7RUFGb0N3c0MsY0FBeEM7O0FBTUEsSUFBYU0sa0JBQWI7Ozs7Ozs7Ozs7MEJBQ1FqVyxTQURSLEVBQ21CQyxTQURuQixFQUM4QjJWLGNBRDlCLEVBQzhDQyxjQUQ5QyxFQUM4RDFzQyxJQUQ5RCxFQUNvRTthQUN6RHVQLE1BQVAsQ0FDRW9XLE9BQU9rUixTQUFQLEVBQ0cxTSxTQURILEdBRUcxYixLQUZILENBRVM7bUJBQ00sc0JBRE47aUJBRUk7T0FKYixFQU1HOUosSUFOSCxDQU1RLEtBQUs3RyxLQU5iLEVBT0cyUSxLQVBILENBT1M7bUJBQ00sc0JBRE47aUJBRUk7T0FUYixFQVVLO2tCQUNTLEtBQUs1USxRQURkO2dCQUVPLEtBQUsyTztPQVpqQixFQWNHNGQsWUFkSCxHQWVHM2IsS0FmSCxDQWVTLFVBQVNuVSxRQUFULEVBQW1COzs7T0FmNUIsQ0FERixFQXFCRXFyQixPQUFPbVIsU0FBUCxFQUNHcm9CLEtBREgsQ0FDUzttQkFDTSxzQkFETjtpQkFFSTtPQUhiLEVBS0c5SixJQUxILENBS1EsS0FBSzdHLEtBTGIsRUFNRzJRLEtBTkgsQ0FNUzttQkFDTSxzQkFETjtpQkFFSTtPQVJiLEVBU0s7a0JBQ1MsS0FBSzVRLFFBRGQ7Z0JBRU8sS0FBSzJPO09BWGpCLENBckJGOzs7O0VBRm9DZ2dDLGNBQXhDOztBQXdDQSxJQUFhTyxtQkFBYjs7O2lDQUNxRTtvRkFBSixFQUFJOzZCQUF0RHZnQyxNQUFzRDtRQUF0REEsTUFBc0QsZ0NBQTdDLFNBQTZDOytCQUFsQzNPLFFBQWtDO1FBQWxDQSxRQUFrQyxrQ0FBdkIsSUFBdUI7NEJBQWpCQyxLQUFpQjtRQUFqQkEsS0FBaUIsK0JBQVQsQ0FBUzs7O29JQUMzRCxFQUFFME8sY0FBRixFQUFVM08sa0JBQVYsRUFBb0JDLFlBQXBCLEVBRDJEOzs7Ozs7Ozs7OzswQkFRN0QrNEIsU0FUUixFQVNtQkMsU0FUbkIsRUFTOEI4VixVQVQ5QixFQVMwQ0MsVUFUMUMsRUFTc0Q3c0MsSUFUdEQsRUFTNEQ7VUFDbERndEMsTUFBTUosYUFBYUMsVUFBekI7O2FBRU90OUIsTUFBUCxDQUNFb1csT0FBT2tSLFNBQVAsRUFDRzFNLFNBREgsR0FFRzFiLEtBRkgsQ0FFUzttQkFDTSxrQkFBa0J1K0IsTUFBTSxFQUFOLEdBQVcsR0FBN0IsSUFBb0M7T0FIbkQsRUFLR3JvQyxJQUxILENBS1EsS0FBSzdHLEtBTGIsRUFNRzJRLEtBTkgsQ0FNUzttQkFDTTtPQVBmLEVBUUs7a0JBQ1MsS0FBSzVRLFFBRGQ7Z0JBRU8sS0FBSzJPO09BVmpCLEVBWUc0ZCxZQVpILEdBYUczYixLQWJILENBYVMsVUFBU25VLFFBQVQsRUFBbUI7OztPQWI1QixDQURGLEVBa0JFcXJCLE9BQU9tUixTQUFQLEVBQ0dyb0IsS0FESCxDQUNTO21CQUNNO09BRmYsRUFJRzlKLElBSkgsQ0FJUSxLQUFLN0csS0FKYixFQUtHMlEsS0FMSCxDQUtTO21CQUNNLGtCQUFrQnUrQixNQUFNLEdBQU4sR0FBWSxFQUE5QixJQUFvQztPQU5uRCxFQU9LO2tCQUNTLEtBQUtudkMsUUFEZDtnQkFFTyxLQUFLMk87T0FUakIsQ0FsQkY7Ozs7RUFacUNnZ0MsY0FBekM7O0FDM0ZBOzs7Ozs7Ozs7Ozs7Ozs7OztBQWlCQSxBQUNBLEFBQ0EsQUFDQSxBQUNBLEFBQ0EsQUFDQSxBQUNBLEFBQ0EsQUFDQSxBQUVBLElBQU12dEMsWUFBUztzQkFDTyxvQkFEUDthQUVGO0NBRmI7O0FBS0EsSUFBTXFyQixrQkFBZ0I7YUFDVHFpQixrQkFEUztVQUVaRyxrQkFGWTtXQUdYQyxtQkFIVztVQUlaSjtDQUpWOztBQU9BLElBQU0vUyxnQkFBYzs7Ozs7T0FBQSxpQkFLWnFULGFBTFksRUFLRzN5QyxRQUxILEVBS2E7OztDQUxqQzs7QUFVQSxJQUFNMHBCLGVBQWMsWUFBTTtNQUNwQmw1QixJQUFJLENBQVI7U0FDTztXQUFNLG9CQUFxQkEsR0FBM0I7R0FBUDtDQUZpQixFQUFuQjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBK0NxQm9pRDs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzJCQWdGWjs7O1dBQ0FDLFNBQUwsR0FBaUJucEIsY0FBakI7O21CQUVhLElBQWIsRUFBbUIsWUFBTTtlQUNsQndHLFFBQUw7O1lBRU16NEIsVUFBVSxPQUFLK1gsZUFBckI7YUFDSyxJQUFJaGYsSUFBSSxDQUFiLEVBQWdCQSxJQUFJaUgsUUFBUW1QLFFBQVIsQ0FBaUIxWCxNQUFyQyxFQUE2Q3NCLEdBQTdDLEVBQWtEO2tCQUN4Q29XLFFBQVIsQ0FBaUJwVyxDQUFqQixFQUFvQnNYLEtBQXBCLENBQTBCb2hCLE9BQTFCLEdBQW9DLE1BQXBDOzs7WUFHSTRwQixjQUFjLE9BQUs3a0QsWUFBTCxDQUFrQixhQUFsQixDQUFwQjs7WUFFTThrRCxTQUFTLE9BQUtDLGNBQXBCO1lBQ0lGLGVBQWVDLE9BQU9uc0MsUUFBUCxDQUFnQjFYLE1BQWhCLEdBQXlCNGpELFdBQTVDLEVBQXlEO2lCQUNoRGxzQyxRQUFQLENBQWdCa3NDLFdBQWhCLEVBQTZCeitDLFlBQTdCLENBQTBDLFFBQTFDLEVBQW9ELE1BQXBEOzs7a0JBR1FxNUIsT0FBVjtxQkFDYWdELFlBQWIsU0FBZ0MvckIsU0FBaEM7O2VBRUs0ckIsZ0JBQUwsR0FBd0IsSUFBSXR1QixlQUFKLENBQW9CO3FCQUMvQit0QixlQUQrQjtxQkFFL0JraUIsY0FGK0I7eUJBRzNCLGdCQUgyQjs0QkFJeEIsT0FBS2prRCxZQUFMLENBQWtCLFdBQWxCO1NBSkksQ0FBeEI7T0FsQkY7Ozs7d0NBMkJrQjs7O21CQUNMLElBQWIsRUFBbUI7ZUFBTSxPQUFLMC9CLGVBQUwsRUFBTjtPQUFuQjs7OzsrQkFXUztVQUNMLEtBQUtuZSxlQUFMLElBQXdCLEtBQUt3akMsY0FBakMsRUFBaUQ7WUFDekN2N0MsVUFBVTBMLEtBQUt1RSxTQUFMLENBQWUsSUFBZixFQUFxQixrQkFBckIsQ0FBaEI7WUFDTXVyQyxNQUFNOXZDLEtBQUt1RSxTQUFMLENBQWUsSUFBZixFQUFxQixTQUFyQixDQUFaOztnQkFFUWxELFNBQVIsQ0FBa0JyVyxHQUFsQixDQUFzQixxQkFBdEI7WUFDSXFXLFNBQUosQ0FBY3JXLEdBQWQsQ0FBa0Isb0JBQWxCO09BTEYsTUFNTzs7WUFFQ3NKLFdBQVUwTCxLQUFLaUwsTUFBTCxDQUFZLHNDQUFaLENBQWhCO1lBQ00ya0MsU0FBUzV2QyxLQUFLaUwsTUFBTCxDQUFZLDRCQUFaLENBQWY7O2VBRU8sS0FBS2hnQixVQUFaLEVBQXdCO2lCQUNma0YsV0FBUCxDQUFtQixLQUFLbEYsVUFBeEI7OzthQUdHa0YsV0FBTCxDQUFpQm1FLFFBQWpCO2FBQ0tuRSxXQUFMLENBQWlCeS9DLE1BQWpCOzs7OztzQ0FJc0Q7OztVQUExQ25pQyxRQUEwQyx1RUFBL0IsS0FBSzNpQixZQUFMLENBQWtCLFVBQWxCLENBQStCOztVQUNsRGtiLE1BQU0sS0FBSytwQyxJQUFMLEdBQVl0aUMsYUFBYSxLQUFiLElBQXVCQSxhQUFhLE1BQWIsSUFBdUJyVSxTQUFTbUIsU0FBVCxFQUF0RTtVQUNNd1EsU0FBUy9FLE1BQU1oRyxLQUFLeUksV0FBWCxHQUF5QnpJLEtBQUt3SSxjQUE3Qzs7YUFFTyxJQUFQLEVBQWEsS0FBYjs7VUFFTTVLLE9BQU9vQyxLQUFLc0UsVUFBTCxDQUFnQixJQUFoQixFQUFzQixVQUF0QixDQUFiO1VBQ0kxRyxJQUFKLEVBQVU7cUJBQ0tBLElBQWIsRUFBbUIsWUFBTTtpQkFDbEIrRyxLQUFMLENBQVdxQixHQUFYLEdBQWlCQSxNQUFNaGQsT0FBT3VrQixnQkFBUCxDQUF3QjNQLEtBQUtzOEIsa0JBQUwsRUFBeEIsRUFBbUQsSUFBbkQsRUFBeUQxc0IsZ0JBQXpELENBQTBFLGFBQTFFLENBQU4sR0FBaUcsRUFBbEg7O2NBRUl4TixLQUFLM0YsS0FBTCxDQUFXdUQsS0FBSzNTLFVBQWhCLEVBQTRCLGFBQTVCLENBQUosRUFBZ0Q7bUJBQ3ZDMlMsS0FBSzNTLFVBQVosRUFBd0IsVUFBeEI7O1NBSko7OztpQkFTT3dSLGlCQUFULENBQTJCLFlBQU07WUFDekIyaUMsU0FBU3AvQixLQUFLc0UsVUFBTCxTQUFzQjtpQkFBS2hhLEVBQUV3WCxZQUFGLENBQWUsaUJBQWYsQ0FBTDtTQUF0QixDQUFmO2FBQ0s0TCxlQUFMLFNBQTJCLGlCQUEzQixFQUE4QzFILE9BQU8sQ0FBQ281QixNQUF0RDtPQUZGOzs7O3dDQU1rQjthQUNYcC9CLEtBQUt1RSxTQUFMLENBQWUsSUFBZixFQUFxQixTQUFyQixDQUFQOzs7Ozs7Ozs7a0NBTVk7YUFDTCxLQUFLbXJDLFNBQVo7Ozs7Ozs7Ozs2Q0FNdUI7VUFDakJqeEMsUUFBUSxLQUFLNE4sZUFBTCxDQUFxQjVJLFFBQW5DO1VBQ0k3RixPQUFPLElBQVg7V0FDSyxJQUFJdlEsSUFBSSxDQUFiLEVBQWdCQSxJQUFJb1IsTUFBTTFTLE1BQTFCLEVBQWtDc0IsR0FBbEMsRUFBdUM7WUFDakNvUixNQUFNcFIsQ0FBTixFQUFTc1gsS0FBVCxDQUFlb2hCLE9BQWYsS0FBMkIsTUFBL0IsRUFBdUM7aUJBQzlCdG5CLE1BQU1wUixDQUFOLENBQVA7Ozs7O1VBS0F1USxRQUFRQSxLQUFLUCxRQUFMLENBQWMvRCxXQUFkLE9BQWdDLFVBQTVDLEVBQXdEO2NBQ2hELElBQUl4TSxLQUFKLENBQVUsMkRBQVYsQ0FBTjs7O2FBR0s4USxJQUFQOzs7Ozs7Ozs7Ozs7Ozs7O2dDQXFCVTJELFNBQVM3QixTQUFTO1VBQ3RCc3dDLGlCQUFpQixLQUFLQyxlQUFMLElBQXdCNXpDLFdBQVNFLFdBQXhEO1dBQ0swekMsZUFBTCxHQUF1QjF1QyxPQUF2QjtVQUNNM0IsV0FBVyxLQUFLd3RCLGdCQUFMLENBQXNCckYsV0FBdEIsQ0FBa0Nyb0IsT0FBbEMsQ0FBakI7O2FBRU8sSUFBSXpSLE9BQUosQ0FBWSxtQkFBVztZQUN4QitoRCxtQkFBbUIzekMsV0FBU0UsV0FBaEMsRUFBNkM7eUJBQzVCcWhDLEtBQWY7OztpQkFHTzFxQyxLQUFULENBQWVxTyxPQUFmLEVBQXdCeXVDLGNBQXhCLEVBQXdDdHdDLFFBQVF3d0MsZ0JBQWhELEVBQWtFeHdDLFFBQVF5d0MsZ0JBQTFFLEVBQTRGLFlBQU07Y0FDNUZILG1CQUFtQjN6QyxXQUFTRSxXQUFoQyxFQUE2QzsyQkFDNUJvSSxLQUFmLENBQXFCb2hCLE9BQXJCLEdBQStCLE1BQS9COzs7a0JBR01waEIsS0FBUixDQUFjb2hCLE9BQWQsR0FBd0IsT0FBeEI7a0JBQ1ErVyxLQUFSOztjQUVJcDlCLFFBQVE3QyxRQUFSLFlBQTRCeE8sUUFBaEMsRUFBMEM7b0JBQ2hDd08sUUFBUjs7O2tCQUdNMEUsT0FBUjtTQVpGO09BTEssQ0FBUDs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztpQ0ErQ1dRLE9BQXFCOzs7VUFBZHJDLE9BQWMsdUVBQUosRUFBSTs7VUFDNUJBLFdBQVcsUUFBT0EsT0FBUCx5Q0FBT0EsT0FBUCxNQUFrQixRQUFqQyxFQUEyQztjQUNuQyxJQUFJNVMsS0FBSixDQUFVLDZDQUE2QzRTLE9BQXZELENBQU47OztjQUdNUSxnQkFBUixHQUEyQkYsS0FBS0MsTUFBTCxDQUN6QlAsUUFBUVEsZ0JBQVIsSUFBNEIsRUFESCxFQUV6QnBCLGdCQUFnQjJ1QiwyQkFBaEIsQ0FBNEMsS0FBSzNpQyxZQUFMLENBQWtCLG1CQUFsQixDQUE1QyxDQUZ5QixDQUEzQjs7VUFLSSxDQUFDNFUsUUFBUUcsU0FBVCxJQUFzQixLQUFLaUMsWUFBTCxDQUFrQixXQUFsQixDQUExQixFQUEwRDtnQkFDaERqQyxTQUFSLEdBQW9CLEtBQUsvVSxZQUFMLENBQWtCLFdBQWxCLENBQXBCOzs7VUFHSXNsRCxjQUFjLEtBQUtDLG9CQUFMLEVBQXBCO1VBQ0VDLGNBQWMsS0FBS0MsY0FBTCxDQUFvQnh1QyxLQUFwQixDQURoQjtVQUVFb3VDLG1CQUFtQixLQUFLSyxpQkFBTCxFQUZyQjtVQUdFTixtQkFBbUJudUMsS0FIckI7VUFJRTB1QyxzQkFBc0IsS0FBS0Msc0JBQUwsRUFKeEI7O1VBTUksQ0FBQ0osV0FBTCxFQUFrQjtlQUNUcmlELFFBQVFlLE1BQVIsQ0FBZSx5Q0FBZixDQUFQOzs7VUFHRWtoRCxxQkFBcUJDLGdCQUF6QixFQUEyQzthQUNwQzVqQyxtQkFBTCxDQUF5QixJQUF6QixFQUErQixVQUEvQixFQUEyQztpQkFDbEMyakMsZ0JBRGtDO21CQUVoQ0k7U0FGWDs7ZUFLT3JpRCxRQUFRNFAsT0FBUixDQUFnQjR5QyxtQkFBaEIsQ0FBUDs7O1VBR0U1TixXQUFXLEtBQWY7O1dBRUt0MkIsbUJBQUwsQ0FBeUIsSUFBekIsRUFBK0IsV0FBL0IsRUFBNEM7ZUFDbkMyakMsZ0JBRG1DO2lCQUVqQ0ksV0FGaUM7Z0JBR2xDO2lCQUFNek4sV0FBVyxJQUFqQjs7T0FIVjs7VUFNSUEsUUFBSixFQUFjO29CQUNBOE4sV0FBWjtZQUNJUCxXQUFKLEVBQWlCO3NCQUNIUSxTQUFaOztlQUVLM2lELFFBQVFlLE1BQVIsQ0FBZSw4QkFBZixDQUFQOzs7a0JBR1U0aEQsU0FBWjs7VUFFTS9oQyxzQkFDRG5QLE9BREM7MEJBRWN5d0MsZ0JBRmQ7MEJBR2NEO1FBSHBCOztVQU1JRSxXQUFKLEVBQWlCO29CQUNITyxXQUFaO09BREYsTUFFTztlQUNFOXdDLFNBQVAsR0FBbUIsTUFBbkI7OzthQUdLLElBQUk1UixPQUFKLENBQVksbUJBQVc7b0JBQ2hCNGlELGdCQUFaLENBQTZCLE9BQUt4a0MsZUFBbEMsRUFBbUQsdUJBQWU7c0JBQ3BEamIsZUFBWixDQUE0QixPQUE1Qjs7aUJBRUswL0MsV0FBTCxDQUFpQjVwQixXQUFqQixFQUE4QnJZLE1BQTlCLEVBQ0dqUSxJQURILENBQ1EsZ0JBQVE7aUJBQ1AyTixtQkFBTCxTQUErQixZQUEvQixFQUE2QztxQkFDcEMyakMsZ0JBRG9DO3VCQUVsQ0k7YUFGWDs7bUJBS096eUMsUUFBUUQsSUFBUixDQUFQO1dBUEo7U0FIRjtPQURLLENBQVA7Ozs7Ozs7Ozs7Ozs7O3dDQXlCa0IybUIsU0FBUztXQUN0QmxZLGVBQUwsQ0FBcUIxSCxLQUFyQixDQUEyQixLQUFLb3JDLElBQUwsR0FBWSxLQUFaLEdBQW9CLFFBQS9DLElBQTJEeHJCLFVBQVUsRUFBVixHQUFlLEtBQTFFO1dBQ0t3c0IsaUJBQUwsR0FBeUJwc0MsS0FBekIsQ0FBK0JvaEIsT0FBL0IsR0FBeUN4QixVQUFVLEVBQVYsR0FBZSxNQUF4RDs7OzsyQkFHSztXQUNBeXNCLG1CQUFMLENBQXlCLElBQXpCOzs7OzJCQUdLO1dBQ0FBLG1CQUFMLENBQXlCLEtBQXpCOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozt3Q0F5QmtCO1VBQ1pDLE9BQU8sS0FBS0YsaUJBQUwsR0FBeUJ0dEMsUUFBdEM7O1dBRUssSUFBSXBXLElBQUksQ0FBYixFQUFnQkEsSUFBSTRqRCxLQUFLbGxELE1BQXpCLEVBQWlDc0IsR0FBakMsRUFBc0M7WUFDaEM0akQsS0FBSzVqRCxDQUFMLGFBQW1CNmpELFVBQW5CLElBQWlDRCxLQUFLNWpELENBQUwsRUFBUThqRCxRQUF6QyxJQUFxREYsS0FBSzVqRCxDQUFMLEVBQVE4akQsUUFBUixFQUF6RCxFQUE2RTtpQkFDcEU5akQsQ0FBUDs7OzthQUlHLENBQUMsQ0FBUjs7Ozs7Ozs7OzJDQU1xQjthQUNkLEtBQUtrakQsY0FBTCxDQUFvQixLQUFLQyxpQkFBTCxFQUFwQixDQUFQOzs7Ozs7Ozs7bUNBTWF6dUMsT0FBTzthQUNiLEtBQUtndkMsaUJBQUwsR0FBeUJ0dEMsUUFBekIsQ0FBa0MxQixLQUFsQyxDQUFQOzs7OzJDQUdxQjs7OzRCQUVmO1VBQ0FxdkMscUJBQXFCLEtBQUtWLHNCQUFMLEVBQTNCO1VBQ0lVLGtCQUFKLEVBQXdCOzJCQUNIdFUsS0FBbkI7Ozs7OzRCQUlJO1VBQ0FzVSxxQkFBcUIsS0FBS1Ysc0JBQUwsRUFBM0I7VUFDSVUsa0JBQUosRUFBd0I7MkJBQ0h4VCxLQUFuQjs7Ozs7K0JBSU87VUFDSHFULE9BQU8sS0FBS0YsaUJBQUwsR0FBeUJ0dEMsUUFBdEM7V0FDSyxJQUFJcFcsSUFBSTRqRCxLQUFLbGxELE1BQUwsR0FBYyxDQUEzQixFQUE4QnNCLEtBQUssQ0FBbkMsRUFBc0NBLEdBQXRDLEVBQTJDO2FBQ3BDQSxDQUFMLEVBQVFpRixNQUFSOztXQUVHQSxNQUFMOzs7OzZDQU91QmtGLE1BQU1rSixNQUFNQyxTQUFTO1VBQ3hDbkosU0FBUyxVQUFiLEVBQXlCO2VBQ2hCaUosYUFBYXd0QixpQkFBYixDQUErQnZ0QixJQUEvQixFQUFxQ0MsT0FBckMsRUFBOEMsSUFBOUMsRUFBb0RhLFNBQXBELENBQVA7Ozs7O3dCQTVVa0I7YUFDYnhCLEtBQUt1RSxTQUFMLENBQWUsSUFBZixFQUFxQixrQkFBckIsQ0FBUDs7Ozt3QkFHbUI7YUFDWnZFLEtBQUt1RSxTQUFMLENBQWUsSUFBZixFQUFxQixTQUFyQixDQUFQOzs7O3dCQThFWTthQUNMLEtBQUttc0Msc0JBQUwsRUFBUDs7Ozt3QkFHVTthQUNIMXdDLEtBQUt5TCxTQUFMLENBQWUsS0FBS1ksZUFBTCxDQUFxQjVJLFFBQXBDLENBQVA7Ozs7d0JBOEtZO2FBQ0wsS0FBS3N0QyxpQkFBTCxHQUF5QnBzQyxLQUF6QixDQUErQm9oQixPQUEvQixLQUEyQyxNQUFsRDs7Ozs7Ozs7OztxQ0F5RnNCdnVCLE1BQU1zSSxVQUFVO1VBQ2xDLEVBQUVBLFNBQVMzUyxTQUFULFlBQThCNGhELGNBQWhDLENBQUosRUFBcUQ7Y0FDN0MsSUFBSWppRCxLQUFKLENBQVUsNERBQVYsQ0FBTjs7c0JBRVkwSyxJQUFkLElBQXNCc0ksUUFBdEI7Ozs7d0JBOUI4QjthQUN2QixDQUFDLFVBQUQsQ0FBUDs7Ozt3QkFTdUI7YUFDaEJxOEIsYUFBUDs7Ozt3QkFHMEI7YUFDbkI0UyxjQUFQOzs7O3dCQUdrQjthQUNYLENBQUMsV0FBRCxFQUFjLFlBQWQsRUFBNEIsVUFBNUIsQ0FBUDs7Ozt3QkFjcUI7YUFDZGxpQixlQUFQOzs7O0VBMWR1Q2hCOztBQThkM0M1aUMsZUFBZWtHLE1BQWYsQ0FBc0IsWUFBdEIsRUFBb0NzZ0QsYUFBcEM7O0FDL2pCQTs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFpQkEsQUFDQSxBQUNBLEFBQ0EsQUFDQSxBQUNBLEFBQ0EsQUFDQSxBQUVBLElBQU10aEIsc0JBQW1CLGNBQXpCOztBQUVBLElBQU0zc0IsWUFBUztNQUNULGlCQURTO3FCQUVNO0NBRnJCOztBQUtBLElBQU1vL0IsbUJBQWlCNWdDLEtBQUt6USxhQUFMLHVIQUF2Qjs7QUFPQSxJQUFNOGhELDZCQUE2QnJ4QyxLQUFLelEsYUFBTCxvTkFBbkM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUEyRHFCMmhEOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7MkJBd0RaOzs7V0FDQTFVLFdBQUwsR0FBbUI5VSxpQkFBbkI7V0FDS2dWLEtBQUwsR0FBYSxJQUFiOztVQUVJLEtBQUs1NkIsWUFBTCxDQUFrQixPQUFsQixLQUE4QixLQUFLQSxZQUFMLENBQWtCLE1BQWxCLENBQTlCLElBQTJELEtBQUtBLFlBQUwsQ0FBa0IsT0FBbEIsQ0FBL0QsRUFBMkY7YUFDcEZpckIsUUFBTDtPQURGLE1BRU87cUJBQ1EsSUFBYixFQUFtQixZQUFNO2lCQUNsQkEsUUFBTDtTQURGOzs7V0FLR3VCLGFBQUwsR0FBcUIsS0FBS0MsUUFBTCxDQUFjOWdDLElBQWQsQ0FBbUIsSUFBbkIsQ0FBckI7Ozs7cUNBR2U7YUFDUixLQUFLbVEsSUFBTCxJQUFhLEtBQUs5UyxZQUFMLENBQWtCLE1BQWxCLENBQXBCOzs7O3NDQXNCZ0I7VUFDWixLQUFLMlksUUFBTCxDQUFjMVgsTUFBZCxJQUF3QixDQUE1QixFQUErQjtlQUN0QixLQUFQOzs7VUFHSXVsRCxXQUFXLEtBQUtqWixNQUFMLENBQVl2dEMsWUFBWixDQUF5QixNQUF6QixNQUFxQyxPQUF0RDtVQUNNeW1ELFlBQVksS0FBS0MsT0FBdkI7O2FBRU8sQ0FBQyxFQUFFRixZQUFZQyxTQUFkLENBQVI7Ozs7K0JBR1M7Z0JBQ0NobkIsT0FBVixDQUFrQixJQUFsQjs7V0FFS2xwQixTQUFMLENBQWVyVyxHQUFmLENBQW1CbWpDLG1CQUFuQjs7VUFFSSxDQUFDLEtBQUtzakIsZUFBTCxFQUFMLEVBQTZCO1lBQ3JCcG1DLFdBQVdqZCxTQUFTa2Qsc0JBQVQsRUFBakI7WUFDSW9tQyxjQUFjLEtBQWxCOztlQUVPLEtBQUtqK0MsVUFBTCxDQUFnQixDQUFoQixDQUFQLEVBQTJCO2NBQ25CZ1gsT0FBTyxLQUFLaFgsVUFBTCxDQUFnQixDQUFoQixDQUFiO2VBQ0tsRCxXQUFMLENBQWlCa2EsSUFBakI7bUJBQ1N0YSxXQUFULENBQXFCc2EsSUFBckI7O2NBRUlBLEtBQUtqZ0IsUUFBTCxJQUFpQkMsS0FBS0MsWUFBMUIsRUFBd0M7MEJBQ3hCLElBQWQ7Ozs7WUFJRTBTLFdBQVd3akMsaUJBQWUzd0MsU0FBZixDQUF5QixJQUF6QixDQUFqQjtlQUNPbU4sU0FBU3FHLFFBQVQsQ0FBa0IsQ0FBbEIsQ0FBUCxFQUE2QjtlQUN0QnRULFdBQUwsQ0FBaUJpTixTQUFTcUcsUUFBVCxDQUFrQixDQUFsQixDQUFqQjs7O1lBR0VpdUMsV0FBSixFQUFpQjtlQUNWRixPQUFMLENBQWFyaEQsV0FBYixDQUF5QmtiLFFBQXpCO2VBQ0tzbUMsbUJBQUwsR0FBMkIsS0FBM0I7U0FGRixNQUdPO2VBQ0FBLG1CQUFMLEdBQTJCLElBQTNCO2VBQ0tDLHNCQUFMOzs7O21CQUlTcmtCLFlBQWIsQ0FBMEIsSUFBMUIsRUFBZ0MvckIsU0FBaEM7V0FDS3N0QixhQUFMOzs7O29DQUdjO1dBQ1Q5Z0IsWUFBTCxDQUFrQixLQUFLMUYsYUFBTCxDQUFtQixpQkFBbkIsQ0FBbEIsRUFBeUQsS0FBS3hHLFlBQUwsQ0FBa0IsUUFBbEIsQ0FBekQ7Ozs7NkNBR3VCO1VBQ25CLENBQUMsS0FBSzZ2QyxtQkFBVixFQUErQjs7OztVQUl6QjM1QixTQUFTLEtBQUt3NUIsT0FBcEI7VUFDTXAwQyxXQUFXaTBDLDJCQUEyQnBoRCxTQUEzQixDQUFxQyxJQUFyQyxDQUFqQjtVQUNJK25CLE9BQU92VSxRQUFQLENBQWdCMVgsTUFBaEIsS0FBMkIsQ0FBL0IsRUFBa0M7ZUFDekJxUixTQUFTcUcsUUFBVCxDQUFrQixDQUFsQixDQUFQLEVBQTZCO2lCQUNwQnRULFdBQVAsQ0FBbUJpTixTQUFTcUcsUUFBVCxDQUFrQixDQUFsQixDQUFuQjs7OztVQUlBLENBQUN1VSxPQUFPMVAsYUFBUCxDQUFxQixlQUFyQixDQUFMLEVBQTRDO2VBQ25DalksWUFBUCxDQUFvQitNLFNBQVNrTCxhQUFULENBQXVCLGVBQXZCLENBQXBCLEVBQTZEMFAsT0FBTy9zQixVQUFwRTs7O1VBR0UsQ0FBQytzQixPQUFPMVAsYUFBUCxDQUFxQixnQkFBckIsQ0FBTCxFQUE2QztlQUNwQ25ZLFdBQVAsQ0FBbUJpTixTQUFTa0wsYUFBVCxDQUF1QixnQkFBdkIsQ0FBbkI7OztVQUdFLENBQUMwUCxPQUFPMVAsYUFBUCxDQUFxQixnQkFBckIsQ0FBTCxFQUE2QztlQUNwQ25ZLFdBQVAsQ0FBbUJpTixTQUFTa0wsYUFBVCxDQUF1QixnQkFBdkIsQ0FBbkI7OztVQUdJa21CLE9BQU8sS0FBSzFqQyxZQUFMLENBQWtCLE1BQWxCLENBQWI7VUFDTXEyQixRQUFRLEtBQUtyMkIsWUFBTCxDQUFrQixPQUFsQixDQUFkO1VBQ00rbUQsUUFBUSxLQUFLL21ELFlBQUwsQ0FBa0IsT0FBbEIsQ0FBZDs7VUFFTWduRCxjQUFjOTVCLE9BQU8xUCxhQUFQLENBQXFCLGVBQXJCLEVBQXNDN0UsUUFBdEMsQ0FBK0MsQ0FBL0MsQ0FBcEI7VUFDTXN1QyxlQUFlLzVCLE9BQU8xUCxhQUFQLENBQXFCLGdCQUFyQixDQUFyQjtVQUNNMHBDLGVBQWVoNkIsT0FBTzFQLGFBQVAsQ0FBcUIsZ0JBQXJCLENBQXJCOztVQUVJd3BDLFdBQUosRUFBaUI7WUFDWCxPQUFPdGpCLElBQVAsS0FBZ0IsUUFBcEIsRUFBOEI7Y0FDdEI5dEIsT0FBT294QyxZQUFZaG5ELFlBQVosQ0FBeUIsTUFBekIsQ0FBYjtzQkFDWW9HLFlBQVosQ0FBeUIsTUFBekIsRUFBaUNzOUIsSUFBakM7O3NCQUVZdmhDLHdCQUFaLENBQXFDLE1BQXJDLEVBQTZDeVQsSUFBN0MsRUFBbUQ4dEIsSUFBbkQ7U0FKRixNQUtPO3NCQUNPN25CLGFBQVosQ0FBMEJyVSxNQUExQjs7OztVQUlBeS9DLFlBQUosRUFBa0I7WUFDWixPQUFPNXdCLEtBQVAsS0FBaUIsUUFBckIsRUFBK0I7dUJBQ2hCcnRCLFdBQWIsR0FBMkJxdEIsS0FBM0I7U0FERixNQUVPO3VCQUNRN3VCLE1BQWI7Ozs7VUFJQTAvQyxZQUFKLEVBQWtCO1lBQ1osT0FBT0gsS0FBUCxLQUFpQixRQUFyQixFQUErQjt1QkFDaEIvOUMsV0FBYixHQUEyQis5QyxLQUEzQjtTQURGLE1BRU87dUJBQ1F2L0MsTUFBYjs7Ozs7OytCQWFLO1VBQ0wsS0FBS204QixPQUFMLFlBQXdCcGdDLFFBQTVCLEVBQXNDO2FBQy9Cb2dDLE9BQUw7T0FERixNQUVPO1lBQ0NtaEIsU0FBUyxLQUFLcUMsa0JBQUwsRUFBZjtZQUNJckMsTUFBSixFQUFZO2lCQUNIc0MsWUFBUCxDQUFvQixLQUFLQyxhQUFMLEVBQXBCOzs7Ozs7Z0NBS007V0FDTDlaLE1BQUwsQ0FBWUssT0FBWixHQUFzQixJQUF0QjtXQUNLcjNCLFNBQUwsQ0FBZXJXLEdBQWYsQ0FBbUIsUUFBbkI7V0FDS2tHLFlBQUwsQ0FBa0IsUUFBbEIsRUFBNEIsRUFBNUI7O1VBRUksS0FBSzRRLFlBQUwsQ0FBa0IsTUFBbEIsS0FBNkIsS0FBS0EsWUFBTCxDQUFrQixhQUFsQixDQUFqQyxFQUFtRTtZQUMzRDBzQixPQUFPLEtBQUsxakMsWUFBTCxDQUFrQixhQUFsQixDQUFiO1lBQ01nbkQsY0FBYyxLQUFLTixPQUFMLENBQWFscEMsYUFBYixDQUEyQixlQUEzQixFQUE0QzdFLFFBQTVDLENBQXFELENBQXJELENBQXBCO29CQUNZdlMsWUFBWixDQUF5QixNQUF6QixFQUFpQ3M5QixJQUFqQzs7O1dBR0cvaUIsU0FBTCxDQUFlLEtBQUsvTixnQkFBTCxDQUFzQixzQ0FBdEIsQ0FBZixFQUNHeUQsT0FESCxDQUNXO2VBQVdJLFFBQVFvRCxLQUFSLENBQWNvaEIsT0FBZCxHQUF3QixNQUFuQztPQURYO1dBRUt0YSxTQUFMLENBQWUsS0FBSy9OLGdCQUFMLENBQXNCLGtDQUF0QixDQUFmLEVBQ0d5RCxPQURILENBQ1c7ZUFBV0ksUUFBUW9ELEtBQVIsQ0FBY29oQixPQUFkLEdBQXdCLFNBQW5DO09BRFg7Ozs7a0NBSVk7V0FDUHNTLE1BQUwsQ0FBWUssT0FBWixHQUFzQixLQUF0QjtXQUNLcjNCLFNBQUwsQ0FBZS9PLE1BQWYsQ0FBc0IsUUFBdEI7V0FDS2xCLGVBQUwsQ0FBcUIsUUFBckI7O1VBRUksS0FBSzBRLFlBQUwsQ0FBa0IsTUFBbEIsQ0FBSixFQUErQjtZQUN2QjBzQixPQUFPLEtBQUsxakMsWUFBTCxDQUFrQixNQUFsQixDQUFiO1lBQ01nbkQsY0FBYyxLQUFLTixPQUFMLENBQWFscEMsYUFBYixDQUEyQixlQUEzQixFQUE0QzdFLFFBQTVDLENBQXFELENBQXJELENBQXBCO29CQUNZdlMsWUFBWixDQUF5QixNQUF6QixFQUFpQ3M5QixJQUFqQzs7O1dBR0cvaUIsU0FBTCxDQUFlLEtBQUsvTixnQkFBTCxDQUFzQixzQ0FBdEIsQ0FBZixFQUNHeUQsT0FESCxDQUNXO2VBQVdJLFFBQVFvRCxLQUFSLENBQWNvaEIsT0FBZCxHQUF3QixTQUFuQztPQURYO1dBRUt0YSxTQUFMLENBQWUsS0FBSy9OLGdCQUFMLENBQXNCLGtDQUF0QixDQUFmLEVBQ0d5RCxPQURILENBQ1c7ZUFBV0ksUUFBUW9ELEtBQVIsQ0FBY29oQixPQUFkLEdBQXdCLE1BQW5DO09BRFg7Ozs7Ozs7Ozs7cUNBUWVyYixRQUFRN04sVUFBVTs7O1VBQzdCLENBQUMsS0FBS3UxQyxXQUFOLElBQXFCLENBQUMsS0FBS3hWLGNBQUwsRUFBMUIsRUFBaUQ7WUFDekNuK0IsUUFBUSxLQUFLd3pDLGtCQUFMLEdBQTBCeHpDLEtBQXhDO1lBQ01zRCxRQUFRLEtBQUtvd0MsYUFBTCxFQUFkO1lBQ0ksQ0FBQzF6QyxNQUFNc0QsS0FBTixDQUFMLEVBQW1CO2dCQUNYalYsTUFBTSw4Q0FBOENpVixLQUFwRCxDQUFOOztpQkFFT3RELE1BQU1zRCxLQUFOLENBQVQ7T0FORixNQU9PLElBQUksS0FBS3N3QyxZQUFULEVBQXVCO2FBQ3ZCQSxZQUFMLENBQWtCenpDLElBQWxCLENBQXVCLHVCQUFlO21CQUMzQnNvQixXQUFUO1NBREY7T0FESyxNQUlBLElBQUksQ0FBQyxLQUFLa3JCLFdBQVYsRUFBdUI7WUFDdEI5akMsV0FBV3RPLEtBQUtxTyxLQUFMLEVBQWpCO2FBQ0tna0MsWUFBTCxHQUFvQi9qQyxTQUFTQyxPQUE3Qjs7YUFFS2l1QixXQUFMLENBQWlCZ0IsSUFBakIsQ0FBc0IsRUFBRTUvQixNQUFNLEtBQUtnL0IsY0FBTCxFQUFSLEVBQStCbHlCLGNBQS9CLEVBQXRCLEVBQStELHVCQUFlO2lCQUN2RTBuQyxXQUFMLEdBQW1CbHJCLFdBQW5CO21CQUNTcnBCLE9BQVQsQ0FBaUJxcEIsV0FBakI7aUJBQ08sT0FBS21yQixZQUFaOzttQkFFU25yQixXQUFUO1NBTEY7T0FKSyxNQVdBO2lCQUNJLEtBQUtrckIsV0FBZDs7Ozs7Ozs7OzsrQkFrQk87YUFDRixLQUFLL3dDLFNBQUwsQ0FBZXN0QixRQUFmLENBQXdCLFFBQXhCLENBQVA7Ozs7MkNBR3FCO1dBQ2hCM3hCLG1CQUFMLENBQXlCLE9BQXpCLEVBQWtDLEtBQUtzeEIsYUFBdkMsRUFBc0QsS0FBdEQ7VUFDSSxLQUFLOGpCLFdBQVQsRUFBc0I7YUFDZjVWLFdBQUwsQ0FBaUJVLE1BQWpCLENBQXdCLEtBQUtrVixXQUE3QjthQUNLQSxXQUFMLEdBQW1CLElBQW5COzs7Ozt3Q0FJZ0I7OzttQkFDTCxJQUFiLEVBQW1CLFlBQU07ZUFDbEJFLHNCQUFMOztZQUVNMUMsU0FBUyxPQUFLcUMsa0JBQUwsRUFBZjs7WUFFSXJDLE9BQU85dEMsWUFBUCxDQUFvQixVQUFwQixDQUFKLEVBQXFDO2NBQzdCc25DLFNBQVMsT0FBS3RuQyxZQUFMLENBQWtCLFVBQWxCLElBQWdDLE9BQUtoWCxZQUFMLENBQWtCLFVBQWxCLElBQWdDLEdBQWhFLEdBQXNFLEVBQXJGO2lCQUNLb0csWUFBTCxDQUFrQixVQUFsQixFQUE4Qms0QyxTQUFTd0csT0FBTzlrRCxZQUFQLENBQW9CLFVBQXBCLENBQXZDOzs7WUFHSWdTLFVBQVUsU0FBVkEsT0FBVSxHQUFNO2NBQ2hCLE9BQUs4L0IsY0FBTCxNQUF5QixDQUFDLE9BQUsyVixTQUFuQyxFQUE4QzttQkFDdkNBLFNBQUwsR0FBaUIsSUFBakI7bUJBQ0sxQixnQkFBTCxDQUFzQmpCLE9BQU92akMsZUFBN0IsRUFBOEMsdUJBQWU7MEJBQy9DMUgsS0FBWixDQUFrQm9oQixPQUFsQixHQUE0QixNQUE1QjtxQkFDTzFaLGVBQVAsQ0FBdUJsYyxXQUF2QixDQUFtQysyQixXQUFuQzthQUZGOzs7Y0FNRSxPQUFLcGxCLFlBQUwsQ0FBa0IsUUFBbEIsQ0FBSixFQUFpQzttQkFDeEJvd0MsWUFBUCxDQUFvQixPQUFLQyxhQUFMLEVBQXBCOztTQVZKOztzQkFjY2hXLFdBQWQsQ0FBMEJoVCxLQUExQixDQUFnQ3ltQixNQUFoQyxFQUF3Qzl5QyxPQUF4Qzs7ZUFFS3JRLGdCQUFMLENBQXNCLE9BQXRCLEVBQStCLE9BQUs2aEMsYUFBcEMsRUFBbUQsS0FBbkQ7T0ExQkY7Ozs7eUNBOEJtQjtVQUNmLEtBQUt0a0MsVUFBTCxJQUFtQixLQUFLQSxVQUFMLENBQWdCcVQsUUFBaEIsQ0FBeUIvRCxXQUF6QixPQUEyQyxZQUFsRSxFQUFnRjtlQUN2RSxLQUFLdFAsVUFBWjs7O1VBR0UsS0FBS0EsVUFBTCxDQUFnQkEsVUFBaEIsSUFBOEIsS0FBS0EsVUFBTCxDQUFnQkEsVUFBaEIsQ0FBMkJxVCxRQUEzQixDQUFvQy9ELFdBQXBDLE9BQXNELFlBQXhGLEVBQXNHO2VBQzdGLEtBQUt0UCxVQUFMLENBQWdCQSxVQUF2Qjs7O2FBR0ssSUFBUDs7OztvQ0FHYztVQUNSK2xCLFdBQVcsS0FBSy9sQixVQUFMLENBQWdCeVosUUFBakM7V0FDSyxJQUFJcFcsSUFBSSxDQUFiLEVBQWdCQSxJQUFJMGlCLFNBQVNoa0IsTUFBN0IsRUFBcUNzQixHQUFyQyxFQUEwQztZQUNwQyxTQUFTMGlCLFNBQVMxaUIsQ0FBVCxDQUFiLEVBQTBCO2lCQUNqQkEsQ0FBUDs7Ozs7OzZDQUttQjtVQUNuQixDQUFDLEtBQUs0a0Qsa0JBQUwsRUFBTCxFQUFnQztjQUN4QixJQUFJbmxELEtBQUosQ0FBVSw4REFBVixDQUFOOzs7Ozs2Q0FRcUIwSyxNQUFNa0osTUFBTUMsU0FBUzs7O2NBQ3BDbkosSUFBUjthQUNPLE9BQUw7Y0FDTSxDQUFDLEtBQUs2SixTQUFMLENBQWVzdEIsUUFBZixDQUF3QlIsbUJBQXhCLENBQUwsRUFBZ0Q7aUJBQ3pDampCLFNBQUwsR0FBaUJpakIsc0JBQW1CLEdBQW5CLEdBQXlCeHRCLE9BQTFDOzs7YUFHQyxVQUFMO3VCQUNlLElBQWIsRUFBbUI7bUJBQU1GLGFBQWF3dEIsaUJBQWIsQ0FBK0J2dEIsSUFBL0IsRUFBcUNDLE9BQXJDLFVBQW9EYSxTQUFwRCxDQUFOO1dBQW5COzthQUVHLFFBQUw7ZUFDT2l3QyxlQUFMLE1BQTBCanhCLGFBQWEsSUFBYixFQUFtQjttQkFBTSxPQUFLc08sYUFBTCxFQUFOO1dBQW5CLENBQTFCOzthQUVHLE1BQUw7YUFDSyxPQUFMO2FBQ0ssT0FBTDt1QkFDZSxJQUFiLEVBQW1CO21CQUFNLE9BQUs4aUIsc0JBQUwsRUFBTjtXQUFuQjs7YUFFRyxNQUFMO2NBQ00sT0FBT2p4QyxPQUFQLEtBQW1CLFFBQXZCLEVBQWlDO2lCQUMxQis3QixLQUFMLEdBQWEvN0IsT0FBYjs7Ozs7OztzQkFyVUMvQyxNQUFNO1dBQ1I4K0IsS0FBTCxHQUFhOStCLElBQWI7O3dCQUdTO2FBQ0YsS0FBSzgrQixLQUFaOzs7O3NCQUdhcFYsUUFBUTtVQUNqQixFQUFFQSxrQkFBa0JELFVBQXBCLENBQUosRUFBcUM7Y0FDN0J2NkIsTUFBTSxvREFBTixDQUFOOztXQUVHMHZDLFdBQUwsR0FBbUJsVixNQUFuQjs7d0JBR2U7YUFDUixLQUFLa1YsV0FBWjs7Ozt3QkFvSFc7YUFDSixLQUFLLzRCLFFBQUwsQ0FBYyxDQUFkLENBQVA7Ozs7d0JBR1k7YUFDTHpELEtBQUt1RSxTQUFMLENBQWUsSUFBZixFQUFxQixpQkFBckIsQ0FBUDs7Ozt3QkFnRmdCO1VBQ1osS0FBSzZ0QyxXQUFULEVBQXNCO2VBQ2IsS0FBS0EsV0FBWjs7O1VBR0l4QyxTQUFTLEtBQUtxQyxrQkFBTCxFQUFmO1VBQ01sd0MsUUFBUSxLQUFLb3dDLGFBQUwsRUFBZDs7YUFFT3ZDLE9BQU92akMsZUFBUCxDQUF1QjVJLFFBQXZCLENBQWdDMUIsS0FBaEMsQ0FBUDs7Ozt3QkE0RThCO2FBQ3ZCLENBQUMsVUFBRCxFQUFhLFFBQWIsRUFBdUIsTUFBdkIsRUFBK0IsT0FBL0IsRUFBd0MsTUFBeEMsRUFBZ0QsT0FBaEQsRUFBeUQsT0FBekQsQ0FBUDs7OztFQXpYb0M4cEI7O0FBdVp4QzVpQyxlQUFla0csTUFBZixDQUFzQixTQUF0QixFQUFpQytoRCxVQUFqQzs7QUMxZkE7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBaUJBLEFBQ0EsQUFDQSxBQUNBLEFBRUEsSUFBTS9pQixzQkFBbUIsZ0JBQXpCOztBQUVBLElBQU0zc0IsWUFBUyxFQUFDLElBQUksbUJBQUwsRUFBZjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztJQTBDcUJneEM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsyQkFpQlo7V0FDQXpsQixRQUFMOzs7Ozs7Ozs7Ozs7OytCQWtCUztnQkFDQ3hDLE9BQVYsQ0FBa0IsSUFBbEI7O1dBRUtscEIsU0FBTCxDQUFlclcsR0FBZixDQUFtQm1qQyxtQkFBbkI7O21CQUVhWixZQUFiLENBQTBCLElBQTFCLEVBQWdDL3JCLFNBQWhDOzs7OzZDQU91QmhLLE1BQU1rSixNQUFNQyxTQUFTO2NBQ3BDbkosSUFBUjthQUNPLE9BQUw7Y0FDTSxDQUFDLEtBQUs2SixTQUFMLENBQWVzdEIsUUFBZixDQUF3QlIsbUJBQXhCLENBQUwsRUFBZ0Q7aUJBQ3pDampCLFNBQUwsR0FBaUJpakIsc0JBQW1CLEdBQW5CLEdBQXlCeHRCLE9BQTFDOzs7YUFHQyxVQUFMO3VCQUNlc3RCLGlCQUFiLENBQStCdnRCLElBQS9CLEVBQXFDQyxPQUFyQyxFQUE4QyxJQUE5QyxFQUFvRGEsU0FBcEQ7Ozs7OztzQkE1Qk8vTSxPQUFPO2FBQ1h1TCxLQUFLME4sZUFBTCxDQUFxQixJQUFyQixFQUEyQixVQUEzQixFQUF1Q2paLEtBQXZDLENBQVA7O3dCQUdhO2FBQ04sS0FBS3FOLFlBQUwsQ0FBa0IsVUFBbEIsQ0FBUDs7Ozt3QkFXOEI7YUFDdkIsQ0FBQyxVQUFELEVBQWEsT0FBYixDQUFQOzs7O0VBN0M4QytwQjs7QUE4RGxENWlDLGVBQWVrRyxNQUFmLENBQXNCLG9CQUF0QixFQUE0Q3FqRCxvQkFBNUM7O0FDaElBOzs7Ozs7Ozs7Ozs7O0FBYUEsQUFDQSxBQUNBLEFBQ0EsQUFDQSxBQUVBLElBQU1ya0Isc0JBQW1CLE9BQXpCOztBQUVBLElBQU0zc0IsWUFBUztNQUNULFVBRFM7bUJBRUk7Q0FGbkI7O0FBS0EsSUFBTW8yQixxQkFBbUIsQ0FDdkIsV0FEdUIsRUFFdkIsVUFGdUIsRUFHdkIsV0FIdUIsRUFJdkIsS0FKdUIsRUFLdkIsS0FMdUIsRUFNdkIsTUFOdUIsRUFPdkIsYUFQdUIsRUFRdkIsVUFSdUIsRUFTdkIsTUFUdUIsRUFVdkIsTUFWdUIsRUFXdkIsV0FYdUIsRUFZdkIsT0FadUIsQ0FBekI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztJQThDcUI2YTs7Ozs7Ozs7OzsyQkFFWjs7O21CQUNRLElBQWIsRUFBbUIsWUFBTTtlQUNsQjFsQixRQUFMO2VBQ0t3TCxzQkFBTDtlQUNLbjBCLFNBQUw7T0FIRjs7OzsrQkFPUztXQUNKL0MsU0FBTCxDQUFlclcsR0FBZixDQUFtQm1qQyxtQkFBbkI7O2dCQUVVNUQsT0FBVixDQUFrQixJQUFsQjs7VUFFSSxDQUFDdnFCLEtBQUt1RSxTQUFMLENBQWUsSUFBZixFQUFxQixlQUFyQixDQUFMLEVBQTRDO1lBQ3BDcWQsUUFBUXh6QixTQUFTbUIsYUFBVCxDQUF1QixPQUF2QixDQUFkO2NBQ00yQixZQUFOLENBQW1CLE1BQW5CLEVBQTJCLE9BQTNCO2NBQ01tUSxTQUFOLENBQWdCclcsR0FBaEIsQ0FBb0IsY0FBcEI7YUFDS21GLFdBQUwsQ0FBaUJ5eEIsS0FBakI7OzttQkFHVzJMLFlBQWIsQ0FBMEIsSUFBMUIsRUFBZ0MvckIsU0FBaEM7O1dBRUtreEMsZUFBTDs7OztnQ0FHVTtXQUNMcmEsTUFBTCxDQUFZMXpCLEtBQVosQ0FBa0JndUMsY0FBbEIsR0FBb0MsTUFBTSxLQUFLQyxNQUFaLEdBQXNCLE9BQXpEOzs7O2lDQUdXdG9ELEdBQUc7UUFDWjZrQixlQUFGO1FBQ0VnRixPQUFGLENBQVVoRixlQUFWOzs7O3NDQWVnQjtVQUNaLEtBQUtyTixZQUFMLENBQWtCLFVBQWxCLENBQUosRUFBbUM7cUJBQ3BCMkcsV0FBYixDQUF5QixJQUF6QixFQUErQixVQUEvQjtPQURGLE1BRU87cUJBQ1FELGNBQWIsQ0FBNEIsSUFBNUIsRUFBa0MsVUFBbEM7Ozs7OzZDQUlxQmhSLE1BQU1rSixNQUFNQyxTQUFTOzs7VUFDeENuSixTQUFTLFVBQWIsRUFBeUI7cUJBQ1Z5MkIsaUJBQWIsQ0FBK0J2dEIsSUFBL0IsRUFBcUNDLE9BQXJDLEVBQThDLElBQTlDLEVBQW9EYSxTQUFwRDtPQURGLE1BRU8sSUFBSWhLLFNBQVMsT0FBYixFQUFzQjtZQUN2QixDQUFDLEtBQUs2SixTQUFMLENBQWVzdEIsUUFBZixDQUF3QlIsbUJBQXhCLENBQUwsRUFBZ0Q7ZUFDekNqakIsU0FBTCxHQUFpQmlqQixzQkFBbUIsR0FBbkIsR0FBeUJ4dEIsT0FBMUM7O09BRkcsTUFJQSxJQUFJbkosU0FBUyxVQUFiLEVBQXlCO2FBQ3pCazdDLGVBQUw7OztVQUdFOWEsbUJBQWlCdHFDLE9BQWpCLENBQXlCa0ssSUFBekIsS0FBa0MsQ0FBdEMsRUFBeUM7cUJBQzFCLElBQWIsRUFBbUIsWUFBTTtpQkFDbEIrZ0Msc0JBQUw7O2NBRUkvZ0MsU0FBUyxLQUFULElBQWtCQSxTQUFTLEtBQS9CLEVBQXNDO21CQUMvQjRNLFNBQUw7O1NBSko7Ozs7O3dDQVVnQjtXQUNiM1gsZ0JBQUwsQ0FBc0IsV0FBdEIsRUFBbUMsS0FBS29tRCxZQUF4QztXQUNLcG1ELGdCQUFMLENBQXNCLE9BQXRCLEVBQStCLEtBQUsyWCxTQUFwQzs7OzsyQ0FHcUI7V0FDaEJwSCxtQkFBTCxDQUF5QixXQUF6QixFQUFzQyxLQUFLNjFDLFlBQTNDO1dBQ0s3MUMsbUJBQUwsQ0FBeUIsT0FBekIsRUFBa0MsS0FBS29ILFNBQXZDOzs7OzZDQUd1Qjs7O3lCQUNOakQsT0FBakIsQ0FBeUIsVUFBQ3N6QixJQUFELEVBQVU7WUFDN0IsT0FBSzN5QixZQUFMLENBQWtCMnlCLElBQWxCLENBQUosRUFBNkI7aUJBQ3RCNEQsTUFBTCxDQUFZbm5DLFlBQVosQ0FBeUJ1akMsSUFBekIsRUFBK0IsT0FBSzNwQyxZQUFMLENBQWtCMnBDLElBQWxCLENBQS9CO1NBREYsTUFHSztpQkFDRTRELE1BQUwsQ0FBWWpuQyxlQUFaLENBQTRCcWpDLElBQTVCOztPQUxKOzs7O3dCQXJEVzs7VUFFTHp2QixNQUFNLEtBQUtxekIsTUFBTCxDQUFZcnpCLEdBQVosS0FBb0IsRUFBcEIsR0FBeUIsQ0FBekIsR0FBNkI3SyxTQUFTLEtBQUtrK0IsTUFBTCxDQUFZcnpCLEdBQXJCLENBQXpDO1VBQ01ELE1BQU0sS0FBS3N6QixNQUFMLENBQVl0ekIsR0FBWixLQUFvQixFQUFwQixHQUF5QixHQUF6QixHQUErQjVLLFNBQVMsS0FBS2srQixNQUFMLENBQVl0ekIsR0FBckIsQ0FBM0M7O2FBRU8sQ0FBQyxLQUFLdFEsS0FBTCxHQUFhdVEsR0FBZCxLQUFzQkQsTUFBTUMsR0FBNUIsQ0FBUDs7Ozt3QkEwRFc7YUFDSixLQUFLc0QsYUFBTCxDQUFtQixvQkFBbkIsQ0FBUDs7Ozs7Ozs7Ozs7OztzQkFVVzdULE9BQU87YUFDWHVMLEtBQUswTixlQUFMLENBQXFCLElBQXJCLEVBQTJCLFVBQTNCLEVBQXVDalosS0FBdkMsQ0FBUDs7d0JBR2E7YUFDTixLQUFLcU4sWUFBTCxDQUFrQixVQUFsQixDQUFQOzs7Ozs7Ozs7Ozs7O3dCQVVVO2FBQ0gsS0FBS3UyQixNQUFMLEtBQWdCLElBQWhCLEdBQ0gsS0FBS3Z0QyxZQUFMLENBQWtCLE9BQWxCLENBREcsR0FFSCxLQUFLdXRDLE1BQUwsQ0FBWTVqQyxLQUZoQjs7c0JBS1FpQixLQUFLOzs7bUJBQ0EsSUFBYixFQUFtQixZQUFNO2VBQ2xCMmlDLE1BQUwsQ0FBWTVqQyxLQUFaLEdBQW9CaUIsR0FBcEI7ZUFDSzBPLFNBQUw7T0FGRjs7Ozt3QkF4RjhCO2NBQ3RCLE9BQVIsRUFBaUIsVUFBakIsU0FBZ0N3ekIsa0JBQWhDOzs7O3dCQTZGa0I7YUFDWCxDQUFDLE9BQUQsRUFBVSxRQUFWLENBQVA7Ozs7RUEzSXNDL0w7O0FBK0kxQzVpQyxlQUFla0csTUFBZixDQUFzQixXQUF0QixFQUFtQ3NqRCxZQUFuQzs7QUMxS0F6cUIsTUFBSStELGVBQUosR0FBc0JBLGVBQXRCO0FBQ0EvRCxNQUFJa0UsU0FBSixHQUFnQkEsU0FBaEI7QUFDQWxFLE1BQUk4RSxrQkFBSixHQUF5QkEsa0JBQXpCO0FBQ0E5RSxNQUFJb0csaUJBQUosR0FBd0JBLGlCQUF4QjtBQUNBcEcsTUFBSTRHLG9CQUFKLEdBQTJCQSxvQkFBM0I7QUFDQTVHLE1BQUk2RyxhQUFKLEdBQW9CQSxhQUFwQjtBQUNBN0csTUFBSStHLG1CQUFKLEdBQTBCQSxtQkFBMUI7QUFDQS9HLE1BQUl1SSxlQUFKLEdBQXNCQSxlQUF0QjtBQUNBdkksTUFBSTJNLFVBQUosR0FBaUJBLFVBQWpCO0FBQ0EzTSxNQUFJME4sYUFBSixHQUFvQkEsYUFBcEI7QUFDQTFOLE1BQUkyTixVQUFKLEdBQWlCQSxVQUFqQjtBQUNBM04sTUFBSThOLHNCQUFKLEdBQTZCQSxzQkFBN0I7QUFDQTlOLE1BQUkrTixXQUFKLEdBQWtCQSxXQUFsQjtBQUNBL04sTUFBSTBPLGlCQUFKLEdBQXdCQSxpQkFBeEI7QUFDQTFPLE1BQUk0TyxpQkFBSixHQUF3QkEsaUJBQXhCO0FBQ0E1TyxNQUFJNk8sZUFBSixHQUFzQkEsZUFBdEI7QUFDQTdPLE1BQUl5UCxXQUFKLEdBQWtCQSxXQUFsQjtBQUNBelAsTUFBSTZQLFlBQUosR0FBbUJBLFlBQW5CO0FBQ0E3UCxNQUFJa1IsWUFBSixHQUFtQkEsWUFBbkI7QUFDQWxSLE1BQUlxVSxnQkFBSixHQUF1QkEsZ0JBQXZCO0FBQ0FyVSxNQUFJOFcsV0FBSixHQUFrQkEsV0FBbEI7QUFDQTlXLE1BQUk4WSxjQUFKLEdBQXFCQSxjQUFyQjtBQUNBOVksTUFBSWdiLGtCQUFKLEdBQXlCQSxrQkFBekI7QUFDQWhiLE1BQUl3Yix1QkFBSixHQUE4QkEsdUJBQTlCO0FBQ0F4YixNQUFJaWMsZUFBSixHQUFzQkEsZUFBdEI7QUFDQWpjLE1BQUlxZixhQUFKLEdBQW9CQSxhQUFwQjtBQUNBcmYsTUFBSXdnQixVQUFKLEdBQWlCQSxVQUFqQjtBQUNBeGdCLE1BQUl5Z0IsYUFBSixHQUFvQkEsYUFBcEI7QUFDQXpnQixNQUFJK2dCLG9CQUFKLEdBQTJCQSxvQkFBM0I7QUFDQS9nQixNQUFJdWhCLGdCQUFKLEdBQXVCQSxnQkFBdkI7QUFDQXZoQixNQUFJaWlCLHNCQUFKLEdBQTZCQSxzQkFBN0I7QUFDQWppQixNQUFJbWlCLG1CQUFKLEdBQTBCQSxtQkFBMUI7QUFDQW5pQixNQUFJMGxCLG1CQUFKLEdBQTBCQSxtQkFBMUI7QUFDQTFsQixNQUFJNmlCLGVBQUosR0FBc0JBLGVBQXRCO0FBQ0E3aUIsTUFBSW9tQixhQUFKLEdBQW9CQSxhQUFwQjtBQUNBcG1CLE1BQUlrcEIsVUFBSixHQUFpQkEsVUFBakI7QUFDQWxwQixNQUFJeW5CLGFBQUosR0FBb0JBLGFBQXBCO0FBQ0F6bkIsTUFBSXdxQixvQkFBSixHQUEyQkEsb0JBQTNCO0FBQ0F4cUIsTUFBSTBXLGNBQUosR0FBcUJBLGNBQXJCO0FBQ0ExVyxNQUFJeXFCLFlBQUosR0FBbUJBLFlBQW5COzs7QUFHQXpwRCxPQUFPeUQsZ0JBQVAsQ0FBd0IsTUFBeEIsRUFBZ0MsWUFBTTtRQUM5QnFtRCxTQUFKLEdBQWdCQyxVQUFVQyxNQUFWLENBQWlCNWtELFNBQVNnMEIsSUFBMUIsQ0FBaEI7Q0FESixFQUVHLEtBRkg7OztBQUtBcDVCLE9BQU95RCxnQkFBUCxDQUF3QixrQkFBeEIsRUFBNEMsWUFBTTtRQUM1QzA3QiwyQkFBSixDQUFnQ3pMLE1BQWhDO1FBQ0k2TSwrQkFBSixHQUFzQ3ZCLE1BQUlHLDJCQUFKLENBQWdDK0YsYUFBaEMsQ0FBOENsbEMsT0FBT29GLFFBQVAsQ0FBZ0JnMEIsSUFBOUQsRUFBb0UsWUFBTTtjQUNwRzZ3QixHQUFWLENBQWNDLE9BQWQ7R0FEb0MsQ0FBdEM7V0FHUzl3QixJQUFULENBQWNnUSxnQkFBZCxHQUFpQyxJQUFJcEssTUFBSTFWLGVBQVIsQ0FBd0Jsa0IsU0FBU2cwQixJQUFqQyxDQUFqQztDQUxGLEVBTUcsS0FOSDs7O0FBU0E0RixNQUFJbUIsS0FBSixDQUFVLFlBQVc7UUFDZm1DLHlCQUFKO0NBREY7OztBQUtBLElBQUk2bkIsUUFBSixHQUFlbC9CLEtBQWYsR0FFQSIsImZpbGUiOiJvbnNlbnVpLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaWYgKCF3aW5kb3cuQ3VzdG9tRXZlbnQpIHtcbiAgKGZ1bmN0aW9uKCkge1xuICAgIHZhciBDdXN0b21FdmVudDtcblxuICAgIEN1c3RvbUV2ZW50ID0gZnVuY3Rpb24oZXZlbnQsIHBhcmFtcykge1xuICAgICAgdmFyIGV2dDtcbiAgICAgIHBhcmFtcyA9IHBhcmFtcyB8fCB7XG4gICAgICAgIGJ1YmJsZXM6IGZhbHNlLFxuICAgICAgICBjYW5jZWxhYmxlOiBmYWxzZSxcbiAgICAgICAgZGV0YWlsOiB1bmRlZmluZWRcbiAgICAgIH07XG4gICAgICBldnQgPSBkb2N1bWVudC5jcmVhdGVFdmVudChcIkN1c3RvbUV2ZW50XCIpO1xuICAgICAgZXZ0LmluaXRDdXN0b21FdmVudChldmVudCwgcGFyYW1zLmJ1YmJsZXMsIHBhcmFtcy5jYW5jZWxhYmxlLCBwYXJhbXMuZGV0YWlsKTtcbiAgICAgIHJldHVybiBldnQ7XG4gICAgfTtcblxuICAgIEN1c3RvbUV2ZW50LnByb3RvdHlwZSA9IHdpbmRvdy5FdmVudC5wcm90b3R5cGU7XG5cbiAgICB3aW5kb3cuQ3VzdG9tRXZlbnQgPSBDdXN0b21FdmVudDtcbiAgfSkoKTtcbn1cbiIsIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAoYykgMjAxNCBUaGUgUG9seW1lciBQcm9qZWN0IEF1dGhvcnMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKiBUaGlzIGNvZGUgbWF5IG9ubHkgYmUgdXNlZCB1bmRlciB0aGUgQlNEIHN0eWxlIGxpY2Vuc2UgZm91bmQgYXQgaHR0cDovL3BvbHltZXIuZ2l0aHViLmlvL0xJQ0VOU0UudHh0XG4gKiBUaGUgY29tcGxldGUgc2V0IG9mIGF1dGhvcnMgbWF5IGJlIGZvdW5kIGF0IGh0dHA6Ly9wb2x5bWVyLmdpdGh1Yi5pby9BVVRIT1JTLnR4dFxuICogVGhlIGNvbXBsZXRlIHNldCBvZiBjb250cmlidXRvcnMgbWF5IGJlIGZvdW5kIGF0IGh0dHA6Ly9wb2x5bWVyLmdpdGh1Yi5pby9DT05UUklCVVRPUlMudHh0XG4gKiBDb2RlIGRpc3RyaWJ1dGVkIGJ5IEdvb2dsZSBhcyBwYXJ0IG9mIHRoZSBwb2x5bWVyIHByb2plY3QgaXMgYWxzb1xuICogc3ViamVjdCB0byBhbiBhZGRpdGlvbmFsIElQIHJpZ2h0cyBncmFudCBmb3VuZCBhdCBodHRwOi8vcG9seW1lci5naXRodWIuaW8vUEFURU5UUy50eHRcbiAqL1xuLy8gQHZlcnNpb24gMC43LjIyXG5pZiAodHlwZW9mIFdlYWtNYXAgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgKGZ1bmN0aW9uKCkge1xuICAgIHZhciBkZWZpbmVQcm9wZXJ0eSA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eTtcbiAgICB2YXIgY291bnRlciA9IERhdGUubm93KCkgJSAxZTk7XG4gICAgdmFyIFdlYWtNYXAgPSBmdW5jdGlvbigpIHtcbiAgICAgIHRoaXMubmFtZSA9IFwiX19zdFwiICsgKE1hdGgucmFuZG9tKCkgKiAxZTkgPj4+IDApICsgKGNvdW50ZXIrKyArIFwiX19cIik7XG4gICAgfTtcbiAgICBXZWFrTWFwLnByb3RvdHlwZSA9IHtcbiAgICAgIHNldDogZnVuY3Rpb24oa2V5LCB2YWx1ZSkge1xuICAgICAgICB2YXIgZW50cnkgPSBrZXlbdGhpcy5uYW1lXTtcbiAgICAgICAgaWYgKGVudHJ5ICYmIGVudHJ5WzBdID09PSBrZXkpIGVudHJ5WzFdID0gdmFsdWU7IGVsc2UgZGVmaW5lUHJvcGVydHkoa2V5LCB0aGlzLm5hbWUsIHtcbiAgICAgICAgICB2YWx1ZTogWyBrZXksIHZhbHVlIF0sXG4gICAgICAgICAgd3JpdGFibGU6IHRydWVcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgfSxcbiAgICAgIGdldDogZnVuY3Rpb24oa2V5KSB7XG4gICAgICAgIHZhciBlbnRyeTtcbiAgICAgICAgcmV0dXJuIChlbnRyeSA9IGtleVt0aGlzLm5hbWVdKSAmJiBlbnRyeVswXSA9PT0ga2V5ID8gZW50cnlbMV0gOiB1bmRlZmluZWQ7XG4gICAgICB9LFxuICAgICAgXCJkZWxldGVcIjogZnVuY3Rpb24oa2V5KSB7XG4gICAgICAgIHZhciBlbnRyeSA9IGtleVt0aGlzLm5hbWVdO1xuICAgICAgICBpZiAoIWVudHJ5IHx8IGVudHJ5WzBdICE9PSBrZXkpIHJldHVybiBmYWxzZTtcbiAgICAgICAgZW50cnlbMF0gPSBlbnRyeVsxXSA9IHVuZGVmaW5lZDtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9LFxuICAgICAgaGFzOiBmdW5jdGlvbihrZXkpIHtcbiAgICAgICAgdmFyIGVudHJ5ID0ga2V5W3RoaXMubmFtZV07XG4gICAgICAgIGlmICghZW50cnkpIHJldHVybiBmYWxzZTtcbiAgICAgICAgcmV0dXJuIGVudHJ5WzBdID09PSBrZXk7XG4gICAgICB9XG4gICAgfTtcbiAgICB3aW5kb3cuV2Vha01hcCA9IFdlYWtNYXA7XG4gIH0pKCk7XG59XG5cbihmdW5jdGlvbihnbG9iYWwpIHtcbiAgaWYgKGdsb2JhbC5Kc011dGF0aW9uT2JzZXJ2ZXIpIHtcbiAgICByZXR1cm47XG4gIH1cbiAgdmFyIHJlZ2lzdHJhdGlvbnNUYWJsZSA9IG5ldyBXZWFrTWFwKCk7XG4gIHZhciBzZXRJbW1lZGlhdGU7XG4gIGlmICgvVHJpZGVudHxFZGdlLy50ZXN0KG5hdmlnYXRvci51c2VyQWdlbnQpKSB7XG4gICAgc2V0SW1tZWRpYXRlID0gc2V0VGltZW91dDtcbiAgfSBlbHNlIGlmICh3aW5kb3cuc2V0SW1tZWRpYXRlKSB7XG4gICAgc2V0SW1tZWRpYXRlID0gd2luZG93LnNldEltbWVkaWF0ZTtcbiAgfSBlbHNlIHtcbiAgICB2YXIgc2V0SW1tZWRpYXRlUXVldWUgPSBbXTtcbiAgICB2YXIgc2VudGluZWwgPSBTdHJpbmcoTWF0aC5yYW5kb20oKSk7XG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJtZXNzYWdlXCIsIGZ1bmN0aW9uKGUpIHtcbiAgICAgIGlmIChlLmRhdGEgPT09IHNlbnRpbmVsKSB7XG4gICAgICAgIHZhciBxdWV1ZSA9IHNldEltbWVkaWF0ZVF1ZXVlO1xuICAgICAgICBzZXRJbW1lZGlhdGVRdWV1ZSA9IFtdO1xuICAgICAgICBxdWV1ZS5mb3JFYWNoKGZ1bmN0aW9uKGZ1bmMpIHtcbiAgICAgICAgICBmdW5jKCk7XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH0pO1xuICAgIHNldEltbWVkaWF0ZSA9IGZ1bmN0aW9uKGZ1bmMpIHtcbiAgICAgIHNldEltbWVkaWF0ZVF1ZXVlLnB1c2goZnVuYyk7XG4gICAgICB3aW5kb3cucG9zdE1lc3NhZ2Uoc2VudGluZWwsIFwiKlwiKTtcbiAgICB9O1xuICB9XG4gIHZhciBpc1NjaGVkdWxlZCA9IGZhbHNlO1xuICB2YXIgc2NoZWR1bGVkT2JzZXJ2ZXJzID0gW107XG4gIGZ1bmN0aW9uIHNjaGVkdWxlQ2FsbGJhY2sob2JzZXJ2ZXIpIHtcbiAgICBzY2hlZHVsZWRPYnNlcnZlcnMucHVzaChvYnNlcnZlcik7XG4gICAgaWYgKCFpc1NjaGVkdWxlZCkge1xuICAgICAgaXNTY2hlZHVsZWQgPSB0cnVlO1xuICAgICAgc2V0SW1tZWRpYXRlKGRpc3BhdGNoQ2FsbGJhY2tzKTtcbiAgICB9XG4gIH1cbiAgZnVuY3Rpb24gd3JhcElmTmVlZGVkKG5vZGUpIHtcbiAgICByZXR1cm4gd2luZG93LlNoYWRvd0RPTVBvbHlmaWxsICYmIHdpbmRvdy5TaGFkb3dET01Qb2x5ZmlsbC53cmFwSWZOZWVkZWQobm9kZSkgfHwgbm9kZTtcbiAgfVxuICBmdW5jdGlvbiBkaXNwYXRjaENhbGxiYWNrcygpIHtcbiAgICBpc1NjaGVkdWxlZCA9IGZhbHNlO1xuICAgIHZhciBvYnNlcnZlcnMgPSBzY2hlZHVsZWRPYnNlcnZlcnM7XG4gICAgc2NoZWR1bGVkT2JzZXJ2ZXJzID0gW107XG4gICAgb2JzZXJ2ZXJzLnNvcnQoZnVuY3Rpb24obzEsIG8yKSB7XG4gICAgICByZXR1cm4gbzEudWlkXyAtIG8yLnVpZF87XG4gICAgfSk7XG4gICAgdmFyIGFueU5vbkVtcHR5ID0gZmFsc2U7XG4gICAgb2JzZXJ2ZXJzLmZvckVhY2goZnVuY3Rpb24ob2JzZXJ2ZXIpIHtcbiAgICAgIHZhciBxdWV1ZSA9IG9ic2VydmVyLnRha2VSZWNvcmRzKCk7XG4gICAgICByZW1vdmVUcmFuc2llbnRPYnNlcnZlcnNGb3Iob2JzZXJ2ZXIpO1xuICAgICAgaWYgKHF1ZXVlLmxlbmd0aCkge1xuICAgICAgICBvYnNlcnZlci5jYWxsYmFja18ocXVldWUsIG9ic2VydmVyKTtcbiAgICAgICAgYW55Tm9uRW1wdHkgPSB0cnVlO1xuICAgICAgfVxuICAgIH0pO1xuICAgIGlmIChhbnlOb25FbXB0eSkgZGlzcGF0Y2hDYWxsYmFja3MoKTtcbiAgfVxuICBmdW5jdGlvbiByZW1vdmVUcmFuc2llbnRPYnNlcnZlcnNGb3Iob2JzZXJ2ZXIpIHtcbiAgICBvYnNlcnZlci5ub2Rlc18uZm9yRWFjaChmdW5jdGlvbihub2RlKSB7XG4gICAgICB2YXIgcmVnaXN0cmF0aW9ucyA9IHJlZ2lzdHJhdGlvbnNUYWJsZS5nZXQobm9kZSk7XG4gICAgICBpZiAoIXJlZ2lzdHJhdGlvbnMpIHJldHVybjtcbiAgICAgIHJlZ2lzdHJhdGlvbnMuZm9yRWFjaChmdW5jdGlvbihyZWdpc3RyYXRpb24pIHtcbiAgICAgICAgaWYgKHJlZ2lzdHJhdGlvbi5vYnNlcnZlciA9PT0gb2JzZXJ2ZXIpIHJlZ2lzdHJhdGlvbi5yZW1vdmVUcmFuc2llbnRPYnNlcnZlcnMoKTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG4gIGZ1bmN0aW9uIGZvckVhY2hBbmNlc3RvckFuZE9ic2VydmVyRW5xdWV1ZVJlY29yZCh0YXJnZXQsIGNhbGxiYWNrKSB7XG4gICAgZm9yICh2YXIgbm9kZSA9IHRhcmdldDsgbm9kZTsgbm9kZSA9IG5vZGUucGFyZW50Tm9kZSkge1xuICAgICAgdmFyIHJlZ2lzdHJhdGlvbnMgPSByZWdpc3RyYXRpb25zVGFibGUuZ2V0KG5vZGUpO1xuICAgICAgaWYgKHJlZ2lzdHJhdGlvbnMpIHtcbiAgICAgICAgZm9yICh2YXIgaiA9IDA7IGogPCByZWdpc3RyYXRpb25zLmxlbmd0aDsgaisrKSB7XG4gICAgICAgICAgdmFyIHJlZ2lzdHJhdGlvbiA9IHJlZ2lzdHJhdGlvbnNbal07XG4gICAgICAgICAgdmFyIG9wdGlvbnMgPSByZWdpc3RyYXRpb24ub3B0aW9ucztcbiAgICAgICAgICBpZiAobm9kZSAhPT0gdGFyZ2V0ICYmICFvcHRpb25zLnN1YnRyZWUpIGNvbnRpbnVlO1xuICAgICAgICAgIHZhciByZWNvcmQgPSBjYWxsYmFjayhvcHRpb25zKTtcbiAgICAgICAgICBpZiAocmVjb3JkKSByZWdpc3RyYXRpb24uZW5xdWV1ZShyZWNvcmQpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG4gIHZhciB1aWRDb3VudGVyID0gMDtcbiAgZnVuY3Rpb24gSnNNdXRhdGlvbk9ic2VydmVyKGNhbGxiYWNrKSB7XG4gICAgdGhpcy5jYWxsYmFja18gPSBjYWxsYmFjaztcbiAgICB0aGlzLm5vZGVzXyA9IFtdO1xuICAgIHRoaXMucmVjb3Jkc18gPSBbXTtcbiAgICB0aGlzLnVpZF8gPSArK3VpZENvdW50ZXI7XG4gIH1cbiAgSnNNdXRhdGlvbk9ic2VydmVyLnByb3RvdHlwZSA9IHtcbiAgICBvYnNlcnZlOiBmdW5jdGlvbih0YXJnZXQsIG9wdGlvbnMpIHtcbiAgICAgIHRhcmdldCA9IHdyYXBJZk5lZWRlZCh0YXJnZXQpO1xuICAgICAgaWYgKCFvcHRpb25zLmNoaWxkTGlzdCAmJiAhb3B0aW9ucy5hdHRyaWJ1dGVzICYmICFvcHRpb25zLmNoYXJhY3RlckRhdGEgfHwgb3B0aW9ucy5hdHRyaWJ1dGVPbGRWYWx1ZSAmJiAhb3B0aW9ucy5hdHRyaWJ1dGVzIHx8IG9wdGlvbnMuYXR0cmlidXRlRmlsdGVyICYmIG9wdGlvbnMuYXR0cmlidXRlRmlsdGVyLmxlbmd0aCAmJiAhb3B0aW9ucy5hdHRyaWJ1dGVzIHx8IG9wdGlvbnMuY2hhcmFjdGVyRGF0YU9sZFZhbHVlICYmICFvcHRpb25zLmNoYXJhY3RlckRhdGEpIHtcbiAgICAgICAgdGhyb3cgbmV3IFN5bnRheEVycm9yKCk7XG4gICAgICB9XG4gICAgICB2YXIgcmVnaXN0cmF0aW9ucyA9IHJlZ2lzdHJhdGlvbnNUYWJsZS5nZXQodGFyZ2V0KTtcbiAgICAgIGlmICghcmVnaXN0cmF0aW9ucykgcmVnaXN0cmF0aW9uc1RhYmxlLnNldCh0YXJnZXQsIHJlZ2lzdHJhdGlvbnMgPSBbXSk7XG4gICAgICB2YXIgcmVnaXN0cmF0aW9uO1xuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCByZWdpc3RyYXRpb25zLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGlmIChyZWdpc3RyYXRpb25zW2ldLm9ic2VydmVyID09PSB0aGlzKSB7XG4gICAgICAgICAgcmVnaXN0cmF0aW9uID0gcmVnaXN0cmF0aW9uc1tpXTtcbiAgICAgICAgICByZWdpc3RyYXRpb24ucmVtb3ZlTGlzdGVuZXJzKCk7XG4gICAgICAgICAgcmVnaXN0cmF0aW9uLm9wdGlvbnMgPSBvcHRpb25zO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAoIXJlZ2lzdHJhdGlvbikge1xuICAgICAgICByZWdpc3RyYXRpb24gPSBuZXcgUmVnaXN0cmF0aW9uKHRoaXMsIHRhcmdldCwgb3B0aW9ucyk7XG4gICAgICAgIHJlZ2lzdHJhdGlvbnMucHVzaChyZWdpc3RyYXRpb24pO1xuICAgICAgICB0aGlzLm5vZGVzXy5wdXNoKHRhcmdldCk7XG4gICAgICB9XG4gICAgICByZWdpc3RyYXRpb24uYWRkTGlzdGVuZXJzKCk7XG4gICAgfSxcbiAgICBkaXNjb25uZWN0OiBmdW5jdGlvbigpIHtcbiAgICAgIHRoaXMubm9kZXNfLmZvckVhY2goZnVuY3Rpb24obm9kZSkge1xuICAgICAgICB2YXIgcmVnaXN0cmF0aW9ucyA9IHJlZ2lzdHJhdGlvbnNUYWJsZS5nZXQobm9kZSk7XG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcmVnaXN0cmF0aW9ucy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgIHZhciByZWdpc3RyYXRpb24gPSByZWdpc3RyYXRpb25zW2ldO1xuICAgICAgICAgIGlmIChyZWdpc3RyYXRpb24ub2JzZXJ2ZXIgPT09IHRoaXMpIHtcbiAgICAgICAgICAgIHJlZ2lzdHJhdGlvbi5yZW1vdmVMaXN0ZW5lcnMoKTtcbiAgICAgICAgICAgIHJlZ2lzdHJhdGlvbnMuc3BsaWNlKGksIDEpO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9LCB0aGlzKTtcbiAgICAgIHRoaXMucmVjb3Jkc18gPSBbXTtcbiAgICB9LFxuICAgIHRha2VSZWNvcmRzOiBmdW5jdGlvbigpIHtcbiAgICAgIHZhciBjb3B5T2ZSZWNvcmRzID0gdGhpcy5yZWNvcmRzXztcbiAgICAgIHRoaXMucmVjb3Jkc18gPSBbXTtcbiAgICAgIHJldHVybiBjb3B5T2ZSZWNvcmRzO1xuICAgIH1cbiAgfTtcbiAgZnVuY3Rpb24gTXV0YXRpb25SZWNvcmQodHlwZSwgdGFyZ2V0KSB7XG4gICAgdGhpcy50eXBlID0gdHlwZTtcbiAgICB0aGlzLnRhcmdldCA9IHRhcmdldDtcbiAgICB0aGlzLmFkZGVkTm9kZXMgPSBbXTtcbiAgICB0aGlzLnJlbW92ZWROb2RlcyA9IFtdO1xuICAgIHRoaXMucHJldmlvdXNTaWJsaW5nID0gbnVsbDtcbiAgICB0aGlzLm5leHRTaWJsaW5nID0gbnVsbDtcbiAgICB0aGlzLmF0dHJpYnV0ZU5hbWUgPSBudWxsO1xuICAgIHRoaXMuYXR0cmlidXRlTmFtZXNwYWNlID0gbnVsbDtcbiAgICB0aGlzLm9sZFZhbHVlID0gbnVsbDtcbiAgfVxuICBmdW5jdGlvbiBjb3B5TXV0YXRpb25SZWNvcmQob3JpZ2luYWwpIHtcbiAgICB2YXIgcmVjb3JkID0gbmV3IE11dGF0aW9uUmVjb3JkKG9yaWdpbmFsLnR5cGUsIG9yaWdpbmFsLnRhcmdldCk7XG4gICAgcmVjb3JkLmFkZGVkTm9kZXMgPSBvcmlnaW5hbC5hZGRlZE5vZGVzLnNsaWNlKCk7XG4gICAgcmVjb3JkLnJlbW92ZWROb2RlcyA9IG9yaWdpbmFsLnJlbW92ZWROb2Rlcy5zbGljZSgpO1xuICAgIHJlY29yZC5wcmV2aW91c1NpYmxpbmcgPSBvcmlnaW5hbC5wcmV2aW91c1NpYmxpbmc7XG4gICAgcmVjb3JkLm5leHRTaWJsaW5nID0gb3JpZ2luYWwubmV4dFNpYmxpbmc7XG4gICAgcmVjb3JkLmF0dHJpYnV0ZU5hbWUgPSBvcmlnaW5hbC5hdHRyaWJ1dGVOYW1lO1xuICAgIHJlY29yZC5hdHRyaWJ1dGVOYW1lc3BhY2UgPSBvcmlnaW5hbC5hdHRyaWJ1dGVOYW1lc3BhY2U7XG4gICAgcmVjb3JkLm9sZFZhbHVlID0gb3JpZ2luYWwub2xkVmFsdWU7XG4gICAgcmV0dXJuIHJlY29yZDtcbiAgfVxuICB2YXIgY3VycmVudFJlY29yZCwgcmVjb3JkV2l0aE9sZFZhbHVlO1xuICBmdW5jdGlvbiBnZXRSZWNvcmQodHlwZSwgdGFyZ2V0KSB7XG4gICAgcmV0dXJuIGN1cnJlbnRSZWNvcmQgPSBuZXcgTXV0YXRpb25SZWNvcmQodHlwZSwgdGFyZ2V0KTtcbiAgfVxuICBmdW5jdGlvbiBnZXRSZWNvcmRXaXRoT2xkVmFsdWUob2xkVmFsdWUpIHtcbiAgICBpZiAocmVjb3JkV2l0aE9sZFZhbHVlKSByZXR1cm4gcmVjb3JkV2l0aE9sZFZhbHVlO1xuICAgIHJlY29yZFdpdGhPbGRWYWx1ZSA9IGNvcHlNdXRhdGlvblJlY29yZChjdXJyZW50UmVjb3JkKTtcbiAgICByZWNvcmRXaXRoT2xkVmFsdWUub2xkVmFsdWUgPSBvbGRWYWx1ZTtcbiAgICByZXR1cm4gcmVjb3JkV2l0aE9sZFZhbHVlO1xuICB9XG4gIGZ1bmN0aW9uIGNsZWFyUmVjb3JkcygpIHtcbiAgICBjdXJyZW50UmVjb3JkID0gcmVjb3JkV2l0aE9sZFZhbHVlID0gdW5kZWZpbmVkO1xuICB9XG4gIGZ1bmN0aW9uIHJlY29yZFJlcHJlc2VudHNDdXJyZW50TXV0YXRpb24ocmVjb3JkKSB7XG4gICAgcmV0dXJuIHJlY29yZCA9PT0gcmVjb3JkV2l0aE9sZFZhbHVlIHx8IHJlY29yZCA9PT0gY3VycmVudFJlY29yZDtcbiAgfVxuICBmdW5jdGlvbiBzZWxlY3RSZWNvcmQobGFzdFJlY29yZCwgbmV3UmVjb3JkKSB7XG4gICAgaWYgKGxhc3RSZWNvcmQgPT09IG5ld1JlY29yZCkgcmV0dXJuIGxhc3RSZWNvcmQ7XG4gICAgaWYgKHJlY29yZFdpdGhPbGRWYWx1ZSAmJiByZWNvcmRSZXByZXNlbnRzQ3VycmVudE11dGF0aW9uKGxhc3RSZWNvcmQpKSByZXR1cm4gcmVjb3JkV2l0aE9sZFZhbHVlO1xuICAgIHJldHVybiBudWxsO1xuICB9XG4gIGZ1bmN0aW9uIFJlZ2lzdHJhdGlvbihvYnNlcnZlciwgdGFyZ2V0LCBvcHRpb25zKSB7XG4gICAgdGhpcy5vYnNlcnZlciA9IG9ic2VydmVyO1xuICAgIHRoaXMudGFyZ2V0ID0gdGFyZ2V0O1xuICAgIHRoaXMub3B0aW9ucyA9IG9wdGlvbnM7XG4gICAgdGhpcy50cmFuc2llbnRPYnNlcnZlZE5vZGVzID0gW107XG4gIH1cbiAgUmVnaXN0cmF0aW9uLnByb3RvdHlwZSA9IHtcbiAgICBlbnF1ZXVlOiBmdW5jdGlvbihyZWNvcmQpIHtcbiAgICAgIHZhciByZWNvcmRzID0gdGhpcy5vYnNlcnZlci5yZWNvcmRzXztcbiAgICAgIHZhciBsZW5ndGggPSByZWNvcmRzLmxlbmd0aDtcbiAgICAgIGlmIChyZWNvcmRzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgdmFyIGxhc3RSZWNvcmQgPSByZWNvcmRzW2xlbmd0aCAtIDFdO1xuICAgICAgICB2YXIgcmVjb3JkVG9SZXBsYWNlTGFzdCA9IHNlbGVjdFJlY29yZChsYXN0UmVjb3JkLCByZWNvcmQpO1xuICAgICAgICBpZiAocmVjb3JkVG9SZXBsYWNlTGFzdCkge1xuICAgICAgICAgIHJlY29yZHNbbGVuZ3RoIC0gMV0gPSByZWNvcmRUb1JlcGxhY2VMYXN0O1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgc2NoZWR1bGVDYWxsYmFjayh0aGlzLm9ic2VydmVyKTtcbiAgICAgIH1cbiAgICAgIHJlY29yZHNbbGVuZ3RoXSA9IHJlY29yZDtcbiAgICB9LFxuICAgIGFkZExpc3RlbmVyczogZnVuY3Rpb24oKSB7XG4gICAgICB0aGlzLmFkZExpc3RlbmVyc18odGhpcy50YXJnZXQpO1xuICAgIH0sXG4gICAgYWRkTGlzdGVuZXJzXzogZnVuY3Rpb24obm9kZSkge1xuICAgICAgdmFyIG9wdGlvbnMgPSB0aGlzLm9wdGlvbnM7XG4gICAgICBpZiAob3B0aW9ucy5hdHRyaWJ1dGVzKSBub2RlLmFkZEV2ZW50TGlzdGVuZXIoXCJET01BdHRyTW9kaWZpZWRcIiwgdGhpcywgdHJ1ZSk7XG4gICAgICBpZiAob3B0aW9ucy5jaGFyYWN0ZXJEYXRhKSBub2RlLmFkZEV2ZW50TGlzdGVuZXIoXCJET01DaGFyYWN0ZXJEYXRhTW9kaWZpZWRcIiwgdGhpcywgdHJ1ZSk7XG4gICAgICBpZiAob3B0aW9ucy5jaGlsZExpc3QpIG5vZGUuYWRkRXZlbnRMaXN0ZW5lcihcIkRPTU5vZGVJbnNlcnRlZFwiLCB0aGlzLCB0cnVlKTtcbiAgICAgIGlmIChvcHRpb25zLmNoaWxkTGlzdCB8fCBvcHRpb25zLnN1YnRyZWUpIG5vZGUuYWRkRXZlbnRMaXN0ZW5lcihcIkRPTU5vZGVSZW1vdmVkXCIsIHRoaXMsIHRydWUpO1xuICAgIH0sXG4gICAgcmVtb3ZlTGlzdGVuZXJzOiBmdW5jdGlvbigpIHtcbiAgICAgIHRoaXMucmVtb3ZlTGlzdGVuZXJzXyh0aGlzLnRhcmdldCk7XG4gICAgfSxcbiAgICByZW1vdmVMaXN0ZW5lcnNfOiBmdW5jdGlvbihub2RlKSB7XG4gICAgICB2YXIgb3B0aW9ucyA9IHRoaXMub3B0aW9ucztcbiAgICAgIGlmIChvcHRpb25zLmF0dHJpYnV0ZXMpIG5vZGUucmVtb3ZlRXZlbnRMaXN0ZW5lcihcIkRPTUF0dHJNb2RpZmllZFwiLCB0aGlzLCB0cnVlKTtcbiAgICAgIGlmIChvcHRpb25zLmNoYXJhY3RlckRhdGEpIG5vZGUucmVtb3ZlRXZlbnRMaXN0ZW5lcihcIkRPTUNoYXJhY3RlckRhdGFNb2RpZmllZFwiLCB0aGlzLCB0cnVlKTtcbiAgICAgIGlmIChvcHRpb25zLmNoaWxkTGlzdCkgbm9kZS5yZW1vdmVFdmVudExpc3RlbmVyKFwiRE9NTm9kZUluc2VydGVkXCIsIHRoaXMsIHRydWUpO1xuICAgICAgaWYgKG9wdGlvbnMuY2hpbGRMaXN0IHx8IG9wdGlvbnMuc3VidHJlZSkgbm9kZS5yZW1vdmVFdmVudExpc3RlbmVyKFwiRE9NTm9kZVJlbW92ZWRcIiwgdGhpcywgdHJ1ZSk7XG4gICAgfSxcbiAgICBhZGRUcmFuc2llbnRPYnNlcnZlcjogZnVuY3Rpb24obm9kZSkge1xuICAgICAgaWYgKG5vZGUgPT09IHRoaXMudGFyZ2V0KSByZXR1cm47XG4gICAgICB0aGlzLmFkZExpc3RlbmVyc18obm9kZSk7XG4gICAgICB0aGlzLnRyYW5zaWVudE9ic2VydmVkTm9kZXMucHVzaChub2RlKTtcbiAgICAgIHZhciByZWdpc3RyYXRpb25zID0gcmVnaXN0cmF0aW9uc1RhYmxlLmdldChub2RlKTtcbiAgICAgIGlmICghcmVnaXN0cmF0aW9ucykgcmVnaXN0cmF0aW9uc1RhYmxlLnNldChub2RlLCByZWdpc3RyYXRpb25zID0gW10pO1xuICAgICAgcmVnaXN0cmF0aW9ucy5wdXNoKHRoaXMpO1xuICAgIH0sXG4gICAgcmVtb3ZlVHJhbnNpZW50T2JzZXJ2ZXJzOiBmdW5jdGlvbigpIHtcbiAgICAgIHZhciB0cmFuc2llbnRPYnNlcnZlZE5vZGVzID0gdGhpcy50cmFuc2llbnRPYnNlcnZlZE5vZGVzO1xuICAgICAgdGhpcy50cmFuc2llbnRPYnNlcnZlZE5vZGVzID0gW107XG4gICAgICB0cmFuc2llbnRPYnNlcnZlZE5vZGVzLmZvckVhY2goZnVuY3Rpb24obm9kZSkge1xuICAgICAgICB0aGlzLnJlbW92ZUxpc3RlbmVyc18obm9kZSk7XG4gICAgICAgIHZhciByZWdpc3RyYXRpb25zID0gcmVnaXN0cmF0aW9uc1RhYmxlLmdldChub2RlKTtcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCByZWdpc3RyYXRpb25zLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgaWYgKHJlZ2lzdHJhdGlvbnNbaV0gPT09IHRoaXMpIHtcbiAgICAgICAgICAgIHJlZ2lzdHJhdGlvbnMuc3BsaWNlKGksIDEpO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9LCB0aGlzKTtcbiAgICB9LFxuICAgIGhhbmRsZUV2ZW50OiBmdW5jdGlvbihlKSB7XG4gICAgICBlLnN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbigpO1xuICAgICAgc3dpdGNoIChlLnR5cGUpIHtcbiAgICAgICBjYXNlIFwiRE9NQXR0ck1vZGlmaWVkXCI6XG4gICAgICAgIHZhciBuYW1lID0gZS5hdHRyTmFtZTtcbiAgICAgICAgdmFyIG5hbWVzcGFjZSA9IGUucmVsYXRlZE5vZGUubmFtZXNwYWNlVVJJO1xuICAgICAgICB2YXIgdGFyZ2V0ID0gZS50YXJnZXQ7XG4gICAgICAgIHZhciByZWNvcmQgPSBuZXcgZ2V0UmVjb3JkKFwiYXR0cmlidXRlc1wiLCB0YXJnZXQpO1xuICAgICAgICByZWNvcmQuYXR0cmlidXRlTmFtZSA9IG5hbWU7XG4gICAgICAgIHJlY29yZC5hdHRyaWJ1dGVOYW1lc3BhY2UgPSBuYW1lc3BhY2U7XG4gICAgICAgIHZhciBvbGRWYWx1ZSA9IGUuYXR0ckNoYW5nZSA9PT0gTXV0YXRpb25FdmVudC5BRERJVElPTiA/IG51bGwgOiBlLnByZXZWYWx1ZTtcbiAgICAgICAgZm9yRWFjaEFuY2VzdG9yQW5kT2JzZXJ2ZXJFbnF1ZXVlUmVjb3JkKHRhcmdldCwgZnVuY3Rpb24ob3B0aW9ucykge1xuICAgICAgICAgIGlmICghb3B0aW9ucy5hdHRyaWJ1dGVzKSByZXR1cm47XG4gICAgICAgICAgaWYgKG9wdGlvbnMuYXR0cmlidXRlRmlsdGVyICYmIG9wdGlvbnMuYXR0cmlidXRlRmlsdGVyLmxlbmd0aCAmJiBvcHRpb25zLmF0dHJpYnV0ZUZpbHRlci5pbmRleE9mKG5hbWUpID09PSAtMSAmJiBvcHRpb25zLmF0dHJpYnV0ZUZpbHRlci5pbmRleE9mKG5hbWVzcGFjZSkgPT09IC0xKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgfVxuICAgICAgICAgIGlmIChvcHRpb25zLmF0dHJpYnV0ZU9sZFZhbHVlKSByZXR1cm4gZ2V0UmVjb3JkV2l0aE9sZFZhbHVlKG9sZFZhbHVlKTtcbiAgICAgICAgICByZXR1cm4gcmVjb3JkO1xuICAgICAgICB9KTtcbiAgICAgICAgYnJlYWs7XG5cbiAgICAgICBjYXNlIFwiRE9NQ2hhcmFjdGVyRGF0YU1vZGlmaWVkXCI6XG4gICAgICAgIHZhciB0YXJnZXQgPSBlLnRhcmdldDtcbiAgICAgICAgdmFyIHJlY29yZCA9IGdldFJlY29yZChcImNoYXJhY3RlckRhdGFcIiwgdGFyZ2V0KTtcbiAgICAgICAgdmFyIG9sZFZhbHVlID0gZS5wcmV2VmFsdWU7XG4gICAgICAgIGZvckVhY2hBbmNlc3RvckFuZE9ic2VydmVyRW5xdWV1ZVJlY29yZCh0YXJnZXQsIGZ1bmN0aW9uKG9wdGlvbnMpIHtcbiAgICAgICAgICBpZiAoIW9wdGlvbnMuY2hhcmFjdGVyRGF0YSkgcmV0dXJuO1xuICAgICAgICAgIGlmIChvcHRpb25zLmNoYXJhY3RlckRhdGFPbGRWYWx1ZSkgcmV0dXJuIGdldFJlY29yZFdpdGhPbGRWYWx1ZShvbGRWYWx1ZSk7XG4gICAgICAgICAgcmV0dXJuIHJlY29yZDtcbiAgICAgICAgfSk7XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICAgY2FzZSBcIkRPTU5vZGVSZW1vdmVkXCI6XG4gICAgICAgIHRoaXMuYWRkVHJhbnNpZW50T2JzZXJ2ZXIoZS50YXJnZXQpO1xuXG4gICAgICAgY2FzZSBcIkRPTU5vZGVJbnNlcnRlZFwiOlxuICAgICAgICB2YXIgY2hhbmdlZE5vZGUgPSBlLnRhcmdldDtcbiAgICAgICAgdmFyIGFkZGVkTm9kZXMsIHJlbW92ZWROb2RlcztcbiAgICAgICAgaWYgKGUudHlwZSA9PT0gXCJET01Ob2RlSW5zZXJ0ZWRcIikge1xuICAgICAgICAgIGFkZGVkTm9kZXMgPSBbIGNoYW5nZWROb2RlIF07XG4gICAgICAgICAgcmVtb3ZlZE5vZGVzID0gW107XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgYWRkZWROb2RlcyA9IFtdO1xuICAgICAgICAgIHJlbW92ZWROb2RlcyA9IFsgY2hhbmdlZE5vZGUgXTtcbiAgICAgICAgfVxuICAgICAgICB2YXIgcHJldmlvdXNTaWJsaW5nID0gY2hhbmdlZE5vZGUucHJldmlvdXNTaWJsaW5nO1xuICAgICAgICB2YXIgbmV4dFNpYmxpbmcgPSBjaGFuZ2VkTm9kZS5uZXh0U2libGluZztcbiAgICAgICAgdmFyIHJlY29yZCA9IGdldFJlY29yZChcImNoaWxkTGlzdFwiLCBlLnRhcmdldC5wYXJlbnROb2RlKTtcbiAgICAgICAgcmVjb3JkLmFkZGVkTm9kZXMgPSBhZGRlZE5vZGVzO1xuICAgICAgICByZWNvcmQucmVtb3ZlZE5vZGVzID0gcmVtb3ZlZE5vZGVzO1xuICAgICAgICByZWNvcmQucHJldmlvdXNTaWJsaW5nID0gcHJldmlvdXNTaWJsaW5nO1xuICAgICAgICByZWNvcmQubmV4dFNpYmxpbmcgPSBuZXh0U2libGluZztcbiAgICAgICAgZm9yRWFjaEFuY2VzdG9yQW5kT2JzZXJ2ZXJFbnF1ZXVlUmVjb3JkKGUucmVsYXRlZE5vZGUsIGZ1bmN0aW9uKG9wdGlvbnMpIHtcbiAgICAgICAgICBpZiAoIW9wdGlvbnMuY2hpbGRMaXN0KSByZXR1cm47XG4gICAgICAgICAgcmV0dXJuIHJlY29yZDtcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgICBjbGVhclJlY29yZHMoKTtcbiAgICB9XG4gIH07XG4gIGdsb2JhbC5Kc011dGF0aW9uT2JzZXJ2ZXIgPSBKc011dGF0aW9uT2JzZXJ2ZXI7XG4gIGlmICghZ2xvYmFsLk11dGF0aW9uT2JzZXJ2ZXIpIHtcbiAgICBnbG9iYWwuTXV0YXRpb25PYnNlcnZlciA9IEpzTXV0YXRpb25PYnNlcnZlcjtcbiAgICBKc011dGF0aW9uT2JzZXJ2ZXIuX2lzUG9seWZpbGxlZCA9IHRydWU7XG4gIH1cbn0pKHNlbGYpOyIsIi8qXHJcbiAqIGNoaWxkTm9kZS5yZW1vdmUgbWV0aG9kIHBvbHlmaWxsIGZvciBJRS5cclxuICogaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL0NoaWxkTm9kZS9yZW1vdmVcclxuICovXHJcblxyXG4oZnVuY3Rpb24oKSB7XHJcblx0aWYgKCEoJ3JlbW92ZScgaW4gRWxlbWVudC5wcm90b3R5cGUpKSB7XHJcblx0ICBFbGVtZW50LnByb3RvdHlwZS5yZW1vdmUgPSBmdW5jdGlvbigpIHtcclxuXHQgICAgaWYgKHRoaXMucGFyZW50Tm9kZSkge1xyXG5cdCAgICBcdHRoaXMucGFyZW50Tm9kZS5yZW1vdmVDaGlsZCh0aGlzKTtcclxuXHQgICAgfVxyXG5cdCAgfTtcclxuXHR9XHJcbn0pKCk7XHJcbiIsIi8qXHJcbiAqIGNsYXNzTGlzdC5qczogQ3Jvc3MtYnJvd3NlciBmdWxsIGVsZW1lbnQuY2xhc3NMaXN0IGltcGxlbWVudGF0aW9uLlxyXG4gKiAxLjEuMjAxNTAzMTJcclxuICpcclxuICogQnkgRWxpIEdyZXksIGh0dHA6Ly9lbGlncmV5LmNvbVxyXG4gKiBMaWNlbnNlOiBEZWRpY2F0ZWQgdG8gdGhlIHB1YmxpYyBkb21haW4uXHJcbiAqICAgU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9lbGlncmV5L2NsYXNzTGlzdC5qcy9ibG9iL21hc3Rlci9MSUNFTlNFLm1kXHJcbiAqL1xyXG5cclxuLypnbG9iYWwgc2VsZiwgZG9jdW1lbnQsIERPTUV4Y2VwdGlvbiAqL1xyXG5cclxuLyohIEBzb3VyY2UgaHR0cDovL3B1cmwuZWxpZ3JleS5jb20vZ2l0aHViL2NsYXNzTGlzdC5qcy9ibG9iL21hc3Rlci9jbGFzc0xpc3QuanMgKi9cclxuXHJcbmlmIChcImRvY3VtZW50XCIgaW4gc2VsZikge1xyXG5cclxuLy8gRnVsbCBwb2x5ZmlsbCBmb3IgYnJvd3NlcnMgd2l0aCBubyBjbGFzc0xpc3Qgc3VwcG9ydFxyXG4vLyBJbmNsdWRpbmcgSUUgPCBFZGdlIG1pc3NpbmcgU1ZHRWxlbWVudC5jbGFzc0xpc3RcclxuaWYgKCEoXCJjbGFzc0xpc3RcIiBpbiBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiX1wiKSlcclxuICB8fCBkb2N1bWVudC5jcmVhdGVFbGVtZW50TlMgJiYgIShcImNsYXNzTGlzdFwiIGluIGRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUyhcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIsXCJnXCIpKSkge1xyXG5cclxuKGZ1bmN0aW9uICh2aWV3KSB7XHJcblxyXG5cInVzZSBzdHJpY3RcIjtcclxuXHJcbmlmICghKCdFbGVtZW50JyBpbiB2aWV3KSkgcmV0dXJuO1xyXG5cclxudmFyXHJcbiAgICBjbGFzc0xpc3RQcm9wID0gXCJjbGFzc0xpc3RcIlxyXG4gICwgcHJvdG9Qcm9wID0gXCJwcm90b3R5cGVcIlxyXG4gICwgZWxlbUN0clByb3RvID0gdmlldy5FbGVtZW50W3Byb3RvUHJvcF1cclxuICAsIG9iakN0ciA9IE9iamVjdFxyXG4gICwgc3RyVHJpbSA9IFN0cmluZ1twcm90b1Byb3BdLnRyaW0gfHwgZnVuY3Rpb24gKCkge1xyXG4gICAgcmV0dXJuIHRoaXMucmVwbGFjZSgvXlxccyt8XFxzKyQvZywgXCJcIik7XHJcbiAgfVxyXG4gICwgYXJySW5kZXhPZiA9IEFycmF5W3Byb3RvUHJvcF0uaW5kZXhPZiB8fCBmdW5jdGlvbiAoaXRlbSkge1xyXG4gICAgdmFyXHJcbiAgICAgICAgaSA9IDBcclxuICAgICAgLCBsZW4gPSB0aGlzLmxlbmd0aFxyXG4gICAgO1xyXG4gICAgZm9yICg7IGkgPCBsZW47IGkrKykge1xyXG4gICAgICBpZiAoaSBpbiB0aGlzICYmIHRoaXNbaV0gPT09IGl0ZW0pIHtcclxuICAgICAgICByZXR1cm4gaTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgcmV0dXJuIC0xO1xyXG4gIH1cclxuICAvLyBWZW5kb3JzOiBwbGVhc2UgYWxsb3cgY29udGVudCBjb2RlIHRvIGluc3RhbnRpYXRlIERPTUV4Y2VwdGlvbnNcclxuICAsIERPTUV4ID0gZnVuY3Rpb24gKHR5cGUsIG1lc3NhZ2UpIHtcclxuICAgIHRoaXMubmFtZSA9IHR5cGU7XHJcbiAgICB0aGlzLmNvZGUgPSBET01FeGNlcHRpb25bdHlwZV07XHJcbiAgICB0aGlzLm1lc3NhZ2UgPSBtZXNzYWdlO1xyXG4gIH1cclxuICAsIGNoZWNrVG9rZW5BbmRHZXRJbmRleCA9IGZ1bmN0aW9uIChjbGFzc0xpc3QsIHRva2VuKSB7XHJcbiAgICBpZiAodG9rZW4gPT09IFwiXCIpIHtcclxuICAgICAgdGhyb3cgbmV3IERPTUV4KFxyXG4gICAgICAgICAgXCJTWU5UQVhfRVJSXCJcclxuICAgICAgICAsIFwiQW4gaW52YWxpZCBvciBpbGxlZ2FsIHN0cmluZyB3YXMgc3BlY2lmaWVkXCJcclxuICAgICAgKTtcclxuICAgIH1cclxuICAgIGlmICgvXFxzLy50ZXN0KHRva2VuKSkge1xyXG4gICAgICB0aHJvdyBuZXcgRE9NRXgoXHJcbiAgICAgICAgICBcIklOVkFMSURfQ0hBUkFDVEVSX0VSUlwiXHJcbiAgICAgICAgLCBcIlN0cmluZyBjb250YWlucyBhbiBpbnZhbGlkIGNoYXJhY3RlclwiXHJcbiAgICAgICk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gYXJySW5kZXhPZi5jYWxsKGNsYXNzTGlzdCwgdG9rZW4pO1xyXG4gIH1cclxuICAsIENsYXNzTGlzdCA9IGZ1bmN0aW9uIChlbGVtKSB7XHJcbiAgICB2YXJcclxuICAgICAgICB0cmltbWVkQ2xhc3NlcyA9IHN0clRyaW0uY2FsbChlbGVtLmdldEF0dHJpYnV0ZShcImNsYXNzXCIpIHx8IFwiXCIpXHJcbiAgICAgICwgY2xhc3NlcyA9IHRyaW1tZWRDbGFzc2VzID8gdHJpbW1lZENsYXNzZXMuc3BsaXQoL1xccysvKSA6IFtdXHJcbiAgICAgICwgaSA9IDBcclxuICAgICAgLCBsZW4gPSBjbGFzc2VzLmxlbmd0aFxyXG4gICAgO1xyXG4gICAgZm9yICg7IGkgPCBsZW47IGkrKykge1xyXG4gICAgICB0aGlzLnB1c2goY2xhc3Nlc1tpXSk7XHJcbiAgICB9XHJcbiAgICB0aGlzLl91cGRhdGVDbGFzc05hbWUgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgIGVsZW0uc2V0QXR0cmlidXRlKFwiY2xhc3NcIiwgdGhpcy50b1N0cmluZygpKTtcclxuICAgIH07XHJcbiAgfVxyXG4gICwgY2xhc3NMaXN0UHJvdG8gPSBDbGFzc0xpc3RbcHJvdG9Qcm9wXSA9IFtdXHJcbiAgLCBjbGFzc0xpc3RHZXR0ZXIgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICByZXR1cm4gbmV3IENsYXNzTGlzdCh0aGlzKTtcclxuICB9XHJcbjtcclxuLy8gTW9zdCBET01FeGNlcHRpb24gaW1wbGVtZW50YXRpb25zIGRvbid0IGFsbG93IGNhbGxpbmcgRE9NRXhjZXB0aW9uJ3MgdG9TdHJpbmcoKVxyXG4vLyBvbiBub24tRE9NRXhjZXB0aW9ucy4gRXJyb3IncyB0b1N0cmluZygpIGlzIHN1ZmZpY2llbnQgaGVyZS5cclxuRE9NRXhbcHJvdG9Qcm9wXSA9IEVycm9yW3Byb3RvUHJvcF07XHJcbmNsYXNzTGlzdFByb3RvLml0ZW0gPSBmdW5jdGlvbiAoaSkge1xyXG4gIHJldHVybiB0aGlzW2ldIHx8IG51bGw7XHJcbn07XHJcbmNsYXNzTGlzdFByb3RvLmNvbnRhaW5zID0gZnVuY3Rpb24gKHRva2VuKSB7XHJcbiAgdG9rZW4gKz0gXCJcIjtcclxuICByZXR1cm4gY2hlY2tUb2tlbkFuZEdldEluZGV4KHRoaXMsIHRva2VuKSAhPT0gLTE7XHJcbn07XHJcbmNsYXNzTGlzdFByb3RvLmFkZCA9IGZ1bmN0aW9uICgpIHtcclxuICB2YXJcclxuICAgICAgdG9rZW5zID0gYXJndW1lbnRzXHJcbiAgICAsIGkgPSAwXHJcbiAgICAsIGwgPSB0b2tlbnMubGVuZ3RoXHJcbiAgICAsIHRva2VuXHJcbiAgICAsIHVwZGF0ZWQgPSBmYWxzZVxyXG4gIDtcclxuICBkbyB7XHJcbiAgICB0b2tlbiA9IHRva2Vuc1tpXSArIFwiXCI7XHJcbiAgICBpZiAoY2hlY2tUb2tlbkFuZEdldEluZGV4KHRoaXMsIHRva2VuKSA9PT0gLTEpIHtcclxuICAgICAgdGhpcy5wdXNoKHRva2VuKTtcclxuICAgICAgdXBkYXRlZCA9IHRydWU7XHJcbiAgICB9XHJcbiAgfVxyXG4gIHdoaWxlICgrK2kgPCBsKTtcclxuXHJcbiAgaWYgKHVwZGF0ZWQpIHtcclxuICAgIHRoaXMuX3VwZGF0ZUNsYXNzTmFtZSgpO1xyXG4gIH1cclxufTtcclxuY2xhc3NMaXN0UHJvdG8ucmVtb3ZlID0gZnVuY3Rpb24gKCkge1xyXG4gIHZhclxyXG4gICAgICB0b2tlbnMgPSBhcmd1bWVudHNcclxuICAgICwgaSA9IDBcclxuICAgICwgbCA9IHRva2Vucy5sZW5ndGhcclxuICAgICwgdG9rZW5cclxuICAgICwgdXBkYXRlZCA9IGZhbHNlXHJcbiAgICAsIGluZGV4XHJcbiAgO1xyXG4gIGRvIHtcclxuICAgIHRva2VuID0gdG9rZW5zW2ldICsgXCJcIjtcclxuICAgIGluZGV4ID0gY2hlY2tUb2tlbkFuZEdldEluZGV4KHRoaXMsIHRva2VuKTtcclxuICAgIHdoaWxlIChpbmRleCAhPT0gLTEpIHtcclxuICAgICAgdGhpcy5zcGxpY2UoaW5kZXgsIDEpO1xyXG4gICAgICB1cGRhdGVkID0gdHJ1ZTtcclxuICAgICAgaW5kZXggPSBjaGVja1Rva2VuQW5kR2V0SW5kZXgodGhpcywgdG9rZW4pO1xyXG4gICAgfVxyXG4gIH1cclxuICB3aGlsZSAoKytpIDwgbCk7XHJcblxyXG4gIGlmICh1cGRhdGVkKSB7XHJcbiAgICB0aGlzLl91cGRhdGVDbGFzc05hbWUoKTtcclxuICB9XHJcbn07XHJcbmNsYXNzTGlzdFByb3RvLnRvZ2dsZSA9IGZ1bmN0aW9uICh0b2tlbiwgZm9yY2UpIHtcclxuICB0b2tlbiArPSBcIlwiO1xyXG5cclxuICB2YXJcclxuICAgICAgcmVzdWx0ID0gdGhpcy5jb250YWlucyh0b2tlbilcclxuICAgICwgbWV0aG9kID0gcmVzdWx0ID9cclxuICAgICAgZm9yY2UgIT09IHRydWUgJiYgXCJyZW1vdmVcIlxyXG4gICAgOlxyXG4gICAgICBmb3JjZSAhPT0gZmFsc2UgJiYgXCJhZGRcIlxyXG4gIDtcclxuXHJcbiAgaWYgKG1ldGhvZCkge1xyXG4gICAgdGhpc1ttZXRob2RdKHRva2VuKTtcclxuICB9XHJcblxyXG4gIGlmIChmb3JjZSA9PT0gdHJ1ZSB8fCBmb3JjZSA9PT0gZmFsc2UpIHtcclxuICAgIHJldHVybiBmb3JjZTtcclxuICB9IGVsc2Uge1xyXG4gICAgcmV0dXJuICFyZXN1bHQ7XHJcbiAgfVxyXG59O1xyXG5jbGFzc0xpc3RQcm90by50b1N0cmluZyA9IGZ1bmN0aW9uICgpIHtcclxuICByZXR1cm4gdGhpcy5qb2luKFwiIFwiKTtcclxufTtcclxuXHJcbmlmIChvYmpDdHIuZGVmaW5lUHJvcGVydHkpIHtcclxuICB2YXIgY2xhc3NMaXN0UHJvcERlc2MgPSB7XHJcbiAgICAgIGdldDogY2xhc3NMaXN0R2V0dGVyXHJcbiAgICAsIGVudW1lcmFibGU6IHRydWVcclxuICAgICwgY29uZmlndXJhYmxlOiB0cnVlXHJcbiAgfTtcclxuICB0cnkge1xyXG4gICAgb2JqQ3RyLmRlZmluZVByb3BlcnR5KGVsZW1DdHJQcm90bywgY2xhc3NMaXN0UHJvcCwgY2xhc3NMaXN0UHJvcERlc2MpO1xyXG4gIH0gY2F0Y2ggKGV4KSB7IC8vIElFIDggZG9lc24ndCBzdXBwb3J0IGVudW1lcmFibGU6dHJ1ZVxyXG4gICAgaWYgKGV4Lm51bWJlciA9PT0gLTB4N0ZGNUVDNTQpIHtcclxuICAgICAgY2xhc3NMaXN0UHJvcERlc2MuZW51bWVyYWJsZSA9IGZhbHNlO1xyXG4gICAgICBvYmpDdHIuZGVmaW5lUHJvcGVydHkoZWxlbUN0clByb3RvLCBjbGFzc0xpc3RQcm9wLCBjbGFzc0xpc3RQcm9wRGVzYyk7XHJcbiAgICB9XHJcbiAgfVxyXG59IGVsc2UgaWYgKG9iakN0cltwcm90b1Byb3BdLl9fZGVmaW5lR2V0dGVyX18pIHtcclxuICBlbGVtQ3RyUHJvdG8uX19kZWZpbmVHZXR0ZXJfXyhjbGFzc0xpc3RQcm9wLCBjbGFzc0xpc3RHZXR0ZXIpO1xyXG59XHJcblxyXG59KHNlbGYpKTtcclxuXHJcbn0gZWxzZSB7XHJcbi8vIFRoZXJlIGlzIGZ1bGwgb3IgcGFydGlhbCBuYXRpdmUgY2xhc3NMaXN0IHN1cHBvcnQsIHNvIGp1c3QgY2hlY2sgaWYgd2UgbmVlZFxyXG4vLyB0byBub3JtYWxpemUgdGhlIGFkZC9yZW1vdmUgYW5kIHRvZ2dsZSBBUElzLlxyXG5cclxuKGZ1bmN0aW9uICgpIHtcclxuICBcInVzZSBzdHJpY3RcIjtcclxuXHJcbiAgdmFyIHRlc3RFbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcIl9cIik7XHJcblxyXG4gIHRlc3RFbGVtZW50LmNsYXNzTGlzdC5hZGQoXCJjMVwiLCBcImMyXCIpO1xyXG5cclxuICAvLyBQb2x5ZmlsbCBmb3IgSUUgMTAvMTEgYW5kIEZpcmVmb3ggPDI2LCB3aGVyZSBjbGFzc0xpc3QuYWRkIGFuZFxyXG4gIC8vIGNsYXNzTGlzdC5yZW1vdmUgZXhpc3QgYnV0IHN1cHBvcnQgb25seSBvbmUgYXJndW1lbnQgYXQgYSB0aW1lLlxyXG4gIGlmICghdGVzdEVsZW1lbnQuY2xhc3NMaXN0LmNvbnRhaW5zKFwiYzJcIikpIHtcclxuICAgIHZhciBjcmVhdGVNZXRob2QgPSBmdW5jdGlvbihtZXRob2QpIHtcclxuICAgICAgdmFyIG9yaWdpbmFsID0gRE9NVG9rZW5MaXN0LnByb3RvdHlwZVttZXRob2RdO1xyXG5cclxuICAgICAgRE9NVG9rZW5MaXN0LnByb3RvdHlwZVttZXRob2RdID0gZnVuY3Rpb24odG9rZW4pIHtcclxuICAgICAgICB2YXIgaSwgbGVuID0gYXJndW1lbnRzLmxlbmd0aDtcclxuXHJcbiAgICAgICAgZm9yIChpID0gMDsgaSA8IGxlbjsgaSsrKSB7XHJcbiAgICAgICAgICB0b2tlbiA9IGFyZ3VtZW50c1tpXTtcclxuICAgICAgICAgIG9yaWdpbmFsLmNhbGwodGhpcywgdG9rZW4pO1xyXG4gICAgICAgIH1cclxuICAgICAgfTtcclxuICAgIH07XHJcbiAgICBjcmVhdGVNZXRob2QoJ2FkZCcpO1xyXG4gICAgY3JlYXRlTWV0aG9kKCdyZW1vdmUnKTtcclxuICB9XHJcblxyXG4gIHRlc3RFbGVtZW50LmNsYXNzTGlzdC50b2dnbGUoXCJjM1wiLCBmYWxzZSk7XHJcblxyXG4gIC8vIFBvbHlmaWxsIGZvciBJRSAxMCBhbmQgRmlyZWZveCA8MjQsIHdoZXJlIGNsYXNzTGlzdC50b2dnbGUgZG9lcyBub3RcclxuICAvLyBzdXBwb3J0IHRoZSBzZWNvbmQgYXJndW1lbnQuXHJcbiAgaWYgKHRlc3RFbGVtZW50LmNsYXNzTGlzdC5jb250YWlucyhcImMzXCIpKSB7XHJcbiAgICB2YXIgX3RvZ2dsZSA9IERPTVRva2VuTGlzdC5wcm90b3R5cGUudG9nZ2xlO1xyXG5cclxuICAgIERPTVRva2VuTGlzdC5wcm90b3R5cGUudG9nZ2xlID0gZnVuY3Rpb24odG9rZW4sIGZvcmNlKSB7XHJcbiAgICAgIGlmICgxIGluIGFyZ3VtZW50cyAmJiAhdGhpcy5jb250YWlucyh0b2tlbikgPT09ICFmb3JjZSkge1xyXG4gICAgICAgIHJldHVybiBmb3JjZTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICByZXR1cm4gX3RvZ2dsZS5jYWxsKHRoaXMsIHRva2VuKTtcclxuICAgICAgfVxyXG4gICAgfTtcclxuXHJcbiAgfVxyXG5cclxuICB0ZXN0RWxlbWVudCA9IG51bGw7XHJcbn0oKSk7XHJcblxyXG59XHJcblxyXG59XHJcblxyXG4iLCI7KGZ1bmN0aW9uICgpIHtcblx0J3VzZSBzdHJpY3QnO1xuXG5cdC8qKlxuXHQgKiBAcHJlc2VydmUgRmFzdENsaWNrOiBwb2x5ZmlsbCB0byByZW1vdmUgY2xpY2sgZGVsYXlzIG9uIGJyb3dzZXJzIHdpdGggdG91Y2ggVUlzLlxuXHQgKlxuXHQgKiBAY29kaW5nc3RhbmRhcmQgZnRsYWJzLWpzdjJcblx0ICogQGNvcHlyaWdodCBUaGUgRmluYW5jaWFsIFRpbWVzIExpbWl0ZWQgW0FsbCBSaWdodHMgUmVzZXJ2ZWRdXG5cdCAqIEBsaWNlbnNlIE1JVCBMaWNlbnNlIChzZWUgTElDRU5TRS50eHQpXG5cdCAqL1xuXG5cdC8qanNsaW50IGJyb3dzZXI6dHJ1ZSwgbm9kZTp0cnVlKi9cblx0LypnbG9iYWwgZGVmaW5lLCBFdmVudCwgTm9kZSovXG5cblxuXHQvKipcblx0ICogSW5zdGFudGlhdGUgZmFzdC1jbGlja2luZyBsaXN0ZW5lcnMgb24gdGhlIHNwZWNpZmllZCBsYXllci5cblx0ICpcblx0ICogQGNvbnN0cnVjdG9yXG5cdCAqIEBwYXJhbSB7RWxlbWVudH0gbGF5ZXIgVGhlIGxheWVyIHRvIGxpc3RlbiBvblxuXHQgKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnM9e31dIFRoZSBvcHRpb25zIHRvIG92ZXJyaWRlIHRoZSBkZWZhdWx0c1xuXHQgKi9cblx0ZnVuY3Rpb24gRmFzdENsaWNrKGxheWVyLCBvcHRpb25zKSB7XG5cdFx0dmFyIG9sZE9uQ2xpY2s7XG5cblx0XHRvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcblxuXHRcdC8qKlxuXHRcdCAqIFdoZXRoZXIgYSBjbGljayBpcyBjdXJyZW50bHkgYmVpbmcgdHJhY2tlZC5cblx0XHQgKlxuXHRcdCAqIEB0eXBlIGJvb2xlYW5cblx0XHQgKi9cblx0XHR0aGlzLnRyYWNraW5nQ2xpY2sgPSBmYWxzZTtcblxuXG5cdFx0LyoqXG5cdFx0ICogVGltZXN0YW1wIGZvciB3aGVuIGNsaWNrIHRyYWNraW5nIHN0YXJ0ZWQuXG5cdFx0ICpcblx0XHQgKiBAdHlwZSBudW1iZXJcblx0XHQgKi9cblx0XHR0aGlzLnRyYWNraW5nQ2xpY2tTdGFydCA9IDA7XG5cblxuXHRcdC8qKlxuXHRcdCAqIFRoZSBlbGVtZW50IGJlaW5nIHRyYWNrZWQgZm9yIGEgY2xpY2suXG5cdFx0ICpcblx0XHQgKiBAdHlwZSBFdmVudFRhcmdldFxuXHRcdCAqL1xuXHRcdHRoaXMudGFyZ2V0RWxlbWVudCA9IG51bGw7XG5cblxuXHRcdC8qKlxuXHRcdCAqIFgtY29vcmRpbmF0ZSBvZiB0b3VjaCBzdGFydCBldmVudC5cblx0XHQgKlxuXHRcdCAqIEB0eXBlIG51bWJlclxuXHRcdCAqL1xuXHRcdHRoaXMudG91Y2hTdGFydFggPSAwO1xuXG5cblx0XHQvKipcblx0XHQgKiBZLWNvb3JkaW5hdGUgb2YgdG91Y2ggc3RhcnQgZXZlbnQuXG5cdFx0ICpcblx0XHQgKiBAdHlwZSBudW1iZXJcblx0XHQgKi9cblx0XHR0aGlzLnRvdWNoU3RhcnRZID0gMDtcblxuXG5cdFx0LyoqXG5cdFx0ICogSUQgb2YgdGhlIGxhc3QgdG91Y2gsIHJldHJpZXZlZCBmcm9tIFRvdWNoLmlkZW50aWZpZXIuXG5cdFx0ICpcblx0XHQgKiBAdHlwZSBudW1iZXJcblx0XHQgKi9cblx0XHR0aGlzLmxhc3RUb3VjaElkZW50aWZpZXIgPSAwO1xuXG5cblx0XHQvKipcblx0XHQgKiBUb3VjaG1vdmUgYm91bmRhcnksIGJleW9uZCB3aGljaCBhIGNsaWNrIHdpbGwgYmUgY2FuY2VsbGVkLlxuXHRcdCAqXG5cdFx0ICogQHR5cGUgbnVtYmVyXG5cdFx0ICovXG5cdFx0dGhpcy50b3VjaEJvdW5kYXJ5ID0gb3B0aW9ucy50b3VjaEJvdW5kYXJ5IHx8IDEwO1xuXG5cblx0XHQvKipcblx0XHQgKiBUaGUgRmFzdENsaWNrIGxheWVyLlxuXHRcdCAqXG5cdFx0ICogQHR5cGUgRWxlbWVudFxuXHRcdCAqL1xuXHRcdHRoaXMubGF5ZXIgPSBsYXllcjtcblxuXHRcdC8qKlxuXHRcdCAqIFRoZSBtaW5pbXVtIHRpbWUgYmV0d2VlbiB0YXAodG91Y2hzdGFydCBhbmQgdG91Y2hlbmQpIGV2ZW50c1xuXHRcdCAqXG5cdFx0ICogQHR5cGUgbnVtYmVyXG5cdFx0ICovXG5cdFx0dGhpcy50YXBEZWxheSA9IG9wdGlvbnMudGFwRGVsYXkgfHwgMjAwO1xuXG5cdFx0LyoqXG5cdFx0ICogVGhlIG1heGltdW0gdGltZSBmb3IgYSB0YXBcblx0XHQgKlxuXHRcdCAqIEB0eXBlIG51bWJlclxuXHRcdCAqL1xuXHRcdHRoaXMudGFwVGltZW91dCA9IG9wdGlvbnMudGFwVGltZW91dCB8fCA3MDA7XG5cblx0XHRpZiAoRmFzdENsaWNrLm5vdE5lZWRlZChsYXllcikpIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHQvLyBTb21lIG9sZCB2ZXJzaW9ucyBvZiBBbmRyb2lkIGRvbid0IGhhdmUgRnVuY3Rpb24ucHJvdG90eXBlLmJpbmRcblx0XHRmdW5jdGlvbiBiaW5kKG1ldGhvZCwgY29udGV4dCkge1xuXHRcdFx0cmV0dXJuIGZ1bmN0aW9uKCkgeyByZXR1cm4gbWV0aG9kLmFwcGx5KGNvbnRleHQsIGFyZ3VtZW50cyk7IH07XG5cdFx0fVxuXG5cblx0XHR2YXIgbWV0aG9kcyA9IFsnb25Nb3VzZScsICdvbkNsaWNrJywgJ29uVG91Y2hTdGFydCcsICdvblRvdWNoTW92ZScsICdvblRvdWNoRW5kJywgJ29uVG91Y2hDYW5jZWwnXTtcblx0XHR2YXIgY29udGV4dCA9IHRoaXM7XG5cdFx0Zm9yICh2YXIgaSA9IDAsIGwgPSBtZXRob2RzLmxlbmd0aDsgaSA8IGw7IGkrKykge1xuXHRcdFx0Y29udGV4dFttZXRob2RzW2ldXSA9IGJpbmQoY29udGV4dFttZXRob2RzW2ldXSwgY29udGV4dCk7XG5cdFx0fVxuXG5cdFx0Ly8gU2V0IHVwIGV2ZW50IGhhbmRsZXJzIGFzIHJlcXVpcmVkXG5cdFx0aWYgKGRldmljZUlzQW5kcm9pZCkge1xuXHRcdFx0bGF5ZXIuYWRkRXZlbnRMaXN0ZW5lcignbW91c2VvdmVyJywgdGhpcy5vbk1vdXNlLCB0cnVlKTtcblx0XHRcdGxheWVyLmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlZG93bicsIHRoaXMub25Nb3VzZSwgdHJ1ZSk7XG5cdFx0XHRsYXllci5hZGRFdmVudExpc3RlbmVyKCdtb3VzZXVwJywgdGhpcy5vbk1vdXNlLCB0cnVlKTtcblx0XHR9XG5cblx0XHRsYXllci5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMub25DbGljaywgdHJ1ZSk7XG5cdFx0bGF5ZXIuYWRkRXZlbnRMaXN0ZW5lcigndG91Y2hzdGFydCcsIHRoaXMub25Ub3VjaFN0YXJ0LCBmYWxzZSk7XG5cdFx0bGF5ZXIuYWRkRXZlbnRMaXN0ZW5lcigndG91Y2htb3ZlJywgdGhpcy5vblRvdWNoTW92ZSwgZmFsc2UpO1xuXHRcdGxheWVyLmFkZEV2ZW50TGlzdGVuZXIoJ3RvdWNoZW5kJywgdGhpcy5vblRvdWNoRW5kLCBmYWxzZSk7XG5cdFx0bGF5ZXIuYWRkRXZlbnRMaXN0ZW5lcigndG91Y2hjYW5jZWwnLCB0aGlzLm9uVG91Y2hDYW5jZWwsIGZhbHNlKTtcblxuXHRcdC8vIEhhY2sgaXMgcmVxdWlyZWQgZm9yIGJyb3dzZXJzIHRoYXQgZG9uJ3Qgc3VwcG9ydCBFdmVudCNzdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24gKGUuZy4gQW5kcm9pZCAyKVxuXHRcdC8vIHdoaWNoIGlzIGhvdyBGYXN0Q2xpY2sgbm9ybWFsbHkgc3RvcHMgY2xpY2sgZXZlbnRzIGJ1YmJsaW5nIHRvIGNhbGxiYWNrcyByZWdpc3RlcmVkIG9uIHRoZSBGYXN0Q2xpY2tcblx0XHQvLyBsYXllciB3aGVuIHRoZXkgYXJlIGNhbmNlbGxlZC5cblx0XHRpZiAoIUV2ZW50LnByb3RvdHlwZS5zdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24pIHtcblx0XHRcdGxheWVyLnJlbW92ZUV2ZW50TGlzdGVuZXIgPSBmdW5jdGlvbih0eXBlLCBjYWxsYmFjaywgY2FwdHVyZSkge1xuXHRcdFx0XHR2YXIgcm12ID0gTm9kZS5wcm90b3R5cGUucmVtb3ZlRXZlbnRMaXN0ZW5lcjtcblx0XHRcdFx0aWYgKHR5cGUgPT09ICdjbGljaycpIHtcblx0XHRcdFx0XHRybXYuY2FsbChsYXllciwgdHlwZSwgY2FsbGJhY2suaGlqYWNrZWQgfHwgY2FsbGJhY2ssIGNhcHR1cmUpO1xuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdHJtdi5jYWxsKGxheWVyLCB0eXBlLCBjYWxsYmFjaywgY2FwdHVyZSk7XG5cdFx0XHRcdH1cblx0XHRcdH07XG5cblx0XHRcdGxheWVyLmFkZEV2ZW50TGlzdGVuZXIgPSBmdW5jdGlvbih0eXBlLCBjYWxsYmFjaywgY2FwdHVyZSkge1xuXHRcdFx0XHR2YXIgYWR2ID0gTm9kZS5wcm90b3R5cGUuYWRkRXZlbnRMaXN0ZW5lcjtcblx0XHRcdFx0aWYgKHR5cGUgPT09ICdjbGljaycpIHtcblx0XHRcdFx0XHRhZHYuY2FsbChsYXllciwgdHlwZSwgY2FsbGJhY2suaGlqYWNrZWQgfHwgKGNhbGxiYWNrLmhpamFja2VkID0gZnVuY3Rpb24oZXZlbnQpIHtcblx0XHRcdFx0XHRcdGlmICghZXZlbnQucHJvcGFnYXRpb25TdG9wcGVkKSB7XG5cdFx0XHRcdFx0XHRcdGNhbGxiYWNrKGV2ZW50KTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9KSwgY2FwdHVyZSk7XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0YWR2LmNhbGwobGF5ZXIsIHR5cGUsIGNhbGxiYWNrLCBjYXB0dXJlKTtcblx0XHRcdFx0fVxuXHRcdFx0fTtcblx0XHR9XG5cblx0XHQvLyBJZiBhIGhhbmRsZXIgaXMgYWxyZWFkeSBkZWNsYXJlZCBpbiB0aGUgZWxlbWVudCdzIG9uY2xpY2sgYXR0cmlidXRlLCBpdCB3aWxsIGJlIGZpcmVkIGJlZm9yZVxuXHRcdC8vIEZhc3RDbGljaydzIG9uQ2xpY2sgaGFuZGxlci4gRml4IHRoaXMgYnkgcHVsbGluZyBvdXQgdGhlIHVzZXItZGVmaW5lZCBoYW5kbGVyIGZ1bmN0aW9uIGFuZFxuXHRcdC8vIGFkZGluZyBpdCBhcyBsaXN0ZW5lci5cblx0XHRpZiAodHlwZW9mIGxheWVyLm9uY2xpY2sgPT09ICdmdW5jdGlvbicpIHtcblxuXHRcdFx0Ly8gQW5kcm9pZCBicm93c2VyIG9uIGF0IGxlYXN0IDMuMiByZXF1aXJlcyBhIG5ldyByZWZlcmVuY2UgdG8gdGhlIGZ1bmN0aW9uIGluIGxheWVyLm9uY2xpY2tcblx0XHRcdC8vIC0gdGhlIG9sZCBvbmUgd29uJ3Qgd29yayBpZiBwYXNzZWQgdG8gYWRkRXZlbnRMaXN0ZW5lciBkaXJlY3RseS5cblx0XHRcdG9sZE9uQ2xpY2sgPSBsYXllci5vbmNsaWNrO1xuXHRcdFx0bGF5ZXIuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbihldmVudCkge1xuXHRcdFx0XHRvbGRPbkNsaWNrKGV2ZW50KTtcblx0XHRcdH0sIGZhbHNlKTtcblx0XHRcdGxheWVyLm9uY2xpY2sgPSBudWxsO1xuXHRcdH1cblx0fVxuXG5cdC8qKlxuXHQqIFdpbmRvd3MgUGhvbmUgOC4xIGZha2VzIHVzZXIgYWdlbnQgc3RyaW5nIHRvIGxvb2sgbGlrZSBBbmRyb2lkIGFuZCBpUGhvbmUuXG5cdCpcblx0KiBAdHlwZSBib29sZWFuXG5cdCovXG5cdHZhciBkZXZpY2VJc1dpbmRvd3NQaG9uZSA9IG5hdmlnYXRvci51c2VyQWdlbnQuaW5kZXhPZihcIldpbmRvd3MgUGhvbmVcIikgPj0gMDtcblxuXHQvKipcblx0ICogQW5kcm9pZCByZXF1aXJlcyBleGNlcHRpb25zLlxuXHQgKlxuXHQgKiBAdHlwZSBib29sZWFuXG5cdCAqL1xuXHR2YXIgZGV2aWNlSXNBbmRyb2lkID0gbmF2aWdhdG9yLnVzZXJBZ2VudC5pbmRleE9mKCdBbmRyb2lkJykgPiAwICYmICFkZXZpY2VJc1dpbmRvd3NQaG9uZTtcblxuXG5cdC8qKlxuXHQgKiBpT1MgcmVxdWlyZXMgZXhjZXB0aW9ucy5cblx0ICpcblx0ICogQHR5cGUgYm9vbGVhblxuXHQgKi9cblx0dmFyIGRldmljZUlzSU9TID0gL2lQKGFkfGhvbmV8b2QpLy50ZXN0KG5hdmlnYXRvci51c2VyQWdlbnQpICYmICFkZXZpY2VJc1dpbmRvd3NQaG9uZTtcblxuXG5cdC8qKlxuXHQgKiBpT1MgNCByZXF1aXJlcyBhbiBleGNlcHRpb24gZm9yIHNlbGVjdCBlbGVtZW50cy5cblx0ICpcblx0ICogQHR5cGUgYm9vbGVhblxuXHQgKi9cblx0dmFyIGRldmljZUlzSU9TNCA9IGRldmljZUlzSU9TICYmICgvT1MgNF9cXGQoX1xcZCk/LykudGVzdChuYXZpZ2F0b3IudXNlckFnZW50KTtcblxuXG5cdC8qKlxuXHQgKiBpT1MgNi4wLTcuKiByZXF1aXJlcyB0aGUgdGFyZ2V0IGVsZW1lbnQgdG8gYmUgbWFudWFsbHkgZGVyaXZlZFxuXHQgKlxuXHQgKiBAdHlwZSBib29sZWFuXG5cdCAqL1xuXHR2YXIgZGV2aWNlSXNJT1NXaXRoQmFkVGFyZ2V0ID0gZGV2aWNlSXNJT1MgJiYgKC9PUyBbNi03XV9cXGQvKS50ZXN0KG5hdmlnYXRvci51c2VyQWdlbnQpO1xuXG5cdC8qKlxuXHQgKiBCbGFja0JlcnJ5IHJlcXVpcmVzIGV4Y2VwdGlvbnMuXG5cdCAqXG5cdCAqIEB0eXBlIGJvb2xlYW5cblx0ICovXG5cdHZhciBkZXZpY2VJc0JsYWNrQmVycnkxMCA9IG5hdmlnYXRvci51c2VyQWdlbnQuaW5kZXhPZignQkIxMCcpID4gMDtcblxuXHQvKipcblx0ICogRGV0ZXJtaW5lIHdoZXRoZXIgYSBnaXZlbiBlbGVtZW50IHJlcXVpcmVzIGEgbmF0aXZlIGNsaWNrLlxuXHQgKlxuXHQgKiBAcGFyYW0ge0V2ZW50VGFyZ2V0fEVsZW1lbnR9IHRhcmdldCBUYXJnZXQgRE9NIGVsZW1lbnRcblx0ICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgdHJ1ZSBpZiB0aGUgZWxlbWVudCBuZWVkcyBhIG5hdGl2ZSBjbGlja1xuXHQgKi9cblx0RmFzdENsaWNrLnByb3RvdHlwZS5uZWVkc0NsaWNrID0gZnVuY3Rpb24odGFyZ2V0KSB7XG5cdFx0c3dpdGNoICh0YXJnZXQubm9kZU5hbWUudG9Mb3dlckNhc2UoKSkge1xuXG5cdFx0Ly8gRG9uJ3Qgc2VuZCBhIHN5bnRoZXRpYyBjbGljayB0byBkaXNhYmxlZCBpbnB1dHMgKGlzc3VlICM2Milcblx0XHRjYXNlICdidXR0b24nOlxuXHRcdGNhc2UgJ3NlbGVjdCc6XG5cdFx0Y2FzZSAndGV4dGFyZWEnOlxuXHRcdFx0aWYgKHRhcmdldC5kaXNhYmxlZCkge1xuXHRcdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHRcdH1cblxuXHRcdFx0YnJlYWs7XG5cdFx0Y2FzZSAnaW5wdXQnOlxuXG5cdFx0XHQvLyBGaWxlIGlucHV0cyBuZWVkIHJlYWwgY2xpY2tzIG9uIGlPUyA2IGR1ZSB0byBhIGJyb3dzZXIgYnVnIChpc3N1ZSAjNjgpXG5cdFx0XHRpZiAoKGRldmljZUlzSU9TICYmIHRhcmdldC50eXBlID09PSAnZmlsZScpIHx8IHRhcmdldC5kaXNhYmxlZCkge1xuXHRcdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHRcdH1cblxuXHRcdFx0YnJlYWs7XG5cdFx0Y2FzZSAnbGFiZWwnOlxuXHRcdGNhc2UgJ2lmcmFtZSc6IC8vIGlPUzggaG9tZXNjcmVlbiBhcHBzIGNhbiBwcmV2ZW50IGV2ZW50cyBidWJibGluZyBpbnRvIGZyYW1lc1xuXHRcdGNhc2UgJ3ZpZGVvJzpcblx0XHRcdHJldHVybiB0cnVlO1xuXHRcdH1cblxuXHRcdHJldHVybiAoL1xcYm5lZWRzY2xpY2tcXGIvKS50ZXN0KHRhcmdldC5jbGFzc05hbWUpO1xuXHR9O1xuXG5cblx0LyoqXG5cdCAqIERldGVybWluZSB3aGV0aGVyIGEgZ2l2ZW4gZWxlbWVudCByZXF1aXJlcyBhIGNhbGwgdG8gZm9jdXMgdG8gc2ltdWxhdGUgY2xpY2sgaW50byBlbGVtZW50LlxuXHQgKlxuXHQgKiBAcGFyYW0ge0V2ZW50VGFyZ2V0fEVsZW1lbnR9IHRhcmdldCBUYXJnZXQgRE9NIGVsZW1lbnRcblx0ICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgdHJ1ZSBpZiB0aGUgZWxlbWVudCByZXF1aXJlcyBhIGNhbGwgdG8gZm9jdXMgdG8gc2ltdWxhdGUgbmF0aXZlIGNsaWNrLlxuXHQgKi9cblx0RmFzdENsaWNrLnByb3RvdHlwZS5uZWVkc0ZvY3VzID0gZnVuY3Rpb24odGFyZ2V0KSB7XG5cdFx0c3dpdGNoICh0YXJnZXQubm9kZU5hbWUudG9Mb3dlckNhc2UoKSkge1xuXHRcdGNhc2UgJ3RleHRhcmVhJzpcblx0XHRcdHJldHVybiB0cnVlO1xuXHRcdGNhc2UgJ3NlbGVjdCc6XG5cdFx0XHRyZXR1cm4gIWRldmljZUlzQW5kcm9pZDtcblx0XHRjYXNlICdpbnB1dCc6XG5cdFx0XHRzd2l0Y2ggKHRhcmdldC50eXBlKSB7XG5cdFx0XHRjYXNlICdidXR0b24nOlxuXHRcdFx0Y2FzZSAnY2hlY2tib3gnOlxuXHRcdFx0Y2FzZSAnZmlsZSc6XG5cdFx0XHRjYXNlICdpbWFnZSc6XG5cdFx0XHRjYXNlICdyYWRpbyc6XG5cdFx0XHRjYXNlICdzdWJtaXQnOlxuXHRcdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0XHR9XG5cblx0XHRcdC8vIE5vIHBvaW50IGluIGF0dGVtcHRpbmcgdG8gZm9jdXMgZGlzYWJsZWQgaW5wdXRzXG5cdFx0XHRyZXR1cm4gIXRhcmdldC5kaXNhYmxlZCAmJiAhdGFyZ2V0LnJlYWRPbmx5O1xuXHRcdGRlZmF1bHQ6XG5cdFx0XHRyZXR1cm4gKC9cXGJuZWVkc2ZvY3VzXFxiLykudGVzdCh0YXJnZXQuY2xhc3NOYW1lKTtcblx0XHR9XG5cdH07XG5cblxuXHQvKipcblx0ICogU2VuZCBhIGNsaWNrIGV2ZW50IHRvIHRoZSBzcGVjaWZpZWQgZWxlbWVudC5cblx0ICpcblx0ICogQHBhcmFtIHtFdmVudFRhcmdldHxFbGVtZW50fSB0YXJnZXRFbGVtZW50XG5cdCAqIEBwYXJhbSB7RXZlbnR9IGV2ZW50XG5cdCAqL1xuXHRGYXN0Q2xpY2sucHJvdG90eXBlLnNlbmRDbGljayA9IGZ1bmN0aW9uKHRhcmdldEVsZW1lbnQsIGV2ZW50KSB7XG5cdFx0dmFyIGNsaWNrRXZlbnQsIHRvdWNoO1xuXG5cdFx0Ly8gT24gc29tZSBBbmRyb2lkIGRldmljZXMgYWN0aXZlRWxlbWVudCBuZWVkcyB0byBiZSBibHVycmVkIG90aGVyd2lzZSB0aGUgc3ludGhldGljIGNsaWNrIHdpbGwgaGF2ZSBubyBlZmZlY3QgKCMyNClcblx0XHRpZiAoZG9jdW1lbnQuYWN0aXZlRWxlbWVudCAmJiBkb2N1bWVudC5hY3RpdmVFbGVtZW50ICE9PSB0YXJnZXRFbGVtZW50KSB7XG5cdFx0XHRkb2N1bWVudC5hY3RpdmVFbGVtZW50LmJsdXIoKTtcblx0XHR9XG5cblx0XHR0b3VjaCA9IGV2ZW50LmNoYW5nZWRUb3VjaGVzWzBdO1xuXG5cdFx0Ly8gU3ludGhlc2l6ZSBhIGNsaWNrIGV2ZW50LCB3aXRoIGFuIGV4dHJhIGF0dHJpYnV0ZSBzbyBpdCBjYW4gYmUgdHJhY2tlZFxuXHRcdGNsaWNrRXZlbnQgPSBkb2N1bWVudC5jcmVhdGVFdmVudCgnTW91c2VFdmVudHMnKTtcblx0XHRjbGlja0V2ZW50LmluaXRNb3VzZUV2ZW50KHRoaXMuZGV0ZXJtaW5lRXZlbnRUeXBlKHRhcmdldEVsZW1lbnQpLCB0cnVlLCB0cnVlLCB3aW5kb3csIDEsIHRvdWNoLnNjcmVlblgsIHRvdWNoLnNjcmVlblksIHRvdWNoLmNsaWVudFgsIHRvdWNoLmNsaWVudFksIGZhbHNlLCBmYWxzZSwgZmFsc2UsIGZhbHNlLCAwLCBudWxsKTtcblx0XHRjbGlja0V2ZW50LmZvcndhcmRlZFRvdWNoRXZlbnQgPSB0cnVlO1xuXHRcdHRhcmdldEVsZW1lbnQuZGlzcGF0Y2hFdmVudChjbGlja0V2ZW50KTtcblx0fTtcblxuXHRGYXN0Q2xpY2sucHJvdG90eXBlLmRldGVybWluZUV2ZW50VHlwZSA9IGZ1bmN0aW9uKHRhcmdldEVsZW1lbnQpIHtcblxuXHRcdC8vSXNzdWUgIzE1OTogQW5kcm9pZCBDaHJvbWUgU2VsZWN0IEJveCBkb2VzIG5vdCBvcGVuIHdpdGggYSBzeW50aGV0aWMgY2xpY2sgZXZlbnRcblx0XHRpZiAoZGV2aWNlSXNBbmRyb2lkICYmIHRhcmdldEVsZW1lbnQudGFnTmFtZS50b0xvd2VyQ2FzZSgpID09PSAnc2VsZWN0Jykge1xuXHRcdFx0cmV0dXJuICdtb3VzZWRvd24nO1xuXHRcdH1cblxuXHRcdHJldHVybiAnY2xpY2snO1xuXHR9O1xuXG5cblx0LyoqXG5cdCAqIEBwYXJhbSB7RXZlbnRUYXJnZXR8RWxlbWVudH0gdGFyZ2V0RWxlbWVudFxuXHQgKi9cblx0RmFzdENsaWNrLnByb3RvdHlwZS5mb2N1cyA9IGZ1bmN0aW9uKHRhcmdldEVsZW1lbnQpIHtcblx0XHR2YXIgbGVuZ3RoO1xuXG5cdFx0Ly8gSXNzdWUgIzE2MDogb24gaU9TIDcsIHNvbWUgaW5wdXQgZWxlbWVudHMgKGUuZy4gZGF0ZSBkYXRldGltZSBtb250aCkgdGhyb3cgYSB2YWd1ZSBUeXBlRXJyb3Igb24gc2V0U2VsZWN0aW9uUmFuZ2UuIFRoZXNlIGVsZW1lbnRzIGRvbid0IGhhdmUgYW4gaW50ZWdlciB2YWx1ZSBmb3IgdGhlIHNlbGVjdGlvblN0YXJ0IGFuZCBzZWxlY3Rpb25FbmQgcHJvcGVydGllcywgYnV0IHVuZm9ydHVuYXRlbHkgdGhhdCBjYW4ndCBiZSB1c2VkIGZvciBkZXRlY3Rpb24gYmVjYXVzZSBhY2Nlc3NpbmcgdGhlIHByb3BlcnRpZXMgYWxzbyB0aHJvd3MgYSBUeXBlRXJyb3IuIEp1c3QgY2hlY2sgdGhlIHR5cGUgaW5zdGVhZC4gRmlsZWQgYXMgQXBwbGUgYnVnICMxNTEyMjcyNC5cblx0XHRpZiAoZGV2aWNlSXNJT1MgJiYgdGFyZ2V0RWxlbWVudC5zZXRTZWxlY3Rpb25SYW5nZSAmJiB0YXJnZXRFbGVtZW50LnR5cGUuaW5kZXhPZignZGF0ZScpICE9PSAwICYmIHRhcmdldEVsZW1lbnQudHlwZSAhPT0gJ3RpbWUnICYmIHRhcmdldEVsZW1lbnQudHlwZSAhPT0gJ21vbnRoJykge1xuXHRcdFx0bGVuZ3RoID0gdGFyZ2V0RWxlbWVudC52YWx1ZS5sZW5ndGg7XG5cdFx0XHR0YXJnZXRFbGVtZW50LnNldFNlbGVjdGlvblJhbmdlKGxlbmd0aCwgbGVuZ3RoKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0dGFyZ2V0RWxlbWVudC5mb2N1cygpO1xuXHRcdH1cblx0fTtcblxuXG5cdC8qKlxuXHQgKiBDaGVjayB3aGV0aGVyIHRoZSBnaXZlbiB0YXJnZXQgZWxlbWVudCBpcyBhIGNoaWxkIG9mIGEgc2Nyb2xsYWJsZSBsYXllciBhbmQgaWYgc28sIHNldCBhIGZsYWcgb24gaXQuXG5cdCAqXG5cdCAqIEBwYXJhbSB7RXZlbnRUYXJnZXR8RWxlbWVudH0gdGFyZ2V0RWxlbWVudFxuXHQgKi9cblx0RmFzdENsaWNrLnByb3RvdHlwZS51cGRhdGVTY3JvbGxQYXJlbnQgPSBmdW5jdGlvbih0YXJnZXRFbGVtZW50KSB7XG5cdFx0dmFyIHNjcm9sbFBhcmVudCwgcGFyZW50RWxlbWVudDtcblxuXHRcdHNjcm9sbFBhcmVudCA9IHRhcmdldEVsZW1lbnQuZmFzdENsaWNrU2Nyb2xsUGFyZW50O1xuXG5cdFx0Ly8gQXR0ZW1wdCB0byBkaXNjb3ZlciB3aGV0aGVyIHRoZSB0YXJnZXQgZWxlbWVudCBpcyBjb250YWluZWQgd2l0aGluIGEgc2Nyb2xsYWJsZSBsYXllci4gUmUtY2hlY2sgaWYgdGhlXG5cdFx0Ly8gdGFyZ2V0IGVsZW1lbnQgd2FzIG1vdmVkIHRvIGFub3RoZXIgcGFyZW50LlxuXHRcdGlmICghc2Nyb2xsUGFyZW50IHx8ICFzY3JvbGxQYXJlbnQuY29udGFpbnModGFyZ2V0RWxlbWVudCkpIHtcblx0XHRcdHBhcmVudEVsZW1lbnQgPSB0YXJnZXRFbGVtZW50O1xuXHRcdFx0ZG8ge1xuXHRcdFx0XHRpZiAocGFyZW50RWxlbWVudC5zY3JvbGxIZWlnaHQgPiBwYXJlbnRFbGVtZW50Lm9mZnNldEhlaWdodCkge1xuXHRcdFx0XHRcdHNjcm9sbFBhcmVudCA9IHBhcmVudEVsZW1lbnQ7XG5cdFx0XHRcdFx0dGFyZ2V0RWxlbWVudC5mYXN0Q2xpY2tTY3JvbGxQYXJlbnQgPSBwYXJlbnRFbGVtZW50O1xuXHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0cGFyZW50RWxlbWVudCA9IHBhcmVudEVsZW1lbnQucGFyZW50RWxlbWVudDtcblx0XHRcdH0gd2hpbGUgKHBhcmVudEVsZW1lbnQpO1xuXHRcdH1cblxuXHRcdC8vIEFsd2F5cyB1cGRhdGUgdGhlIHNjcm9sbCB0b3AgdHJhY2tlciBpZiBwb3NzaWJsZS5cblx0XHRpZiAoc2Nyb2xsUGFyZW50KSB7XG5cdFx0XHRzY3JvbGxQYXJlbnQuZmFzdENsaWNrTGFzdFNjcm9sbFRvcCA9IHNjcm9sbFBhcmVudC5zY3JvbGxUb3A7XG5cdFx0fVxuXHR9O1xuXG5cblx0LyoqXG5cdCAqIEBwYXJhbSB7RXZlbnRUYXJnZXR9IHRhcmdldEVsZW1lbnRcblx0ICogQHJldHVybnMge0VsZW1lbnR8RXZlbnRUYXJnZXR9XG5cdCAqL1xuXHRGYXN0Q2xpY2sucHJvdG90eXBlLmdldFRhcmdldEVsZW1lbnRGcm9tRXZlbnRUYXJnZXQgPSBmdW5jdGlvbihldmVudFRhcmdldCkge1xuXG5cdFx0Ly8gT24gc29tZSBvbGRlciBicm93c2VycyAobm90YWJseSBTYWZhcmkgb24gaU9TIDQuMSAtIHNlZSBpc3N1ZSAjNTYpIHRoZSBldmVudCB0YXJnZXQgbWF5IGJlIGEgdGV4dCBub2RlLlxuXHRcdGlmIChldmVudFRhcmdldC5ub2RlVHlwZSA9PT0gTm9kZS5URVhUX05PREUpIHtcblx0XHRcdHJldHVybiBldmVudFRhcmdldC5wYXJlbnROb2RlO1xuXHRcdH1cblxuXHRcdHJldHVybiBldmVudFRhcmdldDtcblx0fTtcblxuXG5cdC8qKlxuXHQgKiBPbiB0b3VjaCBzdGFydCwgcmVjb3JkIHRoZSBwb3NpdGlvbiBhbmQgc2Nyb2xsIG9mZnNldC5cblx0ICpcblx0ICogQHBhcmFtIHtFdmVudH0gZXZlbnRcblx0ICogQHJldHVybnMge2Jvb2xlYW59XG5cdCAqL1xuXHRGYXN0Q2xpY2sucHJvdG90eXBlLm9uVG91Y2hTdGFydCA9IGZ1bmN0aW9uKGV2ZW50KSB7XG5cdFx0dmFyIHRhcmdldEVsZW1lbnQsIHRvdWNoLCBzZWxlY3Rpb247XG5cblx0XHQvLyBJZ25vcmUgbXVsdGlwbGUgdG91Y2hlcywgb3RoZXJ3aXNlIHBpbmNoLXRvLXpvb20gaXMgcHJldmVudGVkIGlmIGJvdGggZmluZ2VycyBhcmUgb24gdGhlIEZhc3RDbGljayBlbGVtZW50IChpc3N1ZSAjMTExKS5cblx0XHRpZiAoZXZlbnQudGFyZ2V0VG91Y2hlcy5sZW5ndGggPiAxKSB7XG5cdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHR9XG5cblx0XHR0YXJnZXRFbGVtZW50ID0gdGhpcy5nZXRUYXJnZXRFbGVtZW50RnJvbUV2ZW50VGFyZ2V0KGV2ZW50LnRhcmdldCk7XG5cdFx0dG91Y2ggPSBldmVudC50YXJnZXRUb3VjaGVzWzBdO1xuXG5cdFx0Ly8gSWdub3JlIHRvdWNoZXMgb24gY29udGVudGVkaXRhYmxlIGVsZW1lbnRzIHRvIHByZXZlbnQgY29uZmxpY3Qgd2l0aCB0ZXh0IHNlbGVjdGlvbi5cblx0XHQvLyAoRm9yIGRldGFpbHM6IGh0dHBzOi8vZ2l0aHViLmNvbS9mdGxhYnMvZmFzdGNsaWNrL3B1bGwvMjExIClcblx0XHRpZiAodGFyZ2V0RWxlbWVudC5pc0NvbnRlbnRFZGl0YWJsZSkge1xuXHRcdFx0cmV0dXJuIHRydWU7XG5cdFx0fVxuXG5cdFx0aWYgKGRldmljZUlzSU9TKSB7XG5cblx0XHRcdC8vIE9ubHkgdHJ1c3RlZCBldmVudHMgd2lsbCBkZXNlbGVjdCB0ZXh0IG9uIGlPUyAoaXNzdWUgIzQ5KVxuXHRcdFx0c2VsZWN0aW9uID0gd2luZG93LmdldFNlbGVjdGlvbigpO1xuXHRcdFx0aWYgKHNlbGVjdGlvbi5yYW5nZUNvdW50ICYmICFzZWxlY3Rpb24uaXNDb2xsYXBzZWQpIHtcblx0XHRcdFx0cmV0dXJuIHRydWU7XG5cdFx0XHR9XG5cblx0XHRcdGlmICghZGV2aWNlSXNJT1M0KSB7XG5cblx0XHRcdFx0Ly8gV2VpcmQgdGhpbmdzIGhhcHBlbiBvbiBpT1Mgd2hlbiBhbiBhbGVydCBvciBjb25maXJtIGRpYWxvZyBpcyBvcGVuZWQgZnJvbSBhIGNsaWNrIGV2ZW50IGNhbGxiYWNrIChpc3N1ZSAjMjMpOlxuXHRcdFx0XHQvLyB3aGVuIHRoZSB1c2VyIG5leHQgdGFwcyBhbnl3aGVyZSBlbHNlIG9uIHRoZSBwYWdlLCBuZXcgdG91Y2hzdGFydCBhbmQgdG91Y2hlbmQgZXZlbnRzIGFyZSBkaXNwYXRjaGVkXG5cdFx0XHRcdC8vIHdpdGggdGhlIHNhbWUgaWRlbnRpZmllciBhcyB0aGUgdG91Y2ggZXZlbnQgdGhhdCBwcmV2aW91c2x5IHRyaWdnZXJlZCB0aGUgY2xpY2sgdGhhdCB0cmlnZ2VyZWQgdGhlIGFsZXJ0LlxuXHRcdFx0XHQvLyBTYWRseSwgdGhlcmUgaXMgYW4gaXNzdWUgb24gaU9TIDQgdGhhdCBjYXVzZXMgc29tZSBub3JtYWwgdG91Y2ggZXZlbnRzIHRvIGhhdmUgdGhlIHNhbWUgaWRlbnRpZmllciBhcyBhblxuXHRcdFx0XHQvLyBpbW1lZGlhdGVseSBwcmVjZWRpbmcgdG91Y2ggZXZlbnQgKGlzc3VlICM1MiksIHNvIHRoaXMgZml4IGlzIHVuYXZhaWxhYmxlIG9uIHRoYXQgcGxhdGZvcm0uXG5cdFx0XHRcdC8vIElzc3VlIDEyMDogdG91Y2guaWRlbnRpZmllciBpcyAwIHdoZW4gQ2hyb21lIGRldiB0b29scyAnRW11bGF0ZSB0b3VjaCBldmVudHMnIGlzIHNldCB3aXRoIGFuIGlPUyBkZXZpY2UgVUEgc3RyaW5nLFxuXHRcdFx0XHQvLyB3aGljaCBjYXVzZXMgYWxsIHRvdWNoIGV2ZW50cyB0byBiZSBpZ25vcmVkLiBBcyB0aGlzIGJsb2NrIG9ubHkgYXBwbGllcyB0byBpT1MsIGFuZCBpT1MgaWRlbnRpZmllcnMgYXJlIGFsd2F5cyBsb25nLFxuXHRcdFx0XHQvLyByYW5kb20gaW50ZWdlcnMsIGl0J3Mgc2FmZSB0byB0byBjb250aW51ZSBpZiB0aGUgaWRlbnRpZmllciBpcyAwIGhlcmUuXG5cdFx0XHRcdGlmICh0b3VjaC5pZGVudGlmaWVyICYmIHRvdWNoLmlkZW50aWZpZXIgPT09IHRoaXMubGFzdFRvdWNoSWRlbnRpZmllcikge1xuXHRcdFx0XHRcdGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG5cdFx0XHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0dGhpcy5sYXN0VG91Y2hJZGVudGlmaWVyID0gdG91Y2guaWRlbnRpZmllcjtcblxuXHRcdFx0XHQvLyBJZiB0aGUgdGFyZ2V0IGVsZW1lbnQgaXMgYSBjaGlsZCBvZiBhIHNjcm9sbGFibGUgbGF5ZXIgKHVzaW5nIC13ZWJraXQtb3ZlcmZsb3ctc2Nyb2xsaW5nOiB0b3VjaCkgYW5kOlxuXHRcdFx0XHQvLyAxKSB0aGUgdXNlciBkb2VzIGEgZmxpbmcgc2Nyb2xsIG9uIHRoZSBzY3JvbGxhYmxlIGxheWVyXG5cdFx0XHRcdC8vIDIpIHRoZSB1c2VyIHN0b3BzIHRoZSBmbGluZyBzY3JvbGwgd2l0aCBhbm90aGVyIHRhcFxuXHRcdFx0XHQvLyB0aGVuIHRoZSBldmVudC50YXJnZXQgb2YgdGhlIGxhc3QgJ3RvdWNoZW5kJyBldmVudCB3aWxsIGJlIHRoZSBlbGVtZW50IHRoYXQgd2FzIHVuZGVyIHRoZSB1c2VyJ3MgZmluZ2VyXG5cdFx0XHRcdC8vIHdoZW4gdGhlIGZsaW5nIHNjcm9sbCB3YXMgc3RhcnRlZCwgY2F1c2luZyBGYXN0Q2xpY2sgdG8gc2VuZCBhIGNsaWNrIGV2ZW50IHRvIHRoYXQgbGF5ZXIgLSB1bmxlc3MgYSBjaGVja1xuXHRcdFx0XHQvLyBpcyBtYWRlIHRvIGVuc3VyZSB0aGF0IGEgcGFyZW50IGxheWVyIHdhcyBub3Qgc2Nyb2xsZWQgYmVmb3JlIHNlbmRpbmcgYSBzeW50aGV0aWMgY2xpY2sgKGlzc3VlICM0MikuXG5cdFx0XHRcdHRoaXMudXBkYXRlU2Nyb2xsUGFyZW50KHRhcmdldEVsZW1lbnQpO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdHRoaXMudHJhY2tpbmdDbGljayA9IHRydWU7XG5cdFx0dGhpcy50cmFja2luZ0NsaWNrU3RhcnQgPSBldmVudC50aW1lU3RhbXA7XG5cdFx0dGhpcy50YXJnZXRFbGVtZW50ID0gdGFyZ2V0RWxlbWVudDtcblxuXHRcdHRoaXMudG91Y2hTdGFydFggPSB0b3VjaC5wYWdlWDtcblx0XHR0aGlzLnRvdWNoU3RhcnRZID0gdG91Y2gucGFnZVk7XG5cblx0XHQvLyBQcmV2ZW50IHBoYW50b20gY2xpY2tzIG9uIGZhc3QgZG91YmxlLXRhcCAoaXNzdWUgIzM2KVxuXHRcdGlmICgoZXZlbnQudGltZVN0YW1wIC0gdGhpcy5sYXN0Q2xpY2tUaW1lKSA8IHRoaXMudGFwRGVsYXkgJiYgKGV2ZW50LnRpbWVTdGFtcCAtIHRoaXMubGFzdENsaWNrVGltZSkgPiAtMSkge1xuXHRcdFx0ZXZlbnQucHJldmVudERlZmF1bHQoKTtcblx0XHR9XG5cblx0XHRyZXR1cm4gdHJ1ZTtcblx0fTtcblxuXG5cdC8qKlxuXHQgKiBCYXNlZCBvbiBhIHRvdWNobW92ZSBldmVudCBvYmplY3QsIGNoZWNrIHdoZXRoZXIgdGhlIHRvdWNoIGhhcyBtb3ZlZCBwYXN0IGEgYm91bmRhcnkgc2luY2UgaXQgc3RhcnRlZC5cblx0ICpcblx0ICogQHBhcmFtIHtFdmVudH0gZXZlbnRcblx0ICogQHJldHVybnMge2Jvb2xlYW59XG5cdCAqL1xuXHRGYXN0Q2xpY2sucHJvdG90eXBlLnRvdWNoSGFzTW92ZWQgPSBmdW5jdGlvbihldmVudCkge1xuXHRcdHZhciB0b3VjaCA9IGV2ZW50LmNoYW5nZWRUb3VjaGVzWzBdLCBib3VuZGFyeSA9IHRoaXMudG91Y2hCb3VuZGFyeTtcblxuXHRcdGlmIChNYXRoLmFicyh0b3VjaC5wYWdlWCAtIHRoaXMudG91Y2hTdGFydFgpID4gYm91bmRhcnkgfHwgTWF0aC5hYnModG91Y2gucGFnZVkgLSB0aGlzLnRvdWNoU3RhcnRZKSA+IGJvdW5kYXJ5KSB7XG5cdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHR9XG5cblx0XHRyZXR1cm4gZmFsc2U7XG5cdH07XG5cblxuXHQvKipcblx0ICogVXBkYXRlIHRoZSBsYXN0IHBvc2l0aW9uLlxuXHQgKlxuXHQgKiBAcGFyYW0ge0V2ZW50fSBldmVudFxuXHQgKiBAcmV0dXJucyB7Ym9vbGVhbn1cblx0ICovXG5cdEZhc3RDbGljay5wcm90b3R5cGUub25Ub3VjaE1vdmUgPSBmdW5jdGlvbihldmVudCkge1xuXHRcdGlmICghdGhpcy50cmFja2luZ0NsaWNrKSB7XG5cdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHR9XG5cblx0XHQvLyBJZiB0aGUgdG91Y2ggaGFzIG1vdmVkLCBjYW5jZWwgdGhlIGNsaWNrIHRyYWNraW5nXG5cdFx0aWYgKHRoaXMudGFyZ2V0RWxlbWVudCAhPT0gdGhpcy5nZXRUYXJnZXRFbGVtZW50RnJvbUV2ZW50VGFyZ2V0KGV2ZW50LnRhcmdldCkgfHwgdGhpcy50b3VjaEhhc01vdmVkKGV2ZW50KSkge1xuXHRcdFx0dGhpcy50cmFja2luZ0NsaWNrID0gZmFsc2U7XG5cdFx0XHR0aGlzLnRhcmdldEVsZW1lbnQgPSBudWxsO1xuXHRcdH1cblxuXHRcdHJldHVybiB0cnVlO1xuXHR9O1xuXG5cblx0LyoqXG5cdCAqIEF0dGVtcHQgdG8gZmluZCB0aGUgbGFiZWxsZWQgY29udHJvbCBmb3IgdGhlIGdpdmVuIGxhYmVsIGVsZW1lbnQuXG5cdCAqXG5cdCAqIEBwYXJhbSB7RXZlbnRUYXJnZXR8SFRNTExhYmVsRWxlbWVudH0gbGFiZWxFbGVtZW50XG5cdCAqIEByZXR1cm5zIHtFbGVtZW50fG51bGx9XG5cdCAqL1xuXHRGYXN0Q2xpY2sucHJvdG90eXBlLmZpbmRDb250cm9sID0gZnVuY3Rpb24obGFiZWxFbGVtZW50KSB7XG5cblx0XHQvLyBGYXN0IHBhdGggZm9yIG5ld2VyIGJyb3dzZXJzIHN1cHBvcnRpbmcgdGhlIEhUTUw1IGNvbnRyb2wgYXR0cmlidXRlXG5cdFx0aWYgKGxhYmVsRWxlbWVudC5jb250cm9sICE9PSB1bmRlZmluZWQpIHtcblx0XHRcdHJldHVybiBsYWJlbEVsZW1lbnQuY29udHJvbDtcblx0XHR9XG5cblx0XHQvLyBBbGwgYnJvd3NlcnMgdW5kZXIgdGVzdCB0aGF0IHN1cHBvcnQgdG91Y2ggZXZlbnRzIGFsc28gc3VwcG9ydCB0aGUgSFRNTDUgaHRtbEZvciBhdHRyaWJ1dGVcblx0XHRpZiAobGFiZWxFbGVtZW50Lmh0bWxGb3IpIHtcblx0XHRcdHJldHVybiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChsYWJlbEVsZW1lbnQuaHRtbEZvcik7XG5cdFx0fVxuXG5cdFx0Ly8gSWYgbm8gZm9yIGF0dHJpYnV0ZSBleGlzdHMsIGF0dGVtcHQgdG8gcmV0cmlldmUgdGhlIGZpcnN0IGxhYmVsbGFibGUgZGVzY2VuZGFudCBlbGVtZW50XG5cdFx0Ly8gdGhlIGxpc3Qgb2Ygd2hpY2ggaXMgZGVmaW5lZCBoZXJlOiBodHRwOi8vd3d3LnczLm9yZy9UUi9odG1sNS9mb3Jtcy5odG1sI2NhdGVnb3J5LWxhYmVsXG5cdFx0cmV0dXJuIGxhYmVsRWxlbWVudC5xdWVyeVNlbGVjdG9yKCdidXR0b24sIGlucHV0Om5vdChbdHlwZT1oaWRkZW5dKSwga2V5Z2VuLCBtZXRlciwgb3V0cHV0LCBwcm9ncmVzcywgc2VsZWN0LCB0ZXh0YXJlYScpO1xuXHR9O1xuXG5cblx0LyoqXG5cdCAqIE9uIHRvdWNoIGVuZCwgZGV0ZXJtaW5lIHdoZXRoZXIgdG8gc2VuZCBhIGNsaWNrIGV2ZW50IGF0IG9uY2UuXG5cdCAqXG5cdCAqIEBwYXJhbSB7RXZlbnR9IGV2ZW50XG5cdCAqIEByZXR1cm5zIHtib29sZWFufVxuXHQgKi9cblx0RmFzdENsaWNrLnByb3RvdHlwZS5vblRvdWNoRW5kID0gZnVuY3Rpb24oZXZlbnQpIHtcblx0XHR2YXIgZm9yRWxlbWVudCwgdHJhY2tpbmdDbGlja1N0YXJ0LCB0YXJnZXRUYWdOYW1lLCBzY3JvbGxQYXJlbnQsIHRvdWNoLCB0YXJnZXRFbGVtZW50ID0gdGhpcy50YXJnZXRFbGVtZW50O1xuXG5cdFx0aWYgKCF0aGlzLnRyYWNraW5nQ2xpY2spIHtcblx0XHRcdHJldHVybiB0cnVlO1xuXHRcdH1cblxuXHRcdC8vIFByZXZlbnQgcGhhbnRvbSBjbGlja3Mgb24gZmFzdCBkb3VibGUtdGFwIChpc3N1ZSAjMzYpXG5cdFx0aWYgKChldmVudC50aW1lU3RhbXAgLSB0aGlzLmxhc3RDbGlja1RpbWUpIDwgdGhpcy50YXBEZWxheSAmJiAoZXZlbnQudGltZVN0YW1wIC0gdGhpcy5sYXN0Q2xpY2tUaW1lKSA+IC0xKSB7XG5cdFx0XHR0aGlzLmNhbmNlbE5leHRDbGljayA9IHRydWU7XG5cdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHR9XG5cblx0XHRpZiAoKGV2ZW50LnRpbWVTdGFtcCAtIHRoaXMudHJhY2tpbmdDbGlja1N0YXJ0KSA+IHRoaXMudGFwVGltZW91dCkge1xuXHRcdFx0cmV0dXJuIHRydWU7XG5cdFx0fVxuXG5cdFx0Ly8gUmVzZXQgdG8gcHJldmVudCB3cm9uZyBjbGljayBjYW5jZWwgb24gaW5wdXQgKGlzc3VlICMxNTYpLlxuXHRcdHRoaXMuY2FuY2VsTmV4dENsaWNrID0gZmFsc2U7XG5cblx0XHR0aGlzLmxhc3RDbGlja1RpbWUgPSBldmVudC50aW1lU3RhbXA7XG5cblx0XHR0cmFja2luZ0NsaWNrU3RhcnQgPSB0aGlzLnRyYWNraW5nQ2xpY2tTdGFydDtcblx0XHR0aGlzLnRyYWNraW5nQ2xpY2sgPSBmYWxzZTtcblx0XHR0aGlzLnRyYWNraW5nQ2xpY2tTdGFydCA9IDA7XG5cblx0XHQvLyBPbiBzb21lIGlPUyBkZXZpY2VzLCB0aGUgdGFyZ2V0RWxlbWVudCBzdXBwbGllZCB3aXRoIHRoZSBldmVudCBpcyBpbnZhbGlkIGlmIHRoZSBsYXllclxuXHRcdC8vIGlzIHBlcmZvcm1pbmcgYSB0cmFuc2l0aW9uIG9yIHNjcm9sbCwgYW5kIGhhcyB0byBiZSByZS1kZXRlY3RlZCBtYW51YWxseS4gTm90ZSB0aGF0XG5cdFx0Ly8gZm9yIHRoaXMgdG8gZnVuY3Rpb24gY29ycmVjdGx5LCBpdCBtdXN0IGJlIGNhbGxlZCAqYWZ0ZXIqIHRoZSBldmVudCB0YXJnZXQgaXMgY2hlY2tlZCFcblx0XHQvLyBTZWUgaXNzdWUgIzU3OyBhbHNvIGZpbGVkIGFzIHJkYXI6Ly8xMzA0ODU4OSAuXG5cdFx0aWYgKGRldmljZUlzSU9TV2l0aEJhZFRhcmdldCkge1xuXHRcdFx0dG91Y2ggPSBldmVudC5jaGFuZ2VkVG91Y2hlc1swXTtcblxuXHRcdFx0Ly8gSW4gY2VydGFpbiBjYXNlcyBhcmd1bWVudHMgb2YgZWxlbWVudEZyb21Qb2ludCBjYW4gYmUgbmVnYXRpdmUsIHNvIHByZXZlbnQgc2V0dGluZyB0YXJnZXRFbGVtZW50IHRvIG51bGxcblx0XHRcdHRhcmdldEVsZW1lbnQgPSBkb2N1bWVudC5lbGVtZW50RnJvbVBvaW50KHRvdWNoLnBhZ2VYIC0gd2luZG93LnBhZ2VYT2Zmc2V0LCB0b3VjaC5wYWdlWSAtIHdpbmRvdy5wYWdlWU9mZnNldCkgfHwgdGFyZ2V0RWxlbWVudDtcblx0XHRcdHRhcmdldEVsZW1lbnQuZmFzdENsaWNrU2Nyb2xsUGFyZW50ID0gdGhpcy50YXJnZXRFbGVtZW50LmZhc3RDbGlja1Njcm9sbFBhcmVudDtcblx0XHR9XG5cblx0XHR0YXJnZXRUYWdOYW1lID0gdGFyZ2V0RWxlbWVudC50YWdOYW1lLnRvTG93ZXJDYXNlKCk7XG5cdFx0aWYgKHRhcmdldFRhZ05hbWUgPT09ICdsYWJlbCcpIHtcblx0XHRcdGZvckVsZW1lbnQgPSB0aGlzLmZpbmRDb250cm9sKHRhcmdldEVsZW1lbnQpO1xuXHRcdFx0aWYgKGZvckVsZW1lbnQpIHtcblx0XHRcdFx0dGhpcy5mb2N1cyh0YXJnZXRFbGVtZW50KTtcblx0XHRcdFx0aWYgKGRldmljZUlzQW5kcm9pZCkge1xuXHRcdFx0XHRcdHJldHVybiBmYWxzZTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdHRhcmdldEVsZW1lbnQgPSBmb3JFbGVtZW50O1xuXHRcdFx0fVxuXHRcdH0gZWxzZSBpZiAodGhpcy5uZWVkc0ZvY3VzKHRhcmdldEVsZW1lbnQpKSB7XG5cblx0XHRcdC8vIENhc2UgMTogSWYgdGhlIHRvdWNoIHN0YXJ0ZWQgYSB3aGlsZSBhZ28gKGJlc3QgZ3Vlc3MgaXMgMTAwbXMgYmFzZWQgb24gdGVzdHMgZm9yIGlzc3VlICMzNikgdGhlbiBmb2N1cyB3aWxsIGJlIHRyaWdnZXJlZCBhbnl3YXkuIFJldHVybiBlYXJseSBhbmQgdW5zZXQgdGhlIHRhcmdldCBlbGVtZW50IHJlZmVyZW5jZSBzbyB0aGF0IHRoZSBzdWJzZXF1ZW50IGNsaWNrIHdpbGwgYmUgYWxsb3dlZCB0aHJvdWdoLlxuXHRcdFx0Ly8gQ2FzZSAyOiBXaXRob3V0IHRoaXMgZXhjZXB0aW9uIGZvciBpbnB1dCBlbGVtZW50cyB0YXBwZWQgd2hlbiB0aGUgZG9jdW1lbnQgaXMgY29udGFpbmVkIGluIGFuIGlmcmFtZSwgdGhlbiBhbnkgaW5wdXR0ZWQgdGV4dCB3b24ndCBiZSB2aXNpYmxlIGV2ZW4gdGhvdWdoIHRoZSB2YWx1ZSBhdHRyaWJ1dGUgaXMgdXBkYXRlZCBhcyB0aGUgdXNlciB0eXBlcyAoaXNzdWUgIzM3KS5cblx0XHRcdGlmICgoZXZlbnQudGltZVN0YW1wIC0gdHJhY2tpbmdDbGlja1N0YXJ0KSA+IDEwMCB8fCAoZGV2aWNlSXNJT1MgJiYgd2luZG93LnRvcCAhPT0gd2luZG93ICYmIHRhcmdldFRhZ05hbWUgPT09ICdpbnB1dCcpKSB7XG5cdFx0XHRcdHRoaXMudGFyZ2V0RWxlbWVudCA9IG51bGw7XG5cdFx0XHRcdHJldHVybiBmYWxzZTtcblx0XHRcdH1cblxuXHRcdFx0dGhpcy5mb2N1cyh0YXJnZXRFbGVtZW50KTtcblx0XHRcdHRoaXMuc2VuZENsaWNrKHRhcmdldEVsZW1lbnQsIGV2ZW50KTtcblxuXHRcdFx0Ly8gU2VsZWN0IGVsZW1lbnRzIG5lZWQgdGhlIGV2ZW50IHRvIGdvIHRocm91Z2ggb24gaU9TIDQsIG90aGVyd2lzZSB0aGUgc2VsZWN0b3IgbWVudSB3b24ndCBvcGVuLlxuXHRcdFx0Ly8gQWxzbyB0aGlzIGJyZWFrcyBvcGVuaW5nIHNlbGVjdHMgd2hlbiBWb2ljZU92ZXIgaXMgYWN0aXZlIG9uIGlPUzYsIGlPUzcgKGFuZCBwb3NzaWJseSBvdGhlcnMpXG5cdFx0XHRpZiAoIWRldmljZUlzSU9TIHx8IHRhcmdldFRhZ05hbWUgIT09ICdzZWxlY3QnKSB7XG5cdFx0XHRcdHRoaXMudGFyZ2V0RWxlbWVudCA9IG51bGw7XG5cdFx0XHRcdGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG5cdFx0XHR9XG5cblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHRpZiAoZGV2aWNlSXNJT1MgJiYgIWRldmljZUlzSU9TNCkge1xuXG5cdFx0XHQvLyBEb24ndCBzZW5kIGEgc3ludGhldGljIGNsaWNrIGV2ZW50IGlmIHRoZSB0YXJnZXQgZWxlbWVudCBpcyBjb250YWluZWQgd2l0aGluIGEgcGFyZW50IGxheWVyIHRoYXQgd2FzIHNjcm9sbGVkXG5cdFx0XHQvLyBhbmQgdGhpcyB0YXAgaXMgYmVpbmcgdXNlZCB0byBzdG9wIHRoZSBzY3JvbGxpbmcgKHVzdWFsbHkgaW5pdGlhdGVkIGJ5IGEgZmxpbmcgLSBpc3N1ZSAjNDIpLlxuXHRcdFx0c2Nyb2xsUGFyZW50ID0gdGFyZ2V0RWxlbWVudC5mYXN0Q2xpY2tTY3JvbGxQYXJlbnQ7XG5cdFx0XHRpZiAoc2Nyb2xsUGFyZW50ICYmIHNjcm9sbFBhcmVudC5mYXN0Q2xpY2tMYXN0U2Nyb2xsVG9wICE9PSBzY3JvbGxQYXJlbnQuc2Nyb2xsVG9wKSB7XG5cdFx0XHRcdHJldHVybiB0cnVlO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdC8vIFByZXZlbnQgdGhlIGFjdHVhbCBjbGljayBmcm9tIGdvaW5nIHRob3VnaCAtIHVubGVzcyB0aGUgdGFyZ2V0IG5vZGUgaXMgbWFya2VkIGFzIHJlcXVpcmluZ1xuXHRcdC8vIHJlYWwgY2xpY2tzIG9yIGlmIGl0IGlzIGluIHRoZSB3aGl0ZWxpc3QgaW4gd2hpY2ggY2FzZSBvbmx5IG5vbi1wcm9ncmFtbWF0aWMgY2xpY2tzIGFyZSBwZXJtaXR0ZWQuXG5cdFx0aWYgKCF0aGlzLm5lZWRzQ2xpY2sodGFyZ2V0RWxlbWVudCkpIHtcblx0XHRcdGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG5cdFx0XHR0aGlzLnNlbmRDbGljayh0YXJnZXRFbGVtZW50LCBldmVudCk7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGZhbHNlO1xuXHR9O1xuXG5cblx0LyoqXG5cdCAqIE9uIHRvdWNoIGNhbmNlbCwgc3RvcCB0cmFja2luZyB0aGUgY2xpY2suXG5cdCAqXG5cdCAqIEByZXR1cm5zIHt2b2lkfVxuXHQgKi9cblx0RmFzdENsaWNrLnByb3RvdHlwZS5vblRvdWNoQ2FuY2VsID0gZnVuY3Rpb24oKSB7XG5cdFx0dGhpcy50cmFja2luZ0NsaWNrID0gZmFsc2U7XG5cdFx0dGhpcy50YXJnZXRFbGVtZW50ID0gbnVsbDtcblx0fTtcblxuXG5cdC8qKlxuXHQgKiBEZXRlcm1pbmUgbW91c2UgZXZlbnRzIHdoaWNoIHNob3VsZCBiZSBwZXJtaXR0ZWQuXG5cdCAqXG5cdCAqIEBwYXJhbSB7RXZlbnR9IGV2ZW50XG5cdCAqIEByZXR1cm5zIHtib29sZWFufVxuXHQgKi9cblx0RmFzdENsaWNrLnByb3RvdHlwZS5vbk1vdXNlID0gZnVuY3Rpb24oZXZlbnQpIHtcblxuXHRcdC8vIElmIGEgdGFyZ2V0IGVsZW1lbnQgd2FzIG5ldmVyIHNldCAoYmVjYXVzZSBhIHRvdWNoIGV2ZW50IHdhcyBuZXZlciBmaXJlZCkgYWxsb3cgdGhlIGV2ZW50XG5cdFx0aWYgKCF0aGlzLnRhcmdldEVsZW1lbnQpIHtcblx0XHRcdHJldHVybiB0cnVlO1xuXHRcdH1cblxuXHRcdGlmIChldmVudC5mb3J3YXJkZWRUb3VjaEV2ZW50KSB7XG5cdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHR9XG5cblx0XHQvLyBQcm9ncmFtbWF0aWNhbGx5IGdlbmVyYXRlZCBldmVudHMgdGFyZ2V0aW5nIGEgc3BlY2lmaWMgZWxlbWVudCBzaG91bGQgYmUgcGVybWl0dGVkXG5cdFx0aWYgKCFldmVudC5jYW5jZWxhYmxlKSB7XG5cdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHR9XG5cblx0XHQvLyBEZXJpdmUgYW5kIGNoZWNrIHRoZSB0YXJnZXQgZWxlbWVudCB0byBzZWUgd2hldGhlciB0aGUgbW91c2UgZXZlbnQgbmVlZHMgdG8gYmUgcGVybWl0dGVkO1xuXHRcdC8vIHVubGVzcyBleHBsaWNpdGx5IGVuYWJsZWQsIHByZXZlbnQgbm9uLXRvdWNoIGNsaWNrIGV2ZW50cyBmcm9tIHRyaWdnZXJpbmcgYWN0aW9ucyxcblx0XHQvLyB0byBwcmV2ZW50IGdob3N0L2RvdWJsZWNsaWNrcy5cblx0XHRpZiAoIXRoaXMubmVlZHNDbGljayh0aGlzLnRhcmdldEVsZW1lbnQpIHx8IHRoaXMuY2FuY2VsTmV4dENsaWNrKSB7XG5cblx0XHRcdC8vIFByZXZlbnQgYW55IHVzZXItYWRkZWQgbGlzdGVuZXJzIGRlY2xhcmVkIG9uIEZhc3RDbGljayBlbGVtZW50IGZyb20gYmVpbmcgZmlyZWQuXG5cdFx0XHRpZiAoZXZlbnQuc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uKSB7XG5cdFx0XHRcdGV2ZW50LnN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbigpO1xuXHRcdFx0fSBlbHNlIHtcblxuXHRcdFx0XHQvLyBQYXJ0IG9mIHRoZSBoYWNrIGZvciBicm93c2VycyB0aGF0IGRvbid0IHN1cHBvcnQgRXZlbnQjc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uIChlLmcuIEFuZHJvaWQgMilcblx0XHRcdFx0ZXZlbnQucHJvcGFnYXRpb25TdG9wcGVkID0gdHJ1ZTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gQ2FuY2VsIHRoZSBldmVudFxuXHRcdFx0ZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XG5cdFx0XHRldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuXG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0Ly8gSWYgdGhlIG1vdXNlIGV2ZW50IGlzIHBlcm1pdHRlZCwgcmV0dXJuIHRydWUgZm9yIHRoZSBhY3Rpb24gdG8gZ28gdGhyb3VnaC5cblx0XHRyZXR1cm4gdHJ1ZTtcblx0fTtcblxuXG5cdC8qKlxuXHQgKiBPbiBhY3R1YWwgY2xpY2tzLCBkZXRlcm1pbmUgd2hldGhlciB0aGlzIGlzIGEgdG91Y2gtZ2VuZXJhdGVkIGNsaWNrLCBhIGNsaWNrIGFjdGlvbiBvY2N1cnJpbmdcblx0ICogbmF0dXJhbGx5IGFmdGVyIGEgZGVsYXkgYWZ0ZXIgYSB0b3VjaCAod2hpY2ggbmVlZHMgdG8gYmUgY2FuY2VsbGVkIHRvIGF2b2lkIGR1cGxpY2F0aW9uKSwgb3Jcblx0ICogYW4gYWN0dWFsIGNsaWNrIHdoaWNoIHNob3VsZCBiZSBwZXJtaXR0ZWQuXG5cdCAqXG5cdCAqIEBwYXJhbSB7RXZlbnR9IGV2ZW50XG5cdCAqIEByZXR1cm5zIHtib29sZWFufVxuXHQgKi9cblx0RmFzdENsaWNrLnByb3RvdHlwZS5vbkNsaWNrID0gZnVuY3Rpb24oZXZlbnQpIHtcblx0XHR2YXIgcGVybWl0dGVkO1xuXG5cdFx0Ly8gSXQncyBwb3NzaWJsZSBmb3IgYW5vdGhlciBGYXN0Q2xpY2stbGlrZSBsaWJyYXJ5IGRlbGl2ZXJlZCB3aXRoIHRoaXJkLXBhcnR5IGNvZGUgdG8gZmlyZSBhIGNsaWNrIGV2ZW50IGJlZm9yZSBGYXN0Q2xpY2sgZG9lcyAoaXNzdWUgIzQ0KS4gSW4gdGhhdCBjYXNlLCBzZXQgdGhlIGNsaWNrLXRyYWNraW5nIGZsYWcgYmFjayB0byBmYWxzZSBhbmQgcmV0dXJuIGVhcmx5LiBUaGlzIHdpbGwgY2F1c2Ugb25Ub3VjaEVuZCB0byByZXR1cm4gZWFybHkuXG5cdFx0aWYgKHRoaXMudHJhY2tpbmdDbGljaykge1xuXHRcdFx0dGhpcy50YXJnZXRFbGVtZW50ID0gbnVsbDtcblx0XHRcdHRoaXMudHJhY2tpbmdDbGljayA9IGZhbHNlO1xuXHRcdFx0cmV0dXJuIHRydWU7XG5cdFx0fVxuXG5cdFx0Ly8gVmVyeSBvZGQgYmVoYXZpb3Igb24gaU9TIChpc3N1ZSAjMTgpOiBpZiBhIHN1Ym1pdCBlbGVtZW50IGlzIHByZXNlbnQgaW5zaWRlIGEgZm9ybSBhbmQgdGhlIHVzZXIgaGl0cyBlbnRlciBpbiB0aGUgaU9TIHNpbXVsYXRvciBvciBjbGlja3MgdGhlIEdvIGJ1dHRvbiBvbiB0aGUgcG9wLXVwIE9TIGtleWJvYXJkIHRoZSBhIGtpbmQgb2YgJ2Zha2UnIGNsaWNrIGV2ZW50IHdpbGwgYmUgdHJpZ2dlcmVkIHdpdGggdGhlIHN1Ym1pdC10eXBlIGlucHV0IGVsZW1lbnQgYXMgdGhlIHRhcmdldC5cblx0XHRpZiAoZXZlbnQudGFyZ2V0LnR5cGUgPT09ICdzdWJtaXQnICYmIGV2ZW50LmRldGFpbCA9PT0gMCkge1xuXHRcdFx0cmV0dXJuIHRydWU7XG5cdFx0fVxuXG5cdFx0cGVybWl0dGVkID0gdGhpcy5vbk1vdXNlKGV2ZW50KTtcblxuXHRcdC8vIE9ubHkgdW5zZXQgdGFyZ2V0RWxlbWVudCBpZiB0aGUgY2xpY2sgaXMgbm90IHBlcm1pdHRlZC4gVGhpcyB3aWxsIGVuc3VyZSB0aGF0IHRoZSBjaGVjayBmb3IgIXRhcmdldEVsZW1lbnQgaW4gb25Nb3VzZSBmYWlscyBhbmQgdGhlIGJyb3dzZXIncyBjbGljayBkb2Vzbid0IGdvIHRocm91Z2guXG5cdFx0aWYgKCFwZXJtaXR0ZWQpIHtcblx0XHRcdHRoaXMudGFyZ2V0RWxlbWVudCA9IG51bGw7XG5cdFx0fVxuXG5cdFx0Ly8gSWYgY2xpY2tzIGFyZSBwZXJtaXR0ZWQsIHJldHVybiB0cnVlIGZvciB0aGUgYWN0aW9uIHRvIGdvIHRocm91Z2guXG5cdFx0cmV0dXJuIHBlcm1pdHRlZDtcblx0fTtcblxuXG5cdC8qKlxuXHQgKiBSZW1vdmUgYWxsIEZhc3RDbGljaydzIGV2ZW50IGxpc3RlbmVycy5cblx0ICpcblx0ICogQHJldHVybnMge3ZvaWR9XG5cdCAqL1xuXHRGYXN0Q2xpY2sucHJvdG90eXBlLmRlc3Ryb3kgPSBmdW5jdGlvbigpIHtcblx0XHR2YXIgbGF5ZXIgPSB0aGlzLmxheWVyO1xuXG5cdFx0aWYgKGRldmljZUlzQW5kcm9pZCkge1xuXHRcdFx0bGF5ZXIucmVtb3ZlRXZlbnRMaXN0ZW5lcignbW91c2VvdmVyJywgdGhpcy5vbk1vdXNlLCB0cnVlKTtcblx0XHRcdGxheWVyLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ21vdXNlZG93bicsIHRoaXMub25Nb3VzZSwgdHJ1ZSk7XG5cdFx0XHRsYXllci5yZW1vdmVFdmVudExpc3RlbmVyKCdtb3VzZXVwJywgdGhpcy5vbk1vdXNlLCB0cnVlKTtcblx0XHR9XG5cblx0XHRsYXllci5yZW1vdmVFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMub25DbGljaywgdHJ1ZSk7XG5cdFx0bGF5ZXIucmVtb3ZlRXZlbnRMaXN0ZW5lcigndG91Y2hzdGFydCcsIHRoaXMub25Ub3VjaFN0YXJ0LCBmYWxzZSk7XG5cdFx0bGF5ZXIucmVtb3ZlRXZlbnRMaXN0ZW5lcigndG91Y2htb3ZlJywgdGhpcy5vblRvdWNoTW92ZSwgZmFsc2UpO1xuXHRcdGxheWVyLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3RvdWNoZW5kJywgdGhpcy5vblRvdWNoRW5kLCBmYWxzZSk7XG5cdFx0bGF5ZXIucmVtb3ZlRXZlbnRMaXN0ZW5lcigndG91Y2hjYW5jZWwnLCB0aGlzLm9uVG91Y2hDYW5jZWwsIGZhbHNlKTtcblx0fTtcblxuXG5cdC8qKlxuXHQgKiBDaGVjayB3aGV0aGVyIEZhc3RDbGljayBpcyBuZWVkZWQuXG5cdCAqXG5cdCAqIEBwYXJhbSB7RWxlbWVudH0gbGF5ZXIgVGhlIGxheWVyIHRvIGxpc3RlbiBvblxuXHQgKi9cblx0RmFzdENsaWNrLm5vdE5lZWRlZCA9IGZ1bmN0aW9uKGxheWVyKSB7XG5cdFx0dmFyIG1ldGFWaWV3cG9ydDtcblx0XHR2YXIgY2hyb21lVmVyc2lvbjtcblx0XHR2YXIgYmxhY2tiZXJyeVZlcnNpb247XG5cdFx0dmFyIGZpcmVmb3hWZXJzaW9uO1xuXG5cdFx0Ly8gRGV2aWNlcyB0aGF0IGRvbid0IHN1cHBvcnQgdG91Y2ggZG9uJ3QgbmVlZCBGYXN0Q2xpY2tcblx0XHRpZiAodHlwZW9mIHdpbmRvdy5vbnRvdWNoc3RhcnQgPT09ICd1bmRlZmluZWQnKSB7XG5cdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHR9XG5cblx0XHQvLyBDaHJvbWUgdmVyc2lvbiAtIHplcm8gZm9yIG90aGVyIGJyb3dzZXJzXG5cdFx0Y2hyb21lVmVyc2lvbiA9ICsoL0Nocm9tZVxcLyhbMC05XSspLy5leGVjKG5hdmlnYXRvci51c2VyQWdlbnQpIHx8IFssMF0pWzFdO1xuXG5cdFx0aWYgKGNocm9tZVZlcnNpb24pIHtcblxuXHRcdFx0aWYgKGRldmljZUlzQW5kcm9pZCkge1xuXHRcdFx0XHRtZXRhVmlld3BvcnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdtZXRhW25hbWU9dmlld3BvcnRdJyk7XG5cblx0XHRcdFx0aWYgKG1ldGFWaWV3cG9ydCkge1xuXHRcdFx0XHRcdC8vIENocm9tZSBvbiBBbmRyb2lkIHdpdGggdXNlci1zY2FsYWJsZT1cIm5vXCIgZG9lc24ndCBuZWVkIEZhc3RDbGljayAoaXNzdWUgIzg5KVxuXHRcdFx0XHRcdGlmIChtZXRhVmlld3BvcnQuY29udGVudC5pbmRleE9mKCd1c2VyLXNjYWxhYmxlPW5vJykgIT09IC0xKSB7XG5cdFx0XHRcdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0Ly8gQ2hyb21lIDMyIGFuZCBhYm92ZSB3aXRoIHdpZHRoPWRldmljZS13aWR0aCBvciBsZXNzIGRvbid0IG5lZWQgRmFzdENsaWNrXG5cdFx0XHRcdFx0aWYgKGNocm9tZVZlcnNpb24gPiAzMSAmJiBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc2Nyb2xsV2lkdGggPD0gd2luZG93Lm91dGVyV2lkdGgpIHtcblx0XHRcdFx0XHRcdHJldHVybiB0cnVlO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXG5cdFx0XHQvLyBDaHJvbWUgZGVza3RvcCBkb2Vzbid0IG5lZWQgRmFzdENsaWNrIChpc3N1ZSAjMTUpXG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHRpZiAoZGV2aWNlSXNCbGFja0JlcnJ5MTApIHtcblx0XHRcdGJsYWNrYmVycnlWZXJzaW9uID0gbmF2aWdhdG9yLnVzZXJBZ2VudC5tYXRjaCgvVmVyc2lvblxcLyhbMC05XSopXFwuKFswLTldKikvKTtcblxuXHRcdFx0Ly8gQmxhY2tCZXJyeSAxMC4zKyBkb2VzIG5vdCByZXF1aXJlIEZhc3RjbGljayBsaWJyYXJ5LlxuXHRcdFx0Ly8gaHR0cHM6Ly9naXRodWIuY29tL2Z0bGFicy9mYXN0Y2xpY2svaXNzdWVzLzI1MVxuXHRcdFx0aWYgKGJsYWNrYmVycnlWZXJzaW9uWzFdID49IDEwICYmIGJsYWNrYmVycnlWZXJzaW9uWzJdID49IDMpIHtcblx0XHRcdFx0bWV0YVZpZXdwb3J0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignbWV0YVtuYW1lPXZpZXdwb3J0XScpO1xuXG5cdFx0XHRcdGlmIChtZXRhVmlld3BvcnQpIHtcblx0XHRcdFx0XHQvLyB1c2VyLXNjYWxhYmxlPW5vIGVsaW1pbmF0ZXMgY2xpY2sgZGVsYXkuXG5cdFx0XHRcdFx0aWYgKG1ldGFWaWV3cG9ydC5jb250ZW50LmluZGV4T2YoJ3VzZXItc2NhbGFibGU9bm8nKSAhPT0gLTEpIHtcblx0XHRcdFx0XHRcdHJldHVybiB0cnVlO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHQvLyB3aWR0aD1kZXZpY2Utd2lkdGggKG9yIGxlc3MgdGhhbiBkZXZpY2Utd2lkdGgpIGVsaW1pbmF0ZXMgY2xpY2sgZGVsYXkuXG5cdFx0XHRcdFx0aWYgKGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5zY3JvbGxXaWR0aCA8PSB3aW5kb3cub3V0ZXJXaWR0aCkge1xuXHRcdFx0XHRcdFx0cmV0dXJuIHRydWU7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0Ly8gSUUxMCB3aXRoIC1tcy10b3VjaC1hY3Rpb246IG5vbmUgb3IgbWFuaXB1bGF0aW9uLCB3aGljaCBkaXNhYmxlcyBkb3VibGUtdGFwLXRvLXpvb20gKGlzc3VlICM5Nylcblx0XHRpZiAobGF5ZXIuc3R5bGUubXNUb3VjaEFjdGlvbiA9PT0gJ25vbmUnIHx8IGxheWVyLnN0eWxlLnRvdWNoQWN0aW9uID09PSAnbWFuaXB1bGF0aW9uJykge1xuXHRcdFx0cmV0dXJuIHRydWU7XG5cdFx0fVxuXG5cdFx0Ly8gRmlyZWZveCB2ZXJzaW9uIC0gemVybyBmb3Igb3RoZXIgYnJvd3NlcnNcblx0XHRmaXJlZm94VmVyc2lvbiA9ICsoL0ZpcmVmb3hcXC8oWzAtOV0rKS8uZXhlYyhuYXZpZ2F0b3IudXNlckFnZW50KSB8fCBbLDBdKVsxXTtcblxuXHRcdGlmIChmaXJlZm94VmVyc2lvbiA+PSAyNykge1xuXHRcdFx0Ly8gRmlyZWZveCAyNysgZG9lcyBub3QgaGF2ZSB0YXAgZGVsYXkgaWYgdGhlIGNvbnRlbnQgaXMgbm90IHpvb21hYmxlIC0gaHR0cHM6Ly9idWd6aWxsYS5tb3ppbGxhLm9yZy9zaG93X2J1Zy5jZ2k/aWQ9OTIyODk2XG5cblx0XHRcdG1ldGFWaWV3cG9ydCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ21ldGFbbmFtZT12aWV3cG9ydF0nKTtcblx0XHRcdGlmIChtZXRhVmlld3BvcnQgJiYgKG1ldGFWaWV3cG9ydC5jb250ZW50LmluZGV4T2YoJ3VzZXItc2NhbGFibGU9bm8nKSAhPT0gLTEgfHwgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnNjcm9sbFdpZHRoIDw9IHdpbmRvdy5vdXRlcldpZHRoKSkge1xuXHRcdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHQvLyBJRTExOiBwcmVmaXhlZCAtbXMtdG91Y2gtYWN0aW9uIGlzIG5vIGxvbmdlciBzdXBwb3J0ZWQgYW5kIGl0J3MgcmVjb21tZW5kZWQgdG8gdXNlIG5vbi1wcmVmaXhlZCB2ZXJzaW9uXG5cdFx0Ly8gaHR0cDovL21zZG4ubWljcm9zb2Z0LmNvbS9lbi11cy9saWJyYXJ5L3dpbmRvd3MvYXBwcy9IaDc2NzMxMy5hc3B4XG5cdFx0aWYgKGxheWVyLnN0eWxlLnRvdWNoQWN0aW9uID09PSAnbm9uZScgfHwgbGF5ZXIuc3R5bGUudG91Y2hBY3Rpb24gPT09ICdtYW5pcHVsYXRpb24nKSB7XG5cdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHR9XG5cblx0XHRyZXR1cm4gZmFsc2U7XG5cdH07XG5cblxuXHQvKipcblx0ICogRmFjdG9yeSBtZXRob2QgZm9yIGNyZWF0aW5nIGEgRmFzdENsaWNrIG9iamVjdFxuXHQgKlxuXHQgKiBAcGFyYW0ge0VsZW1lbnR9IGxheWVyIFRoZSBsYXllciB0byBsaXN0ZW4gb25cblx0ICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zPXt9XSBUaGUgb3B0aW9ucyB0byBvdmVycmlkZSB0aGUgZGVmYXVsdHNcblx0ICovXG5cdEZhc3RDbGljay5hdHRhY2ggPSBmdW5jdGlvbihsYXllciwgb3B0aW9ucykge1xuXHRcdHJldHVybiBuZXcgRmFzdENsaWNrKGxheWVyLCBvcHRpb25zKTtcblx0fTtcblxuICB3aW5kb3cuRmFzdENsaWNrID0gRmFzdENsaWNrO1xufSgpKTtcbiIsIi8qKlxuICogTWljcm9FdmVudCAtIHRvIG1ha2UgYW55IGpzIG9iamVjdCBhbiBldmVudCBlbWl0dGVyIChzZXJ2ZXIgb3IgYnJvd3NlcilcbiAqIFxuICogLSBwdXJlIGphdmFzY3JpcHQgLSBzZXJ2ZXIgY29tcGF0aWJsZSwgYnJvd3NlciBjb21wYXRpYmxlXG4gKiAtIGRvbnQgcmVseSBvbiB0aGUgYnJvd3NlciBkb21zXG4gKiAtIHN1cGVyIHNpbXBsZSAtIHlvdSBnZXQgaXQgaW1tZWRpYXRlbHksIG5vIG15c3RlcnksIG5vIG1hZ2ljIGludm9sdmVkXG4gKlxuICogLSBjcmVhdGUgYSBNaWNyb0V2ZW50RGVidWcgd2l0aCBnb29kaWVzIHRvIGRlYnVnXG4gKiAgIC0gbWFrZSBpdCBzYWZlciB0byB1c2VcbiovXG5cbi8qKiBOT1RFOiBUaGlzIGxpYnJhcnkgaXMgY3VzdG9taXplZCBmb3IgT25zZW4gVUkuICovXG5cbnZhciBNaWNyb0V2ZW50ICA9IGZ1bmN0aW9uKCl7fTtcbk1pY3JvRXZlbnQucHJvdG90eXBlICA9IHtcbiAgb24gIDogZnVuY3Rpb24oZXZlbnQsIGZjdCl7XG4gICAgdGhpcy5fZXZlbnRzID0gdGhpcy5fZXZlbnRzIHx8IHt9O1xuICAgIHRoaXMuX2V2ZW50c1tldmVudF0gPSB0aGlzLl9ldmVudHNbZXZlbnRdIHx8IFtdO1xuICAgIHRoaXMuX2V2ZW50c1tldmVudF0ucHVzaChmY3QpO1xuICB9LFxuICBvbmNlIDogZnVuY3Rpb24oZXZlbnQsIGZjdCl7XG4gICAgdmFyIHNlbGYgPSB0aGlzO1xuICAgIHZhciB3cmFwcGVyID0gZnVuY3Rpb24oKSB7XG4gICAgICBzZWxmLm9mZihldmVudCwgd3JhcHBlcik7XG4gICAgICByZXR1cm4gZmN0LmFwcGx5KG51bGwsIGFyZ3VtZW50cyk7XG4gICAgfTtcbiAgICB0aGlzLm9uKGV2ZW50LCB3cmFwcGVyKTtcbiAgfSxcbiAgb2ZmICA6IGZ1bmN0aW9uKGV2ZW50LCBmY3Qpe1xuICAgIHRoaXMuX2V2ZW50cyA9IHRoaXMuX2V2ZW50cyB8fCB7fTtcbiAgICBpZiggZXZlbnQgaW4gdGhpcy5fZXZlbnRzID09PSBmYWxzZSAgKSAgcmV0dXJuO1xuXG4gICAgdGhpcy5fZXZlbnRzW2V2ZW50XSA9IHRoaXMuX2V2ZW50c1tldmVudF1cbiAgICAgIC5maWx0ZXIoZnVuY3Rpb24oX2ZjdCkge1xuICAgICAgICBpZiAoZmN0KSB7XG4gICAgICAgICAgIHJldHVybiBmY3QgIT09IF9mY3Q7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgfSxcbiAgZW1pdCA6IGZ1bmN0aW9uKGV2ZW50IC8qICwgYXJncy4uLiAqLyl7XG4gICAgdGhpcy5fZXZlbnRzID0gdGhpcy5fZXZlbnRzIHx8IHt9O1xuICAgIGlmKCBldmVudCBpbiB0aGlzLl9ldmVudHMgPT09IGZhbHNlICApICByZXR1cm47XG4gICAgZm9yKHZhciBpID0gMDsgaSA8IHRoaXMuX2V2ZW50c1tldmVudF0ubGVuZ3RoOyBpKyspe1xuICAgICAgdGhpcy5fZXZlbnRzW2V2ZW50XVtpXS5hcHBseSh0aGlzLCBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMsIDEpKTtcbiAgICB9XG4gIH1cbn07XG5cbi8qKlxuICogbWl4aW4gd2lsbCBkZWxlZ2F0ZSBhbGwgTWljcm9FdmVudC5qcyBmdW5jdGlvbiBpbiB0aGUgZGVzdGluYXRpb24gb2JqZWN0XG4gKlxuICogLSByZXF1aXJlKCdNaWNyb0V2ZW50JykubWl4aW4oRm9vYmFyKSB3aWxsIG1ha2UgRm9vYmFyIGFibGUgdG8gdXNlIE1pY3JvRXZlbnRcbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gdGhlIG9iamVjdCB3aGljaCB3aWxsIHN1cHBvcnQgTWljcm9FdmVudFxuKi9cbk1pY3JvRXZlbnQubWl4aW4gID0gZnVuY3Rpb24oZGVzdE9iamVjdCl7XG4gIHZhciBwcm9wcyA9IFsnb24nLCAnb25jZScsICdvZmYnLCAnZW1pdCddO1xuICBmb3IodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpICsrKXtcbiAgICBpZiggdHlwZW9mIGRlc3RPYmplY3QgPT09ICdmdW5jdGlvbicgKXtcbiAgICAgIGRlc3RPYmplY3QucHJvdG90eXBlW3Byb3BzW2ldXSAgPSBNaWNyb0V2ZW50LnByb3RvdHlwZVtwcm9wc1tpXV07XG4gICAgfWVsc2V7XG4gICAgICBkZXN0T2JqZWN0W3Byb3BzW2ldXSA9IE1pY3JvRXZlbnQucHJvdG90eXBlW3Byb3BzW2ldXTtcbiAgICB9XG4gIH1cbn1cblxuLy8gZXhwb3J0IGluIGNvbW1vbiBqc1xuaWYoIHR5cGVvZiBtb2R1bGUgIT09IFwidW5kZWZpbmVkXCIgJiYgKCdleHBvcnRzJyBpbiBtb2R1bGUpKXtcbiAgbW9kdWxlLmV4cG9ydHMgID0gTWljcm9FdmVudDtcbn1cblxud2luZG93Lk1pY3JvRXZlbnQgPSBNaWNyb0V2ZW50O1xuIiwiKGZ1bmN0aW9uIChyb290KSB7XG5cbiAgLy8gU3RvcmUgc2V0VGltZW91dCByZWZlcmVuY2Ugc28gcHJvbWlzZS1wb2x5ZmlsbCB3aWxsIGJlIHVuYWZmZWN0ZWQgYnlcbiAgLy8gb3RoZXIgY29kZSBtb2RpZnlpbmcgc2V0VGltZW91dCAobGlrZSBzaW5vbi51c2VGYWtlVGltZXJzKCkpXG4gIHZhciBzZXRUaW1lb3V0RnVuYyA9IHNldFRpbWVvdXQ7XG5cbiAgZnVuY3Rpb24gbm9vcCgpIHt9XG4gIFxuICAvLyBQb2x5ZmlsbCBmb3IgRnVuY3Rpb24ucHJvdG90eXBlLmJpbmRcbiAgZnVuY3Rpb24gYmluZChmbiwgdGhpc0FyZykge1xuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICBmbi5hcHBseSh0aGlzQXJnLCBhcmd1bWVudHMpO1xuICAgIH07XG4gIH1cblxuICBmdW5jdGlvbiBQcm9taXNlKGZuKSB7XG4gICAgaWYgKHR5cGVvZiB0aGlzICE9PSAnb2JqZWN0JykgdGhyb3cgbmV3IFR5cGVFcnJvcignUHJvbWlzZXMgbXVzdCBiZSBjb25zdHJ1Y3RlZCB2aWEgbmV3Jyk7XG4gICAgaWYgKHR5cGVvZiBmbiAhPT0gJ2Z1bmN0aW9uJykgdGhyb3cgbmV3IFR5cGVFcnJvcignbm90IGEgZnVuY3Rpb24nKTtcbiAgICB0aGlzLl9zdGF0ZSA9IDA7XG4gICAgdGhpcy5faGFuZGxlZCA9IGZhbHNlO1xuICAgIHRoaXMuX3ZhbHVlID0gdW5kZWZpbmVkO1xuICAgIHRoaXMuX2RlZmVycmVkcyA9IFtdO1xuXG4gICAgZG9SZXNvbHZlKGZuLCB0aGlzKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGhhbmRsZShzZWxmLCBkZWZlcnJlZCkge1xuICAgIHdoaWxlIChzZWxmLl9zdGF0ZSA9PT0gMykge1xuICAgICAgc2VsZiA9IHNlbGYuX3ZhbHVlO1xuICAgIH1cbiAgICBpZiAoc2VsZi5fc3RhdGUgPT09IDApIHtcbiAgICAgIHNlbGYuX2RlZmVycmVkcy5wdXNoKGRlZmVycmVkKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgc2VsZi5faGFuZGxlZCA9IHRydWU7XG4gICAgUHJvbWlzZS5faW1tZWRpYXRlRm4oZnVuY3Rpb24gKCkge1xuICAgICAgdmFyIGNiID0gc2VsZi5fc3RhdGUgPT09IDEgPyBkZWZlcnJlZC5vbkZ1bGZpbGxlZCA6IGRlZmVycmVkLm9uUmVqZWN0ZWQ7XG4gICAgICBpZiAoY2IgPT09IG51bGwpIHtcbiAgICAgICAgKHNlbGYuX3N0YXRlID09PSAxID8gcmVzb2x2ZSA6IHJlamVjdCkoZGVmZXJyZWQucHJvbWlzZSwgc2VsZi5fdmFsdWUpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICB2YXIgcmV0O1xuICAgICAgdHJ5IHtcbiAgICAgICAgcmV0ID0gY2Ioc2VsZi5fdmFsdWUpO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICByZWplY3QoZGVmZXJyZWQucHJvbWlzZSwgZSk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIHJlc29sdmUoZGVmZXJyZWQucHJvbWlzZSwgcmV0KTtcbiAgICB9KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHJlc29sdmUoc2VsZiwgbmV3VmFsdWUpIHtcbiAgICB0cnkge1xuICAgICAgLy8gUHJvbWlzZSBSZXNvbHV0aW9uIFByb2NlZHVyZTogaHR0cHM6Ly9naXRodWIuY29tL3Byb21pc2VzLWFwbHVzL3Byb21pc2VzLXNwZWMjdGhlLXByb21pc2UtcmVzb2x1dGlvbi1wcm9jZWR1cmVcbiAgICAgIGlmIChuZXdWYWx1ZSA9PT0gc2VsZikgdGhyb3cgbmV3IFR5cGVFcnJvcignQSBwcm9taXNlIGNhbm5vdCBiZSByZXNvbHZlZCB3aXRoIGl0c2VsZi4nKTtcbiAgICAgIGlmIChuZXdWYWx1ZSAmJiAodHlwZW9mIG5ld1ZhbHVlID09PSAnb2JqZWN0JyB8fCB0eXBlb2YgbmV3VmFsdWUgPT09ICdmdW5jdGlvbicpKSB7XG4gICAgICAgIHZhciB0aGVuID0gbmV3VmFsdWUudGhlbjtcbiAgICAgICAgaWYgKG5ld1ZhbHVlIGluc3RhbmNlb2YgUHJvbWlzZSkge1xuICAgICAgICAgIHNlbGYuX3N0YXRlID0gMztcbiAgICAgICAgICBzZWxmLl92YWx1ZSA9IG5ld1ZhbHVlO1xuICAgICAgICAgIGZpbmFsZShzZWxmKTtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH0gZWxzZSBpZiAodHlwZW9mIHRoZW4gPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICBkb1Jlc29sdmUoYmluZCh0aGVuLCBuZXdWYWx1ZSksIHNlbGYpO1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgc2VsZi5fc3RhdGUgPSAxO1xuICAgICAgc2VsZi5fdmFsdWUgPSBuZXdWYWx1ZTtcbiAgICAgIGZpbmFsZShzZWxmKTtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICByZWplY3Qoc2VsZiwgZSk7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gcmVqZWN0KHNlbGYsIG5ld1ZhbHVlKSB7XG4gICAgc2VsZi5fc3RhdGUgPSAyO1xuICAgIHNlbGYuX3ZhbHVlID0gbmV3VmFsdWU7XG4gICAgZmluYWxlKHNlbGYpO1xuICB9XG5cbiAgZnVuY3Rpb24gZmluYWxlKHNlbGYpIHtcbiAgICBpZiAoc2VsZi5fc3RhdGUgPT09IDIgJiYgc2VsZi5fZGVmZXJyZWRzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgUHJvbWlzZS5faW1tZWRpYXRlRm4oZnVuY3Rpb24oKSB7XG4gICAgICAgIGlmICghc2VsZi5faGFuZGxlZCkge1xuICAgICAgICAgIFByb21pc2UuX3VuaGFuZGxlZFJlamVjdGlvbkZuKHNlbGYuX3ZhbHVlKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgZm9yICh2YXIgaSA9IDAsIGxlbiA9IHNlbGYuX2RlZmVycmVkcy5sZW5ndGg7IGkgPCBsZW47IGkrKykge1xuICAgICAgaGFuZGxlKHNlbGYsIHNlbGYuX2RlZmVycmVkc1tpXSk7XG4gICAgfVxuICAgIHNlbGYuX2RlZmVycmVkcyA9IG51bGw7XG4gIH1cblxuICBmdW5jdGlvbiBIYW5kbGVyKG9uRnVsZmlsbGVkLCBvblJlamVjdGVkLCBwcm9taXNlKSB7XG4gICAgdGhpcy5vbkZ1bGZpbGxlZCA9IHR5cGVvZiBvbkZ1bGZpbGxlZCA9PT0gJ2Z1bmN0aW9uJyA/IG9uRnVsZmlsbGVkIDogbnVsbDtcbiAgICB0aGlzLm9uUmVqZWN0ZWQgPSB0eXBlb2Ygb25SZWplY3RlZCA9PT0gJ2Z1bmN0aW9uJyA/IG9uUmVqZWN0ZWQgOiBudWxsO1xuICAgIHRoaXMucHJvbWlzZSA9IHByb21pc2U7XG4gIH1cblxuICAvKipcbiAgICogVGFrZSBhIHBvdGVudGlhbGx5IG1pc2JlaGF2aW5nIHJlc29sdmVyIGZ1bmN0aW9uIGFuZCBtYWtlIHN1cmVcbiAgICogb25GdWxmaWxsZWQgYW5kIG9uUmVqZWN0ZWQgYXJlIG9ubHkgY2FsbGVkIG9uY2UuXG4gICAqXG4gICAqIE1ha2VzIG5vIGd1YXJhbnRlZXMgYWJvdXQgYXN5bmNocm9ueS5cbiAgICovXG4gIGZ1bmN0aW9uIGRvUmVzb2x2ZShmbiwgc2VsZikge1xuICAgIHZhciBkb25lID0gZmFsc2U7XG4gICAgdHJ5IHtcbiAgICAgIGZuKGZ1bmN0aW9uICh2YWx1ZSkge1xuICAgICAgICBpZiAoZG9uZSkgcmV0dXJuO1xuICAgICAgICBkb25lID0gdHJ1ZTtcbiAgICAgICAgcmVzb2x2ZShzZWxmLCB2YWx1ZSk7XG4gICAgICB9LCBmdW5jdGlvbiAocmVhc29uKSB7XG4gICAgICAgIGlmIChkb25lKSByZXR1cm47XG4gICAgICAgIGRvbmUgPSB0cnVlO1xuICAgICAgICByZWplY3Qoc2VsZiwgcmVhc29uKTtcbiAgICAgIH0pO1xuICAgIH0gY2F0Y2ggKGV4KSB7XG4gICAgICBpZiAoZG9uZSkgcmV0dXJuO1xuICAgICAgZG9uZSA9IHRydWU7XG4gICAgICByZWplY3Qoc2VsZiwgZXgpO1xuICAgIH1cbiAgfVxuXG4gIFByb21pc2UucHJvdG90eXBlWydjYXRjaCddID0gZnVuY3Rpb24gKG9uUmVqZWN0ZWQpIHtcbiAgICByZXR1cm4gdGhpcy50aGVuKG51bGwsIG9uUmVqZWN0ZWQpO1xuICB9O1xuXG4gIFByb21pc2UucHJvdG90eXBlLnRoZW4gPSBmdW5jdGlvbiAob25GdWxmaWxsZWQsIG9uUmVqZWN0ZWQpIHtcbiAgICB2YXIgcHJvbSA9IG5ldyAodGhpcy5jb25zdHJ1Y3Rvcikobm9vcCk7XG5cbiAgICBoYW5kbGUodGhpcywgbmV3IEhhbmRsZXIob25GdWxmaWxsZWQsIG9uUmVqZWN0ZWQsIHByb20pKTtcbiAgICByZXR1cm4gcHJvbTtcbiAgfTtcblxuICBQcm9taXNlLmFsbCA9IGZ1bmN0aW9uIChhcnIpIHtcbiAgICB2YXIgYXJncyA9IEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFycik7XG5cbiAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgaWYgKGFyZ3MubGVuZ3RoID09PSAwKSByZXR1cm4gcmVzb2x2ZShbXSk7XG4gICAgICB2YXIgcmVtYWluaW5nID0gYXJncy5sZW5ndGg7XG5cbiAgICAgIGZ1bmN0aW9uIHJlcyhpLCB2YWwpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICBpZiAodmFsICYmICh0eXBlb2YgdmFsID09PSAnb2JqZWN0JyB8fCB0eXBlb2YgdmFsID09PSAnZnVuY3Rpb24nKSkge1xuICAgICAgICAgICAgdmFyIHRoZW4gPSB2YWwudGhlbjtcbiAgICAgICAgICAgIGlmICh0eXBlb2YgdGhlbiA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgICB0aGVuLmNhbGwodmFsLCBmdW5jdGlvbiAodmFsKSB7XG4gICAgICAgICAgICAgICAgcmVzKGksIHZhbCk7XG4gICAgICAgICAgICAgIH0sIHJlamVjdCk7XG4gICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgICAgYXJnc1tpXSA9IHZhbDtcbiAgICAgICAgICBpZiAoLS1yZW1haW5pbmcgPT09IDApIHtcbiAgICAgICAgICAgIHJlc29sdmUoYXJncyk7XG4gICAgICAgICAgfVxuICAgICAgICB9IGNhdGNoIChleCkge1xuICAgICAgICAgIHJlamVjdChleCk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBhcmdzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIHJlcyhpLCBhcmdzW2ldKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfTtcblxuICBQcm9taXNlLnJlc29sdmUgPSBmdW5jdGlvbiAodmFsdWUpIHtcbiAgICBpZiAodmFsdWUgJiYgdHlwZW9mIHZhbHVlID09PSAnb2JqZWN0JyAmJiB2YWx1ZS5jb25zdHJ1Y3RvciA9PT0gUHJvbWlzZSkge1xuICAgICAgcmV0dXJuIHZhbHVlO1xuICAgIH1cblxuICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSkge1xuICAgICAgcmVzb2x2ZSh2YWx1ZSk7XG4gICAgfSk7XG4gIH07XG5cbiAgUHJvbWlzZS5yZWplY3QgPSBmdW5jdGlvbiAodmFsdWUpIHtcbiAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgcmVqZWN0KHZhbHVlKTtcbiAgICB9KTtcbiAgfTtcblxuICBQcm9taXNlLnJhY2UgPSBmdW5jdGlvbiAodmFsdWVzKSB7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgIGZvciAodmFyIGkgPSAwLCBsZW4gPSB2YWx1ZXMubGVuZ3RoOyBpIDwgbGVuOyBpKyspIHtcbiAgICAgICAgdmFsdWVzW2ldLnRoZW4ocmVzb2x2ZSwgcmVqZWN0KTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfTtcblxuICAvLyBVc2UgcG9seWZpbGwgZm9yIHNldEltbWVkaWF0ZSBmb3IgcGVyZm9ybWFuY2UgZ2FpbnNcbiAgUHJvbWlzZS5faW1tZWRpYXRlRm4gPSAodHlwZW9mIHNldEltbWVkaWF0ZSA9PT0gJ2Z1bmN0aW9uJyAmJiBmdW5jdGlvbiAoZm4pIHsgc2V0SW1tZWRpYXRlKGZuKTsgfSkgfHxcbiAgICBmdW5jdGlvbiAoZm4pIHtcbiAgICAgIHNldFRpbWVvdXRGdW5jKGZuLCAwKTtcbiAgICB9O1xuXG4gIFByb21pc2UuX3VuaGFuZGxlZFJlamVjdGlvbkZuID0gZnVuY3Rpb24gX3VuaGFuZGxlZFJlamVjdGlvbkZuKGVycikge1xuICAgIGlmICh0eXBlb2YgY29uc29sZSAhPT0gJ3VuZGVmaW5lZCcgJiYgY29uc29sZSkge1xuICAgICAgY29uc29sZS53YXJuKCdQb3NzaWJsZSBVbmhhbmRsZWQgUHJvbWlzZSBSZWplY3Rpb246JywgZXJyKTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1jb25zb2xlXG4gICAgfVxuICB9O1xuXG4gIC8qKlxuICAgKiBTZXQgdGhlIGltbWVkaWF0ZSBmdW5jdGlvbiB0byBleGVjdXRlIGNhbGxiYWNrc1xuICAgKiBAcGFyYW0gZm4ge2Z1bmN0aW9ufSBGdW5jdGlvbiB0byBleGVjdXRlXG4gICAqIEBkZXByZWNhdGVkXG4gICAqL1xuICBQcm9taXNlLl9zZXRJbW1lZGlhdGVGbiA9IGZ1bmN0aW9uIF9zZXRJbW1lZGlhdGVGbihmbikge1xuICAgIFByb21pc2UuX2ltbWVkaWF0ZUZuID0gZm47XG4gIH07XG5cbiAgLyoqXG4gICAqIENoYW5nZSB0aGUgZnVuY3Rpb24gdG8gZXhlY3V0ZSBvbiB1bmhhbmRsZWQgcmVqZWN0aW9uXG4gICAqIEBwYXJhbSB7ZnVuY3Rpb259IGZuIEZ1bmN0aW9uIHRvIGV4ZWN1dGUgb24gdW5oYW5kbGVkIHJlamVjdGlvblxuICAgKiBAZGVwcmVjYXRlZFxuICAgKi9cbiAgUHJvbWlzZS5fc2V0VW5oYW5kbGVkUmVqZWN0aW9uRm4gPSBmdW5jdGlvbiBfc2V0VW5oYW5kbGVkUmVqZWN0aW9uRm4oZm4pIHtcbiAgICBQcm9taXNlLl91bmhhbmRsZWRSZWplY3Rpb25GbiA9IGZuO1xuICB9O1xuXG4gIGlmICghd2luZG93LlByb21pc2UpIHtcbiAgICB3aW5kb3cuUHJvbWlzZSA9IFByb21pc2U7XG4gIH1cbn0pKHRoaXMpO1xuIiwiLypcbkNvcHlyaWdodCAoYykgMjAxMiBCYXJuZXNhbmRub2JsZS5jb20sIGxsYywgRG9uYXZvbiBXZXN0LCBhbmQgRG9tZW5pYyBEZW5pY29sYVxuXG5QZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmdcbmEgY29weSBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZVxuXCJTb2Z0d2FyZVwiKSwgdG8gZGVhbCBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nXG53aXRob3V0IGxpbWl0YXRpb24gdGhlIHJpZ2h0cyB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsXG5kaXN0cmlidXRlLCBzdWJsaWNlbnNlLCBhbmQvb3Igc2VsbCBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG9cbnBlcm1pdCBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0b1xudGhlIGZvbGxvd2luZyBjb25kaXRpb25zOlxuXG5UaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZVxuaW5jbHVkZWQgaW4gYWxsIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuXG5cblRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCBcIkFTIElTXCIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsXG5FWFBSRVNTIE9SIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0Zcbk1FUkNIQU5UQUJJTElUWSwgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EXG5OT05JTkZSSU5HRU1FTlQuIElOIE5PIEVWRU5UIFNIQUxMIFRIRSBBVVRIT1JTIE9SIENPUFlSSUdIVCBIT0xERVJTIEJFXG5MSUFCTEUgRk9SIEFOWSBDTEFJTSwgREFNQUdFUyBPUiBPVEhFUiBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OXG5PRiBDT05UUkFDVCwgVE9SVCBPUiBPVEhFUldJU0UsIEFSSVNJTkcgRlJPTSwgT1VUIE9GIE9SIElOIENPTk5FQ1RJT05cbldJVEggVEhFIFNPRlRXQVJFIE9SIFRIRSBVU0UgT1IgT1RIRVIgREVBTElOR1MgSU4gVEhFIFNPRlRXQVJFLlxuXG4qL1xuKGZ1bmN0aW9uIChnbG9iYWwsIHVuZGVmaW5lZCkge1xuICAgIFwidXNlIHN0cmljdFwiO1xuXG4gICAgaWYgKGdsb2JhbC5zZXRJbW1lZGlhdGUpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHZhciBuZXh0SGFuZGxlID0gMTsgLy8gU3BlYyBzYXlzIGdyZWF0ZXIgdGhhbiB6ZXJvXG4gICAgdmFyIHRhc2tzQnlIYW5kbGUgPSB7fTtcbiAgICB2YXIgY3VycmVudGx5UnVubmluZ0FUYXNrID0gZmFsc2U7XG4gICAgdmFyIGRvYyA9IGdsb2JhbC5kb2N1bWVudDtcbiAgICB2YXIgc2V0SW1tZWRpYXRlO1xuXG4gICAgZnVuY3Rpb24gYWRkRnJvbVNldEltbWVkaWF0ZUFyZ3VtZW50cyhhcmdzKSB7XG4gICAgICAgIHRhc2tzQnlIYW5kbGVbbmV4dEhhbmRsZV0gPSBwYXJ0aWFsbHlBcHBsaWVkLmFwcGx5KHVuZGVmaW5lZCwgYXJncyk7XG4gICAgICAgIHJldHVybiBuZXh0SGFuZGxlKys7XG4gICAgfVxuXG4gICAgLy8gVGhpcyBmdW5jdGlvbiBhY2NlcHRzIHRoZSBzYW1lIGFyZ3VtZW50cyBhcyBzZXRJbW1lZGlhdGUsIGJ1dFxuICAgIC8vIHJldHVybnMgYSBmdW5jdGlvbiB0aGF0IHJlcXVpcmVzIG5vIGFyZ3VtZW50cy5cbiAgICBmdW5jdGlvbiBwYXJ0aWFsbHlBcHBsaWVkKGhhbmRsZXIpIHtcbiAgICAgICAgdmFyIGFyZ3MgPSBbXS5zbGljZS5jYWxsKGFyZ3VtZW50cywgMSk7XG4gICAgICAgIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIGlmICh0eXBlb2YgaGFuZGxlciA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgICAgICAgICAgaGFuZGxlci5hcHBseSh1bmRlZmluZWQsIGFyZ3MpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAobmV3IEZ1bmN0aW9uKFwiXCIgKyBoYW5kbGVyKSkoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBydW5JZlByZXNlbnQoaGFuZGxlKSB7XG4gICAgICAgIC8vIEZyb20gdGhlIHNwZWM6IFwiV2FpdCB1bnRpbCBhbnkgaW52b2NhdGlvbnMgb2YgdGhpcyBhbGdvcml0aG0gc3RhcnRlZCBiZWZvcmUgdGhpcyBvbmUgaGF2ZSBjb21wbGV0ZWQuXCJcbiAgICAgICAgLy8gU28gaWYgd2UncmUgY3VycmVudGx5IHJ1bm5pbmcgYSB0YXNrLCB3ZSdsbCBuZWVkIHRvIGRlbGF5IHRoaXMgaW52b2NhdGlvbi5cbiAgICAgICAgaWYgKGN1cnJlbnRseVJ1bm5pbmdBVGFzaykge1xuICAgICAgICAgICAgLy8gRGVsYXkgYnkgZG9pbmcgYSBzZXRUaW1lb3V0LiBzZXRJbW1lZGlhdGUgd2FzIHRyaWVkIGluc3RlYWQsIGJ1dCBpbiBGaXJlZm94IDcgaXQgZ2VuZXJhdGVkIGFcbiAgICAgICAgICAgIC8vIFwidG9vIG11Y2ggcmVjdXJzaW9uXCIgZXJyb3IuXG4gICAgICAgICAgICBzZXRUaW1lb3V0KHBhcnRpYWxseUFwcGxpZWQocnVuSWZQcmVzZW50LCBoYW5kbGUpLCAwKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHZhciB0YXNrID0gdGFza3NCeUhhbmRsZVtoYW5kbGVdO1xuICAgICAgICAgICAgaWYgKHRhc2spIHtcbiAgICAgICAgICAgICAgICBjdXJyZW50bHlSdW5uaW5nQVRhc2sgPSB0cnVlO1xuICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgIHRhc2soKTtcbiAgICAgICAgICAgICAgICB9IGZpbmFsbHkge1xuICAgICAgICAgICAgICAgICAgICBjbGVhckltbWVkaWF0ZShoYW5kbGUpO1xuICAgICAgICAgICAgICAgICAgICBjdXJyZW50bHlSdW5uaW5nQVRhc2sgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBmdW5jdGlvbiBjbGVhckltbWVkaWF0ZShoYW5kbGUpIHtcbiAgICAgICAgZGVsZXRlIHRhc2tzQnlIYW5kbGVbaGFuZGxlXTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBpbnN0YWxsTmV4dFRpY2tJbXBsZW1lbnRhdGlvbigpIHtcbiAgICAgICAgc2V0SW1tZWRpYXRlID0gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICB2YXIgaGFuZGxlID0gYWRkRnJvbVNldEltbWVkaWF0ZUFyZ3VtZW50cyhhcmd1bWVudHMpO1xuICAgICAgICAgICAgcHJvY2Vzcy5uZXh0VGljayhwYXJ0aWFsbHlBcHBsaWVkKHJ1bklmUHJlc2VudCwgaGFuZGxlKSk7XG4gICAgICAgICAgICByZXR1cm4gaGFuZGxlO1xuICAgICAgICB9O1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGNhblVzZVBvc3RNZXNzYWdlKCkge1xuICAgICAgICAvLyBUaGUgdGVzdCBhZ2FpbnN0IGBpbXBvcnRTY3JpcHRzYCBwcmV2ZW50cyB0aGlzIGltcGxlbWVudGF0aW9uIGZyb20gYmVpbmcgaW5zdGFsbGVkIGluc2lkZSBhIHdlYiB3b3JrZXIsXG4gICAgICAgIC8vIHdoZXJlIGBnbG9iYWwucG9zdE1lc3NhZ2VgIG1lYW5zIHNvbWV0aGluZyBjb21wbGV0ZWx5IGRpZmZlcmVudCBhbmQgY2FuJ3QgYmUgdXNlZCBmb3IgdGhpcyBwdXJwb3NlLlxuICAgICAgICBpZiAoZ2xvYmFsLnBvc3RNZXNzYWdlICYmICFnbG9iYWwuaW1wb3J0U2NyaXB0cykge1xuICAgICAgICAgICAgdmFyIHBvc3RNZXNzYWdlSXNBc3luY2hyb25vdXMgPSB0cnVlO1xuICAgICAgICAgICAgdmFyIG9sZE9uTWVzc2FnZSA9IGdsb2JhbC5vbm1lc3NhZ2U7XG4gICAgICAgICAgICBnbG9iYWwub25tZXNzYWdlID0gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgcG9zdE1lc3NhZ2VJc0FzeW5jaHJvbm91cyA9IGZhbHNlO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIGdsb2JhbC5wb3N0TWVzc2FnZShcIlwiLCBcIipcIik7XG4gICAgICAgICAgICBnbG9iYWwub25tZXNzYWdlID0gb2xkT25NZXNzYWdlO1xuICAgICAgICAgICAgcmV0dXJuIHBvc3RNZXNzYWdlSXNBc3luY2hyb25vdXM7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBmdW5jdGlvbiBpbnN0YWxsUG9zdE1lc3NhZ2VJbXBsZW1lbnRhdGlvbigpIHtcbiAgICAgICAgLy8gSW5zdGFsbHMgYW4gZXZlbnQgaGFuZGxlciBvbiBgZ2xvYmFsYCBmb3IgdGhlIGBtZXNzYWdlYCBldmVudDogc2VlXG4gICAgICAgIC8vICogaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4vRE9NL3dpbmRvdy5wb3N0TWVzc2FnZVxuICAgICAgICAvLyAqIGh0dHA6Ly93d3cud2hhdHdnLm9yZy9zcGVjcy93ZWItYXBwcy9jdXJyZW50LXdvcmsvbXVsdGlwYWdlL2NvbW1zLmh0bWwjY3Jvc3NEb2N1bWVudE1lc3NhZ2VzXG5cbiAgICAgICAgdmFyIG1lc3NhZ2VQcmVmaXggPSBcInNldEltbWVkaWF0ZSRcIiArIE1hdGgucmFuZG9tKCkgKyBcIiRcIjtcbiAgICAgICAgdmFyIG9uR2xvYmFsTWVzc2FnZSA9IGZ1bmN0aW9uKGV2ZW50KSB7XG4gICAgICAgICAgICBpZiAoZXZlbnQuc291cmNlID09PSBnbG9iYWwgJiZcbiAgICAgICAgICAgICAgICB0eXBlb2YgZXZlbnQuZGF0YSA9PT0gXCJzdHJpbmdcIiAmJlxuICAgICAgICAgICAgICAgIGV2ZW50LmRhdGEuaW5kZXhPZihtZXNzYWdlUHJlZml4KSA9PT0gMCkge1xuICAgICAgICAgICAgICAgIHJ1bklmUHJlc2VudCgrZXZlbnQuZGF0YS5zbGljZShtZXNzYWdlUHJlZml4Lmxlbmd0aCkpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuXG4gICAgICAgIGlmIChnbG9iYWwuYWRkRXZlbnRMaXN0ZW5lcikge1xuICAgICAgICAgICAgZ2xvYmFsLmFkZEV2ZW50TGlzdGVuZXIoXCJtZXNzYWdlXCIsIG9uR2xvYmFsTWVzc2FnZSwgZmFsc2UpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgZ2xvYmFsLmF0dGFjaEV2ZW50KFwib25tZXNzYWdlXCIsIG9uR2xvYmFsTWVzc2FnZSk7XG4gICAgICAgIH1cblxuICAgICAgICBzZXRJbW1lZGlhdGUgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHZhciBoYW5kbGUgPSBhZGRGcm9tU2V0SW1tZWRpYXRlQXJndW1lbnRzKGFyZ3VtZW50cyk7XG4gICAgICAgICAgICBnbG9iYWwucG9zdE1lc3NhZ2UobWVzc2FnZVByZWZpeCArIGhhbmRsZSwgXCIqXCIpO1xuICAgICAgICAgICAgcmV0dXJuIGhhbmRsZTtcbiAgICAgICAgfTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBpbnN0YWxsTWVzc2FnZUNoYW5uZWxJbXBsZW1lbnRhdGlvbigpIHtcbiAgICAgICAgdmFyIGNoYW5uZWwgPSBuZXcgTWVzc2FnZUNoYW5uZWwoKTtcbiAgICAgICAgY2hhbm5lbC5wb3J0MS5vbm1lc3NhZ2UgPSBmdW5jdGlvbihldmVudCkge1xuICAgICAgICAgICAgdmFyIGhhbmRsZSA9IGV2ZW50LmRhdGE7XG4gICAgICAgICAgICBydW5JZlByZXNlbnQoaGFuZGxlKTtcbiAgICAgICAgfTtcblxuICAgICAgICBzZXRJbW1lZGlhdGUgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHZhciBoYW5kbGUgPSBhZGRGcm9tU2V0SW1tZWRpYXRlQXJndW1lbnRzKGFyZ3VtZW50cyk7XG4gICAgICAgICAgICBjaGFubmVsLnBvcnQyLnBvc3RNZXNzYWdlKGhhbmRsZSk7XG4gICAgICAgICAgICByZXR1cm4gaGFuZGxlO1xuICAgICAgICB9O1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGluc3RhbGxSZWFkeVN0YXRlQ2hhbmdlSW1wbGVtZW50YXRpb24oKSB7XG4gICAgICAgIHZhciBodG1sID0gZG9jLmRvY3VtZW50RWxlbWVudDtcbiAgICAgICAgc2V0SW1tZWRpYXRlID0gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICB2YXIgaGFuZGxlID0gYWRkRnJvbVNldEltbWVkaWF0ZUFyZ3VtZW50cyhhcmd1bWVudHMpO1xuICAgICAgICAgICAgLy8gQ3JlYXRlIGEgPHNjcmlwdD4gZWxlbWVudDsgaXRzIHJlYWR5c3RhdGVjaGFuZ2UgZXZlbnQgd2lsbCBiZSBmaXJlZCBhc3luY2hyb25vdXNseSBvbmNlIGl0IGlzIGluc2VydGVkXG4gICAgICAgICAgICAvLyBpbnRvIHRoZSBkb2N1bWVudC4gRG8gc28sIHRodXMgcXVldWluZyB1cCB0aGUgdGFzay4gUmVtZW1iZXIgdG8gY2xlYW4gdXAgb25jZSBpdCdzIGJlZW4gY2FsbGVkLlxuICAgICAgICAgICAgdmFyIHNjcmlwdCA9IGRvYy5jcmVhdGVFbGVtZW50KFwic2NyaXB0XCIpO1xuICAgICAgICAgICAgc2NyaXB0Lm9ucmVhZHlzdGF0ZWNoYW5nZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICBydW5JZlByZXNlbnQoaGFuZGxlKTtcbiAgICAgICAgICAgICAgICBzY3JpcHQub25yZWFkeXN0YXRlY2hhbmdlID0gbnVsbDtcbiAgICAgICAgICAgICAgICBodG1sLnJlbW92ZUNoaWxkKHNjcmlwdCk7XG4gICAgICAgICAgICAgICAgc2NyaXB0ID0gbnVsbDtcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICBodG1sLmFwcGVuZENoaWxkKHNjcmlwdCk7XG4gICAgICAgICAgICByZXR1cm4gaGFuZGxlO1xuICAgICAgICB9O1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGluc3RhbGxTZXRUaW1lb3V0SW1wbGVtZW50YXRpb24oKSB7XG4gICAgICAgIHNldEltbWVkaWF0ZSA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgdmFyIGhhbmRsZSA9IGFkZEZyb21TZXRJbW1lZGlhdGVBcmd1bWVudHMoYXJndW1lbnRzKTtcbiAgICAgICAgICAgIHNldFRpbWVvdXQocGFydGlhbGx5QXBwbGllZChydW5JZlByZXNlbnQsIGhhbmRsZSksIDApO1xuICAgICAgICAgICAgcmV0dXJuIGhhbmRsZTtcbiAgICAgICAgfTtcbiAgICB9XG5cbiAgICAvLyBJZiBzdXBwb3J0ZWQsIHdlIHNob3VsZCBhdHRhY2ggdG8gdGhlIHByb3RvdHlwZSBvZiBnbG9iYWwsIHNpbmNlIHRoYXQgaXMgd2hlcmUgc2V0VGltZW91dCBldCBhbC4gbGl2ZS5cbiAgICB2YXIgYXR0YWNoVG8gPSBPYmplY3QuZ2V0UHJvdG90eXBlT2YgJiYgT2JqZWN0LmdldFByb3RvdHlwZU9mKGdsb2JhbCk7XG4gICAgYXR0YWNoVG8gPSBhdHRhY2hUbyAmJiBhdHRhY2hUby5zZXRUaW1lb3V0ID8gYXR0YWNoVG8gOiBnbG9iYWw7XG5cbiAgICAvLyBEb24ndCBnZXQgZm9vbGVkIGJ5IGUuZy4gYnJvd3NlcmlmeSBlbnZpcm9ubWVudHMuXG4gICAgaWYgKHt9LnRvU3RyaW5nLmNhbGwoZ2xvYmFsLnByb2Nlc3MpID09PSBcIltvYmplY3QgcHJvY2Vzc11cIikge1xuICAgICAgICAvLyBGb3IgTm9kZS5qcyBiZWZvcmUgMC45XG4gICAgICAgIGluc3RhbGxOZXh0VGlja0ltcGxlbWVudGF0aW9uKCk7XG5cbiAgICB9IGVsc2UgaWYgKGNhblVzZVBvc3RNZXNzYWdlKCkpIHtcbiAgICAgICAgLy8gRm9yIG5vbi1JRTEwIG1vZGVybiBicm93c2Vyc1xuICAgICAgICBpbnN0YWxsUG9zdE1lc3NhZ2VJbXBsZW1lbnRhdGlvbigpO1xuXG4gICAgfSBlbHNlIGlmIChnbG9iYWwuTWVzc2FnZUNoYW5uZWwpIHtcbiAgICAgICAgLy8gRm9yIHdlYiB3b3JrZXJzLCB3aGVyZSBzdXBwb3J0ZWRcbiAgICAgICAgaW5zdGFsbE1lc3NhZ2VDaGFubmVsSW1wbGVtZW50YXRpb24oKTtcblxuICAgIH0gZWxzZSBpZiAoZG9jICYmIFwib25yZWFkeXN0YXRlY2hhbmdlXCIgaW4gZG9jLmNyZWF0ZUVsZW1lbnQoXCJzY3JpcHRcIikpIHtcbiAgICAgICAgLy8gRm9yIElFIDbigJM4XG4gICAgICAgIGluc3RhbGxSZWFkeVN0YXRlQ2hhbmdlSW1wbGVtZW50YXRpb24oKTtcblxuICAgIH0gZWxzZSB7XG4gICAgICAgIC8vIEZvciBvbGRlciBicm93c2Vyc1xuICAgICAgICBpbnN0YWxsU2V0VGltZW91dEltcGxlbWVudGF0aW9uKCk7XG4gICAgfVxuXG4gICAgYXR0YWNoVG8uc2V0SW1tZWRpYXRlID0gc2V0SW1tZWRpYXRlO1xuICAgIGF0dGFjaFRvLmNsZWFySW1tZWRpYXRlID0gY2xlYXJJbW1lZGlhdGU7XG59KHNlbGYpKTtcbiIsIihmdW5jdGlvbigpIHtcbiAgICBmdW5jdGlvbiBWaWV3cG9ydCgpIHtcblxuICAgICAgICB0aGlzLlBSRV9JT1M3X1ZJRVdQT1JUID0gXCJpbml0aWFsLXNjYWxlPTEsIG1heGltdW0tc2NhbGU9MSwgdXNlci1zY2FsYWJsZT1ub1wiO1xuICAgICAgICB0aGlzLklPUzdfVklFV1BPUlQgPSBcImluaXRpYWwtc2NhbGU9MSwgbWF4aW11bS1zY2FsZT0xLCB1c2VyLXNjYWxhYmxlPW5vXCI7XG4gICAgICAgIHRoaXMuREVGQVVMVF9WSUVXUE9SVCA9IFwiaW5pdGlhbC1zY2FsZT0xLCBtYXhpbXVtLXNjYWxlPTEsIHVzZXItc2NhbGFibGU9bm9cIjtcblxuICAgICAgICB0aGlzLmVuc3VyZVZpZXdwb3J0RWxlbWVudCgpO1xuICAgICAgICB0aGlzLnBsYXRmb3JtID0ge307XG4gICAgICAgIHRoaXMucGxhdGZvcm0ubmFtZSA9IHRoaXMuZ2V0UGxhdGZvcm1OYW1lKCk7XG4gICAgICAgIHRoaXMucGxhdGZvcm0udmVyc2lvbiA9IHRoaXMuZ2V0UGxhdGZvcm1WZXJzaW9uKCk7XG5cbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfTtcblxuICAgIFZpZXdwb3J0LnByb3RvdHlwZS5lbnN1cmVWaWV3cG9ydEVsZW1lbnQgPSBmdW5jdGlvbigpe1xuICAgICAgICB0aGlzLnZpZXdwb3J0RWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ21ldGFbbmFtZT12aWV3cG9ydF0nKTtcbiAgICAgICAgaWYoIXRoaXMudmlld3BvcnRFbGVtZW50KXtcbiAgICAgICAgICAgIHRoaXMudmlld3BvcnRFbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbWV0YScpO1xuICAgICAgICAgICAgdGhpcy52aWV3cG9ydEVsZW1lbnQubmFtZSA9IFwidmlld3BvcnRcIjtcbiAgICAgICAgICAgIGRvY3VtZW50LmhlYWQuYXBwZW5kQ2hpbGQodGhpcy52aWV3cG9ydEVsZW1lbnQpO1xuICAgICAgICB9XG4gICAgfSxcblxuICAgIFZpZXdwb3J0LnByb3RvdHlwZS5zZXR1cCA9IGZ1bmN0aW9uKCkge1xuICAgICAgICBpZiAoIXRoaXMudmlld3BvcnRFbGVtZW50KSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICBpZiAodGhpcy52aWV3cG9ydEVsZW1lbnQuZ2V0QXR0cmlidXRlKCdkYXRhLW5vLWFkanVzdCcpID09IFwidHJ1ZVwiKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoIXRoaXMudmlld3BvcnRFbGVtZW50LmdldEF0dHJpYnV0ZSgnY29udGVudCcpKSB7XG4gICAgICAgICAgICBpZiAodGhpcy5wbGF0Zm9ybS5uYW1lID09ICdpb3MnKSB7XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMucGxhdGZvcm0udmVyc2lvbiA+PSA3ICYmIGlzV2ViVmlldygpKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMudmlld3BvcnRFbGVtZW50LnNldEF0dHJpYnV0ZSgnY29udGVudCcsIHRoaXMuSU9TN19WSUVXUE9SVCk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy52aWV3cG9ydEVsZW1lbnQuc2V0QXR0cmlidXRlKCdjb250ZW50JywgdGhpcy5QUkVfSU9TN19WSUVXUE9SVCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICB0aGlzLnZpZXdwb3J0RWxlbWVudC5zZXRBdHRyaWJ1dGUoJ2NvbnRlbnQnLCB0aGlzLkRFRkFVTFRfVklFV1BPUlQpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgZnVuY3Rpb24gaXNXZWJWaWV3KCkge1xuICAgICAgICAgICAgcmV0dXJuICEhKHdpbmRvdy5jb3Jkb3ZhIHx8IHdpbmRvdy5waG9uZWdhcCB8fCB3aW5kb3cuUGhvbmVHYXApO1xuICAgICAgICB9XG4gICAgfTtcblxuICAgIFZpZXdwb3J0LnByb3RvdHlwZS5nZXRQbGF0Zm9ybU5hbWUgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgaWYgKG5hdmlnYXRvci51c2VyQWdlbnQubWF0Y2goL0FuZHJvaWQvaSkpIHtcbiAgICAgICAgICAgIHJldHVybiBcImFuZHJvaWRcIjtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChuYXZpZ2F0b3IudXNlckFnZW50Lm1hdGNoKC9pUGhvbmV8aVBhZHxpUG9kL2kpKSB7XG4gICAgICAgICAgICByZXR1cm4gXCJpb3NcIjtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIHVua25vd25cbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9O1xuXG4gICAgVmlld3BvcnQucHJvdG90eXBlLmdldFBsYXRmb3JtVmVyc2lvbiA9IGZ1bmN0aW9uKCkge1xuICAgICAgICB2YXIgc3RhcnQgPSB3aW5kb3cubmF2aWdhdG9yLnVzZXJBZ2VudC5pbmRleE9mKCdPUyAnKTtcbiAgICAgICAgcmV0dXJuIHdpbmRvdy5OdW1iZXIod2luZG93Lm5hdmlnYXRvci51c2VyQWdlbnQuc3Vic3RyKHN0YXJ0ICsgMywgMykucmVwbGFjZSgnXycsICcuJykpO1xuICAgIH07XG5cbiAgICB3aW5kb3cuVmlld3BvcnQgPSBWaWV3cG9ydDtcbn0pKCk7XG4iLCIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBPcGVuIFRlY2hub2xvZ2llcywgSW5jLiAgQWxsIHJpZ2h0cyByZXNlcnZlZC4gIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAuICBTZWUgTGljZW5zZS50eHQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbi5cbi8vIEphdmFTY3JpcHQgRHluYW1pYyBDb250ZW50IHNoaW0gZm9yIFdpbmRvd3MgU3RvcmUgYXBwc1xuKGZ1bmN0aW9uICgpIHtcblxuICAgIGlmICh3aW5kb3cuTVNBcHAgJiYgTVNBcHAuZXhlY1Vuc2FmZUxvY2FsRnVuY3Rpb24pIHtcblxuICAgICAgICAvLyBTb21lIG5vZGVzIHdpbGwgaGF2ZSBhbiBcImF0dHJpYnV0ZXNcIiBwcm9wZXJ0eSB3aGljaCBzaGFkb3dzIHRoZSBOb2RlLnByb3RvdHlwZS5hdHRyaWJ1dGVzIHByb3BlcnR5XG4gICAgICAgIC8vICBhbmQgbWVhbnMgd2UgZG9uJ3QgYWN0dWFsbHkgc2VlIHRoZSBhdHRyaWJ1dGVzIG9mIHRoZSBOb2RlIChpbnRlcmVzdGluZ2x5IHRoZSBWUyBkZWJ1ZyBjb25zb2xlXG4gICAgICAgIC8vICBhcHBlYXJzIHRvIHN1ZmZlciBmcm9tIHRoZSBzYW1lIGlzc3VlKS5cbiAgICAgICAgLy9cbiAgICAgICAgdmFyIEVsZW1lbnRfc2V0QXR0cmlidXRlID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihFbGVtZW50LnByb3RvdHlwZSwgXCJzZXRBdHRyaWJ1dGVcIikudmFsdWU7XG4gICAgICAgIHZhciBFbGVtZW50X3JlbW92ZUF0dHJpYnV0ZSA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoRWxlbWVudC5wcm90b3R5cGUsIFwicmVtb3ZlQXR0cmlidXRlXCIpLnZhbHVlO1xuICAgICAgICB2YXIgSFRNTEVsZW1lbnRfaW5zZXJ0QWRqYWNlbnRIVE1MUHJvcGVydHlEZXNjcmlwdG9yID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihIVE1MRWxlbWVudC5wcm90b3R5cGUsIFwiaW5zZXJ0QWRqYWNlbnRIVE1MXCIpO1xuICAgICAgICB2YXIgTm9kZV9nZXRfYXR0cmlidXRlcyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoTm9kZS5wcm90b3R5cGUsIFwiYXR0cmlidXRlc1wiKS5nZXQ7XG4gICAgICAgIHZhciBOb2RlX2dldF9jaGlsZE5vZGVzID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihOb2RlLnByb3RvdHlwZSwgXCJjaGlsZE5vZGVzXCIpLmdldDtcbiAgICAgICAgdmFyIGRldGVjdGlvbkRpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG5cbiAgICAgICAgZnVuY3Rpb24gZ2V0QXR0cmlidXRlcyhlbGVtZW50KSB7XG4gICAgICAgICAgICByZXR1cm4gTm9kZV9nZXRfYXR0cmlidXRlcy5jYWxsKGVsZW1lbnQpO1xuICAgICAgICB9XG5cbiAgICAgICAgZnVuY3Rpb24gc2V0QXR0cmlidXRlKGVsZW1lbnQsIGF0dHJpYnV0ZSwgdmFsdWUpIHtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgRWxlbWVudF9zZXRBdHRyaWJ1dGUuY2FsbChlbGVtZW50LCBhdHRyaWJ1dGUsIHZhbHVlKTtcbiAgICAgICAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgICAgICAvLyBpZ25vcmVcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGZ1bmN0aW9uIHJlbW92ZUF0dHJpYnV0ZShlbGVtZW50LCBhdHRyaWJ1dGUpIHtcbiAgICAgICAgICAgIEVsZW1lbnRfcmVtb3ZlQXR0cmlidXRlLmNhbGwoZWxlbWVudCwgYXR0cmlidXRlKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGZ1bmN0aW9uIGNoaWxkTm9kZXMoZWxlbWVudCkge1xuICAgICAgICAgICAgcmV0dXJuIE5vZGVfZ2V0X2NoaWxkTm9kZXMuY2FsbChlbGVtZW50KTtcbiAgICAgICAgfVxuXG4gICAgICAgIGZ1bmN0aW9uIGVtcHR5KGVsZW1lbnQpIHtcbiAgICAgICAgICAgIHdoaWxlIChlbGVtZW50LmNoaWxkTm9kZXMubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgZWxlbWVudC5yZW1vdmVDaGlsZChlbGVtZW50Lmxhc3RDaGlsZCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBmdW5jdGlvbiBpbnNlcnRBZGphY2VudEhUTUwoZWxlbWVudCwgcG9zaXRpb24sIGh0bWwpIHtcbiAgICAgICAgICAgIEhUTUxFbGVtZW50X2luc2VydEFkamFjZW50SFRNTFByb3BlcnR5RGVzY3JpcHRvci52YWx1ZS5jYWxsKGVsZW1lbnQsIHBvc2l0aW9uLCBodG1sKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGZ1bmN0aW9uIGluVW5zYWZlTW9kZSgpIHtcbiAgICAgICAgICAgIHZhciBpc1Vuc2FmZSA9IHRydWU7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIGRldGVjdGlvbkRpdi5pbm5lckhUTUwgPSBcIjx0ZXN0Lz5cIjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhdGNoIChleCkge1xuICAgICAgICAgICAgICAgIGlzVW5zYWZlID0gZmFsc2U7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHJldHVybiBpc1Vuc2FmZTtcbiAgICAgICAgfVxuXG4gICAgICAgIGZ1bmN0aW9uIGNsZWFuc2UoaHRtbCwgdGFyZ2V0RWxlbWVudCkge1xuICAgICAgICAgICAgdmFyIGNsZWFuZXIgPSBkb2N1bWVudC5pbXBsZW1lbnRhdGlvbi5jcmVhdGVIVE1MRG9jdW1lbnQoXCJjbGVhbmVyXCIpO1xuICAgICAgICAgICAgZW1wdHkoY2xlYW5lci5kb2N1bWVudEVsZW1lbnQpO1xuICAgICAgICAgICAgTVNBcHAuZXhlY1Vuc2FmZUxvY2FsRnVuY3Rpb24oZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIGluc2VydEFkamFjZW50SFRNTChjbGVhbmVyLmRvY3VtZW50RWxlbWVudCwgXCJhZnRlcmJlZ2luXCIsIGh0bWwpO1xuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIHZhciBzY3JpcHRzID0gY2xlYW5lci5kb2N1bWVudEVsZW1lbnQucXVlcnlTZWxlY3RvckFsbChcInNjcmlwdFwiKTtcbiAgICAgICAgICAgIEFycmF5LnByb3RvdHlwZS5mb3JFYWNoLmNhbGwoc2NyaXB0cywgZnVuY3Rpb24gKHNjcmlwdCkge1xuICAgICAgICAgICAgICAgIHN3aXRjaCAoc2NyaXB0LnR5cGUudG9Mb3dlckNhc2UoKSkge1xuICAgICAgICAgICAgICAgICAgICBjYXNlIFwiXCI6XG4gICAgICAgICAgICAgICAgICAgICAgICBzY3JpcHQudHlwZSA9IFwidGV4dC9pbmVydFwiO1xuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgXCJ0ZXh0L2phdmFzY3JpcHRcIjpcbiAgICAgICAgICAgICAgICAgICAgY2FzZSBcInRleHQvZWNtYXNjcmlwdFwiOlxuICAgICAgICAgICAgICAgICAgICBjYXNlIFwidGV4dC94LWphdmFzY3JpcHRcIjpcbiAgICAgICAgICAgICAgICAgICAgY2FzZSBcInRleHQvanNjcmlwdFwiOlxuICAgICAgICAgICAgICAgICAgICBjYXNlIFwidGV4dC9saXZlc2NyaXB0XCI6XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgXCJ0ZXh0L2phdmFzY3JpcHQxLjFcIjpcbiAgICAgICAgICAgICAgICAgICAgY2FzZSBcInRleHQvamF2YXNjcmlwdDEuMlwiOlxuICAgICAgICAgICAgICAgICAgICBjYXNlIFwidGV4dC9qYXZhc2NyaXB0MS4zXCI6XG4gICAgICAgICAgICAgICAgICAgICAgICBzY3JpcHQudHlwZSA9IFwidGV4dC9pbmVydC1cIiArIHNjcmlwdC50eXBlLnNsaWNlKFwidGV4dC9cIi5sZW5ndGgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgXCJhcHBsaWNhdGlvbi9qYXZhc2NyaXB0XCI6XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgXCJhcHBsaWNhdGlvbi9lY21hc2NyaXB0XCI6XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgXCJhcHBsaWNhdGlvbi94LWphdmFzY3JpcHRcIjpcbiAgICAgICAgICAgICAgICAgICAgICAgIHNjcmlwdC50eXBlID0gXCJhcHBsaWNhdGlvbi9pbmVydC1cIiArIHNjcmlwdC50eXBlLnNsaWNlKFwiYXBwbGljYXRpb24vXCIubGVuZ3RoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgZnVuY3Rpb24gY2xlYW5zZUF0dHJpYnV0ZXMoZWxlbWVudCkge1xuICAgICAgICAgICAgICAgIHZhciBhdHRyaWJ1dGVzID0gZ2V0QXR0cmlidXRlcyhlbGVtZW50KTtcbiAgICAgICAgICAgICAgICBpZiAoYXR0cmlidXRlcyAmJiBhdHRyaWJ1dGVzLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgICAgICAvLyBiZWNhdXNlIHRoZSBhdHRyaWJ1dGVzIGNvbGxlY3Rpb24gaXMgbGl2ZSBpdCBpcyBzaW1wbGVyIHRvIHF1ZXVlIHVwIHRoZSByZW5hbWVzXG4gICAgICAgICAgICAgICAgICAgIHZhciBldmVudHM7XG4gICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwLCBsZW4gPSBhdHRyaWJ1dGVzLmxlbmd0aDsgaSA8IGxlbjsgaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgYXR0cmlidXRlID0gYXR0cmlidXRlc1tpXTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBuYW1lID0gYXR0cmlidXRlLm5hbWU7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoKG5hbWVbMF0gPT09IFwib1wiIHx8IG5hbWVbMF0gPT09IFwiT1wiKSAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIChuYW1lWzFdID09PSBcIm5cIiB8fCBuYW1lWzFdID09PSBcIk5cIikpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBldmVudHMgPSBldmVudHMgfHwgW107XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZXZlbnRzLnB1c2goeyBuYW1lOiBhdHRyaWJ1dGUubmFtZSwgdmFsdWU6IGF0dHJpYnV0ZS52YWx1ZSB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBpZiAoZXZlbnRzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMCwgbGVuID0gZXZlbnRzLmxlbmd0aDsgaSA8IGxlbjsgaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGF0dHJpYnV0ZSA9IGV2ZW50c1tpXTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZW1vdmVBdHRyaWJ1dGUoZWxlbWVudCwgYXR0cmlidXRlLm5hbWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNldEF0dHJpYnV0ZShlbGVtZW50LCBcIngtXCIgKyBhdHRyaWJ1dGUubmFtZSwgYXR0cmlidXRlLnZhbHVlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB2YXIgY2hpbGRyZW4gPSBjaGlsZE5vZGVzKGVsZW1lbnQpO1xuICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwLCBsZW4gPSBjaGlsZHJlbi5sZW5ndGg7IGkgPCBsZW47IGkrKykge1xuICAgICAgICAgICAgICAgICAgICBjbGVhbnNlQXR0cmlidXRlcyhjaGlsZHJlbltpXSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY2xlYW5zZUF0dHJpYnV0ZXMoY2xlYW5lci5kb2N1bWVudEVsZW1lbnQpO1xuXG4gICAgICAgICAgICB2YXIgY2xlYW5lZE5vZGVzID0gW107XG5cbiAgICAgICAgICAgIGlmICh0YXJnZXRFbGVtZW50LnRhZ05hbWUgPT09ICdIVE1MJykge1xuICAgICAgICAgICAgICAgIGNsZWFuZWROb2RlcyA9IEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGRvY3VtZW50LmFkb3B0Tm9kZShjbGVhbmVyLmRvY3VtZW50RWxlbWVudCkuY2hpbGROb2Rlcyk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGlmIChjbGVhbmVyLmhlYWQpIHtcbiAgICAgICAgICAgICAgICAgICAgY2xlYW5lZE5vZGVzID0gY2xlYW5lZE5vZGVzLmNvbmNhdChBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChkb2N1bWVudC5hZG9wdE5vZGUoY2xlYW5lci5oZWFkKS5jaGlsZE5vZGVzKSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChjbGVhbmVyLmJvZHkpIHtcbiAgICAgICAgICAgICAgICAgICAgY2xlYW5lZE5vZGVzID0gY2xlYW5lZE5vZGVzLmNvbmNhdChBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChkb2N1bWVudC5hZG9wdE5vZGUoY2xlYW5lci5ib2R5KS5jaGlsZE5vZGVzKSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICByZXR1cm4gY2xlYW5lZE5vZGVzO1xuICAgICAgICB9XG5cbiAgICAgICAgZnVuY3Rpb24gY2xlYW5zZVByb3BlcnR5U2V0dGVyKHByb3BlcnR5LCBzZXR0ZXIpIHtcbiAgICAgICAgICAgIHZhciBwcm9wZXJ0eURlc2NyaXB0b3IgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKEhUTUxFbGVtZW50LnByb3RvdHlwZSwgcHJvcGVydHkpO1xuICAgICAgICAgICAgdmFyIG9yaWdpbmFsU2V0dGVyID0gcHJvcGVydHlEZXNjcmlwdG9yLnNldDtcbiAgICAgICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShIVE1MRWxlbWVudC5wcm90b3R5cGUsIHByb3BlcnR5LCB7XG4gICAgICAgICAgICAgICAgZ2V0OiBwcm9wZXJ0eURlc2NyaXB0b3IuZ2V0LFxuICAgICAgICAgICAgICAgIHNldDogZnVuY3Rpb24gKHZhbHVlKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmKHdpbmRvdy5XaW5KUyAmJiB3aW5kb3cuV2luSlMuX2V4ZWNVbnNhZmUgJiYgaW5VbnNhZmVNb2RlKCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG9yaWdpbmFsU2V0dGVyLmNhbGwodGhpcywgdmFsdWUpO1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHRoYXQgPSB0aGlzO1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIG5vZGVzID0gY2xlYW5zZSh2YWx1ZSwgdGhhdCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBNU0FwcC5leGVjVW5zYWZlTG9jYWxGdW5jdGlvbihmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2V0dGVyKHByb3BlcnR5RGVzY3JpcHRvciwgdGhhdCwgbm9kZXMpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGVudW1lcmFibGU6IHByb3BlcnR5RGVzY3JpcHRvci5lbnVtZXJhYmxlLFxuICAgICAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogcHJvcGVydHlEZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIGNsZWFuc2VQcm9wZXJ0eVNldHRlcihcImlubmVySFRNTFwiLCBmdW5jdGlvbiAocHJvcGVydHlEZXNjcmlwdG9yLCB0YXJnZXQsIGVsZW1lbnRzKSB7XG4gICAgICAgICAgICBlbXB0eSh0YXJnZXQpO1xuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDAsIGxlbiA9IGVsZW1lbnRzLmxlbmd0aDsgaSA8IGxlbjsgaSsrKSB7XG4gICAgICAgICAgICAgICAgdGFyZ2V0LmFwcGVuZENoaWxkKGVsZW1lbnRzW2ldKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICAgIGNsZWFuc2VQcm9wZXJ0eVNldHRlcihcIm91dGVySFRNTFwiLCBmdW5jdGlvbiAocHJvcGVydHlEZXNjcmlwdG9yLCB0YXJnZXQsIGVsZW1lbnRzKSB7XG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMCwgbGVuID0gZWxlbWVudHMubGVuZ3RoOyBpIDwgbGVuOyBpKyspIHtcbiAgICAgICAgICAgICAgICB0YXJnZXQuaW5zZXJ0QWRqYWNlbnRFbGVtZW50KFwiYWZ0ZXJlbmRcIiwgZWxlbWVudHNbaV0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGFyZ2V0LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQodGFyZ2V0KTtcbiAgICAgICAgfSk7XG5cbiAgICB9XG5cbn0oKSk7IiwiLy8gRm9yIEB3ZWJjb21wb25lbnRzL2N1c3RvbS1lbGVtZW50c1xuaWYgKHdpbmRvdy5jdXN0b21FbGVtZW50cykgeyAvLyBldmVuIGlmIG5hdGl2ZSBDRTEgaW1wbCBleGlzdHMsIHVzZSBwb2x5ZmlsbFxuICAgIHdpbmRvdy5jdXN0b21FbGVtZW50cy5mb3JjZVBvbHlmaWxsID0gdHJ1ZTtcbn1cbiIsIihmdW5jdGlvbigpe1xuJ3VzZSBzdHJpY3QnO3ZhciBnPW5ldyBmdW5jdGlvbigpe307dmFyIGFhPW5ldyBTZXQoXCJhbm5vdGF0aW9uLXhtbCBjb2xvci1wcm9maWxlIGZvbnQtZmFjZSBmb250LWZhY2Utc3JjIGZvbnQtZmFjZS11cmkgZm9udC1mYWNlLWZvcm1hdCBmb250LWZhY2UtbmFtZSBtaXNzaW5nLWdseXBoXCIuc3BsaXQoXCIgXCIpKTtmdW5jdGlvbiBrKGIpe3ZhciBhPWFhLmhhcyhiKTtiPS9eW2Etel1bLjAtOV9hLXpdKi1bXFwtLjAtOV9hLXpdKiQvLnRlc3QoYik7cmV0dXJuIWEmJmJ9ZnVuY3Rpb24gbChiKXt2YXIgYT1iLmlzQ29ubmVjdGVkO2lmKHZvaWQgMCE9PWEpcmV0dXJuIGE7Zm9yKDtiJiYhKGIuX19DRV9pc0ltcG9ydERvY3VtZW50fHxiIGluc3RhbmNlb2YgRG9jdW1lbnQpOyliPWIucGFyZW50Tm9kZXx8KHdpbmRvdy5TaGFkb3dSb290JiZiIGluc3RhbmNlb2YgU2hhZG93Um9vdD9iLmhvc3Q6dm9pZCAwKTtyZXR1cm4hKCFifHwhKGIuX19DRV9pc0ltcG9ydERvY3VtZW50fHxiIGluc3RhbmNlb2YgRG9jdW1lbnQpKX1cbmZ1bmN0aW9uIG0oYixhKXtmb3IoO2EmJmEhPT1iJiYhYS5uZXh0U2libGluZzspYT1hLnBhcmVudE5vZGU7cmV0dXJuIGEmJmEhPT1iP2EubmV4dFNpYmxpbmc6bnVsbH1cbmZ1bmN0aW9uIG4oYixhLGUpe2U9ZT9lOm5ldyBTZXQ7Zm9yKHZhciBjPWI7Yzspe2lmKGMubm9kZVR5cGU9PT1Ob2RlLkVMRU1FTlRfTk9ERSl7dmFyIGQ9YzthKGQpO3ZhciBoPWQubG9jYWxOYW1lO2lmKFwibGlua1wiPT09aCYmXCJpbXBvcnRcIj09PWQuZ2V0QXR0cmlidXRlKFwicmVsXCIpKXtjPWQuaW1wb3J0O2lmKGMgaW5zdGFuY2VvZiBOb2RlJiYhZS5oYXMoYykpZm9yKGUuYWRkKGMpLGM9Yy5maXJzdENoaWxkO2M7Yz1jLm5leHRTaWJsaW5nKW4oYyxhLGUpO2M9bShiLGQpO2NvbnRpbnVlfWVsc2UgaWYoXCJ0ZW1wbGF0ZVwiPT09aCl7Yz1tKGIsZCk7Y29udGludWV9aWYoZD1kLl9fQ0Vfc2hhZG93Um9vdClmb3IoZD1kLmZpcnN0Q2hpbGQ7ZDtkPWQubmV4dFNpYmxpbmcpbihkLGEsZSl9Yz1jLmZpcnN0Q2hpbGQ/Yy5maXJzdENoaWxkOm0oYixjKX19ZnVuY3Rpb24gcShiLGEsZSl7YlthXT1lfTtmdW5jdGlvbiByKCl7dGhpcy5hPW5ldyBNYXA7dGhpcy5mPW5ldyBNYXA7dGhpcy5jPVtdO3RoaXMuYj0hMX1mdW5jdGlvbiBiYShiLGEsZSl7Yi5hLnNldChhLGUpO2IuZi5zZXQoZS5jb25zdHJ1Y3RvcixlKX1mdW5jdGlvbiB0KGIsYSl7Yi5iPSEwO2IuYy5wdXNoKGEpfWZ1bmN0aW9uIHYoYixhKXtiLmImJm4oYSxmdW5jdGlvbihhKXtyZXR1cm4gdyhiLGEpfSl9ZnVuY3Rpb24gdyhiLGEpe2lmKGIuYiYmIWEuX19DRV9wYXRjaGVkKXthLl9fQ0VfcGF0Y2hlZD0hMDtmb3IodmFyIGU9MDtlPGIuYy5sZW5ndGg7ZSsrKWIuY1tlXShhKX19ZnVuY3Rpb24geChiLGEpe3ZhciBlPVtdO24oYSxmdW5jdGlvbihiKXtyZXR1cm4gZS5wdXNoKGIpfSk7Zm9yKGE9MDthPGUubGVuZ3RoO2ErKyl7dmFyIGM9ZVthXTsxPT09Yy5fX0NFX3N0YXRlP2woYykmJmIuY29ubmVjdGVkQ2FsbGJhY2soYyk6eShiLGMpfX1cbmZ1bmN0aW9uIHooYixhKXt2YXIgZT1bXTtuKGEsZnVuY3Rpb24oYil7cmV0dXJuIGUucHVzaChiKX0pO2ZvcihhPTA7YTxlLmxlbmd0aDthKyspe3ZhciBjPWVbYV07MT09PWMuX19DRV9zdGF0ZSYmYi5kaXNjb25uZWN0ZWRDYWxsYmFjayhjKX19XG5mdW5jdGlvbiBBKGIsYSxlKXtlPWU/ZTpuZXcgU2V0O3ZhciBjPVtdO24oYSxmdW5jdGlvbihkKXtpZihcImxpbmtcIj09PWQubG9jYWxOYW1lJiZcImltcG9ydFwiPT09ZC5nZXRBdHRyaWJ1dGUoXCJyZWxcIikpe3ZhciBhPWQuaW1wb3J0O2EgaW5zdGFuY2VvZiBOb2RlJiZcImNvbXBsZXRlXCI9PT1hLnJlYWR5U3RhdGU/KGEuX19DRV9pc0ltcG9ydERvY3VtZW50PSEwLGEuX19DRV9oYXNSZWdpc3RyeT0hMCk6ZC5hZGRFdmVudExpc3RlbmVyKFwibG9hZFwiLGZ1bmN0aW9uKCl7dmFyIGE9ZC5pbXBvcnQ7YS5fX0NFX2RvY3VtZW50TG9hZEhhbmRsZWR8fChhLl9fQ0VfZG9jdW1lbnRMb2FkSGFuZGxlZD0hMCxhLl9fQ0VfaXNJbXBvcnREb2N1bWVudD0hMCxhLl9fQ0VfaGFzUmVnaXN0cnk9ITAsbmV3IFNldChlKSxlLmRlbGV0ZShhKSxBKGIsYSxlKSl9KX1lbHNlIGMucHVzaChkKX0sZSk7aWYoYi5iKWZvcihhPTA7YTxjLmxlbmd0aDthKyspdyhiLGNbYV0pO2ZvcihhPTA7YTxjLmxlbmd0aDthKyspeShiLFxuY1thXSl9XG5mdW5jdGlvbiB5KGIsYSl7aWYodm9pZCAwPT09YS5fX0NFX3N0YXRlKXt2YXIgZT1iLmEuZ2V0KGEubG9jYWxOYW1lKTtpZihlKXtlLmNvbnN0cnVjdGlvblN0YWNrLnB1c2goYSk7dmFyIGM9ZS5jb25zdHJ1Y3Rvcjt0cnl7dHJ5e2lmKG5ldyBjIT09YSl0aHJvdyBFcnJvcihcIlRoZSBjdXN0b20gZWxlbWVudCBjb25zdHJ1Y3RvciBkaWQgbm90IHByb2R1Y2UgdGhlIGVsZW1lbnQgYmVpbmcgdXBncmFkZWQuXCIpO31maW5hbGx5e2UuY29uc3RydWN0aW9uU3RhY2sucG9wKCl9fWNhdGNoKGYpe3Rocm93IGEuX19DRV9zdGF0ZT0yLGY7fWEuX19DRV9zdGF0ZT0xO2EuX19DRV9kZWZpbml0aW9uPWU7aWYoZS5hdHRyaWJ1dGVDaGFuZ2VkQ2FsbGJhY2spZm9yKGU9ZS5vYnNlcnZlZEF0dHJpYnV0ZXMsYz0wO2M8ZS5sZW5ndGg7YysrKXt2YXIgZD1lW2NdLGg9YS5nZXRBdHRyaWJ1dGUoZCk7bnVsbCE9PWgmJmIuYXR0cmlidXRlQ2hhbmdlZENhbGxiYWNrKGEsZCxudWxsLGgsbnVsbCl9bChhKSYmYi5jb25uZWN0ZWRDYWxsYmFjayhhKX19fVxuci5wcm90b3R5cGUuY29ubmVjdGVkQ2FsbGJhY2s9ZnVuY3Rpb24oYil7dmFyIGE9Yi5fX0NFX2RlZmluaXRpb247YS5jb25uZWN0ZWRDYWxsYmFjayYmYS5jb25uZWN0ZWRDYWxsYmFjay5jYWxsKGIpO2IuaT0hMH07ci5wcm90b3R5cGUuZGlzY29ubmVjdGVkQ2FsbGJhY2s9ZnVuY3Rpb24oYil7Yi5pfHx0aGlzLmNvbm5lY3RlZENhbGxiYWNrKGIpO3ZhciBhPWIuX19DRV9kZWZpbml0aW9uO2EuZGlzY29ubmVjdGVkQ2FsbGJhY2smJmEuZGlzY29ubmVjdGVkQ2FsbGJhY2suY2FsbChiKTtiLmk9dm9pZCAwfTtyLnByb3RvdHlwZS5hdHRyaWJ1dGVDaGFuZ2VkQ2FsbGJhY2s9ZnVuY3Rpb24oYixhLGUsYyxkKXt2YXIgaD1iLl9fQ0VfZGVmaW5pdGlvbjtoLmF0dHJpYnV0ZUNoYW5nZWRDYWxsYmFjayYmLTE8aC5vYnNlcnZlZEF0dHJpYnV0ZXMuaW5kZXhPZihhKSYmaC5hdHRyaWJ1dGVDaGFuZ2VkQ2FsbGJhY2suY2FsbChiLGEsZSxjLGQpfTtmdW5jdGlvbiBCKGIsYSl7dGhpcy5jPWI7dGhpcy5hPWE7dGhpcy5iPXZvaWQgMDtBKHRoaXMuYyx0aGlzLmEpO1wibG9hZGluZ1wiPT09dGhpcy5hLnJlYWR5U3RhdGUmJih0aGlzLmI9bmV3IE11dGF0aW9uT2JzZXJ2ZXIodGhpcy5mLmJpbmQodGhpcykpLHRoaXMuYi5vYnNlcnZlKHRoaXMuYSx7Y2hpbGRMaXN0OiEwLHN1YnRyZWU6ITB9KSl9ZnVuY3Rpb24gQyhiKXtiLmImJmIuYi5kaXNjb25uZWN0KCl9Qi5wcm90b3R5cGUuZj1mdW5jdGlvbihiKXt2YXIgYT10aGlzLmEucmVhZHlTdGF0ZTtcImludGVyYWN0aXZlXCIhPT1hJiZcImNvbXBsZXRlXCIhPT1hfHxDKHRoaXMpO2ZvcihhPTA7YTxiLmxlbmd0aDthKyspZm9yKHZhciBlPWJbYV0uYWRkZWROb2RlcyxjPTA7YzxlLmxlbmd0aDtjKyspQSh0aGlzLmMsZVtjXSl9O2Z1bmN0aW9uIGNhKCl7dmFyIGI9dGhpczt0aGlzLmI9dGhpcy5hPXZvaWQgMDt0aGlzLmM9bmV3IFByb21pc2UoZnVuY3Rpb24oYSl7Yi5iPWE7Yi5hJiZhKGIuYSl9KX1mdW5jdGlvbiBEKGIpe2lmKGIuYSl0aHJvdyBFcnJvcihcIkFscmVhZHkgcmVzb2x2ZWQuXCIpO2IuYT12b2lkIDA7Yi5iJiZiLmIodm9pZCAwKX07ZnVuY3Rpb24gRShiKXt0aGlzLmY9ITE7dGhpcy5hPWI7dGhpcy5oPW5ldyBNYXA7dGhpcy5nPWZ1bmN0aW9uKGIpe3JldHVybiBiKCl9O3RoaXMuYj0hMTt0aGlzLmM9W107dGhpcy5sPW5ldyBCKGIsZG9jdW1lbnQpfVxuRS5wcm90b3R5cGUubT1mdW5jdGlvbihiLGEpe3ZhciBlPXRoaXM7aWYoIShhIGluc3RhbmNlb2YgRnVuY3Rpb24pKXRocm93IG5ldyBUeXBlRXJyb3IoXCJDdXN0b20gZWxlbWVudCBjb25zdHJ1Y3RvcnMgbXVzdCBiZSBmdW5jdGlvbnMuXCIpO2lmKCFrKGIpKXRocm93IG5ldyBTeW50YXhFcnJvcihcIlRoZSBlbGVtZW50IG5hbWUgJ1wiK2IrXCInIGlzIG5vdCB2YWxpZC5cIik7aWYodGhpcy5hLmEuZ2V0KGIpKXRocm93IEVycm9yKFwiQSBjdXN0b20gZWxlbWVudCB3aXRoIG5hbWUgJ1wiK2IrXCInIGhhcyBhbHJlYWR5IGJlZW4gZGVmaW5lZC5cIik7aWYodGhpcy5mKXRocm93IEVycm9yKFwiQSBjdXN0b20gZWxlbWVudCBpcyBhbHJlYWR5IGJlaW5nIGRlZmluZWQuXCIpO3RoaXMuZj0hMDt2YXIgYyxkLGgsZix1O3RyeXt2YXIgcD1mdW5jdGlvbihiKXt2YXIgYT1QW2JdO2lmKHZvaWQgMCE9PWEmJiEoYSBpbnN0YW5jZW9mIEZ1bmN0aW9uKSl0aHJvdyBFcnJvcihcIlRoZSAnXCIrYitcIicgY2FsbGJhY2sgbXVzdCBiZSBhIGZ1bmN0aW9uLlwiKTtcbnJldHVybiBhfSxQPWEucHJvdG90eXBlO2lmKCEoUCBpbnN0YW5jZW9mIE9iamVjdCkpdGhyb3cgbmV3IFR5cGVFcnJvcihcIlRoZSBjdXN0b20gZWxlbWVudCBjb25zdHJ1Y3RvcidzIHByb3RvdHlwZSBpcyBub3QgYW4gb2JqZWN0LlwiKTtjPXAoXCJjb25uZWN0ZWRDYWxsYmFja1wiKTtkPXAoXCJkaXNjb25uZWN0ZWRDYWxsYmFja1wiKTtoPXAoXCJhZG9wdGVkQ2FsbGJhY2tcIik7Zj1wKFwiYXR0cmlidXRlQ2hhbmdlZENhbGxiYWNrXCIpO3U9YS5vYnNlcnZlZEF0dHJpYnV0ZXN8fFtdfWNhdGNoKHZhKXtyZXR1cm59ZmluYWxseXt0aGlzLmY9ITF9YmEodGhpcy5hLGIse2xvY2FsTmFtZTpiLGNvbnN0cnVjdG9yOmEsY29ubmVjdGVkQ2FsbGJhY2s6YyxkaXNjb25uZWN0ZWRDYWxsYmFjazpkLGFkb3B0ZWRDYWxsYmFjazpoLGF0dHJpYnV0ZUNoYW5nZWRDYWxsYmFjazpmLG9ic2VydmVkQXR0cmlidXRlczp1LGNvbnN0cnVjdGlvblN0YWNrOltdfSk7dGhpcy5jLnB1c2goYik7dGhpcy5ifHwodGhpcy5iPVxuITAsdGhpcy5nKGZ1bmN0aW9uKCl7aWYoITEhPT1lLmIpZm9yKGUuYj0hMSxBKGUuYSxkb2N1bWVudCk7MDxlLmMubGVuZ3RoOyl7dmFyIGI9ZS5jLnNoaWZ0KCk7KGI9ZS5oLmdldChiKSkmJkQoYil9fSkpfTtFLnByb3RvdHlwZS5nZXQ9ZnVuY3Rpb24oYil7aWYoYj10aGlzLmEuYS5nZXQoYikpcmV0dXJuIGIuY29uc3RydWN0b3J9O0UucHJvdG90eXBlLnM9ZnVuY3Rpb24oYil7aWYoIWsoYikpcmV0dXJuIFByb21pc2UucmVqZWN0KG5ldyBTeW50YXhFcnJvcihcIidcIitiK1wiJyBpcyBub3QgYSB2YWxpZCBjdXN0b20gZWxlbWVudCBuYW1lLlwiKSk7dmFyIGE9dGhpcy5oLmdldChiKTtpZihhKXJldHVybiBhLmM7YT1uZXcgY2E7dGhpcy5oLnNldChiLGEpO3RoaXMuYS5hLmdldChiKSYmLTE9PT10aGlzLmMuaW5kZXhPZihiKSYmRChhKTtyZXR1cm4gYS5jfTtFLnByb3RvdHlwZS5vPWZ1bmN0aW9uKGIpe0ModGhpcy5sKTt2YXIgYT10aGlzLmc7dGhpcy5nPWZ1bmN0aW9uKGUpe3JldHVybiBiKGZ1bmN0aW9uKCl7cmV0dXJuIGEoZSl9KX19O1xud2luZG93LkN1c3RvbUVsZW1lbnRSZWdpc3RyeT1FO0UucHJvdG90eXBlLmRlZmluZT1FLnByb3RvdHlwZS5tO0UucHJvdG90eXBlLmdldD1FLnByb3RvdHlwZS5nZXQ7RS5wcm90b3R5cGUud2hlbkRlZmluZWQ9RS5wcm90b3R5cGUucztFLnByb3RvdHlwZS5wb2x5ZmlsbFdyYXBGbHVzaENhbGxiYWNrPUUucHJvdG90eXBlLm87dmFyIEY9d2luZG93LkRvY3VtZW50LnByb3RvdHlwZS5jcmVhdGVFbGVtZW50LGRhPXdpbmRvdy5Eb2N1bWVudC5wcm90b3R5cGUuY3JlYXRlRWxlbWVudE5TLGVhPXdpbmRvdy5Eb2N1bWVudC5wcm90b3R5cGUuaW1wb3J0Tm9kZSxmYT13aW5kb3cuRG9jdW1lbnQucHJvdG90eXBlLnByZXBlbmQsZ2E9d2luZG93LkRvY3VtZW50LnByb3RvdHlwZS5hcHBlbmQsRz13aW5kb3cuTm9kZS5wcm90b3R5cGUuY2xvbmVOb2RlLEg9d2luZG93Lk5vZGUucHJvdG90eXBlLmFwcGVuZENoaWxkLEk9d2luZG93Lk5vZGUucHJvdG90eXBlLmluc2VydEJlZm9yZSxKPXdpbmRvdy5Ob2RlLnByb3RvdHlwZS5yZW1vdmVDaGlsZCxLPXdpbmRvdy5Ob2RlLnByb3RvdHlwZS5yZXBsYWNlQ2hpbGQsTD1PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHdpbmRvdy5Ob2RlLnByb3RvdHlwZSxcInRleHRDb250ZW50XCIpLE09d2luZG93LkVsZW1lbnQucHJvdG90eXBlLmF0dGFjaFNoYWRvdyxOPU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iod2luZG93LkVsZW1lbnQucHJvdG90eXBlLFxuXCJpbm5lckhUTUxcIiksTz13aW5kb3cuRWxlbWVudC5wcm90b3R5cGUuZ2V0QXR0cmlidXRlLFE9d2luZG93LkVsZW1lbnQucHJvdG90eXBlLnNldEF0dHJpYnV0ZSxSPXdpbmRvdy5FbGVtZW50LnByb3RvdHlwZS5yZW1vdmVBdHRyaWJ1dGUsUz13aW5kb3cuRWxlbWVudC5wcm90b3R5cGUuZ2V0QXR0cmlidXRlTlMsVD13aW5kb3cuRWxlbWVudC5wcm90b3R5cGUuc2V0QXR0cmlidXRlTlMsVT13aW5kb3cuRWxlbWVudC5wcm90b3R5cGUucmVtb3ZlQXR0cmlidXRlTlMsVj13aW5kb3cuRWxlbWVudC5wcm90b3R5cGUuaW5zZXJ0QWRqYWNlbnRFbGVtZW50LGhhPXdpbmRvdy5FbGVtZW50LnByb3RvdHlwZS5wcmVwZW5kLGlhPXdpbmRvdy5FbGVtZW50LnByb3RvdHlwZS5hcHBlbmQsamE9d2luZG93LkVsZW1lbnQucHJvdG90eXBlLmJlZm9yZSxrYT13aW5kb3cuRWxlbWVudC5wcm90b3R5cGUuYWZ0ZXIsbGE9d2luZG93LkVsZW1lbnQucHJvdG90eXBlLnJlcGxhY2VXaXRoLG1hPXdpbmRvdy5FbGVtZW50LnByb3RvdHlwZS5yZW1vdmUsXG5uYT13aW5kb3cuSFRNTEVsZW1lbnQsVz1PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHdpbmRvdy5IVE1MRWxlbWVudC5wcm90b3R5cGUsXCJpbm5lckhUTUxcIiksWD13aW5kb3cuSFRNTEVsZW1lbnQucHJvdG90eXBlLmluc2VydEFkamFjZW50RWxlbWVudDtmdW5jdGlvbiBvYSgpe3ZhciBiPVk7d2luZG93LkhUTUxFbGVtZW50PWZ1bmN0aW9uKCl7ZnVuY3Rpb24gYSgpe3ZhciBhPXRoaXMuY29uc3RydWN0b3IsYz1iLmYuZ2V0KGEpO2lmKCFjKXRocm93IEVycm9yKFwiVGhlIGN1c3RvbSBlbGVtZW50IGJlaW5nIGNvbnN0cnVjdGVkIHdhcyBub3QgcmVnaXN0ZXJlZCB3aXRoIGBjdXN0b21FbGVtZW50c2AuXCIpO3ZhciBkPWMuY29uc3RydWN0aW9uU3RhY2s7aWYoIWQubGVuZ3RoKXJldHVybiBkPUYuY2FsbChkb2N1bWVudCxjLmxvY2FsTmFtZSksT2JqZWN0LnNldFByb3RvdHlwZU9mKGQsYS5wcm90b3R5cGUpLGQuX19DRV9zdGF0ZT0xLGQuX19DRV9kZWZpbml0aW9uPWMsdyhiLGQpLGQ7dmFyIGM9ZC5sZW5ndGgtMSxoPWRbY107aWYoaD09PWcpdGhyb3cgRXJyb3IoXCJUaGUgSFRNTEVsZW1lbnQgY29uc3RydWN0b3Igd2FzIGVpdGhlciBjYWxsZWQgcmVlbnRyYW50bHkgZm9yIHRoaXMgY29uc3RydWN0b3Igb3IgY2FsbGVkIG11bHRpcGxlIHRpbWVzLlwiKTtcbmRbY109ZztPYmplY3Quc2V0UHJvdG90eXBlT2YoaCxhLnByb3RvdHlwZSk7dyhiLGgpO3JldHVybiBofWEucHJvdG90eXBlPW5hLnByb3RvdHlwZTtyZXR1cm4gYX0oKX07ZnVuY3Rpb24gcGEoYixhLGUpe2EucHJlcGVuZD1mdW5jdGlvbihhKXtmb3IodmFyIGQ9W10sYz0wO2M8YXJndW1lbnRzLmxlbmd0aDsrK2MpZFtjLTBdPWFyZ3VtZW50c1tjXTtjPWQuZmlsdGVyKGZ1bmN0aW9uKGIpe3JldHVybiBiIGluc3RhbmNlb2YgTm9kZSYmbChiKX0pO2Uuai5hcHBseSh0aGlzLGQpO2Zvcih2YXIgZj0wO2Y8Yy5sZW5ndGg7ZisrKXooYixjW2ZdKTtpZihsKHRoaXMpKWZvcihjPTA7YzxkLmxlbmd0aDtjKyspZj1kW2NdLGYgaW5zdGFuY2VvZiBFbGVtZW50JiZ4KGIsZil9O2EuYXBwZW5kPWZ1bmN0aW9uKGEpe2Zvcih2YXIgZD1bXSxjPTA7Yzxhcmd1bWVudHMubGVuZ3RoOysrYylkW2MtMF09YXJndW1lbnRzW2NdO2M9ZC5maWx0ZXIoZnVuY3Rpb24oYil7cmV0dXJuIGIgaW5zdGFuY2VvZiBOb2RlJiZsKGIpfSk7ZS5hcHBlbmQuYXBwbHkodGhpcyxkKTtmb3IodmFyIGY9MDtmPGMubGVuZ3RoO2YrKyl6KGIsY1tmXSk7aWYobCh0aGlzKSlmb3IoYz0wO2M8XG5kLmxlbmd0aDtjKyspZj1kW2NdLGYgaW5zdGFuY2VvZiBFbGVtZW50JiZ4KGIsZil9fTtmdW5jdGlvbiBxYSgpe3ZhciBiPVk7cShEb2N1bWVudC5wcm90b3R5cGUsXCJjcmVhdGVFbGVtZW50XCIsZnVuY3Rpb24oYSl7aWYodGhpcy5fX0NFX2hhc1JlZ2lzdHJ5KXt2YXIgZT1iLmEuZ2V0KGEpO2lmKGUpcmV0dXJuIG5ldyBlLmNvbnN0cnVjdG9yfWE9Ri5jYWxsKHRoaXMsYSk7dyhiLGEpO3JldHVybiBhfSk7cShEb2N1bWVudC5wcm90b3R5cGUsXCJpbXBvcnROb2RlXCIsZnVuY3Rpb24oYSxlKXthPWVhLmNhbGwodGhpcyxhLGUpO3RoaXMuX19DRV9oYXNSZWdpc3RyeT9BKGIsYSk6dihiLGEpO3JldHVybiBhfSk7cShEb2N1bWVudC5wcm90b3R5cGUsXCJjcmVhdGVFbGVtZW50TlNcIixmdW5jdGlvbihhLGUpe2lmKHRoaXMuX19DRV9oYXNSZWdpc3RyeSYmKG51bGw9PT1hfHxcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIj09PWEpKXt2YXIgYz1iLmEuZ2V0KGUpO2lmKGMpcmV0dXJuIG5ldyBjLmNvbnN0cnVjdG9yfWE9ZGEuY2FsbCh0aGlzLGEsZSk7dyhiLGEpO3JldHVybiBhfSk7XG5wYShiLERvY3VtZW50LnByb3RvdHlwZSx7ajpmYSxhcHBlbmQ6Z2F9KX07ZnVuY3Rpb24gcmEoKXt2YXIgYj1ZO2Z1bmN0aW9uIGEoYSxjKXtPYmplY3QuZGVmaW5lUHJvcGVydHkoYSxcInRleHRDb250ZW50XCIse2VudW1lcmFibGU6Yy5lbnVtZXJhYmxlLGNvbmZpZ3VyYWJsZTohMCxnZXQ6Yy5nZXQsc2V0OmZ1bmN0aW9uKGEpe2lmKHRoaXMubm9kZVR5cGU9PT1Ob2RlLlRFWFRfTk9ERSljLnNldC5jYWxsKHRoaXMsYSk7ZWxzZXt2YXIgZD12b2lkIDA7aWYodGhpcy5maXJzdENoaWxkKXt2YXIgZT10aGlzLmNoaWxkTm9kZXMsdT1lLmxlbmd0aDtpZigwPHUmJmwodGhpcykpZm9yKHZhciBkPUFycmF5KHUpLHA9MDtwPHU7cCsrKWRbcF09ZVtwXX1jLnNldC5jYWxsKHRoaXMsYSk7aWYoZClmb3IoYT0wO2E8ZC5sZW5ndGg7YSsrKXooYixkW2FdKX19fSl9cShOb2RlLnByb3RvdHlwZSxcImluc2VydEJlZm9yZVwiLGZ1bmN0aW9uKGEsYyl7aWYoYSBpbnN0YW5jZW9mIERvY3VtZW50RnJhZ21lbnQpe3ZhciBkPUFycmF5LnByb3RvdHlwZS5zbGljZS5hcHBseShhLmNoaWxkTm9kZXMpO1xuYT1JLmNhbGwodGhpcyxhLGMpO2lmKGwodGhpcykpZm9yKGM9MDtjPGQubGVuZ3RoO2MrKyl4KGIsZFtjXSk7cmV0dXJuIGF9ZD1sKGEpO2M9SS5jYWxsKHRoaXMsYSxjKTtkJiZ6KGIsYSk7bCh0aGlzKSYmeChiLGEpO3JldHVybiBjfSk7cShOb2RlLnByb3RvdHlwZSxcImFwcGVuZENoaWxkXCIsZnVuY3Rpb24oYSl7aWYoYSBpbnN0YW5jZW9mIERvY3VtZW50RnJhZ21lbnQpe3ZhciBjPUFycmF5LnByb3RvdHlwZS5zbGljZS5hcHBseShhLmNoaWxkTm9kZXMpO2E9SC5jYWxsKHRoaXMsYSk7aWYobCh0aGlzKSlmb3IodmFyIGQ9MDtkPGMubGVuZ3RoO2QrKyl4KGIsY1tkXSk7cmV0dXJuIGF9Yz1sKGEpO2Q9SC5jYWxsKHRoaXMsYSk7YyYmeihiLGEpO2wodGhpcykmJngoYixhKTtyZXR1cm4gZH0pO3EoTm9kZS5wcm90b3R5cGUsXCJjbG9uZU5vZGVcIixmdW5jdGlvbihhKXthPUcuY2FsbCh0aGlzLGEpO3RoaXMub3duZXJEb2N1bWVudC5fX0NFX2hhc1JlZ2lzdHJ5P0EoYixhKTp2KGIsYSk7XG5yZXR1cm4gYX0pO3EoTm9kZS5wcm90b3R5cGUsXCJyZW1vdmVDaGlsZFwiLGZ1bmN0aW9uKGEpe3ZhciBjPWwoYSksZD1KLmNhbGwodGhpcyxhKTtjJiZ6KGIsYSk7cmV0dXJuIGR9KTtxKE5vZGUucHJvdG90eXBlLFwicmVwbGFjZUNoaWxkXCIsZnVuY3Rpb24oYSxjKXtpZihhIGluc3RhbmNlb2YgRG9jdW1lbnRGcmFnbWVudCl7dmFyIGQ9QXJyYXkucHJvdG90eXBlLnNsaWNlLmFwcGx5KGEuY2hpbGROb2Rlcyk7YT1LLmNhbGwodGhpcyxhLGMpO2lmKGwodGhpcykpZm9yKHooYixjKSxjPTA7YzxkLmxlbmd0aDtjKyspeChiLGRbY10pO3JldHVybiBhfXZhciBkPWwoYSksZT1LLmNhbGwodGhpcyxhLGMpLGY9bCh0aGlzKTtmJiZ6KGIsYyk7ZCYmeihiLGEpO2YmJngoYixhKTtyZXR1cm4gZX0pO0wmJkwuZ2V0P2EoTm9kZS5wcm90b3R5cGUsTCk6dChiLGZ1bmN0aW9uKGIpe2EoYix7ZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7Zm9yKHZhciBhPVtdLGI9XG4wO2I8dGhpcy5jaGlsZE5vZGVzLmxlbmd0aDtiKyspYS5wdXNoKHRoaXMuY2hpbGROb2Rlc1tiXS50ZXh0Q29udGVudCk7cmV0dXJuIGEuam9pbihcIlwiKX0sc2V0OmZ1bmN0aW9uKGEpe2Zvcig7dGhpcy5maXJzdENoaWxkOylKLmNhbGwodGhpcyx0aGlzLmZpcnN0Q2hpbGQpO0guY2FsbCh0aGlzLGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGEpKX19KX0pfTtmdW5jdGlvbiBzYShiKXt2YXIgYT1FbGVtZW50LnByb3RvdHlwZTthLmJlZm9yZT1mdW5jdGlvbihhKXtmb3IodmFyIGM9W10sZD0wO2Q8YXJndW1lbnRzLmxlbmd0aDsrK2QpY1tkLTBdPWFyZ3VtZW50c1tkXTtkPWMuZmlsdGVyKGZ1bmN0aW9uKGEpe3JldHVybiBhIGluc3RhbmNlb2YgTm9kZSYmbChhKX0pO2phLmFwcGx5KHRoaXMsYyk7Zm9yKHZhciBlPTA7ZTxkLmxlbmd0aDtlKyspeihiLGRbZV0pO2lmKGwodGhpcykpZm9yKGQ9MDtkPGMubGVuZ3RoO2QrKyllPWNbZF0sZSBpbnN0YW5jZW9mIEVsZW1lbnQmJngoYixlKX07YS5hZnRlcj1mdW5jdGlvbihhKXtmb3IodmFyIGM9W10sZD0wO2Q8YXJndW1lbnRzLmxlbmd0aDsrK2QpY1tkLTBdPWFyZ3VtZW50c1tkXTtkPWMuZmlsdGVyKGZ1bmN0aW9uKGEpe3JldHVybiBhIGluc3RhbmNlb2YgTm9kZSYmbChhKX0pO2thLmFwcGx5KHRoaXMsYyk7Zm9yKHZhciBlPTA7ZTxkLmxlbmd0aDtlKyspeihiLGRbZV0pO2lmKGwodGhpcykpZm9yKGQ9XG4wO2Q8Yy5sZW5ndGg7ZCsrKWU9Y1tkXSxlIGluc3RhbmNlb2YgRWxlbWVudCYmeChiLGUpfTthLnJlcGxhY2VXaXRoPWZ1bmN0aW9uKGEpe2Zvcih2YXIgYz1bXSxkPTA7ZDxhcmd1bWVudHMubGVuZ3RoOysrZCljW2QtMF09YXJndW1lbnRzW2RdO3ZhciBkPWMuZmlsdGVyKGZ1bmN0aW9uKGEpe3JldHVybiBhIGluc3RhbmNlb2YgTm9kZSYmbChhKX0pLGU9bCh0aGlzKTtsYS5hcHBseSh0aGlzLGMpO2Zvcih2YXIgZj0wO2Y8ZC5sZW5ndGg7ZisrKXooYixkW2ZdKTtpZihlKWZvcih6KGIsdGhpcyksZD0wO2Q8Yy5sZW5ndGg7ZCsrKWU9Y1tkXSxlIGluc3RhbmNlb2YgRWxlbWVudCYmeChiLGUpfTthLnJlbW92ZT1mdW5jdGlvbigpe3ZhciBhPWwodGhpcyk7bWEuY2FsbCh0aGlzKTthJiZ6KGIsdGhpcyl9fTtmdW5jdGlvbiB0YSgpe3ZhciBiPVk7ZnVuY3Rpb24gYShhLGMpe09iamVjdC5kZWZpbmVQcm9wZXJ0eShhLFwiaW5uZXJIVE1MXCIse2VudW1lcmFibGU6Yy5lbnVtZXJhYmxlLGNvbmZpZ3VyYWJsZTohMCxnZXQ6Yy5nZXQsc2V0OmZ1bmN0aW9uKGEpe3ZhciBkPXRoaXMsZT12b2lkIDA7bCh0aGlzKSYmKGU9W10sbih0aGlzLGZ1bmN0aW9uKGEpe2EhPT1kJiZlLnB1c2goYSl9KSk7Yy5zZXQuY2FsbCh0aGlzLGEpO2lmKGUpZm9yKHZhciBmPTA7ZjxlLmxlbmd0aDtmKyspe3ZhciBoPWVbZl07MT09PWguX19DRV9zdGF0ZSYmYi5kaXNjb25uZWN0ZWRDYWxsYmFjayhoKX10aGlzLm93bmVyRG9jdW1lbnQuX19DRV9oYXNSZWdpc3RyeT9BKGIsdGhpcyk6dihiLHRoaXMpO3JldHVybiBhfX0pfWZ1bmN0aW9uIGUoYSxjKXtxKGEsXCJpbnNlcnRBZGphY2VudEVsZW1lbnRcIixmdW5jdGlvbihhLGQpe3ZhciBlPWwoZCk7YT1jLmNhbGwodGhpcyxhLGQpO2UmJnooYixkKTtsKGEpJiZ4KGIsZCk7XG5yZXR1cm4gYX0pfU0/cShFbGVtZW50LnByb3RvdHlwZSxcImF0dGFjaFNoYWRvd1wiLGZ1bmN0aW9uKGEpe3JldHVybiB0aGlzLl9fQ0Vfc2hhZG93Um9vdD1hPU0uY2FsbCh0aGlzLGEpfSk6Y29uc29sZS53YXJuKFwiQ3VzdG9tIEVsZW1lbnRzOiBgRWxlbWVudCNhdHRhY2hTaGFkb3dgIHdhcyBub3QgcGF0Y2hlZC5cIik7aWYoTiYmTi5nZXQpYShFbGVtZW50LnByb3RvdHlwZSxOKTtlbHNlIGlmKFcmJlcuZ2V0KWEoSFRNTEVsZW1lbnQucHJvdG90eXBlLFcpO2Vsc2V7dmFyIGM9Ri5jYWxsKGRvY3VtZW50LFwiZGl2XCIpO3QoYixmdW5jdGlvbihiKXthKGIse2VudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBHLmNhbGwodGhpcywhMCkuaW5uZXJIVE1MfSxzZXQ6ZnVuY3Rpb24oYSl7dmFyIGI9XCJ0ZW1wbGF0ZVwiPT09dGhpcy5sb2NhbE5hbWU/dGhpcy5jb250ZW50OnRoaXM7Zm9yKGMuaW5uZXJIVE1MPWE7MDxiLmNoaWxkTm9kZXMubGVuZ3RoOylKLmNhbGwoYixcbmIuY2hpbGROb2Rlc1swXSk7Zm9yKDswPGMuY2hpbGROb2Rlcy5sZW5ndGg7KUguY2FsbChiLGMuY2hpbGROb2Rlc1swXSl9fSl9KX1xKEVsZW1lbnQucHJvdG90eXBlLFwic2V0QXR0cmlidXRlXCIsZnVuY3Rpb24oYSxjKXtpZigxIT09dGhpcy5fX0NFX3N0YXRlKXJldHVybiBRLmNhbGwodGhpcyxhLGMpO3ZhciBkPU8uY2FsbCh0aGlzLGEpO1EuY2FsbCh0aGlzLGEsYyk7Yz1PLmNhbGwodGhpcyxhKTtiLmF0dHJpYnV0ZUNoYW5nZWRDYWxsYmFjayh0aGlzLGEsZCxjLG51bGwpfSk7cShFbGVtZW50LnByb3RvdHlwZSxcInNldEF0dHJpYnV0ZU5TXCIsZnVuY3Rpb24oYSxjLGUpe2lmKDEhPT10aGlzLl9fQ0Vfc3RhdGUpcmV0dXJuIFQuY2FsbCh0aGlzLGEsYyxlKTt2YXIgZD1TLmNhbGwodGhpcyxhLGMpO1QuY2FsbCh0aGlzLGEsYyxlKTtlPVMuY2FsbCh0aGlzLGEsYyk7Yi5hdHRyaWJ1dGVDaGFuZ2VkQ2FsbGJhY2sodGhpcyxjLGQsZSxhKX0pO3EoRWxlbWVudC5wcm90b3R5cGUsXCJyZW1vdmVBdHRyaWJ1dGVcIixcbmZ1bmN0aW9uKGEpe2lmKDEhPT10aGlzLl9fQ0Vfc3RhdGUpcmV0dXJuIFIuY2FsbCh0aGlzLGEpO3ZhciBjPU8uY2FsbCh0aGlzLGEpO1IuY2FsbCh0aGlzLGEpO251bGwhPT1jJiZiLmF0dHJpYnV0ZUNoYW5nZWRDYWxsYmFjayh0aGlzLGEsYyxudWxsLG51bGwpfSk7cShFbGVtZW50LnByb3RvdHlwZSxcInJlbW92ZUF0dHJpYnV0ZU5TXCIsZnVuY3Rpb24oYSxjKXtpZigxIT09dGhpcy5fX0NFX3N0YXRlKXJldHVybiBVLmNhbGwodGhpcyxhLGMpO3ZhciBkPVMuY2FsbCh0aGlzLGEsYyk7VS5jYWxsKHRoaXMsYSxjKTt2YXIgZT1TLmNhbGwodGhpcyxhLGMpO2QhPT1lJiZiLmF0dHJpYnV0ZUNoYW5nZWRDYWxsYmFjayh0aGlzLGMsZCxlLGEpfSk7WD9lKEhUTUxFbGVtZW50LnByb3RvdHlwZSxYKTpWP2UoRWxlbWVudC5wcm90b3R5cGUsVik6Y29uc29sZS53YXJuKFwiQ3VzdG9tIEVsZW1lbnRzOiBgRWxlbWVudCNpbnNlcnRBZGphY2VudEVsZW1lbnRgIHdhcyBub3QgcGF0Y2hlZC5cIik7XG5wYShiLEVsZW1lbnQucHJvdG90eXBlLHtqOmhhLGFwcGVuZDppYX0pO3NhKGIpfTsvKlxuXG4gQ29weXJpZ2h0IChjKSAyMDE2IFRoZSBQb2x5bWVyIFByb2plY3QgQXV0aG9ycy4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiBUaGlzIGNvZGUgbWF5IG9ubHkgYmUgdXNlZCB1bmRlciB0aGUgQlNEIHN0eWxlIGxpY2Vuc2UgZm91bmQgYXQgaHR0cDovL3BvbHltZXIuZ2l0aHViLmlvL0xJQ0VOU0UudHh0XG4gVGhlIGNvbXBsZXRlIHNldCBvZiBhdXRob3JzIG1heSBiZSBmb3VuZCBhdCBodHRwOi8vcG9seW1lci5naXRodWIuaW8vQVVUSE9SUy50eHRcbiBUaGUgY29tcGxldGUgc2V0IG9mIGNvbnRyaWJ1dG9ycyBtYXkgYmUgZm91bmQgYXQgaHR0cDovL3BvbHltZXIuZ2l0aHViLmlvL0NPTlRSSUJVVE9SUy50eHRcbiBDb2RlIGRpc3RyaWJ1dGVkIGJ5IEdvb2dsZSBhcyBwYXJ0IG9mIHRoZSBwb2x5bWVyIHByb2plY3QgaXMgYWxzb1xuIHN1YmplY3QgdG8gYW4gYWRkaXRpb25hbCBJUCByaWdodHMgZ3JhbnQgZm91bmQgYXQgaHR0cDovL3BvbHltZXIuZ2l0aHViLmlvL1BBVEVOVFMudHh0XG4qL1xudmFyIFo9d2luZG93LmN1c3RvbUVsZW1lbnRzO2lmKCFafHxaLmZvcmNlUG9seWZpbGx8fFwiZnVuY3Rpb25cIiE9dHlwZW9mIFouZGVmaW5lfHxcImZ1bmN0aW9uXCIhPXR5cGVvZiBaLmdldCl7dmFyIFk9bmV3IHI7b2EoKTtxYSgpO3JhKCk7dGEoKTtkb2N1bWVudC5fX0NFX2hhc1JlZ2lzdHJ5PSEwO3ZhciB1YT1uZXcgRShZKTtPYmplY3QuZGVmaW5lUHJvcGVydHkod2luZG93LFwiY3VzdG9tRWxlbWVudHNcIix7Y29uZmlndXJhYmxlOiEwLGVudW1lcmFibGU6ITAsdmFsdWU6dWF9KX07XG59KS5jYWxsKHNlbGYpO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1jdXN0b20tZWxlbWVudHMubWluLmpzLm1hcFxuIiwiLy8gaHR0cHM6Ly9naXRodWIuY29tL3psb2lyb2NrL2NvcmUtanMvaXNzdWVzLzg2I2lzc3VlY29tbWVudC0xMTU3NTkwMjhcbnZhciBnbG9iYWwgPSBtb2R1bGUuZXhwb3J0cyA9IHR5cGVvZiB3aW5kb3cgIT0gJ3VuZGVmaW5lZCcgJiYgd2luZG93Lk1hdGggPT0gTWF0aFxuICA/IHdpbmRvdyA6IHR5cGVvZiBzZWxmICE9ICd1bmRlZmluZWQnICYmIHNlbGYuTWF0aCA9PSBNYXRoID8gc2VsZiA6IEZ1bmN0aW9uKCdyZXR1cm4gdGhpcycpKCk7XG5pZih0eXBlb2YgX19nID09ICdudW1iZXInKV9fZyA9IGdsb2JhbDsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby11bmRlZiIsInZhciBjb3JlID0gbW9kdWxlLmV4cG9ydHMgPSB7dmVyc2lvbjogJzIuNC4wJ307XG5pZih0eXBlb2YgX19lID09ICdudW1iZXInKV9fZSA9IGNvcmU7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tdW5kZWYiLCJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKGl0KXtcbiAgcmV0dXJuIHR5cGVvZiBpdCA9PT0gJ29iamVjdCcgPyBpdCAhPT0gbnVsbCA6IHR5cGVvZiBpdCA9PT0gJ2Z1bmN0aW9uJztcbn07IiwidmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0Jyk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKGl0KXtcbiAgaWYoIWlzT2JqZWN0KGl0KSl0aHJvdyBUeXBlRXJyb3IoaXQgKyAnIGlzIG5vdCBhbiBvYmplY3QhJyk7XG4gIHJldHVybiBpdDtcbn07IiwibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihleGVjKXtcbiAgdHJ5IHtcbiAgICByZXR1cm4gISFleGVjKCk7XG4gIH0gY2F0Y2goZSl7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cbn07IiwiLy8gVGhhbmsncyBJRTggZm9yIGhpcyBmdW5ueSBkZWZpbmVQcm9wZXJ0eVxubW9kdWxlLmV4cG9ydHMgPSAhcmVxdWlyZSgnLi9fZmFpbHMnKShmdW5jdGlvbigpe1xuICByZXR1cm4gT2JqZWN0LmRlZmluZVByb3BlcnR5KHt9LCAnYScsIHtnZXQ6IGZ1bmN0aW9uKCl7IHJldHVybiA3OyB9fSkuYSAhPSA3O1xufSk7IiwidmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0JylcbiAgLCBkb2N1bWVudCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpLmRvY3VtZW50XG4gIC8vIGluIG9sZCBJRSB0eXBlb2YgZG9jdW1lbnQuY3JlYXRlRWxlbWVudCBpcyAnb2JqZWN0J1xuICAsIGlzID0gaXNPYmplY3QoZG9jdW1lbnQpICYmIGlzT2JqZWN0KGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihpdCl7XG4gIHJldHVybiBpcyA/IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoaXQpIDoge307XG59OyIsIm1vZHVsZS5leHBvcnRzID0gIXJlcXVpcmUoJy4vX2Rlc2NyaXB0b3JzJykgJiYgIXJlcXVpcmUoJy4vX2ZhaWxzJykoZnVuY3Rpb24oKXtcbiAgcmV0dXJuIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShyZXF1aXJlKCcuL19kb20tY3JlYXRlJykoJ2RpdicpLCAnYScsIHtnZXQ6IGZ1bmN0aW9uKCl7IHJldHVybiA3OyB9fSkuYSAhPSA3O1xufSk7IiwiLy8gNy4xLjEgVG9QcmltaXRpdmUoaW5wdXQgWywgUHJlZmVycmVkVHlwZV0pXG52YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuL19pcy1vYmplY3QnKTtcbi8vIGluc3RlYWQgb2YgdGhlIEVTNiBzcGVjIHZlcnNpb24sIHdlIGRpZG4ndCBpbXBsZW1lbnQgQEB0b1ByaW1pdGl2ZSBjYXNlXG4vLyBhbmQgdGhlIHNlY29uZCBhcmd1bWVudCAtIGZsYWcgLSBwcmVmZXJyZWQgdHlwZSBpcyBhIHN0cmluZ1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihpdCwgUyl7XG4gIGlmKCFpc09iamVjdChpdCkpcmV0dXJuIGl0O1xuICB2YXIgZm4sIHZhbDtcbiAgaWYoUyAmJiB0eXBlb2YgKGZuID0gaXQudG9TdHJpbmcpID09ICdmdW5jdGlvbicgJiYgIWlzT2JqZWN0KHZhbCA9IGZuLmNhbGwoaXQpKSlyZXR1cm4gdmFsO1xuICBpZih0eXBlb2YgKGZuID0gaXQudmFsdWVPZikgPT0gJ2Z1bmN0aW9uJyAmJiAhaXNPYmplY3QodmFsID0gZm4uY2FsbChpdCkpKXJldHVybiB2YWw7XG4gIGlmKCFTICYmIHR5cGVvZiAoZm4gPSBpdC50b1N0cmluZykgPT0gJ2Z1bmN0aW9uJyAmJiAhaXNPYmplY3QodmFsID0gZm4uY2FsbChpdCkpKXJldHVybiB2YWw7XG4gIHRocm93IFR5cGVFcnJvcihcIkNhbid0IGNvbnZlcnQgb2JqZWN0IHRvIHByaW1pdGl2ZSB2YWx1ZVwiKTtcbn07IiwidmFyIGFuT2JqZWN0ICAgICAgID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0JylcbiAgLCBJRThfRE9NX0RFRklORSA9IHJlcXVpcmUoJy4vX2llOC1kb20tZGVmaW5lJylcbiAgLCB0b1ByaW1pdGl2ZSAgICA9IHJlcXVpcmUoJy4vX3RvLXByaW1pdGl2ZScpXG4gICwgZFAgICAgICAgICAgICAgPSBPYmplY3QuZGVmaW5lUHJvcGVydHk7XG5cbmV4cG9ydHMuZiA9IHJlcXVpcmUoJy4vX2Rlc2NyaXB0b3JzJykgPyBPYmplY3QuZGVmaW5lUHJvcGVydHkgOiBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0eShPLCBQLCBBdHRyaWJ1dGVzKXtcbiAgYW5PYmplY3QoTyk7XG4gIFAgPSB0b1ByaW1pdGl2ZShQLCB0cnVlKTtcbiAgYW5PYmplY3QoQXR0cmlidXRlcyk7XG4gIGlmKElFOF9ET01fREVGSU5FKXRyeSB7XG4gICAgcmV0dXJuIGRQKE8sIFAsIEF0dHJpYnV0ZXMpO1xuICB9IGNhdGNoKGUpeyAvKiBlbXB0eSAqLyB9XG4gIGlmKCdnZXQnIGluIEF0dHJpYnV0ZXMgfHwgJ3NldCcgaW4gQXR0cmlidXRlcyl0aHJvdyBUeXBlRXJyb3IoJ0FjY2Vzc29ycyBub3Qgc3VwcG9ydGVkIScpO1xuICBpZigndmFsdWUnIGluIEF0dHJpYnV0ZXMpT1tQXSA9IEF0dHJpYnV0ZXMudmFsdWU7XG4gIHJldHVybiBPO1xufTsiLCJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKGJpdG1hcCwgdmFsdWUpe1xuICByZXR1cm4ge1xuICAgIGVudW1lcmFibGUgIDogIShiaXRtYXAgJiAxKSxcbiAgICBjb25maWd1cmFibGU6ICEoYml0bWFwICYgMiksXG4gICAgd3JpdGFibGUgICAgOiAhKGJpdG1hcCAmIDQpLFxuICAgIHZhbHVlICAgICAgIDogdmFsdWVcbiAgfTtcbn07IiwidmFyIGRQICAgICAgICAgPSByZXF1aXJlKCcuL19vYmplY3QtZHAnKVxuICAsIGNyZWF0ZURlc2MgPSByZXF1aXJlKCcuL19wcm9wZXJ0eS1kZXNjJyk7XG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vX2Rlc2NyaXB0b3JzJykgPyBmdW5jdGlvbihvYmplY3QsIGtleSwgdmFsdWUpe1xuICByZXR1cm4gZFAuZihvYmplY3QsIGtleSwgY3JlYXRlRGVzYygxLCB2YWx1ZSkpO1xufSA6IGZ1bmN0aW9uKG9iamVjdCwga2V5LCB2YWx1ZSl7XG4gIG9iamVjdFtrZXldID0gdmFsdWU7XG4gIHJldHVybiBvYmplY3Q7XG59OyIsInZhciBoYXNPd25Qcm9wZXJ0eSA9IHt9Lmhhc093blByb3BlcnR5O1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihpdCwga2V5KXtcbiAgcmV0dXJuIGhhc093blByb3BlcnR5LmNhbGwoaXQsIGtleSk7XG59OyIsInZhciBpZCA9IDBcbiAgLCBweCA9IE1hdGgucmFuZG9tKCk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKGtleSl7XG4gIHJldHVybiAnU3ltYm9sKCcuY29uY2F0KGtleSA9PT0gdW5kZWZpbmVkID8gJycgOiBrZXksICcpXycsICgrK2lkICsgcHgpLnRvU3RyaW5nKDM2KSk7XG59OyIsInZhciBnbG9iYWwgICAgPSByZXF1aXJlKCcuL19nbG9iYWwnKVxuICAsIGhpZGUgICAgICA9IHJlcXVpcmUoJy4vX2hpZGUnKVxuICAsIGhhcyAgICAgICA9IHJlcXVpcmUoJy4vX2hhcycpXG4gICwgU1JDICAgICAgID0gcmVxdWlyZSgnLi9fdWlkJykoJ3NyYycpXG4gICwgVE9fU1RSSU5HID0gJ3RvU3RyaW5nJ1xuICAsICR0b1N0cmluZyA9IEZ1bmN0aW9uW1RPX1NUUklOR11cbiAgLCBUUEwgICAgICAgPSAoJycgKyAkdG9TdHJpbmcpLnNwbGl0KFRPX1NUUklORyk7XG5cbnJlcXVpcmUoJy4vX2NvcmUnKS5pbnNwZWN0U291cmNlID0gZnVuY3Rpb24oaXQpe1xuICByZXR1cm4gJHRvU3RyaW5nLmNhbGwoaXQpO1xufTtcblxuKG1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oTywga2V5LCB2YWwsIHNhZmUpe1xuICB2YXIgaXNGdW5jdGlvbiA9IHR5cGVvZiB2YWwgPT0gJ2Z1bmN0aW9uJztcbiAgaWYoaXNGdW5jdGlvbiloYXModmFsLCAnbmFtZScpIHx8IGhpZGUodmFsLCAnbmFtZScsIGtleSk7XG4gIGlmKE9ba2V5XSA9PT0gdmFsKXJldHVybjtcbiAgaWYoaXNGdW5jdGlvbiloYXModmFsLCBTUkMpIHx8IGhpZGUodmFsLCBTUkMsIE9ba2V5XSA/ICcnICsgT1trZXldIDogVFBMLmpvaW4oU3RyaW5nKGtleSkpKTtcbiAgaWYoTyA9PT0gZ2xvYmFsKXtcbiAgICBPW2tleV0gPSB2YWw7XG4gIH0gZWxzZSB7XG4gICAgaWYoIXNhZmUpe1xuICAgICAgZGVsZXRlIE9ba2V5XTtcbiAgICAgIGhpZGUoTywga2V5LCB2YWwpO1xuICAgIH0gZWxzZSB7XG4gICAgICBpZihPW2tleV0pT1trZXldID0gdmFsO1xuICAgICAgZWxzZSBoaWRlKE8sIGtleSwgdmFsKTtcbiAgICB9XG4gIH1cbi8vIGFkZCBmYWtlIEZ1bmN0aW9uI3RvU3RyaW5nIGZvciBjb3JyZWN0IHdvcmsgd3JhcHBlZCBtZXRob2RzIC8gY29uc3RydWN0b3JzIHdpdGggbWV0aG9kcyBsaWtlIExvRGFzaCBpc05hdGl2ZVxufSkoRnVuY3Rpb24ucHJvdG90eXBlLCBUT19TVFJJTkcsIGZ1bmN0aW9uIHRvU3RyaW5nKCl7XG4gIHJldHVybiB0eXBlb2YgdGhpcyA9PSAnZnVuY3Rpb24nICYmIHRoaXNbU1JDXSB8fCAkdG9TdHJpbmcuY2FsbCh0aGlzKTtcbn0pOyIsIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oaXQpe1xuICBpZih0eXBlb2YgaXQgIT0gJ2Z1bmN0aW9uJyl0aHJvdyBUeXBlRXJyb3IoaXQgKyAnIGlzIG5vdCBhIGZ1bmN0aW9uIScpO1xuICByZXR1cm4gaXQ7XG59OyIsIi8vIG9wdGlvbmFsIC8gc2ltcGxlIGNvbnRleHQgYmluZGluZ1xudmFyIGFGdW5jdGlvbiA9IHJlcXVpcmUoJy4vX2EtZnVuY3Rpb24nKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oZm4sIHRoYXQsIGxlbmd0aCl7XG4gIGFGdW5jdGlvbihmbik7XG4gIGlmKHRoYXQgPT09IHVuZGVmaW5lZClyZXR1cm4gZm47XG4gIHN3aXRjaChsZW5ndGgpe1xuICAgIGNhc2UgMTogcmV0dXJuIGZ1bmN0aW9uKGEpe1xuICAgICAgcmV0dXJuIGZuLmNhbGwodGhhdCwgYSk7XG4gICAgfTtcbiAgICBjYXNlIDI6IHJldHVybiBmdW5jdGlvbihhLCBiKXtcbiAgICAgIHJldHVybiBmbi5jYWxsKHRoYXQsIGEsIGIpO1xuICAgIH07XG4gICAgY2FzZSAzOiByZXR1cm4gZnVuY3Rpb24oYSwgYiwgYyl7XG4gICAgICByZXR1cm4gZm4uY2FsbCh0aGF0LCBhLCBiLCBjKTtcbiAgICB9O1xuICB9XG4gIHJldHVybiBmdW5jdGlvbigvKiAuLi5hcmdzICovKXtcbiAgICByZXR1cm4gZm4uYXBwbHkodGhhdCwgYXJndW1lbnRzKTtcbiAgfTtcbn07IiwidmFyIGdsb2JhbCAgICA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpXG4gICwgY29yZSAgICAgID0gcmVxdWlyZSgnLi9fY29yZScpXG4gICwgaGlkZSAgICAgID0gcmVxdWlyZSgnLi9faGlkZScpXG4gICwgcmVkZWZpbmUgID0gcmVxdWlyZSgnLi9fcmVkZWZpbmUnKVxuICAsIGN0eCAgICAgICA9IHJlcXVpcmUoJy4vX2N0eCcpXG4gICwgUFJPVE9UWVBFID0gJ3Byb3RvdHlwZSc7XG5cbnZhciAkZXhwb3J0ID0gZnVuY3Rpb24odHlwZSwgbmFtZSwgc291cmNlKXtcbiAgdmFyIElTX0ZPUkNFRCA9IHR5cGUgJiAkZXhwb3J0LkZcbiAgICAsIElTX0dMT0JBTCA9IHR5cGUgJiAkZXhwb3J0LkdcbiAgICAsIElTX1NUQVRJQyA9IHR5cGUgJiAkZXhwb3J0LlNcbiAgICAsIElTX1BST1RPICA9IHR5cGUgJiAkZXhwb3J0LlBcbiAgICAsIElTX0JJTkQgICA9IHR5cGUgJiAkZXhwb3J0LkJcbiAgICAsIHRhcmdldCAgICA9IElTX0dMT0JBTCA/IGdsb2JhbCA6IElTX1NUQVRJQyA/IGdsb2JhbFtuYW1lXSB8fCAoZ2xvYmFsW25hbWVdID0ge30pIDogKGdsb2JhbFtuYW1lXSB8fCB7fSlbUFJPVE9UWVBFXVxuICAgICwgZXhwb3J0cyAgID0gSVNfR0xPQkFMID8gY29yZSA6IGNvcmVbbmFtZV0gfHwgKGNvcmVbbmFtZV0gPSB7fSlcbiAgICAsIGV4cFByb3RvICA9IGV4cG9ydHNbUFJPVE9UWVBFXSB8fCAoZXhwb3J0c1tQUk9UT1RZUEVdID0ge30pXG4gICAgLCBrZXksIG93biwgb3V0LCBleHA7XG4gIGlmKElTX0dMT0JBTClzb3VyY2UgPSBuYW1lO1xuICBmb3Ioa2V5IGluIHNvdXJjZSl7XG4gICAgLy8gY29udGFpbnMgaW4gbmF0aXZlXG4gICAgb3duID0gIUlTX0ZPUkNFRCAmJiB0YXJnZXQgJiYgdGFyZ2V0W2tleV0gIT09IHVuZGVmaW5lZDtcbiAgICAvLyBleHBvcnQgbmF0aXZlIG9yIHBhc3NlZFxuICAgIG91dCA9IChvd24gPyB0YXJnZXQgOiBzb3VyY2UpW2tleV07XG4gICAgLy8gYmluZCB0aW1lcnMgdG8gZ2xvYmFsIGZvciBjYWxsIGZyb20gZXhwb3J0IGNvbnRleHRcbiAgICBleHAgPSBJU19CSU5EICYmIG93biA/IGN0eChvdXQsIGdsb2JhbCkgOiBJU19QUk9UTyAmJiB0eXBlb2Ygb3V0ID09ICdmdW5jdGlvbicgPyBjdHgoRnVuY3Rpb24uY2FsbCwgb3V0KSA6IG91dDtcbiAgICAvLyBleHRlbmQgZ2xvYmFsXG4gICAgaWYodGFyZ2V0KXJlZGVmaW5lKHRhcmdldCwga2V5LCBvdXQsIHR5cGUgJiAkZXhwb3J0LlUpO1xuICAgIC8vIGV4cG9ydFxuICAgIGlmKGV4cG9ydHNba2V5XSAhPSBvdXQpaGlkZShleHBvcnRzLCBrZXksIGV4cCk7XG4gICAgaWYoSVNfUFJPVE8gJiYgZXhwUHJvdG9ba2V5XSAhPSBvdXQpZXhwUHJvdG9ba2V5XSA9IG91dDtcbiAgfVxufTtcbmdsb2JhbC5jb3JlID0gY29yZTtcbi8vIHR5cGUgYml0bWFwXG4kZXhwb3J0LkYgPSAxOyAgIC8vIGZvcmNlZFxuJGV4cG9ydC5HID0gMjsgICAvLyBnbG9iYWxcbiRleHBvcnQuUyA9IDQ7ICAgLy8gc3RhdGljXG4kZXhwb3J0LlAgPSA4OyAgIC8vIHByb3RvXG4kZXhwb3J0LkIgPSAxNjsgIC8vIGJpbmRcbiRleHBvcnQuVyA9IDMyOyAgLy8gd3JhcFxuJGV4cG9ydC5VID0gNjQ7ICAvLyBzYWZlXG4kZXhwb3J0LlIgPSAxMjg7IC8vIHJlYWwgcHJvdG8gbWV0aG9kIGZvciBgbGlicmFyeWAgXG5tb2R1bGUuZXhwb3J0cyA9ICRleHBvcnQ7IiwiZXhwb3J0cy5mID0ge30ucHJvcGVydHlJc0VudW1lcmFibGU7IiwidmFyIHRvU3RyaW5nID0ge30udG9TdHJpbmc7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oaXQpe1xuICByZXR1cm4gdG9TdHJpbmcuY2FsbChpdCkuc2xpY2UoOCwgLTEpO1xufTsiLCIvLyBmYWxsYmFjayBmb3Igbm9uLWFycmF5LWxpa2UgRVMzIGFuZCBub24tZW51bWVyYWJsZSBvbGQgVjggc3RyaW5nc1xudmFyIGNvZiA9IHJlcXVpcmUoJy4vX2NvZicpO1xubW9kdWxlLmV4cG9ydHMgPSBPYmplY3QoJ3onKS5wcm9wZXJ0eUlzRW51bWVyYWJsZSgwKSA/IE9iamVjdCA6IGZ1bmN0aW9uKGl0KXtcbiAgcmV0dXJuIGNvZihpdCkgPT0gJ1N0cmluZycgPyBpdC5zcGxpdCgnJykgOiBPYmplY3QoaXQpO1xufTsiLCIvLyA3LjIuMSBSZXF1aXJlT2JqZWN0Q29lcmNpYmxlKGFyZ3VtZW50KVxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihpdCl7XG4gIGlmKGl0ID09IHVuZGVmaW5lZCl0aHJvdyBUeXBlRXJyb3IoXCJDYW4ndCBjYWxsIG1ldGhvZCBvbiAgXCIgKyBpdCk7XG4gIHJldHVybiBpdDtcbn07IiwiLy8gdG8gaW5kZXhlZCBvYmplY3QsIHRvT2JqZWN0IHdpdGggZmFsbGJhY2sgZm9yIG5vbi1hcnJheS1saWtlIEVTMyBzdHJpbmdzXG52YXIgSU9iamVjdCA9IHJlcXVpcmUoJy4vX2lvYmplY3QnKVxuICAsIGRlZmluZWQgPSByZXF1aXJlKCcuL19kZWZpbmVkJyk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKGl0KXtcbiAgcmV0dXJuIElPYmplY3QoZGVmaW5lZChpdCkpO1xufTsiLCJ2YXIgcElFICAgICAgICAgICAgPSByZXF1aXJlKCcuL19vYmplY3QtcGllJylcbiAgLCBjcmVhdGVEZXNjICAgICA9IHJlcXVpcmUoJy4vX3Byb3BlcnR5LWRlc2MnKVxuICAsIHRvSU9iamVjdCAgICAgID0gcmVxdWlyZSgnLi9fdG8taW9iamVjdCcpXG4gICwgdG9QcmltaXRpdmUgICAgPSByZXF1aXJlKCcuL190by1wcmltaXRpdmUnKVxuICAsIGhhcyAgICAgICAgICAgID0gcmVxdWlyZSgnLi9faGFzJylcbiAgLCBJRThfRE9NX0RFRklORSA9IHJlcXVpcmUoJy4vX2llOC1kb20tZGVmaW5lJylcbiAgLCBnT1BEICAgICAgICAgICA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I7XG5cbmV4cG9ydHMuZiA9IHJlcXVpcmUoJy4vX2Rlc2NyaXB0b3JzJykgPyBnT1BEIDogZnVuY3Rpb24gZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKE8sIFApe1xuICBPID0gdG9JT2JqZWN0KE8pO1xuICBQID0gdG9QcmltaXRpdmUoUCwgdHJ1ZSk7XG4gIGlmKElFOF9ET01fREVGSU5FKXRyeSB7XG4gICAgcmV0dXJuIGdPUEQoTywgUCk7XG4gIH0gY2F0Y2goZSl7IC8qIGVtcHR5ICovIH1cbiAgaWYoaGFzKE8sIFApKXJldHVybiBjcmVhdGVEZXNjKCFwSUUuZi5jYWxsKE8sIFApLCBPW1BdKTtcbn07IiwiLy8gV29ya3Mgd2l0aCBfX3Byb3RvX18gb25seS4gT2xkIHY4IGNhbid0IHdvcmsgd2l0aCBudWxsIHByb3RvIG9iamVjdHMuXG4vKiBlc2xpbnQtZGlzYWJsZSBuby1wcm90byAqL1xudmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0JylcbiAgLCBhbk9iamVjdCA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpO1xudmFyIGNoZWNrID0gZnVuY3Rpb24oTywgcHJvdG8pe1xuICBhbk9iamVjdChPKTtcbiAgaWYoIWlzT2JqZWN0KHByb3RvKSAmJiBwcm90byAhPT0gbnVsbCl0aHJvdyBUeXBlRXJyb3IocHJvdG8gKyBcIjogY2FuJ3Qgc2V0IGFzIHByb3RvdHlwZSFcIik7XG59O1xubW9kdWxlLmV4cG9ydHMgPSB7XG4gIHNldDogT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8ICgnX19wcm90b19fJyBpbiB7fSA/IC8vIGVzbGludC1kaXNhYmxlLWxpbmVcbiAgICBmdW5jdGlvbih0ZXN0LCBidWdneSwgc2V0KXtcbiAgICAgIHRyeSB7XG4gICAgICAgIHNldCA9IHJlcXVpcmUoJy4vX2N0eCcpKEZ1bmN0aW9uLmNhbGwsIHJlcXVpcmUoJy4vX29iamVjdC1nb3BkJykuZihPYmplY3QucHJvdG90eXBlLCAnX19wcm90b19fJykuc2V0LCAyKTtcbiAgICAgICAgc2V0KHRlc3QsIFtdKTtcbiAgICAgICAgYnVnZ3kgPSAhKHRlc3QgaW5zdGFuY2VvZiBBcnJheSk7XG4gICAgICB9IGNhdGNoKGUpeyBidWdneSA9IHRydWU7IH1cbiAgICAgIHJldHVybiBmdW5jdGlvbiBzZXRQcm90b3R5cGVPZihPLCBwcm90byl7XG4gICAgICAgIGNoZWNrKE8sIHByb3RvKTtcbiAgICAgICAgaWYoYnVnZ3kpTy5fX3Byb3RvX18gPSBwcm90bztcbiAgICAgICAgZWxzZSBzZXQoTywgcHJvdG8pO1xuICAgICAgICByZXR1cm4gTztcbiAgICAgIH07XG4gICAgfSh7fSwgZmFsc2UpIDogdW5kZWZpbmVkKSxcbiAgY2hlY2s6IGNoZWNrXG59OyIsIi8vIDE5LjEuMy4xOSBPYmplY3Quc2V0UHJvdG90eXBlT2YoTywgcHJvdG8pXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xuJGV4cG9ydCgkZXhwb3J0LlMsICdPYmplY3QnLCB7c2V0UHJvdG90eXBlT2Y6IHJlcXVpcmUoJy4vX3NldC1wcm90bycpLnNldH0pOyIsIi8vIENhdXRpb246XG4vLyBEbyBub3QgcmVwbGFjZSB0aGlzIGltcG9ydCBzdGF0ZW1lbnQgd2l0aCBjb2Rlcy5cbi8vXG4vLyBJZiB5b3UgcmVwbGFjZSB0aGlzIGltcG9ydCBzdGF0ZW1lbnQgd2l0aCBjb2Rlcyxcbi8vIHRoZSBjb2RlcyB3aWxsIGJlIGV4ZWN1dGVkIGFmdGVyIHRoZSBmb2xsb3dpbmcgcG9seWZpbGxzIGFyZSBpbXBvcnRlZFxuLy8gYmVjYXVzZSBpbXBvcnQgc3RhdGVtZW50cyBhcmUgaG9pc3RlZCBkdXJpbmcgY29tcGlsYXRpb24uXG5pbXBvcnQgJy4vcG9seWZpbGwtc3dpdGNoZXMnO1xuXG4vLyBQb2x5ZmlsbCBDdXN0b20gRWxlbWVudHMgdjEgd2l0aCBnbG9iYWwgbmFtZXNwYWNlIHBvbGx1dGlvblxuaW1wb3J0ICdAd2ViY29tcG9uZW50cy9jdXN0b20tZWxlbWVudHMnO1xuXG4vLyBQb2x5ZmlsbCBgT2JqZWN0LnNldFByb3RvdHlwZU9mYCB3aXRoIGdsb2JhbCBuYW1lc3BhY2UgcG9sbHV0aW9uXG5pbXBvcnQgJ2NvcmUtanMvZm4vb2JqZWN0L3NldC1wcm90b3R5cGUtb2YnO1xuIiwiLypcbkNvcHlyaWdodCAyMDEzLTIwMTUgQVNJQUwgQ09SUE9SQVRJT05cblxuTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbnlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbllvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuXG4gICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcblxuVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG5TZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG5saW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cblxuKi9cblxuLyoqXG4gKiBAb2JqZWN0IG9ucy5wbGF0Zm9ybVxuICogQGNhdGVnb3J5IHV0aWxcbiAqIEBkZXNjcmlwdGlvblxuICogICBbZW5dVXRpbGl0eSBtZXRob2RzIHRvIGRldGVjdCBjdXJyZW50IHBsYXRmb3JtLlsvZW5dXG4gKiAgIFtqYV3nj77lnKjlrp/ooYzjgZXjgozjgabjgYTjgovjg5fjg6njg4Pjg4jjg5Xjgqnjg7zjg6DjgpLmpJznn6XjgZnjgovjgZ/jgoHjga7jg6bjg7zjg4bjgqPjg6rjg4bjgqPjg6Hjgr3jg4Pjg4njgpLlj47jgoHjgZ/jgqrjg5bjgrjjgqfjgq/jg4jjgafjgZnjgIJbL2phXVxuICovXG5jbGFzcyBQbGF0Zm9ybSB7XG5cbiAgLyoqXG4gICAqIEFsbCBlbGVtZW50cyB3aWxsIGJlIHJlbmRlcmVkIGFzIGlmIHRoZSBhcHAgd2FzIHJ1bm5pbmcgb24gdGhpcyBwbGF0Zm9ybS5cbiAgICogQHR5cGUge1N0cmluZ31cbiAgICovXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHRoaXMuX3JlbmRlclBsYXRmb3JtID0gbnVsbDtcbiAgfVxuXG4gIC8qKlxuICAgKiBAbWV0aG9kIHNlbGVjdFxuICAgKiBAc2lnbmF0dXJlIHNlbGVjdChwbGF0Zm9ybSlcbiAgICogQHBhcmFtICB7c3RyaW5nfSBwbGF0Zm9ybSBOYW1lIG9mIHRoZSBwbGF0Zm9ybS5cbiAgICogICBbZW5dUG9zc2libGUgdmFsdWVzIGFyZTogXCJvcGVyYVwiLCBcImZpcmVmb3hcIiwgXCJzYWZhcmlcIiwgXCJjaHJvbWVcIiwgXCJpZVwiLCBcImFuZHJvaWRcIiwgXCJibGFja2JlcnJ5XCIsIFwiaW9zXCIgb3IgXCJ3cFwiLlsvZW5dXG4gICAqICAgW2phXVwib3BlcmFcIiwgXCJmaXJlZm94XCIsIFwic2FmYXJpXCIsIFwiY2hyb21lXCIsIFwiaWVcIiwgXCJhbmRyb2lkXCIsIFwiYmxhY2tiZXJyeVwiLCBcImlvc1wiLCBcIndwXCLjga7jgYTjgZrjgozjgYvjgpLmjIflrprjgZfjgb7jgZnjgIJbL2phXVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dU2V0cyB0aGUgcGxhdGZvcm0gdXNlZCB0byByZW5kZXIgdGhlIGVsZW1lbnRzLiBVc2VmdWwgZm9yIHRlc3RpbmcuWy9lbl1cbiAgICogICBbamFd6KaB57Sg44KS5o+P55S744GZ44KL44Gf44KB44Gr5Yip55So44GZ44KL44OX44Op44OD44OI44OV44Kp44O844Og5ZCN44KS6Kit5a6a44GX44G+44GZ44CC44OG44K544OI44Gr5L6/5Yip44Gn44GZ44CCWy9qYV1cbiAgICovXG4gIHNlbGVjdChwbGF0Zm9ybSkge1xuICAgIGlmICh0eXBlb2YgcGxhdGZvcm0gPT09ICdzdHJpbmcnKSB7XG4gICAgICB0aGlzLl9yZW5kZXJQbGF0Zm9ybSA9IHBsYXRmb3JtLnRyaW0oKS50b0xvd2VyQ2FzZSgpO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBAbWV0aG9kIGlzV2ViVmlld1xuICAgKiBAc2lnbmF0dXJlIGlzV2ViVmlldygpXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1SZXR1cm5zIHdoZXRoZXIgYXBwIGlzIHJ1bm5pbmcgaW4gQ29yZG92YS5bL2VuXVxuICAgKiAgIFtqYV1Db3Jkb3Zh5YaF44Gn5a6f6KGM44GV44KM44Gm44GE44KL44GL44Gp44GG44GL44KS6L+U44GX44G+44GZ44CCWy9qYV1cbiAgICogQHJldHVybiB7Qm9vbGVhbn1cbiAgICovXG4gIGlzV2ViVmlldygpIHtcbiAgICBpZiAoZG9jdW1lbnQucmVhZHlTdGF0ZSA9PT0gJ2xvYWRpbmcnIHx8IGRvY3VtZW50LnJlYWR5U3RhdGUgPT0gJ3VuaW5pdGlhbGl6ZWQnKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ2lzV2ViVmlldygpIG1ldGhvZCBpcyBhdmFpbGFibGUgYWZ0ZXIgZG9tIGNvbnRlbnRzIGxvYWRlZC4nKTtcbiAgICB9XG5cbiAgICByZXR1cm4gISEod2luZG93LmNvcmRvdmEgfHwgd2luZG93LnBob25lZ2FwIHx8IHdpbmRvdy5QaG9uZUdhcCk7XG4gIH1cblxuICAvKipcbiAgICogQG1ldGhvZCBpc0lPU1xuICAgKiBAc2lnbmF0dXJlIGlzSU9TKClcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXVJldHVybnMgd2hldGhlciB0aGUgT1MgaXMgaU9TLlsvZW5dXG4gICAqICAgW2phXWlPU+S4iuOBp+Wun+ihjOOBleOCjOOBpuOBhOOCi+OBi+OBqeOBhuOBi+OCkui/lOOBl+OBvuOBmeOAglsvamFdXG4gICAqIEByZXR1cm4ge0Jvb2xlYW59XG4gICAqL1xuICBpc0lPUygpIHtcbiAgICBpZiAodGhpcy5fcmVuZGVyUGxhdGZvcm0pIHtcbiAgICAgIHJldHVybiB0aGlzLl9yZW5kZXJQbGF0Zm9ybSA9PT0gJ2lvcyc7XG4gICAgfSBlbHNlIGlmICh0eXBlb2YgZGV2aWNlID09PSAnb2JqZWN0JyAmJiAhL2Jyb3dzZXIvaS50ZXN0KGRldmljZS5wbGF0Zm9ybSkpIHtcbiAgICAgIHJldHVybiAvaU9TL2kudGVzdChkZXZpY2UucGxhdGZvcm0pO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gL2lQaG9uZXxpUGFkfGlQb2QvaS50ZXN0KG5hdmlnYXRvci51c2VyQWdlbnQpO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBAbWV0aG9kIGlzQW5kcm9pZFxuICAgKiBAc2lnbmF0dXJlIGlzQW5kcm9pZCgpXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1SZXR1cm5zIHdoZXRoZXIgdGhlIE9TIGlzIEFuZHJvaWQuWy9lbl1cbiAgICogICBbamFdQW5kcm9pZOS4iuOBp+Wun+ihjOOBleOCjOOBpuOBhOOCi+OBi+OBqeOBhuOBi+OCkui/lOOBl+OBvuOBmeOAglsvamFdXG4gICAqIEByZXR1cm4ge0Jvb2xlYW59XG4gICAqL1xuICBpc0FuZHJvaWQoKSB7XG4gICAgaWYgKHRoaXMuX3JlbmRlclBsYXRmb3JtKSB7XG4gICAgICByZXR1cm4gdGhpcy5fcmVuZGVyUGxhdGZvcm0gPT09ICdhbmRyb2lkJztcbiAgICB9IGVsc2UgaWYgKHR5cGVvZiBkZXZpY2UgPT09ICdvYmplY3QnICYmICEvYnJvd3Nlci9pLnRlc3QoZGV2aWNlLnBsYXRmb3JtKSkge1xuICAgICAgcmV0dXJuIC9BbmRyb2lkL2kudGVzdChkZXZpY2UucGxhdGZvcm0pO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gL0FuZHJvaWQvaS50ZXN0KG5hdmlnYXRvci51c2VyQWdlbnQpO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBAbWV0aG9kIGlzQW5kcm9pZFBob25lXG4gICAqIEBzaWduYXR1cmUgaXNBbmRyb2lkUGhvbmUoKVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dUmV0dXJucyB3aGV0aGVyIHRoZSBkZXZpY2UgaXMgQW5kcm9pZCBwaG9uZS5bL2VuXVxuICAgKiAgIFtqYV1BbmRyb2lk5pC65biv5LiK44Gn5a6f6KGM44GV44KM44Gm44GE44KL44GL44Gp44GG44GL44KS6L+U44GX44G+44GZ44CCWy9qYV1cbiAgICogQHJldHVybiB7Qm9vbGVhbn1cbiAgICovXG4gIGlzQW5kcm9pZFBob25lKCkge1xuICAgIHJldHVybiAvQW5kcm9pZC9pLnRlc3QobmF2aWdhdG9yLnVzZXJBZ2VudCkgJiYgL01vYmlsZS9pLnRlc3QobmF2aWdhdG9yLnVzZXJBZ2VudCk7XG4gIH1cblxuICAvKipcbiAgICogQG1ldGhvZCBpc0FuZHJvaWRUYWJsZXRcbiAgICogQHNpZ25hdHVyZSBpc0FuZHJvaWRUYWJsZXQoKVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dUmV0dXJucyB3aGV0aGVyIHRoZSBkZXZpY2UgaXMgQW5kcm9pZCB0YWJsZXQuWy9lbl1cbiAgICogICBbamFdQW5kcm9pZOOCv+ODluODrOODg+ODiOS4iuOBp+Wun+ihjOOBleOCjOOBpuOBhOOCi+OBi+OBqeOBhuOBi+OCkui/lOOBl+OBvuOBmeOAglsvamFdXG4gICAqIEByZXR1cm4ge0Jvb2xlYW59XG4gICAqL1xuICBpc0FuZHJvaWRUYWJsZXQoKSB7XG4gICAgcmV0dXJuIC9BbmRyb2lkL2kudGVzdChuYXZpZ2F0b3IudXNlckFnZW50KSAmJiAhL01vYmlsZS9pLnRlc3QobmF2aWdhdG9yLnVzZXJBZ2VudCk7XG4gIH1cblxuICAvKipcbiAgICogQHJldHVybiB7Qm9vbGVhbn1cbiAgICovXG4gIGlzV1AoKSB7XG4gICAgaWYgKHRoaXMuX3JlbmRlclBsYXRmb3JtKSB7XG4gICAgICByZXR1cm4gdGhpcy5fcmVuZGVyUGxhdGZvcm0gPT09ICd3cCc7XG4gICAgfSBlbHNlIGlmICh0eXBlb2YgZGV2aWNlID09PSAnb2JqZWN0JyAmJiAhL2Jyb3dzZXIvaS50ZXN0KGRldmljZS5wbGF0Zm9ybSkpIHtcbiAgICAgIHJldHVybiAvV2luMzJOVHxXaW5DRS9pLnRlc3QoZGV2aWNlLnBsYXRmb3JtKTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIC9XaW5kb3dzIFBob25lfElFTW9iaWxlfFdQRGVza3RvcC9pLnRlc3QobmF2aWdhdG9yLnVzZXJBZ2VudCk7XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIEBtZXRob3MgaXNJUGhvbmVcbiAgICogQHNpZ25hdHVyZSBpc0lQaG9uZSgpXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1SZXR1cm5zIHdoZXRoZXIgdGhlIGRldmljZSBpcyBpUGhvbmUuWy9lbl1cbiAgICogICBbamFdaVBob25l5LiK44Gn5a6f6KGM44GV44KM44Gm44GE44KL44GL44Gp44GG44GL44KS6L+U44GX44G+44GZ44CCWy9qYV1cbiAgICogQHJldHVybiB7Qm9vbGVhbn1cbiAgICovXG4gIGlzSVBob25lKCkge1xuICAgIHJldHVybiAvaVBob25lL2kudGVzdChuYXZpZ2F0b3IudXNlckFnZW50KTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAbWV0aG9kIGlzSVBhZFxuICAgKiBAc2lnbmF0dXJlIGlzSVBhZCgpXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1SZXR1cm5zIHdoZXRoZXIgdGhlIGRldmljZSBpcyBpUGFkLlsvZW5dXG4gICAqICAgW2phXWlQYWTkuIrjgaflrp/ooYzjgZXjgozjgabjgYTjgovjgYvjganjgYbjgYvjgpLov5TjgZfjgb7jgZnjgIJbL2phXVxuICAgKiBAcmV0dXJuIHtCb29sZWFufVxuICAgKi9cbiAgaXNJUGFkKCkge1xuICAgIHJldHVybiAvaVBhZC9pLnRlc3QobmF2aWdhdG9yLnVzZXJBZ2VudCk7XG4gIH1cblxuICAvKipcbiAgICogQHJldHVybiB7Qm9vbGVhbn1cbiAgICovXG4gIGlzSVBvZCgpIHtcbiAgICByZXR1cm4gL2lQb2QvaS50ZXN0KG5hdmlnYXRvci51c2VyQWdlbnQpO1xuICB9XG5cbiAgLyoqXG4gICAqIEBtZXRob2QgaXNCbGFja0JlcnJ5XG4gICAqIEBzaWduYXR1cmUgaXNCbGFja0JlcnJ5KClcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXVJldHVybnMgd2hldGhlciB0aGUgZGV2aWNlIGlzIEJsYWNrQmVycnkuWy9lbl1cbiAgICogICBbamFdQmxhY2tCZXJyeeS4iuOBp+Wun+ihjOOBleOCjOOBpuOBhOOCi+OBi+OBqeOBhuOBi+OCkui/lOOBl+OBvuOBmeOAglsvamFdXG4gICAqIEByZXR1cm4ge0Jvb2xlYW59XG4gICAqL1xuICBpc0JsYWNrQmVycnkoKSB7XG4gICAgaWYgKHRoaXMuX3JlbmRlclBsYXRmb3JtKSB7XG4gICAgICByZXR1cm4gdGhpcy5fcmVuZGVyUGxhdGZvcm0gPT09ICdibGFja2JlcnJ5JztcbiAgICB9IGVsc2UgaWYgKHR5cGVvZiBkZXZpY2UgPT09ICdvYmplY3QnICYmICEvYnJvd3Nlci9pLnRlc3QoZGV2aWNlLnBsYXRmb3JtKSkge1xuICAgICAgcmV0dXJuIC9CbGFja0JlcnJ5L2kudGVzdChkZXZpY2UucGxhdGZvcm0pO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gL0JsYWNrQmVycnl8UklNIFRhYmxldCBPU3xCQjEwL2kudGVzdChuYXZpZ2F0b3IudXNlckFnZW50KTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogQG1ldGhvZCBpc09wZXJhXG4gICAqIEBzaWduYXR1cmUgaXNPcGVyYSgpXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1SZXR1cm5zIHdoZXRoZXIgdGhlIGJyb3dzZXIgaXMgT3BlcmEuWy9lbl1cbiAgICogICBbamFdT3BlcmHkuIrjgaflrp/ooYzjgZXjgozjgabjgYTjgovjgYvjganjgYbjgYvjgpLov5TjgZfjgb7jgZnjgIJbL2phXVxuICAgKiBAcmV0dXJuIHtCb29sZWFufVxuICAgKi9cbiAgaXNPcGVyYSgpIHtcbiAgICBpZiAodGhpcy5fcmVuZGVyUGxhdGZvcm0pIHtcbiAgICAgIHJldHVybiB0aGlzLl9yZW5kZXJQbGF0Zm9ybSA9PT0gJ29wZXJhJztcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuICghIXdpbmRvdy5vcGVyYSB8fCBuYXZpZ2F0b3IudXNlckFnZW50LmluZGV4T2YoJyBPUFIvJykgPj0gMCk7XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIEBtZXRob2QgaXNGaXJlZm94XG4gICAqIEBzaWduYXR1cmUgaXNGaXJlZm94KClcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXVJldHVybnMgd2hldGhlciB0aGUgYnJvd3NlciBpcyBGaXJlZm94LlsvZW5dXG4gICAqICAgW2phXUZpcmVmb3jkuIrjgaflrp/ooYzjgZXjgozjgabjgYTjgovjgYvjganjgYbjgYvjgpLov5TjgZfjgb7jgZnjgIJbL2phXVxuICAgKiBAcmV0dXJuIHtCb29sZWFufVxuICAgKi9cbiAgaXNGaXJlZm94KCkge1xuICAgIGlmICh0aGlzLl9yZW5kZXJQbGF0Zm9ybSkge1xuICAgICAgcmV0dXJuIHRoaXMuX3JlbmRlclBsYXRmb3JtID09PSAnZmlyZWZveCc7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiAodHlwZW9mIEluc3RhbGxUcmlnZ2VyICE9PSAndW5kZWZpbmVkJyk7XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIEBtZXRob2QgaXNTYWZhcmlcbiAgICogQHNpZ25hdHVyZSBpc1NhZmFyaSgpXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1SZXR1cm5zIHdoZXRoZXIgdGhlIGJyb3dzZXIgaXMgU2FmYXJpLlsvZW5dXG4gICAqICAgW2phXVNhZmFyaeS4iuOBp+Wun+ihjOOBleOCjOOBpuOBhOOCi+OBi+OBqeOBhuOBi+OCkui/lOOBl+OBvuOBmeOAglsvamFdXG4gICAqIEByZXR1cm4ge0Jvb2xlYW59XG4gICAqL1xuICBpc1NhZmFyaSgpIHtcbiAgICBpZiAodGhpcy5fcmVuZGVyUGxhdGZvcm0pIHtcbiAgICAgIHJldHVybiB0aGlzLl9yZW5kZXJQbGF0Zm9ybSA9PT0gJ3NhZmFyaSc7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiAoT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHdpbmRvdy5IVE1MRWxlbWVudCkuaW5kZXhPZignQ29uc3RydWN0b3InKSA+IDApIHx8IChmdW5jdGlvbiAocCkgeyByZXR1cm4gcC50b1N0cmluZygpID09PSAnW29iamVjdCBTYWZhcmlSZW1vdGVOb3RpZmljYXRpb25dJyB9KSghd2luZG93WydzYWZhcmknXSB8fCBzYWZhcmkucHVzaE5vdGlmaWNhdGlvbik7XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIEBtZXRob2QgaXNDaHJvbWVcbiAgICogQHNpZ25hdHVyZSBpc0Nocm9tZSgpXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1SZXR1cm5zIHdoZXRoZXIgdGhlIGJyb3dzZXIgaXMgQ2hyb21lLlsvZW5dXG4gICAqICAgW2phXUNocm9tZeS4iuOBp+Wun+ihjOOBleOCjOOBpuOBhOOCi+OBi+OBqeOBhuOBi+OCkui/lOOBl+OBvuOBmeOAglsvamFdXG4gICAqIEByZXR1cm4ge0Jvb2xlYW59XG4gICAqL1xuICBpc0Nocm9tZSgpIHtcbiAgICBpZiAodGhpcy5fcmVuZGVyUGxhdGZvcm0pIHtcbiAgICAgIHJldHVybiB0aGlzLl9yZW5kZXJQbGF0Zm9ybSA9PT0gJ2Nocm9tZSc7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiAoISF3aW5kb3cuY2hyb21lICYmICEoISF3aW5kb3cub3BlcmEgfHwgbmF2aWdhdG9yLnVzZXJBZ2VudC5pbmRleE9mKCcgT1BSLycpID49IDApICYmICEobmF2aWdhdG9yLnVzZXJBZ2VudC5pbmRleE9mKCcgRWRnZS8nKSA+PSAwKSk7XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIEBtZXRob2QgaXNJRVxuICAgKiBAc2lnbmF0dXJlIGlzSUUoKVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dUmV0dXJucyB3aGV0aGVyIHRoZSBicm93c2VyIGlzIEludGVybmV0IEV4cGxvcmVyLlsvZW5dXG4gICAqICAgW2phXUludGVybmV0IEV4cGxvcmVy5LiK44Gn5a6f6KGM44GV44KM44Gm44GE44KL44GL44Gp44GG44GL44KS6L+U44GX44G+44GZ44CCWy9qYV1cbiAgICogQHJldHVybiB7Qm9vbGVhbn1cbiAgICovXG4gIGlzSUUoKSB7XG4gICAgaWYgKHRoaXMuX3JlbmRlclBsYXRmb3JtKSB7XG4gICAgICByZXR1cm4gdGhpcy5fcmVuZGVyUGxhdGZvcm0gPT09ICdpZSc7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBmYWxzZSB8fCAhIWRvY3VtZW50LmRvY3VtZW50TW9kZTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogQG1ldGhvZCBpc0VkZ2VcbiAgICogQHNpZ25hdHVyZSBpc0VkZ2UoKVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dUmV0dXJucyB3aGV0aGVyIHRoZSBicm93c2VyIGlzIEVkZ2UuWy9lbl1cbiAgICogICBbamFdRWRnZeS4iuOBp+Wun+ihjOOBleOCjOOBpuOBhOOCi+OBi+OBqeOBhuOBi+OCkui/lOOBl+OBvuOBmeOAglsvamFdXG4gICAqIEByZXR1cm4ge0Jvb2xlYW59XG4gICAqL1xuICBpc0VkZ2UoKSB7XG4gICAgaWYgKHRoaXMuX3JlbmRlclBsYXRmb3JtKSB7XG4gICAgICByZXR1cm4gdGhpcy5fcmVuZGVyUGxhdGZvcm0gPT09ICdlZGdlJztcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIG5hdmlnYXRvci51c2VyQWdlbnQuaW5kZXhPZignIEVkZ2UvJykgPj0gMDtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogQG1ldGhvZCBpc0lPUzdhYm92ZVxuICAgKiBAc2lnbmF0dXJlIGlzSU9TN2Fib3ZlKClcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXVJldHVybnMgd2hldGhlciB0aGUgaU9TIHZlcnNpb24gaXMgNyBvciBhYm92ZS5bL2VuXVxuICAgKiAgIFtqYV1pT1M35Lul5LiK44Gn5a6f6KGM44GV44KM44Gm44GE44KL44GL44Gp44GG44GL44KS6L+U44GX44G+44GZ44CCWy9qYV1cbiAgICogQHJldHVybiB7Qm9vbGVhbn1cbiAgICovXG4gIGlzSU9TN2Fib3ZlKCkge1xuICAgIGlmICh0eXBlb2YgZGV2aWNlID09PSAnb2JqZWN0JyAmJiAhL2Jyb3dzZXIvaS50ZXN0KGRldmljZS5wbGF0Zm9ybSkpIHtcbiAgICAgIHJldHVybiAoL2lPUy9pLnRlc3QoZGV2aWNlLnBsYXRmb3JtKSAmJiAocGFyc2VJbnQoZGV2aWNlLnZlcnNpb24uc3BsaXQoJy4nKVswXSkgPj0gNykpO1xuICAgIH0gZWxzZSBpZigvaVBob25lfGlQYWR8aVBvZC9pLnRlc3QobmF2aWdhdG9yLnVzZXJBZ2VudCkpIHtcbiAgICAgIGNvbnN0IHZlciA9IChuYXZpZ2F0b3IudXNlckFnZW50Lm1hdGNoKC9cXGJbMC05XStfWzAtOV0rKD86X1swLTldKyk/XFxiLykgfHwgWycnXSlbMF0ucmVwbGFjZSgvXy9nLCAnLicpO1xuICAgICAgcmV0dXJuIChwYXJzZUludCh2ZXIuc3BsaXQoJy4nKVswXSkgPj0gNyk7XG4gICAgfVxuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcmV0dXJuIHtTdHJpbmd9XG4gICAqL1xuICBnZXRNb2JpbGVPUygpIHtcbiAgICBpZiAodGhpcy5pc0FuZHJvaWQoKSkge1xuICAgICAgcmV0dXJuICdhbmRyb2lkJztcbiAgICB9XG4gICAgZWxzZSBpZiAodGhpcy5pc0lPUygpKSB7XG4gICAgICByZXR1cm4gJ2lvcyc7XG4gICAgfVxuICAgIGVsc2UgaWYgKHRoaXMuaXNXUCgpKSB7XG4gICAgICByZXR1cm4gJ3dwJztcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICByZXR1cm4gJ290aGVyJztcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogQHJldHVybiB7U3RyaW5nfVxuICAgKi9cbiAgZ2V0SU9TRGV2aWNlKCkge1xuICAgIGlmICh0aGlzLmlzSVBob25lKCkpIHtcbiAgICAgIHJldHVybiAnaXBob25lJztcbiAgICB9XG4gICAgZWxzZSBpZiAodGhpcy5pc0lQYWQoKSkge1xuICAgICAgcmV0dXJuICdpcGFkJztcbiAgICB9XG4gICAgZWxzZSBpZiAodGhpcy5pc0lQb2QoKSkge1xuICAgICAgcmV0dXJuICdpcG9kJztcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICByZXR1cm4gJ25hJztcbiAgICB9XG4gIH1cbn1cblxuXG5leHBvcnQgZGVmYXVsdCBuZXcgUGxhdGZvcm0oKTtcbiIsIi8qXG5Db3B5cmlnaHQgMjAxMy0yMDE1IEFTSUFMIENPUlBPUkFUSU9OXG5cbkxpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG55b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG5Zb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcblxuICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG5cblVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbmRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbldJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxubGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5cbiovXG5cbmltcG9ydCBwbGF0Zm9ybSBmcm9tICcuL3BsYXRmb3JtJztcblxuY29uc3QgcGFnZUF0dHJpYnV0ZUV4cHJlc3Npb24gPSB7XG4gIF92YXJpYWJsZXM6IHt9LFxuXG4gIC8qKlxuICAgKiBEZWZpbmUgYSB2YXJpYWJsZS5cbiAgICpcbiAgICogQHBhcmFtIHtTdHJpbmd9IG5hbWUgTmFtZSBvZiB0aGUgdmFyaWFibGVcbiAgICogQHBhcmFtIHtTdHJpbmd8RnVuY3Rpb259IHZhbHVlIFZhbHVlIG9mIHRoZSB2YXJpYWJsZS4gQ2FuIGJlIGEgc3RyaW5nIG9yIGEgZnVuY3Rpb24uIFRoZSBmdW5jdGlvbiBtdXN0IHJldHVybiBhIHN0cmluZy5cbiAgICogQHBhcmFtIHtCb29sZWFufSBvdmVyd3JpdGUgSWYgdGhpcyB2YWx1ZSBpcyBmYWxzZSwgYW4gZXJyb3Igd2lsbCBiZSB0aHJvd24gd2hlbiB0cnlpbmcgdG8gZGVmaW5lIGEgdmFyaWFibGUgdGhhdCBoYXMgYWxyZWFkeSBiZWVuIGRlZmluZWQuXG4gICAqL1xuICBkZWZpbmVWYXJpYWJsZTogZnVuY3Rpb24obmFtZSwgdmFsdWUsIG92ZXJ3cml0ZT1mYWxzZSkge1xuICAgIGlmICh0eXBlb2YgbmFtZSAhPT0gJ3N0cmluZycpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignVmFyaWFibGUgbmFtZSBtdXN0IGJlIGEgc3RyaW5nLicpO1xuICAgIH1cbiAgICBlbHNlIGlmICh0eXBlb2YgdmFsdWUgIT09ICdzdHJpbmcnICYmIHR5cGVvZiB2YWx1ZSAhPT0gJ2Z1bmN0aW9uJykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdWYXJpYWJsZSB2YWx1ZSBtdXN0IGJlIGEgc3RyaW5nIG9yIGEgZnVuY3Rpb24uJyk7XG4gICAgfVxuICAgIGVsc2UgaWYgKHRoaXMuX3ZhcmlhYmxlcy5oYXNPd25Qcm9wZXJ0eShuYW1lKSAmJiAhb3ZlcndyaXRlKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYFwiJHtuYW1lfVwiIGlzIGFscmVhZHkgZGVmaW5lZC5gKTtcbiAgICB9XG4gICAgdGhpcy5fdmFyaWFibGVzW25hbWVdID0gdmFsdWU7XG4gIH0sXG5cbiAgLyoqXG4gICAqIEdldCBhIHZhcmlhYmxlLlxuICAgKlxuICAgKiBAcGFyYW0ge1N0cmluZ30gbmFtZSBOYW1lIG9mIHRoZSB2YXJpYWJsZS5cbiAgICogQHJldHVybiB7U3RyaW5nfEZ1bmN0aW9ufG51bGx9XG4gICAqL1xuICBnZXRWYXJpYWJsZTogZnVuY3Rpb24obmFtZSkge1xuICAgIGlmICghdGhpcy5fdmFyaWFibGVzLmhhc093blByb3BlcnR5KG5hbWUpKSB7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG5cbiAgICByZXR1cm4gdGhpcy5fdmFyaWFibGVzW25hbWVdO1xuICB9LFxuXG4gIC8qKlxuICAgKiBSZW1vdmUgYSB2YXJpYWJsZS5cbiAgICpcbiAgICogQHBhcmFtIHtTdHJpbmd9IG5hbWUgTmFtZSBvZiB0aGUgdmFyYWlibGUuXG4gICAqL1xuICByZW1vdmVWYXJpYWJsZTogZnVuY3Rpb24obmFtZSkge1xuICAgIGRlbGV0ZSB0aGlzLl92YXJpYWJsZXNbbmFtZV07XG4gIH0sXG5cbiAgLyoqXG4gICAqIEdldCBhbGwgdmFyaWFibGVzLlxuICAgKlxuICAgKiBAcmV0dXJuIHtPYmplY3R9XG4gICAqL1xuICBnZXRBbGxWYXJpYWJsZXM6IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB0aGlzLl92YXJpYWJsZXM7XG4gIH0sXG4gIF9wYXJzZVBhcnQ6IGZ1bmN0aW9uKHBhcnQpIHtcbiAgICBsZXQgYyxcbiAgICAgIGluSW50ZXJwb2xhdGlvbiA9IGZhbHNlLFxuICAgICAgY3VycmVudEluZGV4ID0gMDtcblxuICAgIGNvbnN0IHRva2VucyA9IFtdO1xuXG4gICAgaWYgKHBhcnQubGVuZ3RoID09PSAwKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ1VuYWJsZSB0byBwYXJzZSBlbXB0eSBzdHJpbmcuJyk7XG4gICAgfVxuXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBwYXJ0Lmxlbmd0aDsgaSsrKSB7XG4gICAgICBjID0gcGFydC5jaGFyQXQoaSk7XG5cbiAgICAgIGlmIChjID09PSAnJCcgJiYgcGFydC5jaGFyQXQoaSArIDEpID09PSAneycpIHtcbiAgICAgICAgaWYgKGluSW50ZXJwb2xhdGlvbikge1xuICAgICAgICAgIHRocm93IG5ldyBFcnJvcignTmVzdGVkIGludGVycG9sYXRpb24gbm90IHN1cHBvcnRlZC4nKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IHRva2VuID0gcGFydC5zdWJzdHJpbmcoY3VycmVudEluZGV4LCBpKTtcbiAgICAgICAgaWYgKHRva2VuLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICB0b2tlbnMucHVzaChwYXJ0LnN1YnN0cmluZyhjdXJyZW50SW5kZXgsIGkpKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGN1cnJlbnRJbmRleCA9IGk7XG4gICAgICAgIGluSW50ZXJwb2xhdGlvbiA9IHRydWU7XG4gICAgICB9XG4gICAgICBlbHNlIGlmIChjID09PSAnfScpIHtcbiAgICAgICAgaWYgKCFpbkludGVycG9sYXRpb24pIHtcbiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ30gbXVzdCBiZSBwcmVjZWVkZWQgYnkgJHsnKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IHRva2VuID0gcGFydC5zdWJzdHJpbmcoY3VycmVudEluZGV4LCBpICsgMSk7XG4gICAgICAgIGlmICh0b2tlbi5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgdG9rZW5zLnB1c2gocGFydC5zdWJzdHJpbmcoY3VycmVudEluZGV4LCBpICsgMSkpO1xuICAgICAgICB9XG5cbiAgICAgICAgY3VycmVudEluZGV4ID0gaSArIDE7XG4gICAgICAgIGluSW50ZXJwb2xhdGlvbiA9IGZhbHNlO1xuICAgICAgfVxuICAgIH1cblxuICAgIGlmIChpbkludGVycG9sYXRpb24pIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignVW50ZXJtaW5hdGVkIGludGVycG9sYXRpb24uJyk7XG4gICAgfVxuXG4gICAgdG9rZW5zLnB1c2gocGFydC5zdWJzdHJpbmcoY3VycmVudEluZGV4LCBwYXJ0Lmxlbmd0aCkpO1xuXG4gICAgcmV0dXJuIHRva2VucztcbiAgfSxcbiAgX3JlcGxhY2VUb2tlbjogZnVuY3Rpb24odG9rZW4pIHtcbiAgICBjb25zdCByZSA9IC9eXFwkeyguKj8pfSQvLFxuICAgICAgbWF0Y2ggPSB0b2tlbi5tYXRjaChyZSk7XG5cbiAgICBpZiAobWF0Y2gpIHtcbiAgICAgIGNvbnN0IG5hbWUgPSBtYXRjaFsxXS50cmltKCk7XG4gICAgICBjb25zdCB2YXJpYWJsZSA9IHRoaXMuZ2V0VmFyaWFibGUobmFtZSk7XG5cbiAgICAgIGlmICh2YXJpYWJsZSA9PT0gbnVsbCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFZhcmlhYmxlIFwiJHtuYW1lfVwiIGRvZXMgbm90IGV4aXN0LmApO1xuICAgICAgfVxuICAgICAgZWxzZSBpZiAodHlwZW9mIHZhcmlhYmxlID09PSAnc3RyaW5nJykge1xuICAgICAgICByZXR1cm4gdmFyaWFibGU7XG4gICAgICB9XG4gICAgICBlbHNlIHtcbiAgICAgICAgY29uc3QgcnYgPSB2YXJpYWJsZSgpO1xuXG4gICAgICAgIGlmICh0eXBlb2YgcnYgIT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdNdXN0IHJldHVybiBhIHN0cmluZy4nKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBydjtcbiAgICAgIH1cbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICByZXR1cm4gdG9rZW47XG4gICAgfVxuICB9LFxuICBfcmVwbGFjZVRva2VuczogZnVuY3Rpb24odG9rZW5zKSB7XG4gICAgcmV0dXJuIHRva2Vucy5tYXAodGhpcy5fcmVwbGFjZVRva2VuLmJpbmQodGhpcykpO1xuICB9LFxuICBfcGFyc2VFeHByZXNzaW9uOiBmdW5jdGlvbihleHByZXNzaW9uKSB7XG4gICAgcmV0dXJuIGV4cHJlc3Npb24uc3BsaXQoJywnKVxuICAgICAgLm1hcChcbiAgICAgICAgZnVuY3Rpb24ocGFydCkge1xuICAgICAgICAgIHJldHVybiBwYXJ0LnRyaW0oKTtcbiAgICAgICAgfVxuICAgICAgKVxuICAgICAgLm1hcCh0aGlzLl9wYXJzZVBhcnQuYmluZCh0aGlzKSlcbiAgICAgIC5tYXAodGhpcy5fcmVwbGFjZVRva2Vucy5iaW5kKHRoaXMpKVxuICAgICAgLm1hcCgocGFydCkgPT4gcGFydC5qb2luKCcnKSk7XG4gIH0sXG5cbiAgLyoqXG4gICAqIEV2YWx1YXRlIGFuIGV4cHJlc3Npb24uXG4gICAqXG4gICAqIEBwYXJhbSB7U3RyaW5nfSBleHByZXNzaW9uIEFuIHBhZ2UgYXR0cmlidXRlIGV4cHJlc3Npb24uXG4gICAqIEByZXR1cm4ge0FycmF5fVxuICAgKi9cbiAgZXZhbHVhdGU6IGZ1bmN0aW9uKGV4cHJlc3Npb24pIHtcbiAgICBpZiAoIWV4cHJlc3Npb24pIHtcbiAgICAgIHJldHVybiBbXTtcbiAgICB9XG5cbiAgICByZXR1cm4gdGhpcy5fcGFyc2VFeHByZXNzaW9uKGV4cHJlc3Npb24pO1xuICB9XG59O1xuXG4vLyBEZWZpbmUgZGVmYXVsdCB2YXJpYWJsZXMuXG5wYWdlQXR0cmlidXRlRXhwcmVzc2lvbi5kZWZpbmVWYXJpYWJsZSgnbW9iaWxlT1MnLCBwbGF0Zm9ybS5nZXRNb2JpbGVPUygpKTtcbnBhZ2VBdHRyaWJ1dGVFeHByZXNzaW9uLmRlZmluZVZhcmlhYmxlKCdpT1NEZXZpY2UnLCBwbGF0Zm9ybS5nZXRJT1NEZXZpY2UoKSk7XG5wYWdlQXR0cmlidXRlRXhwcmVzc2lvbi5kZWZpbmVWYXJpYWJsZSgncnVudGltZScsICgpID0+IHtcbiAgcmV0dXJuIHBsYXRmb3JtLmlzV2ViVmlldygpID8gJ2NvcmRvdmEnIDogJ2Jyb3dzZXInO1xufSk7XG5cbmV4cG9ydCBkZWZhdWx0IHBhZ2VBdHRyaWJ1dGVFeHByZXNzaW9uO1xuIiwiLypcbkNvcHlyaWdodCAyMDEzLTIwMTUgQVNJQUwgQ09SUE9SQVRJT05cblxuTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbnlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbllvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuXG4gICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcblxuVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG5TZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG5saW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cblxuKi9cblxuaW1wb3J0IHBsYXRmb3JtIGZyb20gJy4uL3BsYXRmb3JtJztcbmltcG9ydCBwYWdlQXR0cmlidXRlRXhwcmVzc2lvbiBmcm9tICcuLi9wYWdlLWF0dHJpYnV0ZS1leHByZXNzaW9uJztcblxuY29uc3QgaW50ZXJuYWwgPSB7fTtcblxuaW50ZXJuYWwuY29uZmlnID0ge1xuICBhdXRvU3RhdHVzQmFyRmlsbDogdHJ1ZSxcbiAgYW5pbWF0aW9uc0Rpc2FibGVkOiBmYWxzZSxcbiAgd2FybmluZ3NEaXNhYmxlZDogZmFsc2Vcbn07XG5cbmludGVybmFsLm51bGxFbGVtZW50ID0gd2luZG93LmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuXG4vKipcbiAqIEByZXR1cm4ge0Jvb2xlYW59XG4gKi9cbmludGVybmFsLmlzRW5hYmxlZEF1dG9TdGF0dXNCYXJGaWxsID0gKCkgPT4ge1xuICByZXR1cm4gISFpbnRlcm5hbC5jb25maWcuYXV0b1N0YXR1c0JhckZpbGw7XG59O1xuXG4vKipcbiAqIEBwYXJhbSB7U3RyaW5nfSBodG1sXG4gKiBAcmV0dXJuIHtTdHJpbmd9XG4gKi9cbmludGVybmFsLm5vcm1hbGl6ZVBhZ2VIVE1MID0gaHRtbCA9PiB7XG4gIGh0bWwgPSAoJycgKyBodG1sKS50cmltKCk7XG5cbiAgaWYgKCFodG1sLm1hdGNoKC9ePG9ucy1wYWdlLykpIHtcbiAgICBodG1sID0gJzxvbnMtcGFnZSBfbXV0ZWQ+JyArIGh0bWwgKyAnPC9vbnMtcGFnZT4nO1xuICB9XG5cbiAgcmV0dXJuIGh0bWw7XG59O1xuXG5pbnRlcm5hbC53YWl0RE9NQ29udGVudExvYWRlZCA9IGNhbGxiYWNrID0+IHtcbiAgaWYgKHdpbmRvdy5kb2N1bWVudC5yZWFkeVN0YXRlID09PSAnbG9hZGluZycgfHwgd2luZG93LmRvY3VtZW50LnJlYWR5U3RhdGUgPT0gJ3VuaW5pdGlhbGl6ZWQnKSB7XG4gICAgd2luZG93LmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ0RPTUNvbnRlbnRMb2FkZWQnLCBjYWxsYmFjayk7XG4gIH0gZWxzZSB7XG4gICAgc2V0SW1tZWRpYXRlKGNhbGxiYWNrKTtcbiAgfVxufTtcblxuaW50ZXJuYWwuYXV0b1N0YXR1c0JhckZpbGwgPSBhY3Rpb24gPT4ge1xuICBjb25zdCBvblJlYWR5ID0gKCkgPT4ge1xuICAgIGlmIChpbnRlcm5hbC5zaG91bGRGaWxsU3RhdHVzQmFyKCkpIHtcbiAgICAgIGFjdGlvbigpO1xuICAgIH1cbiAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdkZXZpY2VyZWFkeScsIG9uUmVhZHkpO1xuICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ0RPTUNvbnRlbnRMb2FkZWQnLCBvblJlYWR5KTtcbiAgfTtcblxuICBpZiAodHlwZW9mIGRldmljZSA9PT0gJ29iamVjdCcpIHtcbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdkZXZpY2VyZWFkeScsIG9uUmVhZHkpO1xuICB9IGVsc2UgaWYgKFsnY29tcGxldGUnLCAnaW50ZXJhY3RpdmUnXS5pbmRleE9mKGRvY3VtZW50LnJlYWR5U3RhdGUpID09PSAtMSkge1xuICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ0RPTUNvbnRlbnRMb2FkZWQnLCBmdW5jdGlvbigpIHtcbiAgICAgIG9uUmVhZHkoKTtcbiAgICB9KTtcbiAgfSBlbHNlIHtcbiAgICBvblJlYWR5KCk7XG4gIH1cbn07XG5cbmludGVybmFsLnNob3VsZEZpbGxTdGF0dXNCYXIgPSAoKSA9PiBpbnRlcm5hbC5pc0VuYWJsZWRBdXRvU3RhdHVzQmFyRmlsbCgpICYmIHBsYXRmb3JtLmlzV2ViVmlldygpICYmIHBsYXRmb3JtLmlzSU9TN2Fib3ZlKCk7XG5cbmludGVybmFsLnRlbXBsYXRlU3RvcmUgPSB7XG4gIF9zdG9yYWdlOiB7fSxcblxuICAvKipcbiAgICogQHBhcmFtIHtTdHJpbmd9IGtleVxuICAgKiBAcmV0dXJuIHtTdHJpbmcvbnVsbH0gdGVtcGxhdGVcbiAgICovXG4gIGdldChrZXkpIHtcbiAgICByZXR1cm4gaW50ZXJuYWwudGVtcGxhdGVTdG9yZS5fc3RvcmFnZVtrZXldIHx8IG51bGw7XG4gIH0sXG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7U3RyaW5nfSBrZXlcbiAgICogQHBhcmFtIHtTdHJpbmd9IHRlbXBsYXRlXG4gICAqL1xuICBzZXQoa2V5LCB0ZW1wbGF0ZSkge1xuICAgIGludGVybmFsLnRlbXBsYXRlU3RvcmUuX3N0b3JhZ2Vba2V5XSA9IHRlbXBsYXRlO1xuICB9XG59O1xuXG53aW5kb3cuZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignX3RlbXBsYXRlbG9hZGVkJywgZnVuY3Rpb24oZSkge1xuICBpZiAoZS50YXJnZXQubm9kZU5hbWUudG9Mb3dlckNhc2UoKSA9PT0gJ29ucy10ZW1wbGF0ZScpIHtcbiAgICBpbnRlcm5hbC50ZW1wbGF0ZVN0b3JlLnNldChlLnRlbXBsYXRlSWQsIGUudGVtcGxhdGUpO1xuICB9XG59LCBmYWxzZSk7XG5cbndpbmRvdy5kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdET01Db250ZW50TG9hZGVkJywgZnVuY3Rpb24oKSB7XG4gIHJlZ2lzdGVyKCdzY3JpcHRbdHlwZT1cInRleHQvb25zLXRlbXBsYXRlXCJdJyk7XG4gIHJlZ2lzdGVyKCdzY3JpcHRbdHlwZT1cInRleHQvdGVtcGxhdGVcIl0nKTtcbiAgcmVnaXN0ZXIoJ3NjcmlwdFt0eXBlPVwidGV4dC9uZy10ZW1wbGF0ZVwiXScpO1xuXG4gIGZ1bmN0aW9uIHJlZ2lzdGVyKHF1ZXJ5KSB7XG4gICAgY29uc3QgdGVtcGxhdGVzID0gd2luZG93LmRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwocXVlcnkpO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGVtcGxhdGVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICBpbnRlcm5hbC50ZW1wbGF0ZVN0b3JlLnNldCh0ZW1wbGF0ZXNbaV0uZ2V0QXR0cmlidXRlKCdpZCcpLCB0ZW1wbGF0ZXNbaV0udGV4dENvbnRlbnQpO1xuICAgIH1cbiAgfVxufSwgZmFsc2UpO1xuXG4vKipcbiAqIEBwYXJhbSB7U3RyaW5nfSBwYWdlXG4gKiBAcmV0dXJuIHtQcm9taXNlfVxuICovXG5pbnRlcm5hbC5nZXRUZW1wbGF0ZUhUTUxBc3luYyA9IGZ1bmN0aW9uKHBhZ2UpIHtcbiAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICBzZXRJbW1lZGlhdGUoKCkgPT4ge1xuICAgICAgY29uc3QgY2FjaGUgPSBpbnRlcm5hbC50ZW1wbGF0ZVN0b3JlLmdldChwYWdlKTtcblxuICAgICAgaWYgKGNhY2hlKSB7XG4gICAgICAgIGNvbnN0IGh0bWwgPSB0eXBlb2YgY2FjaGUgPT09ICdzdHJpbmcnID8gY2FjaGUgOiBjYWNoZVsxXTtcbiAgICAgICAgcmVzb2x2ZShodG1sKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGNvbnN0IHhociA9IG5ldyBYTUxIdHRwUmVxdWVzdCgpO1xuICAgICAgICB4aHIub3BlbignR0VUJywgcGFnZSwgdHJ1ZSk7XG4gICAgICAgIHhoci5vbmxvYWQgPSBmdW5jdGlvbihyZXNwb25zZSkge1xuICAgICAgICAgIGNvbnN0IGh0bWwgPSB4aHIucmVzcG9uc2VUZXh0O1xuICAgICAgICAgIGlmICh4aHIuc3RhdHVzID49IDQwMCAmJiB4aHIuc3RhdHVzIDwgNjAwKSB7XG4gICAgICAgICAgICByZWplY3QoaHRtbCk7XG4gICAgICAgICAgfVxuICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgcmVzb2x2ZShodG1sKTtcbiAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIHhoci5vbmVycm9yID0gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBUaGUgcGFnZSBpcyBub3QgZm91bmQ6ICR7cGFnZX1gKTtcbiAgICAgICAgfTtcbiAgICAgICAgeGhyLnNlbmQobnVsbCk7XG4gICAgICB9XG4gICAgfSk7XG4gIH0pO1xufTtcblxuLyoqXG4gKiBAcGFyYW0ge1N0cmluZ30gcGFnZVxuICogQHJldHVybiB7UHJvbWlzZX1cbiAqL1xuaW50ZXJuYWwuZ2V0UGFnZUhUTUxBc3luYyA9IGZ1bmN0aW9uKHBhZ2UpIHtcbiAgY29uc3QgcGFnZXMgPSBwYWdlQXR0cmlidXRlRXhwcmVzc2lvbi5ldmFsdWF0ZShwYWdlKTtcblxuICBjb25zdCBnZXRQYWdlID0gKHBhZ2UpID0+IHtcbiAgICBpZiAodHlwZW9mIHBhZ2UgIT09ICdzdHJpbmcnKSB7XG4gICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoJ011c3Qgc3BlY2lmeSBhIHBhZ2UuJyk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGludGVybmFsLmdldFRlbXBsYXRlSFRNTEFzeW5jKHBhZ2UpXG4gICAgICAudGhlbihcbiAgICAgICAgZnVuY3Rpb24oaHRtbCkge1xuICAgICAgICAgIHJldHVybiBpbnRlcm5hbC5ub3JtYWxpemVQYWdlSFRNTChodG1sKTtcbiAgICAgICAgfSxcbiAgICAgICAgZnVuY3Rpb24oZXJyb3IpIHtcbiAgICAgICAgICBpZiAocGFnZXMubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoZXJyb3IpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIHJldHVybiBnZXRQYWdlKHBhZ2VzLnNoaWZ0KCkpO1xuICAgICAgICB9XG4gICAgICApXG4gICAgICAudGhlbihodG1sID0+IGludGVybmFsLm5vcm1hbGl6ZVBhZ2VIVE1MKGh0bWwpKTtcbiAgfTtcblxuICByZXR1cm4gZ2V0UGFnZShwYWdlcy5zaGlmdCgpKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGludGVybmFsO1xuIiwiLypcbkNvcHlyaWdodCAyMDEzLTIwMTUgQVNJQUwgQ09SUE9SQVRJT05cblxuTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbnlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbllvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuXG4gICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcblxuVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG5TZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG5saW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cblxuKi9cblxuaW1wb3J0IHV0aWwgZnJvbSAnLi4vdXRpbCc7XG5pbXBvcnQgaW50ZXJuYWwgZnJvbSAnLi4vaW50ZXJuYWwnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBBbmltYXRvckZhY3Rvcnkge1xuXG4gIC8qKlxuICAgKiBAcGFyYW0ge09iamVjdH0gb3B0c1xuICAgKiBAcGFyYW0ge09iamVjdH0gb3B0cy5hbmltYXRvcnMgVGhlIGRpY3Rpb25hcnkgZm9yIGFuaW1hdG9yIGNsYXNzZXNcbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gb3B0cy5iYXNlQ2xhc3MgVGhlIGJhc2UgY2xhc3Mgb2YgYW5pbWF0b3JzXG4gICAqIEBwYXJhbSB7U3RyaW5nfSBbb3B0cy5iYXNlQ2xhc3NOYW1lXSBUaGUgbmFtZSBvZiB0aGUgYmFzZSBjbGFzcyBvZiBhbmltYXRvcnNcbiAgICogQHBhcmFtIHtTdHJpbmd9IFtvcHRzLmRlZmF1bHRBbmltYXRpb25dIFRoZSBkZWZhdWx0IGFuaW1hdGlvbiBuYW1lXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0cy5kZWZhdWx0QW5pbWF0aW9uT3B0aW9uc10gVGhlIGRlZmF1bHQgYW5pbWF0aW9uIG9wdGlvbnNcbiAgICovXG4gIGNvbnN0cnVjdG9yKG9wdHMpIHtcbiAgICB0aGlzLl9hbmltYXRvcnMgPSBvcHRzLmFuaW1hdG9ycztcbiAgICB0aGlzLl9iYXNlQ2xhc3MgPSBvcHRzLmJhc2VDbGFzcztcbiAgICB0aGlzLl9iYXNlQ2xhc3NOYW1lID0gb3B0cy5iYXNlQ2xhc3NOYW1lIHx8IG9wdHMuYmFzZUNsYXNzLm5hbWU7XG4gICAgdGhpcy5fYW5pbWF0aW9uID0gb3B0cy5kZWZhdWx0QW5pbWF0aW9uIHx8ICdkZWZhdWx0JztcbiAgICB0aGlzLl9hbmltYXRpb25PcHRpb25zID0gb3B0cy5kZWZhdWx0QW5pbWF0aW9uT3B0aW9ucyB8fCB7fTtcblxuICAgIGlmICghdGhpcy5fYW5pbWF0b3JzW3RoaXMuX2FuaW1hdGlvbl0pIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignTm8gc3VjaCBhbmltYXRpb246ICcgKyB0aGlzLl9hbmltYXRpb24pO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge1N0cmluZ30ganNvblN0cmluZ1xuICAgKiBAcmV0dXJuIHtPYmplY3QvbnVsbH1cbiAgICovXG4gIHN0YXRpYyBwYXJzZUFuaW1hdGlvbk9wdGlvbnNTdHJpbmcoanNvblN0cmluZykge1xuICAgIHRyeSB7XG4gICAgICBpZiAodHlwZW9mIGpzb25TdHJpbmcgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IHV0aWwuYW5pbWF0aW9uT3B0aW9uc1BhcnNlKGpzb25TdHJpbmcpO1xuICAgICAgICBpZiAodHlwZW9mIHJlc3VsdCA9PT0gJ29iamVjdCcgJiYgcmVzdWx0ICE9PSBudWxsKSB7XG4gICAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBjb25zb2xlLmVycm9yKCdcImFuaW1hdGlvbi1vcHRpb25zXCIgYXR0cmlidXRlIG11c3QgYmUgYSBKU09OIG9iamVjdCBzdHJpbmc6ICcgKyBqc29uU3RyaW5nKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgcmV0dXJuIHt9O1xuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ1wiYW5pbWF0aW9uLW9wdGlvbnNcIiBhdHRyaWJ1dGUgbXVzdCBiZSBhIEpTT04gb2JqZWN0IHN0cmluZzogJyArIGpzb25TdHJpbmcpO1xuICAgICAgcmV0dXJuIHt9O1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge09iamVjdH0gb3B0aW9uc1xuICAgKi9cbiAgc2V0QW5pbWF0aW9uT3B0aW9ucyhvcHRpb25zKSB7XG4gICAgdGhpcy5fYW5pbWF0aW9uT3B0aW9ucyA9IG9wdGlvbnM7XG4gIH1cblxuICAvKipcbiAgICogQHBhcmFtIHtPYmplY3R9IG9wdGlvbnNcbiAgICogQHBhcmFtIHtTdHJpbmd9IFtvcHRpb25zLmFuaW1hdGlvbl0gVGhlIGFuaW1hdGlvbiBuYW1lXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0aW9ucy5hbmltYXRpb25PcHRpb25zXSBUaGUgYW5pbWF0aW9uIG9wdGlvbnNcbiAgICogQHBhcmFtIHtPYmplY3R9IGRlZmF1bHRBbmltYXRvciBUaGUgZGVmYXVsdCBhbmltYXRvciBpbnN0YW5jZVxuICAgKiBAcmV0dXJuIHtPYmplY3R9IEFuIGFuaW1hdG9yIGluc3RhbmNlXG4gICAqL1xuICBuZXdBbmltYXRvcihvcHRpb25zID0ge30sIGRlZmF1bHRBbmltYXRvcikge1xuXG4gICAgbGV0IGFuaW1hdG9yID0gbnVsbDtcblxuICAgIGlmIChvcHRpb25zLmFuaW1hdGlvbiBpbnN0YW5jZW9mIHRoaXMuX2Jhc2VDbGFzcykge1xuICAgICAgcmV0dXJuIG9wdGlvbnMuYW5pbWF0aW9uO1xuICAgIH1cblxuICAgIGxldCBBbmltYXRvciA9IG51bGw7XG5cbiAgICBpZiAodHlwZW9mIG9wdGlvbnMuYW5pbWF0aW9uID09PSAnc3RyaW5nJykge1xuICAgICAgQW5pbWF0b3IgPSB0aGlzLl9hbmltYXRvcnNbb3B0aW9ucy5hbmltYXRpb25dO1xuICAgIH1cblxuICAgIGlmICghQW5pbWF0b3IgJiYgZGVmYXVsdEFuaW1hdG9yKSB7XG4gICAgICBhbmltYXRvciA9IGRlZmF1bHRBbmltYXRvcjtcbiAgICB9IGVsc2Uge1xuICAgICAgQW5pbWF0b3IgPSBBbmltYXRvciB8fCB0aGlzLl9hbmltYXRvcnNbdGhpcy5fYW5pbWF0aW9uXTtcblxuICAgICAgY29uc3QgYW5pbWF0aW9uT3B0cyA9IHV0aWwuZXh0ZW5kKFxuICAgICAgICB7fSxcbiAgICAgICAgdGhpcy5fYW5pbWF0aW9uT3B0aW9ucyxcbiAgICAgICAgb3B0aW9ucy5hbmltYXRpb25PcHRpb25zIHx8IHt9LFxuICAgICAgICBpbnRlcm5hbC5jb25maWcuYW5pbWF0aW9uc0Rpc2FibGVkID8ge2R1cmF0aW9uOiAwLCBkZWxheTogMH0gOiB7fVxuICAgICAgKTtcblxuICAgICAgYW5pbWF0b3IgPSBuZXcgQW5pbWF0b3IoYW5pbWF0aW9uT3B0cyk7XG5cbiAgICAgIGlmICh0eXBlb2YgYW5pbWF0b3IgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgYW5pbWF0b3IgPSBuZXcgYW5pbWF0b3IoYW5pbWF0aW9uT3B0cyk7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbmV3LWNhcFxuICAgICAgfVxuICAgIH1cblxuICAgIGlmICghKGFuaW1hdG9yIGluc3RhbmNlb2YgdGhpcy5fYmFzZUNsYXNzKSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdcImFuaW1hdG9yXCIgaXMgbm90IGFuIGluc3RhbmNlIG9mICcgKyB0aGlzLl9iYXNlQ2xhc3NOYW1lICsgJy4nKTtcbiAgICB9XG5cbiAgICByZXR1cm4gYW5pbWF0b3I7XG4gIH1cbn1cbiIsIi8qXG5Db3B5cmlnaHQgMjAxMy0yMDE1IEFTSUFMIENPUlBPUkFUSU9OXG5cbkxpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG55b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG5Zb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcblxuICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG5cblVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbmRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbldJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxubGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5cbiovXG5cbmltcG9ydCB1dGlsIGZyb20gJy4uL3V0aWwuanMnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBNb2RpZmllclV0aWwge1xuICAvKipcbiAgICogQHBhcmFtIHtTdHJpbmd9IGxhc3RcbiAgICogQHBhcmFtIHtTdHJpbmd9IGN1cnJlbnRcbiAgICovXG4gIHN0YXRpYyBkaWZmKGxhc3QsIGN1cnJlbnQpIHtcbiAgICBsYXN0ID0gbWFrZURpY3QoKCcnICsgbGFzdCkudHJpbSgpKTtcbiAgICBjdXJyZW50ID0gbWFrZURpY3QoKCcnICsgY3VycmVudCkudHJpbSgpKTtcblxuICAgIGNvbnN0IHJlbW92ZWQgPSBPYmplY3Qua2V5cyhsYXN0KS5yZWR1Y2UoKHJlc3VsdCwgdG9rZW4pID0+IHtcbiAgICAgIGlmICghY3VycmVudFt0b2tlbl0pIHtcbiAgICAgICAgcmVzdWx0LnB1c2godG9rZW4pO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9LCBbXSk7XG5cbiAgICBjb25zdCBhZGRlZCA9IE9iamVjdC5rZXlzKGN1cnJlbnQpLnJlZHVjZSgocmVzdWx0LCB0b2tlbikgPT4ge1xuICAgICAgaWYgKCFsYXN0W3Rva2VuXSkge1xuICAgICAgICByZXN1bHQucHVzaCh0b2tlbik7XG4gICAgICB9XG4gICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH0sIFtdKTtcblxuICAgIHJldHVybiB7YWRkZWQsIHJlbW92ZWR9O1xuXG4gICAgZnVuY3Rpb24gbWFrZURpY3QobW9kaWZpZXIpIHtcbiAgICAgIGNvbnN0IGRpY3QgPSB7fTtcbiAgICAgIE1vZGlmaWVyVXRpbC5zcGxpdChtb2RpZmllcikuZm9yRWFjaCh0b2tlbiA9PiBkaWN0W3Rva2VuXSA9IHRva2VuKTtcbiAgICAgIHJldHVybiBkaWN0O1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge09iamVjdH0gZGlmZlxuICAgKiBAcGFyYW0ge0FycmF5fSBkaWZmLnJlbW92ZWRcbiAgICogQHBhcmFtIHtBcnJheX0gZGlmZi5hZGRlZFxuICAgKiBAcGFyYW0ge09iamVjdH0gY2xhc3NMaXN0XG4gICAqIEBwYXJhbSB7U3RyaW5nfSB0ZW1wbGF0ZVxuICAgKi9cbiAgc3RhdGljIGFwcGx5RGlmZlRvQ2xhc3NMaXN0KGRpZmYsIGNsYXNzTGlzdCwgdGVtcGxhdGUpIHtcbiAgICBkaWZmLmFkZGVkXG4gICAgICAubWFwKG1vZGlmaWVyID0+IHRlbXBsYXRlLnJlcGxhY2UoL1xcKi9nLCBtb2RpZmllcikpXG4gICAgICAuZm9yRWFjaChrbGFzcyA9PiBjbGFzc0xpc3QuYWRkKGtsYXNzKSk7XG5cbiAgICBkaWZmLnJlbW92ZWRcbiAgICAgIC5tYXAobW9kaWZpZXIgPT4gdGVtcGxhdGUucmVwbGFjZSgvXFwqL2csIG1vZGlmaWVyKSlcbiAgICAgIC5mb3JFYWNoKGtsYXNzID0+IGNsYXNzTGlzdC5yZW1vdmUoa2xhc3MpKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge09iamVjdH0gZGlmZlxuICAgKiBAcGFyYW0ge0FycmF5fSBkaWZmLnJlbW92ZWRcbiAgICogQHBhcmFtIHtBcnJheX0gZGlmZi5hZGRlZFxuICAgKiBAcGFyYW0ge0hUTUxFbGVtZW50fSBlbGVtZW50XG4gICAqIEBwYXJhbSB7T2JqZWN0fSBzY2hlbWVcbiAgICovXG4gIHN0YXRpYyBhcHBseURpZmZUb0VsZW1lbnQoZGlmZiwgZWxlbWVudCwgc2NoZW1lKSB7XG4gICAgZm9yIChjb25zdCBzZWxlY3RvciBpbiBzY2hlbWUpIHtcbiAgICAgIGlmIChzY2hlbWUuaGFzT3duUHJvcGVydHkoc2VsZWN0b3IpKSB7XG4gICAgICAgIGNvbnN0IHRhcmdldEVsZW1lbnRzID0gIXNlbGVjdG9yIHx8IHV0aWwubWF0Y2goZWxlbWVudCwgc2VsZWN0b3IpID8gW2VsZW1lbnRdIDogZWxlbWVudC5xdWVyeVNlbGVjdG9yQWxsKHNlbGVjdG9yKTtcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0YXJnZXRFbGVtZW50cy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgIE1vZGlmaWVyVXRpbC5hcHBseURpZmZUb0NsYXNzTGlzdChkaWZmLCB0YXJnZXRFbGVtZW50c1tpXS5jbGFzc0xpc3QsIHNjaGVtZVtzZWxlY3Rvcl0pO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7U3RyaW5nfSBsYXN0XG4gICAqIEBwYXJhbSB7U3RyaW5nfSBjdXJyZW50XG4gICAqIEBwYXJhbSB7SFRNTEVsZW1lbnR9IGVsZW1lbnRcbiAgICogQHBhcmFtIHtPYmplY3R9IHNjaGVtZVxuICAgKi9cbiAgc3RhdGljIG9uTW9kaWZpZXJDaGFuZ2VkKGxhc3QsIGN1cnJlbnQsIGVsZW1lbnQsIHNjaGVtZSkge1xuICAgIHJldHVybiBNb2RpZmllclV0aWwuYXBwbHlEaWZmVG9FbGVtZW50KE1vZGlmaWVyVXRpbC5kaWZmKGxhc3QsIGN1cnJlbnQpLCBlbGVtZW50LCBzY2hlbWUpO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7SFRNTEVsZW1lbnR9IGVsZW1lbnRcbiAgICogQHBhcmFtIHtPYmplY3R9IHNjaGVtZVxuICAgKi9cbiAgc3RhdGljIGluaXRNb2RpZmllcihlbGVtZW50LCBzY2hlbWUpIHtcbiAgICBjb25zdCBtb2RpZmllciA9IGVsZW1lbnQuZ2V0QXR0cmlidXRlKCdtb2RpZmllcicpO1xuICAgIGlmICh0eXBlb2YgbW9kaWZpZXIgIT09ICdzdHJpbmcnKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgTW9kaWZpZXJVdGlsLmFwcGx5RGlmZlRvRWxlbWVudCh7XG4gICAgICByZW1vdmVkOiBbXSxcbiAgICAgIGFkZGVkOiBNb2RpZmllclV0aWwuc3BsaXQobW9kaWZpZXIpXG4gICAgfSwgZWxlbWVudCwgc2NoZW1lKTtcbiAgfVxuXG4gIHN0YXRpYyBzcGxpdChtb2RpZmllcikge1xuICAgIGlmICh0eXBlb2YgbW9kaWZpZXIgIT09ICdzdHJpbmcnKSB7XG4gICAgICByZXR1cm4gW107XG4gICAgfVxuXG4gICAgcmV0dXJuIG1vZGlmaWVyLnRyaW0oKS5zcGxpdCgvICsvKS5maWx0ZXIodG9rZW4gPT4gdG9rZW4gIT09ICcnKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBBZGQgbW9kaWZpZXIgdG9rZW4gdG8gYW4gZWxlbWVudC5cbiAgICovXG4gIHN0YXRpYyBhZGRNb2RpZmllcihlbGVtZW50LCBtb2RpZmllclRva2VuKSB7XG4gICAgaWYgKCFlbGVtZW50Lmhhc0F0dHJpYnV0ZSgnbW9kaWZpZXInKSkge1xuICAgICAgZWxlbWVudC5zZXRBdHRyaWJ1dGUoJ21vZGlmaWVyJywgbW9kaWZpZXJUb2tlbik7XG4gICAgfSBlbHNlIHtcbiAgICAgIGNvbnN0IHRva2VucyA9IE1vZGlmaWVyVXRpbC5zcGxpdChlbGVtZW50LmdldEF0dHJpYnV0ZSgnbW9kaWZpZXInKSk7XG4gICAgICBpZiAodG9rZW5zLmluZGV4T2YobW9kaWZpZXJUb2tlbikgPT0gLTEpIHtcbiAgICAgICAgdG9rZW5zLnB1c2gobW9kaWZpZXJUb2tlbik7XG4gICAgICAgIGVsZW1lbnQuc2V0QXR0cmlidXRlKCdtb2RpZmllcicsIHRva2Vucy5qb2luKCcgJykpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBSZW1vdmUgbW9kaWZpZXIgdG9rZW4gZnJvbSBhbiBlbGVtZW50LlxuICAgKi9cbiAgc3RhdGljIHJlbW92ZU1vZGlmaWVyKGVsZW1lbnQsIG1vZGlmaWVyVG9rZW4pIHtcbiAgICBpZiAoZWxlbWVudC5oYXNBdHRyaWJ1dGUoJ21vZGlmaWVyJykpIHtcbiAgICAgIGNvbnN0IHRva2VucyA9IE1vZGlmaWVyVXRpbC5zcGxpdChlbGVtZW50LmdldEF0dHJpYnV0ZSgnbW9kaWZpZXInKSk7XG4gICAgICBjb25zdCBpbmRleCA9IHRva2Vucy5pbmRleE9mKG1vZGlmaWVyVG9rZW4pO1xuICAgICAgaWYgKGluZGV4ICE9PSAtMSkge1xuICAgICAgICB0b2tlbnMuc3BsaWNlKGluZGV4LCAxKTtcbiAgICAgICAgZWxlbWVudC5zZXRBdHRyaWJ1dGUoJ21vZGlmaWVyJywgdG9rZW5zLmpvaW4oJyAnKSk7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG4iLCIvKlxuQ29weXJpZ2h0IDIwMTMtMjAxNSBBU0lBTCBDT1JQT1JBVElPTlxuXG5MaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xueW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG5cbiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuXG5Vbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG5kaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG5XSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cblNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbmxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuXG4qL1xuXG5pbXBvcnQgdXRpbCBmcm9tICcuLi91dGlsJztcbmltcG9ydCBwbGF0Zm9ybSBmcm9tICcuLi9wbGF0Zm9ybSc7XG5cbmV4cG9ydCBjbGFzcyBMYXp5UmVwZWF0RGVsZWdhdGUge1xuXG4gIGNvbnN0cnVjdG9yKHVzZXJEZWxlZ2F0ZSwgdGVtcGxhdGVFbGVtZW50ID0gbnVsbCkge1xuICAgIGlmICh0eXBlb2YgdXNlckRlbGVnYXRlICE9PSAnb2JqZWN0JyB8fCB1c2VyRGVsZWdhdGUgPT09IG51bGwpIHtcbiAgICAgIHRocm93IEVycm9yKCdcImRlbGVnYXRlXCIgcGFyYW1ldGVyIG11c3QgYmUgYW4gb2JqZWN0LicpO1xuICAgIH1cbiAgICB0aGlzLl91c2VyRGVsZWdhdGUgPSB1c2VyRGVsZWdhdGU7XG5cbiAgICBpZiAoISh0ZW1wbGF0ZUVsZW1lbnQgaW5zdGFuY2VvZiBFbGVtZW50KSAmJiB0ZW1wbGF0ZUVsZW1lbnQgIT09IG51bGwpIHtcbiAgICAgIHRocm93IEVycm9yKCdcInRlbXBsYXRlRWxlbWVudFwiIHBhcmFtZXRlciBtdXN0IGJlIGFuIGluc3RhbmNlIG9mIEVsZW1lbnQgb3IgbnVsbC4nKTtcbiAgICB9XG4gICAgdGhpcy5fdGVtcGxhdGVFbGVtZW50ID0gdGVtcGxhdGVFbGVtZW50O1xuICB9XG5cbiAgZ2V0IGl0ZW1IZWlnaHQoKSB7XG4gICAgcmV0dXJuIHRoaXMuX3VzZXJEZWxlZ2F0ZS5pdGVtSGVpZ2h0O1xuICB9XG5cbiAgLyoqXG4gICAqIEByZXR1cm4ge0Jvb2xlYW59XG4gICAqL1xuICBoYXNSZW5kZXJGdW5jdGlvbigpIHtcbiAgICByZXR1cm4gdGhpcy5fdXNlckRlbGVnYXRlLl9yZW5kZXIgaW5zdGFuY2VvZiBGdW5jdGlvbjtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcmV0dXJuIHt2b2lkfVxuICAgKi9cbiAgX3JlbmRlcigpIHtcbiAgICB0aGlzLl91c2VyRGVsZWdhdGUuX3JlbmRlci5hcHBseSh0aGlzLl91c2VyRGVsZWdhdGUsIGFyZ3VtZW50cyk7XG4gIH1cblxuICAvKipcbiAgICogQHBhcmFtIHtOdW1iZXJ9IGluZGV4XG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IGRvbmUgQSBmdW5jdGlvbiB0aGF0IHRha2UgaXRlbSBvYmplY3QgYXMgcGFyYW1ldGVyLlxuICAgKi9cbiAgbG9hZEl0ZW1FbGVtZW50KGluZGV4LCBkb25lKSB7XG4gICAgaWYgKHRoaXMuX3VzZXJEZWxlZ2F0ZS5sb2FkSXRlbUVsZW1lbnQgaW5zdGFuY2VvZiBGdW5jdGlvbikge1xuICAgICAgdGhpcy5fdXNlckRlbGVnYXRlLmxvYWRJdGVtRWxlbWVudChpbmRleCwgZG9uZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGNvbnN0IGVsZW1lbnQgPSB0aGlzLl91c2VyRGVsZWdhdGUuY3JlYXRlSXRlbUNvbnRlbnQoaW5kZXgsIHRoaXMuX3RlbXBsYXRlRWxlbWVudCk7XG4gICAgICBpZiAoIShlbGVtZW50IGluc3RhbmNlb2YgRWxlbWVudCkpIHtcbiAgICAgICAgdGhyb3cgRXJyb3IoJ2NyZWF0ZUl0ZW1Db250ZW50KCkgbXVzdCByZXR1cm4gYW4gaW5zdGFuY2Ugb2YgRWxlbWVudC4nKTtcbiAgICAgIH1cblxuICAgICAgZG9uZSh7ZWxlbWVudH0pO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBAcmV0dXJuIHtOdW1iZXJ9XG4gICAqL1xuICBjb3VudEl0ZW1zKCkge1xuICAgIGNvbnN0IGNvdW50ID0gdGhpcy5fdXNlckRlbGVnYXRlLmNvdW50SXRlbXMoKTtcbiAgICBpZiAodHlwZW9mIGNvdW50ICE9PSAnbnVtYmVyJykge1xuICAgICAgdGhyb3cgRXJyb3IoJ2NvdW50SXRlbXMoKSBtdXN0IHJldHVybiBhIG51bWJlci4nKTtcbiAgICB9XG4gICAgcmV0dXJuIGNvdW50O1xuICB9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7TnVtYmVyfSBpbmRleFxuICAgKiBAcGFyYW0ge09iamVjdH0gaXRlbVxuICAgKiBAcGFyYW0ge0VsZW1lbnR9IGl0ZW0uZWxlbWVudFxuICAgKi9cbiAgdXBkYXRlSXRlbShpbmRleCwgaXRlbSkge1xuICAgIGlmICh0aGlzLl91c2VyRGVsZWdhdGUudXBkYXRlSXRlbUNvbnRlbnQgaW5zdGFuY2VvZiBGdW5jdGlvbikge1xuICAgICAgdGhpcy5fdXNlckRlbGVnYXRlLnVwZGF0ZUl0ZW1Db250ZW50KGluZGV4LCBpdGVtKTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogQHJldHVybiB7TnVtYmVyfVxuICAgKi9cbiAgY2FsY3VsYXRlSXRlbUhlaWdodChpbmRleCkge1xuICAgIGlmICh0aGlzLl91c2VyRGVsZWdhdGUuY2FsY3VsYXRlSXRlbUhlaWdodCBpbnN0YW5jZW9mIEZ1bmN0aW9uKSB7XG4gICAgICBjb25zdCBoZWlnaHQgPSB0aGlzLl91c2VyRGVsZWdhdGUuY2FsY3VsYXRlSXRlbUhlaWdodChpbmRleCk7XG5cbiAgICAgIGlmICh0eXBlb2YgaGVpZ2h0ICE9PSAnbnVtYmVyJykge1xuICAgICAgICB0aHJvdyBFcnJvcignY2FsY3VsYXRlSXRlbUhlaWdodCgpIG11c3QgcmV0dXJuIGEgbnVtYmVyLicpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gaGVpZ2h0O1xuICAgIH1cblxuICAgIHJldHVybiAwO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7TnVtYmVyfSBpbmRleFxuICAgKiBAcGFyYW0ge09iamVjdH0gaXRlbVxuICAgKi9cbiAgZGVzdHJveUl0ZW0oaW5kZXgsIGl0ZW0pIHtcbiAgICBpZiAodGhpcy5fdXNlckRlbGVnYXRlLmRlc3Ryb3lJdGVtIGluc3RhbmNlb2YgRnVuY3Rpb24pIHtcbiAgICAgIHRoaXMuX3VzZXJEZWxlZ2F0ZS5kZXN0cm95SXRlbShpbmRleCwgaXRlbSk7XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIEByZXR1cm4ge3ZvaWR9XG4gICAqL1xuICBkZXN0cm95KCkge1xuICAgIGlmICh0aGlzLl91c2VyRGVsZWdhdGUuZGVzdHJveSBpbnN0YW5jZW9mIEZ1bmN0aW9uKSB7XG4gICAgICB0aGlzLl91c2VyRGVsZWdhdGUuZGVzdHJveSgpO1xuICAgIH1cblxuICAgIHRoaXMuX3VzZXJEZWxlZ2F0ZSA9IHRoaXMuX3RlbXBsYXRlRWxlbWVudCA9IG51bGw7XG4gIH1cbn1cblxuLyoqXG4gKiBUaGlzIGNsYXNzIHByb3ZpZGUgY29yZSBmdW5jdGlvbnMgZm9yIG9ucy1sYXp5LXJlcGVhdC5cbiAqL1xuZXhwb3J0IGNsYXNzIExhenlSZXBlYXRQcm92aWRlciB7XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7RWxlbWVudH0gd3JhcHBlckVsZW1lbnRcbiAgICogQHBhcmFtIHtMYXp5UmVwZWF0RGVsZWdhdGV9IGRlbGVnYXRlXG4gICAqL1xuICBjb25zdHJ1Y3Rvcih3cmFwcGVyRWxlbWVudCwgZGVsZWdhdGUpIHtcbiAgICBpZiAoIShkZWxlZ2F0ZSBpbnN0YW5jZW9mIExhenlSZXBlYXREZWxlZ2F0ZSkpIHtcbiAgICAgIHRocm93IEVycm9yKCdcImRlbGVnYXRlXCIgcGFyYW1ldGVyIG11c3QgYmUgYW4gaW5zdGFuY2Ugb2YgTGF6eVJlcGVhdERlbGVnYXRlLicpO1xuICAgIH1cblxuICAgIHRoaXMuX3dyYXBwZXJFbGVtZW50ID0gd3JhcHBlckVsZW1lbnQ7XG4gICAgdGhpcy5fZGVsZWdhdGUgPSBkZWxlZ2F0ZTtcbiAgICB0aGlzLl9pbnNlcnRJbmRleCA9ICh0aGlzLl93cmFwcGVyRWxlbWVudC5jaGlsZHJlblswXSAmJiB0aGlzLl93cmFwcGVyRWxlbWVudC5jaGlsZHJlblswXS50YWdOYW1lID09PSAnT05TLUxBWlktUkVQRUFUJykgPyAxIDogMDtcblxuICAgIGlmICh3cmFwcGVyRWxlbWVudC50YWdOYW1lLnRvTG93ZXJDYXNlKCkgPT09ICdvbnMtbGlzdCcpIHtcbiAgICAgIHdyYXBwZXJFbGVtZW50LmNsYXNzTGlzdC5hZGQoJ2xhenktbGlzdCcpO1xuICAgIH1cblxuICAgIHRoaXMuX3BhZ2VDb250ZW50ID0gdGhpcy5fZmluZFBhZ2VDb250ZW50RWxlbWVudCh3cmFwcGVyRWxlbWVudCk7XG5cbiAgICBpZiAoIXRoaXMuX3BhZ2VDb250ZW50KSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ29ucy1sYXp5LXJlcGVhdCBtdXN0IGJlIGEgZGVzY2VuZGFudCBvZiBhbiA8b25zLXBhZ2U+IG9yIGFuIGVsZW1lbnQuJyk7XG4gICAgfVxuXG4gICAgdGhpcy5sYXN0U2Nyb2xsVG9wID0gdGhpcy5fcGFnZUNvbnRlbnQuc2Nyb2xsVG9wO1xuICAgIHRoaXMucGFkZGluZyA9IDA7XG4gICAgdGhpcy5fdG9wUG9zaXRpb25zID0gWzBdO1xuICAgIHRoaXMuX3JlbmRlcmVkSXRlbXMgPSB7fTtcblxuICAgIGlmICghdGhpcy5fZGVsZWdhdGUuaXRlbUhlaWdodCAmJiAhdGhpcy5fZGVsZWdhdGUuY2FsY3VsYXRlSXRlbUhlaWdodCgwKSkge1xuICAgICAgdGhpcy5fdW5rbm93bkl0ZW1IZWlnaHQgPSB0cnVlO1xuICAgIH1cblxuICAgIHRoaXMuX2FkZEV2ZW50TGlzdGVuZXJzKCk7XG4gICAgdGhpcy5fb25DaGFuZ2UoKTtcbiAgfVxuXG4gIGdldCBwYWRkaW5nKCkge1xuICAgIHJldHVybiBwYXJzZUludCh0aGlzLl93cmFwcGVyRWxlbWVudC5zdHlsZS5wYWRkaW5nVG9wLCAxMCk7XG4gIH1cblxuICBzZXQgcGFkZGluZyhuZXdWYWx1ZSkge1xuICAgIHRoaXMuX3dyYXBwZXJFbGVtZW50LnN0eWxlLnBhZGRpbmdUb3AgPSBuZXdWYWx1ZSArICdweCc7XG4gIH1cblxuICBfZmluZFBhZ2VDb250ZW50RWxlbWVudCh3cmFwcGVyRWxlbWVudCkge1xuICAgIGNvbnN0IHBhZ2VDb250ZW50ID0gdXRpbC5maW5kUGFyZW50KHdyYXBwZXJFbGVtZW50LCAnLnBhZ2VfX2NvbnRlbnQnKTtcblxuICAgIGlmIChwYWdlQ29udGVudCkge1xuICAgICAgcmV0dXJuIHBhZ2VDb250ZW50O1xuICAgIH1cblxuICAgIGNvbnN0IHBhZ2UgPSB1dGlsLmZpbmRQYXJlbnQod3JhcHBlckVsZW1lbnQsICdvbnMtcGFnZScpO1xuICAgIGlmIChwYWdlKSB7XG4gICAgICBjb25zdCBjb250ZW50ID0gdXRpbC5maW5kQ2hpbGQocGFnZSwgJy5jb250ZW50Jyk7XG4gICAgICBpZiAoY29udGVudCkge1xuICAgICAgICByZXR1cm4gY29udGVudDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuXG4gIF9jaGVja0l0ZW1IZWlnaHQoY2FsbGJhY2spIHtcbiAgICB0aGlzLl9kZWxlZ2F0ZS5sb2FkSXRlbUVsZW1lbnQoMCwgaXRlbSA9PiB7XG4gICAgICBpZiAoIXRoaXMuX3Vua25vd25JdGVtSGVpZ2h0KSB7XG4gICAgICAgIHRocm93IEVycm9yKCdJbnZhbGlkIHN0YXRlJyk7XG4gICAgICB9XG5cbiAgICAgIHRoaXMuX3dyYXBwZXJFbGVtZW50LmFwcGVuZENoaWxkKGl0ZW0uZWxlbWVudCk7XG5cbiAgICAgIGNvbnN0IGRvbmUgPSAoKSA9PiB7XG4gICAgICAgIHRoaXMuX2RlbGVnYXRlLmRlc3Ryb3lJdGVtKDAsIGl0ZW0pO1xuICAgICAgICB0aGlzLl93cmFwcGVyRWxlbWVudC5yZW1vdmVDaGlsZChpdGVtLmVsZW1lbnQpO1xuICAgICAgICBkZWxldGUgdGhpcy5fdW5rbm93bkl0ZW1IZWlnaHQ7XG4gICAgICAgIGNhbGxiYWNrKCk7XG4gICAgICB9O1xuXG4gICAgICB0aGlzLl9pdGVtSGVpZ2h0ID0gaXRlbS5lbGVtZW50Lm9mZnNldEhlaWdodDtcblxuICAgICAgaWYgKHRoaXMuX2l0ZW1IZWlnaHQgPiAwKSB7XG4gICAgICAgIGRvbmUoKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICAvLyByZXRyeSB0byBtZWFzdXJlIG9mZnNldCBoZWlnaHRcbiAgICAgIC8vIGRpcnR5IGZpeCBmb3IgYW5ndWxhcjIgZGlyZWN0aXZlXG4gICAgICBjb25zdCBsYXN0VmlzaWJpbGl0eSA9IHRoaXMuX3dyYXBwZXJFbGVtZW50LnN0eWxlLnZpc2liaWxpdHk7XG4gICAgICB0aGlzLl93cmFwcGVyRWxlbWVudC5zdHlsZS52aXNpYmlsaXR5ID0gJ2hpZGRlbic7XG4gICAgICBpdGVtLmVsZW1lbnQuc3R5bGUudmlzaWJpbGl0eSA9ICdoaWRkZW4nO1xuXG4gICAgICBzZXRJbW1lZGlhdGUoKCkgPT4ge1xuICAgICAgICB0aGlzLl9pdGVtSGVpZ2h0ID0gaXRlbS5lbGVtZW50Lm9mZnNldEhlaWdodDtcbiAgICAgICAgaWYgKHRoaXMuX2l0ZW1IZWlnaHQgPT0gMCkge1xuICAgICAgICAgIHRocm93IEVycm9yKCdJbnZhbGlkIHN0YXRlOiB0aGlzLl9pdGVtSGVpZ2h0IG11c3QgYmUgZ3JlYXRlciB0aGFuIHplcm8uJyk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5fd3JhcHBlckVsZW1lbnQuc3R5bGUudmlzaWJpbGl0eSA9IGxhc3RWaXNpYmlsaXR5O1xuICAgICAgICBkb25lKCk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxuXG4gIGdldCBzdGF0aWNJdGVtSGVpZ2h0KCkge1xuICAgIHJldHVybiB0aGlzLl9kZWxlZ2F0ZS5pdGVtSGVpZ2h0IHx8IHRoaXMuX2l0ZW1IZWlnaHQ7XG4gIH1cbiAgX2NvdW50SXRlbXMoKSB7XG4gICAgcmV0dXJuIHRoaXMuX2RlbGVnYXRlLmNvdW50SXRlbXMoKTtcbiAgfVxuXG4gIF9nZXRJdGVtSGVpZ2h0KGkpIHtcbiAgICAvLyBJdGVtIGlzIHJlbmRlcmVkXG4gICAgaWYgKHRoaXMuX3JlbmRlcmVkSXRlbXMuaGFzT3duUHJvcGVydHkoaSkpIHtcbiAgICAgIGlmICghdGhpcy5fcmVuZGVyZWRJdGVtc1tpXS5oYXNPd25Qcm9wZXJ0eSgnaGVpZ2h0JykpIHtcbiAgICAgICAgdGhpcy5fcmVuZGVyZWRJdGVtc1tpXS5oZWlnaHQgPSB0aGlzLl9yZW5kZXJlZEl0ZW1zW2ldLmVsZW1lbnQub2Zmc2V0SGVpZ2h0O1xuICAgICAgfVxuICAgICAgcmV0dXJuIHRoaXMuX3JlbmRlcmVkSXRlbXNbaV0uaGVpZ2h0O1xuICAgIH1cblxuICAgIC8vIEl0ZW0gaXMgbm90IHJlbmRlcmVkLCBzY3JvbGwgdXBcbiAgICBpZiAodGhpcy5fdG9wUG9zaXRpb25zW2kgKyAxXSAmJiB0aGlzLl90b3BQb3NpdGlvbnNbaV0pIHtcbiAgICAgIHJldHVybiB0aGlzLl90b3BQb3NpdGlvbnNbaSArIDFdIC0gdGhpcy5fdG9wUG9zaXRpb25zW2ldO1xuICAgIH1cbiAgICAvLyBJdGVtIGlzIG5vdCByZW5kZXJlZCwgc2Nyb2xsIGRvd25cbiAgICByZXR1cm4gdGhpcy5zdGF0aWNJdGVtSGVpZ2h0IHx8IHRoaXMuX2RlbGVnYXRlLmNhbGN1bGF0ZUl0ZW1IZWlnaHQoaSk7XG4gIH1cblxuICBfY2FsY3VsYXRlUmVuZGVyZWRIZWlnaHQoKSB7XG4gICAgcmV0dXJuIE9iamVjdC5rZXlzKHRoaXMuX3JlbmRlcmVkSXRlbXMpLnJlZHVjZSgoYSwgYikgPT4gYSArIHRoaXMuX2dldEl0ZW1IZWlnaHQoKyhiKSksIDApXG4gIH1cblxuICBfb25DaGFuZ2UoKSB7XG4gICAgdGhpcy5fcmVuZGVyKCk7XG4gIH1cblxuICBfbGFzdEl0ZW1SZW5kZXJlZCgpIHtcbiAgICByZXR1cm4gTWF0aC5tYXgoLi4uT2JqZWN0LmtleXModGhpcy5fcmVuZGVyZWRJdGVtcykpXG4gIH1cblxuICBfZmlyc3RJdGVtUmVuZGVyZWQoKSB7XG4gICAgcmV0dXJuIE1hdGgubWluKC4uLk9iamVjdC5rZXlzKHRoaXMuX3JlbmRlcmVkSXRlbXMpKVxuICB9XG5cbiAgcmVmcmVzaCgpIHtcbiAgICBjb25zdCBsYXN0SXRlbUluZGV4ID0gTWF0aC5taW4odGhpcy5fbGFzdEl0ZW1SZW5kZXJlZCgpLCB0aGlzLl9jb3VudEl0ZW1zKCkgLSAxKTtcbiAgICBjb25zdCBmaXJzdEl0ZW1JbmRleCA9IHRoaXMuX2ZpcnN0SXRlbVJlbmRlcmVkKCk7XG4gICAgdGhpcy5fd3JhcHBlckVsZW1lbnQuc3R5bGUuaGVpZ2h0ID0gdGhpcy5fdG9wUG9zaXRpb25zW2ZpcnN0SXRlbUluZGV4XSArIHRoaXMuX2NhbGN1bGF0ZVJlbmRlcmVkSGVpZ2h0KCkgKyAncHgnO1xuICAgIHRoaXMucGFkZGluZyA9IHRoaXMuX3RvcFBvc2l0aW9uc1tmaXJzdEl0ZW1JbmRleF07XG4gICAgdGhpcy5fcmVtb3ZlQWxsRWxlbWVudHMoKTtcbiAgICB0aGlzLl9yZW5kZXIoe2ZvcmNlU2Nyb2xsRG93bjogdHJ1ZSwgZm9yY2VGaXJzdEluZGV4OiBmaXJzdEl0ZW1JbmRleCwgZm9yY2VMYXN0SW5kZXg6IGxhc3RJdGVtSW5kZXh9KTtcbiAgICB0aGlzLl93cmFwcGVyRWxlbWVudC5zdHlsZS5oZWlnaHQgPSAnaW5oZXJpdCc7XG4gIH1cblxuICBfcmVuZGVyKHtmb3JjZVNjcm9sbERvd24gPSBmYWxzZSwgZm9yY2VGaXJzdEluZGV4LCBmb3JjZUxhc3RJbmRleH0gPSB7fSkge1xuICAgIGlmICh0aGlzLl91bmtub3duSXRlbUhlaWdodCkge1xuICAgICAgcmV0dXJuIHRoaXMuX2NoZWNrSXRlbUhlaWdodCh0aGlzLl9yZW5kZXIuYmluZCh0aGlzLCBhcmd1bWVudHNbMF0pKTtcbiAgICB9XG5cbiAgICBjb25zdCBpc1Njcm9sbFVwID0gIWZvcmNlU2Nyb2xsRG93biAmJiB0aGlzLmxhc3RTY3JvbGxUb3AgPiB0aGlzLl9wYWdlQ29udGVudC5zY3JvbGxUb3A7XG4gICAgdGhpcy5sYXN0U2Nyb2xsVG9wID0gdGhpcy5fcGFnZUNvbnRlbnQuc2Nyb2xsVG9wO1xuICAgIGNvbnN0IGtlZXAgPSB7fTtcblxuICAgIGNvbnN0IG9mZnNldCA9IHRoaXMuX3dyYXBwZXJFbGVtZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLnRvcDtcbiAgICBjb25zdCBsaW1pdCA9IDQgKiB3aW5kb3cuaW5uZXJIZWlnaHQgLSBvZmZzZXQ7XG4gICAgY29uc3QgY291bnQgPSB0aGlzLl9jb3VudEl0ZW1zKCk7XG5cbiAgICBjb25zdCBpdGVtcyA9IFtdO1xuICAgIGNvbnN0IHN0YXJ0ID0gZm9yY2VGaXJzdEluZGV4IHx8IE1hdGgubWF4KDAsIHRoaXMuX2NhbGN1bGF0ZVN0YXJ0SW5kZXgob2Zmc2V0KSAtIDMwKTtcbiAgICBsZXQgaSA9IHN0YXJ0O1xuXG4gICAgZm9yKGxldCB0b3AgPSB0aGlzLl90b3BQb3NpdGlvbnNbaV07IGkgPCBjb3VudCAmJiB0b3AgPCBsaW1pdDsgaSsrKSB7XG4gICAgICBpZiAoaSA+PSB0aGlzLl90b3BQb3NpdGlvbnMubGVuZ3RoKSB7IC8vIHBlcmYgb3B0aW1pemF0aW9uXG4gICAgICAgIHRoaXMuX3RvcFBvc2l0aW9ucy5sZW5ndGggKz0gMTAwO1xuICAgICAgfVxuXG4gICAgICB0aGlzLl90b3BQb3NpdGlvbnNbaV0gPSB0b3A7XG4gICAgICB0b3AgKz0gdGhpcy5fZ2V0SXRlbUhlaWdodChpKTtcbiAgICB9XG5cbiAgICBpZiAodGhpcy5fZGVsZWdhdGUuaGFzUmVuZGVyRnVuY3Rpb24gJiYgdGhpcy5fZGVsZWdhdGUuaGFzUmVuZGVyRnVuY3Rpb24oKSkge1xuICAgICAgcmV0dXJuIHRoaXMuX2RlbGVnYXRlLl9yZW5kZXIoc3RhcnQsIGksICgpID0+IHtcbiAgICAgICAgdGhpcy5wYWRkaW5nID0gdGhpcy5fdG9wUG9zaXRpb25zW3N0YXJ0XTtcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIGlmIChpc1Njcm9sbFVwKSB7XG4gICAgICBmb3IgKGxldCBqID0gaSAtIDE7IGogPj0gc3RhcnQ7IGotLSkge1xuICAgICAgICBrZWVwW2pdID0gdHJ1ZTtcbiAgICAgICAgdGhpcy5fcmVuZGVyRWxlbWVudChqLCBpc1Njcm9sbFVwKTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgY29uc3QgbGFzdEluZGV4ID0gZm9yY2VMYXN0SW5kZXggfHwgTWF0aC5tYXgoaSAtIDEsIC4uLk9iamVjdC5rZXlzKHRoaXMuX3JlbmRlcmVkSXRlbXMpKTtcbiAgICAgIGZvciAobGV0IGogPSBzdGFydDsgaiA8PSBsYXN0SW5kZXg7IGorKykge1xuICAgICAgICBrZWVwW2pdID0gdHJ1ZTtcbiAgICAgICAgdGhpcy5fcmVuZGVyRWxlbWVudChqLCBpc1Njcm9sbFVwKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBPYmplY3Qua2V5cyh0aGlzLl9yZW5kZXJlZEl0ZW1zKS5mb3JFYWNoKGtleSA9PiBrZWVwW2tleV0gfHwgdGhpcy5fcmVtb3ZlRWxlbWVudChrZXksIGlzU2Nyb2xsVXApKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge051bWJlcn0gaW5kZXhcbiAgICogQHBhcmFtIHtCb29sZWFufSBpc1Njcm9sbFVwXG4gICAqL1xuICBfcmVuZGVyRWxlbWVudChpbmRleCwgaXNTY3JvbGxVcCkge1xuICAgIGNvbnN0IGl0ZW0gPSB0aGlzLl9yZW5kZXJlZEl0ZW1zW2luZGV4XTtcbiAgICBpZiAoaXRlbSkge1xuICAgICAgdGhpcy5fZGVsZWdhdGUudXBkYXRlSXRlbShpbmRleCwgaXRlbSk7IC8vIHVwZGF0ZSBpZiBpdCBleGlzdHNcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICB0aGlzLl9kZWxlZ2F0ZS5sb2FkSXRlbUVsZW1lbnQoaW5kZXgsIGl0ZW0gPT4ge1xuICAgICAgaWYgKGlzU2Nyb2xsVXApIHtcbiAgICAgICAgdGhpcy5fd3JhcHBlckVsZW1lbnQuaW5zZXJ0QmVmb3JlKGl0ZW0uZWxlbWVudCwgdGhpcy5fd3JhcHBlckVsZW1lbnQuY2hpbGRyZW5bdGhpcy5faW5zZXJ0SW5kZXhdKVxuICAgICAgICB0aGlzLnBhZGRpbmcgPSB0aGlzLl90b3BQb3NpdGlvbnNbaW5kZXhdO1xuICAgICAgICBpdGVtLmhlaWdodCA9IHRoaXMuX3RvcFBvc2l0aW9uc1tpbmRleCArIDFdIC0gdGhpcy5fdG9wUG9zaXRpb25zW2luZGV4XTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMuX3dyYXBwZXJFbGVtZW50LmFwcGVuZENoaWxkKGl0ZW0uZWxlbWVudCk7XG4gICAgICB9XG5cbiAgICAgIHRoaXMuX3JlbmRlcmVkSXRlbXNbaW5kZXhdID0gaXRlbTtcbiAgICB9KTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge051bWJlcn0gaW5kZXhcbiAgICogQHBhcmFtIHtCb29sZWFufSBpc1Njcm9sbFVwXG4gICAqL1xuICBfcmVtb3ZlRWxlbWVudChpbmRleCwgaXNTY3JvbGxVcCA9IHRydWUpIHtcbiAgICBpbmRleCA9ICsoaW5kZXgpO1xuICAgIGNvbnN0IGl0ZW0gPSB0aGlzLl9yZW5kZXJlZEl0ZW1zW2luZGV4XTtcbiAgICB0aGlzLl9kZWxlZ2F0ZS5kZXN0cm95SXRlbShpbmRleCwgaXRlbSk7XG5cbiAgICBpZiAoaXNTY3JvbGxVcCkge1xuICAgICAgdGhpcy5fdG9wUG9zaXRpb25zW2luZGV4ICsgMV0gPSB1bmRlZmluZWQ7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMucGFkZGluZyA9IHRoaXMucGFkZGluZyArIHRoaXMuX2dldEl0ZW1IZWlnaHQoaW5kZXgpO1xuICAgIH1cblxuICAgIGlmIChpdGVtLmVsZW1lbnQucGFyZW50RWxlbWVudCkge1xuICAgICAgaXRlbS5lbGVtZW50LnBhcmVudEVsZW1lbnQucmVtb3ZlQ2hpbGQoaXRlbS5lbGVtZW50KTtcbiAgICB9XG5cbiAgICBkZWxldGUgdGhpcy5fcmVuZGVyZWRJdGVtc1tpbmRleF07XG4gIH1cblxuICBfcmVtb3ZlQWxsRWxlbWVudHMoKSB7XG4gICAgT2JqZWN0LmtleXModGhpcy5fcmVuZGVyZWRJdGVtcykuZm9yRWFjaChrZXkgPT4gdGhpcy5fcmVtb3ZlRWxlbWVudChrZXkpKTtcbiAgfVxuXG4gIF9yZWNhbGN1bGF0ZVRvcFBvc2l0aW9ucyhzdGFydCwgZW5kKSB7XG4gICAgZm9yIChsZXQgaSA9IHN0YXJ0OyBpIDw9IGVuZDsgaSsrKSB7XG4gICAgICB0aGlzLl90b3BQb3NpdGlvbnNbaSArIDFdID0gdGhpcy5fdG9wUG9zaXRpb25zW2ldICsgdGhpcy5fZ2V0SXRlbUhlaWdodChpKTtcbiAgICB9XG4gIH1cblxuICBfY2FsY3VsYXRlU3RhcnRJbmRleChjdXJyZW50KSB7XG4gICAgY29uc3QgZmlyc3RJdGVtSW5kZXggPSB0aGlzLl9maXJzdEl0ZW1SZW5kZXJlZCgpO1xuICAgIGNvbnN0IGxhc3RJdGVtSW5kZXggPSB0aGlzLl9sYXN0SXRlbVJlbmRlcmVkKCk7XG5cbiAgICAvLyBGaXggZm9yIFNhZmFyaSBzY3JvbGwgYW5kIEFuZ3VsYXIgMlxuICAgIHRoaXMuX3JlY2FsY3VsYXRlVG9wUG9zaXRpb25zKGZpcnN0SXRlbUluZGV4LCBsYXN0SXRlbUluZGV4KTtcblxuICAgIGxldCBzdGFydCA9IDA7XG4gICAgbGV0IGVuZCA9IHRoaXMuX2NvdW50SXRlbXMoKSAtIDE7XG5cbiAgICAvLyBCaW5hcnkgc2VhcmNoIGZvciBpbmRleCBhdCB0b3Agb2Ygc2NyZWVuIHNvIHdlIGNhbiBzcGVlZCB1cCByZW5kZXJpbmcuXG4gICAgZm9yICg7Oykge1xuICAgICAgY29uc3QgbWlkZGxlID0gTWF0aC5mbG9vcigoc3RhcnQgKyBlbmQpIC8gMik7XG4gICAgICBjb25zdCB2YWx1ZSA9IGN1cnJlbnQgKyB0aGlzLl90b3BQb3NpdGlvbnNbbWlkZGxlXTtcblxuICAgICAgaWYgKGVuZCA8IHN0YXJ0KSB7XG4gICAgICAgIHJldHVybiAwO1xuICAgICAgfSBlbHNlIGlmICh2YWx1ZSA8PSAwICYmIHZhbHVlICsgdGhpcy5fZ2V0SXRlbUhlaWdodChtaWRkbGUpID4gMCkge1xuICAgICAgICByZXR1cm4gbWlkZGxlO1xuICAgICAgfSBlbHNlIGlmIChpc05hTih2YWx1ZSkgfHwgdmFsdWUgPj0gMCkge1xuICAgICAgICBlbmQgPSBtaWRkbGUgLSAxO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgc3RhcnQgPSBtaWRkbGUgKyAxO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIF9kZWJvdW5jZShmdW5jLCB3YWl0LCBpbW1lZGlhdGUpIHtcbiAgICBsZXQgdGltZW91dDtcbiAgICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgICBjb25zdCBjYWxsTm93ID0gaW1tZWRpYXRlICYmICF0aW1lb3V0O1xuICAgICAgY2xlYXJUaW1lb3V0KHRpbWVvdXQpO1xuICAgICAgaWYgKGNhbGxOb3cpIHtcbiAgICAgICAgZnVuYy5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGltZW91dCA9IHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgIHRpbWVvdXQgPSBudWxsO1xuICAgICAgICAgIGZ1bmMuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICAgICAgfSwgd2FpdCk7XG4gICAgICB9XG4gICAgfTtcbiAgfVxuXG4gIF9kb3VibGVGaXJlT25Ub3VjaGVuZCgpIHtcbiAgICB0aGlzLl9yZW5kZXIoKTtcbiAgICB0aGlzLl9kZWJvdW5jZSh0aGlzLl9yZW5kZXIuYmluZCh0aGlzKSwgMTAwKTtcbiAgfVxuXG4gIF9hZGRFdmVudExpc3RlbmVycygpIHtcbiAgICB1dGlsLmJpbmRMaXN0ZW5lcnModGhpcywgWydfb25DaGFuZ2UnLCAnX2RvdWJsZUZpcmVPblRvdWNoZW5kJ10pO1xuXG4gICAgaWYgKHBsYXRmb3JtLmlzSU9TKCkpIHtcbiAgICAgIHRoaXMuX2JvdW5kT25DaGFuZ2UgPSB0aGlzLl9kZWJvdW5jZSh0aGlzLl9ib3VuZE9uQ2hhbmdlLCAzMCk7XG4gICAgfVxuXG4gICAgdGhpcy5fcGFnZUNvbnRlbnQuYWRkRXZlbnRMaXN0ZW5lcignc2Nyb2xsJywgdGhpcy5fYm91bmRPbkNoYW5nZSwgdHJ1ZSk7XG5cbiAgICBpZiAocGxhdGZvcm0uaXNJT1MoKSkge1xuICAgICAgdGhpcy5fcGFnZUNvbnRlbnQuYWRkRXZlbnRMaXN0ZW5lcigndG91Y2htb3ZlJywgdGhpcy5fYm91bmRPbkNoYW5nZSwgdHJ1ZSk7XG4gICAgICB0aGlzLl9wYWdlQ29udGVudC5hZGRFdmVudExpc3RlbmVyKCd0b3VjaGVuZCcsIHRoaXMuX2JvdW5kRG91YmxlRmlyZU9uVG91Y2hlbmQsIHRydWUpO1xuICAgIH1cblxuICAgIHdpbmRvdy5kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdyZXNpemUnLCB0aGlzLl9ib3VuZE9uQ2hhbmdlLCB0cnVlKTtcbiAgfVxuXG4gIF9yZW1vdmVFdmVudExpc3RlbmVycygpIHtcbiAgICB0aGlzLl9wYWdlQ29udGVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdzY3JvbGwnLCB0aGlzLl9ib3VuZE9uQ2hhbmdlLCB0cnVlKTtcblxuICAgIGlmIChwbGF0Zm9ybS5pc0lPUygpKSB7XG4gICAgICB0aGlzLl9wYWdlQ29udGVudC5yZW1vdmVFdmVudExpc3RlbmVyKCd0b3VjaG1vdmUnLCB0aGlzLl9ib3VuZE9uQ2hhbmdlLCB0cnVlKTtcbiAgICAgIHRoaXMuX3BhZ2VDb250ZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3RvdWNoZW5kJywgdGhpcy5fYm91bmREb3VibGVGaXJlT25Ub3VjaGVuZCwgdHJ1ZSk7XG4gICAgfVxuXG4gICAgd2luZG93LmRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIHRoaXMuX2JvdW5kT25DaGFuZ2UsIHRydWUpO1xuICB9XG5cbiAgZGVzdHJveSgpIHtcbiAgICB0aGlzLl9yZW1vdmVBbGxFbGVtZW50cygpO1xuICAgIHRoaXMuX2RlbGVnYXRlLmRlc3Ryb3koKTtcbiAgICB0aGlzLl9wYXJlbnRFbGVtZW50ID0gdGhpcy5fZGVsZWdhdGUgPSB0aGlzLl9yZW5kZXJlZEl0ZW1zID0gbnVsbDtcbiAgICB0aGlzLl9yZW1vdmVFdmVudExpc3RlbmVycygpO1xuICB9XG59XG5cbiIsIi8qXG5Db3B5cmlnaHQgMjAxMy0yMDE1IEFTSUFMIENPUlBPUkFUSU9OXG5cbkxpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG55b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG5Zb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcblxuICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG5cblVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbmRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbldJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxubGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5cbiovXG5pbXBvcnQgaW50ZXJuYWwgZnJvbSAnLi9pbnRlcm5hbCc7XG5pbXBvcnQgQW5pbWF0b3JGYWN0b3J5IGZyb20gJy4vYW5pbWF0b3ItZmFjdG9yeSc7XG5pbXBvcnQgTW9kaWZpZXJVdGlsIGZyb20gJy4vbW9kaWZpZXItdXRpbCc7XG5pbXBvcnQge0xhenlSZXBlYXRQcm92aWRlciwgTGF6eVJlcGVhdERlbGVnYXRlfSBmcm9tICcuL2xhenktcmVwZWF0JztcblxuaW50ZXJuYWwuQW5pbWF0b3JGYWN0b3J5ID0gQW5pbWF0b3JGYWN0b3J5O1xuaW50ZXJuYWwuTW9kaWZpZXJVdGlsID0gTW9kaWZpZXJVdGlsO1xuaW50ZXJuYWwuTGF6eVJlcGVhdFByb3ZpZGVyID0gTGF6eVJlcGVhdFByb3ZpZGVyO1xuaW50ZXJuYWwuTGF6eVJlcGVhdERlbGVnYXRlID0gTGF6eVJlcGVhdERlbGVnYXRlO1xuXG5leHBvcnQgZGVmYXVsdCBpbnRlcm5hbDtcblxuIiwiLypcbkNvcHlyaWdodCAyMDEzLTIwMTUgQVNJQUwgQ09SUE9SQVRJT05cblxuTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbnlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbllvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuXG4gICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcblxuVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG5TZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG5saW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cblxuKi9cblxuaW1wb3J0IG9uc1BsYXRmb3JtIGZyb20gJy4vcGxhdGZvcm0nO1xuaW1wb3J0IHV0aWwgZnJvbSAnLi91dGlsJztcblxubGV0IGF1dG9TdHlsZUVuYWJsZWQgPSB0cnVlO1xuXG4vLyBNb2RpZmllcnNcbmNvbnN0IG1vZGlmaWVyc01hcCA9IHtcbiAgJ3F1aWV0JzogJ21hdGVyaWFsLS1mbGF0JyxcbiAgJ2xpZ2h0JzogJ21hdGVyaWFsLS1mbGF0JyxcbiAgJ291dGxpbmUnOiAnbWF0ZXJpYWwtLWZsYXQnLFxuICAnY3RhJzogJycsXG4gICdsYXJnZS0tcXVpZXQnOiAnbWF0ZXJpYWwtLWZsYXQgbGFyZ2UnLFxuICAnbGFyZ2UtLWN0YSc6ICdsYXJnZScsXG4gICdub2JvcmRlcic6ICcnLFxuICAnY2hldnJvbic6ICcnLFxuICAndGFwcGFibGUnOiAnJ1xufTtcblxuY29uc3QgcGxhdGZvcm1zID0ge307XG5cbnBsYXRmb3Jtcy5hbmRyb2lkID0gZWxlbWVudCA9PiB7XG5cbiAgaWYgKCEvb25zLWZhYnxvbnMtc3BlZWQtZGlhbHxvbnMtcHJvZ3Jlc3MvLnRlc3QoZWxlbWVudC50YWdOYW1lLnRvTG93ZXJDYXNlKCkpICYmXG4gICAgIS9tYXRlcmlhbC8udGVzdChlbGVtZW50LmdldEF0dHJpYnV0ZSgnbW9kaWZpZXInKSkpIHtcblxuICAgIGNvbnN0IG9sZE1vZGlmaWVyID0gZWxlbWVudC5nZXRBdHRyaWJ1dGUoJ21vZGlmaWVyJykgfHwgJyc7XG5cbiAgICBjb25zdCBuZXdNb2RpZmllciA9IG9sZE1vZGlmaWVyLnRyaW0oKS5zcGxpdCgvXFxzKy8pLm1hcChlID0+IG1vZGlmaWVyc01hcC5oYXNPd25Qcm9wZXJ0eShlKSA/IG1vZGlmaWVyc01hcFtlXSA6IGUpO1xuICAgIG5ld01vZGlmaWVyLnVuc2hpZnQoJ21hdGVyaWFsJyk7XG5cbiAgICBlbGVtZW50LnNldEF0dHJpYnV0ZSgnbW9kaWZpZXInLCBuZXdNb2RpZmllci5qb2luKCcgJykudHJpbSgpKTtcbiAgfVxuXG4gIC8vIEVmZmVjdHNcbiAgaWYgKC9vbnMtYnV0dG9ufG9ucy1saXN0LWl0ZW18b25zLWZhYnxvbnMtc3BlZWQtZGlhbHxvbnMtdGFiJC8udGVzdChlbGVtZW50LnRhZ05hbWUudG9Mb3dlckNhc2UoKSlcbiAgICAmJiAhZWxlbWVudC5oYXNBdHRyaWJ1dGUoJ3JpcHBsZScpXG4gICAgJiYgIWVsZW1lbnQucXVlcnlTZWxlY3Rvcignb25zLXJpcHBsZScpKSB7XG5cbiAgICBpZiAoZWxlbWVudC50YWdOYW1lLnRvTG93ZXJDYXNlKCkgPT09ICdvbnMtbGlzdC1pdGVtJykge1xuICAgICAgaWYgKGVsZW1lbnQuaGFzQXR0cmlidXRlKCd0YXBwYWJsZScpKSB7XG4gICAgICAgIGVsZW1lbnQuc2V0QXR0cmlidXRlKCdyaXBwbGUnLCAnJyk7XG4gICAgICAgIGVsZW1lbnQucmVtb3ZlQXR0cmlidXRlKCd0YXBwYWJsZScpO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBlbGVtZW50LnNldEF0dHJpYnV0ZSgncmlwcGxlJywgJycpO1xuICAgIH1cbiAgfVxufTtcblxucGxhdGZvcm1zLmlvcyA9IGVsZW1lbnQgPT4ge1xuXG4gLy8gTW9kaWZpZXJzXG4gaWYgKC9tYXRlcmlhbC8udGVzdChlbGVtZW50LmdldEF0dHJpYnV0ZSgnbW9kaWZpZXInKSkpIHtcbiAgIHV0aWwucmVtb3ZlTW9kaWZpZXIoZWxlbWVudCwgJ21hdGVyaWFsJyk7XG5cbiAgIGlmICh1dGlsLnJlbW92ZU1vZGlmaWVyKGVsZW1lbnQsICdtYXRlcmlhbC0tZmxhdCcpKSB7XG4gICAgIHV0aWwuYWRkTW9kaWZpZXIoZWxlbWVudCwgKHV0aWwucmVtb3ZlTW9kaWZpZXIoZWxlbWVudCwgJ2xhcmdlJykpID8gJ2xhcmdlLS1xdWlldCcgOiAncXVpZXQnKTtcbiAgIH1cblxuICAgaWYgKCFlbGVtZW50LmdldEF0dHJpYnV0ZSgnbW9kaWZpZXInKSkge1xuICAgICBlbGVtZW50LnJlbW92ZUF0dHJpYnV0ZSgnbW9kaWZpZXInKTtcbiAgIH1cbiB9XG5cbiAvLyBFZmZlY3RzXG4gaWYgKGVsZW1lbnQuaGFzQXR0cmlidXRlKCdyaXBwbGUnKSkge1xuICAgaWYgKGVsZW1lbnQudGFnTmFtZS50b0xvd2VyQ2FzZSgpID09PSAnb25zLWxpc3QtaXRlbScpIHtcbiAgICAgZWxlbWVudC5zZXRBdHRyaWJ1dGUoJ3RhcHBhYmxlJywgJycpO1xuICAgfVxuXG4gICBlbGVtZW50LnJlbW92ZUF0dHJpYnV0ZSgncmlwcGxlJyk7XG4gfVxufTtcblxuY29uc3QgdW5sb2NrZWQgPSB7XG4gIGFuZHJvaWQ6IHRydWVcbn07XG5cbmNvbnN0IHByZXBhcmVBdXRvU3R5bGUgPSAoZWxlbWVudCwgZm9yY2UpID0+IHtcbiAgaWYgKGF1dG9TdHlsZUVuYWJsZWQgJiYgIWVsZW1lbnQuaGFzQXR0cmlidXRlKCdkaXNhYmxlLWF1dG8tc3R5bGluZycpKSB7XG4gICAgY29uc3QgbW9iaWxlT1MgPSBvbnNQbGF0Zm9ybS5nZXRNb2JpbGVPUygpO1xuICAgIGlmIChwbGF0Zm9ybXMuaGFzT3duUHJvcGVydHkobW9iaWxlT1MpICYmICh1bmxvY2tlZC5oYXNPd25Qcm9wZXJ0eShtb2JpbGVPUykgfHwgZm9yY2UpKSB7XG4gICAgICBwbGF0Zm9ybXNbbW9iaWxlT1NdKGVsZW1lbnQpO1xuICAgIH1cbiAgfVxufTtcblxuY29uc3QgbWFwTW9kaWZpZXIgPSAobW9kaWZpZXIsIGVsZW1lbnQsIGZvcmNlKSA9PiB7XG4gIGlmIChhdXRvU3R5bGVFbmFibGVkICYmICFlbGVtZW50Lmhhc0F0dHJpYnV0ZSgnZGlzYWJsZS1hdXRvLXN0eWxpbmcnKSkge1xuICAgIGNvbnN0IG1vYmlsZU9TID0gb25zUGxhdGZvcm0uZ2V0TW9iaWxlT1MoKTtcbiAgICBpZiAocGxhdGZvcm1zLmhhc093blByb3BlcnR5KG1vYmlsZU9TKSAmJiAodW5sb2NrZWQuaGFzT3duUHJvcGVydHkobW9iaWxlT1MpIHx8IGZvcmNlKSkge1xuICAgICAgcmV0dXJuIG1vZGlmaWVyc01hcC5oYXNPd25Qcm9wZXJ0eShtb2RpZmllcikgPyBtb2RpZmllcnNNYXBbbW9kaWZpZXJdIDogbW9kaWZpZXI7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIG1vZGlmaWVyO1xufTtcblxuZXhwb3J0IGRlZmF1bHQge1xuICBpc0VuYWJsZWQ6ICgpID0+IGF1dG9TdHlsZUVuYWJsZWQsXG4gIGVuYWJsZTogKCkgPT4gYXV0b1N0eWxlRW5hYmxlZCA9IHRydWUsXG4gIGRpc2FibGU6ICgpID0+IGF1dG9TdHlsZUVuYWJsZWQgPSBmYWxzZSxcbiAgcHJlcGFyZTogcHJlcGFyZUF1dG9TdHlsZSxcbiAgbWFwTW9kaWZpZXJcbn07XG4iLCIvKlxuQ29weXJpZ2h0IDIwMTMtMjAxNSBBU0lBTCBDT1JQT1JBVElPTlxuXG5MaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xueW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG5cbiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuXG5Vbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG5kaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG5XSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cblNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbmxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuXG4qL1xuXG4ndXNlIHN0cmljdCc7XG5cbmNvbnN0IHVud3JhcCA9IHN0cmluZyA9PiBzdHJpbmcuc2xpY2UoMSwgLTEpO1xuY29uc3QgaXNPYmplY3RTdHJpbmcgPSBzdHJpbmcgPT4gc3RyaW5nLnN0YXJ0c1dpdGgoJ3snKSAmJiBzdHJpbmcuZW5kc1dpdGgoJ30nKTtcbmNvbnN0IGlzQXJyYXlTdHJpbmcgPSBzdHJpbmcgPT4gc3RyaW5nLnN0YXJ0c1dpdGgoJ1snKSAmJiBzdHJpbmcuZW5kc1dpdGgoJ10nKTtcbmNvbnN0IGlzUXVvdGVkU3RyaW5nID0gc3RyaW5nID0+IChzdHJpbmcuc3RhcnRzV2l0aCgnXFwnJykgJiYgc3RyaW5nLmVuZHNXaXRoKCdcXCcnKSkgfHwgKHN0cmluZy5zdGFydHNXaXRoKCdcIicpICYmIHN0cmluZy5lbmRzV2l0aCgnXCInKSk7XG5cbmNvbnN0IGVycm9yID0gKHRva2VuLCBzdHJpbmcsIG9yaWdpbmFsU3RyaW5nKSA9PiB7XG4gIHRocm93IG5ldyBFcnJvcignVW5leHBlY3RlZCB0b2tlbiBcXCcnICsgdG9rZW4gKyAnXFwnIGF0IHBvc2l0aW9uICcgKyAob3JpZ2luYWxTdHJpbmcubGVuZ3RoIC0gc3RyaW5nLmxlbmd0aCAtIDEpICsgJyBpbiBzdHJpbmc6IFxcJycgKyBvcmlnaW5hbFN0cmluZyArICdcXCcnKTtcbn07XG5cbmNvbnN0IHByb2Nlc3NUb2tlbiA9ICh0b2tlbiwgc3RyaW5nLCBvcmlnaW5hbFN0cmluZykgPT4ge1xuICBpZiAodG9rZW4gPT09ICd0cnVlJyB8fCB0b2tlbiA9PT0gJ2ZhbHNlJykge1xuICAgIHJldHVybiB0b2tlbiA9PT0gJ3RydWUnO1xuICB9IGVsc2UgaWYgKGlzUXVvdGVkU3RyaW5nKHRva2VuKSkge1xuICAgIHJldHVybiB1bndyYXAodG9rZW4pO1xuICB9IGVsc2UgaWYgKCFpc05hTih0b2tlbikpIHtcbiAgICByZXR1cm4gKyh0b2tlbik7XG4gIH0gZWxzZSBpZiAoaXNPYmplY3RTdHJpbmcodG9rZW4pKSB7XG4gICAgcmV0dXJuIHBhcnNlT2JqZWN0KHVud3JhcCh0b2tlbikpO1xuICB9IGVsc2UgaWYgKGlzQXJyYXlTdHJpbmcodG9rZW4pKSB7XG4gICAgcmV0dXJuIHBhcnNlQXJyYXkodW53cmFwKHRva2VuKSk7XG4gIH0gZWxzZSB7XG4gICAgZXJyb3IodG9rZW4sIHN0cmluZywgb3JpZ2luYWxTdHJpbmcpO1xuICB9XG59O1xuXG5jb25zdCBuZXh0VG9rZW4gPSAoc3RyaW5nKSA9PiB7XG4gIHN0cmluZyA9IHN0cmluZy50cmltTGVmdCgpO1xuICBsZXQgbGltaXQgPSBzdHJpbmcubGVuZ3RoO1xuXG4gIGlmIChzdHJpbmdbMF0gPT09ICc6JyB8fCBzdHJpbmdbMF0gPT09ICcsJykge1xuXG4gICAgbGltaXQgPSAxO1xuXG4gIH0gZWxzZSBpZiAoc3RyaW5nWzBdID09PSAneycgfHwgc3RyaW5nWzBdID09PSAnWycpIHtcblxuICAgIGNvbnN0IGMgPSBzdHJpbmcuY2hhckNvZGVBdCgwKTtcbiAgICBsZXQgbmVzdGVkT2JqZWN0ID0gMTtcbiAgICBmb3IgKGxldCBpID0gMTsgaSA8IHN0cmluZy5sZW5ndGg7IGkrKykge1xuICAgICAgaWYgKHN0cmluZy5jaGFyQ29kZUF0KGkpID09PSBjKSB7XG4gICAgICAgIG5lc3RlZE9iamVjdCsrO1xuICAgICAgfSBlbHNlIGlmIChzdHJpbmcuY2hhckNvZGVBdChpKSA9PT0gYyArIDIpIHtcbiAgICAgICAgbmVzdGVkT2JqZWN0LS07XG4gICAgICAgIGlmIChuZXN0ZWRPYmplY3QgPT09IDApIHtcbiAgICAgICAgICBsaW1pdCA9IGkgKyAxO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gIH0gZWxzZSBpZiAoc3RyaW5nWzBdID09PSAnXFwnJyB8fCBzdHJpbmdbMF0gPT09ICdcXFwiJykge1xuXG4gICAgZm9yIChsZXQgaSA9IDE7IGkgPCBzdHJpbmcubGVuZ3RoOyBpKyspIHtcbiAgICAgIGlmIChzdHJpbmdbaV0gPT09IHN0cmluZ1swXSkge1xuICAgICAgICBsaW1pdCA9IGkgKyAxO1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICB9XG5cbiAgfSBlbHNlIHtcblxuICAgIGZvciAobGV0IGkgPSAxOyBpIDwgc3RyaW5nLmxlbmd0aDsgaSsrKSB7XG4gICAgICBpZiAoWycgJywgJywnLCAnOiddLmluZGV4T2Yoc3RyaW5nW2ldKSAhPT0gLTEpIHtcbiAgICAgICAgbGltaXQgPSBpO1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICB9XG5cbiAgfVxuXG4gIHJldHVybiBzdHJpbmcuc2xpY2UoMCwgbGltaXQpO1xufTtcblxuY29uc3QgcGFyc2VPYmplY3QgPSAoc3RyaW5nKSA9PiB7XG4gIGNvbnN0IGlzVmFsaWRLZXkgPSBrZXkgPT4gL15bQS1aX1xcJF1bQS1aMC05X1xcJF0qJC9pLnRlc3Qoa2V5KTtcblxuICBzdHJpbmcgPSBzdHJpbmcudHJpbSgpO1xuICBjb25zdCBvcmlnaW5hbFN0cmluZyA9IHN0cmluZztcbiAgY29uc3Qgb2JqZWN0ID0ge307XG4gIGxldCByZWFkaW5nS2V5ID0gdHJ1ZSwga2V5LCBwcmV2aW91c1Rva2VuLCB0b2tlbjtcblxuICB3aGlsZShzdHJpbmcubGVuZ3RoID4gMCkge1xuICAgIHByZXZpb3VzVG9rZW4gPSB0b2tlbjtcbiAgICB0b2tlbiA9IG5leHRUb2tlbihzdHJpbmcpO1xuICAgIHN0cmluZyA9IHN0cmluZy5zbGljZSh0b2tlbi5sZW5ndGgsIHN0cmluZy5sZW5ndGgpLnRyaW1MZWZ0KCk7XG5cbiAgICBpZiAoKHRva2VuID09PSAnOicgJiYgKCFyZWFkaW5nS2V5IHx8ICFwcmV2aW91c1Rva2VuIHx8IHByZXZpb3VzVG9rZW4gPT09ICcsJykpXG4gICAgICAgfHwgKHRva2VuID09PSAnLCcgJiYgcmVhZGluZ0tleSlcbiAgICAgICB8fCAodG9rZW4gIT09ICc6JyAmJiB0b2tlbiAhPT0gJywnICYmIChwcmV2aW91c1Rva2VuICYmIHByZXZpb3VzVG9rZW4gIT09ICcsJyAmJiBwcmV2aW91c1Rva2VuICE9PSAnOicpKSkge1xuICAgICAgZXJyb3IodG9rZW4sIHN0cmluZywgb3JpZ2luYWxTdHJpbmcpO1xuICAgIH0gZWxzZSBpZiAodG9rZW4gPT09ICc6JyAmJiByZWFkaW5nS2V5ICYmIHByZXZpb3VzVG9rZW4pIHtcbiAgICAgIGlmIChpc1ZhbGlkS2V5KHByZXZpb3VzVG9rZW4pKSB7XG4gICAgICAgIGtleSA9IHByZXZpb3VzVG9rZW47XG4gICAgICAgIHJlYWRpbmdLZXkgPSBmYWxzZTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignSW52YWxpZCBrZXkgdG9rZW4gXFwnJyArIHByZXZpb3VzVG9rZW4gKyAnXFwnIGF0IHBvc2l0aW9uIDAgaW4gc3RyaW5nOiBcXCcnICsgb3JpZ2luYWxTdHJpbmcgKyAnXFwnJyk7XG4gICAgICB9XG4gICAgfSBlbHNlIGlmICh0b2tlbiA9PT0gJywnICYmICFyZWFkaW5nS2V5ICYmIHByZXZpb3VzVG9rZW4pIHtcbiAgICAgIG9iamVjdFtrZXldID0gcHJvY2Vzc1Rva2VuKHByZXZpb3VzVG9rZW4sIHN0cmluZywgb3JpZ2luYWxTdHJpbmcpO1xuICAgICAgcmVhZGluZ0tleSA9IHRydWU7XG4gICAgfVxuICB9XG5cbiAgaWYgKHRva2VuKSB7XG4gICAgb2JqZWN0W2tleV0gPSBwcm9jZXNzVG9rZW4odG9rZW4sIHN0cmluZywgb3JpZ2luYWxTdHJpbmcpO1xuICB9XG5cbiAgcmV0dXJuIG9iamVjdDtcbn07XG5cbmNvbnN0IHBhcnNlQXJyYXkgPSAoc3RyaW5nKSA9PiB7XG4gIHN0cmluZyA9IHN0cmluZy50cmltKCk7XG4gIGNvbnN0IG9yaWdpbmFsU3RyaW5nID0gc3RyaW5nO1xuICBjb25zdCBhcnJheSA9IFtdO1xuICBsZXQgcHJldmlvdXNUb2tlbiwgdG9rZW47XG5cbiAgd2hpbGUoc3RyaW5nLmxlbmd0aCA+IDApIHtcbiAgICBwcmV2aW91c1Rva2VuID0gdG9rZW47XG4gICAgdG9rZW4gPSBuZXh0VG9rZW4oc3RyaW5nKTtcbiAgICBzdHJpbmcgPSBzdHJpbmcuc2xpY2UodG9rZW4ubGVuZ3RoLCBzdHJpbmcubGVuZ3RoKS50cmltTGVmdCgpO1xuXG4gICAgaWYgKHRva2VuID09PSAnLCcgJiYgKCFwcmV2aW91c1Rva2VuIHx8IHByZXZpb3VzVG9rZW4gPT09ICcsJykpIHtcbiAgICAgIGVycm9yKHRva2VuLCBzdHJpbmcsIG9yaWdpbmFsU3RyaW5nKTtcbiAgICB9IGVsc2UgaWYgKHRva2VuID09PSAnLCcpIHtcbiAgICAgIGFycmF5LnB1c2gocHJvY2Vzc1Rva2VuKHByZXZpb3VzVG9rZW4sIHN0cmluZywgb3JpZ2luYWxTdHJpbmcpKTtcbiAgICB9XG4gIH1cblxuICBpZiAodG9rZW4pIHtcbiAgICBpZiAodG9rZW4gIT09ICcsJykge1xuICAgICAgYXJyYXkucHVzaChwcm9jZXNzVG9rZW4odG9rZW4sIHN0cmluZywgb3JpZ2luYWxTdHJpbmcpKTtcbiAgICB9IGVsc2Uge1xuICAgICAgZXJyb3IodG9rZW4sIHN0cmluZywgb3JpZ2luYWxTdHJpbmcpO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBhcnJheTtcbn07XG5cbmNvbnN0IHBhcnNlID0gKHN0cmluZykgPT4ge1xuICBzdHJpbmcgPSBzdHJpbmcudHJpbSgpO1xuXG4gIGlmIChpc09iamVjdFN0cmluZyhzdHJpbmcpKSB7XG4gICAgcmV0dXJuIHBhcnNlT2JqZWN0KHVud3JhcChzdHJpbmcpKTtcbiAgfSBlbHNlIGlmIChpc0FycmF5U3RyaW5nKHN0cmluZykpIHtcbiAgICByZXR1cm4gcGFyc2VBcnJheSh1bndyYXAoc3RyaW5nKSk7XG4gIH0gZWxzZSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdQcm92aWRlZCBzdHJpbmcgbXVzdCBiZSBvYmplY3Qgb3IgYXJyYXkgbGlrZTogJyArIHN0cmluZyk7XG4gIH1cbn07XG5cbmV4cG9ydCBkZWZhdWx0IHBhcnNlO1xuIiwiLypcbkNvcHlyaWdodCAyMDEzLTIwMTUgQVNJQUwgQ09SUE9SQVRJT05cblxuTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbnlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbllvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuXG4gICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcblxuVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG5TZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG5saW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cblxuKi9cblxuaW1wb3J0IGludGVybmFsIGZyb20gJy4vaW50ZXJuYWwnO1xuaW1wb3J0IGF1dG9TdHlsZSBmcm9tICcuL2F1dG9zdHlsZSc7XG5pbXBvcnQgYW5pbWF0aW9uT3B0aW9uc1BhcnNlIGZyb20gJy4vYW5pbWF0aW9uLW9wdGlvbnMtcGFyc2VyJztcblxuY29uc3QgdXRpbCA9IHt9O1xuXG4vKipcbiAqIEBwYXJhbSB7U3RyaW5nL0Z1bmN0aW9ufSBxdWVyeSBkb3QgY2xhc3MgbmFtZSBvciBub2RlIG5hbWUgb3IgbWF0Y2hlciBmdW5jdGlvbi5cbiAqIEByZXR1cm4ge0Z1bmN0aW9ufVxuICovXG51dGlsLnByZXBhcmVRdWVyeSA9IChxdWVyeSkgPT4ge1xuICByZXR1cm4gcXVlcnkgaW5zdGFuY2VvZiBGdW5jdGlvbiA/IHF1ZXJ5IDogKGVsZW1lbnQpID0+IHV0aWwubWF0Y2goZWxlbWVudCwgcXVlcnkpO1xufTtcblxuLyoqXG4gKiBAcGFyYW0ge0VsZW1lbnR9IGVcbiAqIEBwYXJhbSB7U3RyaW5nL0Z1bmN0aW9ufSBzIENTUyBTZWxlY3Rvci5cbiAqIEByZXR1cm4ge0Jvb2xlYW59XG4gKi9cbnV0aWwubWF0Y2ggPSAoZSwgcykgPT4gKGUubWF0Y2hlcyB8fCBlLndlYmtpdE1hdGNoZXNTZWxlY3RvciB8fCBlLm1vek1hdGNoZXNTZWxlY3RvciB8fCBlLm1zTWF0Y2hlc1NlbGVjdG9yKS5jYWxsKGUsIHMpO1xuXG4vKipcbiAqIEBwYXJhbSB7RWxlbWVudH0gZWxlbWVudFxuICogQHBhcmFtIHtTdHJpbmcvRnVuY3Rpb259IHF1ZXJ5IGRvdCBjbGFzcyBuYW1lIG9yIG5vZGUgbmFtZSBvciBtYXRjaGVyIGZ1bmN0aW9uLlxuICogQHJldHVybiB7SFRNTEVsZW1lbnQvbnVsbH1cbiAqL1xudXRpbC5maW5kQ2hpbGQgPSAoZWxlbWVudCwgcXVlcnkpID0+IHtcbiAgY29uc3QgbWF0Y2ggPSB1dGlsLnByZXBhcmVRdWVyeShxdWVyeSk7XG5cbiAgLy8gQ2F1dGlvbjogYGVsZW1lbnQuY2hpbGRyZW5gIGlzIGB1bmRlZmluZWRgIGluIHNvbWUgZW52aXJvbm1lbnRzIGlmIGBlbGVtZW50YCBpcyBgc3ZnYFxuICBmb3IgKGxldCBpID0gMDsgaSA8IGVsZW1lbnQuY2hpbGROb2Rlcy5sZW5ndGg7IGkrKykge1xuICAgIGNvbnN0IG5vZGUgPSBlbGVtZW50LmNoaWxkTm9kZXNbaV07XG4gICAgaWYgKG5vZGUubm9kZVR5cGUgIT09IE5vZGUuRUxFTUVOVF9OT0RFKSB7IC8vIHByb2Nlc3Mgb25seSBlbGVtZW50IG5vZGVzXG4gICAgICBjb250aW51ZTtcbiAgICB9XG4gICAgaWYgKG1hdGNoKG5vZGUpKSB7XG4gICAgICByZXR1cm4gbm9kZTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIG51bGw7XG59O1xuXG4vKipcbiAqIEBwYXJhbSB7RWxlbWVudH0gZWxlbWVudFxuICogQHBhcmFtIHtTdHJpbmcvRnVuY3Rpb259IHF1ZXJ5IGRvdCBjbGFzcyBuYW1lIG9yIG5vZGUgbmFtZSBvciBtYXRjaGVyIGZ1bmN0aW9uLlxuICogQHJldHVybiB7SFRNTEVsZW1lbnQvbnVsbH1cbiAqL1xudXRpbC5maW5kUGFyZW50ID0gKGVsZW1lbnQsIHF1ZXJ5KSA9PiB7XG4gIGNvbnN0IG1hdGNoID0gdXRpbC5wcmVwYXJlUXVlcnkocXVlcnkpO1xuXG4gIGxldCBwYXJlbnQgPSBlbGVtZW50LnBhcmVudE5vZGU7XG4gIGZvciAoOzspIHtcbiAgICBpZiAoIXBhcmVudCB8fCBwYXJlbnQgPT09IGRvY3VtZW50KSB7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgaWYgKG1hdGNoKHBhcmVudCkpIHtcbiAgICAgIHJldHVybiBwYXJlbnQ7XG4gICAgfVxuICAgIHBhcmVudCA9IHBhcmVudC5wYXJlbnROb2RlO1xuICB9XG59O1xuXG4vKipcbiAqIEBwYXJhbSB7RWxlbWVudH0gZWxlbWVudFxuICogQHJldHVybiB7Ym9vbGVhbn1cbiAqL1xudXRpbC5pc0F0dGFjaGVkID0gKGVsZW1lbnQpID0+IHtcbiAgd2hpbGUgKGRvY3VtZW50LmRvY3VtZW50RWxlbWVudCAhPT0gZWxlbWVudCkge1xuICAgIGlmICghZWxlbWVudCkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBlbGVtZW50ID0gZWxlbWVudC5wYXJlbnROb2RlO1xuICB9XG4gIHJldHVybiB0cnVlO1xufTtcblxuLyoqXG4gKiBAcGFyYW0ge0VsZW1lbnR9IGVsZW1lbnRcbiAqIEByZXR1cm4ge2Jvb2xlYW59XG4gKi9cbnV0aWwuaGFzQW55Q29tcG9uZW50QXNQYXJlbnQgPSAoZWxlbWVudCkgPT4ge1xuICB3aGlsZSAoZWxlbWVudCAmJiBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQgIT09IGVsZW1lbnQpIHtcbiAgICBlbGVtZW50ID0gZWxlbWVudC5wYXJlbnROb2RlO1xuICAgIGlmIChlbGVtZW50ICYmIGVsZW1lbnQubm9kZU5hbWUudG9Mb3dlckNhc2UoKS5tYXRjaCgvKG9ucy1uYXZpZ2F0b3J8b25zLXRhYmJhcnxvbnMtbW9kYWx8b25zLXNsaWRpbmctbWVudXxvbnMtc3BsaXQtdmlldykvKSkge1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICB9XG4gIHJldHVybiBmYWxzZTtcbn07XG5cbi8qKlxuICogQHBhcmFtIHtFbGVtZW50fSBlbGVtZW50XG4gKiBAcGFyYW0ge1N0cmluZ30gYWN0aW9uIHRvIHByb3BhZ2F0ZVxuICovXG51dGlsLnByb3BhZ2F0ZUFjdGlvbiA9IChlbGVtZW50LCBhY3Rpb24pID0+IHtcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBlbGVtZW50LmNoaWxkTm9kZXMubGVuZ3RoOyBpKyspIHtcbiAgICBjb25zdCBjaGlsZCA9IGVsZW1lbnQuY2hpbGROb2Rlc1tpXTtcbiAgICBpZiAoY2hpbGRbYWN0aW9uXSBpbnN0YW5jZW9mIEZ1bmN0aW9uKSB7XG4gICAgICBjaGlsZFthY3Rpb25dKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHV0aWwucHJvcGFnYXRlQWN0aW9uKGNoaWxkLCBhY3Rpb24pO1xuICAgIH1cbiAgfVxufTtcblxuXG4vKipcbiAqIEBwYXJhbSB7U3RyaW5nfSBzZWxlY3RvciAtIHRhZyBhbmQgY2xhc3Mgb25seVxuICogQHBhcmFtIHtPYmplY3R9IHN0eWxlXG4gKiBAcGFyYW0ge0VsZW1lbnR9XG4gKi9cbnV0aWwuY3JlYXRlID0gKHNlbGVjdG9yID0gJycsIHN0eWxlID0ge30pID0+IHtcbiAgY29uc3QgY2xhc3NMaXN0ID0gc2VsZWN0b3Iuc3BsaXQoJy4nKTtcbiAgY29uc3QgZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoY2xhc3NMaXN0LnNoaWZ0KCkgfHwgJ2RpdicpO1xuXG4gIGlmIChjbGFzc0xpc3QubGVuZ3RoKSB7XG4gICAgZWxlbWVudC5jbGFzc05hbWUgPSBjbGFzc0xpc3Quam9pbignICcpO1xuICB9XG5cbiAgdXRpbC5leHRlbmQoZWxlbWVudC5zdHlsZSwgc3R5bGUpO1xuXG4gIHJldHVybiBlbGVtZW50O1xufTtcblxuLyoqXG4gKiBAcGFyYW0ge1N0cmluZ30gaHRtbFxuICogQHJldHVybiB7RWxlbWVudH1cbiAqL1xudXRpbC5jcmVhdGVFbGVtZW50ID0gKGh0bWwpID0+IHtcbiAgY29uc3Qgd3JhcHBlciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICB3cmFwcGVyLmlubmVySFRNTCA9IGh0bWw7XG5cbiAgaWYgKHdyYXBwZXIuY2hpbGRyZW4ubGVuZ3RoID4gMSkge1xuICAgIHRocm93IG5ldyBFcnJvcignXCJodG1sXCIgbXVzdCBiZSBvbmUgd3JhcHBlciBlbGVtZW50LicpO1xuICB9XG5cbiAgcmV0dXJuIHdyYXBwZXIuY2hpbGRyZW5bMF07XG59O1xuXG4vKipcbiAqIEBwYXJhbSB7U3RyaW5nfSBodG1sXG4gKiBAcmV0dXJuIHtIVE1MRnJhZ21lbnR9XG4gKi9cbnV0aWwuY3JlYXRlRnJhZ21lbnQgPSAoaHRtbCkgPT4ge1xuICBjb25zdCB3cmFwcGVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gIHdyYXBwZXIuaW5uZXJIVE1MID0gaHRtbDtcbiAgY29uc3QgZnJhZ21lbnQgPSBkb2N1bWVudC5jcmVhdGVEb2N1bWVudEZyYWdtZW50KCk7XG5cbiAgd2hpbGUgKHdyYXBwZXIuZmlyc3RDaGlsZCkge1xuICAgIGZyYWdtZW50LmFwcGVuZENoaWxkKHdyYXBwZXIuZmlyc3RDaGlsZCk7XG4gIH1cblxuICByZXR1cm4gZnJhZ21lbnQ7XG59O1xuXG4vKlxuICogQHBhcmFtIHtPYmplY3R9IGRzdCBEZXN0aW5hdGlvbiBvYmplY3QuXG4gKiBAcGFyYW0gey4uLk9iamVjdH0gc3JjIFNvdXJjZSBvYmplY3QocykuXG4gKiBAcmV0dXJucyB7T2JqZWN0fSBSZWZlcmVuY2UgdG8gYGRzdGAuXG4gKi9cbnV0aWwuZXh0ZW5kID0gKGRzdCwgLi4uYXJncykgPT4ge1xuICBmb3IgKGxldCBpID0gMDsgaSA8IGFyZ3MubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAoYXJnc1tpXSkge1xuICAgICAgY29uc3Qga2V5cyA9IE9iamVjdC5rZXlzKGFyZ3NbaV0pO1xuICAgICAgZm9yIChsZXQgaiA9IDA7IGogPCBrZXlzLmxlbmd0aDsgaisrKSB7XG4gICAgICAgIGNvbnN0IGtleSA9IGtleXNbal07XG4gICAgICAgIGRzdFtrZXldID0gYXJnc1tpXVtrZXldO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBkc3Q7XG59O1xuXG4vKipcbiAqIEBwYXJhbSB7T2JqZWN0fSBhcnJheUxpa2VcbiAqIEByZXR1cm4ge0FycmF5fVxuICovXG51dGlsLmFycmF5RnJvbSA9IChhcnJheUxpa2UpID0+IHtcbiAgcmV0dXJuIEFycmF5LnByb3RvdHlwZS5zbGljZS5hcHBseShhcnJheUxpa2UpO1xufTtcblxuLyoqXG4gKiBAcGFyYW0ge1N0cmluZ30ganNvblN0cmluZ1xuICogQHBhcmFtIHtPYmplY3R9IFtmYWlsU2FmZV1cbiAqIEByZXR1cm4ge09iamVjdH1cbiAqL1xudXRpbC5wYXJzZUpTT05PYmplY3RTYWZlbHkgPSAoanNvblN0cmluZywgZmFpbFNhZmUgPSB7fSkgPT4ge1xuICB0cnkge1xuICAgIGNvbnN0IHJlc3VsdCA9IEpTT04ucGFyc2UoJycgKyBqc29uU3RyaW5nKTtcbiAgICBpZiAodHlwZW9mIHJlc3VsdCA9PT0gJ29iamVjdCcgJiYgcmVzdWx0ICE9PSBudWxsKSB7XG4gICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cbiAgfSBjYXRjaChlKSB7XG4gICAgcmV0dXJuIGZhaWxTYWZlO1xuICB9XG4gIHJldHVybiBmYWlsU2FmZTtcbn07XG5cbi8qKlxuICogQHBhcmFtIHtTdHJpbmd9IHBhdGggLSBwYXRoIHN1Y2ggYXMgJ215QXBwLmNvbnRyb2xsZXJzLmRhdGEubG9hZERhdGEnXG4gKiBAcmV0dXJuIHtBbnl9IC0gd2hhdGV2ZXIgaXMgbG9jYXRlZCBhdCB0aGF0IHBhdGhcbiAqL1xudXRpbC5maW5kRnJvbVBhdGggPSAocGF0aCkgPT4ge1xuICBwYXRoID0gcGF0aC5zcGxpdCgnLicpO1xuICB2YXIgZWwgPSB3aW5kb3csIGtleTtcbiAgd2hpbGUgKGtleSA9IHBhdGguc2hpZnQoKSkgeyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLWNvbmQtYXNzaWduXG4gICAgZWwgPSBlbFtrZXldO1xuICB9XG4gIHJldHVybiBlbDtcbn07XG5cbi8qKlxuICogQHBhcmFtIHtIVE1MRWxlbWVudH0gY29udGFpbmVyIC0gUGFnZSBvciBwYWdlLWNvbnRhaW5lciB0aGF0IGltcGxlbWVudHMgJ3RvcFBhZ2UnXG4gKiBAcmV0dXJuIHtIVE1MRWxlbWVudHxudWxsfSAtIFZpc2libGUgcGFnZSBlbGVtZW50IG9yIG51bGwgaWYgbm90IGZvdW5kLlxuICovXG51dGlsLmdldFRvcFBhZ2UgPSBjb250YWluZXIgPT4gY29udGFpbmVyICYmIChjb250YWluZXIudGFnTmFtZS50b0xvd2VyQ2FzZSgpID09PSAnb25zLXBhZ2UnID8gY29udGFpbmVyIDogY29udGFpbmVyLnRvcFBhZ2UpIHx8IG51bGw7XG5cbi8qKlxuICogQHBhcmFtIHtIVE1MRWxlbWVudH0gY29udGFpbmVyIC0gRWxlbWVudCB3aGVyZSB0aGUgc2VhcmNoIGJlZ2luc1xuICogQHJldHVybiB7SFRNTEVsZW1lbnR8bnVsbH0gLSBQYWdlIGVsZW1lbnQgdGhhdCBjb250YWlucyB0aGUgdmlzaWJsZSB0b29sYmFyIG9yIG51bGwuXG4gKi9cbnV0aWwuZmluZFRvb2xiYXJQYWdlID0gY29udGFpbmVyID0+IHtcbiAgY29uc3QgcGFnZSA9IHV0aWwuZ2V0VG9wUGFnZShjb250YWluZXIpO1xuXG4gIGlmIChwYWdlKSB7XG4gICAgaWYgKHV0aWwuZmluZENoaWxkKHBhZ2UsICdvbnMtdG9vbGJhcicpKSB7XG4gICAgICByZXR1cm4gcGFnZTtcbiAgICB9XG5cbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHBhZ2UuX2NvbnRlbnRFbGVtZW50LmNoaWxkcmVuLmxlbmd0aDsgaSsrKSB7XG4gICAgICBjb25zdCBuZXh0UGFnZSA9IHV0aWwuZ2V0VG9wUGFnZShwYWdlLl9jb250ZW50RWxlbWVudC5jaGlsZHJlbltpXSk7XG4gICAgICBpZiAobmV4dFBhZ2UpIHtcbiAgICAgICAgcmV0dXJuIHV0aWwuZmluZFRvb2xiYXJQYWdlKG5leHRQYWdlKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gbnVsbDtcbn07XG5cbi8qKlxuICogQHBhcmFtIHtFbGVtZW50fSBlbGVtZW50XG4gKiBAcGFyYW0ge1N0cmluZ30gZXZlbnROYW1lXG4gKiBAcGFyYW0ge09iamVjdH0gW2RldGFpbF1cbiAqIEByZXR1cm4ge0N1c3RvbUV2ZW50fVxuICovXG51dGlsLnRyaWdnZXJFbGVtZW50RXZlbnQgPSAodGFyZ2V0LCBldmVudE5hbWUsIGRldGFpbCA9IHt9KSA9PiB7XG5cbiAgY29uc3QgZXZlbnQgPSBuZXcgQ3VzdG9tRXZlbnQoZXZlbnROYW1lLCB7XG4gICAgYnViYmxlczogdHJ1ZSxcbiAgICBjYW5jZWxhYmxlOiB0cnVlLFxuICAgIGRldGFpbDogZGV0YWlsXG4gIH0pO1xuXG4gIE9iamVjdC5rZXlzKGRldGFpbCkuZm9yRWFjaChrZXkgPT4ge1xuICAgIGV2ZW50W2tleV0gPSBkZXRhaWxba2V5XTtcbiAgfSk7XG5cbiAgdGFyZ2V0LmRpc3BhdGNoRXZlbnQoZXZlbnQpO1xuXG4gIHJldHVybiBldmVudDtcbn07XG5cbi8qKlxuICogQHBhcmFtIHtFbGVtZW50fSB0YXJnZXRcbiAqIEBwYXJhbSB7U3RyaW5nfSBtb2RpZmllck5hbWVcbiAqIEByZXR1cm4ge0Jvb2xlYW59XG4gKi9cbnV0aWwuaGFzTW9kaWZpZXIgPSAodGFyZ2V0LCBtb2RpZmllck5hbWUpID0+IHtcbiAgaWYgKCF0YXJnZXQuaGFzQXR0cmlidXRlKCdtb2RpZmllcicpKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIHJldHVybiB0YXJnZXQuZ2V0QXR0cmlidXRlKCdtb2RpZmllcicpLnNwbGl0KC9cXHMrLykuc29tZShlID0+IGUgPT09IG1vZGlmaWVyTmFtZSk7XG59O1xuXG4vKipcbiAqIEBwYXJhbSB7RWxlbWVudH0gdGFyZ2V0XG4gKiBAcGFyYW0ge1N0cmluZ30gbW9kaWZpZXJOYW1lXG4gKiBAcGFyYW0ge09iamVjdH0gb3B0aW9ucy5hdXRvU3R5bGUgTWFwcyB0aGUgbW9kaWZpZXJOYW1lIHRvIHRoZSBjb3JyZXNwb25kaW5nIHN0eWxlZCBtb2RpZmllci5cbiAqIEBwYXJhbSB7T2JqZWN0fSBvcHRpb25zLmZvcmNlQXV0b1N0eWxlIElnbm9yZXMgcGxhdGZvcm0gbGltaXRhdGlvbi5cbiAqIEByZXR1cm4ge0Jvb2xlYW59IFdoZXRoZXIgaXQgd2FzIGFkZGVkIG9yIG5vdC5cbiAqL1xudXRpbC5hZGRNb2RpZmllciA9ICh0YXJnZXQsIG1vZGlmaWVyTmFtZSwgb3B0aW9ucyA9IHt9KSA9PiB7XG4gIGlmIChvcHRpb25zLmF1dG9TdHlsZSkge1xuICAgIG1vZGlmaWVyTmFtZSA9IGF1dG9TdHlsZS5tYXBNb2RpZmllcihtb2RpZmllck5hbWUsIHRhcmdldCwgb3B0aW9ucy5mb3JjZUF1dG9TdHlsZSk7XG4gIH1cblxuICBpZiAodXRpbC5oYXNNb2RpZmllcih0YXJnZXQsIG1vZGlmaWVyTmFtZSkpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICBtb2RpZmllck5hbWUgPSBtb2RpZmllck5hbWUudHJpbSgpO1xuICBjb25zdCBtb2RpZmllckF0dHJpYnV0ZSA9IHRhcmdldC5nZXRBdHRyaWJ1dGUoJ21vZGlmaWVyJykgfHwgJyc7XG4gIHRhcmdldC5zZXRBdHRyaWJ1dGUoJ21vZGlmaWVyJywgKG1vZGlmaWVyQXR0cmlidXRlICsgJyAnICsgbW9kaWZpZXJOYW1lKS50cmltKCkpO1xuICByZXR1cm4gdHJ1ZTtcbn07XG5cbi8qKlxuICogQHBhcmFtIHtFbGVtZW50fSB0YXJnZXRcbiAqIEBwYXJhbSB7U3RyaW5nfSBtb2RpZmllck5hbWVcbiAqIEBwYXJhbSB7T2JqZWN0fSBvcHRpb25zLmF1dG9TdHlsZSBNYXBzIHRoZSBtb2RpZmllck5hbWUgdG8gdGhlIGNvcnJlc3BvbmRpbmcgc3R5bGVkIG1vZGlmaWVyLlxuICogQHBhcmFtIHtPYmplY3R9IG9wdGlvbnMuZm9yY2VBdXRvU3R5bGUgSWdub3JlcyBwbGF0Zm9ybSBsaW1pdGF0aW9uLlxuICogQHJldHVybiB7Qm9vbGVhbn0gV2hldGhlciBpdCB3YXMgZm91bmQgb3Igbm90LlxuICovXG51dGlsLnJlbW92ZU1vZGlmaWVyID0gKHRhcmdldCwgbW9kaWZpZXJOYW1lLCBvcHRpb25zID0ge30pID0+IHtcbiAgaWYgKCF0YXJnZXQuZ2V0QXR0cmlidXRlKCdtb2RpZmllcicpKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgaWYgKG9wdGlvbnMuYXV0b1N0eWxlKSB7XG4gICAgbW9kaWZpZXJOYW1lID0gYXV0b1N0eWxlLm1hcE1vZGlmaWVyKG1vZGlmaWVyTmFtZSwgdGFyZ2V0LCBvcHRpb25zLmZvcmNlQXV0b1N0eWxlKTtcbiAgfVxuXG4gIGNvbnN0IG1vZGlmaWVycyA9IHRhcmdldC5nZXRBdHRyaWJ1dGUoJ21vZGlmaWVyJykuc3BsaXQoL1xccysvKTtcblxuICBjb25zdCBuZXdNb2RpZmllcnMgPSBtb2RpZmllcnMuZmlsdGVyKGl0ZW0gPT4gaXRlbSAmJiBpdGVtICE9PSBtb2RpZmllck5hbWUpO1xuICB0YXJnZXQuc2V0QXR0cmlidXRlKCdtb2RpZmllcicsIG5ld01vZGlmaWVycy5qb2luKCcgJykpO1xuXG4gIHJldHVybiBtb2RpZmllcnMubGVuZ3RoICE9PSBuZXdNb2RpZmllcnMubGVuZ3RoO1xufTtcblxuLy8gVE9ETzogRklYXG51dGlsLnVwZGF0ZVBhcmVudFBvc2l0aW9uID0gKGVsKSA9PiB7XG4gIGlmICghZWwuX3BhcmVudFVwZGF0ZWQgJiYgZWwucGFyZW50RWxlbWVudCkge1xuICAgIGlmICh3aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZShlbC5wYXJlbnRFbGVtZW50KS5nZXRQcm9wZXJ0eVZhbHVlKCdwb3NpdGlvbicpID09PSAnc3RhdGljJykge1xuICAgICAgZWwucGFyZW50RWxlbWVudC5zdHlsZS5wb3NpdGlvbiA9ICdyZWxhdGl2ZSc7XG4gICAgfVxuICAgIGVsLl9wYXJlbnRVcGRhdGVkID0gdHJ1ZTtcbiAgfVxufTtcblxudXRpbC50b2dnbGVBdHRyaWJ1dGUgPSAoZWxlbWVudCwgbmFtZSwgdmFsdWUpID0+IHtcbiAgaWYgKHZhbHVlKSB7XG4gICAgZWxlbWVudC5zZXRBdHRyaWJ1dGUobmFtZSwgdmFsdWUpO1xuICB9IGVsc2Uge1xuICAgIGVsZW1lbnQucmVtb3ZlQXR0cmlidXRlKG5hbWUpO1xuICB9XG59O1xuXG51dGlsLmJpbmRMaXN0ZW5lcnMgPSAoZWxlbWVudCwgbGlzdGVuZXJOYW1lcykgPT4ge1xuICBsaXN0ZW5lck5hbWVzLmZvckVhY2gobmFtZSA9PiB7XG4gICAgY29uc3QgYm91bmROYW1lID0gbmFtZS5yZXBsYWNlKC9eX1thLXpdLywgJ19ib3VuZCcgKyBuYW1lWzFdLnRvVXBwZXJDYXNlKCkpO1xuICAgIGVsZW1lbnRbYm91bmROYW1lXSA9IGVsZW1lbnRbYm91bmROYW1lXSB8fCBlbGVtZW50W25hbWVdLmJpbmQoZWxlbWVudCk7XG4gIH0pO1xufTtcblxudXRpbC5lYWNoID0gKG9iaiwgZikgPT4gT2JqZWN0LmtleXMob2JqKS5mb3JFYWNoKGtleSA9PiBmKGtleSwgb2JqW2tleV0pKTtcblxuXG4vKipcbiAqIEBwYXJhbSB7RWxlbWVudH0gdGFyZ2V0XG4gKiBAcGFyYW0ge0VsZW1lbnR9IGhhc1JpcHBsZVxuICovXG51dGlsLnVwZGF0ZVJpcHBsZSA9ICh0YXJnZXQsIGhhc1JpcHBsZSkgPT4ge1xuICBpZiAoaGFzUmlwcGxlID09PSB1bmRlZmluZWQpIHtcbiAgICBoYXNSaXBwbGUgPSB0YXJnZXQuaGFzQXR0cmlidXRlKCdyaXBwbGUnKTtcbiAgfVxuXG4gIGNvbnN0IHJpcHBsZUVsZW1lbnQgPSB1dGlsLmZpbmRDaGlsZCh0YXJnZXQsICdvbnMtcmlwcGxlJyk7XG5cbiAgaWYgKGhhc1JpcHBsZSkge1xuICAgIGlmICghcmlwcGxlRWxlbWVudCkge1xuICAgICAgdGFyZ2V0Lmluc2VydEJlZm9yZShkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdvbnMtcmlwcGxlJyksIHRhcmdldC5maXJzdENoaWxkKTtcbiAgICB9XG4gIH0gZWxzZSBpZiAocmlwcGxlRWxlbWVudCkge1xuICAgIHJpcHBsZUVsZW1lbnQucmVtb3ZlKCk7XG4gIH1cbn07XG5cbi8qKlxuICogQHBhcmFtIHtTdHJpbmd9XG4gKiBAcmV0dXJuIHtPYmplY3R9XG4gKi9cbnV0aWwuYW5pbWF0aW9uT3B0aW9uc1BhcnNlID0gYW5pbWF0aW9uT3B0aW9uc1BhcnNlO1xuXG4vKipcbiAqIEBwYXJhbSB7Kn0gdmFsdWVcbiAqL1xudXRpbC5pc0ludGVnZXIgPSAodmFsdWUpID0+IHtcbiAgcmV0dXJuIHR5cGVvZiB2YWx1ZSA9PT0gJ251bWJlcicgJiZcbiAgICBpc0Zpbml0ZSh2YWx1ZSkgJiZcbiAgICBNYXRoLmZsb29yKHZhbHVlKSA9PT0gdmFsdWU7XG59O1xuXG4vKipcbiAqIEByZXR1cm4ge09iZWpjdH0gRGVmZXJyZWQgcHJvbWlzZS5cbiAqL1xudXRpbC5kZWZlciA9ICgpID0+IHtcbiAgY29uc3QgZGVmZXJyZWQgPSB7fTtcbiAgZGVmZXJyZWQucHJvbWlzZSA9IG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICBkZWZlcnJlZC5yZXNvbHZlID0gcmVzb2x2ZTtcbiAgICBkZWZlcnJlZC5yZWplY3QgPSByZWplY3Q7XG4gIH0pO1xuICByZXR1cm4gZGVmZXJyZWQ7XG59O1xuXG4vKipcbiAqIFNob3cgd2FybmluZ3Mgd2hlbiB0aGV5IGFyZSBlbmFibGVkLlxuICpcbiAqIEBwYXJhbSB7Kn0gYXJndW1lbnRzIHRvIGNvbnNvbGUud2FyblxuICovXG51dGlsLndhcm4gPSAoLi4uYXJncykgPT4ge1xuICBpZiAoIWludGVybmFsLmNvbmZpZy53YXJuaW5nc0Rpc2FibGVkKSB7XG4gICAgY29uc29sZS53YXJuKC4uLmFyZ3MpO1xuICB9XG59O1xuXG5leHBvcnQgZGVmYXVsdCB1dGlsO1xuIiwiLypcbkNvcHlyaWdodCAyMDEzLTIwMTUgQVNJQUwgQ09SUE9SQVRJT05cblxuTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbnlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbllvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuXG4gICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcblxuVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG5TZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG5saW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cblxuKi9cblxuXG4vKipcbiAqIE1pbmltYWwgYW5pbWF0aW9uIGxpYnJhcnkgZm9yIG1hbmFnaW5nIGNzcyB0cmFuc2l0aW9uIG9uIG1vYmlsZSBicm93c2Vycy5cbiAqL1xuJ3VzZSBzdHJpY3QnO1xuXG52YXIgVElNRU9VVF9SQVRJTyA9IDEuNDtcblxudmFyIHV0aWwgPSB7XG59O1xuXG4vLyBjYXBpdGFsaXplIHN0cmluZ1xudXRpbC5jYXBpdGFsaXplID0gZnVuY3Rpb24oc3RyKSB7XG4gIHJldHVybiBzdHIuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkgKyBzdHIuc2xpY2UoMSk7XG59O1xuXG4vKipcbiAqIEBwYXJhbSB7T2JqZWN0fSBwYXJhbXNcbiAqIEBwYXJhbSB7U3RyaW5nfSBwYXJhbXMucHJvcGVydHlcbiAqIEBwYXJhbSB7RmxvYXR9IHBhcmFtcy5kdXJhdGlvblxuICogQHBhcmFtIHtTdHJpbmd9IHBhcmFtcy50aW1pbmdcbiAqL1xudXRpbC5idWlsZFRyYW5zaXRpb25WYWx1ZSA9IGZ1bmN0aW9uKHBhcmFtcykge1xuICBwYXJhbXMucHJvcGVydHkgPSBwYXJhbXMucHJvcGVydHkgfHwgJ2FsbCc7XG4gIHBhcmFtcy5kdXJhdGlvbiA9IHBhcmFtcy5kdXJhdGlvbiB8fCAwLjQ7XG4gIHBhcmFtcy50aW1pbmcgPSBwYXJhbXMudGltaW5nIHx8ICdsaW5lYXInO1xuXG4gIHZhciBwcm9wcyA9IHBhcmFtcy5wcm9wZXJ0eS5zcGxpdCgvICsvKTtcblxuICByZXR1cm4gcHJvcHMubWFwKGZ1bmN0aW9uKHByb3ApIHtcbiAgICByZXR1cm4gcHJvcCArICcgJyArIHBhcmFtcy5kdXJhdGlvbiArICdzICcgKyBwYXJhbXMudGltaW5nO1xuICB9KS5qb2luKCcsICcpO1xufTtcblxuLyoqXG4gKiBBZGQgYW4gZXZlbnQgaGFuZGxlciBvbiBcInRyYW5zaXRpb25lbmRcIiBldmVudC5cbiAqL1xudXRpbC5vbmNlT25UcmFuc2l0aW9uRW5kID0gZnVuY3Rpb24oZWxlbWVudCwgY2FsbGJhY2spIHtcbiAgaWYgKCFlbGVtZW50KSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uKCkge307XG4gIH1cblxuICB2YXIgZm4gPSBmdW5jdGlvbihldmVudCkge1xuICAgIGlmIChlbGVtZW50ID09IGV2ZW50LnRhcmdldCkge1xuICAgICAgZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgICByZW1vdmVMaXN0ZW5lcnMoKTtcblxuICAgICAgY2FsbGJhY2soKTtcbiAgICB9XG4gIH07XG5cbiAgdmFyIHJlbW92ZUxpc3RlbmVycyA9IGZ1bmN0aW9uKCkge1xuICAgIHV0aWwuX3RyYW5zaXRpb25FbmRFdmVudHMuZm9yRWFjaChmdW5jdGlvbihldmVudE5hbWUpIHtcbiAgICAgIGVsZW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcihldmVudE5hbWUsIGZuLCBmYWxzZSk7XG4gICAgfSk7XG4gIH07XG5cbiAgdXRpbC5fdHJhbnNpdGlvbkVuZEV2ZW50cy5mb3JFYWNoKGZ1bmN0aW9uKGV2ZW50TmFtZSkge1xuICAgIGVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihldmVudE5hbWUsIGZuLCBmYWxzZSk7XG4gIH0pO1xuXG4gIHJldHVybiByZW1vdmVMaXN0ZW5lcnM7XG59O1xuXG51dGlsLl90cmFuc2l0aW9uRW5kRXZlbnRzID0gKGZ1bmN0aW9uKCkge1xuXG4gIGlmICgnb250cmFuc2l0aW9uZW5kJyBpbiB3aW5kb3cpIHtcbiAgICByZXR1cm4gWyd0cmFuc2l0aW9uZW5kJ107XG4gIH1cblxuICBpZiAoJ29ud2Via2l0dHJhbnNpdGlvbmVuZCcgaW4gd2luZG93KSB7XG4gICAgcmV0dXJuIFsnd2Via2l0VHJhbnNpdGlvbkVuZCddO1xuICB9XG5cbiAgaWYgKHV0aWwudmVuZG9yUHJlZml4ID09PSAnd2Via2l0JyB8fCB1dGlsLnZlbmRvclByZWZpeCA9PT0gJ28nIHx8IHV0aWwudmVuZG9yUHJlZml4ID09PSAnbW96JyB8fCB1dGlsLnZlbmRvclByZWZpeCA9PT0gJ21zJykge1xuICAgIHJldHVybiBbdXRpbC52ZW5kb3JQcmVmaXggKyAnVHJhbnNpdGlvbkVuZCcsICd0cmFuc2l0aW9uZW5kJ107XG4gIH1cblxuICByZXR1cm4gW107XG59KSgpO1xuXG51dGlsLl9jc3NQcm9wZXJ0eURpY3QgPSAoZnVuY3Rpb24oKSB7XG4gIHZhciBzdHlsZXMgPSB3aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZShkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQsICcnKTtcbiAgdmFyIGRpY3QgPSB7fTtcbiAgdmFyIGEgPSAnQScuY2hhckNvZGVBdCgwKTtcbiAgdmFyIHogPSAneicuY2hhckNvZGVBdCgwKTtcblxuICB2YXIgdXBwZXIgPSBmdW5jdGlvbihzKSB7XG4gICAgcmV0dXJuIHMuc3Vic3RyKDEpLnRvVXBwZXJDYXNlKCk7XG4gIH07XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdHlsZXMubGVuZ3RoOyBpKyspIHtcblxuICAgIHZhciBrZXkgPSBzdHlsZXNbaV1cbiAgICAucmVwbGFjZSgvXltcXC1dKy8sICcnKVxuICAgIC5yZXBsYWNlKC9bXFwtXVthLXpdL2csIHVwcGVyKVxuICAgIC5yZXBsYWNlKC9ebW96LywgJ01veicpO1xuXG4gICAgaWYgKGEgPD0ga2V5LmNoYXJDb2RlQXQoMCkgJiYgeiA+PSBrZXkuY2hhckNvZGVBdCgwKSkge1xuICAgICAgaWYgKGtleSAhPT0gJ2Nzc1RleHQnICYmIGtleSAhPT0gJ3BhcmVudFRleHQnKSB7XG4gICAgICAgIGRpY3Rba2V5XSA9IHRydWU7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGRpY3Q7XG59KSgpO1xuXG51dGlsLmhhc0Nzc1Byb3BlcnR5ID0gZnVuY3Rpb24obmFtZSkge1xuICByZXR1cm4gbmFtZSBpbiB1dGlsLl9jc3NQcm9wZXJ0eURpY3Q7XG59O1xuXG4vKipcbiAqIFZlbmRvciBwcmVmaXggZm9yIGNzcyBwcm9wZXJ0eS5cbiAqL1xudXRpbC52ZW5kb3JQcmVmaXggPSAoZnVuY3Rpb24oKSB7XG4gIHZhciBzdHlsZXMgPSB3aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZShkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQsICcnKSxcbiAgICBwcmUgPSAoQXJyYXkucHJvdG90eXBlLnNsaWNlXG4gICAgICAuY2FsbChzdHlsZXMpXG4gICAgICAuam9pbignJylcbiAgICAgIC5tYXRjaCgvLShtb3p8d2Via2l0fG1zKS0vKSB8fCAoc3R5bGVzLk9MaW5rID09PSAnJyAmJiBbJycsICdvJ10pXG4gICAgKVsxXTtcbiAgICByZXR1cm4gcHJlO1xufSkoKTtcblxudXRpbC5mb3JjZUxheW91dEF0T25jZSA9IGZ1bmN0aW9uKGVsZW1lbnRzLCBjYWxsYmFjaykge1xuICB0aGlzLmJhdGNoSW1tZWRpYXRlKGZ1bmN0aW9uKCkge1xuICAgIGVsZW1lbnRzLmZvckVhY2goZnVuY3Rpb24oZWxlbWVudCkge1xuICAgICAgLy8gZm9yY2UgbGF5b3V0XG4gICAgICBlbGVtZW50Lm9mZnNldEhlaWdodDtcbiAgICB9KTtcbiAgICBjYWxsYmFjaygpO1xuICB9KTtcbn07XG5cbnV0aWwuYmF0Y2hJbW1lZGlhdGUgPSAoZnVuY3Rpb24oKSB7XG4gIHZhciBjYWxsYmFja3MgPSBbXTtcblxuICByZXR1cm4gZnVuY3Rpb24oY2FsbGJhY2spIHtcbiAgICBpZiAoY2FsbGJhY2tzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgc2V0SW1tZWRpYXRlKGZ1bmN0aW9uKCkge1xuICAgICAgICB2YXIgY29uY3JlYXRlQ2FsbGJhY2tzID0gY2FsbGJhY2tzLnNsaWNlKDApO1xuICAgICAgICBjYWxsYmFja3MgPSBbXTtcbiAgICAgICAgY29uY3JlYXRlQ2FsbGJhY2tzLmZvckVhY2goZnVuY3Rpb24oY2FsbGJhY2spIHtcbiAgICAgICAgICBjYWxsYmFjaygpO1xuICAgICAgICB9KTtcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIGNhbGxiYWNrcy5wdXNoKGNhbGxiYWNrKTtcbiAgfTtcbn0pKCk7XG5cbnV0aWwuYmF0Y2hBbmltYXRpb25GcmFtZSA9IChmdW5jdGlvbigpIHtcbiAgdmFyIGNhbGxiYWNrcyA9IFtdO1xuXG4gIHZhciByYWYgPSB3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lIHx8XG4gICAgd2luZG93LndlYmtpdFJlcXVlc3RBbmltYXRpb25GcmFtZSB8fFxuICAgIHdpbmRvdy5tb3pSZXF1ZXN0QW5pbWF0aW9uRnJhbWUgfHxcbiAgICB3aW5kb3cub1JlcXVlc3RBbmltYXRpb25GcmFtZSB8fFxuICAgIHdpbmRvdy5tc1JlcXVlc3RBbmltYXRpb25GcmFtZSB8fFxuICAgIGZ1bmN0aW9uKGNhbGxiYWNrKSB7XG4gICAgc2V0VGltZW91dChjYWxsYmFjaywgMTAwMCAvIDYwKTtcbiAgfTtcblxuICByZXR1cm4gZnVuY3Rpb24oY2FsbGJhY2spIHtcbiAgICBpZiAoY2FsbGJhY2tzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgcmFmKGZ1bmN0aW9uKCkge1xuICAgICAgICB2YXIgY29uY3JlYXRlQ2FsbGJhY2tzID0gY2FsbGJhY2tzLnNsaWNlKDApO1xuICAgICAgICBjYWxsYmFja3MgPSBbXTtcbiAgICAgICAgY29uY3JlYXRlQ2FsbGJhY2tzLmZvckVhY2goZnVuY3Rpb24oY2FsbGJhY2spIHtcbiAgICAgICAgICBjYWxsYmFjaygpO1xuICAgICAgICB9KTtcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIGNhbGxiYWNrcy5wdXNoKGNhbGxiYWNrKTtcbiAgfTtcbn0pKCk7XG5cbnV0aWwudHJhbnNpdGlvblByb3BlcnR5TmFtZSA9IChmdW5jdGlvbigpIHtcbiAgaWYgKHV0aWwuaGFzQ3NzUHJvcGVydHkoJ3RyYW5zaXRpb25EdXJhdGlvbicpKSB7XG4gICAgcmV0dXJuICd0cmFuc2l0aW9uJztcbiAgfVxuXG4gIGlmICh1dGlsLmhhc0Nzc1Byb3BlcnR5KHV0aWwudmVuZG9yUHJlZml4ICsgJ1RyYW5zaXRpb25EdXJhdGlvbicpKSB7XG4gICAgcmV0dXJuIHV0aWwudmVuZG9yUHJlZml4ICsgJ1RyYW5zaXRpb24nO1xuICB9XG5cbiAgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIHN0YXRlJyk7XG59KSgpO1xuXG5cbi8qKlxuICogQHBhcmFtIHtIVE1MRWxlbWVudH0gZWxlbWVudFxuICovXG52YXIgQW5pbWl0ID0gZnVuY3Rpb24oZWxlbWVudCkge1xuICBpZiAoISh0aGlzIGluc3RhbmNlb2YgQW5pbWl0KSkge1xuICAgIHJldHVybiBuZXcgQW5pbWl0KGVsZW1lbnQpO1xuICB9XG5cbiAgaWYgKGVsZW1lbnQgaW5zdGFuY2VvZiBIVE1MRWxlbWVudCkge1xuICAgIHRoaXMuZWxlbWVudHMgPSBbZWxlbWVudF07XG4gIH0gZWxzZSBpZiAoT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGVsZW1lbnQpID09PSAnW29iamVjdCBBcnJheV0nKSB7XG4gICAgdGhpcy5lbGVtZW50cyA9IGVsZW1lbnQ7XG5cbiAgfSBlbHNlIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0ZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYW4gYXJyYXkgb3IgYW4gaW5zdGFuY2Ugb2YgSFRNTEVsZW1lbnQuJyk7XG4gIH1cblxuICB0aGlzLnRyYW5zaXRpb25RdWV1ZSA9IFtdO1xuICB0aGlzLmxhc3RTdHlsZUF0dHJpYnV0ZURpY3QgPSBbXTtcbn07XG5cbkFuaW1pdC5wcm90b3R5cGUgPSB7XG5cbiAgLyoqXG4gICAqIEBwcm9wZXJ0eSB7QXJyYXl9XG4gICAqL1xuICB0cmFuc2l0aW9uUXVldWU6IHVuZGVmaW5lZCxcblxuICAvKipcbiAgICogQHByb3BlcnR5IHtBcnJheX1cbiAgICovXG4gIGVsZW1lbnRzOiB1bmRlZmluZWQsXG5cbiAgLyoqXG4gICAqIFN0YXJ0IGFuaW1hdGlvbiBzZXF1ZW5jZSB3aXRoIHBhc3NlZCBhbmltYXRpb25zLlxuICAgKlxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBjYWxsYmFja1xuICAgKi9cbiAgcGxheTogZnVuY3Rpb24oY2FsbGJhY2spIHtcbiAgICBpZiAodHlwZW9mIGNhbGxiYWNrID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICB0aGlzLnRyYW5zaXRpb25RdWV1ZS5wdXNoKGZ1bmN0aW9uKGRvbmUpIHtcbiAgICAgICAgY2FsbGJhY2soKTtcbiAgICAgICAgZG9uZSgpO1xuICAgICAgfSk7XG4gICAgfVxuXG4gICAgdGhpcy5zdGFydEFuaW1hdGlvbigpO1xuXG4gICAgcmV0dXJuIHRoaXM7XG4gIH0sXG5cbiAgLyoqXG4gICAqIFF1ZXVlIHRyYW5zaXRpb24gYW5pbWF0aW9ucyBvciBvdGhlciBmdW5jdGlvbi5cbiAgICpcbiAgICogZS5nLiBhbmltaXQoZWx0KS5xdWV1ZSh7Y29sb3I6ICdyZWQnfSlcbiAgICogZS5nLiBhbmltaXQoZWx0KS5xdWV1ZSh7Y29sb3I6ICdyZWQnfSwge2R1cmF0aW9uOiAwLjR9KVxuICAgKiBlLmcuIGFuaW1pdChlbHQpLnF1ZXVlKHtjc3M6IHtjb2xvcjogJ3JlZCd9LCBkdXJhdGlvbjogMC4yfSlcbiAgICpcbiAgICogQHBhcmFtIHtPYmplY3R8QW5pbWl0LlRyYW5zaXRpb258RnVuY3Rpb259IHRyYW5zaXRpb25cbiAgICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zXVxuICAgKi9cbiAgcXVldWU6IGZ1bmN0aW9uKHRyYW5zaXRpb24sIG9wdGlvbnMpIHtcbiAgICB2YXIgcXVldWUgPSB0aGlzLnRyYW5zaXRpb25RdWV1ZTtcblxuICAgIGlmICh0cmFuc2l0aW9uICYmIG9wdGlvbnMpIHtcbiAgICAgIG9wdGlvbnMuY3NzID0gdHJhbnNpdGlvbjtcbiAgICAgIHRyYW5zaXRpb24gPSBuZXcgQW5pbWl0LlRyYW5zaXRpb24ob3B0aW9ucyk7XG4gICAgfVxuXG4gICAgaWYgKCEodHJhbnNpdGlvbiBpbnN0YW5jZW9mIEZ1bmN0aW9uIHx8IHRyYW5zaXRpb24gaW5zdGFuY2VvZiBBbmltaXQuVHJhbnNpdGlvbikpIHtcbiAgICAgIGlmICh0cmFuc2l0aW9uLmNzcykge1xuICAgICAgICB0cmFuc2l0aW9uID0gbmV3IEFuaW1pdC5UcmFuc2l0aW9uKHRyYW5zaXRpb24pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdHJhbnNpdGlvbiA9IG5ldyBBbmltaXQuVHJhbnNpdGlvbih7XG4gICAgICAgICAgY3NzOiB0cmFuc2l0aW9uXG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH1cblxuICAgIGlmICh0cmFuc2l0aW9uIGluc3RhbmNlb2YgRnVuY3Rpb24pIHtcbiAgICAgIHF1ZXVlLnB1c2godHJhbnNpdGlvbik7XG4gICAgfSBlbHNlIGlmICh0cmFuc2l0aW9uIGluc3RhbmNlb2YgQW5pbWl0LlRyYW5zaXRpb24pIHtcbiAgICAgIHF1ZXVlLnB1c2godHJhbnNpdGlvbi5idWlsZCgpKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIGFyZ3VtZW50cycpO1xuICAgIH1cblxuICAgIHJldHVybiB0aGlzO1xuICB9LFxuXG4gIC8qKlxuICAgKiBRdWV1ZSB0cmFuc2l0aW9uIGFuaW1hdGlvbnMuXG4gICAqXG4gICAqIEBwYXJhbSB7RmxvYXR9IHNlY29uZHNcbiAgICovXG4gIHdhaXQ6IGZ1bmN0aW9uKHNlY29uZHMpIHtcbiAgICBpZiAoc2Vjb25kcyA+IDApIHtcbiAgICAgIHRoaXMudHJhbnNpdGlvblF1ZXVlLnB1c2goZnVuY3Rpb24oZG9uZSkge1xuICAgICAgICBzZXRUaW1lb3V0KGRvbmUsIDEwMDAgKiBzZWNvbmRzKTtcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIHJldHVybiB0aGlzO1xuICB9LFxuXG4gIHNhdmVTdHlsZTogZnVuY3Rpb24oKSB7XG5cbiAgICB0aGlzLnRyYW5zaXRpb25RdWV1ZS5wdXNoKGZ1bmN0aW9uKGRvbmUpIHtcbiAgICAgIHRoaXMuZWxlbWVudHMuZm9yRWFjaChmdW5jdGlvbihlbGVtZW50LCBpbmRleCkge1xuICAgICAgICB2YXIgY3NzID0gdGhpcy5sYXN0U3R5bGVBdHRyaWJ1dGVEaWN0W2luZGV4XSA9IHt9O1xuXG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgZWxlbWVudC5zdHlsZS5sZW5ndGg7IGkrKykge1xuICAgICAgICAgIGNzc1tlbGVtZW50LnN0eWxlW2ldXSA9IGVsZW1lbnQuc3R5bGVbZWxlbWVudC5zdHlsZVtpXV07XG4gICAgICAgIH1cbiAgICAgIH0uYmluZCh0aGlzKSk7XG4gICAgICBkb25lKCk7XG4gICAgfS5iaW5kKHRoaXMpKTtcblxuICAgIHJldHVybiB0aGlzO1xuICB9LFxuXG4gIC8qKlxuICAgKiBSZXN0b3JlIGVsZW1lbnQncyBzdHlsZS5cbiAgICpcbiAgICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zXVxuICAgKiBAcGFyYW0ge0Zsb2F0fSBbb3B0aW9ucy5kdXJhdGlvbl1cbiAgICogQHBhcmFtIHtTdHJpbmd9IFtvcHRpb25zLnRpbWluZ11cbiAgICogQHBhcmFtIHtTdHJpbmd9IFtvcHRpb25zLnRyYW5zaXRpb25dXG4gICAqL1xuICByZXN0b3JlU3R5bGU6IGZ1bmN0aW9uKG9wdGlvbnMpIHtcbiAgICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgICB2YXIgc2VsZiA9IHRoaXM7XG5cbiAgICBpZiAob3B0aW9ucy50cmFuc2l0aW9uICYmICFvcHRpb25zLmR1cmF0aW9uKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ1wib3B0aW9ucy5kdXJhdGlvblwiIGlzIHJlcXVpcmVkIHdoZW4gXCJvcHRpb25zLnRyYW5zaXRpb25cIiBpcyBlbmFibGVkLicpO1xuICAgIH1cblxuICAgIHZhciB0cmFuc2l0aW9uTmFtZSA9IHV0aWwudHJhbnNpdGlvblByb3BlcnR5TmFtZTtcblxuICAgIGlmIChvcHRpb25zLnRyYW5zaXRpb24gfHwgKG9wdGlvbnMuZHVyYXRpb24gJiYgb3B0aW9ucy5kdXJhdGlvbiA+IDApKSB7XG4gICAgICB2YXIgdHJhbnNpdGlvblZhbHVlID0gb3B0aW9ucy50cmFuc2l0aW9uIHx8ICgnYWxsICcgKyBvcHRpb25zLmR1cmF0aW9uICsgJ3MgJyArIChvcHRpb25zLnRpbWluZyB8fCAnbGluZWFyJykpO1xuXG4gICAgICB0aGlzLnRyYW5zaXRpb25RdWV1ZS5wdXNoKGZ1bmN0aW9uKGRvbmUpIHtcbiAgICAgICAgdmFyIGVsZW1lbnRzID0gdGhpcy5lbGVtZW50cztcbiAgICAgICAgdmFyIHRpbWVvdXRJZDtcblxuICAgICAgICB2YXIgY2xlYXJUcmFuc2l0aW9uID0gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgZWxlbWVudHMuZm9yRWFjaChmdW5jdGlvbihlbGVtZW50KSB7XG4gICAgICAgICAgICBlbGVtZW50LnN0eWxlW3RyYW5zaXRpb25OYW1lXSA9ICcnO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9O1xuXG4gICAgICAgIC8vIGFkZCBcInRyYW5zaXRpb25lbmRcIiBldmVudCBoYW5kbGVyXG4gICAgICAgIHZhciByZW1vdmVMaXN0ZW5lcnMgPSB1dGlsLm9uY2VPblRyYW5zaXRpb25FbmQoZWxlbWVudHNbMF0sIGZ1bmN0aW9uKCkge1xuICAgICAgICAgIGNsZWFyVGltZW91dCh0aW1lb3V0SWQpO1xuICAgICAgICAgIGNsZWFyVHJhbnNpdGlvbigpO1xuICAgICAgICAgIGRvbmUoKTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgLy8gZm9yIGZhaWwgc2FmZS5cbiAgICAgICAgdGltZW91dElkID0gc2V0VGltZW91dChmdW5jdGlvbigpIHtcbiAgICAgICAgICByZW1vdmVMaXN0ZW5lcnMoKTtcbiAgICAgICAgICBjbGVhclRyYW5zaXRpb24oKTtcbiAgICAgICAgICBkb25lKCk7XG4gICAgICAgIH0sIG9wdGlvbnMuZHVyYXRpb24gKiAxMDAwICogVElNRU9VVF9SQVRJTyk7XG5cbiAgICAgICAgLy8gdHJhbnNpdGlvbiBhbmQgc3R5bGUgc2V0dGluZ3NcbiAgICAgICAgZWxlbWVudHMuZm9yRWFjaChmdW5jdGlvbihlbGVtZW50LCBpbmRleCkge1xuXG4gICAgICAgICAgdmFyIGNzcyA9IHNlbGYubGFzdFN0eWxlQXR0cmlidXRlRGljdFtpbmRleF07XG5cbiAgICAgICAgICBpZiAoIWNzcykge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdyZXN0b3JlU3R5bGUoKTogVGhlIHN0eWxlIGlzIG5vdCBzYXZlZC4gSW52b2tlIHNhdmVTdHlsZSgpIGJlZm9yZS4nKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBzZWxmLmxhc3RTdHlsZUF0dHJpYnV0ZURpY3RbaW5kZXhdID0gdW5kZWZpbmVkO1xuXG4gICAgICAgICAgdmFyIG5hbWU7XG4gICAgICAgICAgZm9yICh2YXIgaSA9IDAsIGxlbiA9IGVsZW1lbnQuc3R5bGUubGVuZ3RoOyBpIDwgbGVuOyBpKyspIHtcbiAgICAgICAgICAgIG5hbWUgPSBlbGVtZW50LnN0eWxlW2ldO1xuICAgICAgICAgICAgaWYgKGNzc1tuYW1lXSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgIGNzc1tuYW1lXSA9ICcnO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cblxuICAgICAgICAgIGVsZW1lbnQuc3R5bGVbdHJhbnNpdGlvbk5hbWVdID0gdHJhbnNpdGlvblZhbHVlO1xuXG4gICAgICAgICAgT2JqZWN0LmtleXMoY3NzKS5mb3JFYWNoKGZ1bmN0aW9uKGtleSkge1xuICAgICAgICAgICAgaWYgKGtleSAhPT0gdHJhbnNpdGlvbk5hbWUpIHtcbiAgICAgICAgICAgICAgZWxlbWVudC5zdHlsZVtrZXldID0gY3NzW2tleV07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSk7XG5cbiAgICAgICAgICBlbGVtZW50LnN0eWxlW3RyYW5zaXRpb25OYW1lXSA9IHRyYW5zaXRpb25WYWx1ZTtcbiAgICAgICAgfSk7XG4gICAgICB9KTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy50cmFuc2l0aW9uUXVldWUucHVzaChmdW5jdGlvbihkb25lKSB7XG4gICAgICAgIHJlc2V0KCk7XG4gICAgICAgIGRvbmUoKTtcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIHJldHVybiB0aGlzO1xuXG4gICAgZnVuY3Rpb24gcmVzZXQoKSB7XG4gICAgICAvLyBDbGVhciB0cmFuc2l0aW9uIGFuaW1hdGlvbiBzZXR0aW5ncy5cbiAgICAgIHNlbGYuZWxlbWVudHMuZm9yRWFjaChmdW5jdGlvbihlbGVtZW50LCBpbmRleCkge1xuICAgICAgICBlbGVtZW50LnN0eWxlW3RyYW5zaXRpb25OYW1lXSA9ICdub25lJztcblxuICAgICAgICB2YXIgY3NzID0gc2VsZi5sYXN0U3R5bGVBdHRyaWJ1dGVEaWN0W2luZGV4XTtcblxuICAgICAgICBpZiAoIWNzcykge1xuICAgICAgICAgIHRocm93IG5ldyBFcnJvcigncmVzdG9yZVN0eWxlKCk6IFRoZSBzdHlsZSBpcyBub3Qgc2F2ZWQuIEludm9rZSBzYXZlU3R5bGUoKSBiZWZvcmUuJyk7XG4gICAgICAgIH1cblxuICAgICAgICBzZWxmLmxhc3RTdHlsZUF0dHJpYnV0ZURpY3RbaW5kZXhdID0gdW5kZWZpbmVkO1xuXG4gICAgICAgIGZvciAodmFyIGkgPSAwLCBuYW1lID0gJyc7IGkgPCBlbGVtZW50LnN0eWxlLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgbmFtZSA9IGVsZW1lbnQuc3R5bGVbaV07XG4gICAgICAgICAgaWYgKHR5cGVvZiBjc3NbZWxlbWVudC5zdHlsZVtpXV0gPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICBjc3NbZWxlbWVudC5zdHlsZVtpXV0gPSAnJztcbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBPYmplY3Qua2V5cyhjc3MpLmZvckVhY2goZnVuY3Rpb24oa2V5KSB7XG4gICAgICAgICAgZWxlbWVudC5zdHlsZVtrZXldID0gY3NzW2tleV07XG4gICAgICAgIH0pO1xuXG4gICAgICB9KTtcbiAgICB9XG4gIH0sXG5cbiAgLyoqXG4gICAqIFN0YXJ0IGFuaW1hdGlvbiBzZXF1ZW5jZS5cbiAgICovXG4gIHN0YXJ0QW5pbWF0aW9uOiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLl9kZXF1ZXVlVHJhbnNpdGlvbigpO1xuXG4gICAgcmV0dXJuIHRoaXM7XG4gIH0sXG5cbiAgX2RlcXVldWVUcmFuc2l0aW9uOiBmdW5jdGlvbigpIHtcbiAgICB2YXIgdHJhbnNpdGlvbiA9IHRoaXMudHJhbnNpdGlvblF1ZXVlLnNoaWZ0KCk7XG4gICAgaWYgKHRoaXMuX2N1cnJlbnRUcmFuc2l0aW9uKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ0N1cnJlbnQgdHJhbnNpdGlvbiBleGlzdHMuJyk7XG4gICAgfVxuICAgIHRoaXMuX2N1cnJlbnRUcmFuc2l0aW9uID0gdHJhbnNpdGlvbjtcbiAgICB2YXIgc2VsZiA9IHRoaXM7XG4gICAgdmFyIGNhbGxlZCA9IGZhbHNlO1xuXG4gICAgdmFyIGRvbmUgPSBmdW5jdGlvbigpIHtcbiAgICAgIGlmICghY2FsbGVkKSB7XG4gICAgICAgIGNhbGxlZCA9IHRydWU7XG4gICAgICAgIHNlbGYuX2N1cnJlbnRUcmFuc2l0aW9uID0gdW5kZWZpbmVkO1xuICAgICAgICBzZWxmLl9kZXF1ZXVlVHJhbnNpdGlvbigpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIHN0YXRlOiBUaGlzIGNhbGxiYWNrIGlzIGNhbGxlZCB0d2ljZS4nKTtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgaWYgKHRyYW5zaXRpb24pIHtcbiAgICAgIHRyYW5zaXRpb24uY2FsbCh0aGlzLCBkb25lKTtcbiAgICB9XG4gIH1cblxufTtcblxuLyoqXG4gKiBAcGFyYW0ge0FuaW1pdH0gYXJndW1lbnRzXG4gKi9cbkFuaW1pdC5ydW5BbGwgPSBmdW5jdGlvbigvKiBhcmd1bWVudHMuLi4gKi8pIHtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHtcbiAgICBhcmd1bWVudHNbaV0ucGxheSgpO1xuICB9XG59O1xuXG5cbi8qKlxuICogQHBhcmFtIHtPYmplY3R9IG9wdGlvbnNcbiAqIEBwYXJhbSB7RmxvYXR9IFtvcHRpb25zLmR1cmF0aW9uXVxuICogQHBhcmFtIHtTdHJpbmd9IFtvcHRpb25zLnByb3BlcnR5XVxuICogQHBhcmFtIHtTdHJpbmd9IFtvcHRpb25zLnRpbWluZ11cbiAqL1xuQW5pbWl0LlRyYW5zaXRpb24gPSBmdW5jdGlvbihvcHRpb25zKSB7XG4gIHRoaXMub3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG4gIHRoaXMub3B0aW9ucy5kdXJhdGlvbiA9IHRoaXMub3B0aW9ucy5kdXJhdGlvbiB8fCAwO1xuICB0aGlzLm9wdGlvbnMudGltaW5nID0gdGhpcy5vcHRpb25zLnRpbWluZyB8fCAnbGluZWFyJztcbiAgdGhpcy5vcHRpb25zLmNzcyA9IHRoaXMub3B0aW9ucy5jc3MgfHwge307XG4gIHRoaXMub3B0aW9ucy5wcm9wZXJ0eSA9IHRoaXMub3B0aW9ucy5wcm9wZXJ0eSB8fCAnYWxsJztcbn07XG5cbkFuaW1pdC5UcmFuc2l0aW9uLnByb3RvdHlwZSA9IHtcblxuICAvKipcbiAgICogQHBhcmFtIHtIVE1MRWxlbWVudH0gZWxlbWVudFxuICAgKiBAcmV0dXJuIHtGdW5jdGlvbn1cbiAgICovXG4gIGJ1aWxkOiBmdW5jdGlvbigpIHtcblxuICAgIGlmIChPYmplY3Qua2V5cyh0aGlzLm9wdGlvbnMuY3NzKS5sZW5ndGggPT09IDApIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignb3B0aW9ucy5jc3MgaXMgcmVxdWlyZWQuJyk7XG4gICAgfVxuXG4gICAgdmFyIGNzcyA9IGNyZWF0ZUFjdHVhbENzc1Byb3BzKHRoaXMub3B0aW9ucy5jc3MpO1xuXG4gICAgaWYgKHRoaXMub3B0aW9ucy5kdXJhdGlvbiA+IDApIHtcbiAgICAgIHZhciB0cmFuc2l0aW9uVmFsdWUgPSB1dGlsLmJ1aWxkVHJhbnNpdGlvblZhbHVlKHRoaXMub3B0aW9ucyk7XG4gICAgICB2YXIgc2VsZiA9IHRoaXM7XG5cbiAgICAgIHJldHVybiBmdW5jdGlvbihjYWxsYmFjaykge1xuICAgICAgICB2YXIgZWxlbWVudHMgPSB0aGlzLmVsZW1lbnRzO1xuICAgICAgICB2YXIgdGltZW91dCA9IHNlbGYub3B0aW9ucy5kdXJhdGlvbiAqIDEwMDAgKiBUSU1FT1VUX1JBVElPO1xuICAgICAgICB2YXIgdGltZW91dElkO1xuXG4gICAgICAgIHZhciByZW1vdmVMaXN0ZW5lcnMgPSB1dGlsLm9uY2VPblRyYW5zaXRpb25FbmQoZWxlbWVudHNbMF0sIGZ1bmN0aW9uKCkge1xuICAgICAgICAgIGNsZWFyVGltZW91dCh0aW1lb3V0SWQpO1xuICAgICAgICAgIGNhbGxiYWNrKCk7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIHRpbWVvdXRJZCA9IHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XG4gICAgICAgICAgcmVtb3ZlTGlzdGVuZXJzKCk7XG4gICAgICAgICAgY2FsbGJhY2soKTtcbiAgICAgICAgfSwgdGltZW91dCk7XG5cbiAgICAgICAgZWxlbWVudHMuZm9yRWFjaChmdW5jdGlvbihlbGVtZW50KSB7XG4gICAgICAgICAgZWxlbWVudC5zdHlsZVt1dGlsLnRyYW5zaXRpb25Qcm9wZXJ0eU5hbWVdID0gdHJhbnNpdGlvblZhbHVlO1xuXG4gICAgICAgICAgT2JqZWN0LmtleXMoY3NzKS5mb3JFYWNoKGZ1bmN0aW9uKG5hbWUpIHtcbiAgICAgICAgICAgIGVsZW1lbnQuc3R5bGVbbmFtZV0gPSBjc3NbbmFtZV07XG4gICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuXG4gICAgICB9O1xuICAgIH1cblxuICAgIGlmICh0aGlzLm9wdGlvbnMuZHVyYXRpb24gPD0gMCkge1xuICAgICAgcmV0dXJuIGZ1bmN0aW9uKGNhbGxiYWNrKSB7XG4gICAgICAgIHZhciBlbGVtZW50cyA9IHRoaXMuZWxlbWVudHM7XG5cbiAgICAgICAgZWxlbWVudHMuZm9yRWFjaChmdW5jdGlvbihlbGVtZW50KSB7XG4gICAgICAgICAgZWxlbWVudC5zdHlsZVt1dGlsLnRyYW5zaXRpb25Qcm9wZXJ0eU5hbWVdID0gJyc7XG5cbiAgICAgICAgICBPYmplY3Qua2V5cyhjc3MpLmZvckVhY2goZnVuY3Rpb24obmFtZSkge1xuICAgICAgICAgICAgZWxlbWVudC5zdHlsZVtuYW1lXSA9IGNzc1tuYW1lXTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgaWYgKGVsZW1lbnRzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICB1dGlsLmZvcmNlTGF5b3V0QXRPbmNlKGVsZW1lbnRzLCBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHV0aWwuYmF0Y2hBbmltYXRpb25GcmFtZShjYWxsYmFjayk7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdXRpbC5iYXRjaEFuaW1hdGlvbkZyYW1lKGNhbGxiYWNrKTtcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBjcmVhdGVBY3R1YWxDc3NQcm9wcyhjc3MpIHtcbiAgICAgIHZhciByZXN1bHQgPSB7fTtcblxuICAgICAgT2JqZWN0LmtleXMoY3NzKS5mb3JFYWNoKGZ1bmN0aW9uKG5hbWUpIHtcbiAgICAgICAgdmFyIHZhbHVlID0gY3NzW25hbWVdO1xuXG4gICAgICAgIGlmICh1dGlsLmhhc0Nzc1Byb3BlcnR5KG5hbWUpKSB7XG4gICAgICAgICAgcmVzdWx0W25hbWVdID0gdmFsdWU7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgdmFyIHByZWZpeGVkID0gdXRpbC52ZW5kb3JQcmVmaXggKyB1dGlsLmNhcGl0YWxpemUobmFtZSk7XG4gICAgICAgIGlmICh1dGlsLmhhc0Nzc1Byb3BlcnR5KHByZWZpeGVkKSkge1xuICAgICAgICAgIHJlc3VsdFtwcmVmaXhlZF0gPSB2YWx1ZTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByZXN1bHRbcHJlZml4ZWRdID0gdmFsdWU7XG4gICAgICAgICAgcmVzdWx0W25hbWVdID0gdmFsdWU7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuXG4gICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cblxuICB9XG59O1xuXG5leHBvcnQgZGVmYXVsdCAgQW5pbWl0O1xuXG4iLCIvKlxuICogR2VzdHVyZSBkZXRlY3RvciBsaWJyYXJ5IHRoYXQgZm9ya2VkIGZyb20gZ2l0aHViLmNvbS9FaWdodE1lZGlhL2hhbW1lci5qcy5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBFdmVudCwgVXRpbHMsIERldGVjdGlvbiwgUG9pbnRlckV2ZW50O1xuXG4vKipcbiAqIEBvYmplY3Qgb25zLkdlc3R1cmVEZXRlY3RvclxuICogQGNhdGVnb3J5IGdlc3R1cmVcbiAqIEBkZXNjcmlwdGlvblxuICogICBbZW5dVXRpbGl0eSBjbGFzcyBmb3IgZ2VzdHVyZSBkZXRlY3Rpb24uWy9lbl1cbiAqICAgW2phXeOCuOOCp+OCueODgeODo+OCkuaknOefpeOBmeOCi+OBn+OCgeOBruODpuODvOODhuOCo+ODquODhuOCo+OCr+ODqeOCueOBp+OBmeOAglsvamFdXG4gKi9cblxuLyoqXG4gKiBAbWV0aG9kIGNvbnN0cnVjdG9yXG4gKiBAc2lnbmF0dXJlIGNvbnN0cnVjdG9yKGVsZW1lbnRbLCBvcHRpb25zXSlcbiAqIEBkZXNjcmlwdGlvblxuICogIFtlbl1DcmVhdGUgYSBuZXcgR2VzdHVyZURldGVjdG9yIGluc3RhbmNlLlsvZW5dXG4gKiAgW2phXUdlc3R1cmVEZXRlY3RvcuOBruOCpOODs+OCueOCv+ODs+OCueOCkueUn+aIkOOBl+OBvuOBmeOAglsvamFdXG4gKiBAcGFyYW0ge0VsZW1lbnR9IGVsZW1lbnRcbiAqICAgW2VuXU5hbWUgb2YgdGhlIGV2ZW50LlsvZW5dXG4gKiAgIFtqYV3jgrjjgqfjgrnjg4Hjg6PjgpLmpJznn6XjgZnjgotET03opoHntKDjgpLmjIflrprjgZfjgb7jgZnjgIJbL2phXVxuICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zXVxuICogICBbZW5dT3B0aW9ucyBvYmplY3QuWy9lbl1cbiAqICAgW2phXeOCquODl+OCt+ODp+ODs+OCkuaMh+WumuOBl+OBvuOBmeOAglsvamFdXG4gKiBAcmV0dXJuIHtvbnMuR2VzdHVyZURldGVjdG9yLkluc3RhbmNlfVxuICovXG52YXIgR2VzdHVyZURldGVjdG9yID0gZnVuY3Rpb24gR2VzdHVyZURldGVjdG9yKGVsZW1lbnQsIG9wdGlvbnMpIHtcbiAgcmV0dXJuIG5ldyBHZXN0dXJlRGV0ZWN0b3IuSW5zdGFuY2UoZWxlbWVudCwgb3B0aW9ucyB8fCB7fSk7XG59O1xuXG5cbi8qKlxuICogZGVmYXVsdCBzZXR0aW5ncy5cbiAqIG1vcmUgc2V0dGluZ3MgYXJlIGRlZmluZWQgcGVyIGdlc3R1cmUgYXQgYC9nZXN0dXJlc2AuIEVhY2ggZ2VzdHVyZSBjYW4gYmUgZGlzYWJsZWQvZW5hYmxlZFxuICogYnkgc2V0dGluZyBpdCdzIG5hbWUgKGxpa2UgYHN3aXBlYCkgdG8gZmFsc2UuXG4gKiBZb3UgY2FuIHNldCB0aGUgZGVmYXVsdHMgZm9yIGFsbCBpbnN0YW5jZXMgYnkgY2hhbmdpbmcgdGhpcyBvYmplY3QgYmVmb3JlIGNyZWF0aW5nIGFuIGluc3RhbmNlLlxuICogQGV4YW1wbGVcbiAqIGBgYGBcbiAqICBHZXN0dXJlRGV0ZWN0b3IuZGVmYXVsdHMuZHJhZyA9IGZhbHNlO1xuICogIEdlc3R1cmVEZXRlY3Rvci5kZWZhdWx0cy5iZWhhdmlvci50b3VjaEFjdGlvbiA9ICdwYW4teSc7XG4gKiAgZGVsZXRlIEdlc3R1cmVEZXRlY3Rvci5kZWZhdWx0cy5iZWhhdmlvci51c2VyU2VsZWN0O1xuICogYGBgYFxuICogQHByb3BlcnR5IGRlZmF1bHRzXG4gKiBAdHlwZSB7T2JqZWN0fVxuICovXG5HZXN0dXJlRGV0ZWN0b3IuZGVmYXVsdHMgPSB7XG4gIGJlaGF2aW9yOiB7XG4gICAgLy8gdXNlclNlbGVjdDogJ25vbmUnLCAvLyBBbHNvIGRpc2FibGVzIHNlbGVjdGlvbiBpbiBgaW5wdXRgIGNoaWxkcmVuXG4gICAgdG91Y2hBY3Rpb246ICdwYW4teScsXG4gICAgdG91Y2hDYWxsb3V0OiAnbm9uZScsXG4gICAgY29udGVudFpvb21pbmc6ICdub25lJyxcbiAgICB1c2VyRHJhZzogJ25vbmUnLFxuICAgIHRhcEhpZ2hsaWdodENvbG9yOiAncmdiYSgwLDAsMCwwKSdcbiAgfVxufTtcblxuLyoqXG4gKiBHZXN0dXJlRGV0ZWN0b3IgZG9jdW1lbnQgd2hlcmUgdGhlIGJhc2UgZXZlbnRzIGFyZSBhZGRlZCBhdFxuICogQHByb3BlcnR5IERPQ1VNRU5UXG4gKiBAdHlwZSB7SFRNTEVsZW1lbnR9XG4gKiBAZGVmYXVsdCB3aW5kb3cuZG9jdW1lbnRcbiAqL1xuR2VzdHVyZURldGVjdG9yLkRPQ1VNRU5UID0gZG9jdW1lbnQ7XG5cbi8qKlxuICogZGV0ZWN0IHN1cHBvcnQgZm9yIHBvaW50ZXIgZXZlbnRzXG4gKiBAcHJvcGVydHkgSEFTX1BPSU5URVJFVkVOVFNcbiAqIEB0eXBlIHtCb29sZWFufVxuICovXG5HZXN0dXJlRGV0ZWN0b3IuSEFTX1BPSU5URVJFVkVOVFMgPSBuYXZpZ2F0b3IucG9pbnRlckVuYWJsZWQgfHwgbmF2aWdhdG9yLm1zUG9pbnRlckVuYWJsZWQ7XG5cbi8qKlxuICogZGV0ZWN0IHN1cHBvcnQgZm9yIHRvdWNoIGV2ZW50c1xuICogQHByb3BlcnR5IEhBU19UT1VDSEVWRU5UU1xuICogQHR5cGUge0Jvb2xlYW59XG4gKi9cbkdlc3R1cmVEZXRlY3Rvci5IQVNfVE9VQ0hFVkVOVFMgPSAoJ29udG91Y2hzdGFydCcgaW4gd2luZG93KTtcblxuLyoqXG4gKiBkZXRlY3QgbW9iaWxlIGJyb3dzZXJzXG4gKiBAcHJvcGVydHkgSVNfTU9CSUxFXG4gKiBAdHlwZSB7Qm9vbGVhbn1cbiAqL1xuR2VzdHVyZURldGVjdG9yLklTX01PQklMRSA9IC9tb2JpbGV8dGFibGV0fGlwKGFkfGhvbmV8b2QpfGFuZHJvaWR8c2lsay9pLnRlc3QobmF2aWdhdG9yLnVzZXJBZ2VudCk7XG5cbi8qKlxuICogZGV0ZWN0IGlmIHdlIHdhbnQgdG8gc3VwcG9ydCBtb3VzZWV2ZW50cyBhdCBhbGxcbiAqIEBwcm9wZXJ0eSBOT19NT1VTRUVWRU5UU1xuICogQHR5cGUge0Jvb2xlYW59XG4gKi9cbkdlc3R1cmVEZXRlY3Rvci5OT19NT1VTRUVWRU5UUyA9IChHZXN0dXJlRGV0ZWN0b3IuSEFTX1RPVUNIRVZFTlRTICYmIEdlc3R1cmVEZXRlY3Rvci5JU19NT0JJTEUpIHx8IEdlc3R1cmVEZXRlY3Rvci5IQVNfUE9JTlRFUkVWRU5UUztcblxuLyoqXG4gKiBpbnRlcnZhbCBpbiB3aGljaCBHZXN0dXJlRGV0ZWN0b3IgcmVjYWxjdWxhdGVzIGN1cnJlbnQgdmVsb2NpdHkvZGlyZWN0aW9uL2FuZ2xlIGluIG1zXG4gKiBAcHJvcGVydHkgQ0FMQ1VMQVRFX0lOVEVSVkFMXG4gKiBAdHlwZSB7TnVtYmVyfVxuICogQGRlZmF1bHQgMjVcbiAqL1xuR2VzdHVyZURldGVjdG9yLkNBTENVTEFURV9JTlRFUlZBTCA9IDI1O1xuXG4vKipcbiAqIGV2ZW50dHlwZXMgcGVyIHRvdWNoZXZlbnQgKHN0YXJ0LCBtb3ZlLCBlbmQpIGFyZSBmaWxsZWQgYnkgYEV2ZW50LmRldGVybWluZUV2ZW50VHlwZXNgIG9uIGBzZXR1cGBcbiAqIHRoZSBvYmplY3QgY29udGFpbnMgdGhlIERPTSBldmVudCBuYW1lcyBwZXIgdHlwZSAoYEVWRU5UX1NUQVJUYCwgYEVWRU5UX01PVkVgLCBgRVZFTlRfRU5EYClcbiAqIEBwcm9wZXJ0eSBFVkVOVF9UWVBFU1xuICogQHByaXZhdGVcbiAqIEB3cml0ZU9uY2VcbiAqIEB0eXBlIHtPYmplY3R9XG4gKi9cbnZhciBFVkVOVF9UWVBFUyA9IHt9O1xuXG4vKipcbiAqIGRpcmVjdGlvbiBzdHJpbmdzLCBmb3Igc2FmZSBjb21wYXJpc29uc1xuICogQHByb3BlcnR5IERJUkVDVElPTl9ET1dOfExFRlR8VVB8UklHSFRcbiAqIEBmaW5hbFxuICogQHR5cGUge1N0cmluZ31cbiAqIEBkZWZhdWx0ICdkb3duJyAnbGVmdCcgJ3VwJyAncmlnaHQnXG4gKi9cbnZhciBESVJFQ1RJT05fRE9XTiA9IEdlc3R1cmVEZXRlY3Rvci5ESVJFQ1RJT05fRE9XTiA9ICdkb3duJztcbnZhciBESVJFQ1RJT05fTEVGVCA9IEdlc3R1cmVEZXRlY3Rvci5ESVJFQ1RJT05fTEVGVCA9ICdsZWZ0JztcbnZhciBESVJFQ1RJT05fVVAgPSBHZXN0dXJlRGV0ZWN0b3IuRElSRUNUSU9OX1VQID0gJ3VwJztcbnZhciBESVJFQ1RJT05fUklHSFQgPSBHZXN0dXJlRGV0ZWN0b3IuRElSRUNUSU9OX1JJR0hUID0gJ3JpZ2h0JztcblxuLyoqXG4gKiBwb2ludGVydHlwZSBzdHJpbmdzLCBmb3Igc2FmZSBjb21wYXJpc29uc1xuICogQHByb3BlcnR5IFBPSU5URVJfTU9VU0V8VE9VQ0h8UEVOXG4gKiBAZmluYWxcbiAqIEB0eXBlIHtTdHJpbmd9XG4gKiBAZGVmYXVsdCAnbW91c2UnICd0b3VjaCcgJ3BlbidcbiAqL1xudmFyIFBPSU5URVJfTU9VU0UgPSBHZXN0dXJlRGV0ZWN0b3IuUE9JTlRFUl9NT1VTRSA9ICdtb3VzZSc7XG52YXIgUE9JTlRFUl9UT1VDSCA9IEdlc3R1cmVEZXRlY3Rvci5QT0lOVEVSX1RPVUNIID0gJ3RvdWNoJztcbnZhciBQT0lOVEVSX1BFTiA9IEdlc3R1cmVEZXRlY3Rvci5QT0lOVEVSX1BFTiA9ICdwZW4nO1xuXG4vKipcbiAqIGV2ZW50dHlwZXNcbiAqIEBwcm9wZXJ0eSBFVkVOVF9TVEFSVHxNT1ZFfEVORHxSRUxFQVNFfFRPVUNIXG4gKiBAZmluYWxcbiAqIEB0eXBlIHtTdHJpbmd9XG4gKiBAZGVmYXVsdCAnc3RhcnQnICdjaGFuZ2UnICdtb3ZlJyAnZW5kJyAncmVsZWFzZScgJ3RvdWNoJ1xuICovXG52YXIgRVZFTlRfU1RBUlQgPSBHZXN0dXJlRGV0ZWN0b3IuRVZFTlRfU1RBUlQgPSAnc3RhcnQnO1xudmFyIEVWRU5UX01PVkUgPSBHZXN0dXJlRGV0ZWN0b3IuRVZFTlRfTU9WRSA9ICdtb3ZlJztcbnZhciBFVkVOVF9FTkQgPSBHZXN0dXJlRGV0ZWN0b3IuRVZFTlRfRU5EID0gJ2VuZCc7XG52YXIgRVZFTlRfUkVMRUFTRSA9IEdlc3R1cmVEZXRlY3Rvci5FVkVOVF9SRUxFQVNFID0gJ3JlbGVhc2UnO1xudmFyIEVWRU5UX1RPVUNIID0gR2VzdHVyZURldGVjdG9yLkVWRU5UX1RPVUNIID0gJ3RvdWNoJztcblxuLyoqXG4gKiBpZiB0aGUgd2luZG93IGV2ZW50cyBhcmUgc2V0Li4uXG4gKiBAcHJvcGVydHkgUkVBRFlcbiAqIEB3cml0ZU9uY2VcbiAqIEB0eXBlIHtCb29sZWFufVxuICogQGRlZmF1bHQgZmFsc2VcbiAqL1xuR2VzdHVyZURldGVjdG9yLlJFQURZID0gZmFsc2U7XG5cbi8qKlxuICogcGx1Z2lucyBuYW1lc3BhY2VcbiAqIEBwcm9wZXJ0eSBwbHVnaW5zXG4gKiBAdHlwZSB7T2JqZWN0fVxuICovXG5HZXN0dXJlRGV0ZWN0b3IucGx1Z2lucyA9IEdlc3R1cmVEZXRlY3Rvci5wbHVnaW5zIHx8IHt9O1xuXG4vKipcbiAqIGdlc3R1cmVzIG5hbWVzcGFjZVxuICogc2VlIGAvZ2VzdHVyZXNgIGZvciB0aGUgZGVmaW5pdGlvbnNcbiAqIEBwcm9wZXJ0eSBnZXN0dXJlc1xuICogQHR5cGUge09iamVjdH1cbiAqL1xuR2VzdHVyZURldGVjdG9yLmdlc3R1cmVzID0gR2VzdHVyZURldGVjdG9yLmdlc3R1cmVzIHx8IHt9O1xuXG4vKipcbiAqIHNldHVwIGV2ZW50cyB0byBkZXRlY3QgZ2VzdHVyZXMgb24gdGhlIGRvY3VtZW50XG4gKiB0aGlzIGZ1bmN0aW9uIGlzIGNhbGxlZCB3aGVuIGNyZWF0aW5nIGFuIG5ldyBpbnN0YW5jZVxuICogQHByaXZhdGVcbiAqL1xuZnVuY3Rpb24gc2V0dXAoKSB7XG4gIGlmKEdlc3R1cmVEZXRlY3Rvci5SRUFEWSkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8vIGZpbmQgd2hhdCBldmVudHR5cGVzIHdlIGFkZCBsaXN0ZW5lcnMgdG9cbiAgRXZlbnQuZGV0ZXJtaW5lRXZlbnRUeXBlcygpO1xuXG4gIC8vIFJlZ2lzdGVyIGFsbCBnZXN0dXJlcyBpbnNpZGUgR2VzdHVyZURldGVjdG9yLmdlc3R1cmVzXG4gIFV0aWxzLmVhY2goR2VzdHVyZURldGVjdG9yLmdlc3R1cmVzLCBmdW5jdGlvbihnZXN0dXJlKSB7XG4gICAgRGV0ZWN0aW9uLnJlZ2lzdGVyKGdlc3R1cmUpO1xuICB9KTtcblxuICAvLyBBZGQgdG91Y2ggZXZlbnRzIG9uIHRoZSBkb2N1bWVudFxuICBFdmVudC5vblRvdWNoKEdlc3R1cmVEZXRlY3Rvci5ET0NVTUVOVCwgRVZFTlRfTU9WRSwgRGV0ZWN0aW9uLmRldGVjdCk7XG4gIEV2ZW50Lm9uVG91Y2goR2VzdHVyZURldGVjdG9yLkRPQ1VNRU5ULCBFVkVOVF9FTkQsIERldGVjdGlvbi5kZXRlY3QpO1xuXG4gIC8vIEdlc3R1cmVEZXRlY3RvciBpcyByZWFkeS4uLiFcbiAgR2VzdHVyZURldGVjdG9yLlJFQURZID0gdHJ1ZTtcbn1cblxuLyoqXG4gKiBAbW9kdWxlIEdlc3R1cmVEZXRlY3RvclxuICpcbiAqIEBjbGFzcyBVdGlsc1xuICogQHN0YXRpY1xuICovXG5VdGlscyA9IEdlc3R1cmVEZXRlY3Rvci51dGlscyA9IHtcbiAgLyoqXG4gICAqIGV4dGVuZCBtZXRob2QsIGNvdWxkIGFsc28gYmUgdXNlZCBmb3IgY2xvbmluZyB3aGVuIGBkZXN0YCBpcyBhbiBlbXB0eSBvYmplY3QuXG4gICAqIGNoYW5nZXMgdGhlIGRlc3Qgb2JqZWN0XG4gICAqIEBwYXJhbSB7T2JqZWN0fSBkZXN0XG4gICAqIEBwYXJhbSB7T2JqZWN0fSBzcmNcbiAgICogQHBhcmFtIHtCb29sZWFufSBbbWVyZ2U9ZmFsc2VdICBkbyBhIG1lcmdlXG4gICAqIEByZXR1cm4ge09iamVjdH0gZGVzdFxuICAgKi9cbiAgZXh0ZW5kOiBmdW5jdGlvbiBleHRlbmQoZGVzdCwgc3JjLCBtZXJnZSkge1xuICAgIGZvciAodmFyIGtleSBpbiBzcmMpIHtcbiAgICAgIGlmIChzcmMuaGFzT3duUHJvcGVydHkoa2V5KSAmJiAoZGVzdFtrZXldID09PSB1bmRlZmluZWQgfHwgIW1lcmdlKSkge1xuICAgICAgICBkZXN0W2tleV0gPSBzcmNba2V5XTtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGRlc3Q7XG4gIH0sXG5cbiAgLyoqXG4gICAqIHNpbXBsZSBhZGRFdmVudExpc3RlbmVyIHdyYXBwZXJcbiAgICogQHBhcmFtIHtIVE1MRWxlbWVudH0gZWxlbWVudFxuICAgKiBAcGFyYW0ge1N0cmluZ30gdHlwZVxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBoYW5kbGVyXG4gICAqL1xuICBvbjogZnVuY3Rpb24gb24oZWxlbWVudCwgdHlwZSwgaGFuZGxlcikge1xuICAgIGVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcih0eXBlLCBoYW5kbGVyLCBmYWxzZSk7XG4gIH0sXG5cbiAgLyoqXG4gICAqIHNpbXBsZSByZW1vdmVFdmVudExpc3RlbmVyIHdyYXBwZXJcbiAgICogQHBhcmFtIHtIVE1MRWxlbWVudH0gZWxlbWVudFxuICAgKiBAcGFyYW0ge1N0cmluZ30gdHlwZVxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBoYW5kbGVyXG4gICAqL1xuICBvZmY6IGZ1bmN0aW9uIG9mZihlbGVtZW50LCB0eXBlLCBoYW5kbGVyKSB7XG4gICAgZWxlbWVudC5yZW1vdmVFdmVudExpc3RlbmVyKHR5cGUsIGhhbmRsZXIsIGZhbHNlKTtcbiAgfSxcblxuICAvKipcbiAgICogZm9yRWFjaCBvdmVyIGFycmF5cyBhbmQgb2JqZWN0c1xuICAgKiBAcGFyYW0ge09iamVjdHxBcnJheX0gb2JqXG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IGl0ZXJhdG9yXG4gICAqIEBwYXJhbSB7YW55fSBpdGVyYXRvci5pdGVtXG4gICAqIEBwYXJhbSB7TnVtYmVyfSBpdGVyYXRvci5pbmRleFxuICAgKiBAcGFyYW0ge09iamVjdHxBcnJheX0gaXRlcmF0b3Iub2JqIHRoZSBzb3VyY2Ugb2JqZWN0XG4gICAqIEBwYXJhbSB7T2JqZWN0fSBjb250ZXh0IHZhbHVlIHRvIHVzZSBhcyBgdGhpc2AgaW4gdGhlIGl0ZXJhdG9yXG4gICAqL1xuICBlYWNoOiBmdW5jdGlvbiBlYWNoKG9iaiwgaXRlcmF0b3IsIGNvbnRleHQpIHtcbiAgICB2YXIgaSwgbGVuO1xuXG4gICAgLy8gbmF0aXZlIGZvckVhY2ggb24gYXJyYXlzXG4gICAgaWYoJ2ZvckVhY2gnIGluIG9iaikge1xuICAgICAgb2JqLmZvckVhY2goaXRlcmF0b3IsIGNvbnRleHQpO1xuICAgICAgLy8gYXJyYXlzXG4gICAgfSBlbHNlIGlmKG9iai5sZW5ndGggIT09IHVuZGVmaW5lZCkge1xuICAgICAgZm9yKGkgPSAwLCBsZW4gPSBvYmoubGVuZ3RoOyBpIDwgbGVuOyBpKyspIHtcbiAgICAgICAgaWYoaXRlcmF0b3IuY2FsbChjb250ZXh0LCBvYmpbaV0sIGksIG9iaikgPT09IGZhbHNlKSB7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICAvLyBvYmplY3RzXG4gICAgfSBlbHNlIHtcbiAgICAgIGZvcihpIGluIG9iaikge1xuICAgICAgICBpZihvYmouaGFzT3duUHJvcGVydHkoaSkgJiZcbiAgICAgICAgICBpdGVyYXRvci5jYWxsKGNvbnRleHQsIG9ialtpXSwgaSwgb2JqKSA9PT0gZmFsc2UpIHtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH0sXG5cbiAgLyoqXG4gICAqIGZpbmQgaWYgYSBzdHJpbmcgY29udGFpbnMgdGhlIHN0cmluZyB1c2luZyBpbmRleE9mXG4gICAqIEBwYXJhbSB7U3RyaW5nfSBzcmNcbiAgICogQHBhcmFtIHtTdHJpbmd9IGZpbmRcbiAgICogQHJldHVybiB7Qm9vbGVhbn0gZm91bmRcbiAgICovXG4gIGluU3RyOiBmdW5jdGlvbiBpblN0cihzcmMsIGZpbmQpIHtcbiAgICByZXR1cm4gc3JjLmluZGV4T2YoZmluZCkgPiAtMTtcbiAgfSxcblxuICAvKipcbiAgICogZmluZCBpZiBhIGFycmF5IGNvbnRhaW5zIHRoZSBvYmplY3QgdXNpbmcgaW5kZXhPZiBvciBhIHNpbXBsZSBwb2x5ZmlsbFxuICAgKiBAcGFyYW0ge1N0cmluZ30gc3JjXG4gICAqIEBwYXJhbSB7U3RyaW5nfSBmaW5kXG4gICAqIEByZXR1cm4ge0Jvb2xlYW58TnVtYmVyfSBmYWxzZSB3aGVuIG5vdCBmb3VuZCwgb3IgdGhlIGluZGV4XG4gICAqL1xuICBpbkFycmF5OiBmdW5jdGlvbiBpbkFycmF5KHNyYywgZmluZCkge1xuICAgIGlmKHNyYy5pbmRleE9mKSB7XG4gICAgICB2YXIgaW5kZXggPSBzcmMuaW5kZXhPZihmaW5kKTtcbiAgICAgIHJldHVybiAoaW5kZXggPT09IC0xKSA/IGZhbHNlIDogaW5kZXg7XG4gICAgfSBlbHNlIHtcbiAgICAgIGZvcih2YXIgaSA9IDAsIGxlbiA9IHNyYy5sZW5ndGg7IGkgPCBsZW47IGkrKykge1xuICAgICAgICBpZihzcmNbaV0gPT09IGZpbmQpIHtcbiAgICAgICAgICByZXR1cm4gaTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfSxcblxuICAvKipcbiAgICogY29udmVydCBhbiBhcnJheS1saWtlIG9iamVjdCAoYGFyZ3VtZW50c2AsIGB0b3VjaGxpc3RgKSB0byBhbiBhcnJheVxuICAgKiBAcGFyYW0ge09iamVjdH0gb2JqXG4gICAqIEByZXR1cm4ge0FycmF5fVxuICAgKi9cbiAgdG9BcnJheTogZnVuY3Rpb24gdG9BcnJheShvYmopIHtcbiAgICByZXR1cm4gQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwob2JqLCAwKTtcbiAgfSxcblxuICAvKipcbiAgICogZmluZCBpZiBhIG5vZGUgaXMgaW4gdGhlIGdpdmVuIHBhcmVudFxuICAgKiBAcGFyYW0ge0hUTUxFbGVtZW50fSBub2RlXG4gICAqIEBwYXJhbSB7SFRNTEVsZW1lbnR9IHBhcmVudFxuICAgKiBAcmV0dXJuIHtCb29sZWFufSBmb3VuZFxuICAgKi9cbiAgaGFzUGFyZW50OiBmdW5jdGlvbiBoYXNQYXJlbnQobm9kZSwgcGFyZW50KSB7XG4gICAgd2hpbGUobm9kZSkge1xuICAgICAgaWYobm9kZSA9PSBwYXJlbnQpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9XG4gICAgICBub2RlID0gbm9kZS5wYXJlbnROb2RlO1xuICAgIH1cbiAgICByZXR1cm4gZmFsc2U7XG4gIH0sXG5cbiAgLyoqXG4gICAqIGdldCB0aGUgY2VudGVyIG9mIGFsbCB0aGUgdG91Y2hlc1xuICAgKiBAcGFyYW0ge0FycmF5fSB0b3VjaGVzXG4gICAqIEByZXR1cm4ge09iamVjdH0gY2VudGVyIGNvbnRhaW5zIGBwYWdlWGAsIGBwYWdlWWAsIGBjbGllbnRYYCBhbmQgYGNsaWVudFlgIHByb3BlcnRpZXNcbiAgICovXG4gIGdldENlbnRlcjogZnVuY3Rpb24gZ2V0Q2VudGVyKHRvdWNoZXMpIHtcbiAgICB2YXIgcGFnZVggPSBbXSxcbiAgICAgICAgcGFnZVkgPSBbXSxcbiAgICAgICAgY2xpZW50WCA9IFtdLFxuICAgICAgICBjbGllbnRZID0gW10sXG4gICAgICAgIG1pbiA9IE1hdGgubWluLFxuICAgICAgICBtYXggPSBNYXRoLm1heDtcblxuICAgIC8vIG5vIG5lZWQgdG8gbG9vcCB3aGVuIG9ubHkgb25lIHRvdWNoXG4gICAgaWYodG91Y2hlcy5sZW5ndGggPT09IDEpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHBhZ2VYOiB0b3VjaGVzWzBdLnBhZ2VYLFxuICAgICAgICBwYWdlWTogdG91Y2hlc1swXS5wYWdlWSxcbiAgICAgICAgY2xpZW50WDogdG91Y2hlc1swXS5jbGllbnRYLFxuICAgICAgICBjbGllbnRZOiB0b3VjaGVzWzBdLmNsaWVudFlcbiAgICAgIH07XG4gICAgfVxuXG4gICAgVXRpbHMuZWFjaCh0b3VjaGVzLCBmdW5jdGlvbih0b3VjaCkge1xuICAgICAgcGFnZVgucHVzaCh0b3VjaC5wYWdlWCk7XG4gICAgICBwYWdlWS5wdXNoKHRvdWNoLnBhZ2VZKTtcbiAgICAgIGNsaWVudFgucHVzaCh0b3VjaC5jbGllbnRYKTtcbiAgICAgIGNsaWVudFkucHVzaCh0b3VjaC5jbGllbnRZKTtcbiAgICB9KTtcblxuICAgIHJldHVybiB7XG4gICAgICBwYWdlWDogKG1pbi5hcHBseShNYXRoLCBwYWdlWCkgKyBtYXguYXBwbHkoTWF0aCwgcGFnZVgpKSAvIDIsXG4gICAgICBwYWdlWTogKG1pbi5hcHBseShNYXRoLCBwYWdlWSkgKyBtYXguYXBwbHkoTWF0aCwgcGFnZVkpKSAvIDIsXG4gICAgICBjbGllbnRYOiAobWluLmFwcGx5KE1hdGgsIGNsaWVudFgpICsgbWF4LmFwcGx5KE1hdGgsIGNsaWVudFgpKSAvIDIsXG4gICAgICBjbGllbnRZOiAobWluLmFwcGx5KE1hdGgsIGNsaWVudFkpICsgbWF4LmFwcGx5KE1hdGgsIGNsaWVudFkpKSAvIDJcbiAgICB9O1xuICB9LFxuXG4gIC8qKlxuICAgKiBjYWxjdWxhdGUgdGhlIHZlbG9jaXR5IGJldHdlZW4gdHdvIHBvaW50cy4gdW5pdCBpcyBpbiBweCBwZXIgbXMuXG4gICAqIEBwYXJhbSB7TnVtYmVyfSBkZWx0YVRpbWVcbiAgICogQHBhcmFtIHtOdW1iZXJ9IGRlbHRhWFxuICAgKiBAcGFyYW0ge051bWJlcn0gZGVsdGFZXG4gICAqIEByZXR1cm4ge09iamVjdH0gdmVsb2NpdHkgYHhgIGFuZCBgeWBcbiAgICovXG4gIGdldFZlbG9jaXR5OiBmdW5jdGlvbiBnZXRWZWxvY2l0eShkZWx0YVRpbWUsIGRlbHRhWCwgZGVsdGFZKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHg6IE1hdGguYWJzKGRlbHRhWCAvIGRlbHRhVGltZSkgfHwgMCxcbiAgICAgIHk6IE1hdGguYWJzKGRlbHRhWSAvIGRlbHRhVGltZSkgfHwgMFxuICAgIH07XG4gIH0sXG5cbiAgLyoqXG4gICAqIGNhbGN1bGF0ZSB0aGUgYW5nbGUgYmV0d2VlbiB0d28gY29vcmRpbmF0ZXNcbiAgICogQHBhcmFtIHtUb3VjaH0gdG91Y2gxXG4gICAqIEBwYXJhbSB7VG91Y2h9IHRvdWNoMlxuICAgKiBAcmV0dXJuIHtOdW1iZXJ9IGFuZ2xlXG4gICAqL1xuICBnZXRBbmdsZTogZnVuY3Rpb24gZ2V0QW5nbGUodG91Y2gxLCB0b3VjaDIpIHtcbiAgICB2YXIgeCA9IHRvdWNoMi5jbGllbnRYIC0gdG91Y2gxLmNsaWVudFgsXG4gICAgICAgIHkgPSB0b3VjaDIuY2xpZW50WSAtIHRvdWNoMS5jbGllbnRZO1xuXG4gICAgcmV0dXJuIE1hdGguYXRhbjIoeSwgeCkgKiAxODAgLyBNYXRoLlBJO1xuICB9LFxuXG4gIC8qKlxuICAgKiBkbyBhIHNtYWxsIGNvbXBhcmlzb24gdG8gZ2V0IHRoZSBkaXJlY3Rpb24gYmV0d2VlbiB0d28gdG91Y2hlcy5cbiAgICogQHBhcmFtIHtUb3VjaH0gdG91Y2gxXG4gICAqIEBwYXJhbSB7VG91Y2h9IHRvdWNoMlxuICAgKiBAcmV0dXJuIHtTdHJpbmd9IGRpcmVjdGlvbiBtYXRjaGVzIGBESVJFQ1RJT05fTEVGVHxSSUdIVHxVUHxET1dOYFxuICAgKi9cbiAgZ2V0RGlyZWN0aW9uOiBmdW5jdGlvbiBnZXREaXJlY3Rpb24odG91Y2gxLCB0b3VjaDIpIHtcbiAgICB2YXIgeCA9IE1hdGguYWJzKHRvdWNoMS5jbGllbnRYIC0gdG91Y2gyLmNsaWVudFgpLFxuICAgICAgICB5ID0gTWF0aC5hYnModG91Y2gxLmNsaWVudFkgLSB0b3VjaDIuY2xpZW50WSk7XG5cbiAgICBpZih4ID49IHkpIHtcbiAgICAgIHJldHVybiB0b3VjaDEuY2xpZW50WCAtIHRvdWNoMi5jbGllbnRYID4gMCA/IERJUkVDVElPTl9MRUZUIDogRElSRUNUSU9OX1JJR0hUO1xuICAgIH1cbiAgICByZXR1cm4gdG91Y2gxLmNsaWVudFkgLSB0b3VjaDIuY2xpZW50WSA+IDAgPyBESVJFQ1RJT05fVVAgOiBESVJFQ1RJT05fRE9XTjtcbiAgfSxcblxuICAvKipcbiAgICogY2FsY3VsYXRlIHRoZSBkaXN0YW5jZSBiZXR3ZWVuIHR3byB0b3VjaGVzXG4gICAqIEBwYXJhbSB7VG91Y2h9dG91Y2gxXG4gICAqIEBwYXJhbSB7VG91Y2h9IHRvdWNoMlxuICAgKiBAcmV0dXJuIHtOdW1iZXJ9IGRpc3RhbmNlXG4gICAqL1xuICBnZXREaXN0YW5jZTogZnVuY3Rpb24gZ2V0RGlzdGFuY2UodG91Y2gxLCB0b3VjaDIpIHtcbiAgICB2YXIgeCA9IHRvdWNoMi5jbGllbnRYIC0gdG91Y2gxLmNsaWVudFgsXG4gICAgICAgIHkgPSB0b3VjaDIuY2xpZW50WSAtIHRvdWNoMS5jbGllbnRZO1xuXG4gICAgcmV0dXJuIE1hdGguc3FydCgoeCAqIHgpICsgKHkgKiB5KSk7XG4gIH0sXG5cbiAgLyoqXG4gICAqIGNhbGN1bGF0ZSB0aGUgc2NhbGUgZmFjdG9yIGJldHdlZW4gdHdvIHRvdWNoTGlzdHNcbiAgICogbm8gc2NhbGUgaXMgMSwgYW5kIGdvZXMgZG93biB0byAwIHdoZW4gcGluY2hlZCB0b2dldGhlciwgYW5kIGJpZ2dlciB3aGVuIHBpbmNoZWQgb3V0XG4gICAqIEBwYXJhbSB7QXJyYXl9IHN0YXJ0IGFycmF5IG9mIHRvdWNoZXNcbiAgICogQHBhcmFtIHtBcnJheX0gZW5kIGFycmF5IG9mIHRvdWNoZXNcbiAgICogQHJldHVybiB7TnVtYmVyfSBzY2FsZVxuICAgKi9cbiAgZ2V0U2NhbGU6IGZ1bmN0aW9uIGdldFNjYWxlKHN0YXJ0LCBlbmQpIHtcbiAgICAvLyBuZWVkIHR3byBmaW5nZXJzLi4uXG4gICAgaWYoc3RhcnQubGVuZ3RoID49IDIgJiYgZW5kLmxlbmd0aCA+PSAyKSB7XG4gICAgICByZXR1cm4gdGhpcy5nZXREaXN0YW5jZShlbmRbMF0sIGVuZFsxXSkgLyB0aGlzLmdldERpc3RhbmNlKHN0YXJ0WzBdLCBzdGFydFsxXSk7XG4gICAgfVxuICAgIHJldHVybiAxO1xuICB9LFxuXG4gIC8qKlxuICAgKiBjYWxjdWxhdGUgdGhlIHJvdGF0aW9uIGRlZ3JlZXMgYmV0d2VlbiB0d28gdG91Y2hMaXN0c1xuICAgKiBAcGFyYW0ge0FycmF5fSBzdGFydCBhcnJheSBvZiB0b3VjaGVzXG4gICAqIEBwYXJhbSB7QXJyYXl9IGVuZCBhcnJheSBvZiB0b3VjaGVzXG4gICAqIEByZXR1cm4ge051bWJlcn0gcm90YXRpb25cbiAgICovXG4gIGdldFJvdGF0aW9uOiBmdW5jdGlvbiBnZXRSb3RhdGlvbihzdGFydCwgZW5kKSB7XG4gICAgLy8gbmVlZCB0d28gZmluZ2Vyc1xuICAgIGlmKHN0YXJ0Lmxlbmd0aCA+PSAyICYmIGVuZC5sZW5ndGggPj0gMikge1xuICAgICAgcmV0dXJuIHRoaXMuZ2V0QW5nbGUoZW5kWzFdLCBlbmRbMF0pIC0gdGhpcy5nZXRBbmdsZShzdGFydFsxXSwgc3RhcnRbMF0pO1xuICAgIH1cbiAgICByZXR1cm4gMDtcbiAgfSxcblxuICAvKipcbiAgICogZmluZCBvdXQgaWYgdGhlIGRpcmVjdGlvbiBpcyB2ZXJ0aWNhbCAgICpcbiAgICogQHBhcmFtIHtTdHJpbmd9IGRpcmVjdGlvbiBtYXRjaGVzIGBESVJFQ1RJT05fVVB8RE9XTmBcbiAgICogQHJldHVybiB7Qm9vbGVhbn0gaXNfdmVydGljYWxcbiAgICovXG4gIGlzVmVydGljYWw6IGZ1bmN0aW9uIGlzVmVydGljYWwoZGlyZWN0aW9uKSB7XG4gICAgcmV0dXJuIGRpcmVjdGlvbiA9PSBESVJFQ1RJT05fVVAgfHwgZGlyZWN0aW9uID09IERJUkVDVElPTl9ET1dOO1xuICB9LFxuXG4gIC8qKlxuICAgKiBzZXQgY3NzIHByb3BlcnRpZXMgd2l0aCB0aGVpciBwcmVmaXhlc1xuICAgKiBAcGFyYW0ge0hUTUxFbGVtZW50fSBlbGVtZW50XG4gICAqIEBwYXJhbSB7U3RyaW5nfSBwcm9wXG4gICAqIEBwYXJhbSB7U3RyaW5nfSB2YWx1ZVxuICAgKiBAcGFyYW0ge0Jvb2xlYW59IFt0b2dnbGU9dHJ1ZV1cbiAgICogQHJldHVybiB7Qm9vbGVhbn1cbiAgICovXG4gIHNldFByZWZpeGVkQ3NzOiBmdW5jdGlvbiBzZXRQcmVmaXhlZENzcyhlbGVtZW50LCBwcm9wLCB2YWx1ZSwgdG9nZ2xlKSB7XG4gICAgdmFyIHByZWZpeGVzID0gWycnLCAnV2Via2l0JywgJ01veicsICdPJywgJ21zJ107XG4gICAgcHJvcCA9IFV0aWxzLnRvQ2FtZWxDYXNlKHByb3ApO1xuXG4gICAgZm9yKHZhciBpID0gMDsgaSA8IHByZWZpeGVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgcCA9IHByb3A7XG4gICAgICAvLyBwcmVmaXhlc1xuICAgICAgaWYocHJlZml4ZXNbaV0pIHtcbiAgICAgICAgcCA9IHByZWZpeGVzW2ldICsgcC5zbGljZSgwLCAxKS50b1VwcGVyQ2FzZSgpICsgcC5zbGljZSgxKTtcbiAgICAgIH1cblxuICAgICAgLy8gdGVzdCB0aGUgc3R5bGVcbiAgICAgIGlmKHAgaW4gZWxlbWVudC5zdHlsZSkge1xuICAgICAgICBlbGVtZW50LnN0eWxlW3BdID0gKHRvZ2dsZSA9PT0gbnVsbCB8fCB0b2dnbGUpICYmIHZhbHVlIHx8ICcnO1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICB9XG4gIH0sXG5cbiAgLyoqXG4gICAqIHRvZ2dsZSBicm93c2VyIGRlZmF1bHQgYmVoYXZpb3IgYnkgc2V0dGluZyBjc3MgcHJvcGVydGllcy5cbiAgICogYHVzZXJTZWxlY3Q9J25vbmUnYCBhbHNvIHNldHMgYGVsZW1lbnQub25zZWxlY3RzdGFydGAgdG8gZmFsc2VcbiAgICogYHVzZXJEcmFnPSdub25lJ2AgYWxzbyBzZXRzIGBlbGVtZW50Lm9uZHJhZ3N0YXJ0YCB0byBmYWxzZVxuICAgKlxuICAgKiBAcGFyYW0ge0h0bWxFbGVtZW50fSBlbGVtZW50XG4gICAqIEBwYXJhbSB7T2JqZWN0fSBwcm9wc1xuICAgKiBAcGFyYW0ge0Jvb2xlYW59IFt0b2dnbGU9dHJ1ZV1cbiAgICovXG4gIHRvZ2dsZUJlaGF2aW9yOiBmdW5jdGlvbiB0b2dnbGVCZWhhdmlvcihlbGVtZW50LCBwcm9wcywgdG9nZ2xlKSB7XG4gICAgaWYoIXByb3BzIHx8ICFlbGVtZW50IHx8ICFlbGVtZW50LnN0eWxlKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgLy8gc2V0IHRoZSBjc3MgcHJvcGVydGllc1xuICAgIFV0aWxzLmVhY2gocHJvcHMsIGZ1bmN0aW9uKHZhbHVlLCBwcm9wKSB7XG4gICAgICBVdGlscy5zZXRQcmVmaXhlZENzcyhlbGVtZW50LCBwcm9wLCB2YWx1ZSwgdG9nZ2xlKTtcbiAgICB9KTtcblxuICAgIHZhciBmYWxzZUZuID0gdG9nZ2xlICYmIGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH07XG5cbiAgICAvLyBhbHNvIHRoZSBkaXNhYmxlIG9uc2VsZWN0c3RhcnRcbiAgICBpZihwcm9wcy51c2VyU2VsZWN0ID09ICdub25lJykge1xuICAgICAgZWxlbWVudC5vbnNlbGVjdHN0YXJ0ID0gZmFsc2VGbjtcbiAgICB9XG4gICAgLy8gYW5kIGRpc2FibGUgb25kcmFnc3RhcnRcbiAgICBpZihwcm9wcy51c2VyRHJhZyA9PSAnbm9uZScpIHtcbiAgICAgIGVsZW1lbnQub25kcmFnc3RhcnQgPSBmYWxzZUZuO1xuICAgIH1cbiAgfSxcblxuICAvKipcbiAgICogY29udmVydCBhIHN0cmluZyB3aXRoIHVuZGVyc2NvcmVzIHRvIGNhbWVsQ2FzZVxuICAgKiBzbyBwcmV2ZW50X2RlZmF1bHQgYmVjb21lcyBwcmV2ZW50RGVmYXVsdFxuICAgKiBAcGFyYW0ge1N0cmluZ30gc3RyXG4gICAqIEByZXR1cm4ge1N0cmluZ30gY2FtZWxDYXNlU3RyXG4gICAqL1xuICB0b0NhbWVsQ2FzZTogZnVuY3Rpb24gdG9DYW1lbENhc2Uoc3RyKSB7XG4gICAgcmV0dXJuIHN0ci5yZXBsYWNlKC9bXy1dKFthLXpdKS9nLCBmdW5jdGlvbihzKSB7XG4gICAgICByZXR1cm4gc1sxXS50b1VwcGVyQ2FzZSgpO1xuICAgIH0pO1xuICB9XG59O1xuXG5cbi8qKlxuICogQG1vZHVsZSBHZXN0dXJlRGV0ZWN0b3JcbiAqL1xuLyoqXG4gKiBAY2xhc3MgRXZlbnRcbiAqIEBzdGF0aWNcbiAqL1xuRXZlbnQgPSBHZXN0dXJlRGV0ZWN0b3IuZXZlbnQgPSB7XG4gIC8qKlxuICAgKiB3aGVuIHRvdWNoIGV2ZW50cyBoYXZlIGJlZW4gZmlyZWQsIHRoaXMgaXMgdHJ1ZVxuICAgKiB0aGlzIGlzIHVzZWQgdG8gc3RvcCBtb3VzZSBldmVudHNcbiAgICogQHByb3BlcnR5IHByZXZlbnRfbW91c2VldmVudHNcbiAgICogQHByaXZhdGVcbiAgICogQHR5cGUge0Jvb2xlYW59XG4gICAqL1xuICBwcmV2ZW50TW91c2VFdmVudHM6IGZhbHNlLFxuXG4gIC8qKlxuICAgKiBpZiBFVkVOVF9TVEFSVCBoYXMgYmVlbiBmaXJlZFxuICAgKiBAcHJvcGVydHkgc3RhcnRlZFxuICAgKiBAcHJpdmF0ZVxuICAgKiBAdHlwZSB7Qm9vbGVhbn1cbiAgICovXG4gIHN0YXJ0ZWQ6IGZhbHNlLFxuXG4gIC8qKlxuICAgKiB3aGVuIHRoZSBtb3VzZSBpcyBob2xkIGRvd24sIHRoaXMgaXMgdHJ1ZVxuICAgKiBAcHJvcGVydHkgc2hvdWxkX2RldGVjdFxuICAgKiBAcHJpdmF0ZVxuICAgKiBAdHlwZSB7Qm9vbGVhbn1cbiAgICovXG4gIHNob3VsZERldGVjdDogZmFsc2UsXG5cbiAgLyoqXG4gICAqIHNpbXBsZSBldmVudCBiaW5kZXIgd2l0aCBhIGhvb2sgYW5kIHN1cHBvcnQgZm9yIG11bHRpcGxlIHR5cGVzXG4gICAqIEBwYXJhbSB7SFRNTEVsZW1lbnR9IGVsZW1lbnRcbiAgICogQHBhcmFtIHtTdHJpbmd9IHR5cGVcbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gaGFuZGxlclxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBbaG9va11cbiAgICogQHBhcmFtIHtPYmplY3R9IGhvb2sudHlwZVxuICAgKi9cbiAgb246IGZ1bmN0aW9uIG9uKGVsZW1lbnQsIHR5cGUsIGhhbmRsZXIsIGhvb2spIHtcbiAgICB2YXIgdHlwZXMgPSB0eXBlLnNwbGl0KCcgJyk7XG4gICAgVXRpbHMuZWFjaCh0eXBlcywgZnVuY3Rpb24odHlwZSkge1xuICAgICAgVXRpbHMub24oZWxlbWVudCwgdHlwZSwgaGFuZGxlcik7XG4gICAgICBob29rICYmIGhvb2sodHlwZSk7XG4gICAgfSk7XG4gIH0sXG5cbiAgLyoqXG4gICAqIHNpbXBsZSBldmVudCB1bmJpbmRlciB3aXRoIGEgaG9vayBhbmQgc3VwcG9ydCBmb3IgbXVsdGlwbGUgdHlwZXNcbiAgICogQHBhcmFtIHtIVE1MRWxlbWVudH0gZWxlbWVudFxuICAgKiBAcGFyYW0ge1N0cmluZ30gdHlwZVxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBoYW5kbGVyXG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IFtob29rXVxuICAgKiBAcGFyYW0ge09iamVjdH0gaG9vay50eXBlXG4gICAqL1xuICBvZmY6IGZ1bmN0aW9uIG9mZihlbGVtZW50LCB0eXBlLCBoYW5kbGVyLCBob29rKSB7XG4gICAgdmFyIHR5cGVzID0gdHlwZS5zcGxpdCgnICcpO1xuICAgIFV0aWxzLmVhY2godHlwZXMsIGZ1bmN0aW9uKHR5cGUpIHtcbiAgICAgIFV0aWxzLm9mZihlbGVtZW50LCB0eXBlLCBoYW5kbGVyKTtcbiAgICAgIGhvb2sgJiYgaG9vayh0eXBlKTtcbiAgICB9KTtcbiAgfSxcblxuICAvKipcbiAgICogdGhlIGNvcmUgdG91Y2ggZXZlbnQgaGFuZGxlci5cbiAgICogdGhpcyBmaW5kcyBvdXQgaWYgd2Ugc2hvdWxkIHRvIGRldGVjdCBnZXN0dXJlc1xuICAgKiBAcGFyYW0ge0hUTUxFbGVtZW50fSBlbGVtZW50XG4gICAqIEBwYXJhbSB7U3RyaW5nfSBldmVudFR5cGUgbWF0Y2hlcyBgRVZFTlRfU1RBUlR8TU9WRXxFTkRgXG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IGhhbmRsZXJcbiAgICogQHJldHVybiBvblRvdWNoSGFuZGxlciB7RnVuY3Rpb259IHRoZSBjb3JlIGV2ZW50IGhhbmRsZXJcbiAgICovXG4gIG9uVG91Y2g6IGZ1bmN0aW9uIG9uVG91Y2goZWxlbWVudCwgZXZlbnRUeXBlLCBoYW5kbGVyKSB7XG4gICAgdmFyIHNlbGYgPSB0aGlzO1xuXG4gICAgdmFyIG9uVG91Y2hIYW5kbGVyID0gZnVuY3Rpb24gb25Ub3VjaEhhbmRsZXIoZXYpIHtcbiAgICAgIHZhciBzcmNUeXBlID0gZXYudHlwZS50b0xvd2VyQ2FzZSgpLFxuICAgICAgICAgIGlzUG9pbnRlciA9IEdlc3R1cmVEZXRlY3Rvci5IQVNfUE9JTlRFUkVWRU5UUyxcbiAgICAgICAgICBpc01vdXNlID0gVXRpbHMuaW5TdHIoc3JjVHlwZSwgJ21vdXNlJyksXG4gICAgICAgICAgdHJpZ2dlclR5cGU7XG5cbiAgICAgIC8vIGlmIHdlIGFyZSBpbiBhIG1vdXNlZXZlbnQsIGJ1dCB0aGVyZSBoYXMgYmVlbiBhIHRvdWNoZXZlbnQgdHJpZ2dlcmVkIGluIHRoaXMgc2Vzc2lvblxuICAgICAgLy8gd2Ugd2FudCB0byBkbyBub3RoaW5nLiBzaW1wbHkgYnJlYWsgb3V0IG9mIHRoZSBldmVudC5cbiAgICAgIGlmKGlzTW91c2UgJiYgc2VsZi5wcmV2ZW50TW91c2VFdmVudHMpIHtcbiAgICAgICAgcmV0dXJuO1xuXG4gICAgICAgIC8vIG1vdXNlYnV0dG9uIG11c3QgYmUgZG93blxuICAgICAgfSBlbHNlIGlmKGlzTW91c2UgJiYgZXZlbnRUeXBlID09IEVWRU5UX1NUQVJUICYmIGV2LmJ1dHRvbiA9PT0gMCkge1xuICAgICAgICBzZWxmLnByZXZlbnRNb3VzZUV2ZW50cyA9IGZhbHNlO1xuICAgICAgICBzZWxmLnNob3VsZERldGVjdCA9IHRydWU7XG4gICAgICB9IGVsc2UgaWYoaXNQb2ludGVyICYmIGV2ZW50VHlwZSA9PSBFVkVOVF9TVEFSVCkge1xuICAgICAgICBzZWxmLnNob3VsZERldGVjdCA9IChldi5idXR0b25zID09PSAxIHx8IFBvaW50ZXJFdmVudC5tYXRjaFR5cGUoUE9JTlRFUl9UT1VDSCwgZXYpKTtcbiAgICAgICAgLy8ganVzdCBhIHZhbGlkIHN0YXJ0IGV2ZW50LCBidXQgbm8gbW91c2VcbiAgICAgIH0gZWxzZSBpZighaXNNb3VzZSAmJiBldmVudFR5cGUgPT0gRVZFTlRfU1RBUlQpIHtcbiAgICAgICAgc2VsZi5wcmV2ZW50TW91c2VFdmVudHMgPSB0cnVlO1xuICAgICAgICBzZWxmLnNob3VsZERldGVjdCA9IHRydWU7XG4gICAgICB9XG5cbiAgICAgIC8vIHVwZGF0ZSB0aGUgcG9pbnRlciBldmVudCBiZWZvcmUgZW50ZXJpbmcgdGhlIGRldGVjdGlvblxuICAgICAgaWYoaXNQb2ludGVyICYmIGV2ZW50VHlwZSAhPSBFVkVOVF9FTkQpIHtcbiAgICAgICAgUG9pbnRlckV2ZW50LnVwZGF0ZVBvaW50ZXIoZXZlbnRUeXBlLCBldik7XG4gICAgICB9XG5cbiAgICAgIC8vIHdlIGFyZSBpbiBhIHRvdWNoL2Rvd24gc3RhdGUsIHNvIGFsbG93ZWQgZGV0ZWN0aW9uIG9mIGdlc3R1cmVzXG4gICAgICBpZihzZWxmLnNob3VsZERldGVjdCkge1xuICAgICAgICB0cmlnZ2VyVHlwZSA9IHNlbGYuZG9EZXRlY3QuY2FsbChzZWxmLCBldiwgZXZlbnRUeXBlLCBlbGVtZW50LCBoYW5kbGVyKTtcbiAgICAgIH1cblxuICAgICAgLy8gLi4uYW5kIHdlIGFyZSBkb25lIHdpdGggdGhlIGRldGVjdGlvblxuICAgICAgLy8gc28gcmVzZXQgZXZlcnl0aGluZyB0byBzdGFydCBlYWNoIGRldGVjdGlvbiB0b3RhbGx5IGZyZXNoXG4gICAgICBpZih0cmlnZ2VyVHlwZSA9PSBFVkVOVF9FTkQpIHtcbiAgICAgICAgc2VsZi5wcmV2ZW50TW91c2VFdmVudHMgPSBmYWxzZTtcbiAgICAgICAgc2VsZi5zaG91bGREZXRlY3QgPSBmYWxzZTtcbiAgICAgICAgUG9pbnRlckV2ZW50LnJlc2V0KCk7XG4gICAgICAgIC8vIHVwZGF0ZSB0aGUgcG9pbnRlcmV2ZW50IG9iamVjdCBhZnRlciB0aGUgZGV0ZWN0aW9uXG4gICAgICB9XG5cbiAgICAgIGlmKGlzUG9pbnRlciAmJiBldmVudFR5cGUgPT0gRVZFTlRfRU5EKSB7XG4gICAgICAgIFBvaW50ZXJFdmVudC51cGRhdGVQb2ludGVyKGV2ZW50VHlwZSwgZXYpO1xuICAgICAgfVxuICAgIH07XG5cbiAgICB0aGlzLm9uKGVsZW1lbnQsIEVWRU5UX1RZUEVTW2V2ZW50VHlwZV0sIG9uVG91Y2hIYW5kbGVyKTtcbiAgICByZXR1cm4gb25Ub3VjaEhhbmRsZXI7XG4gIH0sXG5cbiAgLyoqXG4gICAqIHRoZSBjb3JlIGRldGVjdGlvbiBtZXRob2RcbiAgICogdGhpcyBmaW5kcyBvdXQgd2hhdCBHZXN0dXJlRGV0ZWN0b3ItdG91Y2gtZXZlbnRzIHRvIHRyaWdnZXJcbiAgICogQHBhcmFtIHtPYmplY3R9IGV2XG4gICAqIEBwYXJhbSB7U3RyaW5nfSBldmVudFR5cGUgbWF0Y2hlcyBgRVZFTlRfU1RBUlR8TU9WRXxFTkRgXG4gICAqIEBwYXJhbSB7SFRNTEVsZW1lbnR9IGVsZW1lbnRcbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gaGFuZGxlclxuICAgKiBAcmV0dXJuIHtTdHJpbmd9IHRyaWdnZXJUeXBlIG1hdGNoZXMgYEVWRU5UX1NUQVJUfE1PVkV8RU5EYFxuICAgKi9cbiAgZG9EZXRlY3Q6IGZ1bmN0aW9uIGRvRGV0ZWN0KGV2LCBldmVudFR5cGUsIGVsZW1lbnQsIGhhbmRsZXIpIHtcbiAgICB2YXIgdG91Y2hMaXN0ID0gdGhpcy5nZXRUb3VjaExpc3QoZXYsIGV2ZW50VHlwZSk7XG4gICAgdmFyIHRvdWNoTGlzdExlbmd0aCA9IHRvdWNoTGlzdC5sZW5ndGg7XG4gICAgdmFyIHRyaWdnZXJUeXBlID0gZXZlbnRUeXBlO1xuICAgIHZhciB0cmlnZ2VyQ2hhbmdlID0gdG91Y2hMaXN0LnRyaWdnZXI7IC8vIHVzZWQgYnkgZmFrZU11bHRpdG91Y2ggcGx1Z2luXG4gICAgdmFyIGNoYW5nZWRMZW5ndGggPSB0b3VjaExpc3RMZW5ndGg7XG5cbiAgICAvLyBhdCBlYWNoIHRvdWNoc3RhcnQtbGlrZSBldmVudCB3ZSB3YW50IGFsc28gd2FudCB0byB0cmlnZ2VyIGEgVE9VQ0ggZXZlbnQuLi5cbiAgICBpZihldmVudFR5cGUgPT0gRVZFTlRfU1RBUlQpIHtcbiAgICAgIHRyaWdnZXJDaGFuZ2UgPSBFVkVOVF9UT1VDSDtcbiAgICAgIC8vIC4uLnRoZSBzYW1lIGZvciBhIHRvdWNoZW5kLWxpa2UgZXZlbnRcbiAgICB9IGVsc2UgaWYoZXZlbnRUeXBlID09IEVWRU5UX0VORCkge1xuICAgICAgdHJpZ2dlckNoYW5nZSA9IEVWRU5UX1JFTEVBU0U7XG5cbiAgICAgIC8vIGtlZXAgdHJhY2sgb2YgaG93IG1hbnkgdG91Y2hlcyBoYXZlIGJlZW4gcmVtb3ZlZFxuICAgICAgY2hhbmdlZExlbmd0aCA9IHRvdWNoTGlzdC5sZW5ndGggLSAoKGV2LmNoYW5nZWRUb3VjaGVzKSA/IGV2LmNoYW5nZWRUb3VjaGVzLmxlbmd0aCA6IDEpO1xuICAgIH1cblxuICAgIC8vIGFmdGVyIHRoZXJlIGFyZSBzdGlsbCB0b3VjaGVzIG9uIHRoZSBzY3JlZW4sXG4gICAgLy8gd2UganVzdCB3YW50IHRvIHRyaWdnZXIgYSBNT1ZFIGV2ZW50LiBzbyBjaGFuZ2UgdGhlIFNUQVJUIG9yIEVORCB0byBhIE1PVkVcbiAgICAvLyBidXQgb25seSBhZnRlciBkZXRlY3Rpb24gaGFzIGJlZW4gc3RhcnRlZCwgdGhlIGZpcnN0IHRpbWUgd2UgYWN0dWFsbHkgd2FudCBhIFNUQVJUXG4gICAgaWYoY2hhbmdlZExlbmd0aCA+IDAgJiYgdGhpcy5zdGFydGVkKSB7XG4gICAgICB0cmlnZ2VyVHlwZSA9IEVWRU5UX01PVkU7XG4gICAgfVxuXG4gICAgLy8gZGV0ZWN0aW9uIGhhcyBiZWVuIHN0YXJ0ZWQsIHdlIGtlZXAgdHJhY2sgb2YgdGhpcywgc2VlIGFib3ZlXG4gICAgdGhpcy5zdGFydGVkID0gdHJ1ZTtcblxuICAgIC8vIGdlbmVyYXRlIHNvbWUgZXZlbnQgZGF0YSwgc29tZSBiYXNpYyBpbmZvcm1hdGlvblxuICAgIHZhciBldkRhdGEgPSB0aGlzLmNvbGxlY3RFdmVudERhdGEoZWxlbWVudCwgdHJpZ2dlclR5cGUsIHRvdWNoTGlzdCwgZXYpO1xuXG4gICAgLy8gdHJpZ2dlciB0aGUgdHJpZ2dlclR5cGUgZXZlbnQgYmVmb3JlIHRoZSBjaGFuZ2UgKFRPVUNILCBSRUxFQVNFKSBldmVudHNcbiAgICAvLyBidXQgdGhlIEVORCBldmVudCBzaG91bGQgYmUgYXQgbGFzdFxuICAgIGlmKGV2ZW50VHlwZSAhPSBFVkVOVF9FTkQpIHtcbiAgICAgIGhhbmRsZXIuY2FsbChEZXRlY3Rpb24sIGV2RGF0YSk7XG4gICAgfVxuXG4gICAgLy8gdHJpZ2dlciBhIGNoYW5nZSAoVE9VQ0gsIFJFTEVBU0UpIGV2ZW50LCB0aGlzIG1lYW5zIHRoZSBsZW5ndGggb2YgdGhlIHRvdWNoZXMgY2hhbmdlZFxuICAgIGlmKHRyaWdnZXJDaGFuZ2UpIHtcbiAgICAgIGV2RGF0YS5jaGFuZ2VkTGVuZ3RoID0gY2hhbmdlZExlbmd0aDtcbiAgICAgIGV2RGF0YS5ldmVudFR5cGUgPSB0cmlnZ2VyQ2hhbmdlO1xuXG4gICAgICBoYW5kbGVyLmNhbGwoRGV0ZWN0aW9uLCBldkRhdGEpO1xuXG4gICAgICBldkRhdGEuZXZlbnRUeXBlID0gdHJpZ2dlclR5cGU7XG4gICAgICBkZWxldGUgZXZEYXRhLmNoYW5nZWRMZW5ndGg7XG4gICAgfVxuXG4gICAgLy8gdHJpZ2dlciB0aGUgRU5EIGV2ZW50XG4gICAgaWYodHJpZ2dlclR5cGUgPT0gRVZFTlRfRU5EKSB7XG4gICAgICBoYW5kbGVyLmNhbGwoRGV0ZWN0aW9uLCBldkRhdGEpO1xuXG4gICAgICAvLyAuLi5hbmQgd2UgYXJlIGRvbmUgd2l0aCB0aGUgZGV0ZWN0aW9uXG4gICAgICAvLyBzbyByZXNldCBldmVyeXRoaW5nIHRvIHN0YXJ0IGVhY2ggZGV0ZWN0aW9uIHRvdGFsbHkgZnJlc2hcbiAgICAgIHRoaXMuc3RhcnRlZCA9IGZhbHNlO1xuICAgIH1cblxuICAgIHJldHVybiB0cmlnZ2VyVHlwZTtcbiAgfSxcblxuICAvKipcbiAgICogd2UgaGF2ZSBkaWZmZXJlbnQgZXZlbnRzIGZvciBlYWNoIGRldmljZS9icm93c2VyXG4gICAqIGRldGVybWluZSB3aGF0IHdlIG5lZWQgYW5kIHNldCB0aGVtIGluIHRoZSBFVkVOVF9UWVBFUyBjb25zdGFudFxuICAgKiB0aGUgYG9uVG91Y2hgIG1ldGhvZCBpcyBiaW5kIHRvIHRoZXNlIHByb3BlcnRpZXMuXG4gICAqIEByZXR1cm4ge09iamVjdH0gZXZlbnRzXG4gICAqL1xuICBkZXRlcm1pbmVFdmVudFR5cGVzOiBmdW5jdGlvbiBkZXRlcm1pbmVFdmVudFR5cGVzKCkge1xuICAgIHZhciB0eXBlcztcbiAgICBpZihHZXN0dXJlRGV0ZWN0b3IuSEFTX1BPSU5URVJFVkVOVFMpIHtcbiAgICAgIGlmKHdpbmRvdy5Qb2ludGVyRXZlbnQpIHtcbiAgICAgICAgdHlwZXMgPSBbXG4gICAgICAgICAgJ3BvaW50ZXJkb3duJyxcbiAgICAgICAgICAncG9pbnRlcm1vdmUnLFxuICAgICAgICAgICdwb2ludGVydXAgcG9pbnRlcmNhbmNlbCBsb3N0cG9pbnRlcmNhcHR1cmUnXG4gICAgICAgIF07XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0eXBlcyA9IFtcbiAgICAgICAgICAnTVNQb2ludGVyRG93bicsXG4gICAgICAgICAgJ01TUG9pbnRlck1vdmUnLFxuICAgICAgICAgICdNU1BvaW50ZXJVcCBNU1BvaW50ZXJDYW5jZWwgTVNMb3N0UG9pbnRlckNhcHR1cmUnXG4gICAgICAgIF07XG4gICAgICB9XG4gICAgfSBlbHNlIGlmKEdlc3R1cmVEZXRlY3Rvci5OT19NT1VTRUVWRU5UUykge1xuICAgICAgdHlwZXMgPSBbXG4gICAgICAgICd0b3VjaHN0YXJ0JyxcbiAgICAgICAgJ3RvdWNobW92ZScsXG4gICAgICAgICd0b3VjaGVuZCB0b3VjaGNhbmNlbCdcbiAgICAgIF07XG4gICAgfSBlbHNlIHtcbiAgICAgIHR5cGVzID0gW1xuICAgICAgICAndG91Y2hzdGFydCBtb3VzZWRvd24nLFxuICAgICAgICAndG91Y2htb3ZlIG1vdXNlbW92ZScsXG4gICAgICAgICd0b3VjaGVuZCB0b3VjaGNhbmNlbCBtb3VzZXVwJ1xuICAgICAgXTtcbiAgICB9XG5cbiAgICBFVkVOVF9UWVBFU1tFVkVOVF9TVEFSVF0gPSB0eXBlc1swXTtcbiAgICBFVkVOVF9UWVBFU1tFVkVOVF9NT1ZFXSA9IHR5cGVzWzFdO1xuICAgIEVWRU5UX1RZUEVTW0VWRU5UX0VORF0gPSB0eXBlc1syXTtcbiAgICByZXR1cm4gRVZFTlRfVFlQRVM7XG4gIH0sXG5cbiAgLyoqXG4gICAqIGNyZWF0ZSB0b3VjaExpc3QgZGVwZW5kaW5nIG9uIHRoZSBldmVudFxuICAgKiBAcGFyYW0ge09iamVjdH0gZXZcbiAgICogQHBhcmFtIHtTdHJpbmd9IGV2ZW50VHlwZVxuICAgKiBAcmV0dXJuIHtBcnJheX0gdG91Y2hlc1xuICAgKi9cbiAgZ2V0VG91Y2hMaXN0OiBmdW5jdGlvbiBnZXRUb3VjaExpc3QoZXYsIGV2ZW50VHlwZSkge1xuICAgIC8vIGdldCB0aGUgZmFrZSBwb2ludGVyRXZlbnQgdG91Y2hsaXN0XG4gICAgaWYoR2VzdHVyZURldGVjdG9yLkhBU19QT0lOVEVSRVZFTlRTKSB7XG4gICAgICByZXR1cm4gUG9pbnRlckV2ZW50LmdldFRvdWNoTGlzdCgpO1xuICAgIH1cblxuICAgIC8vIGdldCB0aGUgdG91Y2hsaXN0XG4gICAgaWYoZXYudG91Y2hlcykge1xuICAgICAgaWYoZXZlbnRUeXBlID09IEVWRU5UX01PVkUpIHtcbiAgICAgICAgcmV0dXJuIGV2LnRvdWNoZXM7XG4gICAgICB9XG5cbiAgICAgIHZhciBpZGVudGlmaWVycyA9IFtdO1xuICAgICAgdmFyIGNvbmNhdCA9IFtdLmNvbmNhdChVdGlscy50b0FycmF5KGV2LnRvdWNoZXMpLCBVdGlscy50b0FycmF5KGV2LmNoYW5nZWRUb3VjaGVzKSk7XG4gICAgICB2YXIgdG91Y2hMaXN0ID0gW107XG5cbiAgICAgIFV0aWxzLmVhY2goY29uY2F0LCBmdW5jdGlvbih0b3VjaCkge1xuICAgICAgICBpZihVdGlscy5pbkFycmF5KGlkZW50aWZpZXJzLCB0b3VjaC5pZGVudGlmaWVyKSA9PT0gZmFsc2UpIHtcbiAgICAgICAgICB0b3VjaExpc3QucHVzaCh0b3VjaCk7XG4gICAgICAgIH1cbiAgICAgICAgaWRlbnRpZmllcnMucHVzaCh0b3VjaC5pZGVudGlmaWVyKTtcbiAgICAgIH0pO1xuXG4gICAgICByZXR1cm4gdG91Y2hMaXN0O1xuICAgIH1cblxuICAgIC8vIG1ha2UgZmFrZSB0b3VjaExpc3QgZnJvbSBtb3VzZSBwb3NpdGlvblxuICAgIGV2LmlkZW50aWZpZXIgPSAxO1xuICAgIHJldHVybiBbZXZdO1xuICB9LFxuXG4gIC8qKlxuICAgKiBjb2xsZWN0IGJhc2ljIGV2ZW50IGRhdGFcbiAgICogQHBhcmFtIHtIVE1MRWxlbWVudH0gZWxlbWVudFxuICAgKiBAcGFyYW0ge1N0cmluZ30gZXZlbnRUeXBlIG1hdGNoZXMgYEVWRU5UX1NUQVJUfE1PVkV8RU5EYFxuICAgKiBAcGFyYW0ge0FycmF5fSB0b3VjaGVzXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBldlxuICAgKiBAcmV0dXJuIHtPYmplY3R9IGV2XG4gICAqL1xuICBjb2xsZWN0RXZlbnREYXRhOiBmdW5jdGlvbiBjb2xsZWN0RXZlbnREYXRhKGVsZW1lbnQsIGV2ZW50VHlwZSwgdG91Y2hlcywgZXYpIHtcbiAgICAvLyBmaW5kIG91dCBwb2ludGVyVHlwZVxuICAgIHZhciBwb2ludGVyVHlwZSA9IFBPSU5URVJfVE9VQ0g7XG4gICAgaWYoVXRpbHMuaW5TdHIoZXYudHlwZSwgJ21vdXNlJykgfHwgUG9pbnRlckV2ZW50Lm1hdGNoVHlwZShQT0lOVEVSX01PVVNFLCBldikpIHtcbiAgICAgIHBvaW50ZXJUeXBlID0gUE9JTlRFUl9NT1VTRTtcbiAgICB9IGVsc2UgaWYoUG9pbnRlckV2ZW50Lm1hdGNoVHlwZShQT0lOVEVSX1BFTiwgZXYpKSB7XG4gICAgICBwb2ludGVyVHlwZSA9IFBPSU5URVJfUEVOO1xuICAgIH1cblxuICAgIHJldHVybiB7XG4gICAgICBjZW50ZXI6IFV0aWxzLmdldENlbnRlcih0b3VjaGVzKSxcbiAgICAgIHRpbWVTdGFtcDogRGF0ZS5ub3coKSxcbiAgICAgIHRhcmdldDogZXYudGFyZ2V0LFxuICAgICAgdG91Y2hlczogdG91Y2hlcyxcbiAgICAgIGV2ZW50VHlwZTogZXZlbnRUeXBlLFxuICAgICAgcG9pbnRlclR5cGU6IHBvaW50ZXJUeXBlLFxuICAgICAgc3JjRXZlbnQ6IGV2LFxuXG4gICAgICAvKipcbiAgICAgICAqIHByZXZlbnQgdGhlIGJyb3dzZXIgZGVmYXVsdCBhY3Rpb25zXG4gICAgICAgKiBtb3N0bHkgdXNlZCB0byBkaXNhYmxlIHNjcm9sbGluZyBvZiB0aGUgYnJvd3NlclxuICAgICAgICovXG4gICAgICBwcmV2ZW50RGVmYXVsdDogZnVuY3Rpb24oKSB7XG4gICAgICAgIHZhciBzcmNFdmVudCA9IHRoaXMuc3JjRXZlbnQ7XG4gICAgICAgIHNyY0V2ZW50LnByZXZlbnRNYW5pcHVsYXRpb24gJiYgc3JjRXZlbnQucHJldmVudE1hbmlwdWxhdGlvbigpO1xuICAgICAgICBzcmNFdmVudC5wcmV2ZW50RGVmYXVsdCAmJiBzcmNFdmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgfSxcblxuICAgICAgLyoqXG4gICAgICAgKiBzdG9wIGJ1YmJsaW5nIHRoZSBldmVudCB1cCB0byBpdHMgcGFyZW50c1xuICAgICAgICovXG4gICAgICBzdG9wUHJvcGFnYXRpb246IGZ1bmN0aW9uKCkge1xuICAgICAgICB0aGlzLnNyY0V2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xuICAgICAgfSxcblxuICAgICAgLyoqXG4gICAgICAgKiBpbW1lZGlhdGVseSBzdG9wIGdlc3R1cmUgZGV0ZWN0aW9uXG4gICAgICAgKiBtaWdodCBiZSB1c2VmdWwgYWZ0ZXIgYSBzd2lwZSB3YXMgZGV0ZWN0ZWRcbiAgICAgICAqIEByZXR1cm4geyp9XG4gICAgICAgKi9cbiAgICAgIHN0b3BEZXRlY3Q6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gRGV0ZWN0aW9uLnN0b3BEZXRlY3QoKTtcbiAgICAgIH1cbiAgICB9O1xuICB9XG59O1xuXG5cbi8qKlxuICogQG1vZHVsZSBHZXN0dXJlRGV0ZWN0b3JcbiAqXG4gKiBAY2xhc3MgUG9pbnRlckV2ZW50XG4gKiBAc3RhdGljXG4gKi9cblBvaW50ZXJFdmVudCA9IEdlc3R1cmVEZXRlY3Rvci5Qb2ludGVyRXZlbnQgPSB7XG4gIC8qKlxuICAgKiBob2xkcyBhbGwgcG9pbnRlcnMsIGJ5IGBpZGVudGlmaWVyYFxuICAgKiBAcHJvcGVydHkgcG9pbnRlcnNcbiAgICogQHR5cGUge09iamVjdH1cbiAgICovXG4gIHBvaW50ZXJzOiB7fSxcblxuICAvKipcbiAgICogZ2V0IHRoZSBwb2ludGVycyBhcyBhbiBhcnJheVxuICAgKiBAcmV0dXJuIHtBcnJheX0gdG91Y2hsaXN0XG4gICAqL1xuICBnZXRUb3VjaExpc3Q6IGZ1bmN0aW9uIGdldFRvdWNoTGlzdCgpIHtcbiAgICB2YXIgdG91Y2hsaXN0ID0gW107XG4gICAgLy8gd2UgY2FuIHVzZSBmb3JFYWNoIHNpbmNlIHBvaW50ZXJFdmVudHMgb25seSBpcyBpbiBJRTEwXG4gICAgVXRpbHMuZWFjaCh0aGlzLnBvaW50ZXJzLCBmdW5jdGlvbihwb2ludGVyKSB7XG4gICAgICB0b3VjaGxpc3QucHVzaChwb2ludGVyKTtcbiAgICB9KTtcbiAgICByZXR1cm4gdG91Y2hsaXN0O1xuICB9LFxuXG4gIC8qKlxuICAgKiB1cGRhdGUgdGhlIHBvc2l0aW9uIG9mIGEgcG9pbnRlclxuICAgKiBAcGFyYW0ge1N0cmluZ30gZXZlbnRUeXBlIG1hdGNoZXMgYEVWRU5UX1NUQVJUfE1PVkV8RU5EYFxuICAgKiBAcGFyYW0ge09iamVjdH0gcG9pbnRlckV2ZW50XG4gICAqL1xuICB1cGRhdGVQb2ludGVyOiBmdW5jdGlvbiB1cGRhdGVQb2ludGVyKGV2ZW50VHlwZSwgcG9pbnRlckV2ZW50KSB7XG4gICAgaWYoZXZlbnRUeXBlID09IEVWRU5UX0VORCB8fCAoZXZlbnRUeXBlICE9IEVWRU5UX0VORCAmJiBwb2ludGVyRXZlbnQuYnV0dG9ucyAhPT0gMSkpIHtcbiAgICAgIGRlbGV0ZSB0aGlzLnBvaW50ZXJzW3BvaW50ZXJFdmVudC5wb2ludGVySWRdO1xuICAgIH0gZWxzZSB7XG4gICAgICBwb2ludGVyRXZlbnQuaWRlbnRpZmllciA9IHBvaW50ZXJFdmVudC5wb2ludGVySWQ7XG4gICAgICB0aGlzLnBvaW50ZXJzW3BvaW50ZXJFdmVudC5wb2ludGVySWRdID0gcG9pbnRlckV2ZW50O1xuICAgIH1cbiAgfSxcblxuICAvKipcbiAgICogY2hlY2sgaWYgZXYgbWF0Y2hlcyBwb2ludGVydHlwZVxuICAgKiBAcGFyYW0ge1N0cmluZ30gcG9pbnRlclR5cGUgbWF0Y2hlcyBgUE9JTlRFUl9NT1VTRXxUT1VDSHxQRU5gXG4gICAqIEBwYXJhbSB7UG9pbnRlckV2ZW50fSBldlxuICAgKi9cbiAgbWF0Y2hUeXBlOiBmdW5jdGlvbiBtYXRjaFR5cGUocG9pbnRlclR5cGUsIGV2KSB7XG4gICAgaWYoIWV2LnBvaW50ZXJUeXBlKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuXG4gICAgdmFyIHB0ID0gZXYucG9pbnRlclR5cGUsXG4gICAgICAgIHR5cGVzID0ge307XG5cbiAgICB0eXBlc1tQT0lOVEVSX01PVVNFXSA9IChwdCA9PT0gKGV2Lk1TUE9JTlRFUl9UWVBFX01PVVNFIHx8IFBPSU5URVJfTU9VU0UpKTtcbiAgICB0eXBlc1tQT0lOVEVSX1RPVUNIXSA9IChwdCA9PT0gKGV2Lk1TUE9JTlRFUl9UWVBFX1RPVUNIIHx8IFBPSU5URVJfVE9VQ0gpKTtcbiAgICB0eXBlc1tQT0lOVEVSX1BFTl0gPSAocHQgPT09IChldi5NU1BPSU5URVJfVFlQRV9QRU4gfHwgUE9JTlRFUl9QRU4pKTtcbiAgICByZXR1cm4gdHlwZXNbcG9pbnRlclR5cGVdO1xuICB9LFxuXG4gIC8qKlxuICAgKiByZXNldCB0aGUgc3RvcmVkIHBvaW50ZXJzXG4gICAqL1xuICByZXNldDogZnVuY3Rpb24gcmVzZXRMaXN0KCkge1xuICAgIHRoaXMucG9pbnRlcnMgPSB7fTtcbiAgfVxufTtcblxuXG4vKipcbiAqIEBtb2R1bGUgR2VzdHVyZURldGVjdG9yXG4gKlxuICogQGNsYXNzIERldGVjdGlvblxuICogQHN0YXRpY1xuICovXG5EZXRlY3Rpb24gPSBHZXN0dXJlRGV0ZWN0b3IuZGV0ZWN0aW9uID0ge1xuICAvLyBjb250YWlucyBhbGwgcmVnaXN0ZXJlZCBHZXN0dXJlRGV0ZWN0b3IuZ2VzdHVyZXMgaW4gdGhlIGNvcnJlY3Qgb3JkZXJcbiAgZ2VzdHVyZXM6IFtdLFxuXG4gIC8vIGRhdGEgb2YgdGhlIGN1cnJlbnQgR2VzdHVyZURldGVjdG9yLmdlc3R1cmUgZGV0ZWN0aW9uIHNlc3Npb25cbiAgY3VycmVudDogbnVsbCxcblxuICAvLyB0aGUgcHJldmlvdXMgR2VzdHVyZURldGVjdG9yLmdlc3R1cmUgc2Vzc2lvbiBkYXRhXG4gIC8vIGlzIGEgZnVsbCBjbG9uZSBvZiB0aGUgcHJldmlvdXMgZ2VzdHVyZS5jdXJyZW50IG9iamVjdFxuICBwcmV2aW91czogbnVsbCxcblxuICAvLyB3aGVuIHRoaXMgYmVjb21lcyB0cnVlLCBubyBnZXN0dXJlcyBhcmUgZmlyZWRcbiAgc3RvcHBlZDogZmFsc2UsXG5cbiAgLyoqXG4gICAqIHN0YXJ0IEdlc3R1cmVEZXRlY3Rvci5nZXN0dXJlIGRldGVjdGlvblxuICAgKiBAcGFyYW0ge0dlc3R1cmVEZXRlY3Rvci5JbnN0YW5jZX0gaW5zdFxuICAgKiBAcGFyYW0ge09iamVjdH0gZXZlbnREYXRhXG4gICAqL1xuICBzdGFydERldGVjdDogZnVuY3Rpb24gc3RhcnREZXRlY3QoaW5zdCwgZXZlbnREYXRhKSB7XG4gICAgLy8gYWxyZWFkeSBidXN5IHdpdGggYSBHZXN0dXJlRGV0ZWN0b3IuZ2VzdHVyZSBkZXRlY3Rpb24gb24gYW4gZWxlbWVudFxuICAgIGlmKHRoaXMuY3VycmVudCkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHRoaXMuc3RvcHBlZCA9IGZhbHNlO1xuXG4gICAgLy8gaG9sZHMgY3VycmVudCBzZXNzaW9uXG4gICAgdGhpcy5jdXJyZW50ID0ge1xuICAgICAgaW5zdDogaW5zdCwgLy8gcmVmZXJlbmNlIHRvIEdlc3R1cmVEZXRlY3Rvckluc3RhbmNlIHdlJ3JlIHdvcmtpbmcgZm9yXG4gICAgICBzdGFydEV2ZW50OiBVdGlscy5leHRlbmQoe30sIGV2ZW50RGF0YSksIC8vIHN0YXJ0IGV2ZW50RGF0YSBmb3IgZGlzdGFuY2VzLCB0aW1pbmcgZXRjXG4gICAgICBsYXN0RXZlbnQ6IGZhbHNlLCAvLyBsYXN0IGV2ZW50RGF0YVxuICAgICAgbGFzdENhbGNFdmVudDogZmFsc2UsIC8vIGxhc3QgZXZlbnREYXRhIGZvciBjYWxjdWxhdGlvbnMuXG4gICAgICBmdXR1cmVDYWxjRXZlbnQ6IGZhbHNlLCAvLyBsYXN0IGV2ZW50RGF0YSBmb3IgY2FsY3VsYXRpb25zLlxuICAgICAgbGFzdENhbGNEYXRhOiB7fSwgLy8gbGFzdCBsYXN0Q2FsY0RhdGFcbiAgICAgIG5hbWU6ICcnIC8vIGN1cnJlbnQgZ2VzdHVyZSB3ZSdyZSBpbi9kZXRlY3RlZCwgY2FuIGJlICd0YXAnLCAnaG9sZCcgZXRjXG4gICAgfTtcblxuICAgIHRoaXMuZGV0ZWN0KGV2ZW50RGF0YSk7XG4gIH0sXG5cbiAgLyoqXG4gICAqIEdlc3R1cmVEZXRlY3Rvci5nZXN0dXJlIGRldGVjdGlvblxuICAgKiBAcGFyYW0ge09iamVjdH0gZXZlbnREYXRhXG4gICAqIEByZXR1cm4ge2FueX1cbiAgICovXG4gIGRldGVjdDogZnVuY3Rpb24gZGV0ZWN0KGV2ZW50RGF0YSkge1xuICAgIGlmKCF0aGlzLmN1cnJlbnQgfHwgdGhpcy5zdG9wcGVkKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgLy8gZXh0ZW5kIGV2ZW50IGRhdGEgd2l0aCBjYWxjdWxhdGlvbnMgYWJvdXQgc2NhbGUsIGRpc3RhbmNlIGV0Y1xuICAgIGV2ZW50RGF0YSA9IHRoaXMuZXh0ZW5kRXZlbnREYXRhKGV2ZW50RGF0YSk7XG5cbiAgICAvLyBHZXN0dXJlRGV0ZWN0b3IgaW5zdGFuY2UgYW5kIGluc3RhbmNlIG9wdGlvbnNcbiAgICB2YXIgaW5zdCA9IHRoaXMuY3VycmVudC5pbnN0LFxuICAgICAgICBpbnN0T3B0aW9ucyA9IGluc3Qub3B0aW9ucztcblxuICAgIC8vIGNhbGwgR2VzdHVyZURldGVjdG9yLmdlc3R1cmUgaGFuZGxlcnNcbiAgICBVdGlscy5lYWNoKHRoaXMuZ2VzdHVyZXMsIGZ1bmN0aW9uIHRyaWdnZXJHZXN0dXJlKGdlc3R1cmUpIHtcbiAgICAgIC8vIG9ubHkgd2hlbiB0aGUgaW5zdGFuY2Ugb3B0aW9ucyBoYXZlIGVuYWJsZWQgdGhpcyBnZXN0dXJlXG4gICAgICBpZighdGhpcy5zdG9wcGVkICYmIGluc3QuZW5hYmxlZCAmJiBpbnN0T3B0aW9uc1tnZXN0dXJlLm5hbWVdKSB7XG4gICAgICAgIGdlc3R1cmUuaGFuZGxlci5jYWxsKGdlc3R1cmUsIGV2ZW50RGF0YSwgaW5zdCk7XG4gICAgICB9XG4gICAgfSwgdGhpcyk7XG5cbiAgICAvLyBzdG9yZSBhcyBwcmV2aW91cyBldmVudCBldmVudFxuICAgIGlmKHRoaXMuY3VycmVudCkge1xuICAgICAgdGhpcy5jdXJyZW50Lmxhc3RFdmVudCA9IGV2ZW50RGF0YTtcbiAgICB9XG5cbiAgICBpZihldmVudERhdGEuZXZlbnRUeXBlID09IEVWRU5UX0VORCkge1xuICAgICAgdGhpcy5zdG9wRGV0ZWN0KCk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGV2ZW50RGF0YTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBjb25zaXN0ZW50LXJldHVyblxuICB9LFxuXG4gIC8qKlxuICAgKiBjbGVhciB0aGUgR2VzdHVyZURldGVjdG9yLmdlc3R1cmUgdmFyc1xuICAgKiB0aGlzIGlzIGNhbGxlZCBvbiBlbmREZXRlY3QsIGJ1dCBjYW4gYWxzbyBiZSB1c2VkIHdoZW4gYSBmaW5hbCBHZXN0dXJlRGV0ZWN0b3IuZ2VzdHVyZSBoYXMgYmVlbiBkZXRlY3RlZFxuICAgKiB0byBzdG9wIG90aGVyIEdlc3R1cmVEZXRlY3Rvci5nZXN0dXJlcyBmcm9tIGJlaW5nIGZpcmVkXG4gICAqL1xuICBzdG9wRGV0ZWN0OiBmdW5jdGlvbiBzdG9wRGV0ZWN0KCkge1xuICAgIC8vIGNsb25lIGN1cnJlbnQgZGF0YSB0byB0aGUgc3RvcmUgYXMgdGhlIHByZXZpb3VzIGdlc3R1cmVcbiAgICAvLyB1c2VkIGZvciB0aGUgZG91YmxlIHRhcCBnZXN0dXJlLCBzaW5jZSB0aGlzIGlzIGFuIG90aGVyIGdlc3R1cmUgZGV0ZWN0IHNlc3Npb25cbiAgICB0aGlzLnByZXZpb3VzID0gVXRpbHMuZXh0ZW5kKHt9LCB0aGlzLmN1cnJlbnQpO1xuXG4gICAgLy8gcmVzZXQgdGhlIGN1cnJlbnRcbiAgICB0aGlzLmN1cnJlbnQgPSBudWxsO1xuICAgIHRoaXMuc3RvcHBlZCA9IHRydWU7XG4gIH0sXG5cbiAgLyoqXG4gICAqIGNhbGN1bGF0ZSB2ZWxvY2l0eSwgYW5nbGUgYW5kIGRpcmVjdGlvblxuICAgKiBAcGFyYW0ge09iamVjdH0gZXZcbiAgICogQHBhcmFtIHtPYmplY3R9IGNlbnRlclxuICAgKiBAcGFyYW0ge051bWJlcn0gZGVsdGFUaW1lXG4gICAqIEBwYXJhbSB7TnVtYmVyfSBkZWx0YVhcbiAgICogQHBhcmFtIHtOdW1iZXJ9IGRlbHRhWVxuICAgKi9cbiAgZ2V0Q2FsY3VsYXRlZERhdGE6IGZ1bmN0aW9uIGdldENhbGN1bGF0ZWREYXRhKGV2LCBjZW50ZXIsIGRlbHRhVGltZSwgZGVsdGFYLCBkZWx0YVkpIHtcbiAgICB2YXIgY3VyID0gdGhpcy5jdXJyZW50LFxuICAgICAgICByZWNhbGMgPSBmYWxzZSxcbiAgICAgICAgY2FsY0V2ID0gY3VyLmxhc3RDYWxjRXZlbnQsXG4gICAgICAgIGNhbGNEYXRhID0gY3VyLmxhc3RDYWxjRGF0YTtcblxuICAgIGlmKGNhbGNFdiAmJiBldi50aW1lU3RhbXAgLSBjYWxjRXYudGltZVN0YW1wID4gR2VzdHVyZURldGVjdG9yLkNBTENVTEFURV9JTlRFUlZBTCkge1xuICAgICAgY2VudGVyID0gY2FsY0V2LmNlbnRlcjtcbiAgICAgIGRlbHRhVGltZSA9IGV2LnRpbWVTdGFtcCAtIGNhbGNFdi50aW1lU3RhbXA7XG4gICAgICBkZWx0YVggPSBldi5jZW50ZXIuY2xpZW50WCAtIGNhbGNFdi5jZW50ZXIuY2xpZW50WDtcbiAgICAgIGRlbHRhWSA9IGV2LmNlbnRlci5jbGllbnRZIC0gY2FsY0V2LmNlbnRlci5jbGllbnRZO1xuICAgICAgcmVjYWxjID0gdHJ1ZTtcbiAgICB9XG5cbiAgICBpZihldi5ldmVudFR5cGUgPT0gRVZFTlRfVE9VQ0ggfHwgZXYuZXZlbnRUeXBlID09IEVWRU5UX1JFTEVBU0UpIHtcbiAgICAgIGN1ci5mdXR1cmVDYWxjRXZlbnQgPSBldjtcbiAgICB9XG5cbiAgICBpZighY3VyLmxhc3RDYWxjRXZlbnQgfHwgcmVjYWxjKSB7XG4gICAgICBjYWxjRGF0YS52ZWxvY2l0eSA9IFV0aWxzLmdldFZlbG9jaXR5KGRlbHRhVGltZSwgZGVsdGFYLCBkZWx0YVkpO1xuICAgICAgY2FsY0RhdGEuYW5nbGUgPSBVdGlscy5nZXRBbmdsZShjZW50ZXIsIGV2LmNlbnRlcik7XG4gICAgICBjYWxjRGF0YS5kaXJlY3Rpb24gPSBVdGlscy5nZXREaXJlY3Rpb24oY2VudGVyLCBldi5jZW50ZXIpO1xuXG4gICAgICBjdXIubGFzdENhbGNFdmVudCA9IGN1ci5mdXR1cmVDYWxjRXZlbnQgfHwgZXY7XG4gICAgICBjdXIuZnV0dXJlQ2FsY0V2ZW50ID0gZXY7XG4gICAgfVxuXG4gICAgZXYudmVsb2NpdHlYID0gY2FsY0RhdGEudmVsb2NpdHkueDtcbiAgICBldi52ZWxvY2l0eVkgPSBjYWxjRGF0YS52ZWxvY2l0eS55O1xuICAgIGV2LmludGVyaW1BbmdsZSA9IGNhbGNEYXRhLmFuZ2xlO1xuICAgIGV2LmludGVyaW1EaXJlY3Rpb24gPSBjYWxjRGF0YS5kaXJlY3Rpb247XG4gIH0sXG5cbiAgLyoqXG4gICAqIGV4dGVuZCBldmVudERhdGEgZm9yIEdlc3R1cmVEZXRlY3Rvci5nZXN0dXJlc1xuICAgKiBAcGFyYW0ge09iamVjdH0gZXZcbiAgICogQHJldHVybiB7T2JqZWN0fSBldlxuICAgKi9cbiAgZXh0ZW5kRXZlbnREYXRhOiBmdW5jdGlvbiBleHRlbmRFdmVudERhdGEoZXYpIHtcbiAgICB2YXIgY3VyID0gdGhpcy5jdXJyZW50LFxuICAgICAgICBzdGFydEV2ID0gY3VyLnN0YXJ0RXZlbnQsXG4gICAgICAgIGxhc3RFdiA9IGN1ci5sYXN0RXZlbnQgfHwgc3RhcnRFdjtcblxuICAgIC8vIHVwZGF0ZSB0aGUgc3RhcnQgdG91Y2hsaXN0IHRvIGNhbGN1bGF0ZSB0aGUgc2NhbGUvcm90YXRpb25cbiAgICBpZihldi5ldmVudFR5cGUgPT0gRVZFTlRfVE9VQ0ggfHwgZXYuZXZlbnRUeXBlID09IEVWRU5UX1JFTEVBU0UpIHtcbiAgICAgIHN0YXJ0RXYudG91Y2hlcyA9IFtdO1xuICAgICAgVXRpbHMuZWFjaChldi50b3VjaGVzLCBmdW5jdGlvbih0b3VjaCkge1xuICAgICAgICBzdGFydEV2LnRvdWNoZXMucHVzaCh7XG4gICAgICAgICAgY2xpZW50WDogdG91Y2guY2xpZW50WCxcbiAgICAgICAgICBjbGllbnRZOiB0b3VjaC5jbGllbnRZXG4gICAgICAgIH0pO1xuICAgICAgfSk7XG4gICAgfVxuXG4gICAgdmFyIGRlbHRhVGltZSA9IGV2LnRpbWVTdGFtcCAtIHN0YXJ0RXYudGltZVN0YW1wLFxuICAgICAgICBkZWx0YVggPSBldi5jZW50ZXIuY2xpZW50WCAtIHN0YXJ0RXYuY2VudGVyLmNsaWVudFgsXG4gICAgICAgIGRlbHRhWSA9IGV2LmNlbnRlci5jbGllbnRZIC0gc3RhcnRFdi5jZW50ZXIuY2xpZW50WTtcblxuICAgIHRoaXMuZ2V0Q2FsY3VsYXRlZERhdGEoZXYsIGxhc3RFdi5jZW50ZXIsIGRlbHRhVGltZSwgZGVsdGFYLCBkZWx0YVkpO1xuXG4gICAgVXRpbHMuZXh0ZW5kKGV2LCB7XG4gICAgICBzdGFydEV2ZW50OiBzdGFydEV2LFxuXG4gICAgICBkZWx0YVRpbWU6IGRlbHRhVGltZSxcbiAgICAgIGRlbHRhWDogZGVsdGFYLFxuICAgICAgZGVsdGFZOiBkZWx0YVksXG5cbiAgICAgIGRpc3RhbmNlOiBVdGlscy5nZXREaXN0YW5jZShzdGFydEV2LmNlbnRlciwgZXYuY2VudGVyKSxcbiAgICAgIGFuZ2xlOiBVdGlscy5nZXRBbmdsZShzdGFydEV2LmNlbnRlciwgZXYuY2VudGVyKSxcbiAgICAgIGRpcmVjdGlvbjogVXRpbHMuZ2V0RGlyZWN0aW9uKHN0YXJ0RXYuY2VudGVyLCBldi5jZW50ZXIpLFxuICAgICAgc2NhbGU6IFV0aWxzLmdldFNjYWxlKHN0YXJ0RXYudG91Y2hlcywgZXYudG91Y2hlcyksXG4gICAgICByb3RhdGlvbjogVXRpbHMuZ2V0Um90YXRpb24oc3RhcnRFdi50b3VjaGVzLCBldi50b3VjaGVzKVxuICAgIH0pO1xuXG4gICAgcmV0dXJuIGV2O1xuICB9LFxuXG4gIC8qKlxuICAgKiByZWdpc3RlciBuZXcgZ2VzdHVyZVxuICAgKiBAcGFyYW0ge09iamVjdH0gZ2VzdHVyZSBvYmplY3QsIHNlZSBgZ2VzdHVyZXMvYCBmb3IgZG9jdW1lbnRhdGlvblxuICAgKiBAcmV0dXJuIHtBcnJheX0gZ2VzdHVyZXNcbiAgICovXG4gIHJlZ2lzdGVyOiBmdW5jdGlvbiByZWdpc3RlcihnZXN0dXJlKSB7XG4gICAgLy8gYWRkIGFuIGVuYWJsZSBnZXN0dXJlIG9wdGlvbnMgaWYgdGhlcmUgaXMgbm8gZ2l2ZW5cbiAgICB2YXIgb3B0aW9ucyA9IGdlc3R1cmUuZGVmYXVsdHMgfHwge307XG4gICAgaWYob3B0aW9uc1tnZXN0dXJlLm5hbWVdID09PSB1bmRlZmluZWQpIHtcbiAgICAgIG9wdGlvbnNbZ2VzdHVyZS5uYW1lXSA9IHRydWU7XG4gICAgfVxuXG4gICAgLy8gZXh0ZW5kIEdlc3R1cmVEZXRlY3RvciBkZWZhdWx0IG9wdGlvbnMgd2l0aCB0aGUgR2VzdHVyZURldGVjdG9yLmdlc3R1cmUgb3B0aW9uc1xuICAgIFV0aWxzLmV4dGVuZChHZXN0dXJlRGV0ZWN0b3IuZGVmYXVsdHMsIG9wdGlvbnMsIHRydWUpO1xuXG4gICAgLy8gc2V0IGl0cyBpbmRleFxuICAgIGdlc3R1cmUuaW5kZXggPSBnZXN0dXJlLmluZGV4IHx8IDEwMDA7XG5cbiAgICAvLyBhZGQgR2VzdHVyZURldGVjdG9yLmdlc3R1cmUgdG8gdGhlIGxpc3RcbiAgICB0aGlzLmdlc3R1cmVzLnB1c2goZ2VzdHVyZSk7XG5cbiAgICAvLyBzb3J0IHRoZSBsaXN0IGJ5IGluZGV4XG4gICAgdGhpcy5nZXN0dXJlcy5zb3J0KGZ1bmN0aW9uKGEsIGIpIHtcbiAgICAgIGlmKGEuaW5kZXggPCBiLmluZGV4KSB7XG4gICAgICAgIHJldHVybiAtMTtcbiAgICAgIH1cbiAgICAgIGlmKGEuaW5kZXggPiBiLmluZGV4KSB7XG4gICAgICAgIHJldHVybiAxO1xuICAgICAgfVxuICAgICAgcmV0dXJuIDA7XG4gICAgfSk7XG5cbiAgICByZXR1cm4gdGhpcy5nZXN0dXJlcztcbiAgfVxufTtcblxuXG4vKipcbiAqIEBtb2R1bGUgR2VzdHVyZURldGVjdG9yXG4gKi9cblxuLyoqXG4gKiBjcmVhdGUgbmV3IEdlc3R1cmVEZXRlY3RvciBpbnN0YW5jZVxuICogYWxsIG1ldGhvZHMgc2hvdWxkIHJldHVybiB0aGUgaW5zdGFuY2UgaXRzZWxmLCBzbyBpdCBpcyBjaGFpbmFibGUuXG4gKlxuICogQGNsYXNzIEluc3RhbmNlXG4gKiBAY29uc3RydWN0b3JcbiAqIEBwYXJhbSB7SFRNTEVsZW1lbnR9IGVsZW1lbnRcbiAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0aW9ucz17fV0gb3B0aW9ucyBhcmUgbWVyZ2VkIHdpdGggYEdlc3R1cmVEZXRlY3Rvci5kZWZhdWx0c2BcbiAqIEByZXR1cm4ge0dlc3R1cmVEZXRlY3Rvci5JbnN0YW5jZX1cbiAqL1xuR2VzdHVyZURldGVjdG9yLkluc3RhbmNlID0gZnVuY3Rpb24oZWxlbWVudCwgb3B0aW9ucykge1xuICB2YXIgc2VsZiA9IHRoaXM7XG5cbiAgLy8gc2V0dXAgR2VzdHVyZURldGVjdG9ySlMgd2luZG93IGV2ZW50cyBhbmQgcmVnaXN0ZXIgYWxsIGdlc3R1cmVzXG4gIC8vIHRoaXMgYWxzbyBzZXRzIHVwIHRoZSBkZWZhdWx0IG9wdGlvbnNcbiAgc2V0dXAoKTtcblxuICAvKipcbiAgICogQHByb3BlcnR5IGVsZW1lbnRcbiAgICogQHR5cGUge0hUTUxFbGVtZW50fVxuICAgKi9cbiAgdGhpcy5lbGVtZW50ID0gZWxlbWVudDtcblxuICAvKipcbiAgICogQHByb3BlcnR5IGVuYWJsZWRcbiAgICogQHR5cGUge0Jvb2xlYW59XG4gICAqIEBwcm90ZWN0ZWRcbiAgICovXG4gIHRoaXMuZW5hYmxlZCA9IHRydWU7XG5cbiAgLyoqXG4gICAqIG9wdGlvbnMsIG1lcmdlZCB3aXRoIHRoZSBkZWZhdWx0c1xuICAgKiBvcHRpb25zIHdpdGggYW4gXyBhcmUgY29udmVydGVkIHRvIGNhbWVsQ2FzZVxuICAgKiBAcHJvcGVydHkgb3B0aW9uc1xuICAgKiBAdHlwZSB7T2JqZWN0fVxuICAgKi9cbiAgVXRpbHMuZWFjaChvcHRpb25zLCBmdW5jdGlvbih2YWx1ZSwgbmFtZSkge1xuICAgIGRlbGV0ZSBvcHRpb25zW25hbWVdO1xuICAgIG9wdGlvbnNbVXRpbHMudG9DYW1lbENhc2UobmFtZSldID0gdmFsdWU7XG4gIH0pO1xuXG4gIHRoaXMub3B0aW9ucyA9IFV0aWxzLmV4dGVuZChVdGlscy5leHRlbmQoe30sIEdlc3R1cmVEZXRlY3Rvci5kZWZhdWx0cyksIG9wdGlvbnMgfHwge30pO1xuXG4gIC8vIGFkZCBzb21lIGNzcyB0byB0aGUgZWxlbWVudCB0byBwcmV2ZW50IHRoZSBicm93c2VyIGZyb20gZG9pbmcgaXRzIG5hdGl2ZSBiZWhhdmlvclxuICBpZih0aGlzLm9wdGlvbnMuYmVoYXZpb3IpIHtcbiAgICBVdGlscy50b2dnbGVCZWhhdmlvcih0aGlzLmVsZW1lbnQsIHRoaXMub3B0aW9ucy5iZWhhdmlvciwgdHJ1ZSk7XG4gIH1cblxuICAvKipcbiAgICogZXZlbnQgc3RhcnQgaGFuZGxlciBvbiB0aGUgZWxlbWVudCB0byBzdGFydCB0aGUgZGV0ZWN0aW9uXG4gICAqIEBwcm9wZXJ0eSBldmVudFN0YXJ0SGFuZGxlclxuICAgKiBAdHlwZSB7T2JqZWN0fVxuICAgKi9cbiAgdGhpcy5ldmVudFN0YXJ0SGFuZGxlciA9IEV2ZW50Lm9uVG91Y2goZWxlbWVudCwgRVZFTlRfU1RBUlQsIGZ1bmN0aW9uKGV2KSB7XG4gICAgaWYoc2VsZi5lbmFibGVkICYmIGV2LmV2ZW50VHlwZSA9PSBFVkVOVF9TVEFSVCkge1xuICAgICAgRGV0ZWN0aW9uLnN0YXJ0RGV0ZWN0KHNlbGYsIGV2KTtcbiAgICB9IGVsc2UgaWYoZXYuZXZlbnRUeXBlID09IEVWRU5UX1RPVUNIKSB7XG4gICAgICBEZXRlY3Rpb24uZGV0ZWN0KGV2KTtcbiAgICB9XG4gIH0pO1xuXG4gIC8qKlxuICAgKiBrZWVwIGEgbGlzdCBvZiB1c2VyIGV2ZW50IGhhbmRsZXJzIHdoaWNoIG5lZWRzIHRvIGJlIHJlbW92ZWQgd2hlbiBjYWxsaW5nICdkaXNwb3NlJ1xuICAgKiBAcHJvcGVydHkgZXZlbnRIYW5kbGVyc1xuICAgKiBAdHlwZSB7QXJyYXl9XG4gICAqL1xuICB0aGlzLmV2ZW50SGFuZGxlcnMgPSBbXTtcbn07XG5cbkdlc3R1cmVEZXRlY3Rvci5JbnN0YW5jZS5wcm90b3R5cGUgPSB7XG4gIC8qKlxuICAgKiBAbWV0aG9kIG9uXG4gICAqIEBzaWduYXR1cmUgb24oZ2VzdHVyZXMsIGhhbmRsZXIpXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgW2VuXUFkZHMgYW4gZXZlbnQgaGFuZGxlciBmb3IgYSBnZXN0dXJlLiBBdmFpbGFibGUgZ2VzdHVyZXMgYXJlOiBkcmFnLCBkcmFnbGVmdCwgZHJhZ3JpZ2h0LCBkcmFndXAsIGRyYWdkb3duLCBob2xkLCByZWxlYXNlLCBzd2lwZSwgc3dpcGVsZWZ0LCBzd2lwZXJpZ2h0LCBzd2lwZXVwLCBzd2lwZWRvd24sIHRhcCwgZG91YmxldGFwLCB0b3VjaCwgdHJhbnNmb3JtLCBwaW5jaCwgcGluY2hpbiwgcGluY2hvdXQgYW5kIHJvdGF0ZS4gWy9lbl1cbiAgICogIFtqYV3jgrjjgqfjgrnjg4Hjg6Pjgavlr77jgZnjgovjgqTjg5njg7Pjg4jjg4/jg7Pjg4njg6njgpLov73liqDjgZfjgb7jgZnjgILmjIflrprjgafjgY3jgovjgrjjgqfjgrnjg4Hjg6PlkI3jga/jgIFkcmFnIGRyYWdsZWZ0IGRyYWdyaWdodCBkcmFndXAgZHJhZ2Rvd24gaG9sZCByZWxlYXNlIHN3aXBlIHN3aXBlbGVmdCBzd2lwZXJpZ2h0IHN3aXBldXAgc3dpcGVkb3duIHRhcCBkb3VibGV0YXAgdG91Y2ggdHJhbnNmb3JtIHBpbmNoIHBpbmNoaW4gcGluY2hvdXQgcm90YXRlIOOBp+OBmeOAglsvamFdXG4gICAqIEBwYXJhbSB7U3RyaW5nfSBnZXN0dXJlc1xuICAgKiAgIFtlbl1BIHNwYWNlIHNlcGFyYXRlZCBsaXN0IG9mIGdlc3R1cmVzLlsvZW5dXG4gICAqICAgW2phXeaknOefpeOBmeOCi+OCuOOCp+OCueODgeODo+WQjeOCkuaMh+WumuOBl+OBvuOBmeOAguOCueODmuODvOOCueOBp+ikh+aVsOaMh+WumuOBmeOCi+OBk+OBqOOBjOOBp+OBjeOBvuOBmeOAglsvamFdXG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IGhhbmRsZXJcbiAgICogICBbZW5dQW4gZXZlbnQgaGFuZGxpbmcgZnVuY3Rpb24uWy9lbl1cbiAgICogICBbamFd44Kk44OZ44Oz44OI44OP44Oz44OJ44Op44Go44Gq44KL6Zai5pWw44Kq44OW44K444Kn44Kv44OI44KS5oyH5a6a44GX44G+44GZ44CCWy9qYV1cbiAgICovXG4gIG9uOiBmdW5jdGlvbiBvbkV2ZW50KGdlc3R1cmVzLCBoYW5kbGVyKSB7XG4gICAgdmFyIHNlbGYgPSB0aGlzO1xuICAgIEV2ZW50Lm9uKHNlbGYuZWxlbWVudCwgZ2VzdHVyZXMsIGhhbmRsZXIsIGZ1bmN0aW9uKHR5cGUpIHtcbiAgICAgIHNlbGYuZXZlbnRIYW5kbGVycy5wdXNoKHsgZ2VzdHVyZTogdHlwZSwgaGFuZGxlcjogaGFuZGxlciB9KTtcbiAgICB9KTtcbiAgICByZXR1cm4gc2VsZjtcbiAgfSxcblxuICAvKipcbiAgICogQG1ldGhvZCBvZmZcbiAgICogQHNpZ25hdHVyZSBvZmYoZ2VzdHVyZXMsIGhhbmRsZXIpXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgW2VuXVJlbW92ZSBhbiBldmVudCBsaXN0ZW5lci5bL2VuXVxuICAgKiAgW2phXeOCpOODmeODs+ODiOODquOCueODiuODvOOCkuWJiumZpOOBl+OBvuOBmeOAglsvamFdXG4gICAqIEBwYXJhbSB7U3RyaW5nfSBnZXN0dXJlc1xuICAgKiAgIFtlbl1BIHNwYWNlIHNlcGFyYXRlZCBsaXN0IG9mIGdlc3R1cmVzLlsvZW5dXG4gICAqICAgW2phXeOCuOOCp+OCueODgeODo+WQjeOCkuaMh+WumuOBl+OBvuOBmeOAguOCueODmuODvOOCueOBp+ikh+aVsOaMh+WumuOBmeOCi+OBk+OBqOOBjOOBp+OBjeOBvuOBmeOAglsvamFdXG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IGhhbmRsZXJcbiAgICogICBbZW5dQW4gZXZlbnQgaGFuZGxpbmcgZnVuY3Rpb24uWy9lbl1cbiAgICogICBbamFd44Kk44OZ44Oz44OI44OP44Oz44OJ44Op44Go44Gq44KL6Zai5pWw44Kq44OW44K444Kn44Kv44OI44KS5oyH5a6a44GX44G+44GZ44CCWy9qYV1cbiAgICovXG4gIG9mZjogZnVuY3Rpb24gb2ZmRXZlbnQoZ2VzdHVyZXMsIGhhbmRsZXIpIHtcbiAgICB2YXIgc2VsZiA9IHRoaXM7XG5cbiAgICBFdmVudC5vZmYoc2VsZi5lbGVtZW50LCBnZXN0dXJlcywgaGFuZGxlciwgZnVuY3Rpb24odHlwZSkge1xuICAgICAgdmFyIGluZGV4ID0gVXRpbHMuaW5BcnJheSh7IGdlc3R1cmU6IHR5cGUsIGhhbmRsZXI6IGhhbmRsZXIgfSk7XG4gICAgICBpZihpbmRleCAhPT0gZmFsc2UpIHtcbiAgICAgICAgc2VsZi5ldmVudEhhbmRsZXJzLnNwbGljZShpbmRleCwgMSk7XG4gICAgICB9XG4gICAgfSk7XG4gICAgcmV0dXJuIHNlbGY7XG4gIH0sXG5cbiAgLyoqXG4gICAqIHRyaWdnZXIgZ2VzdHVyZSBldmVudFxuICAgKiBAbWV0aG9kIHRyaWdnZXJcbiAgICogQHNpZ25hdHVyZSB0cmlnZ2VyKGdlc3R1cmUsIGV2ZW50RGF0YSlcbiAgICogQHBhcmFtIHtTdHJpbmd9IGdlc3R1cmVcbiAgICogQHBhcmFtIHtPYmplY3R9IFtldmVudERhdGFdXG4gICAqL1xuICB0cmlnZ2VyOiBmdW5jdGlvbiB0cmlnZ2VyRXZlbnQoZ2VzdHVyZSwgZXZlbnREYXRhKSB7XG4gICAgLy8gb3B0aW9uYWxcbiAgICBpZighZXZlbnREYXRhKSB7XG4gICAgICBldmVudERhdGEgPSB7fTtcbiAgICB9XG5cbiAgICAvLyBjcmVhdGUgRE9NIGV2ZW50XG4gICAgdmFyIGV2ZW50ID0gR2VzdHVyZURldGVjdG9yLkRPQ1VNRU5ULmNyZWF0ZUV2ZW50KCdFdmVudCcpO1xuICAgIGV2ZW50LmluaXRFdmVudChnZXN0dXJlLCB0cnVlLCB0cnVlKTtcbiAgICBldmVudC5nZXN0dXJlID0gZXZlbnREYXRhO1xuXG4gICAgLy8gdHJpZ2dlciBvbiB0aGUgdGFyZ2V0IGlmIGl0IGlzIGluIHRoZSBpbnN0YW5jZSBlbGVtZW50LFxuICAgIC8vIHRoaXMgaXMgZm9yIGV2ZW50IGRlbGVnYXRpb24gdHJpY2tzXG4gICAgdmFyIGVsZW1lbnQgPSB0aGlzLmVsZW1lbnQ7XG4gICAgaWYoVXRpbHMuaGFzUGFyZW50KGV2ZW50RGF0YS50YXJnZXQsIGVsZW1lbnQpKSB7XG4gICAgICBlbGVtZW50ID0gZXZlbnREYXRhLnRhcmdldDtcbiAgICB9XG5cbiAgICBlbGVtZW50LmRpc3BhdGNoRXZlbnQoZXZlbnQpO1xuICAgIHJldHVybiB0aGlzO1xuICB9LFxuXG4gIC8qKlxuICAgKiBAbWV0aG9kIGVuYWJsZVxuICAgKiBAc2lnbmF0dXJlIGVuYWJsZShzdGF0ZSlcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICBbZW5dRW5hYmxlIG9yIGRpc2FibGUgZ2VzdHVyZSBkZXRlY3Rpb24uWy9lbl1cbiAgICogIFtqYV3jgrjjgqfjgrnjg4Hjg6PmpJznn6XjgpLmnInlirnljJYv54Sh5Yq55YyW44GX44G+44GZ44CCWy9qYV1cbiAgICogQHBhcmFtIHtCb29sZWFufSBzdGF0ZVxuICAgKiAgIFtlbl1TcGVjaWZ5IGlmIGl0IHNob3VsZCBiZSBlbmFibGVkIG9yIG5vdC5bL2VuXVxuICAgKiAgIFtqYV3mnInlirnjgavjgZnjgovjgYvjganjgYbjgYvjgpLmjIflrprjgZfjgb7jgZnjgIJbL2phXVxuICAgKi9cbiAgZW5hYmxlOiBmdW5jdGlvbiBlbmFibGUoc3RhdGUpIHtcbiAgICB0aGlzLmVuYWJsZWQgPSBzdGF0ZTtcbiAgICByZXR1cm4gdGhpcztcbiAgfSxcblxuICAvKipcbiAgICogQG1ldGhvZCBkaXNwb3NlXG4gICAqIEBzaWduYXR1cmUgZGlzcG9zZSgpXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgW2VuXVJlbW92ZSBhbmQgZGVzdHJveSBhbGwgZXZlbnQgaGFuZGxlcnMgZm9yIHRoaXMgaW5zdGFuY2UuWy9lbl1cbiAgICogIFtqYV3jgZPjga7jgqTjg7Pjgrnjgr/jg7Pjgrnjgafjga7jgrjjgqfjgrnjg4Hjg6Pjga7mpJznn6XjgoTjgIHjgqTjg5njg7Pjg4jjg4/jg7Pjg4njg6njgpLlhajjgabop6PpmaTjgZfjgablu4Pmo4TjgZfjgb7jgZnjgIJbL2phXVxuICAgKi9cbiAgZGlzcG9zZTogZnVuY3Rpb24gZGlzcG9zZSgpIHtcbiAgICB2YXIgaSwgZWg7XG5cbiAgICAvLyB1bmRvIGFsbCBjaGFuZ2VzIG1hZGUgYnkgc3RvcF9icm93c2VyX2JlaGF2aW9yXG4gICAgVXRpbHMudG9nZ2xlQmVoYXZpb3IodGhpcy5lbGVtZW50LCB0aGlzLm9wdGlvbnMuYmVoYXZpb3IsIGZhbHNlKTtcblxuICAgIC8vIHVuYmluZCBhbGwgY3VzdG9tIGV2ZW50IGhhbmRsZXJzXG4gICAgZm9yKGkgPSAtMTsgKGVoID0gdGhpcy5ldmVudEhhbmRsZXJzWysraV0pOykgeyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLWNvbmQtYXNzaWduXG4gICAgICBVdGlscy5vZmYodGhpcy5lbGVtZW50LCBlaC5nZXN0dXJlLCBlaC5oYW5kbGVyKTtcbiAgICB9XG5cbiAgICB0aGlzLmV2ZW50SGFuZGxlcnMgPSBbXTtcblxuICAgIC8vIHVuYmluZCB0aGUgc3RhcnQgZXZlbnQgbGlzdGVuZXJcbiAgICBFdmVudC5vZmYodGhpcy5lbGVtZW50LCBFVkVOVF9UWVBFU1tFVkVOVF9TVEFSVF0sIHRoaXMuZXZlbnRTdGFydEhhbmRsZXIpO1xuXG4gICAgcmV0dXJuIG51bGw7XG4gIH1cbn07XG5cblxuLyoqXG4gKiBAbW9kdWxlIGdlc3R1cmVzXG4gKi9cbi8qKlxuICogTW92ZSB3aXRoIHggZmluZ2VycyAoZGVmYXVsdCAxKSBhcm91bmQgb24gdGhlIHBhZ2UuXG4gKiBQcmV2ZW50aW5nIHRoZSBkZWZhdWx0IGJyb3dzZXIgYmVoYXZpb3IgaXMgYSBnb29kIHdheSB0byBpbXByb3ZlIGZlZWwgYW5kIHdvcmtpbmcuXG4gKiBgYGBgXG4gKiAgR2VzdHVyZURldGVjdG9ydGltZS5vbihcImRyYWdcIiwgZnVuY3Rpb24oZXYpIHtcbiAqICAgIGNvbnNvbGUubG9nKGV2KTtcbiAqICAgIGV2Lmdlc3R1cmUucHJldmVudERlZmF1bHQoKTtcbiAqICB9KTtcbiAqIGBgYGBcbiAqXG4gKiBAY2xhc3MgRHJhZ1xuICogQHN0YXRpY1xuICovXG4vKipcbiAqIEBldmVudCBkcmFnXG4gKiBAcGFyYW0ge09iamVjdH0gZXZcbiAqL1xuLyoqXG4gKiBAZXZlbnQgZHJhZ3N0YXJ0XG4gKiBAcGFyYW0ge09iamVjdH0gZXZcbiAqL1xuLyoqXG4gKiBAZXZlbnQgZHJhZ2VuZFxuICogQHBhcmFtIHtPYmplY3R9IGV2XG4gKi9cbi8qKlxuICogQGV2ZW50IGRyYXBsZWZ0XG4gKiBAcGFyYW0ge09iamVjdH0gZXZcbiAqL1xuLyoqXG4gKiBAZXZlbnQgZHJhZ3JpZ2h0XG4gKiBAcGFyYW0ge09iamVjdH0gZXZcbiAqL1xuLyoqXG4gKiBAZXZlbnQgZHJhZ3VwXG4gKiBAcGFyYW0ge09iamVjdH0gZXZcbiAqL1xuLyoqXG4gKiBAZXZlbnQgZHJhZ2Rvd25cbiAqIEBwYXJhbSB7T2JqZWN0fSBldlxuICovXG5cbi8qKlxuICogQHBhcmFtIHtTdHJpbmd9IG5hbWVcbiAqL1xuKGZ1bmN0aW9uKG5hbWUpIHtcbiAgdmFyIHRyaWdnZXJlZCA9IGZhbHNlO1xuXG4gIGZ1bmN0aW9uIGRyYWdHZXN0dXJlKGV2LCBpbnN0KSB7XG4gICAgdmFyIGN1ciA9IERldGVjdGlvbi5jdXJyZW50O1xuXG4gICAgLy8gbWF4IHRvdWNoZXNcbiAgICBpZihpbnN0Lm9wdGlvbnMuZHJhZ01heFRvdWNoZXMgPiAwICYmXG4gICAgICBldi50b3VjaGVzLmxlbmd0aCA+IGluc3Qub3B0aW9ucy5kcmFnTWF4VG91Y2hlcykge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHN3aXRjaChldi5ldmVudFR5cGUpIHtcbiAgICBjYXNlIEVWRU5UX1NUQVJUOlxuICAgICAgdHJpZ2dlcmVkID0gZmFsc2U7XG4gICAgICBicmVhaztcblxuICAgIGNhc2UgRVZFTlRfTU9WRTpcbiAgICAgIC8vIHdoZW4gdGhlIGRpc3RhbmNlIHdlIG1vdmVkIGlzIHRvbyBzbWFsbCB3ZSBza2lwIHRoaXMgZ2VzdHVyZVxuICAgICAgLy8gb3Igd2UgY2FuIGJlIGFscmVhZHkgaW4gZHJhZ2dpbmdcbiAgICAgIGlmKGV2LmRpc3RhbmNlIDwgaW5zdC5vcHRpb25zLmRyYWdNaW5EaXN0YW5jZSAmJlxuICAgICAgICBjdXIubmFtZSAhPSBuYW1lKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgdmFyIHN0YXJ0Q2VudGVyID0gY3VyLnN0YXJ0RXZlbnQuY2VudGVyO1xuXG4gICAgICAvLyB3ZSBhcmUgZHJhZ2dpbmchXG4gICAgICBpZihjdXIubmFtZSAhPSBuYW1lKSB7XG4gICAgICAgIGN1ci5uYW1lID0gbmFtZTtcbiAgICAgICAgaWYoaW5zdC5vcHRpb25zLmRyYWdEaXN0YW5jZUNvcnJlY3Rpb24gJiYgZXYuZGlzdGFuY2UgPiAwKSB7XG4gICAgICAgICAgLy8gV2hlbiBhIGRyYWcgaXMgdHJpZ2dlcmVkLCBzZXQgdGhlIGV2ZW50IGNlbnRlciB0byBkcmFnTWluRGlzdGFuY2UgcGl4ZWxzIGZyb20gdGhlIG9yaWdpbmFsIGV2ZW50IGNlbnRlci5cbiAgICAgICAgICAvLyBXaXRob3V0IHRoaXMgY29ycmVjdGlvbiwgdGhlIGRyYWdnZWQgZGlzdGFuY2Ugd291bGQganVtcHN0YXJ0IGF0IGRyYWdNaW5EaXN0YW5jZSBwaXhlbHMgaW5zdGVhZCBvZiBhdCAwLlxuICAgICAgICAgIC8vIEl0IG1pZ2h0IGJlIHVzZWZ1bCB0byBzYXZlIHRoZSBvcmlnaW5hbCBzdGFydCBwb2ludCBzb21ld2hlcmVcbiAgICAgICAgICB2YXIgZmFjdG9yID0gTWF0aC5hYnMoaW5zdC5vcHRpb25zLmRyYWdNaW5EaXN0YW5jZSAvIGV2LmRpc3RhbmNlKTtcbiAgICAgICAgICBzdGFydENlbnRlci5wYWdlWCArPSBldi5kZWx0YVggKiBmYWN0b3I7XG4gICAgICAgICAgc3RhcnRDZW50ZXIucGFnZVkgKz0gZXYuZGVsdGFZICogZmFjdG9yO1xuICAgICAgICAgIHN0YXJ0Q2VudGVyLmNsaWVudFggKz0gZXYuZGVsdGFYICogZmFjdG9yO1xuICAgICAgICAgIHN0YXJ0Q2VudGVyLmNsaWVudFkgKz0gZXYuZGVsdGFZICogZmFjdG9yO1xuXG4gICAgICAgICAgLy8gcmVjYWxjdWxhdGUgZXZlbnQgZGF0YSB1c2luZyBuZXcgc3RhcnQgcG9pbnRcbiAgICAgICAgICBldiA9IERldGVjdGlvbi5leHRlbmRFdmVudERhdGEoZXYpO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIC8vIGxvY2sgZHJhZyB0byBheGlzP1xuICAgICAgaWYoY3VyLmxhc3RFdmVudC5kcmFnTG9ja1RvQXhpcyB8fFxuICAgICAgICAoIGluc3Qub3B0aW9ucy5kcmFnTG9ja1RvQXhpcyAmJlxuICAgICAgICAgIGluc3Qub3B0aW9ucy5kcmFnTG9ja01pbkRpc3RhbmNlIDw9IGV2LmRpc3RhbmNlXG4gICAgICAgICkpIHtcbiAgICAgICAgICBldi5kcmFnTG9ja1RvQXhpcyA9IHRydWU7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBrZWVwIGRpcmVjdGlvbiBvbiB0aGUgYXhpcyB0aGF0IHRoZSBkcmFnIGdlc3R1cmUgc3RhcnRlZCBvblxuICAgICAgICB2YXIgbGFzdERpcmVjdGlvbiA9IGN1ci5sYXN0RXZlbnQuZGlyZWN0aW9uO1xuICAgICAgICBpZihldi5kcmFnTG9ja1RvQXhpcyAmJiBsYXN0RGlyZWN0aW9uICE9PSBldi5kaXJlY3Rpb24pIHtcbiAgICAgICAgICBpZihVdGlscy5pc1ZlcnRpY2FsKGxhc3REaXJlY3Rpb24pKSB7XG4gICAgICAgICAgICBldi5kaXJlY3Rpb24gPSAoZXYuZGVsdGFZIDwgMCkgPyBESVJFQ1RJT05fVVAgOiBESVJFQ1RJT05fRE9XTjtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgZXYuZGlyZWN0aW9uID0gKGV2LmRlbHRhWCA8IDApID8gRElSRUNUSU9OX0xFRlQgOiBESVJFQ1RJT05fUklHSFQ7XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgLy8gZmlyc3QgdGltZSwgdHJpZ2dlciBkcmFnc3RhcnQgZXZlbnRcbiAgICAgICAgaWYoIXRyaWdnZXJlZCkge1xuICAgICAgICAgIGluc3QudHJpZ2dlcihuYW1lICsgJ3N0YXJ0JywgZXYpO1xuICAgICAgICAgIHRyaWdnZXJlZCA9IHRydWU7XG4gICAgICAgIH1cblxuICAgICAgICAvLyB0cmlnZ2VyIGV2ZW50c1xuICAgICAgICBpbnN0LnRyaWdnZXIobmFtZSwgZXYpO1xuICAgICAgICBpbnN0LnRyaWdnZXIobmFtZSArIGV2LmRpcmVjdGlvbiwgZXYpO1xuXG4gICAgICAgIHZhciBpc1ZlcnRpY2FsID0gVXRpbHMuaXNWZXJ0aWNhbChldi5kaXJlY3Rpb24pO1xuXG4gICAgICAgIC8vIGJsb2NrIHRoZSBicm93c2VyIGV2ZW50c1xuICAgICAgICBpZigoaW5zdC5vcHRpb25zLmRyYWdCbG9ja1ZlcnRpY2FsICYmIGlzVmVydGljYWwpIHx8XG4gICAgICAgICAgKGluc3Qub3B0aW9ucy5kcmFnQmxvY2tIb3Jpem9udGFsICYmICFpc1ZlcnRpY2FsKSkge1xuICAgICAgICAgIGV2LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIH1cbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIGNhc2UgRVZFTlRfUkVMRUFTRTpcbiAgICAgICAgaWYodHJpZ2dlcmVkICYmIGV2LmNoYW5nZWRMZW5ndGggPD0gaW5zdC5vcHRpb25zLmRyYWdNYXhUb3VjaGVzKSB7XG4gICAgICAgICAgaW5zdC50cmlnZ2VyKG5hbWUgKyAnZW5kJywgZXYpO1xuICAgICAgICAgIHRyaWdnZXJlZCA9IGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBjYXNlIEVWRU5UX0VORDpcbiAgICAgICAgdHJpZ2dlcmVkID0gZmFsc2U7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgIH1cblxuICAgIEdlc3R1cmVEZXRlY3Rvci5nZXN0dXJlcy5EcmFnID0ge1xuICAgICAgbmFtZTogbmFtZSxcbiAgICAgIGluZGV4OiA1MCxcbiAgICAgIGhhbmRsZXI6IGRyYWdHZXN0dXJlLFxuICAgICAgZGVmYXVsdHM6IHtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIG1pbmltYWwgbW92ZW1lbnQgdGhhdCBoYXZlIHRvIGJlIG1hZGUgYmVmb3JlIHRoZSBkcmFnIGV2ZW50IGdldHMgdHJpZ2dlcmVkXG4gICAgICAgICAqIEBwcm9wZXJ0eSBkcmFnTWluRGlzdGFuY2VcbiAgICAgICAgICogQHR5cGUge051bWJlcn1cbiAgICAgICAgICogQGRlZmF1bHQgMTBcbiAgICAgICAgICovXG4gICAgICAgIGRyYWdNaW5EaXN0YW5jZTogMTAsXG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIFNldCBkcmFnRGlzdGFuY2VDb3JyZWN0aW9uIHRvIHRydWUgdG8gbWFrZSB0aGUgc3RhcnRpbmcgcG9pbnQgb2YgdGhlIGRyYWdcbiAgICAgICAgICogYmUgY2FsY3VsYXRlZCBmcm9tIHdoZXJlIHRoZSBkcmFnIHdhcyB0cmlnZ2VyZWQsIG5vdCBmcm9tIHdoZXJlIHRoZSB0b3VjaCBzdGFydGVkLlxuICAgICAgICAgKiBVc2VmdWwgdG8gYXZvaWQgYSBqZXJrLXN0YXJ0aW5nIGRyYWcsIHdoaWNoIGNhbiBtYWtlIGZpbmUtYWRqdXN0bWVudHNcbiAgICAgICAgICogdGhyb3VnaCBkcmFnZ2luZyBkaWZmaWN1bHQsIGFuZCBiZSB2aXN1YWxseSB1bmFwcGVhbGluZy5cbiAgICAgICAgICogQHByb3BlcnR5IGRyYWdEaXN0YW5jZUNvcnJlY3Rpb25cbiAgICAgICAgICogQHR5cGUge0Jvb2xlYW59XG4gICAgICAgICAqIEBkZWZhdWx0IHRydWVcbiAgICAgICAgICovXG4gICAgICAgIGRyYWdEaXN0YW5jZUNvcnJlY3Rpb246IHRydWUsXG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIHNldCAwIGZvciB1bmxpbWl0ZWQsIGJ1dCB0aGlzIGNhbiBjb25mbGljdCB3aXRoIHRyYW5zZm9ybVxuICAgICAgICAgKiBAcHJvcGVydHkgZHJhZ01heFRvdWNoZXNcbiAgICAgICAgICogQHR5cGUge051bWJlcn1cbiAgICAgICAgICogQGRlZmF1bHQgMVxuICAgICAgICAgKi9cbiAgICAgICAgZHJhZ01heFRvdWNoZXM6IDEsXG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIHByZXZlbnQgZGVmYXVsdCBicm93c2VyIGJlaGF2aW9yIHdoZW4gZHJhZ2dpbmcgb2NjdXJzXG4gICAgICAgICAqIGJlIGNhcmVmdWwgd2l0aCBpdCwgaXQgbWFrZXMgdGhlIGVsZW1lbnQgYSBibG9ja2luZyBlbGVtZW50XG4gICAgICAgICAqIHdoZW4geW91IGFyZSB1c2luZyB0aGUgZHJhZyBnZXN0dXJlLCBpdCBpcyBhIGdvb2QgcHJhY3RpY2UgdG8gc2V0IHRoaXMgdHJ1ZVxuICAgICAgICAgKiBAcHJvcGVydHkgZHJhZ0Jsb2NrSG9yaXpvbnRhbFxuICAgICAgICAgKiBAdHlwZSB7Qm9vbGVhbn1cbiAgICAgICAgICogQGRlZmF1bHQgZmFsc2VcbiAgICAgICAgICovXG4gICAgICAgIGRyYWdCbG9ja0hvcml6b250YWw6IGZhbHNlLFxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBzYW1lIGFzIGBkcmFnQmxvY2tIb3Jpem9udGFsYCwgYnV0IGZvciB2ZXJ0aWNhbCBtb3ZlbWVudFxuICAgICAgICAgKiBAcHJvcGVydHkgZHJhZ0Jsb2NrVmVydGljYWxcbiAgICAgICAgICogQHR5cGUge0Jvb2xlYW59XG4gICAgICAgICAqIEBkZWZhdWx0IGZhbHNlXG4gICAgICAgICAqL1xuICAgICAgICBkcmFnQmxvY2tWZXJ0aWNhbDogZmFsc2UsXG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIGRyYWdMb2NrVG9BeGlzIGtlZXBzIHRoZSBkcmFnIGdlc3R1cmUgb24gdGhlIGF4aXMgdGhhdCBpdCBzdGFydGVkIG9uLFxuICAgICAgICAgKiBJdCBkaXNhbGxvd3MgdmVydGljYWwgZGlyZWN0aW9ucyBpZiB0aGUgaW5pdGlhbCBkaXJlY3Rpb24gd2FzIGhvcml6b250YWwsIGFuZCB2aWNlIHZlcnNhLlxuICAgICAgICAgKiBAcHJvcGVydHkgZHJhZ0xvY2tUb0F4aXNcbiAgICAgICAgICogQHR5cGUge0Jvb2xlYW59XG4gICAgICAgICAqIEBkZWZhdWx0IGZhbHNlXG4gICAgICAgICAqL1xuICAgICAgICBkcmFnTG9ja1RvQXhpczogZmFsc2UsXG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIGRyYWcgbG9jayBvbmx5IGtpY2tzIGluIHdoZW4gZGlzdGFuY2UgPiBkcmFnTG9ja01pbkRpc3RhbmNlXG4gICAgICAgICAqIFRoaXMgd2F5LCBsb2NraW5nIG9jY3VycyBvbmx5IHdoZW4gdGhlIGRpc3RhbmNlIGhhcyBiZWNvbWUgbGFyZ2UgZW5vdWdoIHRvIHJlbGlhYmx5IGRldGVybWluZSB0aGUgZGlyZWN0aW9uXG4gICAgICAgICAqIEBwcm9wZXJ0eSBkcmFnTG9ja01pbkRpc3RhbmNlXG4gICAgICAgICAqIEB0eXBlIHtOdW1iZXJ9XG4gICAgICAgICAqIEBkZWZhdWx0IDI1XG4gICAgICAgICAqL1xuICAgICAgICBkcmFnTG9ja01pbkRpc3RhbmNlOiAyNVxuICAgICAgfVxuICAgIH07XG4gIH0pKCdkcmFnJyk7XG5cbiAgLyoqXG4gICAqIEBtb2R1bGUgZ2VzdHVyZXNcbiAgICovXG4gIC8qKlxuICAgKiB0cmlnZ2VyIGEgc2ltcGxlIGdlc3R1cmUgZXZlbnQsIHNvIHlvdSBjYW4gZG8gYW55dGhpbmcgaW4geW91ciBoYW5kbGVyLlxuICAgKiBvbmx5IHVzYWJsZSBpZiB5b3Uga25vdyB3aGF0IHlvdXIgZG9pbmcuLi5cbiAgICpcbiAgICogQGNsYXNzIEdlc3R1cmVcbiAgICogQHN0YXRpY1xuICAgKi9cbiAgLyoqXG4gICAqIEBldmVudCBnZXN0dXJlXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBldlxuICAgKi9cbiAgR2VzdHVyZURldGVjdG9yLmdlc3R1cmVzLkdlc3R1cmUgPSB7XG4gICAgbmFtZTogJ2dlc3R1cmUnLFxuICAgIGluZGV4OiAxMzM3LFxuICAgIGhhbmRsZXI6IGZ1bmN0aW9uIHJlbGVhc2VHZXN0dXJlKGV2LCBpbnN0KSB7XG4gICAgICBpbnN0LnRyaWdnZXIodGhpcy5uYW1lLCBldik7XG4gICAgfVxuICB9O1xuXG4gIC8qKlxuICAgKiBAbW9kdWxlIGdlc3R1cmVzXG4gICAqL1xuICAvKipcbiAgICogVG91Y2ggc3RheXMgYXQgdGhlIHNhbWUgcGxhY2UgZm9yIHggdGltZVxuICAgKlxuICAgKiBAY2xhc3MgSG9sZFxuICAgKiBAc3RhdGljXG4gICAqL1xuICAvKipcbiAgICogQGV2ZW50IGhvbGRcbiAgICogQHBhcmFtIHtPYmplY3R9IGV2XG4gICAqL1xuXG4gIC8qKlxuICAgKiBAcGFyYW0ge1N0cmluZ30gbmFtZVxuICAgKi9cbiAgKGZ1bmN0aW9uKG5hbWUpIHtcbiAgICB2YXIgdGltZXI7XG5cbiAgICBmdW5jdGlvbiBob2xkR2VzdHVyZShldiwgaW5zdCkge1xuICAgICAgdmFyIG9wdGlvbnMgPSBpbnN0Lm9wdGlvbnMsXG4gICAgICAgICAgY3VycmVudCA9IERldGVjdGlvbi5jdXJyZW50O1xuXG4gICAgICBzd2l0Y2goZXYuZXZlbnRUeXBlKSB7XG4gICAgICBjYXNlIEVWRU5UX1NUQVJUOlxuICAgICAgICBjbGVhclRpbWVvdXQodGltZXIpO1xuXG4gICAgICAgIC8vIHNldCB0aGUgZ2VzdHVyZSBzbyB3ZSBjYW4gY2hlY2sgaW4gdGhlIHRpbWVvdXQgaWYgaXQgc3RpbGwgaXNcbiAgICAgICAgY3VycmVudC5uYW1lID0gbmFtZTtcblxuICAgICAgICAvLyBzZXQgdGltZXIgYW5kIGlmIGFmdGVyIHRoZSB0aW1lb3V0IGl0IHN0aWxsIGlzIGhvbGQsXG4gICAgICAgIC8vIHdlIHRyaWdnZXIgdGhlIGhvbGQgZXZlbnRcbiAgICAgICAgdGltZXIgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xuICAgICAgICAgIGlmKGN1cnJlbnQgJiYgY3VycmVudC5uYW1lID09IG5hbWUpIHtcbiAgICAgICAgICAgIGluc3QudHJpZ2dlcihuYW1lLCBldik7XG4gICAgICAgICAgfVxuICAgICAgICB9LCBvcHRpb25zLmhvbGRUaW1lb3V0KTtcbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIGNhc2UgRVZFTlRfTU9WRTpcbiAgICAgICAgaWYoZXYuZGlzdGFuY2UgPiBvcHRpb25zLmhvbGRUaHJlc2hvbGQpIHtcbiAgICAgICAgICBjbGVhclRpbWVvdXQodGltZXIpO1xuICAgICAgICB9XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBjYXNlIEVWRU5UX1JFTEVBU0U6XG4gICAgICAgIGNsZWFyVGltZW91dCh0aW1lcik7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgIH1cblxuICAgIEdlc3R1cmVEZXRlY3Rvci5nZXN0dXJlcy5Ib2xkID0ge1xuICAgICAgbmFtZTogbmFtZSxcbiAgICAgIGluZGV4OiAxMCxcbiAgICAgIGRlZmF1bHRzOiB7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBAcHJvcGVydHkgaG9sZFRpbWVvdXRcbiAgICAgICAgICogQHR5cGUge051bWJlcn1cbiAgICAgICAgICogQGRlZmF1bHQgNTAwXG4gICAgICAgICAqL1xuICAgICAgICBob2xkVGltZW91dDogNTAwLFxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBtb3ZlbWVudCBhbGxvd2VkIHdoaWxlIGhvbGRpbmdcbiAgICAgICAgICogQHByb3BlcnR5IGhvbGRUaHJlc2hvbGRcbiAgICAgICAgICogQHR5cGUge051bWJlcn1cbiAgICAgICAgICogQGRlZmF1bHQgMlxuICAgICAgICAgKi9cbiAgICAgICAgaG9sZFRocmVzaG9sZDogMlxuICAgICAgfSxcbiAgICAgIGhhbmRsZXI6IGhvbGRHZXN0dXJlXG4gICAgfTtcbiAgfSkoJ2hvbGQnKTtcblxuICAvKipcbiAgICogQG1vZHVsZSBnZXN0dXJlc1xuICAgKi9cbiAgLyoqXG4gICAqIHdoZW4gYSB0b3VjaCBpcyBiZWluZyByZWxlYXNlZCBmcm9tIHRoZSBwYWdlXG4gICAqXG4gICAqIEBjbGFzcyBSZWxlYXNlXG4gICAqIEBzdGF0aWNcbiAgICovXG4gIC8qKlxuICAgKiBAZXZlbnQgcmVsZWFzZVxuICAgKiBAcGFyYW0ge09iamVjdH0gZXZcbiAgICovXG4gIEdlc3R1cmVEZXRlY3Rvci5nZXN0dXJlcy5SZWxlYXNlID0ge1xuICAgIG5hbWU6ICdyZWxlYXNlJyxcbiAgICBpbmRleDogSW5maW5pdHksXG4gICAgaGFuZGxlcjogZnVuY3Rpb24gcmVsZWFzZUdlc3R1cmUoZXYsIGluc3QpIHtcbiAgICAgIGlmKGV2LmV2ZW50VHlwZSA9PSBFVkVOVF9SRUxFQVNFKSB7XG4gICAgICAgIGluc3QudHJpZ2dlcih0aGlzLm5hbWUsIGV2KTtcbiAgICAgIH1cbiAgICB9XG4gIH07XG5cbiAgLyoqXG4gICAqIEBtb2R1bGUgZ2VzdHVyZXNcbiAgICovXG4gIC8qKlxuICAgKiB0cmlnZ2VycyBzd2lwZSBldmVudHMgd2hlbiB0aGUgZW5kIHZlbG9jaXR5IGlzIGFib3ZlIHRoZSB0aHJlc2hvbGRcbiAgICogZm9yIGJlc3QgdXNhZ2UsIHNldCBgcHJldmVudERlZmF1bHRgIChvbiB0aGUgZHJhZyBnZXN0dXJlKSB0byBgdHJ1ZWBcbiAgICogYGBgYFxuICAgKiAgR2VzdHVyZURldGVjdG9ydGltZS5vbihcImRyYWdsZWZ0IHN3aXBlbGVmdFwiLCBmdW5jdGlvbihldikge1xuICAgKiAgICBjb25zb2xlLmxvZyhldik7XG4gICAqICAgIGV2Lmdlc3R1cmUucHJldmVudERlZmF1bHQoKTtcbiAgICogIH0pO1xuICAgKiBgYGBgXG4gICAqXG4gICAqIEBjbGFzcyBTd2lwZVxuICAgKiBAc3RhdGljXG4gICAqL1xuICAvKipcbiAgICogQGV2ZW50IHN3aXBlXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBldlxuICAgKi9cbiAgLyoqXG4gICAqIEBldmVudCBzd2lwZWxlZnRcbiAgICogQHBhcmFtIHtPYmplY3R9IGV2XG4gICAqL1xuICAvKipcbiAgICogQGV2ZW50IHN3aXBlcmlnaHRcbiAgICogQHBhcmFtIHtPYmplY3R9IGV2XG4gICAqL1xuICAvKipcbiAgICogQGV2ZW50IHN3aXBldXBcbiAgICogQHBhcmFtIHtPYmplY3R9IGV2XG4gICAqL1xuICAvKipcbiAgICogQGV2ZW50IHN3aXBlZG93blxuICAgKiBAcGFyYW0ge09iamVjdH0gZXZcbiAgICovXG4gIEdlc3R1cmVEZXRlY3Rvci5nZXN0dXJlcy5Td2lwZSA9IHtcbiAgICBuYW1lOiAnc3dpcGUnLFxuICAgIGluZGV4OiA0MCxcbiAgICBkZWZhdWx0czoge1xuICAgICAgLyoqXG4gICAgICAgKiBAcHJvcGVydHkgc3dpcGVNaW5Ub3VjaGVzXG4gICAgICAgKiBAdHlwZSB7TnVtYmVyfVxuICAgICAgICogQGRlZmF1bHQgMVxuICAgICAgICovXG4gICAgICBzd2lwZU1pblRvdWNoZXM6IDEsXG5cbiAgICAgIC8qKlxuICAgICAgICogQHByb3BlcnR5IHN3aXBlTWF4VG91Y2hlc1xuICAgICAgICogQHR5cGUge051bWJlcn1cbiAgICAgICAqIEBkZWZhdWx0IDFcbiAgICAgICAqL1xuICAgICAgc3dpcGVNYXhUb3VjaGVzOiAxLFxuXG4gICAgICAvKipcbiAgICAgICAqIGhvcml6b250YWwgc3dpcGUgdmVsb2NpdHlcbiAgICAgICAqIEBwcm9wZXJ0eSBzd2lwZVZlbG9jaXR5WFxuICAgICAgICogQHR5cGUge051bWJlcn1cbiAgICAgICAqIEBkZWZhdWx0IDAuNlxuICAgICAgICovXG4gICAgICBzd2lwZVZlbG9jaXR5WDogMC42LFxuXG4gICAgICAvKipcbiAgICAgICAqIHZlcnRpY2FsIHN3aXBlIHZlbG9jaXR5XG4gICAgICAgKiBAcHJvcGVydHkgc3dpcGVWZWxvY2l0eVlcbiAgICAgICAqIEB0eXBlIHtOdW1iZXJ9XG4gICAgICAgKiBAZGVmYXVsdCAwLjZcbiAgICAgICAqL1xuICAgICAgc3dpcGVWZWxvY2l0eVk6IDAuNlxuICAgIH0sXG5cbiAgICBoYW5kbGVyOiBmdW5jdGlvbiBzd2lwZUdlc3R1cmUoZXYsIGluc3QpIHtcbiAgICAgIGlmKGV2LmV2ZW50VHlwZSA9PSBFVkVOVF9SRUxFQVNFKSB7XG4gICAgICAgIHZhciB0b3VjaGVzID0gZXYudG91Y2hlcy5sZW5ndGgsXG4gICAgICAgICAgICBvcHRpb25zID0gaW5zdC5vcHRpb25zO1xuXG4gICAgICAgIC8vIG1heCB0b3VjaGVzXG4gICAgICAgIGlmKHRvdWNoZXMgPCBvcHRpb25zLnN3aXBlTWluVG91Y2hlcyB8fFxuICAgICAgICAgIHRvdWNoZXMgPiBvcHRpb25zLnN3aXBlTWF4VG91Y2hlcykge1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIHdoZW4gdGhlIGRpc3RhbmNlIHdlIG1vdmVkIGlzIHRvbyBzbWFsbCB3ZSBza2lwIHRoaXMgZ2VzdHVyZVxuICAgICAgICAvLyBvciB3ZSBjYW4gYmUgYWxyZWFkeSBpbiBkcmFnZ2luZ1xuICAgICAgICBpZihldi52ZWxvY2l0eVggPiBvcHRpb25zLnN3aXBlVmVsb2NpdHlYIHx8XG4gICAgICAgICAgZXYudmVsb2NpdHlZID4gb3B0aW9ucy5zd2lwZVZlbG9jaXR5WSkge1xuICAgICAgICAgIC8vIHRyaWdnZXIgc3dpcGUgZXZlbnRzXG4gICAgICAgICAgaW5zdC50cmlnZ2VyKHRoaXMubmFtZSwgZXYpO1xuICAgICAgICAgIGluc3QudHJpZ2dlcih0aGlzLm5hbWUgKyBldi5kaXJlY3Rpb24sIGV2KTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfTtcblxuICAvKipcbiAgICogQG1vZHVsZSBnZXN0dXJlc1xuICAgKi9cbiAgLyoqXG4gICAqIFNpbmdsZSB0YXAgYW5kIGEgZG91YmxlIHRhcCBvbiBhIHBsYWNlXG4gICAqXG4gICAqIEBjbGFzcyBUYXBcbiAgICogQHN0YXRpY1xuICAgKi9cbiAgLyoqXG4gICAqIEBldmVudCB0YXBcbiAgICogQHBhcmFtIHtPYmplY3R9IGV2XG4gICAqL1xuICAvKipcbiAgICogQGV2ZW50IGRvdWJsZXRhcFxuICAgKiBAcGFyYW0ge09iamVjdH0gZXZcbiAgICovXG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7U3RyaW5nfSBuYW1lXG4gICAqL1xuICAoZnVuY3Rpb24obmFtZSkge1xuICAgIHZhciBoYXNNb3ZlZCA9IGZhbHNlO1xuXG4gICAgZnVuY3Rpb24gdGFwR2VzdHVyZShldiwgaW5zdCkge1xuICAgICAgdmFyIG9wdGlvbnMgPSBpbnN0Lm9wdGlvbnMsXG4gICAgICAgICAgY3VycmVudCA9IERldGVjdGlvbi5jdXJyZW50LFxuICAgICAgICAgIHByZXYgPSBEZXRlY3Rpb24ucHJldmlvdXMsXG4gICAgICAgICAgc2luY2VQcmV2LFxuICAgICAgICAgIGRpZERvdWJsZVRhcDtcblxuICAgICAgc3dpdGNoKGV2LmV2ZW50VHlwZSkge1xuICAgICAgY2FzZSBFVkVOVF9TVEFSVDpcbiAgICAgICAgaGFzTW92ZWQgPSBmYWxzZTtcbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIGNhc2UgRVZFTlRfTU9WRTpcbiAgICAgICAgaGFzTW92ZWQgPSBoYXNNb3ZlZCB8fCAoZXYuZGlzdGFuY2UgPiBvcHRpb25zLnRhcE1heERpc3RhbmNlKTtcbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIGNhc2UgRVZFTlRfRU5EOlxuICAgICAgICBpZighVXRpbHMuaW5TdHIoZXYuc3JjRXZlbnQudHlwZSwgJ2NhbmNlbCcpICYmIGV2LmRlbHRhVGltZSA8IG9wdGlvbnMudGFwTWF4VGltZSAmJiAhaGFzTW92ZWQpIHtcbiAgICAgICAgICAvLyBwcmV2aW91cyBnZXN0dXJlLCBmb3IgdGhlIGRvdWJsZSB0YXAgc2luY2UgdGhlc2UgYXJlIHR3byBkaWZmZXJlbnQgZ2VzdHVyZSBkZXRlY3Rpb25zXG4gICAgICAgICAgc2luY2VQcmV2ID0gcHJldiAmJiBwcmV2Lmxhc3RFdmVudCAmJiBldi50aW1lU3RhbXAgLSBwcmV2Lmxhc3RFdmVudC50aW1lU3RhbXA7XG4gICAgICAgICAgZGlkRG91YmxlVGFwID0gZmFsc2U7XG5cbiAgICAgICAgICAvLyBjaGVjayBpZiBkb3VibGUgdGFwXG4gICAgICAgICAgaWYocHJldiAmJiBwcmV2Lm5hbWUgPT0gbmFtZSAmJlxuICAgICAgICAgICAgKHNpbmNlUHJldiAmJiBzaW5jZVByZXYgPCBvcHRpb25zLmRvdWJsZVRhcEludGVydmFsKSAmJlxuICAgICAgICAgICAgZXYuZGlzdGFuY2UgPCBvcHRpb25zLmRvdWJsZVRhcERpc3RhbmNlKSB7XG4gICAgICAgICAgICBpbnN0LnRyaWdnZXIoJ2RvdWJsZXRhcCcsIGV2KTtcbiAgICAgICAgICAgIGRpZERvdWJsZVRhcCA9IHRydWU7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgLy8gZG8gYSBzaW5nbGUgdGFwXG4gICAgICAgICAgaWYoIWRpZERvdWJsZVRhcCB8fCBvcHRpb25zLnRhcEFsd2F5cykge1xuICAgICAgICAgICAgY3VycmVudC5uYW1lID0gbmFtZTtcbiAgICAgICAgICAgIGluc3QudHJpZ2dlcihjdXJyZW50Lm5hbWUsIGV2KTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgfVxuXG4gICAgR2VzdHVyZURldGVjdG9yLmdlc3R1cmVzLlRhcCA9IHtcbiAgICAgIG5hbWU6IG5hbWUsXG4gICAgICBpbmRleDogMTAwLFxuICAgICAgaGFuZGxlcjogdGFwR2VzdHVyZSxcbiAgICAgIGRlZmF1bHRzOiB7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBtYXggdGltZSBvZiBhIHRhcCwgdGhpcyBpcyBmb3IgdGhlIHNsb3cgdGFwcGVyc1xuICAgICAgICAgKiBAcHJvcGVydHkgdGFwTWF4VGltZVxuICAgICAgICAgKiBAdHlwZSB7TnVtYmVyfVxuICAgICAgICAgKiBAZGVmYXVsdCAyNTBcbiAgICAgICAgICovXG4gICAgICAgIHRhcE1heFRpbWU6IDI1MCxcblxuICAgICAgICAvKipcbiAgICAgICAgICogbWF4IGRpc3RhbmNlIG9mIG1vdmVtZW50IG9mIGEgdGFwLCB0aGlzIGlzIGZvciB0aGUgc2xvdyB0YXBwZXJzXG4gICAgICAgICAqIEBwcm9wZXJ0eSB0YXBNYXhEaXN0YW5jZVxuICAgICAgICAgKiBAdHlwZSB7TnVtYmVyfVxuICAgICAgICAgKiBAZGVmYXVsdCAxMFxuICAgICAgICAgKi9cbiAgICAgICAgdGFwTWF4RGlzdGFuY2U6IDEwLFxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBhbHdheXMgdHJpZ2dlciB0aGUgYHRhcGAgZXZlbnQsIGV2ZW4gd2hpbGUgZG91YmxlLXRhcHBpbmdcbiAgICAgICAgICogQHByb3BlcnR5IHRhcEFsd2F5c1xuICAgICAgICAgKiBAdHlwZSB7Qm9vbGVhbn1cbiAgICAgICAgICogQGRlZmF1bHQgdHJ1ZVxuICAgICAgICAgKi9cbiAgICAgICAgdGFwQWx3YXlzOiB0cnVlLFxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBtYXggZGlzdGFuY2UgYmV0d2VlbiB0d28gdGFwc1xuICAgICAgICAgKiBAcHJvcGVydHkgZG91YmxlVGFwRGlzdGFuY2VcbiAgICAgICAgICogQHR5cGUge051bWJlcn1cbiAgICAgICAgICogQGRlZmF1bHQgMjBcbiAgICAgICAgICovXG4gICAgICAgIGRvdWJsZVRhcERpc3RhbmNlOiAyMCxcblxuICAgICAgICAvKipcbiAgICAgICAgICogbWF4IHRpbWUgYmV0d2VlbiB0d28gdGFwc1xuICAgICAgICAgKiBAcHJvcGVydHkgZG91YmxlVGFwSW50ZXJ2YWxcbiAgICAgICAgICogQHR5cGUge051bWJlcn1cbiAgICAgICAgICogQGRlZmF1bHQgMzAwXG4gICAgICAgICAqL1xuICAgICAgICBkb3VibGVUYXBJbnRlcnZhbDogMzAwXG4gICAgICB9XG4gICAgfTtcbiAgfSkoJ3RhcCcpO1xuXG4gIC8qKlxuICAgKiBAbW9kdWxlIGdlc3R1cmVzXG4gICAqL1xuICAvKipcbiAgICogd2hlbiBhIHRvdWNoIGlzIGJlaW5nIHRvdWNoZWQgYXQgdGhlIHBhZ2VcbiAgICpcbiAgICogQGNsYXNzIFRvdWNoXG4gICAqIEBzdGF0aWNcbiAgICovXG4gIC8qKlxuICAgKiBAZXZlbnQgdG91Y2hcbiAgICogQHBhcmFtIHtPYmplY3R9IGV2XG4gICAqL1xuICBHZXN0dXJlRGV0ZWN0b3IuZ2VzdHVyZXMuVG91Y2ggPSB7XG4gICAgbmFtZTogJ3RvdWNoJyxcbiAgICBpbmRleDogLUluZmluaXR5LFxuICAgIGRlZmF1bHRzOiB7XG4gICAgICAvKipcbiAgICAgICAqIGNhbGwgcHJldmVudERlZmF1bHQgYXQgdG91Y2hzdGFydCwgYW5kIG1ha2VzIHRoZSBlbGVtZW50IGJsb2NraW5nIGJ5IGRpc2FibGluZyB0aGUgc2Nyb2xsaW5nIG9mIHRoZSBwYWdlLFxuICAgICAgICogYnV0IGl0IGltcHJvdmVzIGdlc3R1cmVzIGxpa2UgdHJhbnNmb3JtaW5nIGFuZCBkcmFnZ2luZy5cbiAgICAgICAqIGJlIGNhcmVmdWwgd2l0aCB1c2luZyB0aGlzLCBpdCBjYW4gYmUgdmVyeSBhbm5veWluZyBmb3IgdXNlcnMgdG8gYmUgc3R1Y2sgb24gdGhlIHBhZ2VcbiAgICAgICAqIEBwcm9wZXJ0eSBwcmV2ZW50RGVmYXVsdFxuICAgICAgICogQHR5cGUge0Jvb2xlYW59XG4gICAgICAgKiBAZGVmYXVsdCBmYWxzZVxuICAgICAgICovXG4gICAgICBwcmV2ZW50RGVmYXVsdDogZmFsc2UsXG5cbiAgICAgIC8qKlxuICAgICAgICogZGlzYWJsZSBtb3VzZSBldmVudHMsIHNvIG9ubHkgdG91Y2ggKG9yIHBlbiEpIGlucHV0IHRyaWdnZXJzIGV2ZW50c1xuICAgICAgICogQHByb3BlcnR5IHByZXZlbnRNb3VzZVxuICAgICAgICogQHR5cGUge0Jvb2xlYW59XG4gICAgICAgKiBAZGVmYXVsdCBmYWxzZVxuICAgICAgICovXG4gICAgICBwcmV2ZW50TW91c2U6IGZhbHNlXG4gICAgfSxcbiAgICBoYW5kbGVyOiBmdW5jdGlvbiB0b3VjaEdlc3R1cmUoZXYsIGluc3QpIHtcbiAgICAgIGlmKGluc3Qub3B0aW9ucy5wcmV2ZW50TW91c2UgJiYgZXYucG9pbnRlclR5cGUgPT0gUE9JTlRFUl9NT1VTRSkge1xuICAgICAgICBldi5zdG9wRGV0ZWN0KCk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgaWYoaW5zdC5vcHRpb25zLnByZXZlbnREZWZhdWx0KSB7XG4gICAgICAgIGV2LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICB9XG5cbiAgICAgIGlmKGV2LmV2ZW50VHlwZSA9PSBFVkVOVF9UT1VDSCkge1xuICAgICAgICBpbnN0LnRyaWdnZXIoJ3RvdWNoJywgZXYpO1xuICAgICAgfVxuICAgIH1cbiAgfTtcblxuICAvKipcbiAgICogQG1vZHVsZSBnZXN0dXJlc1xuICAgKi9cbiAgLyoqXG4gICAqIFVzZXIgd2FudCB0byBzY2FsZSBvciByb3RhdGUgd2l0aCAyIGZpbmdlcnNcbiAgICogUHJldmVudGluZyB0aGUgZGVmYXVsdCBicm93c2VyIGJlaGF2aW9yIGlzIGEgZ29vZCB3YXkgdG8gaW1wcm92ZSBmZWVsIGFuZCB3b3JraW5nLiBUaGlzIGNhbiBiZSBkb25lIHdpdGggdGhlXG4gICAqIGBwcmV2ZW50RGVmYXVsdGAgb3B0aW9uLlxuICAgKlxuICAgKiBAY2xhc3MgVHJhbnNmb3JtXG4gICAqIEBzdGF0aWNcbiAgICovXG4gIC8qKlxuICAgKiBAZXZlbnQgdHJhbnNmb3JtXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBldlxuICAgKi9cbiAgLyoqXG4gICAqIEBldmVudCB0cmFuc2Zvcm1zdGFydFxuICAgKiBAcGFyYW0ge09iamVjdH0gZXZcbiAgICovXG4gIC8qKlxuICAgKiBAZXZlbnQgdHJhbnNmb3JtZW5kXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBldlxuICAgKi9cbiAgLyoqXG4gICAqIEBldmVudCBwaW5jaGluXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBldlxuICAgKi9cbiAgLyoqXG4gICAqIEBldmVudCBwaW5jaG91dFxuICAgKiBAcGFyYW0ge09iamVjdH0gZXZcbiAgICovXG4gIC8qKlxuICAgKiBAZXZlbnQgcm90YXRlXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBldlxuICAgKi9cblxuICAvKipcbiAgICogQHBhcmFtIHtTdHJpbmd9IG5hbWVcbiAgICovXG4gIChmdW5jdGlvbihuYW1lKSB7XG4gICAgdmFyIHRyaWdnZXJlZCA9IGZhbHNlO1xuXG4gICAgZnVuY3Rpb24gdHJhbnNmb3JtR2VzdHVyZShldiwgaW5zdCkge1xuICAgICAgc3dpdGNoKGV2LmV2ZW50VHlwZSkge1xuICAgICAgY2FzZSBFVkVOVF9TVEFSVDpcbiAgICAgICAgdHJpZ2dlcmVkID0gZmFsc2U7XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBjYXNlIEVWRU5UX01PVkU6XG4gICAgICAgIC8vIGF0IGxlYXN0IG11bHRpdG91Y2hcbiAgICAgICAgaWYoZXYudG91Y2hlcy5sZW5ndGggPCAyKSB7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgdmFyIHNjYWxlVGhyZXNob2xkID0gTWF0aC5hYnMoMSAtIGV2LnNjYWxlKTtcbiAgICAgICAgdmFyIHJvdGF0aW9uVGhyZXNob2xkID0gTWF0aC5hYnMoZXYucm90YXRpb24pO1xuXG4gICAgICAgIC8vIHdoZW4gdGhlIGRpc3RhbmNlIHdlIG1vdmVkIGlzIHRvbyBzbWFsbCB3ZSBza2lwIHRoaXMgZ2VzdHVyZVxuICAgICAgICAvLyBvciB3ZSBjYW4gYmUgYWxyZWFkeSBpbiBkcmFnZ2luZ1xuICAgICAgICBpZihzY2FsZVRocmVzaG9sZCA8IGluc3Qub3B0aW9ucy50cmFuc2Zvcm1NaW5TY2FsZSAmJlxuICAgICAgICAgIHJvdGF0aW9uVGhyZXNob2xkIDwgaW5zdC5vcHRpb25zLnRyYW5zZm9ybU1pblJvdGF0aW9uKSB7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gd2UgYXJlIHRyYW5zZm9ybWluZyFcbiAgICAgICAgRGV0ZWN0aW9uLmN1cnJlbnQubmFtZSA9IG5hbWU7XG5cbiAgICAgICAgLy8gZmlyc3QgdGltZSwgdHJpZ2dlciBkcmFnc3RhcnQgZXZlbnRcbiAgICAgICAgaWYoIXRyaWdnZXJlZCkge1xuICAgICAgICAgIGluc3QudHJpZ2dlcihuYW1lICsgJ3N0YXJ0JywgZXYpO1xuICAgICAgICAgIHRyaWdnZXJlZCA9IHRydWU7XG4gICAgICAgIH1cblxuICAgICAgICBpbnN0LnRyaWdnZXIobmFtZSwgZXYpOyAvLyBiYXNpYyB0cmFuc2Zvcm0gZXZlbnRcblxuICAgICAgICAvLyB0cmlnZ2VyIHJvdGF0ZSBldmVudFxuICAgICAgICBpZihyb3RhdGlvblRocmVzaG9sZCA+IGluc3Qub3B0aW9ucy50cmFuc2Zvcm1NaW5Sb3RhdGlvbikge1xuICAgICAgICAgIGluc3QudHJpZ2dlcigncm90YXRlJywgZXYpO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gdHJpZ2dlciBwaW5jaCBldmVudFxuICAgICAgICBpZihzY2FsZVRocmVzaG9sZCA+IGluc3Qub3B0aW9ucy50cmFuc2Zvcm1NaW5TY2FsZSkge1xuICAgICAgICAgIGluc3QudHJpZ2dlcigncGluY2gnLCBldik7XG4gICAgICAgICAgaW5zdC50cmlnZ2VyKCdwaW5jaCcgKyAoZXYuc2NhbGUgPCAxID8gJ2luJyA6ICdvdXQnKSwgZXYpO1xuICAgICAgICB9XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBjYXNlIEVWRU5UX1JFTEVBU0U6XG4gICAgICAgIGlmKHRyaWdnZXJlZCAmJiBldi5jaGFuZ2VkTGVuZ3RoIDwgMikge1xuICAgICAgICAgIGluc3QudHJpZ2dlcihuYW1lICsgJ2VuZCcsIGV2KTtcbiAgICAgICAgICB0cmlnZ2VyZWQgPSBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICB9XG5cbiAgICBHZXN0dXJlRGV0ZWN0b3IuZ2VzdHVyZXMuVHJhbnNmb3JtID0ge1xuICAgICAgbmFtZTogbmFtZSxcbiAgICAgIGluZGV4OiA0NSxcbiAgICAgIGRlZmF1bHRzOiB7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBtaW5pbWFsIHNjYWxlIGZhY3Rvciwgbm8gc2NhbGUgaXMgMSwgem9vbWluIGlzIHRvIDAgYW5kIHpvb21vdXQgdW50aWwgaGlnaGVyIHRoZW4gMVxuICAgICAgICAgKiBAcHJvcGVydHkgdHJhbnNmb3JtTWluU2NhbGVcbiAgICAgICAgICogQHR5cGUge051bWJlcn1cbiAgICAgICAgICogQGRlZmF1bHQgMC4wMVxuICAgICAgICAgKi9cbiAgICAgICAgdHJhbnNmb3JtTWluU2NhbGU6IDAuMDEsXG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIHJvdGF0aW9uIGluIGRlZ3JlZXNcbiAgICAgICAgICogQHByb3BlcnR5IHRyYW5zZm9ybU1pblJvdGF0aW9uXG4gICAgICAgICAqIEB0eXBlIHtOdW1iZXJ9XG4gICAgICAgICAqIEBkZWZhdWx0IDFcbiAgICAgICAgICovXG4gICAgICAgIHRyYW5zZm9ybU1pblJvdGF0aW9uOiAxXG4gICAgICB9LFxuXG4gICAgICBoYW5kbGVyOiB0cmFuc2Zvcm1HZXN0dXJlXG4gICAgfTtcbiAgfSkoJ3RyYW5zZm9ybScpO1xuXG5leHBvcnQgZGVmYXVsdCBHZXN0dXJlRGV0ZWN0b3I7XG4iLCIvKlxuQ29weXJpZ2h0IDIwMTMtMjAxNSBBU0lBTCBDT1JQT1JBVElPTlxuXG5MaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xueW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG5cbiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuXG5Vbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG5kaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG5XSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cblNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbmxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuXG4qL1xuY29uc3QgcmVhZHlNYXAgPSBuZXcgV2Vha01hcCgpO1xuY29uc3QgcXVldWVNYXAgPSBuZXcgV2Vha01hcCgpO1xuXG5mdW5jdGlvbiBpc0NvbnRlbnRSZWFkeShlbGVtZW50KSB7XG4gIGlmIChlbGVtZW50LmNoaWxkTm9kZXMubGVuZ3RoID4gMCkge1xuICAgIHNldENvbnRlbnRSZWFkeShlbGVtZW50KTtcbiAgfVxuICByZXR1cm4gcmVhZHlNYXAuaGFzKGVsZW1lbnQpO1xufVxuXG5mdW5jdGlvbiBzZXRDb250ZW50UmVhZHkoZWxlbWVudCkge1xuICByZWFkeU1hcC5zZXQoZWxlbWVudCwgdHJ1ZSk7XG59XG5cbmZ1bmN0aW9uIGFkZENhbGxiYWNrKGVsZW1lbnQsIGZuKSB7XG4gIGlmICghcXVldWVNYXAuaGFzKGVsZW1lbnQpKSB7XG4gICAgcXVldWVNYXAuc2V0KGVsZW1lbnQsIFtdKTtcbiAgfVxuICBxdWV1ZU1hcC5nZXQoZWxlbWVudCkucHVzaChmbik7XG59XG5cbmZ1bmN0aW9uIGNvbnN1bWVRdWV1ZShlbGVtZW50KSB7XG4gIGNvbnN0IGNhbGxiYWNrcyA9IHF1ZXVlTWFwLmdldChlbGVtZW50LCBbXSkgfHwgW107XG4gIHF1ZXVlTWFwLmRlbGV0ZShlbGVtZW50KTtcbiAgY2FsbGJhY2tzLmZvckVhY2goY2FsbGJhY2sgPT4gY2FsbGJhY2soKSk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGNvbnRlbnRSZWFkeShlbGVtZW50LCBmbiA9ICgpID0+IHt9KSB7XG4gIGFkZENhbGxiYWNrKGVsZW1lbnQsIGZuKTtcblxuICBpZiAoaXNDb250ZW50UmVhZHkoZWxlbWVudCkpIHtcbiAgICBjb25zdW1lUXVldWUoZWxlbWVudCk7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgY29uc3Qgb2JzZXJ2ZXIgPSBuZXcgTXV0YXRpb25PYnNlcnZlcihjaGFuZ2VzID0+IHtcbiAgICBzZXRDb250ZW50UmVhZHkoZWxlbWVudCk7XG4gICAgY29uc3VtZVF1ZXVlKGVsZW1lbnQpO1xuICB9KTtcbiAgb2JzZXJ2ZXIub2JzZXJ2ZShlbGVtZW50LCB7Y2hpbGRMaXN0OiB0cnVlLCBjaGFyYWN0ZXJEYXRhOiB0cnVlfSk7XG5cbiAgLy8gZmFpbGJhY2sgZm9yIGVsZW1lbnRzIGhhcyBlbXB0eSBjb250ZW50LlxuICBzZXRJbW1lZGlhdGUoKCkgPT4ge1xuICAgIHNldENvbnRlbnRSZWFkeShlbGVtZW50KTtcbiAgICBjb25zdW1lUXVldWUoZWxlbWVudCk7XG4gIH0pO1xufVxuIiwiLypcbkNvcHlyaWdodCAyMDEzLTIwMTUgQVNJQUwgQ09SUE9SQVRJT05cblxuTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbnlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbllvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuXG4gICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcblxuVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG5TZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG5saW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cblxuKi9cblxuaW1wb3J0IHV0aWwgZnJvbSAnLi91dGlsJztcbmltcG9ydCBjb250ZW50UmVhZHkgZnJvbSAnLi9jb250ZW50LXJlYWR5JztcblxuLyoqXG4gKiBAb2JqZWN0IG9ucy5ub3RpZmljYXRpb25cbiAqIEBjYXRlZ29yeSBkaWFsb2dcbiAqIEB0dXRvcmlhbCB2YW5pbGxhL1JlZmVyZW5jZS9kaWFsb2dcbiAqIEBkZXNjcmlwdGlvblxuICogICBbZW5dXG4gKiAgICAgVXRpbGl0eSBtZXRob2RzIHRvIGNyZWF0ZSBkaWZmZXJlbnQga2luZHMgb2YgYWxlcnQgZGlhbG9ncy4gVGhlcmUgYXJlIHRocmVlIG1ldGhvZHMgYXZhaWxhYmxlOlxuICpcbiAqICAgICAqIGBvbnMubm90aWZpY2F0aW9uLmFsZXJ0KClgXG4gKiAgICAgKiBgb25zLm5vdGlmaWNhdGlvbi5jb25maXJtKClgXG4gKiAgICAgKiBgb25zLm5vdGlmaWNhdGlvbi5wcm9tcHQoKWBcbiAqXG4gKiAgICAgSXQgd2lsbCBhdXRvbWF0aWNhbGx5IGRpc3BsYXkgYSBNYXRlcmlhbCBEZXNpZ24gZGlhbG9nIG9uIEFuZHJvaWQgZGV2aWNlcy5cbiAqICAgWy9lbl1cbiAqICAgW2phXeOBhOOBj+OBpOOBi+OBrueorumhnuOBruOCouODqeODvOODiOODgOOCpOOCouODreOCsOOCkuS9nOaIkOOBmeOCi+OBn+OCgeOBruODpuODvOODhuOCo+ODquODhuOCo+ODoeOCveODg+ODieOCkuWPjuOCgeOBn+OCquODluOCuOOCp+OCr+ODiOOBp+OBmeOAglsvamFdXG4gKiBAZXhhbXBsZVxuICogb25zLm5vdGlmaWNhdGlvbi5hbGVydCgnSGVsbG8sIHdvcmxkIScpO1xuICpcbiAqIG9ucy5ub3RpZmljYXRpb24uY29uZmlybSgnQXJlIHlvdSByZWFkeT8nKVxuICogICAudGhlbihcbiAqICAgICBmdW5jdGlvbihhbnN3ZXIpIHtcbiAqICAgICAgIGlmIChhbnN3ZXIgPT09IDEpIHtcbiAqICAgICAgICAgb25zLm5vdGlmaWNhdGlvbi5hbGVydCgnTGV0XFwncyBnbyEnKTtcbiAqICAgICAgIH1cbiAqICAgICB9XG4gKiAgICk7XG4gKlxuICogb25zLm5vdGlmaWNhdGlvbi5wcm9tcHQoJ0hvdyBvbGQgYXJlID8nKVxuICogICAudGhlbihcbiAqICAgICBmdW5jdGlvbihhZ2UpIHtcbiAqICAgICAgIG9ucy5ub3RpZmljYXRpb24uYWxlcnQoJ1lvdSBhcmUgJyArIGFnZSArICcgeWVhcnMgb2xkLicpO1xuICogICAgIH1cbiAqICAgKTtcbiAqL1xuY29uc3Qgbm90aWZpY2F0aW9uID0ge307XG5cbm5vdGlmaWNhdGlvbi5fY3JlYXRlQWxlcnREaWFsb2cgPSBvcHRpb25zID0+IHtcbiAgLy8gUHJvbXB0IGlucHV0IHN0cmluZ1xuICBsZXQgaW5wdXRTdHJpbmcgPSAnJztcbiAgaWYgKG9wdGlvbnMuaXNQcm9tcHQpIHtcbiAgICBpbnB1dFN0cmluZyA9IGBcbiAgICAgIDxpbnB1dFxuICAgICAgICBjbGFzcz1cInRleHQtaW5wdXQgdGV4dC1pbnB1dC0tdW5kZXJiYXJcIlxuICAgICAgICB0eXBlPVwiJHtvcHRpb25zLmlucHV0VHlwZSB8fCAndGV4dCd9XCJcbiAgICAgICAgcGxhY2Vob2xkZXI9XCIke29wdGlvbnMucGxhY2Vob2xkZXIgfHwgJyd9XCJcbiAgICAgICAgdmFsdWU9XCIke29wdGlvbnMuZGVmYXVsdFZhbHVlIHx8ICcnfVwiXG4gICAgICAgIHN0eWxlPVwid2lkdGg6IDEwMCU7IG1hcmdpbi10b3A6IDEwcHg7XCJcbiAgICAgIC8+XG4gICAgYDtcbiAgfVxuXG4gIC8vIEJ1dHRvbnMgc3RyaW5nXG4gIGxldCBidXR0b25zID0gJyc7XG4gIG9wdGlvbnMuYnV0dG9uTGFiZWxzLmZvckVhY2goKGxhYmVsLCBpbmRleCkgPT4ge1xuICAgIGJ1dHRvbnMgKz0gYFxuICAgICAgPGJ1dHRvbiBjbGFzcz1cIlxuICAgICAgICBhbGVydC1kaWFsb2ctYnV0dG9uXG4gICAgICAgICR7aW5kZXggPT09IG9wdGlvbnMucHJpbWFyeUJ1dHRvbkluZGV4ID8gJyBhbGVydC1kaWFsb2ctYnV0dG9uLS1wcmltYWwnIDogJyd9XG4gICAgICAgICR7b3B0aW9ucy5idXR0b25MYWJlbHMubGVuZ3RoIDw9IDIgPyAnIGFsZXJ0LWRpYWxvZy1idXR0b24tLXJvd2Zvb3RlcicgOiAnJ31cbiAgICAgIFwiPlxuICAgICAgICAke2xhYmVsfVxuICAgICAgPC9idXR0b24+XG4gICAgYDtcbiAgfSk7XG5cbiAgLy8gRGlhbG9nIEVsZW1lbnRcbiAgbGV0IGVsID0ge307XG4gIGNvbnN0IF9kZXN0cm95RGlhbG9nID0gKCkgPT4ge1xuICAgIGlmIChlbC5kaWFsb2cub25EaWFsb2dDYW5jZWwpIHtcbiAgICAgIGVsLmRpYWxvZy5yZW1vdmVFdmVudExpc3RlbmVyKCdkaWFsb2ctY2FuY2VsJywgZWwuZGlhbG9nLm9uRGlhbG9nQ2FuY2VsKTtcbiAgICB9XG5cbiAgICBPYmplY3Qua2V5cyhlbCkuZm9yRWFjaChrZXkgPT4gZGVsZXRlIGVsW2tleV0pO1xuICAgIGVsID0gbnVsbDtcblxuICAgIGlmIChvcHRpb25zLmRlc3Ryb3kgaW5zdGFuY2VvZiBGdW5jdGlvbikge1xuICAgICAgb3B0aW9ucy5kZXN0cm95KCk7XG4gICAgfVxuICB9O1xuXG4gIGVsLmRpYWxvZyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ29ucy1hbGVydC1kaWFsb2cnKTtcbiAgZWwuZGlhbG9nLmlubmVySFRNTCA9IGBcbiAgICA8ZGl2IGNsYXNzPVwiYWxlcnQtZGlhbG9nLW1hc2tcIj48L2Rpdj5cbiAgICA8ZGl2IGNsYXNzPVwiYWxlcnQtZGlhbG9nXCI+XG4gICAgICA8ZGl2IGNsYXNzPVwiYWxlcnQtZGlhbG9nLWNvbnRhaW5lclwiPlxuICAgICAgICA8ZGl2IGNsYXNzPVwiYWxlcnQtZGlhbG9nLXRpdGxlXCI+XG4gICAgICAgICAgJHtvcHRpb25zLnRpdGxlIHx8ICcnfVxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPGRpdiBjbGFzcz1cImFsZXJ0LWRpYWxvZy1jb250ZW50XCI+XG4gICAgICAgICAgJHtvcHRpb25zLm1lc3NhZ2UgfHwgb3B0aW9ucy5tZXNzYWdlSFRNTH1cbiAgICAgICAgICAke2lucHV0U3RyaW5nfVxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPGRpdiBjbGFzcz1cIlxuICAgICAgICAgIGFsZXJ0LWRpYWxvZy1mb290ZXJcbiAgICAgICAgICAke29wdGlvbnMuYnV0dG9uTGFiZWxzLmxlbmd0aCA8PSAyID8gJyBhbGVydC1kaWFsb2ctZm9vdGVyLS1yb3dmb290ZXInIDogJyd9XG4gICAgICAgIFwiPlxuICAgICAgICAgICR7YnV0dG9uc31cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cbiAgYDtcbiAgY29udGVudFJlYWR5KGVsLmRpYWxvZyk7XG5cbiAgLy8gU2V0IGF0dHJpYnV0ZXNcbiAgWydpZCcsICdjbGFzcycsICdhbmltYXRpb24nXVxuICAgIC5mb3JFYWNoKGEgPT4gb3B0aW9ucy5oYXNPd25Qcm9wZXJ0eShhKSAmJiBlbC5kaWFsb2cuc2V0QXR0cmlidXRlKGEsIG9wdGlvbnNbYV0pKTtcbiAgaWYgKG9wdGlvbnMubW9kaWZpZXIpIHtcbiAgICB1dGlsLmFkZE1vZGlmaWVyKGVsLmRpYWxvZywgb3B0aW9ucy5tb2RpZmllcik7XG4gIH1cblxuICBjb25zdCBkZWZlcnJlZCA9IHV0aWwuZGVmZXIoKTtcblxuICAvLyBQcm9tcHQgZXZlbnRzXG4gIGlmIChvcHRpb25zLmlzUHJvbXB0ICYmIG9wdGlvbnMuc3VibWl0T25FbnRlcikge1xuICAgIGVsLmlucHV0ID0gZWwuZGlhbG9nLnF1ZXJ5U2VsZWN0b3IoJy50ZXh0LWlucHV0Jyk7XG4gICAgZWwuaW5wdXQub25rZXlwcmVzcyA9IGV2ZW50ID0+IHtcbiAgICAgIGlmIChldmVudC5rZXlDb2RlID09PSAxMykge1xuICAgICAgICBlbC5kaWFsb2cuaGlkZSgpXG4gICAgICAgICAgLnRoZW4oKCkgPT4ge1xuICAgICAgICAgICAgaWYgKGVsKSB7XG4gICAgICAgICAgICAgIGNvbnN0IHJlc29sdmVWYWx1ZSA9IGVsLmlucHV0LnZhbHVlO1xuICAgICAgICAgICAgICBfZGVzdHJveURpYWxvZygpO1xuICAgICAgICAgICAgICBvcHRpb25zLmNhbGxiYWNrKHJlc29sdmVWYWx1ZSk7XG4gICAgICAgICAgICAgIGRlZmVycmVkLnJlc29sdmUocmVzb2x2ZVZhbHVlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9O1xuICB9XG5cbiAgLy8gQnV0dG9uIGV2ZW50c1xuICBlbC5mb290ZXIgPSBlbC5kaWFsb2cucXVlcnlTZWxlY3RvcignLmFsZXJ0LWRpYWxvZy1mb290ZXInKTtcbiAgdXRpbC5hcnJheUZyb20oZWwuZGlhbG9nLnF1ZXJ5U2VsZWN0b3JBbGwoJy5hbGVydC1kaWFsb2ctYnV0dG9uJykpLmZvckVhY2goKGJ1dHRvbkVsZW1lbnQsIGluZGV4KSA9PiB7XG4gICAgYnV0dG9uRWxlbWVudC5vbmNsaWNrID0gKCkgPT4ge1xuICAgICAgICBlbC5kaWFsb2cuaGlkZSgpXG4gICAgICAgICAgLnRoZW4oKCkgPT4ge1xuICAgICAgICAgICAgaWYgKGVsKSB7XG4gICAgICAgICAgICAgIGNvbnN0IHJlc29sdmVWYWx1ZSA9IG9wdGlvbnMuaXNQcm9tcHQgPyBlbC5pbnB1dC52YWx1ZSA6IGluZGV4O1xuICAgICAgICAgICAgICBlbC5kaWFsb2cucmVtb3ZlKCk7XG4gICAgICAgICAgICAgIF9kZXN0cm95RGlhbG9nKCk7XG4gICAgICAgICAgICAgIG9wdGlvbnMuY2FsbGJhY2socmVzb2x2ZVZhbHVlKTtcbiAgICAgICAgICAgICAgZGVmZXJyZWQucmVzb2x2ZShyZXNvbHZlVmFsdWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pO1xuICAgIH07XG5cbiAgICBlbC5mb290ZXIuYXBwZW5kQ2hpbGQoYnV0dG9uRWxlbWVudCk7XG4gIH0pO1xuXG4gIC8vIENhbmNlbCBldmVudHNcbiAgaWYgKG9wdGlvbnMuY2FuY2VsYWJsZSkge1xuICAgIGVsLmRpYWxvZy5jYW5jZWxhYmxlID0gdHJ1ZTtcbiAgICBlbC5kaWFsb2cub25EaWFsb2dDYW5jZWwgPSAoKSA9PiB7XG4gICAgICBzZXRJbW1lZGlhdGUoKCkgPT4ge1xuICAgICAgICBlbC5kaWFsb2cucmVtb3ZlKCk7XG4gICAgICAgIF9kZXN0cm95RGlhbG9nKCk7XG4gICAgICB9KTtcbiAgICAgIGNvbnN0IHJlc29sdmVWYWx1ZSA9IG9wdGlvbnMuaXNQcm9tcHQgPyBudWxsIDogLTE7XG4gICAgICBvcHRpb25zLmNhbGxiYWNrKHJlc29sdmVWYWx1ZSk7XG4gICAgICBkZWZlcnJlZC5yZWplY3QocmVzb2x2ZVZhbHVlKTtcbiAgICB9O1xuICAgIGVsLmRpYWxvZy5hZGRFdmVudExpc3RlbmVyKCdkaWFsb2ctY2FuY2VsJywgZWwuZGlhbG9nLm9uRGlhbG9nQ2FuY2VsLCBmYWxzZSk7XG4gIH1cblxuICAvLyBTaG93IGRpYWxvZ1xuICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGVsLmRpYWxvZyk7XG4gIG9wdGlvbnMuY29tcGlsZShlbC5kaWFsb2cpO1xuICBzZXRJbW1lZGlhdGUoKCkgPT4ge1xuICAgIGVsLmRpYWxvZy5zaG93KClcbiAgICAgIC50aGVuKCgpID0+IHtcbiAgICAgICAgaWYgKGVsLmlucHV0ICYmIG9wdGlvbnMuaXNQcm9tcHQgJiYgb3B0aW9ucy5hdXRvZm9jdXMpIHtcbiAgICAgICAgICBlbC5pbnB1dC5mb2N1cygpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgfSk7XG5cbiAgcmV0dXJuIGRlZmVycmVkLnByb21pc2U7XG59O1xuXG5jb25zdCBfbm9ybWFsaXplQXJndW1lbnRzID0gKG1lc3NhZ2UsIG9wdGlvbnMgPSB7fSwgZGVmYXVsdHMgPSB7fSkgPT4ge1xuICB0eXBlb2YgbWVzc2FnZSA9PT0gJ3N0cmluZycgPyAob3B0aW9ucy5tZXNzYWdlID0gbWVzc2FnZSkgOiAob3B0aW9ucyA9IG1lc3NhZ2UpO1xuICBpZiAoIW9wdGlvbnMubWVzc2FnZSAmJiAhb3B0aW9ucy5tZXNzYWdlSFRNTCkge1xuICAgIHRocm93IG5ldyBFcnJvcignQWxlcnQgZGlhbG9nIG11c3QgY29udGFpbiBhIG1lc3NhZ2UuJyk7XG4gIH1cblxuICBpZiAob3B0aW9ucy5oYXNPd25Qcm9wZXJ0eSgnYnV0dG9uTGFiZWxzJykgfHwgb3B0aW9ucy5oYXNPd25Qcm9wZXJ0eSgnYnV0dG9uTGFiZWwnKSkge1xuICAgIG9wdGlvbnMuYnV0dG9uTGFiZWxzID0gb3B0aW9ucy5idXR0b25MYWJlbHMgfHwgb3B0aW9ucy5idXR0b25MYWJlbDtcbiAgICBpZiAoIUFycmF5LmlzQXJyYXkob3B0aW9ucy5idXR0b25MYWJlbHMpKSB7XG4gICAgICBvcHRpb25zLmJ1dHRvbkxhYmVscyA9IFtvcHRpb25zLmJ1dHRvbkxhYmVscyB8fCAnJ11cbiAgICB9XG4gIH1cblxuICByZXR1cm4gdXRpbC5leHRlbmQoe1xuICAgICAgY29tcGlsZTogcGFyYW0gPT4gcGFyYW0sXG4gICAgICBjYWxsYmFjazogcGFyYW0gPT4gcGFyYW0sXG4gICAgICBidXR0b25MYWJlbHM6IFsnT0snXSxcbiAgICAgIHByaW1hcnlCdXR0b25JbmRleDogMCxcbiAgICAgIGFuaW1hdGlvbjogJ2RlZmF1bHQnLFxuICAgICAgY2FuY2VsYWJsZTogZmFsc2VcbiAgICB9LCBkZWZhdWx0cywgb3B0aW9ucyk7XG59O1xuXG4vKipcbiAqIEBtZXRob2QgYWxlcnRcbiAqIEBzaWduYXR1cmUgYWxlcnQobWVzc2FnZSBbLCBvcHRpb25zXSB8IG9wdGlvbnMpXG4gKiBAcmV0dXJuIHtQcm9taXNlfVxuICogICBbZW5dV2lsbCByZXNvbHZlIHdoZW4gdGhlIGRpYWxvZyBpcyBjbG9zZWQuWy9lbl1cbiAqICAgW2phXVsvamFdXG4gKiBAcGFyYW0ge1N0cmluZ30gbWVzc2FnZVxuICogICBbZW5dQWxlcnQgbWVzc2FnZS4gVGhpcyBhcmd1bWVudCBpcyBvcHRpb25hbCBidXQgaWYgaXQncyBub3QgZGVmaW5lZCBlaXRoZXIgYG9wdGlvbnMubWVzc2FnZWAgb3IgYG9wdGlvbnMubWVzc2FnZUhUTUxgIG11c3QgYmUgZGVmaW5lZCBpbnN0ZWFkLlsvZW5dXG4gKiAgIFtqYV1bL2phXVxuICogQHBhcmFtIHtPYmplY3R9IG9wdGlvbnNcbiAqICAgW2VuXVBhcmFtZXRlciBvYmplY3QuWy9lbl1cbiAqICAgW2phXeOCquODl+OCt+ODp+ODs+OCkuaMh+WumuOBmeOCi+OCquODluOCuOOCp+OCr+ODiOOBp+OBmeOAglsvamFdXG4gKiBAcGFyYW0ge1N0cmluZ30gW29wdGlvbnMubWVzc2FnZV1cbiAqICAgW2VuXUFsZXJ0IG1lc3NhZ2UuWy9lbl1cbiAqICAgW2phXeOCouODqeODvOODiOODgOOCpOOCouODreOCsOOBq+ihqOekuuOBmeOCi+aWh+Wtl+WIl+OCkuaMh+WumuOBl+OBvuOBmeOAglsvamFdXG4gKiBAcGFyYW0ge1N0cmluZ30gW29wdGlvbnMubWVzc2FnZUhUTUxdXG4gKiAgIFtlbl1BbGVydCBtZXNzYWdlIGluIEhUTUwuWy9lbl1cbiAqICAgW2phXeOCouODqeODvOODiOODgOOCpOOCouODreOCsOOBq+ihqOekuuOBmeOCi0hUTUzjgpLmjIflrprjgZfjgb7jgZnjgIJbL2phXVxuICogQHBhcmFtIHtTdHJpbmcgfCBBcnJheX0gW29wdGlvbnMuYnV0dG9uTGFiZWxzXVxuICogICBbZW5dTGFiZWxzIGZvciB0aGUgYnV0dG9ucy4gRGVmYXVsdCBpcyBgXCJPS1wiYC5bL2VuXVxuICogICBbamFd56K66KqN44Oc44K/44Oz44Gu44Op44OZ44Or44KS5oyH5a6a44GX44G+44GZ44CCXCJPS1wi44GM44OH44OV44Kp44Or44OI44Gn44GZ44CCWy9qYV1cbiAqIEBwYXJhbSB7TnVtYmVyfSBbb3B0aW9ucy5wcmltYXJ5QnV0dG9uSW5kZXhdXG4gKiAgIFtlbl1JbmRleCBvZiBwcmltYXJ5IGJ1dHRvbi4gRGVmYXVsdCBpcyBgMGAuWy9lbl1cbiAqICAgW2phXeODl+ODqeOCpOODnuODquODnOOCv+ODs+OBruOCpOODs+ODh+ODg+OCr+OCueOCkuaMh+WumuOBl+OBvuOBmeOAguODh+ODleOCqeODq+ODiOOBryAwIOOBp+OBmeOAglsvamFdXG4gKiBAcGFyYW0ge0Jvb2xlYW59IFtvcHRpb25zLmNhbmNlbGFibGVdXG4gKiAgIFtlbl1XaGV0aGVyIHRoZSBkaWFsb2cgaXMgY2FuY2VsYWJsZSBvciBub3QuIERlZmF1bHQgaXMgYGZhbHNlYC4gSWYgdGhlIGRpYWxvZyBpcyBjYW5jZWxhYmxlIGl0IGNhbiBiZSBjbG9zZWQgYnkgY2xpY2tpbmcgdGhlIGJhY2tncm91bmQgb3IgcHJlc3NpbmcgdGhlIEFuZHJvaWQgYmFjayBidXR0b24uWy9lbl1cbiAqICAgW2phXeODgOOCpOOCouODreOCsOOBjOOCreODo+ODs+OCu+ODq+WPr+iDveOBi+OBqeOBhuOBi+OCkuaMh+WumuOBl+OBvuOBmeOAglsvamFdXG4gKiBAcGFyYW0ge1N0cmluZ30gW29wdGlvbnMuYW5pbWF0aW9uXVxuICogICBbZW5dQW5pbWF0aW9uIG5hbWUuIEF2YWlsYWJsZSBhbmltYXRpb25zIGFyZSBgbm9uZWAgYW5kIGBmYWRlYC4gRGVmYXVsdCBpcyBgZmFkZWAuWy9lbl1cbiAqICAgW2phXeOCouODqeODvOODiOODgOOCpOOCouODreOCsOOCkuihqOekuuOBmeOCi+mam+OBruOCouODi+ODoeODvOOCt+ODp+ODs+WQjeOCkuaMh+WumuOBl+OBvuOBmeOAglwibm9uZVwiLCBcImZhZGVcIuOBruOBhOOBmuOCjOOBi+OCkuaMh+WumuOBp+OBjeOBvuOBmeOAglsvamFdXG4gKiBAcGFyYW0ge1N0cmluZ30gW29wdGlvbnMuaWRdXG4gKiAgIFtlbl1UaGUgYDxvbnMtYWxlcnQtZGlhbG9nPmAgZWxlbWVudCdzIElELlsvZW5dXG4gKiAgIFtqYV1vbnMtYWxlcnQtZGlhbG9n6KaB57Sg44GuSUTjgIJbL2phXVxuICogQHBhcmFtIHtTdHJpbmd9IFtvcHRpb25zLmNsYXNzXVxuICogICBbZW5dVGhlIGA8b25zLWFsZXJ0LWRpYWxvZz5gIGVsZW1lbnQncyBjbGFzcy5bL2VuXVxuICogICBbamFdb25zLWFsZXJ0LWRpYWxvZ+imgee0oOOBrmNsYXNz44CCWy9qYV1cbiAqIEBwYXJhbSB7U3RyaW5nfSBbb3B0aW9ucy50aXRsZV1cbiAqICAgW2VuXURpYWxvZyB0aXRsZS4gRGVmYXVsdCBpcyBgXCJBbGVydFwiYC5bL2VuXVxuICogICBbamFd44Ki44Op44O844OI44OA44Kk44Ki44Ot44Kw44Gu5LiK6YOo44Gr6KGo56S644GZ44KL44K/44Kk44OI44Or44KS5oyH5a6a44GX44G+44GZ44CCXCJBbGVydFwi44GM44OH44OV44Kp44Or44OI44Gn44GZ44CCWy9qYV1cbiAqIEBwYXJhbSB7U3RyaW5nfSBbb3B0aW9ucy5tb2RpZmllcl1cbiAqICAgW2VuXU1vZGlmaWVyIGZvciB0aGUgZGlhbG9nLlsvZW5dXG4gKiAgIFtqYV3jgqLjg6njg7zjg4jjg4DjgqTjgqLjg63jgrDjga5tb2RpZmllcuWxnuaAp+OBruWApOOCkuaMh+WumuOBl+OBvuOBmeOAglsvamFdXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBbb3B0aW9ucy5jYWxsYmFja11cbiAqICAgW2VuXUZ1bmN0aW9uIHRoYXQgZXhlY3V0ZXMgYWZ0ZXIgZGlhbG9nIGhhcyBiZWVuIGNsb3NlZC5bL2VuXVxuICogICBbamFd44Ki44Op44O844OI44OA44Kk44Ki44Ot44Kw44GM6ZaJ44GY44KJ44KM44Gf5pmC44Gr5ZG844Gz5Ye644GV44KM44KL6Zai5pWw44Kq44OW44K444Kn44Kv44OI44KS5oyH5a6a44GX44G+44GZ44CCWy9qYV1cbiAqIEBkZXNjcmlwdGlvblxuICogICBbZW5dXG4gKiAgICAgRGlzcGxheSBhbiBhbGVydCBkaWFsb2cgdG8gc2hvdyB0aGUgdXNlciBhIG1lc3NhZ2UuXG4gKlxuICogICAgIFRoZSBjb250ZW50IG9mIHRoZSBtZXNzYWdlIGNhbiBiZSBlaXRoZXIgc2ltcGxlIHRleHQgb3IgSFRNTC5cbiAqXG4gKiAgICAgSXQgY2FuIGJlIGNhbGxlZCBpbiB0aGUgZm9sbG93aW5nIHdheXM6XG4gKlxuICogICAgIGBgYFxuICogICAgIG9ucy5ub3RpZmljYXRpb24uYWxlcnQobWVzc2FnZSwgb3B0aW9ucyk7XG4gKiAgICAgb25zLm5vdGlmaWNhdGlvbi5hbGVydChvcHRpb25zKTtcbiAqICAgICBgYGBcbiAqXG4gKiAgICAgTXVzdCBzcGVjaWZ5IGVpdGhlciBgbWVzc2FnZWAgb3IgYG1lc3NhZ2VIVE1MYC5cbiAqICAgWy9lbl1cbiAqICAgW2phXVxuICogICAgIOODpuODvOOCtuODvOOBuOODoeODg+OCu+ODvOOCuOOCkuimi+OBm+OCi+OBn+OCgeOBruOCouODqeODvOODiOODgOOCpOOCouODreOCsOOCkuihqOekuuOBl+OBvuOBmeOAglxuICogICAgIOihqOekuuOBmeOCi+ODoeODg+OCu+ODvOOCuOOBr+OAgeODhuOCreOCueODiOOBi+OCguOBl+OBj+OBr0hUTUzjgpLmjIflrprjgafjgY3jgb7jgZnjgIJcbiAqICAgICDjgZPjga7jg6Hjgr3jg4Pjg4njga7lvJXmlbDjgavjga/jgIFvcHRpb25zLm1lc3NhZ2XjgoLjgZfjgY/jga9vcHRpb25zLm1lc3NhZ2VIVE1M44Gu44Gp44Gh44KJ44GL44KS5b+F44Ga5oyH5a6a44GZ44KL5b+F6KaB44GM44GC44KK44G+44GZ44CCXG4gKiAgIFsvamFdXG4gKi9cbm5vdGlmaWNhdGlvbi5hbGVydCA9IChtZXNzYWdlLCBvcHRpb25zKSA9PiB7XG4gIG9wdGlvbnMgPSBfbm9ybWFsaXplQXJndW1lbnRzKG1lc3NhZ2UsIG9wdGlvbnMsIHtcbiAgICB0aXRsZTogJ0FsZXJ0J1xuICB9KTtcblxuICByZXR1cm4gbm90aWZpY2F0aW9uLl9jcmVhdGVBbGVydERpYWxvZyhvcHRpb25zKTtcbn07XG5cbi8qKlxuICogQG1ldGhvZCBjb25maXJtXG4gKiBAc2lnbmF0dXJlIGNvbmZpcm0obWVzc2FnZSBbLCBvcHRpb25zXSB8IG9wdGlvbnMpXG4gKiBAcmV0dXJuIHtQcm9taXNlfVxuICogICBbZW5dV2lsbCByZXNvbHZlIHRvIHRoZSBpbmRleCBvZiB0aGUgYnV0dG9uIHRoYXQgd2FzIHByZXNzZWQuWy9lbl1cbiAqICAgW2phXVsvamFdXG4gKiBAcGFyYW0ge1N0cmluZ30gbWVzc2FnZVxuICogICBbZW5dQWxlcnQgbWVzc2FnZS4gVGhpcyBhcmd1bWVudCBpcyBvcHRpb25hbCBidXQgaWYgaXQncyBub3QgZGVmaW5lZCBlaXRoZXIgYG9wdGlvbnMubWVzc2FnZWAgb3IgYG9wdGlvbnMubWVzc2FnZUhUTUxgIG11c3QgYmUgZGVmaW5lZCBpbnN0ZWFkLlsvZW5dXG4gKiAgIFtqYV1bL2phXVxuICogQHBhcmFtIHtPYmplY3R9IG9wdGlvbnNcbiAqICAgW2VuXVBhcmFtZXRlciBvYmplY3QuWy9lbl1cbiAqIEBwYXJhbSB7QXJyYXl9IFtvcHRpb25zLmJ1dHRvbkxhYmVsc11cbiAqICAgW2VuXUxhYmVscyBmb3IgdGhlIGJ1dHRvbnMuIERlZmF1bHQgaXMgYFtcIkNhbmNlbFwiLCBcIk9LXCJdYC5bL2VuXVxuICogICBbamFd44Oc44K/44Oz44Gu44Op44OZ44Or44Gu6YWN5YiX44KS5oyH5a6a44GX44G+44GZ44CCW1wiQ2FuY2VsXCIsIFwiT0tcIl3jgYzjg4fjg5Xjgqnjg6vjg4jjgafjgZnjgIJbL2phXVxuICogQHBhcmFtIHtOdW1iZXJ9IFtvcHRpb25zLnByaW1hcnlCdXR0b25JbmRleF1cbiAqICAgW2VuXUluZGV4IG9mIHByaW1hcnkgYnV0dG9uLiBEZWZhdWx0IGlzIGAxYC5bL2VuXVxuICogICBbamFd44OX44Op44Kk44Oe44Oq44Oc44K/44Oz44Gu44Kk44Oz44OH44OD44Kv44K544KS5oyH5a6a44GX44G+44GZ44CC44OH44OV44Kp44Or44OI44GvIDEg44Gn44GZ44CCWy9qYV1cbiAqIEBkZXNjcmlwdGlvblxuICogICBbZW5dXG4gKiAgICAgRGlzcGxheSBhIGRpYWxvZyB0byBhc2sgdGhlIHVzZXIgZm9yIGNvbmZpcm1hdGlvbi4gRXh0ZW5kcyBgYWxlcnQoKWAgcGFyYW1ldGVycy5cbiAqICAgICBUaGUgZGVmYXVsdCBidXR0b24gbGFiZWxzIGFyZSBgXCJDYW5jZWxcImAgYW5kIGBcIk9LXCJgIGJ1dCB0aGV5IGNhbiBiZSBjdXN0b21pemVkLlxuICpcbiAqICAgICBJdCBjYW4gYmUgY2FsbGVkIGluIHRoZSBmb2xsb3dpbmcgd2F5czpcbiAqXG4gKiAgICAgYGBgXG4gKiAgICAgb25zLm5vdGlmaWNhdGlvbi5jb25maXJtKG1lc3NhZ2UsIG9wdGlvbnMpO1xuICogICAgIG9ucy5ub3RpZmljYXRpb24uY29uZmlybShvcHRpb25zKTtcbiAqICAgICBgYGBcbiAqXG4gKiAgICAgTXVzdCBzcGVjaWZ5IGVpdGhlciBgbWVzc2FnZWAgb3IgYG1lc3NhZ2VIVE1MYC5cbiAqICAgWy9lbl1cbiAqICAgW2phXVxuICogICAgIOODpuODvOOCtuOBq+eiuuiqjeOCkuS/g+OBmeODgOOCpOOCouODreOCsOOCkuihqOekuuOBl+OBvuOBmeOAglxuICogICAgIOODh+OCquODq+OBqOOBruODnOOCv+ODs+ODqeODmeODq+OBr+OAgVwiQ2FuY2VsXCLjgahcIk9LXCLjgafjgZnjgYzjgIHjgZPjgozjga/jgZPjga7jg6Hjgr3jg4Pjg4njga7lvJXmlbDjgafjgqvjgrnjgr/jg57jgqTjgrrjgafjgY3jgb7jgZnjgIJcbiAqICAgICDjgZPjga7jg6Hjgr3jg4Pjg4njga7lvJXmlbDjgavjga/jgIFvcHRpb25zLm1lc3NhZ2XjgoLjgZfjgY/jga9vcHRpb25zLm1lc3NhZ2VIVE1M44Gu44Gp44Gh44KJ44GL44KS5b+F44Ga5oyH5a6a44GZ44KL5b+F6KaB44GM44GC44KK44G+44GZ44CCXG4gKiAgIFsvamFdXG4gKi9cbm5vdGlmaWNhdGlvbi5jb25maXJtID0gKG1lc3NhZ2UsIG9wdGlvbnMpID0+IHtcbiAgb3B0aW9ucyA9IF9ub3JtYWxpemVBcmd1bWVudHMobWVzc2FnZSwgb3B0aW9ucywge1xuICAgIGJ1dHRvbkxhYmVsczogWydDYW5jZWwnLCAnT0snXSxcbiAgICBwcmltYXJ5QnV0dG9uSW5kZXg6IDEsXG4gICAgdGl0bGU6ICdDb25maXJtJ1xuICB9KTtcblxuICByZXR1cm4gbm90aWZpY2F0aW9uLl9jcmVhdGVBbGVydERpYWxvZyhvcHRpb25zKTtcbn07XG5cbi8qKlxuICogQG1ldGhvZCBwcm9tcHRcbiAqIEBzaWduYXR1cmUgcHJvbXB0KG1lc3NhZ2UgWywgb3B0aW9uc10gfCBvcHRpb25zKVxuICogQHBhcmFtIHtTdHJpbmd9IG1lc3NhZ2VcbiAqICAgW2VuXUFsZXJ0IG1lc3NhZ2UuIFRoaXMgYXJndW1lbnQgaXMgb3B0aW9uYWwgYnV0IGlmIGl0J3Mgbm90IGRlZmluZWQgZWl0aGVyIGBvcHRpb25zLm1lc3NhZ2VgIG9yIGBvcHRpb25zLm1lc3NhZ2VIVE1MYCBtdXN0IGJlIGRlZmluZWQgaW5zdGVhZC5bL2VuXVxuICogICBbamFdWy9qYV1cbiAqIEByZXR1cm4ge1Byb21pc2V9XG4gKiAgIFtlbl1XaWxsIHJlc29sdmUgdG8gdGhlIGlucHV0IHZhbHVlIHdoZW4gdGhlIGRpYWxvZyBpcyBjbG9zZWQuWy9lbl1cbiAqICAgW2phXVsvamFdXG4gKiBAcGFyYW0ge09iamVjdH0gb3B0aW9uc1xuICogICBbZW5dUGFyYW1ldGVyIG9iamVjdC5bL2VuXVxuICogICBbamFd44Kq44OX44K344On44Oz44KS5oyH5a6a44GZ44KL44Kq44OW44K444Kn44Kv44OI44Gn44GZ44CCWy9qYV1cbiAqIEBwYXJhbSB7U3RyaW5nIHwgQXJyYXl9IFtvcHRpb25zLmJ1dHRvbkxhYmVsc11cbiAqICAgW2VuXUxhYmVscyBmb3IgdGhlIGJ1dHRvbnMuIERlZmF1bHQgaXMgYFwiT0tcImAuWy9lbl1cbiAqICAgW2phXeeiuuiqjeODnOOCv+ODs+OBruODqeODmeODq+OCkuaMh+WumuOBl+OBvuOBmeOAglwiT0tcIuOBjOODh+ODleOCqeODq+ODiOOBp+OBmeOAglsvamFdXG4gKiBAcGFyYW0ge051bWJlcn0gW29wdGlvbnMucHJpbWFyeUJ1dHRvbkluZGV4XVxuICogICBbZW5dSW5kZXggb2YgcHJpbWFyeSBidXR0b24uIERlZmF1bHQgaXMgYDBgLlsvZW5dXG4gKiAgIFtqYV3jg5fjg6njgqTjg57jg6rjg5zjgr/jg7Pjga7jgqTjg7Pjg4fjg4Pjgq/jgrnjgpLmjIflrprjgZfjgb7jgZnjgILjg4fjg5Xjgqnjg6vjg4jjga8gMCDjgafjgZnjgIJbL2phXVxuICogQHBhcmFtIHtTdHJpbmd9IFtvcHRpb25zLnBsYWNlaG9sZGVyXVxuICogICBbZW5dUGxhY2Vob2xkZXIgZm9yIHRoZSB0ZXh0IGlucHV0LlsvZW5dXG4gKiAgIFtqYV3jg4bjgq3jgrnjg4jmrITjga7jg5fjg6zjg7zjgrnjg5vjg6vjg4DjgavooajnpLrjgZnjgovjg4bjgq3jgrnjg4jjgpLmjIflrprjgZfjgb7jgZnjgIJbL2phXVxuICogQHBhcmFtIHtTdHJpbmd9IFtvcHRpb25zLmRlZmF1bHRWYWx1ZV1cbiAqICAgW2VuXURlZmF1bHQgdmFsdWUgZm9yIHRoZSB0ZXh0IGlucHV0LlsvZW5dXG4gKiAgIFtqYV3jg4bjgq3jgrnjg4jmrITjga7jg4fjg5Xjgqnjg6vjg4jjga7lgKTjgpLmjIflrprjgZfjgb7jgZnjgIJbL2phXVxuICogQHBhcmFtIHtTdHJpbmd9IFtvcHRpb25zLmlucHV0VHlwZV1cbiAqICAgW2VuXVR5cGUgb2YgdGhlIGlucHV0IGVsZW1lbnQgKGBwYXNzd29yZGAsIGBkYXRlYC4uLikuIERlZmF1bHQgaXMgYHRleHRgLlsvZW5dXG4gKiAgIFtqYV1bL2phXVxuICogQHBhcmFtIHtCb29sZWFufSBbb3B0aW9ucy5hdXRvZm9jdXNdXG4gKiAgIFtlbl1BdXRvZm9jdXMgdGhlIGlucHV0IGVsZW1lbnQuIERlZmF1bHQgaXMgYHRydWVgLlsvZW5dXG4gKiAgIFtqYV1pbnB1dOimgee0oOOBq+iHquWLleeahOOBq+ODleOCqeODvOOCq+OCueOBmeOCi+OBi+OBqeOBhuOBi+OCkuaMh+WumuOBl+OBvuOBmeOAguODh+ODleOCqeODq+ODiOOBr3RydWXjgafjgZnjgIJbL2phXVxuICogQHBhcmFtIHtCb29sZWFufSBbb3B0aW9ucy5zdWJtaXRPbkVudGVyXVxuICogICBbZW5dU3VibWl0IGF1dG9tYXRpY2FsbHkgd2hlbiBlbnRlciBpcyBwcmVzc2VkLiBEZWZhdWx0IGlzIGB0cnVlYC5bL2VuXVxuICogICBbamFdRW50ZXLjgYzmirzjgZXjgozjgZ/pmpvjgavjgZ3jga5mb3Jt44KSc3VibWl044GZ44KL44GL44Gp44GG44GL44KS5oyH5a6a44GX44G+44GZ44CC44OH44OV44Kp44Or44OI44GvdHJ1ZeOBp+OBmeOAglsvamFdXG4gKiBAZGVzY3JpcHRpb25cbiAqICAgW2VuXVxuICogICAgIERpc3BsYXkgYSBkaWFsb2cgd2l0aCBhIHByb21wdCB0byBhc2sgdGhlIHVzZXIgYSBxdWVzdGlvbi4gRXh0ZW5kcyBgYWxlcnQoKWAgcGFyYW1ldGVycy5cbiAqXG4gKiAgICAgSXQgY2FuIGJlIGNhbGxlZCBpbiB0aGUgZm9sbG93aW5nIHdheXM6XG4gKlxuICogICAgIGBgYFxuICogICAgIG9ucy5ub3RpZmljYXRpb24ucHJvbXB0KG1lc3NhZ2UsIG9wdGlvbnMpO1xuICogICAgIG9ucy5ub3RpZmljYXRpb24ucHJvbXB0KG9wdGlvbnMpO1xuICogICAgIGBgYFxuICpcbiAqICAgICBNdXN0IHNwZWNpZnkgZWl0aGVyIGBtZXNzYWdlYCBvciBgbWVzc2FnZUhUTUxgLlxuICogICBbL2VuXVxuICogICBbamFdXG4gKiAgICAg44Om44O844K244O844Gr5YWl5Yqb44KS5L+D44GZ44OA44Kk44Ki44Ot44Kw44KS6KGo56S644GX44G+44GZ44CCXG4gKiAgICAg44GT44Gu44Oh44K944OD44OJ44Gu5byV5pWw44Gr44Gv44CBb3B0aW9ucy5tZXNzYWdl44KC44GX44GP44Gvb3B0aW9ucy5tZXNzYWdlSFRNTOOBruOBqeOBoeOCieOBi+OCkuW/heOBmuaMh+WumuOBmeOCi+W/heimgeOBjOOBguOCiuOBvuOBmeOAglxuICogICBbL2phXVxuICovXG5ub3RpZmljYXRpb24ucHJvbXB0ID0gKG1lc3NhZ2UsIG9wdGlvbnMpID0+IHtcbiAgb3B0aW9ucyA9IF9ub3JtYWxpemVBcmd1bWVudHMobWVzc2FnZSwgb3B0aW9ucywge1xuICAgIHRpdGxlOiAnQWxlcnQnLFxuICAgIGlzUHJvbXB0OiB0cnVlLFxuICAgIGF1dG9mb2N1czogdHJ1ZSxcbiAgICBzdWJtaXRPbkVudGVyOiB0cnVlXG4gIH0pO1xuXG4gIHJldHVybiBub3RpZmljYXRpb24uX2NyZWF0ZUFsZXJ0RGlhbG9nKG9wdGlvbnMpO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgbm90aWZpY2F0aW9uO1xuIiwiLypcbkNvcHlyaWdodCAyMDEzLTIwMTUgQVNJQUwgQ09SUE9SQVRJT05cblxuTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbnlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbllvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuXG4gICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcblxuVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG5TZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG5saW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cblxuKi9cblxuY29uc3QgY3JlYXRlID0gKCkgPT4ge1xuXG4gIC8qKlxuICAgKiBAb2JqZWN0IG9ucy5vcmllbnRhdGlvblxuICAgKiBAY2F0ZWdvcnkgdXRpbFxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dVXRpbGl0eSBtZXRob2RzIGZvciBvcmllbnRhdGlvbiBkZXRlY3Rpb24uWy9lbl1cbiAgICogICBbamFd55S76Z2i44Gu44Kq44Oq44Ko44Oz44OG44O844K344On44Oz5qSc55+l44Gu44Gf44KB44Gu44Om44O844OG44Kj44Oq44OG44Kj44Oh44K944OD44OJ44KS5Y+O44KB44Gm44GE44KL44Kq44OW44K444Kn44Kv44OI44Gn44GZ44CCWy9qYV1cbiAgICovXG4gIGNvbnN0IG9iaiA9IHtcbiAgICAvKipcbiAgICAgKiBAZXZlbnQgY2hhbmdlXG4gICAgICogQGRlc2NyaXB0aW9uXG4gICAgICogICBbZW5dRmlyZWQgd2hlbiB0aGUgZGV2aWNlIG9yaWVudGF0aW9uIGNoYW5nZXMuWy9lbl1cbiAgICAgKiAgIFtqYV3jg4fjg5DjgqTjgrnjga7jgqrjg6rjgqjjg7Pjg4bjg7zjgrfjg6fjg7PjgYzlpInljJbjgZfjgZ/pmpvjgavnmbrngavjgZfjgb7jgZnjgIJbL2phXVxuICAgICAqIEBwYXJhbSB7T2JqZWN0fSBldmVudFxuICAgICAqICAgW2VuXUV2ZW50IG9iamVjdC5bL2VuXVxuICAgICAqICAgW2phXeOCpOODmeODs+ODiOOCquODluOCuOOCp+OCr+ODiOOBp+OBmeOAglsvamFdXG4gICAgICogQHBhcmFtIHtCb29sZWFufSBldmVudC5pc1BvcnRyYWl0XG4gICAgICogICBbZW5dV2lsbCBiZSB0cnVlIGlmIHRoZSBjdXJyZW50IG9yaWVudGF0aW9uIGlzIHBvcnRyYWl0IG1vZGUuWy9lbl1cbiAgICAgKiAgIFtqYV3nj77lnKjjga7jgqrjg6rjgqjjg7Pjg4bjg7zjgrfjg6fjg7PjgYxwb3J0cmFpdOOBruWgtOWQiOOBq3RydWXjgpLov5TjgZfjgb7jgZnjgIJbL2phXVxuICAgICAqL1xuXG4gICAgLyoqXG4gICAgICogQG1ldGhvZCBvblxuICAgICAqIEBzaWduYXR1cmUgb24oZXZlbnROYW1lLCBsaXN0ZW5lcilcbiAgICAgKiBAZGVzY3JpcHRpb25cbiAgICAgKiAgIFtlbl1BZGQgYW4gZXZlbnQgbGlzdGVuZXIuWy9lbl1cbiAgICAgKiAgIFtqYV3jgqTjg5njg7Pjg4jjg6rjgrnjg4rjg7zjgpLov73liqDjgZfjgb7jgZnjgIJbL2phXVxuICAgICAqIEBwYXJhbSB7U3RyaW5nfSBldmVudE5hbWVcbiAgICAgKiAgIFtlbl1OYW1lIG9mIHRoZSBldmVudC5bL2VuXVxuICAgICAqICAgW2phXeOCpOODmeODs+ODiOWQjeOCkuaMh+WumuOBl+OBvuOBmeOAglsvamFdXG4gICAgICogQHBhcmFtIHtGdW5jdGlvbn0gbGlzdGVuZXJcbiAgICAgKiAgIFtlbl1GdW5jdGlvbiB0byBleGVjdXRlIHdoZW4gdGhlIGV2ZW50IGlzIHRyaWdnZXJlZC5bL2VuXVxuICAgICAqICAgW2phXeOBk+OBruOCpOODmeODs+ODiOOBjOeZuueBq+OBleOCjOOBn+mam+OBq+WRvOOBs+WHuuOBleOCjOOCi+mWouaVsOOCquODluOCuOOCp+OCr+ODiOOCkuaMh+WumuOBl+OBvuOBmeOAglsvamFdXG4gICAgICovXG5cbiAgICAvKipcbiAgICAgKiBAbWV0aG9kIG9uY2VcbiAgICAgKiBAc2lnbmF0dXJlIG9uY2UoZXZlbnROYW1lLCBsaXN0ZW5lcilcbiAgICAgKiBAZGVzY3JpcHRpb25cbiAgICAgKiAgW2VuXUFkZCBhbiBldmVudCBsaXN0ZW5lciB0aGF0J3Mgb25seSB0cmlnZ2VyZWQgb25jZS5bL2VuXVxuICAgICAqICBbamFd5LiA5bqm44Gg44GR5ZG844Gz5Ye644GV44KM44KL44Kk44OZ44Oz44OI44Oq44K544OK44O844KS6L+95Yqg44GX44G+44GZ44CCWy9qYV1cbiAgICAgKiBAcGFyYW0ge1N0cmluZ30gZXZlbnROYW1lXG4gICAgICogICBbZW5dTmFtZSBvZiB0aGUgZXZlbnQuWy9lbl1cbiAgICAgKiAgIFtqYV3jgqTjg5njg7Pjg4jlkI3jgpLmjIflrprjgZfjgb7jgZnjgIJbL2phXVxuICAgICAqIEBwYXJhbSB7RnVuY3Rpb259IGxpc3RlbmVyXG4gICAgICogICBbZW5dRnVuY3Rpb24gdG8gZXhlY3V0ZSB3aGVuIHRoZSBldmVudCBpcyB0cmlnZ2VyZWQuWy9lbl1cbiAgICAgKiAgIFtqYV3jgqTjg5njg7Pjg4jjgYznmbrngavjgZfjgZ/pmpvjgavlkbzjgbPlh7rjgZXjgozjgovplqLmlbDjgqrjg5bjgrjjgqfjgq/jg4jjgpLmjIflrprjgZfjgb7jgZnjgIJbL2phXVxuICAgICAqL1xuXG4gICAgLyoqXG4gICAgICogQG1ldGhvZCBvZmZcbiAgICAgKiBAc2lnbmF0dXJlIG9mZihldmVudE5hbWUsIFtsaXN0ZW5lcl0pXG4gICAgICogQGRlc2NyaXB0aW9uXG4gICAgICogIFtlbl1SZW1vdmUgYW4gZXZlbnQgbGlzdGVuZXIuIElmIHRoZSBsaXN0ZW5lciBpcyBub3Qgc3BlY2lmaWVkIGFsbCBsaXN0ZW5lcnMgZm9yIHRoZSBldmVudCB0eXBlIHdpbGwgYmUgcmVtb3ZlZC5bL2VuXVxuICAgICAqICBbamFd44Kk44OZ44Oz44OI44Oq44K544OK44O844KS5YmK6Zmk44GX44G+44GZ44CC44KC44GX44Kk44OZ44Oz44OI44Oq44K544OK44O844KS5oyH5a6a44GX44Gq44GL44Gj44Gf5aC05ZCI44Gr44Gv44CB44Gd44Gu44Kk44OZ44Oz44OI44Gr57SQ44Gl44GP5YWo44Gm44Gu44Kk44OZ44Oz44OI44Oq44K544OK44O844GM5YmK6Zmk44GV44KM44G+44GZ44CCWy9qYV1cbiAgICAgKiBAcGFyYW0ge1N0cmluZ30gZXZlbnROYW1lXG4gICAgICogICBbZW5dTmFtZSBvZiB0aGUgZXZlbnQuWy9lbl1cbiAgICAgKiAgIFtqYV3jgqTjg5njg7Pjg4jlkI3jgpLmjIflrprjgZfjgb7jgZnjgIJbL2phXVxuICAgICAqIEBwYXJhbSB7RnVuY3Rpb259IGxpc3RlbmVyXG4gICAgICogICBbZW5dRnVuY3Rpb24gdG8gZXhlY3V0ZSB3aGVuIHRoZSBldmVudCBpcyB0cmlnZ2VyZWQuWy9lbl1cbiAgICAgKiAgIFtqYV3liYrpmaTjgZnjgovjgqTjg5njg7Pjg4jjg6rjgrnjg4rjg7zjgpLmjIflrprjgZfjgb7jgZnjgIJbL2phXVxuICAgICAqL1xuXG4gICAgLy8gYWN0dWFsIGltcGxlbWVudGF0aW9uIHRvIGRldGVjdCBpZiB3aGV0aGVyIGN1cnJlbnQgc2NyZWVuIGlzIHBvcnRyYWl0IG9yIG5vdFxuICAgIF9pc1BvcnRyYWl0OiBmYWxzZSxcblxuICAgIC8qKlxuICAgICAqIEBtZXRob2QgaXNQb3J0cmFpdFxuICAgICAqIEBzaWduYXR1cmUgaXNQb3J0cmFpdCgpXG4gICAgICogQHJldHVybiB7Qm9vbGVhbn1cbiAgICAgKiAgIFtlbl1XaWxsIGJlIHRydWUgaWYgdGhlIGN1cnJlbnQgb3JpZW50YXRpb24gaXMgcG9ydHJhaXQgbW9kZS5bL2VuXVxuICAgICAqICAgW2phXeOCquODquOCqOODs+ODhuODvOOCt+ODp+ODs+OBjHBvcnRyYWl044Oi44O844OJ44Gu5aC05ZCI44GrdHJ1ZeOBq+OBquOCiuOBvuOBmeOAglsvamFdXG4gICAgICogQGRlc2NyaXB0aW9uXG4gICAgICogICBbZW5dUmV0dXJucyB3aGV0aGVyIHRoZSBjdXJyZW50IHNjcmVlbiBvcmllbnRhdGlvbiBpcyBwb3J0cmFpdCBvciBub3QuWy9lbl1cbiAgICAgKiAgIFtqYV3jgqrjg6rjgqjjg7Pjg4bjg7zjgrfjg6fjg7PjgYxwb3J0cmFpdOODouODvOODieOBi+OBqeOBhuOBi+OCkui/lOOBl+OBvuOBmeOAglsvamFdXG4gICAgICovXG4gICAgaXNQb3J0cmFpdDogZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gdGhpcy5faXNQb3J0cmFpdCgpO1xuICAgIH0sXG5cbiAgICAvKipcbiAgICAgKiBAbWV0aG9kIGlzTGFuZHNjYXBlXG4gICAgICogQHNpZ25hdHVyZSBpc0xhbmRzY2FwZSgpXG4gICAgICogQHJldHVybiB7Qm9vbGVhbn1cbiAgICAgKiAgIFtlbl1XaWxsIGJlIHRydWUgaWYgdGhlIGN1cnJlbnQgb3JpZW50YXRpb24gaXMgbGFuZHNjYXBlIG1vZGUuWy9lbl1cbiAgICAgKiAgIFtqYV3jgqrjg6rjgqjjg7Pjg4bjg7zjgrfjg6fjg7PjgYxsYW5kc2NhcGXjg6Ljg7zjg4njga7loLTlkIjjgat0cnVl44Gr44Gq44KK44G+44GZ44CCWy9qYV1cbiAgICAgKiBAZGVzY3JpcHRpb25cbiAgICAgKiAgIFtlbl1SZXR1cm5zIHdoZXRoZXIgdGhlIGN1cnJlbnQgc2NyZWVuIG9yaWVudGF0aW9uIGlzIGxhbmRzY2FwZSBvciBub3QuWy9lbl1cbiAgICAgKiAgIFtqYV3jgqrjg6rjgqjjg7Pjg4bjg7zjgrfjg6fjg7PjgYxsYW5kc2NhcGXjg6Ljg7zjg4njgYvjganjgYbjgYvjgpLov5TjgZfjgb7jgZnjgIJbL2phXVxuICAgICAqL1xuICAgIGlzTGFuZHNjYXBlOiBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiAhdGhpcy5pc1BvcnRyYWl0KCk7XG4gICAgfSxcblxuICAgIF9pbml0OiBmdW5jdGlvbigpIHtcbiAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ0RPTUNvbnRlbnRMb2FkZWQnLCB0aGlzLl9vbkRPTUNvbnRlbnRMb2FkZWQuYmluZCh0aGlzKSwgZmFsc2UpO1xuXG4gICAgICBpZiAoJ29yaWVudGF0aW9uJyBpbiB3aW5kb3cpIHtcbiAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ29yaWVudGF0aW9uY2hhbmdlJywgdGhpcy5fb25PcmllbnRhdGlvbkNoYW5nZS5iaW5kKHRoaXMpLCBmYWxzZSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigncmVzaXplJywgdGhpcy5fb25SZXNpemUuYmluZCh0aGlzKSwgZmFsc2UpO1xuICAgICAgfVxuXG4gICAgICB0aGlzLl9pc1BvcnRyYWl0ID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiB3aW5kb3cuaW5uZXJIZWlnaHQgPiB3aW5kb3cuaW5uZXJXaWR0aDtcbiAgICAgIH07XG5cbiAgICAgIHJldHVybiB0aGlzO1xuICAgIH0sXG5cbiAgICBfb25ET01Db250ZW50TG9hZGVkOiBmdW5jdGlvbigpIHtcbiAgICAgIHRoaXMuX2luc3RhbGxJc1BvcnRyYWl0SW1wbGVtZW50YXRpb24oKTtcbiAgICAgIHRoaXMuZW1pdCgnY2hhbmdlJywge2lzUG9ydHJhaXQ6IHRoaXMuaXNQb3J0cmFpdCgpfSk7XG4gICAgfSxcblxuICAgIF9pbnN0YWxsSXNQb3J0cmFpdEltcGxlbWVudGF0aW9uOiBmdW5jdGlvbigpIHtcbiAgICAgIGNvbnN0IGlzUG9ydHJhaXQgPSB3aW5kb3cuaW5uZXJXaWR0aCA8IHdpbmRvdy5pbm5lckhlaWdodDtcblxuICAgICAgaWYgKCEoJ29yaWVudGF0aW9uJyBpbiB3aW5kb3cpKSB7XG4gICAgICAgIHRoaXMuX2lzUG9ydHJhaXQgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgICByZXR1cm4gd2luZG93LmlubmVySGVpZ2h0ID4gd2luZG93LmlubmVyV2lkdGg7XG4gICAgICAgIH07XG4gICAgICB9IGVsc2UgaWYgKHdpbmRvdy5vcmllbnRhdGlvbiAlIDE4MCA9PT0gMCkge1xuICAgICAgICB0aGlzLl9pc1BvcnRyYWl0ID0gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgcmV0dXJuIE1hdGguYWJzKHdpbmRvdy5vcmllbnRhdGlvbiAlIDE4MCkgPT09IDAgPyBpc1BvcnRyYWl0IDogIWlzUG9ydHJhaXQ7XG4gICAgICAgIH07XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLl9pc1BvcnRyYWl0ID0gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgcmV0dXJuIE1hdGguYWJzKHdpbmRvdy5vcmllbnRhdGlvbiAlIDE4MCkgPT09IDkwID8gaXNQb3J0cmFpdCA6ICFpc1BvcnRyYWl0O1xuICAgICAgICB9O1xuICAgICAgfVxuICAgIH0sXG5cbiAgICBfb25PcmllbnRhdGlvbkNoYW5nZTogZnVuY3Rpb24oKSB7XG4gICAgICBjb25zdCBpc1BvcnRyYWl0ID0gdGhpcy5faXNQb3J0cmFpdCgpO1xuXG4gICAgICAvLyBXYWl0IGZvciB0aGUgZGltZW5zaW9ucyB0byBjaGFuZ2UgYmVjYXVzZVxuICAgICAgLy8gb2YgQW5kcm9pZCBpbmNvbnNpc3RlbmN5LlxuICAgICAgbGV0IG5JdGVyID0gMDtcbiAgICAgIGNvbnN0IGludGVydmFsID0gc2V0SW50ZXJ2YWwoKCkgPT4ge1xuICAgICAgICBuSXRlcisrO1xuXG4gICAgICAgIGNvbnN0IHcgPSB3aW5kb3cuaW5uZXJXaWR0aDtcbiAgICAgICAgY29uc3QgaCA9IHdpbmRvdy5pbm5lckhlaWdodDtcblxuICAgICAgICBpZiAoKGlzUG9ydHJhaXQgJiYgdyA8PSBoKSB8fFxuICAgICAgICAgICAoIWlzUG9ydHJhaXQgJiYgdyA+PSBoKSkge1xuICAgICAgICAgIHRoaXMuZW1pdCgnY2hhbmdlJywge2lzUG9ydHJhaXQ6IGlzUG9ydHJhaXR9KTtcbiAgICAgICAgICBjbGVhckludGVydmFsKGludGVydmFsKTtcbiAgICAgICAgfSBlbHNlIGlmIChuSXRlciA9PT0gNTApIHtcbiAgICAgICAgICB0aGlzLmVtaXQoJ2NoYW5nZScsIHtpc1BvcnRyYWl0OiBpc1BvcnRyYWl0fSk7XG4gICAgICAgICAgY2xlYXJJbnRlcnZhbChpbnRlcnZhbCk7XG4gICAgICAgIH1cbiAgICAgIH0sIDIwKTtcbiAgICB9LFxuXG4gICAgLy8gUnVuIG9uIG5vdCBtb2JpbGUgYnJvd3Nlci5cbiAgICBfb25SZXNpemU6IGZ1bmN0aW9uKCkge1xuICAgICAgdGhpcy5lbWl0KCdjaGFuZ2UnLCB7aXNQb3J0cmFpdDogdGhpcy5pc1BvcnRyYWl0KCl9KTtcbiAgICB9XG4gIH07XG5cbiAgTWljcm9FdmVudC5taXhpbihvYmopO1xuXG4gIHJldHVybiBvYmo7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBjcmVhdGUoKS5faW5pdCgpO1xuIiwiLypcbkNvcHlyaWdodCAyMDEzLTIwMTUgQVNJQUwgQ09SUE9SQVRJT05cblxuTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbnlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbllvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuXG4gICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcblxuVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG5TZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG5saW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cblxuKi9cblxuaW1wb3J0IHV0aWwgZnJvbSAnLi91dGlsJztcblxuY29uc3Qgc29mdHdhcmVLZXlib2FyZCA9IG5ldyBNaWNyb0V2ZW50KCk7XG5zb2Z0d2FyZUtleWJvYXJkLl92aXNpYmxlID0gZmFsc2U7XG5cbmNvbnN0IG9uU2hvdyA9ICgpID0+IHtcbiAgc29mdHdhcmVLZXlib2FyZC5fdmlzaWJsZSA9IHRydWU7XG4gIHNvZnR3YXJlS2V5Ym9hcmQuZW1pdCgnc2hvdycpO1xufTtcblxuY29uc3Qgb25IaWRlID0gKCkgPT4ge1xuICBzb2Z0d2FyZUtleWJvYXJkLl92aXNpYmxlID0gZmFsc2U7XG4gIHNvZnR3YXJlS2V5Ym9hcmQuZW1pdCgnaGlkZScpO1xufTtcblxuY29uc3QgYmluZEV2ZW50cyA9ICgpID0+IHtcbiAgaWYgKHR5cGVvZiBLZXlib2FyZCAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAvLyBodHRwczovL2dpdGh1Yi5jb20vbWFydGlubW9zZS9jb3Jkb3ZhLWtleWJvYXJkL2Jsb2IvOTVmM2RhM2EzOGQ4ZjhlMWZhNDFmYmY0MDE0NTM1MmMxMzUzNWEwMC9SRUFETUUubWRcbiAgICBLZXlib2FyZC5vbnNob3cgPSBvblNob3c7XG4gICAgS2V5Ym9hcmQub25oaWRlID0gb25IaWRlO1xuICAgIHNvZnR3YXJlS2V5Ym9hcmQuZW1pdCgnaW5pdCcsIHt2aXNpYmxlOiBLZXlib2FyZC5pc1Zpc2libGV9KTtcblxuICAgIHJldHVybiB0cnVlO1xuICB9IGVsc2UgaWYgKHR5cGVvZiBjb3Jkb3ZhLnBsdWdpbnMgIT09ICd1bmRlZmluZWQnICYmIHR5cGVvZiBjb3Jkb3ZhLnBsdWdpbnMuS2V5Ym9hcmQgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgLy8gaHR0cHM6Ly9naXRodWIuY29tL2RyaWZ0eWNvL2lvbmljLXBsdWdpbnMta2V5Ym9hcmQvYmxvYi9jYTI3ZWNmL1JFQURNRS5tZFxuICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCduYXRpdmUua2V5Ym9hcmRzaG93Jywgb25TaG93KTtcbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignbmF0aXZlLmtleWJvYXJkaGlkZScsIG9uSGlkZSk7XG4gICAgc29mdHdhcmVLZXlib2FyZC5lbWl0KCdpbml0Jywge3Zpc2libGU6IGNvcmRvdmEucGx1Z2lucy5LZXlib2FyZC5pc1Zpc2libGV9KTtcblxuICAgIHJldHVybiB0cnVlO1xuICB9XG5cbiAgcmV0dXJuIGZhbHNlO1xufTtcblxuY29uc3Qgbm9QbHVnaW5FcnJvciA9ICgpID0+IHtcbiAgdXRpbC53YXJuKCdvbnMta2V5Ym9hcmQ6IENvcmRvdmEgS2V5Ym9hcmQgcGx1Z2luIGlzIG5vdCBwcmVzZW50LicpO1xufTtcblxuZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignZGV2aWNlcmVhZHknLCAoKSA9PiB7XG4gIGlmICghYmluZEV2ZW50cygpKSB7XG4gICAgaWYgKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ1tvbnMta2V5Ym9hcmQtYWN0aXZlXScpIHx8XG4gICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdbb25zLWtleWJvYXJkLWluYWN0aXZlXScpKSB7XG4gICAgICBub1BsdWdpbkVycm9yKCk7XG4gICAgfVxuXG4gICAgc29mdHdhcmVLZXlib2FyZC5vbiA9IG5vUGx1Z2luRXJyb3I7XG4gIH1cbn0pO1xuXG5leHBvcnQgZGVmYXVsdCBzb2Z0d2FyZUtleWJvYXJkO1xuIiwiLypcbkNvcHlyaWdodCAyMDEzLTIwMTUgQVNJQUwgQ09SUE9SQVRJT05cblxuTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbnlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbllvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuXG4gICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcblxuVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG5TZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG5saW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cblxuKi9cblxuaW1wb3J0IHBsYXRmb3JtIGZyb20gJy4vcGxhdGZvcm0nO1xuXG5cbmNvbnN0IHV0aWwgPSB7XG4gIF9yZWFkeTogZmFsc2UsXG5cbiAgX2RvbUNvbnRlbnRMb2FkZWQ6IGZhbHNlLFxuXG4gIF9vbkRPTUNvbnRlbnRMb2FkZWQ6ICgpID0+IHtcbiAgICB1dGlsLl9kb21Db250ZW50TG9hZGVkID0gdHJ1ZTtcblxuICAgIGlmIChwbGF0Zm9ybS5pc1dlYlZpZXcoKSkge1xuICAgICAgd2luZG93LmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2RldmljZXJlYWR5JywgKCkgPT4ge1xuICAgICAgICB1dGlsLl9yZWFkeSA9IHRydWU7XG4gICAgICB9LCBmYWxzZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHV0aWwuX3JlYWR5ID0gdHJ1ZTtcbiAgICB9XG4gIH0sXG5cbiAgYWRkQmFja0J1dHRvbkxpc3RlbmVyOiBmdW5jdGlvbihmbikge1xuICAgIGlmICghdGhpcy5fZG9tQ29udGVudExvYWRlZCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdUaGlzIG1ldGhvZCBpcyBhdmFpbGFibGUgYWZ0ZXIgRE9NQ29udGVudExvYWRlZCcpO1xuICAgIH1cblxuICAgIGlmICh0aGlzLl9yZWFkeSkge1xuICAgICAgd2luZG93LmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2JhY2tidXR0b24nLCBmbiwgZmFsc2UpO1xuICAgIH0gZWxzZSB7XG4gICAgICB3aW5kb3cuZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignZGV2aWNlcmVhZHknLCBmdW5jdGlvbigpIHtcbiAgICAgICAgd2luZG93LmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2JhY2tidXR0b24nLCBmbiwgZmFsc2UpO1xuICAgICAgfSk7XG4gICAgfVxuICB9LFxuXG4gIHJlbW92ZUJhY2tCdXR0b25MaXN0ZW5lcjogZnVuY3Rpb24oZm4pIHtcbiAgICBpZiAoIXRoaXMuX2RvbUNvbnRlbnRMb2FkZWQpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignVGhpcyBtZXRob2QgaXMgYXZhaWxhYmxlIGFmdGVyIERPTUNvbnRlbnRMb2FkZWQnKTtcbiAgICB9XG5cbiAgICBpZiAodGhpcy5fcmVhZHkpIHtcbiAgICAgIHdpbmRvdy5kb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdiYWNrYnV0dG9uJywgZm4sIGZhbHNlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgd2luZG93LmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2RldmljZXJlYWR5JywgZnVuY3Rpb24oKSB7XG4gICAgICAgIHdpbmRvdy5kb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdiYWNrYnV0dG9uJywgZm4sIGZhbHNlKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfVxufTtcbndpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdET01Db250ZW50TG9hZGVkJywgKCkgPT4gdXRpbC5fb25ET01Db250ZW50TG9hZGVkKCksIGZhbHNlKTtcblxuY29uc3QgSGFuZGxlclJlcG9zaXRvcnkgPSB7XG4gIF9zdG9yZToge30sXG5cbiAgX2dlbklkOiAoKCkgPT4ge1xuICAgIGxldCBpID0gMDtcbiAgICByZXR1cm4gKCkgPT4gaSsrO1xuICB9KSgpLFxuXG4gIHNldDogZnVuY3Rpb24oZWxlbWVudCwgaGFuZGxlcikge1xuICAgIGlmIChlbGVtZW50LmRhdGFzZXQuZGV2aWNlQmFja0J1dHRvbkhhbmRsZXJJZCkge1xuICAgICAgdGhpcy5yZW1vdmUoZWxlbWVudCk7XG4gICAgfVxuICAgIGNvbnN0IGlkID0gZWxlbWVudC5kYXRhc2V0LmRldmljZUJhY2tCdXR0b25IYW5kbGVySWQgPSBIYW5kbGVyUmVwb3NpdG9yeS5fZ2VuSWQoKTtcbiAgICB0aGlzLl9zdG9yZVtpZF0gPSBoYW5kbGVyO1xuICB9LFxuXG4gIHJlbW92ZTogZnVuY3Rpb24oZWxlbWVudCkge1xuICAgIGlmIChlbGVtZW50LmRhdGFzZXQuZGV2aWNlQmFja0J1dHRvbkhhbmRsZXJJZCkge1xuICAgICAgZGVsZXRlIHRoaXMuX3N0b3JlW2VsZW1lbnQuZGF0YXNldC5kZXZpY2VCYWNrQnV0dG9uSGFuZGxlcklkXTtcbiAgICAgIGRlbGV0ZSBlbGVtZW50LmRhdGFzZXQuZGV2aWNlQmFja0J1dHRvbkhhbmRsZXJJZDtcbiAgICB9XG4gIH0sXG5cbiAgZ2V0OiBmdW5jdGlvbihlbGVtZW50KSB7XG4gICAgaWYgKCFlbGVtZW50LmRhdGFzZXQuZGV2aWNlQmFja0J1dHRvbkhhbmRsZXJJZCkge1xuICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG5cbiAgICBjb25zdCBpZCA9IGVsZW1lbnQuZGF0YXNldC5kZXZpY2VCYWNrQnV0dG9uSGFuZGxlcklkO1xuXG4gICAgaWYgKCF0aGlzLl9zdG9yZVtpZF0pIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcigpO1xuICAgIH1cblxuICAgIHJldHVybiB0aGlzLl9zdG9yZVtpZF07XG4gIH0sXG5cbiAgaGFzOiBmdW5jdGlvbihlbGVtZW50KSB7XG4gICAgaWYgKCFlbGVtZW50LmRhdGFzZXQpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG5cbiAgICBjb25zdCBpZCA9IGVsZW1lbnQuZGF0YXNldC5kZXZpY2VCYWNrQnV0dG9uSGFuZGxlcklkO1xuXG4gICAgcmV0dXJuICEhdGhpcy5fc3RvcmVbaWRdO1xuICB9XG59O1xuXG5jbGFzcyBEZXZpY2VCYWNrQnV0dG9uRGlzcGF0Y2hlciB7XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHRoaXMuX2lzRW5hYmxlZCA9IGZhbHNlO1xuICAgIHRoaXMuX2JvdW5kQ2FsbGJhY2sgPSB0aGlzLl9jYWxsYmFjay5iaW5kKHRoaXMpO1xuICB9XG5cblxuICAvKipcbiAgICogRW5hYmxlIHRvIGhhbmRsZSAnYmFja2J1dHRvbicgZXZlbnRzLlxuICAgKi9cbiAgZW5hYmxlKCkge1xuICAgIGlmICghdGhpcy5faXNFbmFibGVkKSB7XG4gICAgICB1dGlsLmFkZEJhY2tCdXR0b25MaXN0ZW5lcih0aGlzLl9ib3VuZENhbGxiYWNrKTtcbiAgICAgIHRoaXMuX2lzRW5hYmxlZCA9IHRydWU7XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIERpc2FibGUgdG8gaGFuZGxlICdiYWNrYnV0dG9uJyBldmVudHMuXG4gICAqL1xuICBkaXNhYmxlKCkge1xuICAgIGlmICh0aGlzLl9pc0VuYWJsZWQpIHtcbiAgICAgIHV0aWwucmVtb3ZlQmFja0J1dHRvbkxpc3RlbmVyKHRoaXMuX2JvdW5kQ2FsbGJhY2spO1xuICAgICAgdGhpcy5faXNFbmFibGVkID0gZmFsc2U7XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIEZpcmUgYSAnYmFja2J1dHRvbicgZXZlbnQgbWFudWFsbHkuXG4gICAqL1xuICBmaXJlRGV2aWNlQmFja0J1dHRvbkV2ZW50KCkge1xuICAgIGNvbnN0IGV2ZW50ID0gZG9jdW1lbnQuY3JlYXRlRXZlbnQoJ0V2ZW50Jyk7XG4gICAgZXZlbnQuaW5pdEV2ZW50KCdiYWNrYnV0dG9uJywgdHJ1ZSwgdHJ1ZSk7XG4gICAgZG9jdW1lbnQuZGlzcGF0Y2hFdmVudChldmVudCk7XG4gIH1cblxuICBfY2FsbGJhY2soKSB7XG4gICAgdGhpcy5fZGlzcGF0Y2hEZXZpY2VCYWNrQnV0dG9uRXZlbnQoKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge0hUTUxFbGVtZW50fSBlbGVtZW50XG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IGNhbGxiYWNrXG4gICAqL1xuICBjcmVhdGVIYW5kbGVyKGVsZW1lbnQsIGNhbGxiYWNrKSB7XG4gICAgaWYgKCEoZWxlbWVudCBpbnN0YW5jZW9mIEhUTUxFbGVtZW50KSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdlbGVtZW50IG11c3QgYmUgYW4gaW5zdGFuY2Ugb2YgSFRNTEVsZW1lbnQnKTtcbiAgICB9XG5cbiAgICBpZiAoIShjYWxsYmFjayBpbnN0YW5jZW9mIEZ1bmN0aW9uKSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdjYWxsYmFjayBtdXN0IGJlIGFuIGluc3RhbmNlIG9mIEZ1bmN0aW9uJyk7XG4gICAgfVxuXG4gICAgY29uc3QgaGFuZGxlciA9IHtcbiAgICAgIF9jYWxsYmFjazogY2FsbGJhY2ssXG4gICAgICBfZWxlbWVudDogZWxlbWVudCxcblxuICAgICAgZGlzYWJsZTogZnVuY3Rpb24oKSB7XG4gICAgICAgIEhhbmRsZXJSZXBvc2l0b3J5LnJlbW92ZShlbGVtZW50KTtcbiAgICAgIH0sXG5cbiAgICAgIHNldExpc3RlbmVyOiBmdW5jdGlvbihjYWxsYmFjaykge1xuICAgICAgICB0aGlzLl9jYWxsYmFjayA9IGNhbGxiYWNrO1xuICAgICAgfSxcblxuICAgICAgZW5hYmxlOiBmdW5jdGlvbigpIHtcbiAgICAgICAgSGFuZGxlclJlcG9zaXRvcnkuc2V0KGVsZW1lbnQsIHRoaXMpO1xuICAgICAgfSxcblxuICAgICAgaXNFbmFibGVkOiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIEhhbmRsZXJSZXBvc2l0b3J5LmdldChlbGVtZW50KSA9PT0gdGhpcztcbiAgICAgIH0sXG5cbiAgICAgIGRlc3Ryb3k6IGZ1bmN0aW9uKCkge1xuICAgICAgICBIYW5kbGVyUmVwb3NpdG9yeS5yZW1vdmUoZWxlbWVudCk7XG4gICAgICAgIHRoaXMuX2NhbGxiYWNrID0gdGhpcy5fZWxlbWVudCA9IG51bGw7XG4gICAgICB9XG4gICAgfTtcblxuICAgIGhhbmRsZXIuZW5hYmxlKCk7XG5cbiAgICByZXR1cm4gaGFuZGxlcjtcbiAgfVxuXG4gIF9kaXNwYXRjaERldmljZUJhY2tCdXR0b25FdmVudCgpIHtcbiAgICBjb25zdCB0cmVlID0gdGhpcy5fY2FwdHVyZVRyZWUoKTtcblxuICAgIGNvbnN0IGVsZW1lbnQgPSB0aGlzLl9maW5kSGFuZGxlckxlYWZFbGVtZW50KHRyZWUpO1xuXG4gICAgbGV0IGhhbmRsZXIgPSBIYW5kbGVyUmVwb3NpdG9yeS5nZXQoZWxlbWVudCk7XG4gICAgaGFuZGxlci5fY2FsbGJhY2soY3JlYXRlRXZlbnQoZWxlbWVudCkpO1xuXG4gICAgZnVuY3Rpb24gY3JlYXRlRXZlbnQoZWxlbWVudCkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgX2VsZW1lbnQ6IGVsZW1lbnQsXG4gICAgICAgIGNhbGxQYXJlbnRIYW5kbGVyOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICBsZXQgcGFyZW50ID0gdGhpcy5fZWxlbWVudC5wYXJlbnROb2RlO1xuXG4gICAgICAgICAgd2hpbGUgKHBhcmVudCkge1xuICAgICAgICAgICAgaGFuZGxlciA9IEhhbmRsZXJSZXBvc2l0b3J5LmdldChwYXJlbnQpO1xuICAgICAgICAgICAgaWYgKGhhbmRsZXIpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIGhhbmRsZXIuX2NhbGxiYWNrKGNyZWF0ZUV2ZW50KHBhcmVudCkpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcGFyZW50ID0gcGFyZW50LnBhcmVudE5vZGU7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9O1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBAcmV0dXJuIHtPYmplY3R9XG4gICAqL1xuICBfY2FwdHVyZVRyZWUoKSB7XG4gICAgcmV0dXJuIGNyZWF0ZVRyZWUoZG9jdW1lbnQuYm9keSk7XG5cbiAgICBmdW5jdGlvbiBjcmVhdGVUcmVlKGVsZW1lbnQpIHtcbiAgICAgIGNvbnN0IHRyZWUgPSB7XG4gICAgICAgIGVsZW1lbnQ6IGVsZW1lbnQsXG4gICAgICAgIGNoaWxkcmVuOiBBcnJheS5wcm90b3R5cGUuY29uY2F0LmFwcGx5KFtdLCBhcnJheU9mKGVsZW1lbnQuY2hpbGRyZW4pLm1hcChmdW5jdGlvbihjaGlsZEVsZW1lbnQpIHtcblxuICAgICAgICAgIGlmIChjaGlsZEVsZW1lbnQuc3R5bGUuZGlzcGxheSA9PT0gJ25vbmUnKSB7XG4gICAgICAgICAgICByZXR1cm4gW107XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgaWYgKGNoaWxkRWxlbWVudC5jaGlsZHJlbi5sZW5ndGggPT09IDAgJiYgIUhhbmRsZXJSZXBvc2l0b3J5LmhhcyhjaGlsZEVsZW1lbnQpKSB7XG4gICAgICAgICAgICByZXR1cm4gW107XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgY29uc3QgcmVzdWx0ID0gY3JlYXRlVHJlZShjaGlsZEVsZW1lbnQpO1xuXG4gICAgICAgICAgaWYgKHJlc3VsdC5jaGlsZHJlbi5sZW5ndGggPT09IDAgJiYgIUhhbmRsZXJSZXBvc2l0b3J5LmhhcyhyZXN1bHQuZWxlbWVudCkpIHtcbiAgICAgICAgICAgIHJldHVybiBbXTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICByZXR1cm4gW3Jlc3VsdF07XG4gICAgICAgIH0pKVxuICAgICAgfTtcblxuICAgICAgaWYgKCFIYW5kbGVyUmVwb3NpdG9yeS5oYXModHJlZS5lbGVtZW50KSkge1xuICAgICAgICBmb3IgKGNvbnN0IHN1YlRyZWUgb2YgdHJlZS5jaGlsZHJlbikge1xuICAgICAgICAgIGlmIChIYW5kbGVyUmVwb3NpdG9yeS5oYXMoc3ViVHJlZS5lbGVtZW50KSkge1xuICAgICAgICAgICAgcmV0dXJuIHN1YlRyZWU7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB0cmVlO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGFycmF5T2YodGFyZ2V0KSB7XG4gICAgICBjb25zdCByZXN1bHQgPSBbXTtcbiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGFyZ2V0Lmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIHJlc3VsdC5wdXNoKHRhcmdldFtpXSk7XG4gICAgICB9XG4gICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge09iamVjdH0gdHJlZVxuICAgKiBAcmV0dXJuIHtIVE1MRWxlbWVudH1cbiAgICovXG4gIF9maW5kSGFuZGxlckxlYWZFbGVtZW50KHRyZWUpIHtcbiAgICByZXR1cm4gZmluZCh0cmVlKTtcblxuICAgIGZ1bmN0aW9uIGZpbmQobm9kZSkge1xuICAgICAgaWYgKG5vZGUuY2hpbGRyZW4ubGVuZ3RoID09PSAwKSB7XG4gICAgICAgIHJldHVybiBub2RlLmVsZW1lbnQ7XG4gICAgICB9XG5cbiAgICAgIGlmIChub2RlLmNoaWxkcmVuLmxlbmd0aCA9PT0gMSkge1xuICAgICAgICByZXR1cm4gZmluZChub2RlLmNoaWxkcmVuWzBdKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIG5vZGUuY2hpbGRyZW4ubWFwKGZ1bmN0aW9uKGNoaWxkTm9kZSkge1xuICAgICAgICByZXR1cm4gY2hpbGROb2RlLmVsZW1lbnQ7XG4gICAgICB9KS5yZWR1Y2UoZnVuY3Rpb24obGVmdCwgcmlnaHQpIHtcbiAgICAgICAgaWYgKCFsZWZ0KSB7XG4gICAgICAgICAgcmV0dXJuIHJpZ2h0O1xuICAgICAgICB9XG5cbiAgICAgICAgY29uc3QgbGVmdFogPSBwYXJzZUludCh3aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZShsZWZ0LCAnJykuekluZGV4LCAxMCk7XG4gICAgICAgIGNvbnN0IHJpZ2h0WiA9IHBhcnNlSW50KHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKHJpZ2h0LCAnJykuekluZGV4LCAxMCk7XG5cbiAgICAgICAgaWYgKCFpc05hTihsZWZ0WikgJiYgIWlzTmFOKHJpZ2h0WikpIHtcbiAgICAgICAgICByZXR1cm4gbGVmdFogPiByaWdodFogPyBsZWZ0IDogcmlnaHQ7XG4gICAgICAgIH1cblxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0NhcHR1cmluZyBiYWNrYnV0dG9uLWhhbmRsZXIgaXMgZmFpbHVyZS4nKTtcbiAgICAgIH0sIG51bGwpO1xuICAgIH1cbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBuZXcgRGV2aWNlQmFja0J1dHRvbkRpc3BhdGNoZXIoKTtcbiIsIi8qXG5Db3B5cmlnaHQgMjAxMy0yMDE1IEFTSUFMIENPUlBPUkFUSU9OXG5cbkxpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG55b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG5Zb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcblxuICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG5cblVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbmRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbldJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxubGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5cbiovXG5cbmNvbnN0IGdlbmVyYXRlSWQgPSAoZnVuY3Rpb24oKSB7XG4gIGxldCBpID0gMDtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBpKys7XG4gIH07XG59KSgpO1xuXG4vKipcbiAqIERvb3IgbG9ja2luZyBzeXN0ZW0uXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zXVxuICogQHBhcmFtIHtGdW5jdGlvbn0gW29wdGlvbnMubG9nXVxuICovXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBEb29yTG9jayB7XG5cbiAgY29uc3RydWN0b3Iob3B0aW9ucyA9IHt9KSB7XG4gICAgdGhpcy5fbG9ja0xpc3QgPSBbXTtcbiAgICB0aGlzLl93YWl0TGlzdCA9IFtdO1xuICAgIHRoaXMuX2xvZyA9IG9wdGlvbnMubG9nIHx8IGZ1bmN0aW9uKCkge307XG4gIH1cblxuICAvKipcbiAgICogUmVnaXN0ZXIgYSBsb2NrLlxuICAgKlxuICAgKiBAcmV0dXJuIHtGdW5jdGlvbn0gQ2FsbGJhY2sgZm9yIHVubG9ja2luZy5cbiAgICovXG4gIGxvY2soKSB7XG4gICAgY29uc3QgdW5sb2NrID0gKCkgPT4ge1xuICAgICAgdGhpcy5fdW5sb2NrKHVubG9jayk7XG4gICAgfTtcbiAgICB1bmxvY2suaWQgPSBnZW5lcmF0ZUlkKCk7XG4gICAgdGhpcy5fbG9ja0xpc3QucHVzaCh1bmxvY2spO1xuICAgIHRoaXMuX2xvZygnbG9jazogJyArICh1bmxvY2suaWQpKTtcblxuICAgIHJldHVybiB1bmxvY2s7XG4gIH1cblxuICBfdW5sb2NrKGZuKSB7XG4gICAgY29uc3QgaW5kZXggPSB0aGlzLl9sb2NrTGlzdC5pbmRleE9mKGZuKTtcbiAgICBpZiAoaW5kZXggPT09IC0xKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ1RoaXMgZnVuY3Rpb24gaXMgbm90IHJlZ2lzdGVyZWQgaW4gdGhlIGxvY2sgbGlzdC4nKTtcbiAgICB9XG5cbiAgICB0aGlzLl9sb2NrTGlzdC5zcGxpY2UoaW5kZXgsIDEpO1xuICAgIHRoaXMuX2xvZygndW5sb2NrOiAnICsgZm4uaWQpO1xuXG4gICAgdGhpcy5fdHJ5VG9GcmVlV2FpdExpc3QoKTtcbiAgfVxuXG4gIF90cnlUb0ZyZWVXYWl0TGlzdCgpIHtcbiAgICB3aGlsZSAoIXRoaXMuaXNMb2NrZWQoKSAmJiB0aGlzLl93YWl0TGlzdC5sZW5ndGggPiAwKSB7XG4gICAgICB0aGlzLl93YWl0TGlzdC5zaGlmdCgpKCk7XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIFJlZ2lzdGVyIGEgY2FsbGJhY2sgZm9yIHdhaXRpbmcgdW5sb2NrZWQgZG9vci5cbiAgICpcbiAgICogQHBhcmFtcyB7RnVuY3Rpb259IGNhbGxiYWNrIENhbGxiYWNrIG9uIHVubG9ja2luZyB0aGUgZG9vciBjb21wbGV0ZWx5LlxuICAgKi9cbiAgd2FpdFVubG9jayhjYWxsYmFjaykge1xuICAgIGlmICghKGNhbGxiYWNrIGluc3RhbmNlb2YgRnVuY3Rpb24pKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ1RoZSBjYWxsYmFjayBwYXJhbSBtdXN0IGJlIGEgZnVuY3Rpb24uJyk7XG4gICAgfVxuXG4gICAgaWYgKHRoaXMuaXNMb2NrZWQoKSkge1xuICAgICAgdGhpcy5fd2FpdExpc3QucHVzaChjYWxsYmFjayk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGNhbGxiYWNrKCk7XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIEByZXR1cm4ge0Jvb2xlYW59XG4gICAqL1xuICBpc0xvY2tlZCgpIHtcbiAgICByZXR1cm4gdGhpcy5fbG9ja0xpc3QubGVuZ3RoID4gMDtcbiAgfVxufVxuIiwiLypcbkNvcHlyaWdodCAyMDEzLTIwMTUgQVNJQUwgQ09SUE9SQVRJT05cblxuTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbnlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbllvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuXG4gICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcblxuVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG5TZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG5saW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cblxuKi9cbmltcG9ydCB1dGlsIGZyb20gJy4vdXRpbCc7XG5pbXBvcnQgaW50ZXJuYWwgZnJvbSAnLi9pbnRlcm5hbCc7XG5cbi8vIERlZmF1bHQgaW1wbGVtZW50YXRpb24gZm9yIGdsb2JhbCBQYWdlTG9hZGVyLlxuZnVuY3Rpb24gbG9hZFBhZ2Uoe3BhZ2UsIHBhcmVudCwgcGFyYW1zID0ge319LCBkb25lKSB7XG4gIGludGVybmFsLmdldFBhZ2VIVE1MQXN5bmMocGFnZSkudGhlbihodG1sID0+IHtcbiAgICBjb25zdCBwYWdlRWxlbWVudCA9IHV0aWwuY3JlYXRlRWxlbWVudChodG1sLnRyaW0oKSk7XG4gICAgcGFyZW50LmFwcGVuZENoaWxkKHBhZ2VFbGVtZW50KTtcblxuICAgIGRvbmUocGFnZUVsZW1lbnQpO1xuICB9KTtcbn1cblxuZnVuY3Rpb24gdW5sb2FkUGFnZShlbGVtZW50KSB7XG4gIGlmIChlbGVtZW50Ll9kZXN0cm95IGluc3RhbmNlb2YgRnVuY3Rpb24pIHtcbiAgICBlbGVtZW50Ll9kZXN0cm95KCk7XG4gIH0gZWxzZSB7XG4gICAgZWxlbWVudC5yZW1vdmUoKTtcbiAgfVxufVxuXG5leHBvcnQgY2xhc3MgUGFnZUxvYWRlciB7XG4gIC8qKlxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBbZm5dIFJldHVybnMgYW4gb2JqZWN0IHRoYXQgaGFzIFwiZWxlbWVudFwiIHByb3BlcnR5IGFuZCBcInVubG9hZFwiIGZ1bmN0aW9uLlxuICAgKi9cbiAgY29uc3RydWN0b3IobG9hZGVyLCB1bmxvYWRlcikge1xuICAgIHRoaXMuX2xvYWRlciA9IGxvYWRlciBpbnN0YW5jZW9mIEZ1bmN0aW9uID8gbG9hZGVyIDogbG9hZFBhZ2U7XG4gICAgdGhpcy5fdW5sb2FkZXIgPSB1bmxvYWRlciBpbnN0YW5jZW9mIEZ1bmN0aW9uID8gdW5sb2FkZXIgOiB1bmxvYWRQYWdlO1xuICB9XG5cbiAgLyoqXG4gICAqIFNldCBpbnRlcm5hbCBsb2FkZXIgaW1wbGVtZW50YXRpb24uXG4gICAqL1xuICBzZXQgaW50ZXJuYWxMb2FkZXIoZm4pIHtcbiAgICBpZiAoIShmbiBpbnN0YW5jZW9mIEZ1bmN0aW9uKSkge1xuICAgICAgdGhyb3cgRXJyb3IoJ0ZpcnN0IHBhcmFtZXRlciBtdXN0IGJlIGFuIGluc3RhbmNlIG9mIEZ1bmN0aW9uJyk7XG4gICAgfVxuICAgIHRoaXMuX2xvYWRlciA9IGZuO1xuICB9XG5cbiAgZ2V0IGludGVybmFsTG9hZGVyKCkge1xuICAgIHJldHVybiB0aGlzLl9sb2FkZXI7XG4gIH1cblxuICAvKipcbiAgICogQHBhcmFtIHthbnl9IG9wdGlvbnMucGFnZVxuICAgKiBAcGFyYW0ge0VsZW1lbnR9IG9wdGlvbnMucGFyZW50IEEgbG9jYXRpb24gdG8gbG9hZCBwYWdlLlxuICAgKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnMucGFyYW1zXSBFeHRyYSBwYXJhbWV0ZXJzIGZvciBvbnMtcGFnZS5cbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gZG9uZSBUYWtlIGFuIG9iamVjdCB0aGF0IGhhcyBcImVsZW1lbnRcIiBwcm9wZXJ0eSBhbmQgXCJ1bmxvYWRcIiBmdW5jdGlvbi5cbiAgICovXG4gIGxvYWQoe3BhZ2UsIHBhcmVudCwgcGFyYW1zID0ge319LCBkb25lKSB7XG4gICAgdGhpcy5fbG9hZGVyKHtwYWdlLCBwYXJlbnQsIHBhcmFtc30sIHBhZ2VFbGVtZW50ID0+IHtcbiAgICAgIGlmICghKHBhZ2VFbGVtZW50IGluc3RhbmNlb2YgRWxlbWVudCkpIHtcbiAgICAgICAgdGhyb3cgRXJyb3IoJ3BhZ2VFbGVtZW50IG11c3QgYmUgYW4gaW5zdGFuY2Ugb2YgRWxlbWVudC4nKTtcbiAgICAgIH1cblxuICAgICAgZG9uZShwYWdlRWxlbWVudCk7XG4gICAgfSk7XG4gIH1cblxuICB1bmxvYWQocGFnZUVsZW1lbnQpIHtcbiAgICBpZiAoIShwYWdlRWxlbWVudCBpbnN0YW5jZW9mIEVsZW1lbnQpKSB7XG4gICAgICB0aHJvdyBFcnJvcigncGFnZUVsZW1lbnQgbXVzdCBiZSBhbiBpbnN0YW5jZSBvZiBFbGVtZW50LicpO1xuICAgIH1cblxuICAgIHRoaXMuX3VubG9hZGVyKHBhZ2VFbGVtZW50KTtcbiAgfVxufVxuXG5leHBvcnQgY29uc3QgZGVmYXVsdFBhZ2VMb2FkZXIgPSBuZXcgUGFnZUxvYWRlcigpO1xuXG5leHBvcnQgY29uc3QgaW5zdGFudFBhZ2VMb2FkZXIgPSBuZXcgUGFnZUxvYWRlcihcbiAgZnVuY3Rpb24oe3BhZ2UsIHBhcmVudCwgcGFyYW1zID0ge319LCBkb25lKSB7XG4gICAgY29uc3QgZWxlbWVudCA9IHV0aWwuY3JlYXRlRWxlbWVudChwYWdlLnRyaW0oKSk7XG4gICAgcGFyZW50LmFwcGVuZENoaWxkKGVsZW1lbnQpO1xuXG4gICAgZG9uZShlbGVtZW50KTtcbiAgfSxcbiAgdW5sb2FkUGFnZVxuKTtcbiIsIi8qXG5Db3B5cmlnaHQgMjAxMy0yMDE1IEFTSUFMIENPUlBPUkFUSU9OXG5cbkxpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG55b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG5Zb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcblxuICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG5cblVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbmRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbldJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxubGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5cbiovXG5cbmltcG9ydCB1dGlsIGZyb20gJy4vdXRpbCc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEJhc2VBbmltYXRvciB7XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBvcHRpb25zXG4gICAqIEBwYXJhbSB7U3RyaW5nfSBvcHRpb25zLnRpbWluZ1xuICAgKiBAcGFyYW0ge051bWJlcn0gb3B0aW9ucy5kdXJhdGlvblxuICAgKiBAcGFyYW0ge051bWJlcn0gb3B0aW9ucy5kZWxheVxuICAgKi9cbiAgY29uc3RydWN0b3Iob3B0aW9ucyA9IHt9KSB7XG4gICAgdGhpcy50aW1pbmcgPSBvcHRpb25zLnRpbWluZyB8fCAnbGluZWFyJztcbiAgICB0aGlzLmR1cmF0aW9uID0gb3B0aW9ucy5kdXJhdGlvbiB8fCAwO1xuICAgIHRoaXMuZGVsYXkgPSBvcHRpb25zLmRlbGF5IHx8IDA7XG4gIH1cblxuICBzdGF0aWMgZXh0ZW5kKHByb3BlcnRpZXMgPSB7fSkge1xuICAgIGNvbnN0IGV4dGVuZGVkQW5pbWF0b3IgPSB0aGlzO1xuICAgIGNvbnN0IG5ld0FuaW1hdG9yID0gZnVuY3Rpb24oKSB7XG4gICAgICBleHRlbmRlZEFuaW1hdG9yLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgICB1dGlsLmV4dGVuZCh0aGlzLCBwcm9wZXJ0aWVzKTtcbiAgICB9O1xuXG4gICAgbmV3QW5pbWF0b3IucHJvdG90eXBlID0gdGhpcy5wcm90b3R5cGU7XG4gICAgcmV0dXJuIG5ld0FuaW1hdG9yO1xuICB9XG59XG5cbiIsIi8qXG5Db3B5cmlnaHQgMjAxMy0yMDE1IEFTSUFMIENPUlBPUkFUSU9OXG5cbkxpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG55b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG5Zb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcblxuICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG5cblVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbmRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbldJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxubGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5cbiovXG5cbmltcG9ydCB1dGlsIGZyb20gJy4vdXRpbCc7XG5pbXBvcnQgYW5pbWl0IGZyb20gJy4vYW5pbWl0J1xuaW1wb3J0IEdlc3R1cmVEZXRlY3RvciBmcm9tICcuL2dlc3R1cmUtZGV0ZWN0b3InO1xuaW1wb3J0IHBsYXRmb3JtIGZyb20gJy4vcGxhdGZvcm0nO1xuaW1wb3J0IG5vdGlmaWNhdGlvbiBmcm9tICcuL25vdGlmaWNhdGlvbic7XG5pbXBvcnQgaW50ZXJuYWwgZnJvbSAnLi9pbnRlcm5hbCc7XG5pbXBvcnQgb3JpZW50YXRpb24gZnJvbSAnLi9vcmllbnRhdGlvbic7XG5pbXBvcnQgc29mdHdhcmVLZXlib2FyZCBmcm9tICcuL3NvZnR3YXJlLWtleWJvYXJkJztcbmltcG9ydCBQYWdlQXR0cmlidXRlRXhwcmVzc2lvbiBmcm9tICcuL3BhZ2UtYXR0cmlidXRlLWV4cHJlc3Npb24nO1xuaW1wb3J0IGRldmljZUJhY2tCdXR0b25EaXNwYXRjaGVyIGZyb20gJy4vZGV2aWNlLWJhY2stYnV0dG9uLWRpc3BhdGNoZXInO1xuaW1wb3J0IGFuaW1hdGlvbk9wdGlvbnNQYXJzZXIgZnJvbSAnLi9hbmltYXRpb24tb3B0aW9ucy1wYXJzZXInO1xuaW1wb3J0IGF1dG9TdHlsZSBmcm9tICcuL2F1dG9zdHlsZSc7XG5pbXBvcnQgRG9vckxvY2sgZnJvbSAnLi9kb29ybG9jayc7XG5pbXBvcnQgY29udGVudFJlYWR5IGZyb20gJy4vY29udGVudC1yZWFkeSc7XG5pbXBvcnQge2RlZmF1bHRQYWdlTG9hZGVyLCBQYWdlTG9hZGVyfSBmcm9tICcuL3BhZ2UtbG9hZGVyJztcbmltcG9ydCBCYXNlQW5pbWF0b3IgZnJvbSAnLi9iYXNlLWFuaW1hdG9yJztcblxuLyoqXG4gKiBAb2JqZWN0IG9uc1xuICogQGNhdGVnb3J5IHV0aWxcbiAqIEBkZXNjcmlwdGlvblxuICogICBbamFdT25zZW4gVUnjgafliKnnlKjjgafjgY3jgovjgrDjg63jg7zjg5Djg6vjgarjgqrjg5bjgrjjgqfjgq/jg4jjgafjgZnjgIJbL2phXVxuICogICBbZW5dQSBnbG9iYWwgb2JqZWN0IHRoYXQncyB1c2VkIGluIE9uc2VuIFVJLiBbL2VuXVxuICovXG5jb25zdCBvbnMgPSB7fTtcblxub25zLl91dGlsID0gdXRpbDtcbm9ucy5hbmltaXQgPSBhbmltaXQ7XG5vbnMuX2RldmljZUJhY2tCdXR0b25EaXNwYXRjaGVyID0gZGV2aWNlQmFja0J1dHRvbkRpc3BhdGNoZXI7XG5vbnMuX2ludGVybmFsID0gaW50ZXJuYWw7XG5vbnMuR2VzdHVyZURldGVjdG9yID0gR2VzdHVyZURldGVjdG9yO1xub25zLnBsYXRmb3JtID0gcGxhdGZvcm07XG5vbnMuc29mdHdhcmVLZXlib2FyZCA9IHNvZnR3YXJlS2V5Ym9hcmQ7XG5vbnMucGFnZUF0dHJpYnV0ZUV4cHJlc3Npb24gPSBQYWdlQXR0cmlidXRlRXhwcmVzc2lvbjtcbm9ucy5vcmllbnRhdGlvbiA9IG9yaWVudGF0aW9uO1xub25zLm5vdGlmaWNhdGlvbiA9IG5vdGlmaWNhdGlvbjtcbm9ucy5fYW5pbWF0aW9uT3B0aW9uc1BhcnNlciA9IGFuaW1hdGlvbk9wdGlvbnNQYXJzZXI7XG5vbnMuX2F1dG9TdHlsZSA9IGF1dG9TdHlsZTtcbm9ucy5fRG9vckxvY2sgPSBEb29yTG9jaztcbm9ucy5fY29udGVudFJlYWR5ID0gY29udGVudFJlYWR5O1xub25zLmRlZmF1bHRQYWdlTG9hZGVyID0gZGVmYXVsdFBhZ2VMb2FkZXI7XG5vbnMuUGFnZUxvYWRlciA9IFBhZ2VMb2FkZXI7XG5vbnMuX0Jhc2VBbmltYXRvciA9IEJhc2VBbmltYXRvcjtcblxub25zLl9yZWFkeUxvY2sgPSBuZXcgRG9vckxvY2soKTtcblxub25zLnBsYXRmb3JtLnNlbGVjdCgod2luZG93LmxvY2F0aW9uLnNlYXJjaC5tYXRjaCgvcGxhdGZvcm09KFtcXHctXSspLykgfHwgW10pWzFdKTtcblxud2FpdERldmljZVJlYWR5KCk7XG5cbi8qKlxuICogQG1ldGhvZCBpc1JlYWR5XG4gKiBAc2lnbmF0dXJlIGlzUmVhZHkoKVxuICogQHJldHVybiB7Qm9vbGVhbn1cbiAqICAgW2VuXVdpbGwgYmUgdHJ1ZSBpZiBPbnNlbiBVSSBpcyBpbml0aWFsaXplZC5bL2VuXVxuICogICBbamFd5Yid5pyf5YyW44GV44KM44Gm44GE44KL44GL44Gp44GG44GL44KS6L+U44GX44G+44GZ44CCWy9qYV1cbiAqIEBkZXNjcmlwdGlvblxuICogICBbZW5dUmV0dXJucyB0cnVlIGlmIE9uc2VuIFVJIGlzIGluaXRpYWxpemVkLlsvZW5dXG4gKiAgIFtqYV1PbnNlbiBVSeOBjOOBmeOBp+OBq+WIneacn+WMluOBleOCjOOBpuOBhOOCi+OBi+OBqeOBhuOBi+OCkui/lOOBmeODoeOCveODg+ODieOBp+OBmeOAglsvamFdXG4gKi9cbm9ucy5pc1JlYWR5ID0gKCkgPT4ge1xuICByZXR1cm4gIW9ucy5fcmVhZHlMb2NrLmlzTG9ja2VkKCk7XG59O1xuXG4vKipcbiAqIEBtZXRob2QgaXNXZWJWaWV3XG4gKiBAc2lnbmF0dXJlIGlzV2ViVmlldygpXG4gKiBAcmV0dXJuIHtCb29sZWFufVxuICogICBbZW5dV2lsbCBiZSB0cnVlIGlmIHRoZSBhcHAgaXMgcnVubmluZyBpbiBDb3Jkb3ZhLlsvZW5dXG4gKiAgIFtqYV1Db3Jkb3Zh44Gn5a6f6KGM44GV44KM44Gm44GE44KL5aC05ZCI44GrdHJ1ZeOBq+OBquOCiuOBvuOBmeOAglsvamFdXG4gKiBAZGVzY3JpcHRpb25cbiAqICAgW2VuXVJldHVybnMgdHJ1ZSBpZiBydW5uaW5nIGluc2lkZSBDb3Jkb3ZhLlsvZW5dXG4gKiAgIFtqYV1Db3Jkb3Zh44Gn5a6f6KGM44GV44KM44Gm44GE44KL44GL44Gp44GG44GL44KS6L+U44GZ44Oh44K944OD44OJ44Gn44GZ44CCWy9qYV1cbiAqL1xub25zLmlzV2ViVmlldyA9IG9ucy5wbGF0Zm9ybS5pc1dlYlZpZXc7XG5cbi8qKlxuICogQG1ldGhvZCByZWFkeVxuICogQHNpZ25hdHVyZSByZWFkeShjYWxsYmFjaylcbiAqIEBkZXNjcmlwdGlvblxuICogICBbamFd44Ki44OX44Oq44Gu5Yid5pyf5YyW44Gr5Yip55So44GZ44KL44Oh44K944OD44OJ44Gn44GZ44CC5rih44GV44KM44Gf6Zai5pWw44Gv44CBT25zZW4gVUnjga7liJ3mnJ/ljJbjgYzntYLkuobjgZfjgabjgYTjgovmmYLngrnjgaflv4XjgZrlkbzjgbDjgozjgb7jgZnjgIJbL2phXVxuICogICBbZW5dTWV0aG9kIHVzZWQgdG8gd2FpdCBmb3IgYXBwIGluaXRpYWxpemF0aW9uLiBUaGUgY2FsbGJhY2sgd2lsbCBub3QgYmUgZXhlY3V0ZWQgdW50aWwgT25zZW4gVUkgaGFzIGJlZW4gY29tcGxldGVseSBpbml0aWFsaXplZC5bL2VuXVxuICogQHBhcmFtIHtGdW5jdGlvbn0gY2FsbGJhY2tcbiAqICAgW2VuXUZ1bmN0aW9uIHRoYXQgZXhlY3V0ZXMgYWZ0ZXIgT25zZW4gVUkgaGFzIGJlZW4gaW5pdGlhbGl6ZWQuWy9lbl1cbiAqICAgW2phXU9uc2VuIFVJ44GM5Yid5pyf5YyW44GM5a6M5LqG44GX44Gf5b6M44Gr5ZG844Gz5Ye644GV44KM44KL6Zai5pWw44Kq44OW44K444Kn44Kv44OI44KS5oyH5a6a44GX44G+44GZ44CCWy9qYV1cbiAqL1xub25zLnJlYWR5ID0gY2FsbGJhY2sgPT4ge1xuICBpZiAob25zLmlzUmVhZHkoKSkge1xuICAgIGNhbGxiYWNrKCk7XG4gIH0gZWxzZSB7XG4gICAgb25zLl9yZWFkeUxvY2sud2FpdFVubG9jayhjYWxsYmFjayk7XG4gIH1cbn07XG5cbi8qKlxuICogQG1ldGhvZCBzZXREZWZhdWx0RGV2aWNlQmFja0J1dHRvbkxpc3RlbmVyXG4gKiBAc2lnbmF0dXJlIHNldERlZmF1bHREZXZpY2VCYWNrQnV0dG9uTGlzdGVuZXIobGlzdGVuZXIpXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBsaXN0ZW5lclxuICogICBbZW5dRnVuY3Rpb24gdGhhdCBleGVjdXRlcyB3aGVuIGRldmljZSBiYWNrIGJ1dHRvbiBpcyBwcmVzc2VkLlsvZW5dXG4gKiAgIFtqYV3jg4fjg5DjgqTjgrnjga7jg5Djg4Pjgq/jg5zjgr/jg7PjgYzmirzjgZXjgozjgZ/mmYLjgavlrp/ooYzjgZXjgozjgovplqLmlbDjgqrjg5bjgrjjgqfjgq/jg4jjgpLmjIflrprjgZfjgb7jgZnjgIJbL2phXVxuICogQGRlc2NyaXB0aW9uXG4gKiAgIFtlbl1TZXQgZGVmYXVsdCBoYW5kbGVyIGZvciBkZXZpY2UgYmFjayBidXR0b24uWy9lbl1cbiAqICAgW2phXeODh+ODkOOCpOOCueOBruODkOODg+OCr+ODnOOCv+ODs+OBruOBn+OCgeOBruODh+ODleOCqeODq+ODiOOBruODj+ODs+ODieODqeOCkuioreWumuOBl+OBvuOBmeOAglsvamFdXG4gKi9cbm9ucy5zZXREZWZhdWx0RGV2aWNlQmFja0J1dHRvbkxpc3RlbmVyID0gZnVuY3Rpb24obGlzdGVuZXIpIHtcbiAgb25zLl9kZWZhdWx0RGV2aWNlQmFja0J1dHRvbkhhbmRsZXIuc2V0TGlzdGVuZXIobGlzdGVuZXIpO1xufTtcblxuLyoqXG4gKiBAbWV0aG9kIGRpc2FibGVEZXZpY2VCYWNrQnV0dG9uSGFuZGxlclxuICogQHNpZ25hdHVyZSBkaXNhYmxlRGV2aWNlQmFja0J1dHRvbkhhbmRsZXIoKVxuICogQGRlc2NyaXB0aW9uXG4gKiBbZW5dRGlzYWJsZSBkZXZpY2UgYmFjayBidXR0b24gZXZlbnQgaGFuZGxlci5bL2VuXVxuICogW2phXeODh+ODkOOCpOOCueOBruODkOODg+OCr+ODnOOCv+ODs+OBruOCpOODmeODs+ODiOOCkuWPl+OBkeS7mOOBkeOBquOBhOOCiOOBhuOBq+OBl+OBvuOBmeOAglsvamFdXG4gKi9cbm9ucy5kaXNhYmxlRGV2aWNlQmFja0J1dHRvbkhhbmRsZXIgPSBmdW5jdGlvbigpIHtcbiAgb25zLl9kZXZpY2VCYWNrQnV0dG9uRGlzcGF0Y2hlci5kaXNhYmxlKCk7XG59O1xuXG4vKipcbiAqIEBtZXRob2QgZW5hYmxlRGV2aWNlQmFja0J1dHRvbkhhbmRsZXJcbiAqIEBzaWduYXR1cmUgZW5hYmxlRGV2aWNlQmFja0J1dHRvbkhhbmRsZXIoKVxuICogQGRlc2NyaXB0aW9uXG4gKiBbZW5dRW5hYmxlIGRldmljZSBiYWNrIGJ1dHRvbiBldmVudCBoYW5kbGVyLlsvZW5dXG4gKiBbamFd44OH44OQ44Kk44K544Gu44OQ44OD44Kv44Oc44K/44Oz44Gu44Kk44OZ44Oz44OI44KS5Y+X44GR5LuY44GR44KL44KI44GG44Gr44GX44G+44GZ44CCWy9qYV1cbiAqL1xub25zLmVuYWJsZURldmljZUJhY2tCdXR0b25IYW5kbGVyID0gZnVuY3Rpb24oKSB7XG4gIG9ucy5fZGV2aWNlQmFja0J1dHRvbkRpc3BhdGNoZXIuZW5hYmxlKCk7XG59O1xuXG5cbi8qKlxuICogQG1ldGhvZCBlbmFibGVBdXRvU3RhdHVzQmFyRmlsbFxuICogQHNpZ25hdHVyZSBlbmFibGVBdXRvU3RhdHVzQmFyRmlsbCgpXG4gKiBAZGVzY3JpcHRpb25cbiAqICAgW2VuXUVuYWJsZSBzdGF0dXMgYmFyIGZpbGwgZmVhdHVyZSBvbiBpT1M3IGFuZCBhYm92ZS5bL2VuXVxuICogICBbamFdaU9TN+S7peS4iuOBp+OAgeOCueODhuODvOOCv+OCueODkOODvOmDqOWIhuOBrumrmOOBleOCkuiHquWLleeahOOBq+Wfi+OCgeOCi+WHpueQhuOCkuacieWKueOBq+OBl+OBvuOBmeOAglsvamFdXG4gKi9cbm9ucy5lbmFibGVBdXRvU3RhdHVzQmFyRmlsbCA9ICgpID0+IHtcbiAgaWYgKG9ucy5pc1JlYWR5KCkpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ1RoaXMgbWV0aG9kIG11c3QgYmUgY2FsbGVkIGJlZm9yZSBvbnMuaXNSZWFkeSgpIGlzIHRydWUuJyk7XG4gIH1cbiAgb25zLl9pbnRlcm5hbC5jb25maWcuYXV0b1N0YXR1c0JhckZpbGwgPSB0cnVlO1xufTtcblxuLyoqXG4gKiBAbWV0aG9kIGRpc2FibGVBdXRvU3RhdHVzQmFyRmlsbFxuICogQHNpZ25hdHVyZSBkaXNhYmxlQXV0b1N0YXR1c0JhckZpbGwoKVxuICogQGRlc2NyaXB0aW9uXG4gKiAgIFtlbl1EaXNhYmxlIHN0YXR1cyBiYXIgZmlsbCBmZWF0dXJlIG9uIGlPUzcgYW5kIGFib3ZlLlsvZW5dXG4gKiAgIFtqYV1pT1M35Lul5LiK44Gn44CB44K544OG44O844K/44K544OQ44O86YOo5YiG44Gu6auY44GV44KS6Ieq5YuV55qE44Gr5Z+L44KB44KL5Yem55CG44KS54Sh5Yq544Gr44GX44G+44GZ44CCWy9qYV1cbiAqL1xub25zLmRpc2FibGVBdXRvU3RhdHVzQmFyRmlsbCA9ICgpID0+IHtcbiAgaWYgKG9ucy5pc1JlYWR5KCkpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ1RoaXMgbWV0aG9kIG11c3QgYmUgY2FsbGVkIGJlZm9yZSBvbnMuaXNSZWFkeSgpIGlzIHRydWUuJyk7XG4gIH1cbiAgb25zLl9pbnRlcm5hbC5jb25maWcuYXV0b1N0YXR1c0JhckZpbGwgPSBmYWxzZTtcbn07XG5cbi8qKlxuICogQG1ldGhvZCBkaXNhYmxlQW5pbWF0aW9uc1xuICogQHNpZ25hdHVyZSBkaXNhYmxlQW5pbWF0aW9ucygpXG4gKiBAZGVzY3JpcHRpb25cbiAqICAgW2VuXURpc2FibGUgYWxsIGFuaW1hdGlvbnMuIENvdWxkIGJlIGhhbmR5IGZvciB0ZXN0aW5nIGFuZCBvbGRlciBkZXZpY2VzLlsvZW5dXG4gKiAgIFtqYV3jgqLjg4vjg6Hjg7zjgrfjg6fjg7PjgpLlhajjgabnhKHlirnjgavjgZfjgb7jgZnjgILjg4bjgrnjg4jjga7pmpvjgavkvr/liKnjgafjgZnjgIJbL2phXVxuICovXG5vbnMuZGlzYWJsZUFuaW1hdGlvbnMgPSAoKSA9PiB7XG4gIG9ucy5faW50ZXJuYWwuY29uZmlnLmFuaW1hdGlvbnNEaXNhYmxlZCA9IHRydWU7XG59O1xuXG4vKipcbiAqIEBtZXRob2QgZW5hYmxlQW5pbWF0aW9uc1xuICogQHNpZ25hdHVyZSBlbmFibGVBbmltYXRpb25zKClcbiAqIEBkZXNjcmlwdGlvblxuICogICBbZW5dRW5hYmxlIGFuaW1hdGlvbnMgKGRlZmF1bHQpLlsvZW5dXG4gKiAgIFtqYV3jgqLjg4vjg6Hjg7zjgrfjg6fjg7PjgpLmnInlirnjgavjgZfjgb7jgZnjgIJbL2phXVxuICovXG5vbnMuZW5hYmxlQW5pbWF0aW9ucyA9ICgpID0+IHtcbiAgb25zLl9pbnRlcm5hbC5jb25maWcuYW5pbWF0aW9uc0Rpc2FibGVkID0gZmFsc2U7XG59O1xuXG5vbnMuX2Rpc2FibGVXYXJuaW5ncyA9ICgpID0+IHtcbiAgb25zLl9pbnRlcm5hbC5jb25maWcud2FybmluZ3NEaXNhYmxlZCA9IHRydWU7XG59O1xuXG5vbnMuX2VuYWJsZVdhcm5pbmdzID0gKCkgPT4ge1xuICBvbnMuX2ludGVybmFsLmNvbmZpZy53YXJuaW5nc0Rpc2FibGVkID0gZmFsc2U7XG59O1xuXG4vKipcbiAqIEBtZXRob2QgZGlzYWJsZUF1dG9TdHlsaW5nXG4gKiBAc2lnbmF0dXJlIGRpc2FibGVBdXRvU3R5bGluZygpXG4gKiBAZGVzY3JpcHRpb25cbiAqICAgW2VuXURpc2FibGUgYXV0b21hdGljIHN0eWxpbmcuWy9lbl1cbiAqICAgW2phXVsvamFdXG4gKi9cbm9ucy5kaXNhYmxlQXV0b1N0eWxpbmcgPSBvbnMuX2F1dG9TdHlsZS5kaXNhYmxlO1xuXG4vKipcbiAqIEBtZXRob2QgZW5hYmxlQXV0b1N0eWxpbmdcbiAqIEBzaWduYXR1cmUgZW5hYmxlQXV0b1N0eWxpbmcoKVxuICogQGRlc2NyaXB0aW9uXG4gKiAgIFtlbl1FbmFibGUgYXV0b21hdGljIHN0eWxpbmcgYmFzZWQgb24gT1MgKGRlZmF1bHQpLlsvZW5dXG4gKiAgIFtqYV1bL2phXVxuICovXG5vbnMuZW5hYmxlQXV0b1N0eWxpbmcgPSBvbnMuX2F1dG9TdHlsZS5lbmFibGU7XG5cbi8qKlxuICogQG1ldGhvZCBmb3JjZVBsYXRmb3JtU3R5bGluZ1xuICogQHNpZ25hdHVyZSBmb3JjZVBsYXRmb3JtU3R5bGluZyhwbGF0Zm9ybSlcbiAqIEBkZXNjcmlwdGlvblxuICogICBbZW5dUmVmcmVzaCBzdHlsaW5nIGZvciB0aGUgZ2l2ZW4gcGxhdGZvcm0uWy9lbl1cbiAqICAgW2phXVsvamFdXG4gKiBAcGFyYW0ge3N0cmluZ30gcGxhdGZvcm0gTmV3IHBsYXRmb3JtIHRvIHN0eWxlIHRoZSBlbGVtZW50cy5cbiAqL1xub25zLmZvcmNlUGxhdGZvcm1TdHlsaW5nID0gbmV3UGxhdGZvcm0gPT4ge1xuICBvbnMuZW5hYmxlQXV0b1N0eWxpbmcoKTtcbiAgb25zLnBsYXRmb3JtLnNlbGVjdChuZXdQbGF0Zm9ybSB8fCAnaW9zJyk7XG5cbiAgb25zLl91dGlsLmFycmF5RnJvbShkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcqJykpXG4gICAgLmZvckVhY2goZnVuY3Rpb24oZWxlbWVudCkge1xuICAgICAgaWYgKGVsZW1lbnQudGFnTmFtZS50b0xvd2VyQ2FzZSgpID09PSAnb25zLWlmJykge1xuICAgICAgICBlbGVtZW50Ll9wbGF0Zm9ybVVwZGF0ZSgpO1xuICAgICAgfSBlbHNlIGlmIChlbGVtZW50LnRhZ05hbWUubWF0Y2goL15vbnMtL2kpKSB7XG4gICAgICAgIG9ucy5fYXV0b1N0eWxlLnByZXBhcmUoZWxlbWVudCwgdHJ1ZSk7XG4gICAgICAgIGlmIChlbGVtZW50LnRhZ05hbWUudG9Mb3dlckNhc2UoKSA9PT0gJ29ucy10YWJiYXInKSB7XG4gICAgICAgICAgZWxlbWVudC5fdXBkYXRlUG9zaXRpb24oKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0pO1xufTtcblxuLyoqXG4gKiBAcGFyYW0ge1N0cmluZ30gcGFnZVxuICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zXVxuICogQHBhcmFtIHtGdW5jdGlvbn0gW29wdGlvbnMubGlua11cbiAqIEByZXR1cm4ge1Byb21pc2V9XG4gKi9cbm9ucy5fY3JlYXRlUG9wb3Zlck9yaWdpbmFsID0gZnVuY3Rpb24ocGFnZSwgb3B0aW9ucyA9IHt9KSB7XG5cbiAgaWYgKCFwYWdlKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdQYWdlIHVybCBtdXN0IGJlIGRlZmluZWQuJyk7XG4gIH1cblxuICByZXR1cm4gb25zLl9pbnRlcm5hbC5nZXRQYWdlSFRNTEFzeW5jKHBhZ2UpLnRoZW4oaHRtbCA9PiB7XG4gICAgaHRtbCA9IGh0bWwubWF0Y2goLzxvbnMtcG9wb3Zlci9naSkgPyBgPGRpdj4ke2h0bWx9PC9kaXY+YCA6IGA8b25zLXBvcG92ZXI+JHtodG1sfTwvb25zLXBvcG92ZXI+YDtcbiAgICBjb25zdCBkaXYgPSBvbnMuX3V0aWwuY3JlYXRlRWxlbWVudCgnPGRpdj4nICsgaHRtbCArICc8L2Rpdj4nKTtcblxuICAgIGNvbnN0IHBvcG92ZXIgPSBkaXYucXVlcnlTZWxlY3Rvcignb25zLXBvcG92ZXInKTtcbiAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKHBvcG92ZXIpO1xuXG4gICAgaWYgKG9wdGlvbnMubGluayBpbnN0YW5jZW9mIEZ1bmN0aW9uKSB7XG4gICAgICBvcHRpb25zLmxpbmsocG9wb3Zlcik7XG4gICAgfVxuXG4gICAgcmV0dXJuIHBvcG92ZXI7XG4gIH0pO1xufTtcblxuLyoqXG4gKiBAbWV0aG9kIGNyZWF0ZVBvcG92ZXJcbiAqIEBzaWduYXR1cmUgY3JlYXRlUG9wb3ZlcihwYWdlLCBbb3B0aW9uc10pXG4gKiBAcGFyYW0ge1N0cmluZ30gcGFnZVxuICogICBbZW5dUGFnZSBuYW1lLiBDYW4gYmUgZWl0aGVyIGFuIEhUTUwgZmlsZSBvciBhbiA8b25zLXRlbXBsYXRlPiBjb250YWluaW5nIGEgPG9ucy1kaWFsb2c+IGNvbXBvbmVudC5bL2VuXVxuICogICBbamFdcGFnZeOBrlVSTOOBi+OAgeOCguOBl+OBj+OBr29ucy10ZW1wbGF0ZeOBp+Wuo+iogOOBl+OBn+ODhuODs+ODl+ODrOODvOODiOOBrmlk5bGe5oCn44Gu5YCk44KS5oyH5a6a44Gn44GN44G+44GZ44CCWy9qYV1cbiAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0aW9uc11cbiAqICAgW2VuXVBhcmFtZXRlciBvYmplY3QuWy9lbl1cbiAqICAgW2phXeOCquODl+OCt+ODp+ODs+OCkuaMh+WumuOBmeOCi+OCquODluOCuOOCp+OCr+ODiOOAglsvamFdXG4gKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnMucGFyZW50U2NvcGVdXG4gKiAgIFtlbl1QYXJlbnQgc2NvcGUgb2YgdGhlIGRpYWxvZy4gVXNlZCB0byBiaW5kIG1vZGVscyBhbmQgYWNjZXNzIHNjb3BlIG1ldGhvZHMgZnJvbSB0aGUgZGlhbG9nLlsvZW5dXG4gKiAgIFtqYV3jg4DjgqTjgqLjg63jgrDlhoXjgafliKnnlKjjgZnjgovopqrjgrnjgrPjg7zjg5fjgpLmjIflrprjgZfjgb7jgZnjgILjg4DjgqTjgqLjg63jgrDjgYvjgonjg6Ljg4fjg6vjgoTjgrnjgrPjg7zjg5fjga7jg6Hjgr3jg4Pjg4njgavjgqLjgq/jgrvjgrnjgZnjgovjga7jgavkvb/jgYTjgb7jgZnjgILjgZPjga7jg5Hjg6njg6Hjg7zjgr/jga9Bbmd1bGFySlPjg5DjgqTjg7Pjg4fjgqPjg7PjgrDjgafjga7jgb/liKnnlKjjgafjgY3jgb7jgZnjgIJbL2phXVxuICogQHJldHVybiB7UHJvbWlzZX1cbiAqICAgW2VuXVByb21pc2Ugb2JqZWN0IHRoYXQgcmVzb2x2ZXMgdG8gdGhlIHBvcG92ZXIgY29tcG9uZW50IG9iamVjdC5bL2VuXVxuICogICBbamFd44Od44OD44OX44Kq44O844OQ44O844Gu44Kz44Oz44Od44O844ON44Oz44OI44Kq44OW44K444Kn44Kv44OI44KS6Kej5rG644GZ44KLUHJvbWlzZeOCquODluOCuOOCp+OCr+ODiOOCkui/lOOBl+OBvuOBmeOAglsvamFdXG4gKiBAZGVzY3JpcHRpb25cbiAqICAgW2VuXUNyZWF0ZSBhIHBvcG92ZXIgaW5zdGFuY2UgZnJvbSBhIHRlbXBsYXRlLlsvZW5dXG4gKiAgIFtqYV3jg4bjg7Pjg5fjg6zjg7zjg4jjgYvjgonjg53jg4Pjg5fjgqrjg7zjg5Djg7zjga7jgqTjg7Pjgrnjgr/jg7PjgrnjgpLnlJ/miJDjgZfjgb7jgZnjgIJbL2phXVxuICovXG5vbnMuY3JlYXRlUG9wb3ZlciA9IG9ucy5fY3JlYXRlUG9wb3Zlck9yaWdpbmFsO1xuXG4vKipcbiAqIEBwYXJhbSB7U3RyaW5nfSBwYWdlXG4gKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnNdXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBbb3B0aW9ucy5saW5rXVxuICogQHJldHVybiB7UHJvbWlzZX1cbiAqL1xub25zLl9jcmVhdGVEaWFsb2dPcmlnaW5hbCA9IGZ1bmN0aW9uKHBhZ2UsIG9wdGlvbnMgPSB7fSkge1xuXG4gIGlmICghcGFnZSkge1xuICAgIHRocm93IG5ldyBFcnJvcignUGFnZSB1cmwgbXVzdCBiZSBkZWZpbmVkLicpO1xuICB9XG5cbiAgcmV0dXJuIG9ucy5faW50ZXJuYWwuZ2V0UGFnZUhUTUxBc3luYyhwYWdlKS50aGVuKGh0bWwgPT4ge1xuICAgIGh0bWwgPSBodG1sLm1hdGNoKC88b25zLWRpYWxvZy9naSkgPyBgPGRpdj4ke2h0bWx9PC9kaXY+YCA6IGA8b25zLWRpYWxvZz4ke2h0bWx9PC9vbnMtZGlhbG9nPmA7XG4gICAgY29uc3QgZGl2ID0gb25zLl91dGlsLmNyZWF0ZUVsZW1lbnQoJzxkaXY+JyArIGh0bWwgKyAnPC9kaXY+Jyk7XG5cbiAgICBjb25zdCBkaWFsb2cgPSBkaXYucXVlcnlTZWxlY3Rvcignb25zLWRpYWxvZycpO1xuICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoZGlhbG9nKTtcblxuICAgIGlmIChvcHRpb25zLmxpbmsgaW5zdGFuY2VvZiBGdW5jdGlvbikge1xuICAgICAgb3B0aW9ucy5saW5rKGRpYWxvZyk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGRpYWxvZztcbiAgfSk7XG59O1xuXG4vKipcbiAqIEBtZXRob2QgY3JlYXRlRGlhbG9nXG4gKiBAc2lnbmF0dXJlIGNyZWF0ZURpYWxvZyhwYWdlLCBbb3B0aW9uc10pXG4gKiBAcGFyYW0ge1N0cmluZ30gcGFnZVxuICogICBbZW5dUGFnZSBuYW1lLiBDYW4gYmUgZWl0aGVyIGFuIEhUTUwgZmlsZSBvciBhbiA8b25zLXRlbXBsYXRlPiBjb250YWluaW5nIGEgPG9ucy1kaWFsb2c+IGNvbXBvbmVudC5bL2VuXVxuICogICBbamFdcGFnZeOBrlVSTOOBi+OAgeOCguOBl+OBj+OBr29ucy10ZW1wbGF0ZeOBp+Wuo+iogOOBl+OBn+ODhuODs+ODl+ODrOODvOODiOOBrmlk5bGe5oCn44Gu5YCk44KS5oyH5a6a44Gn44GN44G+44GZ44CCWy9qYV1cbiAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0aW9uc11cbiAqICAgW2VuXVBhcmFtZXRlciBvYmplY3QuWy9lbl1cbiAqICAgW2phXeOCquODl+OCt+ODp+ODs+OCkuaMh+WumuOBmeOCi+OCquODluOCuOOCp+OCr+ODiOOAglsvamFdXG4gKiBAcmV0dXJuIHtQcm9taXNlfVxuICogICBbZW5dUHJvbWlzZSBvYmplY3QgdGhhdCByZXNvbHZlcyB0byB0aGUgZGlhbG9nIGNvbXBvbmVudCBvYmplY3QuWy9lbl1cbiAqICAgW2phXeODgOOCpOOCouODreOCsOOBruOCs+ODs+ODneODvOODjeODs+ODiOOCquODluOCuOOCp+OCr+ODiOOCkuino+axuuOBmeOCi1Byb21pc2Xjgqrjg5bjgrjjgqfjgq/jg4jjgpLov5TjgZfjgb7jgZnjgIJbL2phXVxuICogQGRlc2NyaXB0aW9uXG4gKiAgIFtlbl1DcmVhdGUgYSBkaWFsb2cgaW5zdGFuY2UgZnJvbSBhIHRlbXBsYXRlLlsvZW5dXG4gKiAgIFtqYV3jg4bjg7Pjg5fjg6zjg7zjg4jjgYvjgonjg4DjgqTjgqLjg63jgrDjga7jgqTjg7Pjgrnjgr/jg7PjgrnjgpLnlJ/miJDjgZfjgb7jgZnjgIJbL2phXVxuICovXG5vbnMuY3JlYXRlRGlhbG9nID0gb25zLl9jcmVhdGVEaWFsb2dPcmlnaW5hbDtcblxuLyoqXG4gKiBAcGFyYW0ge1N0cmluZ30gcGFnZVxuICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zXVxuICogQHBhcmFtIHtGdW5jdGlvbn0gW29wdGlvbnMubGlua11cbiAqIEByZXR1cm4ge1Byb21pc2V9XG4gKi9cbm9ucy5fY3JlYXRlQWxlcnREaWFsb2dPcmlnaW5hbCA9IGZ1bmN0aW9uKHBhZ2UsIG9wdGlvbnMgPSB7fSkge1xuXG4gIGlmICghcGFnZSkge1xuICAgIHRocm93IG5ldyBFcnJvcignUGFnZSB1cmwgbXVzdCBiZSBkZWZpbmVkLicpO1xuICB9XG5cbiAgcmV0dXJuIG9ucy5faW50ZXJuYWwuZ2V0UGFnZUhUTUxBc3luYyhwYWdlKS50aGVuKGh0bWwgPT4ge1xuICAgIGh0bWwgPSBodG1sLm1hdGNoKC88b25zLWFsZXJ0LWRpYWxvZy9naSkgPyBgPGRpdj4ke2h0bWx9PC9kaXY+YCA6IGA8b25zLWFsZXJ0LWRpYWxvZz4ke2h0bWx9PC9vbnMtYWxlcnQtZGlhbG9nPmA7XG4gICAgY29uc3QgZGl2ID0gb25zLl91dGlsLmNyZWF0ZUVsZW1lbnQoJzxkaXY+JyArIGh0bWwgKyAnPC9kaXY+Jyk7XG5cbiAgICBjb25zdCBhbGVydERpYWxvZyA9IGRpdi5xdWVyeVNlbGVjdG9yKCdvbnMtYWxlcnQtZGlhbG9nJyk7XG4gICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChhbGVydERpYWxvZyk7XG5cbiAgICBpZiAob3B0aW9ucy5saW5rIGluc3RhbmNlb2YgRnVuY3Rpb24pIHtcbiAgICAgIG9wdGlvbnMubGluayhhbGVydERpYWxvZyk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGFsZXJ0RGlhbG9nO1xuICB9KTtcbn07XG5cbi8qKlxuICogQG1ldGhvZCBjcmVhdGVBbGVydERpYWxvZ1xuICogQHNpZ25hdHVyZSBjcmVhdGVBbGVydERpYWxvZyhwYWdlLCBbb3B0aW9uc10pXG4gKiBAcGFyYW0ge1N0cmluZ30gcGFnZVxuICogICBbZW5dUGFnZSBuYW1lLiBDYW4gYmUgZWl0aGVyIGFuIEhUTUwgZmlsZSBvciBhbiA8b25zLXRlbXBsYXRlPiBjb250YWluaW5nIGEgPG9ucy1hbGVydC1kaWFsb2c+IGNvbXBvbmVudC5bL2VuXVxuICogICBbamFdcGFnZeOBrlVSTOOBi+OAgeOCguOBl+OBj+OBr29ucy10ZW1wbGF0ZeOBp+Wuo+iogOOBl+OBn+ODhuODs+ODl+ODrOODvOODiOOBrmlk5bGe5oCn44Gu5YCk44KS5oyH5a6a44Gn44GN44G+44GZ44CCWy9qYV1cbiAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0aW9uc11cbiAqICAgW2VuXVBhcmFtZXRlciBvYmplY3QuWy9lbl1cbiAqICAgW2phXeOCquODl+OCt+ODp+ODs+OCkuaMh+WumuOBmeOCi+OCquODluOCuOOCp+OCr+ODiOOAglsvamFdXG4gKiBAcmV0dXJuIHtQcm9taXNlfVxuICogICBbZW5dUHJvbWlzZSBvYmplY3QgdGhhdCByZXNvbHZlcyB0byB0aGUgYWxlcnQgZGlhbG9nIGNvbXBvbmVudCBvYmplY3QuWy9lbl1cbiAqICAgW2phXeODgOOCpOOCouODreOCsOOBruOCs+ODs+ODneODvOODjeODs+ODiOOCquODluOCuOOCp+OCr+ODiOOCkuino+axuuOBmeOCi1Byb21pc2Xjgqrjg5bjgrjjgqfjgq/jg4jjgpLov5TjgZfjgb7jgZnjgIJbL2phXVxuICogQGRlc2NyaXB0aW9uXG4gKiAgIFtlbl1DcmVhdGUgYSBhbGVydCBkaWFsb2cgaW5zdGFuY2UgZnJvbSBhIHRlbXBsYXRlLlsvZW5dXG4gKiAgIFtqYV3jg4bjg7Pjg5fjg6zjg7zjg4jjgYvjgonjgqLjg6njg7zjg4jjg4DjgqTjgqLjg63jgrDjga7jgqTjg7Pjgrnjgr/jg7PjgrnjgpLnlJ/miJDjgZfjgb7jgZnjgIJbL2phXVxuICovXG5vbnMuY3JlYXRlQWxlcnREaWFsb2cgPSBvbnMuX2NyZWF0ZUFsZXJ0RGlhbG9nT3JpZ2luYWw7XG5cbi8qKlxuICogQHBhcmFtIHtTdHJpbmd9IHBhZ2VcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGxpbmtcbiAqL1xub25zLl9yZXNvbHZlTG9hZGluZ1BsYWNlaG9sZGVyT3JpZ2luYWwgPSBmdW5jdGlvbihwYWdlLCBsaW5rKSB7XG4gIGNvbnN0IGVsZW1lbnRzID0gb25zLl91dGlsLmFycmF5RnJvbSh3aW5kb3cuZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnW29ucy1sb2FkaW5nLXBsYWNlaG9sZGVyXScpKTtcblxuICBpZiAoZWxlbWVudHMubGVuZ3RoID4gMCkge1xuICAgIGVsZW1lbnRzXG4gICAgICAuZmlsdGVyKGVsZW1lbnQgPT4gIWVsZW1lbnQuZ2V0QXR0cmlidXRlKCdwYWdlJykpXG4gICAgICAuZm9yRWFjaChlbGVtZW50ID0+IHtcbiAgICAgICAgZWxlbWVudC5zZXRBdHRyaWJ1dGUoJ29ucy1sb2FkaW5nLXBsYWNlaG9sZGVyJywgcGFnZSk7XG4gICAgICAgIG9ucy5fcmVzb2x2ZUxvYWRpbmdQbGFjZWhvbGRlcihlbGVtZW50LCBwYWdlLCBsaW5rKTtcbiAgICAgIH0pO1xuICB9IGVsc2Uge1xuICAgIHRocm93IG5ldyBFcnJvcignTm8gb25zLWxvYWRpbmctcGxhY2Vob2xkZXIgZXhpc3RzLicpO1xuICB9XG59O1xuXG4vKipcbiAqIEBtZXRob2QgcmVzb2x2ZUxvYWRpbmdQbGFjZWhvbGRlclxuICogQHNpZ25hdHVyZSByZXNvbHZlTG9hZGluZ1BsYWNlaG9sZGVyKHBhZ2UpXG4gKiBAcGFyYW0ge1N0cmluZ30gcGFnZVxuICogICBbZW5dUGFnZSBuYW1lLiBDYW4gYmUgZWl0aGVyIGFuIEhUTUwgZmlsZSBvciBhbiA8b25zLXRlbXBsYXRlPiBlbGVtZW50LlsvZW5dXG4gKiAgIFtqYV1wYWdl44GuVVJM44GL44CB44KC44GX44GP44Gvb25zLXRlbXBsYXRl44Gn5a6j6KiA44GX44Gf44OG44Oz44OX44Os44O844OI44GuaWTlsZ7mgKfjga7lgKTjgpLmjIflrprjgafjgY3jgb7jgZnjgIJbL2phXVxuICogQGRlc2NyaXB0aW9uXG4gKiAgIFtlbl1JZiBubyBwYWdlIGlzIGRlZmluZWQgZm9yIHRoZSBgb25zLWxvYWRpbmctcGxhY2Vob2xkZXJgIGF0dHJpYnV0ZSBpdCB3aWxsIHdhaXQgZm9yIHRoaXMgbWV0aG9kIGJlaW5nIGNhbGxlZCBiZWZvcmUgbG9hZGluZyB0aGUgcGFnZS5bL2VuXVxuICogICBbamFdb25zLWxvYWRpbmctcGxhY2Vob2xkZXLjga7lsZ7mgKflgKTjgajjgZfjgabjg5rjg7zjgrjjgYzmjIflrprjgZXjgozjgabjgYTjgarjgYTloLTlkIjjga/jgIHjg5rjg7zjgrjjg63jg7zjg4nliY3jgavlkbzjgbDjgozjgotvbnMucmVzb2x2ZUxvYWRpbmdQbGFjZWhvbGRlcuWHpueQhuOBjOihjOOCj+OCjOOCi+OBvuOBp+ihqOekuuOBleOCjOOBvuOBm+OCk+OAglsvamFdXG4gKi9cbm9ucy5yZXNvbHZlTG9hZGluZ1BsYWNlaG9sZGVyID0gb25zLl9yZXNvbHZlTG9hZGluZ1BsYWNlaG9sZGVyT3JpZ2luYWw7XG5cbm9ucy5fc2V0dXBMb2FkaW5nUGxhY2VIb2xkZXJzID0gZnVuY3Rpb24oKSB7XG4gIG9ucy5yZWFkeSgoKSA9PiB7XG4gICAgY29uc3QgZWxlbWVudHMgPSBvbnMuX3V0aWwuYXJyYXlGcm9tKHdpbmRvdy5kb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCdbb25zLWxvYWRpbmctcGxhY2Vob2xkZXJdJykpO1xuXG4gICAgZWxlbWVudHMuZm9yRWFjaChlbGVtZW50ID0+IHtcbiAgICAgIGNvbnN0IHBhZ2UgPSBlbGVtZW50LmdldEF0dHJpYnV0ZSgnb25zLWxvYWRpbmctcGxhY2Vob2xkZXInKTtcbiAgICAgIGlmICh0eXBlb2YgcGFnZSA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgb25zLl9yZXNvbHZlTG9hZGluZ1BsYWNlaG9sZGVyKGVsZW1lbnQsIHBhZ2UpO1xuICAgICAgfVxuICAgIH0pO1xuICB9KTtcbn07XG5cbm9ucy5fcmVzb2x2ZUxvYWRpbmdQbGFjZWhvbGRlciA9IGZ1bmN0aW9uKGVsZW1lbnQsIHBhZ2UsIGxpbmspIHtcbiAgbGluayA9IGxpbmsgfHwgZnVuY3Rpb24oZWxlbWVudCwgZG9uZSkgeyBkb25lKCk7IH07XG4gIG9ucy5faW50ZXJuYWwuZ2V0UGFnZUhUTUxBc3luYyhwYWdlKS50aGVuKGh0bWwgPT4ge1xuXG4gICAgd2hpbGUgKGVsZW1lbnQuZmlyc3RDaGlsZCkge1xuICAgICAgZWxlbWVudC5yZW1vdmVDaGlsZChlbGVtZW50LmZpcnN0Q2hpbGQpO1xuICAgIH1cblxuICAgIGNvbnN0IGNvbnRlbnRFbGVtZW50ID0gb25zLl91dGlsLmNyZWF0ZUVsZW1lbnQoJzxkaXY+JyArIGh0bWwgKyAnPC9kaXY+Jyk7XG4gICAgY29udGVudEVsZW1lbnQuc3R5bGUuZGlzcGxheSA9ICdub25lJztcblxuICAgIGVsZW1lbnQuYXBwZW5kQ2hpbGQoY29udGVudEVsZW1lbnQpO1xuXG4gICAgbGluayhjb250ZW50RWxlbWVudCwgZnVuY3Rpb24oKSB7XG4gICAgICBjb250ZW50RWxlbWVudC5zdHlsZS5kaXNwbGF5ID0gJyc7XG4gICAgfSk7XG5cbiAgfSkuY2F0Y2goZXJyb3IgPT4ge1xuICAgIHRocm93IG5ldyBFcnJvcignVW5hYmxlZCB0byByZXNvbHZlIHBsYWNlaG9sZGVyOiAnICsgZXJyb3IpO1xuICB9KTtcbn07XG5cbmZ1bmN0aW9uIHdhaXREZXZpY2VSZWFkeSgpIHtcbiAgY29uc3QgdW5sb2NrRGV2aWNlUmVhZHkgPSBvbnMuX3JlYWR5TG9jay5sb2NrKCk7XG4gIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdET01Db250ZW50TG9hZGVkJywgKCkgPT4ge1xuICAgIGlmIChvbnMuaXNXZWJWaWV3KCkpIHtcbiAgICAgIHdpbmRvdy5kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdkZXZpY2VyZWFkeScsIHVubG9ja0RldmljZVJlYWR5LCBmYWxzZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHVubG9ja0RldmljZVJlYWR5KCk7XG4gICAgfVxuICB9LCBmYWxzZSk7XG59XG5cbndpbmRvdy5fc3VwZXJTZWNyZXRPbnMgPSBvbnM7XG5leHBvcnQgZGVmYXVsdCBvbnM7XG4iLCIvKlxuQ29weXJpZ2h0IDIwMTMtMjAxNSBBU0lBTCBDT1JQT1JBVElPTlxuXG5MaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xueW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG5cbiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuXG5Vbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG5kaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG5XSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cblNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbmxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuXG4qL1xuXG5mdW5jdGlvbiBnZXRFbGVtZW50Q2xhc3MoKSB7XG4gIGlmICh0eXBlb2YgSFRNTEVsZW1lbnQgIT09ICdmdW5jdGlvbicpIHsgLy8gY2FzZSBvZiBTYWZhcmlcbiAgICBjb25zdCBCYXNlRWxlbWVudCA9ICgpID0+IHt9O1xuICAgIEJhc2VFbGVtZW50LnByb3RvdHlwZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIHJldHVybiBCYXNlRWxlbWVudDtcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gSFRNTEVsZW1lbnQ7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQmFzZUVsZW1lbnQgZXh0ZW5kcyBnZXRFbGVtZW50Q2xhc3MoKSB7XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy5pbml0KCk7XG4gIH1cblxuICBpbml0KCkgeyB9XG59XG4iLCIvKlxuQ29weXJpZ2h0IDIwMTMtMjAxNSBBU0lBTCBDT1JQT1JBVElPTlxuXG5MaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xueW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG5cbiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuXG5Vbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG5kaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG5XSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cblNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbmxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuXG4qL1xuXG5pbXBvcnQgdXRpbCBmcm9tICcuLi9vbnMvdXRpbCc7XG5pbXBvcnQgQmFzZUVsZW1lbnQgZnJvbSAnLi4vb25zL2Jhc2UtZWxlbWVudCc7XG5cbi8qKlxuICogQGVsZW1lbnQgb25zLXRlbXBsYXRlXG4gKiBAY2F0ZWdvcnkgdXRpbFxuICogQGRlc2NyaXB0aW9uXG4gKiAgIFtlbl1cbiAqICAgICBEZWZpbmUgYSBzZXBhcmF0ZSBIVE1MIGZyYWdtZW50IGFuZCB1c2UgYXMgYSB0ZW1wbGF0ZS5cbiAqXG4gKiAgICAgVGhlc2UgdGVtcGxhdGVzIGNhbiBiZSBsb2FkZWQgYXMgcGFnZXMgaW4gYDxvbnMtbmF2aWdhdG9yPmAsIGA8b25zLXRhYmJhcj5gIGFuZCBgPG9ucy1zcGxpdHRlcj5gLiBUaGV5IGNhbiBhbHNvIGJlIHVzZWQgdG8gZ2VuZXJhdGUgZGlhbG9ncy5cbiAqICAgWy9lbl1cbiAqICAgW2phXeODhuODs+ODl+ODrOODvOODiOOBqOOBl+OBpuS9v+eUqOOBmeOCi+OBn+OCgeOBrkhUTUzjg5Xjg6njgrDjg6Hjg7Pjg4jjgpLlrprnvqnjgZfjgb7jgZnjgILjgZPjga7opoHntKDjgadIVE1M44KS5a6j6KiA44GZ44KL44Go44CBaWTlsZ7mgKfjgavmjIflrprjgZfjgZ/lkI3liY3jgpJwYWdl44GuVVJM44Go44GX44Gmb25zLW5hdmlnYXRvcuOBquOBqeOBruOCs+ODs+ODneODvOODjeODs+ODiOOBi+OCieWPgueFp+OBp+OBjeOBvuOBmeOAglsvamFdXG4gKiBAZ3VpZGUgdGVtcGxhdGVzXG4gKiAgIFtlbl1EZWZpbmluZyBtdWx0aXBsZSBwYWdlcyBpbiBzaW5nbGUgaHRtbFsvZW5dXG4gKiAgIFtqYV3opIfmlbDjga7jg5rjg7zjgrjjgpIx44Gk44GuSFRNTOOBq+iomOi/sOOBmeOCi1svamFdXG4gKiBAc2VlYWxzbyBvbnMtbmF2aWdhdG9yXG4gKiAgIFtlbl1UaGUgYDxvbnMtbmF2aWdhdG9yPmAgY29tcG9uZW50IGVuYWJsZXMgc3RhY2sgYmFzZWQgbmF2aWdhdGlvbi5bL2VuXVxuICogICBbamFdWy9qYV1cbiAqIEBzZWVhbHNvIG9ucy10YWJiYXJcbiAqICAgW2VuXVRoZSBgPG9ucy10YWJiYXI+YCBjb21wb25lbnQgaXMgdXNlZCB0byBhZGQgdGFiIG5hdmlnYXRpb24uWy9lbl1cbiAqICAgW2phXVsvamFdXG4gKiBAc2VlYWxzbyBvbnMtc3BsaXR0ZXJcbiAqICAgW2VuXVRoZSBgPG9ucy1zcGxpdHRlcj5gIGNvbXBvbmVudCBjYW4gYmUgdXNlZCB0byBjcmVhdGUgYSBkcmFnZ2FibGUgbWVudSBvciBjb2x1bW4gYmFzZWQgbGF5b3V0LlsvZW5dXG4gKiAgIFtqYV1bL2phXVxuICogQGV4YW1wbGVcbiAqIDxvbnMtdGVtcGxhdGUgaWQ9XCJmb29iYXIuaHRtbFwiPlxuICogICA8b25zLXBhZ2U+XG4gKiAgICAgUGFnZSBjb250ZW50XG4gKiAgIDwvb25zLXBhZ2U+XG4gKiA8L29ucy10ZW1wbGF0ZT5cbiAqXG4gKiA8b25zLW5hdmlnYXRvciBwYWdlPVwiZm9vYmFyLmh0bWxcIj5cbiAqIDwvb25zLW5hdmlnYXRvcj5cbiAqL1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVGVtcGxhdGVFbGVtZW50IGV4dGVuZHMgQmFzZUVsZW1lbnQge1xuXG4gIC8qKlxuICAgKiBAcHJvcGVydHkgdGVtcGxhdGVcbiAgICogQHR5cGUge1N0cmluZ31cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICBbZW5dVGVtcGxhdGUgY29udGVudC4gVGhpcyBwcm9wZXJ0eSBjYW4gbm90IGJlIHVzZWQgd2l0aCBBbmd1bGFySlMgYmluZGluZ3MuWy9lbl1cbiAgICogIFtqYV1bL2phXVxuICAgKi9cblxuICBpbml0KCkge1xuICAgIHRoaXMudGVtcGxhdGUgPSB0aGlzLmlubmVySFRNTDtcblxuICAgIHdoaWxlICh0aGlzLmZpcnN0Q2hpbGQpIHtcbiAgICAgIHRoaXMucmVtb3ZlQ2hpbGQodGhpcy5maXJzdENoaWxkKTtcbiAgICB9XG4gIH1cblxuICBjb25uZWN0ZWRDYWxsYmFjaygpIHtcbiAgICBpZiAodGhpcy5wYXJlbnROb2RlKSB7IC8vIE5vdGU6IHRoaXMucGFyZW50Tm9kZSBpcyBub3Qgc2V0IGluIHNvbWUgQ0UwL0NFMSBwb2x5ZmlsbHMuXG4gICAgICAvLyBTaG93IHdhcm5pbmcgd2hlbiB0aGUgb25zLXRlbXBsYXRlIGlzIG5vdCBsb2NhdGVkIGp1c3QgdW5kZXIgZG9jdW1lbnQuYm9keVxuICAgICAgaWYgKHRoaXMucGFyZW50Tm9kZSAhPT0gZG9jdW1lbnQuYm9keSkgeyAvLyBpZiB0aGUgcGFyZW50IGlzIG5vdCBkb2N1bWVudC5ib2R5XG4gICAgICAgIHV0aWwud2Fybihgb25zLXRlbXBsYXRlIChpZCA9ICR7dGhpcy5nZXRBdHRyaWJ1dGUoJ2lkJyl9KSBtdXN0IGJlIGxvY2F0ZWQganVzdCB1bmRlciBkb2N1bWVudC5ib2R5JHsgdGhpcy5wYXJlbnROb2RlLm91dGVySFRNTCA/IGA6XFxuXFxuJHt0aGlzLnBhcmVudE5vZGUub3V0ZXJIVE1MfWAgOiAnLicgfWApO1xuICAgICAgfVxuICAgIH1cblxuICAgIHZhciBldmVudCA9IG5ldyBDdXN0b21FdmVudCgnX3RlbXBsYXRlbG9hZGVkJywge2J1YmJsZXM6IHRydWUsIGNhbmNlbGFibGU6IHRydWV9KTtcbiAgICBldmVudC50ZW1wbGF0ZSA9IHRoaXMudGVtcGxhdGU7XG4gICAgZXZlbnQudGVtcGxhdGVJZCA9IHRoaXMuZ2V0QXR0cmlidXRlKCdpZCcpO1xuXG4gICAgdGhpcy5kaXNwYXRjaEV2ZW50KGV2ZW50KTtcbiAgfVxufVxuXG5jdXN0b21FbGVtZW50cy5kZWZpbmUoJ29ucy10ZW1wbGF0ZScsIFRlbXBsYXRlRWxlbWVudCk7XG4iLCIvKlxuQ29weXJpZ2h0IDIwMTMtMjAxNSBBU0lBTCBDT1JQT1JBVElPTlxuXG5MaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xueW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG5cbiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuXG5Vbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG5kaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG5XSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cblNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbmxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuXG4qL1xuXG5pbXBvcnQgb3JpZW50YXRpb24gZnJvbSAnLi4vb25zL29yaWVudGF0aW9uJztcbmltcG9ydCBwbGF0Zm9ybSBmcm9tICcuLi9vbnMvcGxhdGZvcm0nO1xuaW1wb3J0IEJhc2VFbGVtZW50IGZyb20gJy4uL29ucy9iYXNlLWVsZW1lbnQnO1xuaW1wb3J0IGNvbnRlbnRSZWFkeSBmcm9tICcuLi9vbnMvY29udGVudC1yZWFkeSc7XG5cbi8qKlxuICogQGVsZW1lbnQgb25zLWlmXG4gKiBAY2F0ZWdvcnkgY29uZGl0aW9uYWxcbiAqIEB0dXRvcmlhbCB2YW5pbGxhL1JlZmVyZW5jZS9pZlxuICogQGRlc2NyaXB0aW9uXG4gKiAgIFtlbl1cbiAqICAgICBDb25kaXRpb25hbGx5IGRpc3BsYXkgY29udGVudCBkZXBlbmRpbmcgb24gdGhlIHBsYXRmb3JtLCBkZXZpY2Ugb3JpZW50YXRpb24gb3IgYm90aC5cbiAqXG4gKiAgICAgU29tZXRpbWVzIGl0IGlzIHVzZWZ1bCB0byBjb25kaXRpb25hbGx5IGhpZGUgb3Igc2hvdyBjZXJ0YWluIGNvbXBvbmVudHMgYmFzZWQgb24gcGxhdGZvcm0uIFdoZW4gcnVubmluZyBvbiBpT1MgdGhlIGA8b25zLWlmPmAgZWxlbWVudCBjYW4gYmUgdXNlZCB0byBoaWRlIHRoZSBgPG9ucy1mYWI+YCBlbGVtZW50LlxuICogICBbL2VuXVxuICogICBbamFdWy9qYV1cbiAqIEBndWlkZSBjcm9zcy1wbGF0Zm9ybS1zdHlsaW5nIFtlbl1JbmZvcm1hdGlvbiBhYm91dCBjcm9zcyBwbGF0Zm9ybSBzdHlsaW5nWy9lbl1bamFdSW5mb3JtYXRpb24gYWJvdXQgY3Jvc3MgcGxhdGZvcm0gc3R5bGluZ1svamFdXG4gKiBAZXhhbXBsZVxuICogPG9ucy1wYWdlPlxuICogICA8b25zLWlmIG9yaWVudGF0aW9uPVwibGFuZHNjYXBlXCI+XG4gKiAgICAgTGFuZHNjYXBlIHZpZXchXG4gKiAgIDwvb25zLWlmPlxuICogICA8b25zLWlmIHBsYXRmb3JtPVwiYW5kcm9pZFwiPlxuICogICAgIFRoaXMgaXMgQW5kcm9pZC5cbiAqICAgPC9vbnMtaWY+XG4gKiAgIDxvbnMtaWYgcGxhdGZvcm09XCJpb3Mgb3RoZXJcIj5cbiAqICAgICBUaGlzIGlzIG5vdCBBbmRyb2lkLlxuICogICA8L29ucy1pZj5cbiAqIDwvb25zLXBhZ2U+XG4gKi9cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIElmRWxlbWVudCBleHRlbmRzIEJhc2VFbGVtZW50IHtcblxuICAvKipcbiAgICogQGF0dHJpYnV0ZSBwbGF0Zm9ybVxuICAgKiBAaW5pdG9ubHlcbiAgICogQHR5cGUge3N0cmluZ31cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICBbZW5dU3BhY2Utc2VwYXJhdGVkIHBsYXRmb3JtIG5hbWVzLiBQb3NzaWJsZSB2YWx1ZXMgYXJlIGBcImlvc1wiYCwgYFwiYW5kcm9pZFwiYCwgYFwid2luZG93c1wiYCBhbmQgYFwib3RoZXJcImAuWy9lbl1cbiAgICogIFtqYV1bL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQGF0dHJpYnV0ZSBvcmllbnRhdGlvblxuICAgKiBAdHlwZSB7c3RyaW5nfVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogIFtlbl1FaXRoZXIgYFwicG9ydHJhaXRcImAgb3IgYFwibGFuZHNjYXBlXCJgLlsvZW5dXG4gICAqICBbamFdcG9ydHJhaXTjgoLjgZfjgY/jga9sYW5kc2NhcGXjgpLmjIflrprjgZfjgb7jgZlbL2phXVxuICAgKi9cblxuICBpbml0KCkge1xuICAgIGNvbnRlbnRSZWFkeSh0aGlzLCAoKSA9PiB7XG4gICAgICBpZiAocGxhdGZvcm0uX3JlbmRlclBsYXRmb3JtICE9PSBudWxsKSB7XG4gICAgICAgIHRoaXMuX3BsYXRmb3JtVXBkYXRlKCk7XG4gICAgICB9IGVsc2UgaWYgKCF0aGlzLl9pc0FsbG93ZWRQbGF0Zm9ybSgpKSB7XG4gICAgICAgIHdoaWxlICh0aGlzLmNoaWxkTm9kZXNbMF0pIHtcbiAgICAgICAgICB0aGlzLmNoaWxkTm9kZXNbMF0ucmVtb3ZlKCk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5fcGxhdGZvcm1VcGRhdGUoKTtcbiAgICAgIH1cbiAgICB9KTtcblxuICAgIHRoaXMuX29uT3JpZW50YXRpb25DaGFuZ2UoKTtcbiAgfVxuXG4gIGNvbm5lY3RlZENhbGxiYWNrKCkge1xuICAgIG9yaWVudGF0aW9uLm9uKCdjaGFuZ2UnLCB0aGlzLl9vbk9yaWVudGF0aW9uQ2hhbmdlLmJpbmQodGhpcykpO1xuICB9XG5cbiAgc3RhdGljIGdldCBvYnNlcnZlZEF0dHJpYnV0ZXMoKSB7XG4gICAgcmV0dXJuIFsnb3JpZW50YXRpb24nXTtcbiAgfVxuXG4gIGF0dHJpYnV0ZUNoYW5nZWRDYWxsYmFjayhuYW1lKSB7XG4gICAgaWYgKG5hbWUgPT09ICdvcmllbnRhdGlvbicpIHtcbiAgICAgIHRoaXMuX29uT3JpZW50YXRpb25DaGFuZ2UoKTtcbiAgICB9XG4gIH1cblxuICBkaXNjb25uZWN0ZWRDYWxsYmFjaygpIHtcbiAgICBvcmllbnRhdGlvbi5vZmYoJ2NoYW5nZScsIHRoaXMuX29uT3JpZW50YXRpb25DaGFuZ2UpO1xuICB9XG5cbiAgX3BsYXRmb3JtVXBkYXRlKCkge1xuICAgIHRoaXMuc3R5bGUuZGlzcGxheSA9IHRoaXMuX2lzQWxsb3dlZFBsYXRmb3JtKCkgPyAnJyA6ICdub25lJztcbiAgfVxuXG4gIF9pc0FsbG93ZWRQbGF0Zm9ybSgpIHtcbiAgICByZXR1cm4gIXRoaXMuZ2V0QXR0cmlidXRlKCdwbGF0Zm9ybScpIHx8IHRoaXMuZ2V0QXR0cmlidXRlKCdwbGF0Zm9ybScpLnNwbGl0KC9cXHMrLykuaW5kZXhPZihwbGF0Zm9ybS5nZXRNb2JpbGVPUygpKSA+PSAwO1xuICB9XG5cbiAgX29uT3JpZW50YXRpb25DaGFuZ2UoKSB7XG4gICAgaWYgKHRoaXMuaGFzQXR0cmlidXRlKCdvcmllbnRhdGlvbicpICYmIHRoaXMuX2lzQWxsb3dlZFBsYXRmb3JtKCkpIHtcbiAgICAgIGNvbnN0IGNvbmRpdGlvbmFsT3JpZW50YXRpb24gPSB0aGlzLmdldEF0dHJpYnV0ZSgnb3JpZW50YXRpb24nKS50b0xvd2VyQ2FzZSgpO1xuICAgICAgY29uc3QgY3VycmVudE9yaWVudGF0aW9uID0gb3JpZW50YXRpb24uaXNQb3J0cmFpdCgpID8gJ3BvcnRyYWl0JyA6ICdsYW5kc2NhcGUnO1xuXG4gICAgICB0aGlzLnN0eWxlLmRpc3BsYXkgPSAoY29uZGl0aW9uYWxPcmllbnRhdGlvbiA9PT0gY3VycmVudE9yaWVudGF0aW9uKSA/ICcnIDogJ25vbmUnO1xuICAgIH1cbiAgfVxufVxuXG5jdXN0b21FbGVtZW50cy5kZWZpbmUoJ29ucy1pZicsIElmRWxlbWVudCk7XG4iLCIvKlxuQ29weXJpZ2h0IDIwMTMtMjAxNSBBU0lBTCBDT1JQT1JBVElPTlxuXG5MaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xueW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG5cbiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuXG5Vbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG5kaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG5XSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cblNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbmxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuXG4qL1xuXG5pbXBvcnQgYW5pbWl0IGZyb20gJy4uLy4uL29ucy9hbmltaXQnO1xuaW1wb3J0IEJhc2VBbmltYXRvciBmcm9tICcuLi8uLi9vbnMvYmFzZS1hbmltYXRvcic7XG5cbmV4cG9ydCBjbGFzcyBBbGVydERpYWxvZ0FuaW1hdG9yIGV4dGVuZHMgQmFzZUFuaW1hdG9yIHtcblxuICBjb25zdHJ1Y3Rvcih7dGltaW5nID0gJ2xpbmVhcicsIGRlbGF5ID0gMCwgZHVyYXRpb24gPSAwLjJ9ID0ge30pIHtcbiAgICBzdXBlcih7IHRpbWluZywgZGVsYXksIGR1cmF0aW9uIH0pO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7SFRNTEVsZW1lbnR9IGRpYWxvZ1xuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBkb25lXG4gICAqL1xuICBzaG93KGRpYWxvZywgZG9uZSkge1xuICAgIGRvbmUoKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge0hUTUxFbGVtZW50fSBkaWFsb2dcbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gZG9uZVxuICAgKi9cbiAgaGlkZShkaWFsb2csIGRvbmUpIHtcbiAgICBkb25lKCk7XG4gIH1cbn1cblxuLyoqXG4gKiBBbmRyb2lkIHN0eWxlIGFuaW1hdG9yIGZvciBhbGVydCBkaWFsb2cuXG4gKi9cbmV4cG9ydCBjbGFzcyBBbmRyb2lkQWxlcnREaWFsb2dBbmltYXRvciBleHRlbmRzIEFsZXJ0RGlhbG9nQW5pbWF0b3Ige1xuXG4gIGNvbnN0cnVjdG9yKHt0aW1pbmcgPSAnY3ViaWMtYmV6aWVyKC4xLCAuNywgLjQsIDEpJywgZHVyYXRpb24gPSAwLjIsIGRlbGF5ID0gMH0gPSB7fSkge1xuICAgIHN1cGVyKHtkdXJhdGlvbiwgdGltaW5nLCBkZWxheX0pO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBkaWFsb2dcbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gY2FsbGJhY2tcbiAgICovXG4gIHNob3coZGlhbG9nLCBjYWxsYmFjaykge1xuICAgIGNhbGxiYWNrID0gY2FsbGJhY2sgPyBjYWxsYmFjayA6IGZ1bmN0aW9uKCkge307XG5cbiAgICBhbmltaXQucnVuQWxsKFxuXG4gICAgICBhbmltaXQoZGlhbG9nLl9tYXNrKVxuICAgICAgICAucXVldWUoe1xuICAgICAgICAgIG9wYWNpdHk6IDBcbiAgICAgICAgfSlcbiAgICAgICAgLndhaXQodGhpcy5kZWxheSlcbiAgICAgICAgLnF1ZXVlKHtcbiAgICAgICAgICBvcGFjaXR5OiAxLjBcbiAgICAgICAgfSwge1xuICAgICAgICAgIGR1cmF0aW9uOiB0aGlzLmR1cmF0aW9uLFxuICAgICAgICAgIHRpbWluZzogdGhpcy50aW1pbmdcbiAgICAgICAgfSksXG5cbiAgICAgIGFuaW1pdChkaWFsb2cuX2RpYWxvZylcbiAgICAgICAgLnNhdmVTdHlsZSgpXG4gICAgICAgIC5xdWV1ZSh7XG4gICAgICAgICAgY3NzOiB7XG4gICAgICAgICAgICB0cmFuc2Zvcm06ICd0cmFuc2xhdGUzZCgtNTAlLCAtNTAlLCAwKSBzY2FsZTNkKDAuOSwgMC45LCAxLjApJyxcbiAgICAgICAgICAgIG9wYWNpdHk6IDAuMFxuICAgICAgICAgIH0sXG4gICAgICAgICAgZHVyYXRpb246IDBcbiAgICAgICAgfSlcbiAgICAgICAgLndhaXQodGhpcy5kZWxheSlcbiAgICAgICAgLnF1ZXVlKHtcbiAgICAgICAgICBjc3M6IHtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogJ3RyYW5zbGF0ZTNkKC01MCUsIC01MCUsIDApIHNjYWxlM2QoMS4wLCAxLjAsIDEuMCknLFxuICAgICAgICAgICAgb3BhY2l0eTogMS4wXG4gICAgICAgICAgfSxcbiAgICAgICAgICBkdXJhdGlvbjogdGhpcy5kdXJhdGlvbixcbiAgICAgICAgICB0aW1pbmc6IHRoaXMudGltaW5nXG4gICAgICAgIH0pXG4gICAgICAgIC5yZXN0b3JlU3R5bGUoKVxuICAgICAgICAucXVldWUoZnVuY3Rpb24oZG9uZSkge1xuICAgICAgICAgIGNhbGxiYWNrKCk7XG4gICAgICAgICAgZG9uZSgpO1xuICAgICAgICB9KVxuICAgICk7XG4gIH1cblxuICAvKipcbiAgICogQHBhcmFtIHtPYmplY3R9IGRpYWxvZ1xuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBjYWxsYmFja1xuICAgKi9cbiAgaGlkZShkaWFsb2csIGNhbGxiYWNrKSB7XG4gICAgY2FsbGJhY2sgPSBjYWxsYmFjayA/IGNhbGxiYWNrIDogZnVuY3Rpb24oKSB7fTtcblxuICAgIGFuaW1pdC5ydW5BbGwoXG5cbiAgICAgIGFuaW1pdChkaWFsb2cuX21hc2spXG4gICAgICAgIC5xdWV1ZSh7XG4gICAgICAgICAgb3BhY2l0eTogMS4wXG4gICAgICAgIH0pXG4gICAgICAgIC53YWl0KHRoaXMuZGVsYXkpXG4gICAgICAgIC5xdWV1ZSh7XG4gICAgICAgICAgb3BhY2l0eTogMFxuICAgICAgICB9LCB7XG4gICAgICAgICAgZHVyYXRpb246IHRoaXMuZHVyYXRpb24sXG4gICAgICAgICAgdGltaW5nOiB0aGlzLnRpbWluZ1xuICAgICAgICB9KSxcblxuICAgICAgYW5pbWl0KGRpYWxvZy5fZGlhbG9nKVxuICAgICAgICAuc2F2ZVN0eWxlKClcbiAgICAgICAgLnF1ZXVlKHtcbiAgICAgICAgICBjc3M6IHtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogJ3RyYW5zbGF0ZTNkKC01MCUsIC01MCUsIDApIHNjYWxlM2QoMS4wLCAxLjAsIDEuMCknLFxuICAgICAgICAgICAgb3BhY2l0eTogMS4wXG4gICAgICAgICAgfSxcbiAgICAgICAgICBkdXJhdGlvbjogMFxuICAgICAgICB9KVxuICAgICAgICAud2FpdCh0aGlzLmRlbGF5KVxuICAgICAgICAucXVldWUoe1xuICAgICAgICAgIGNzczoge1xuICAgICAgICAgICAgdHJhbnNmb3JtOiAndHJhbnNsYXRlM2QoLTUwJSwgLTUwJSwgMCkgc2NhbGUzZCgwLjksIDAuOSwgMS4wKScsXG4gICAgICAgICAgICBvcGFjaXR5OiAwLjBcbiAgICAgICAgICB9LFxuICAgICAgICAgIGR1cmF0aW9uOiB0aGlzLmR1cmF0aW9uLFxuICAgICAgICAgIHRpbWluZzogdGhpcy50aW1pbmdcbiAgICAgICAgfSlcbiAgICAgICAgLnJlc3RvcmVTdHlsZSgpXG4gICAgICAgIC5xdWV1ZShmdW5jdGlvbihkb25lKSB7XG4gICAgICAgICAgY2FsbGJhY2soKTtcbiAgICAgICAgICBkb25lKCk7XG4gICAgICAgIH0pXG4gICAgKTtcbiAgfVxufVxuXG4vKipcbiAqIGlPUyBzdHlsZSBhbmltYXRvciBmb3IgYWxlcnQgZGlhbG9nLlxuICovXG5leHBvcnQgY2xhc3MgSU9TQWxlcnREaWFsb2dBbmltYXRvciBleHRlbmRzIEFsZXJ0RGlhbG9nQW5pbWF0b3Ige1xuXG4gIGNvbnN0cnVjdG9yKHt0aW1pbmcgPSAnY3ViaWMtYmV6aWVyKC4xLCAuNywgLjQsIDEpJywgZHVyYXRpb24gPSAwLjIsIGRlbGF5ID0gMH0gPSB7fSkge1xuICAgIHN1cGVyKHtkdXJhdGlvbiwgdGltaW5nLCBkZWxheX0pO1xuICB9XG5cbiAgLypcbiAgICogQHBhcmFtIHtPYmplY3R9IGRpYWxvZ1xuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBjYWxsYmFja1xuICAgKi9cbiAgc2hvdyhkaWFsb2csIGNhbGxiYWNrKSB7XG4gICAgY2FsbGJhY2sgPSBjYWxsYmFjayA/IGNhbGxiYWNrIDogZnVuY3Rpb24oKSB7fTtcblxuICAgIGFuaW1pdC5ydW5BbGwoXG5cbiAgICAgIGFuaW1pdChkaWFsb2cuX21hc2spXG4gICAgICAgIC5xdWV1ZSh7XG4gICAgICAgICAgb3BhY2l0eTogMFxuICAgICAgICB9KVxuICAgICAgICAud2FpdCh0aGlzLmRlbGF5KVxuICAgICAgICAucXVldWUoe1xuICAgICAgICAgIG9wYWNpdHk6IDEuMFxuICAgICAgICB9LCB7XG4gICAgICAgICAgZHVyYXRpb246IHRoaXMuZHVyYXRpb24sXG4gICAgICAgICAgdGltaW5nOiB0aGlzLnRpbWluZ1xuICAgICAgICB9KSxcblxuICAgICAgYW5pbWl0KGRpYWxvZy5fZGlhbG9nKVxuICAgICAgICAuc2F2ZVN0eWxlKClcbiAgICAgICAgLnF1ZXVlKHtcbiAgICAgICAgICBjc3M6IHtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogJ3RyYW5zbGF0ZTNkKC01MCUsIC01MCUsIDApIHNjYWxlM2QoMS4zLCAxLjMsIDEuMCknLFxuICAgICAgICAgICAgb3BhY2l0eTogMC4wXG4gICAgICAgICAgfSxcbiAgICAgICAgICBkdXJhdGlvbjogMFxuICAgICAgICB9KVxuICAgICAgICAud2FpdCh0aGlzLmRlbGF5KVxuICAgICAgICAucXVldWUoe1xuICAgICAgICAgIGNzczoge1xuICAgICAgICAgICAgdHJhbnNmb3JtOiAndHJhbnNsYXRlM2QoLTUwJSwgLTUwJSwgMCkgc2NhbGUzZCgxLjAsIDEuMCwgMS4wKScsXG4gICAgICAgICAgICBvcGFjaXR5OiAxLjBcbiAgICAgICAgICB9LFxuICAgICAgICAgIGR1cmF0aW9uOiB0aGlzLmR1cmF0aW9uLFxuICAgICAgICAgIHRpbWluZzogdGhpcy50aW1pbmdcbiAgICAgICAgfSlcbiAgICAgICAgLnJlc3RvcmVTdHlsZSgpXG4gICAgICAgIC5xdWV1ZShmdW5jdGlvbihkb25lKSB7XG4gICAgICAgICAgY2FsbGJhY2soKTtcbiAgICAgICAgICBkb25lKCk7XG4gICAgICAgIH0pXG4gICAgKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge09iamVjdH0gZGlhbG9nXG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IGNhbGxiYWNrXG4gICAqL1xuICBoaWRlKGRpYWxvZywgY2FsbGJhY2spIHtcbiAgICBjYWxsYmFjayA9IGNhbGxiYWNrID8gY2FsbGJhY2sgOiBmdW5jdGlvbigpIHt9O1xuXG4gICAgYW5pbWl0LnJ1bkFsbChcblxuICAgICAgYW5pbWl0KGRpYWxvZy5fbWFzaylcbiAgICAgICAgLnF1ZXVlKHtcbiAgICAgICAgICBvcGFjaXR5OiAxLjBcbiAgICAgICAgfSlcbiAgICAgICAgLndhaXQodGhpcy5kZWxheSlcbiAgICAgICAgLnF1ZXVlKHtcbiAgICAgICAgICBvcGFjaXR5OiAwXG4gICAgICAgIH0sIHtcbiAgICAgICAgICBkdXJhdGlvbjogdGhpcy5kdXJhdGlvbixcbiAgICAgICAgICB0aW1pbmc6IHRoaXMudGltaW5nXG4gICAgICAgIH0pLFxuXG4gICAgICBhbmltaXQoZGlhbG9nLl9kaWFsb2cpXG4gICAgICAgIC5zYXZlU3R5bGUoKVxuICAgICAgICAucXVldWUoe1xuICAgICAgICAgIGNzczoge1xuICAgICAgICAgICAgb3BhY2l0eTogMS4wXG4gICAgICAgICAgfSxcbiAgICAgICAgICBkdXJhdGlvbjogMFxuICAgICAgICB9KVxuICAgICAgICAud2FpdCh0aGlzLmRlbGF5KVxuICAgICAgICAucXVldWUoe1xuICAgICAgICAgIGNzczoge1xuICAgICAgICAgICAgb3BhY2l0eTogMC4wXG4gICAgICAgICAgfSxcbiAgICAgICAgICBkdXJhdGlvbjogdGhpcy5kdXJhdGlvbixcbiAgICAgICAgICB0aW1pbmc6IHRoaXMudGltaW5nXG4gICAgICAgIH0pXG4gICAgICAgIC5yZXN0b3JlU3R5bGUoKVxuICAgICAgICAucXVldWUoZnVuY3Rpb24oZG9uZSkge1xuICAgICAgICAgIGNhbGxiYWNrKCk7XG4gICAgICAgICAgZG9uZSgpO1xuICAgICAgICB9KVxuXG4gICAgKTtcbiAgfVxufVxuIiwiLypcbkNvcHlyaWdodCAyMDEzLTIwMTUgQVNJQUwgQ09SUE9SQVRJT05cblxuTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbnlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbllvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuXG4gICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcblxuVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG5TZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG5saW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cblxuKi9cblxuaW1wb3J0IHV0aWwgZnJvbSAnLi4vLi4vb25zL3V0aWwnO1xuaW1wb3J0IGF1dG9TdHlsZSBmcm9tICcuLi8uLi9vbnMvYXV0b3N0eWxlJztcbmltcG9ydCBNb2RpZmllclV0aWwgZnJvbSAnLi4vLi4vb25zL2ludGVybmFsL21vZGlmaWVyLXV0aWwnO1xuaW1wb3J0IEFuaW1hdG9yRmFjdG9yeSBmcm9tICcuLi8uLi9vbnMvaW50ZXJuYWwvYW5pbWF0b3ItZmFjdG9yeSc7XG5pbXBvcnQge0FsZXJ0RGlhbG9nQW5pbWF0b3IsIElPU0FsZXJ0RGlhbG9nQW5pbWF0b3IsIEFuZHJvaWRBbGVydERpYWxvZ0FuaW1hdG9yfSBmcm9tICcuL2FuaW1hdG9yJztcbmltcG9ydCBwbGF0Zm9ybSBmcm9tICcuLi8uLi9vbnMvcGxhdGZvcm0nO1xuaW1wb3J0IEJhc2VFbGVtZW50IGZyb20gJy4uLy4uL29ucy9iYXNlLWVsZW1lbnQnO1xuaW1wb3J0IGRldmljZUJhY2tCdXR0b25EaXNwYXRjaGVyIGZyb20gJy4uLy4uL29ucy9kZXZpY2UtYmFjay1idXR0b24tZGlzcGF0Y2hlcic7XG5pbXBvcnQgRG9vckxvY2sgZnJvbSAnLi4vLi4vb25zL2Rvb3Jsb2NrJztcbmltcG9ydCBjb250ZW50UmVhZHkgZnJvbSAnLi4vLi4vb25zL2NvbnRlbnQtcmVhZHknO1xuXG5jb25zdCBzY2hlbWUgPSB7XG4gICcuYWxlcnQtZGlhbG9nJzogJ2FsZXJ0LWRpYWxvZy0tKicsXG4gICcuYWxlcnQtZGlhbG9nLWNvbnRhaW5lcic6ICdhbGVydC1kaWFsb2ctY29udGFpbmVyLS0qJyxcbiAgJy5hbGVydC1kaWFsb2ctdGl0bGUnOiAnYWxlcnQtZGlhbG9nLXRpdGxlLS0qJyxcbiAgJy5hbGVydC1kaWFsb2ctY29udGVudCc6ICdhbGVydC1kaWFsb2ctY29udGVudC0tKicsXG4gICcuYWxlcnQtZGlhbG9nLWZvb3Rlcic6ICdhbGVydC1kaWFsb2ctZm9vdGVyLS0qJyxcbiAgJy5hbGVydC1kaWFsb2ctYnV0dG9uJzogJ2FsZXJ0LWRpYWxvZy1idXR0b24tLSonLFxuICAnLmFsZXJ0LWRpYWxvZy1mb290ZXItLXJvd2Zvb3Rlcic6ICdhbGVydC1kaWFsb2ctZm9vdGVyLS1yb3dmb290ZXItLSonLFxuICAnLmFsZXJ0LWRpYWxvZy1idXR0b24tLXJvd2Zvb3Rlcic6ICdhbGVydC1kaWFsb2ctYnV0dG9uLS1yb3dmb290ZXItLSonLFxuICAnLmFsZXJ0LWRpYWxvZy1idXR0b24tLXByaW1hbCc6ICdhbGVydC1kaWFsb2ctYnV0dG9uLS1wcmltYWwtLSonLFxuICAnLmFsZXJ0LWRpYWxvZy1tYXNrJzogJ2FsZXJ0LWRpYWxvZy1tYXNrLS0qJyxcbiAgJy50ZXh0LWlucHV0JzogJ3RleHQtaW5wdXQtLSonXG59O1xuXG5jb25zdCBfYW5pbWF0b3JEaWN0ID0ge1xuICAnbm9uZSc6IEFsZXJ0RGlhbG9nQW5pbWF0b3IsXG4gICdkZWZhdWx0JzogKCkgPT4gcGxhdGZvcm0uaXNBbmRyb2lkKCkgPyBBbmRyb2lkQWxlcnREaWFsb2dBbmltYXRvciA6IElPU0FsZXJ0RGlhbG9nQW5pbWF0b3IsXG4gICdmYWRlJzogKCkgPT4gcGxhdGZvcm0uaXNBbmRyb2lkKCkgPyBBbmRyb2lkQWxlcnREaWFsb2dBbmltYXRvciA6IElPU0FsZXJ0RGlhbG9nQW5pbWF0b3Jcbn07XG5cbi8qKlxuICogQGVsZW1lbnQgb25zLWFsZXJ0LWRpYWxvZ1xuICogQGNhdGVnb3J5IGRpYWxvZ1xuICogQGRlc2NyaXB0aW9uXG4gKiAgIFtlbl1cbiAqICAgICBBbGVydCBkaWFsb2cgdGhhdCBpcyBkaXNwbGF5ZWQgb24gdG9wIG9mIHRoZSBjdXJyZW50IHNjcmVlbi4gVXNlZnVsIGZvciBkaXNwbGF5aW5nIHF1ZXN0aW9ucywgd2FybmluZ3Mgb3IgZXJyb3IgbWVzc2FnZXMgdG8gdGhlIHVzZXIuIFRoZSB0aXRsZSwgY29udGVudCBhbmQgYnV0dG9ucyBjYW4gYmUgZWFzaWx5IGN1c3RvbWl6ZWQgYW5kIGl0IHdpbGwgYXV0b21hdGljYWxseSBzd2l0Y2ggc3R5bGUgYmFzZWQgb24gdGhlIHBsYXRmb3JtLlxuICpcbiAqICAgICBUbyB1c2UgdGhlIGVsZW1lbnQgaXQgY2FuIGVpdGhlciBiZSBhdHRhY2hlZCBkaXJlY3RseSB0byB0aGUgYDxib2R5PmAgZWxlbWVudCBvciBkeW5hbWljYWxseSBjcmVhdGVkIGZyb20gYSB0ZW1wbGF0ZSB1c2luZyB0aGUgYG9ucy5jcmVhdGVBbGVydERpYWxvZyh0ZW1wbGF0ZSlgIHV0aWxpdHkgZnVuY3Rpb24gYW5kIHRoZSBgPG9ucy10ZW1wbGF0ZT5gIHRhZy5cbiAqICAgWy9lbl1cbiAqICAgW2phXVsvamFdXG4gKiBAY29kZXBlbiBRd3d4eXBcbiAqIEB0dXRvcmlhbCB2YW5pbGxhL1JlZmVyZW5jZS9kaWFsb2dcbiAqIEBtb2RpZmllciBtYXRlcmlhbFxuICogICBbZW5dTWF0ZXJpYWwgRGVzaWduIHN0eWxlWy9lbl1cbiAqICAgW2phXVsvamFdXG4gKiBAbW9kaWZpZXIgcm93Zm9vdGVyXG4gKiAgIFtlbl1Ib3Jpem9udGFsbHkgYWxpZ25zIHRoZSBmb290ZXIgYnV0dG9ucy5bL2VuXVxuICogICBbamFdWy9qYV1cbiAqIEBndWlkZSBkaWFsb2dzXG4gKiAgIFtlbl1EaWFsb2cgY29tcG9uZW50c1svZW5dXG4gKiAgIFtqYV1EaWFsb2cgY29tcG9uZW50c1svamFdXG4gKiBAc2VlYWxzbyBvbnMtZGlhbG9nXG4gKiAgIFtlbl1vbnMtZGlhbG9nIGNvbXBvbmVudFsvZW5dXG4gKiAgIFtqYV1vbnMtZGlhbG9n44Kz44Oz44Od44O844ON44Oz44OIWy9qYV1cbiAqIEBzZWVhbHNvIG9ucy1wb3BvdmVyXG4gKiAgIFtlbl1vbnMtcG9wb3ZlciBjb21wb25lbnRbL2VuXVxuICogICBbamFdb25zLWRpYWxvZ+OCs+ODs+ODneODvOODjeODs+ODiFsvamFdXG4gKiBAc2VlYWxzbyBvbnMubm90aWZpY2F0aW9uXG4gKiAgIFtlbl1Vc2luZyBvbnMubm90aWZpY2F0aW9uIHV0aWxpdHkgZnVuY3Rpb25zLlsvZW5dXG4gKiAgIFtqYV3jgqLjg6njg7zjg4jjg4DjgqTjgqLjg63jgrDjgpLooajnpLrjgZnjgovjgavjga/jgIFvbnMubm90aWZpY2F0aW9u44Kq44OW44K444Kn44Kv44OI44Gu44Oh44K944OD44OJ44KS5L2/44GG44GT44Go44KC44Gn44GN44G+44GZ44CCWy9qYV1cbiAqIEBleGFtcGxlXG4gKiA8b25zLWFsZXJ0LWRpYWxvZyBpZD1cImFsZXJ0LWRpYWxvZ1wiPlxuICogICA8ZGl2IGNsYXNzPVwiYWxlcnQtZGlhbG9nLXRpdGxlXCI+V2FybmluZyE8L2Rpdj5cbiAqICAgPGRpdiBjbGFzcz1cImFsZXJ0LWRpYWxvZy1jb250ZW50XCI+XG4gKiAgICAgQW4gZXJyb3IgaGFzIG9jY3VycmVkIVxuICogICA8L2Rpdj5cbiAqICAgPGRpdiBjbGFzcz1cImFsZXJ0LWRpYWxvZy1mb290ZXJcIj5cbiAqICAgICA8YnV0dG9uIGlkPVwiYWxlcnQtZGlhbG9nLWJ1dHRvblwiIGNsYXNzPVwiYWxlcnQtZGlhbG9nLWJ1dHRvblwiPk9LPC9idXR0b24+XG4gKiAgIDwvZGl2PlxuICogPC9vbnMtYWxlcnQtZGlhbG9nPlxuICogPHNjcmlwdD5cbiAqICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2FsZXJ0LWRpYWxvZycpLnNob3coKTtcbiAqIDwvc2NyaXB0PlxuICovXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBBbGVydERpYWxvZ0VsZW1lbnQgZXh0ZW5kcyBCYXNlRWxlbWVudCB7XG5cbiAgLyoqXG4gICAqIEBldmVudCBwcmVzaG93XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1GaXJlZCBqdXN0IGJlZm9yZSB0aGUgYWxlcnQgZGlhbG9nIGlzIGRpc3BsYXllZC5bL2VuXVxuICAgKiAgIFtqYV3jgqLjg6njg7zjg4jjg4DjgqTjgqLjg63jgrDjgYzooajnpLrjgZXjgozjgovnm7TliY3jgavnmbrngavjgZfjgb7jgZnjgIJbL2phXVxuICAgKiBAcGFyYW0ge09iamVjdH0gZXZlbnQgW2VuXUV2ZW50IG9iamVjdC5bL2VuXVxuICAgKiBAcGFyYW0ge09iamVjdH0gZXZlbnQuYWxlcnREaWFsb2dcbiAgICogICBbZW5dQWxlcnQgZGlhbG9nIG9iamVjdC5bL2VuXVxuICAgKiAgIFtqYV3jgqLjg6njg7zjg4jjg4DjgqTjgqLjg63jgrDjga7jgqrjg5bjgrjjgqfjgq/jg4jjgIJbL2phXVxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBldmVudC5jYW5jZWxcbiAgICogICBbZW5dRXhlY3V0ZSB0byBzdG9wIHRoZSBkaWFsb2cgZnJvbSBzaG93aW5nLlsvZW5dXG4gICAqICAgW2phXeOBk+OBrumWouaVsOOCkuWun+ihjOOBmeOCi+OBqOOAgeOCouODqeODvOODiOODgOOCpOOCouODreOCsOOBruihqOekuuOCkuatouOCgeOBvuOBmeOAglsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAZXZlbnQgcG9zdHNob3dcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXUZpcmVkIGp1c3QgYWZ0ZXIgdGhlIGFsZXJ0IGRpYWxvZyBpcyBkaXNwbGF5ZWQuWy9lbl1cbiAgICogICBbamFd44Ki44Op44O844OI44OA44Kk44Ki44Ot44Kw44GM6KGo56S644GV44KM44Gf55u05b6M44Gr55m654Gr44GX44G+44GZ44CCWy9qYV1cbiAgICogQHBhcmFtIHtPYmplY3R9IGV2ZW50IFtlbl1FdmVudCBvYmplY3QuWy9lbl1cbiAgICogQHBhcmFtIHtPYmplY3R9IGV2ZW50LmFsZXJ0RGlhbG9nXG4gICAqICAgW2VuXUFsZXJ0IGRpYWxvZyBvYmplY3QuWy9lbl1cbiAgICogICBbamFd44Ki44Op44O844OI44OA44Kk44Ki44Ot44Kw44Gu44Kq44OW44K444Kn44Kv44OI44CCWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBldmVudCBwcmVoaWRlXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1GaXJlZCBqdXN0IGJlZm9yZSB0aGUgYWxlcnQgZGlhbG9nIGlzIGhpZGRlbi5bL2VuXVxuICAgKiAgIFtqYV3jgqLjg6njg7zjg4jjg4DjgqTjgqLjg63jgrDjgYzpmqDjgozjgovnm7TliY3jgavnmbrngavjgZfjgb7jgZnjgIJbL2phXVxuICAgKiBAcGFyYW0ge09iamVjdH0gZXZlbnQgW2VuXUV2ZW50IG9iamVjdC5bL2VuXVxuICAgKiBAcGFyYW0ge09iamVjdH0gZXZlbnQuYWxlcnREaWFsb2dcbiAgICogICBbZW5dQWxlcnQgZGlhbG9nIG9iamVjdC5bL2VuXVxuICAgKiAgIFtqYV3jgqLjg6njg7zjg4jjg4DjgqTjgqLjg63jgrDjga7jgqrjg5bjgrjjgqfjgq/jg4jjgIJbL2phXVxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBldmVudC5jYW5jZWxcbiAgICogICBbZW5dRXhlY3V0ZSB0byBzdG9wIHRoZSBkaWFsb2cgZnJvbSBoaWRpbmcuWy9lbl1cbiAgICogICBbamFd44GT44Gu6Zai5pWw44KS5a6f6KGM44GZ44KL44Go44CB44Ki44Op44O844OI44OA44Kk44Ki44Ot44Kw44GM6ZaJ44GY44KI44GG44Go44GZ44KL44Gu44KS5q2i44KB44G+44GZ44CCWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBldmVudCBwb3N0aGlkZVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogW2VuXUZpcmVkIGp1c3QgYWZ0ZXIgdGhlIGFsZXJ0IGRpYWxvZyBpcyBoaWRkZW4uWy9lbl1cbiAgICogW2phXeOCouODqeODvOODiOODgOOCpOOCouODreOCsOOBjOmaoOOCjOOBn+W+jOOBq+eZuueBq+OBl+OBvuOBmeOAglsvamFdXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBldmVudCBbZW5dRXZlbnQgb2JqZWN0LlsvZW5dXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBldmVudC5hbGVydERpYWxvZ1xuICAgKiAgIFtlbl1BbGVydCBkaWFsb2cgb2JqZWN0LlsvZW5dXG4gICAqICAgW2phXeOCouODqeODvOODiOODgOOCpOOCouODreOCsOOBruOCquODluOCuOOCp+OCr+ODiOOAglsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAYXR0cmlidXRlIG1vZGlmaWVyXG4gICAqIEB0eXBlIHtTdHJpbmd9XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgW2VuXVRoZSBhcHBlYXJhbmNlIG9mIHRoZSBkaWFsb2cuWy9lbl1cbiAgICogIFtqYV3jg4DjgqTjgqLjg63jgrDjga7opovjgZ/nm67jgpLmjIflrprjgZfjgb7jgZnjgIJbL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQGF0dHJpYnV0ZSBjYW5jZWxhYmxlXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgW2VuXUlmIHRoaXMgYXR0cmlidXRlIGlzIHNldCB0aGUgZGlhbG9nIGNhbiBiZSBjbG9zZWQgYnkgdGFwcGluZyB0aGUgYmFja2dyb3VuZCBvciBieSBwcmVzc2luZyB0aGUgYmFjayBidXR0b24gb24gQW5kcm9pZCBkZXZpY2VzLlsvZW5dXG4gICAqICBbamFdWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBhdHRyaWJ1dGUgZGlzYWJsZWRcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICBbZW5dSWYgdGhpcyBhdHRyaWJ1dGUgaXMgc2V0IHRoZSBkaWFsb2cgaXMgZGlzYWJsZWQuWy9lbl1cbiAgICogIFtqYV3jgZPjga7lsZ7mgKfjgYzjgYLjgovmmYLjgIHjgqLjg6njg7zjg4jjg4DjgqTjgqLjg63jgrDjga9kaXNhYmxlZOeKtuaFi+OBq+OBquOCiuOBvuOBmeOAglsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAYXR0cmlidXRlIGFuaW1hdGlvblxuICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgKiBAZGVmYXVsdCBkZWZhdWx0XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgW2VuXVRoZSBhbmltYXRpb24gdXNlZCB3aGVuIHNob3dpbmcgYW5kIGhpZGluZyB0aGUgZGlhbG9nLiBDYW4gYmUgZWl0aGVyIGBcIm5vbmVcImAgb3IgYFwiZGVmYXVsdFwiYC5bL2VuXVxuICAgKiAgW2phXeODgOOCpOOCouODreOCsOOCkuihqOekuuOBmeOCi+mam+OBruOCouODi+ODoeODvOOCt+ODp+ODs+WQjeOCkuaMh+WumuOBl+OBvuOBmeOAguODh+ODleOCqeODq+ODiOOBp+OBr1wibm9uZVwi44GLXCJkZWZhdWx0XCLjgYzmjIflrprjgafjgY3jgb7jgZnjgIJbL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQGF0dHJpYnV0ZSBhbmltYXRpb24tb3B0aW9uc1xuICAgKiBAdHlwZSB7RXhwcmVzc2lvbn1cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICBbZW5dU3BlY2lmeSB0aGUgYW5pbWF0aW9uJ3MgZHVyYXRpb24sIHRpbWluZyBhbmQgZGVsYXkgd2l0aCBhbiBvYmplY3QgbGl0ZXJhbC4gRS5nLiBge2R1cmF0aW9uOiAwLjIsIGRlbGF5OiAxLCB0aW1pbmc6ICdlYXNlLWluJ31gLlsvZW5dXG4gICAqICBbamFd44Ki44OL44Oh44O844K344On44Oz5pmC44GuZHVyYXRpb24sIHRpbWluZywgZGVsYXnjgpLjgqrjg5bjgrjjgqfjgq/jg4jjg6rjg4bjg6njg6vjgafmjIflrprjgZfjgb7jgZnjgILkvovvvJp7ZHVyYXRpb246IDAuMiwgZGVsYXk6IDEsIHRpbWluZzogJ2Vhc2UtaW4nfVsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAYXR0cmlidXRlIG1hc2stY29sb3JcbiAgICogQHR5cGUge1N0cmluZ31cbiAgICogQGRlZmF1bHQgcmdiYSgwLCAwLCAwLCAwLjIpXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgW2VuXUNvbG9yIG9mIHRoZSBiYWNrZ3JvdW5kIG1hc2suIERlZmF1bHQgaXMgXCJyZ2JhKDAsIDAsIDAsIDAuMilcIi5bL2VuXVxuICAgKiAgW2phXeiDjOaZr+OBruODnuOCueOCr+OBruiJsuOCkuaMh+WumuOBl+OBvuOBmeOAglwicmdiYSgwLCAwLCAwLCAwLjIpXCLjgYzjg4fjg5Xjgqnjg6vjg4jlgKTjgafjgZnjgIJbL2phXVxuICAgKi9cblxuICBpbml0KCkge1xuICAgIGNvbnRlbnRSZWFkeSh0aGlzLCAoKSA9PiB0aGlzLl9jb21waWxlKCkpO1xuXG4gICAgdGhpcy5fdmlzaWJsZSA9IGZhbHNlO1xuICAgIHRoaXMuX2Rvb3JMb2NrID0gbmV3IERvb3JMb2NrKCk7XG4gICAgdGhpcy5fYm91bmRDYW5jZWwgPSAoKSA9PiB0aGlzLl9jYW5jZWwoKTtcblxuICAgIHRoaXMuX3VwZGF0ZUFuaW1hdG9yRmFjdG9yeSgpXG4gIH1cblxuICAvKipcbiAgICogQHJldHVybiB7RWxlbWVudH1cbiAgICovXG4gIGdldCBfbWFzaygpIHtcbiAgICByZXR1cm4gdXRpbC5maW5kQ2hpbGQodGhpcywgJy5hbGVydC1kaWFsb2ctbWFzaycpO1xuICB9XG5cbiAgLyoqXG4gICAqIEByZXR1cm4ge0VsZW1lbnR9XG4gICAqL1xuICBnZXQgX2RpYWxvZygpIHtcbiAgICByZXR1cm4gdXRpbC5maW5kQ2hpbGQodGhpcywgJy5hbGVydC1kaWFsb2cnKTtcblxuICB9XG5cbiAgLyoqXG4gICAqIEByZXR1cm4ge0VsZW1lbnR9XG4gICAqL1xuICBnZXQgX3RpdGxlRWxlbWVudCgpIHtcbiAgICByZXR1cm4gdXRpbC5maW5kQ2hpbGQodGhpcy5fZGlhbG9nLmNoaWxkcmVuWzBdLCAnLmFsZXJ0LWRpYWxvZy10aXRsZScpO1xuICB9XG5cbiAgLyoqXG4gICAqIEByZXR1cm4ge0VsZW1lbnR9XG4gICAqL1xuICBnZXQgX2NvbnRlbnRFbGVtZW50KCkge1xuICAgIHJldHVybiB1dGlsLmZpbmRDaGlsZCh0aGlzLl9kaWFsb2cuY2hpbGRyZW5bMF0sICcuYWxlcnQtZGlhbG9nLWNvbnRlbnQnKTtcbiAgfVxuXG4gIF91cGRhdGVBbmltYXRvckZhY3RvcnkoKSB7XG4gICAgdGhpcy5fYW5pbWF0b3JGYWN0b3J5ID0gbmV3IEFuaW1hdG9yRmFjdG9yeSh7XG4gICAgICBhbmltYXRvcnM6IF9hbmltYXRvckRpY3QsXG4gICAgICBiYXNlQ2xhc3M6IEFsZXJ0RGlhbG9nQW5pbWF0b3IsXG4gICAgICBiYXNlQ2xhc3NOYW1lOiAnQWxlcnREaWFsb2dBbmltYXRvcicsXG4gICAgICBkZWZhdWx0QW5pbWF0aW9uOiB0aGlzLmdldEF0dHJpYnV0ZSgnYW5pbWF0aW9uJylcbiAgICB9KTtcbiAgfVxuXG4gIF9jb21waWxlKCkge1xuICAgIGF1dG9TdHlsZS5wcmVwYXJlKHRoaXMpO1xuXG4gICAgdGhpcy5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xuICAgIHRoaXMuc3R5bGUuekluZGV4ID0gMTAwMDE7XG5cbiAgICAvKipcbiAgICAgKiBFeHBlY3RlZCByZXN1bHQgYWZ0ZXIgY29tcGlsZTpcbiAgICAgKlxuICAgICAqIDxvbnMtYWxlcnQtZGlhbG9nIHN0eWxlPVwibm9uZVwiPlxuICAgICAqICAgPGRpdiBjbGFzcz1cImFsZXJ0LWRpYWxvZy1tYXNrXCI+PC9kaXY+XG4gICAgICogICA8ZGl2IGNsYXNzPVwiYWxlcnQtZGlhbG9nXCI+XG4gICAgICogICAgIDxkaXYgY2xhc3M9XCJhbGVydC1kaWFsb2ctY29udGFpbmVyXCI+Li4uPC9kaXY+XG4gICAgICogICA8L2Rpdj5cbiAgICAgKiA8L29ucy1hbGVydC1kaWFsb2c+XG4gICAgICovXG5cbiAgICBjb25zdCBjb250ZW50ID0gZG9jdW1lbnQuY3JlYXRlRG9jdW1lbnRGcmFnbWVudCgpO1xuXG4gICAgaWYgKCF0aGlzLl9tYXNrICYmICF0aGlzLl9kaWFsb2cpIHtcbiAgICAgIHdoaWxlICh0aGlzLmZpcnN0Q2hpbGQpIHtcbiAgICAgICAgY29udGVudC5hcHBlbmRDaGlsZCh0aGlzLmZpcnN0Q2hpbGQpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGlmICghdGhpcy5fbWFzaykge1xuICAgICAgY29uc3QgbWFzayA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgbWFzay5jbGFzc0xpc3QuYWRkKCdhbGVydC1kaWFsb2ctbWFzaycpO1xuICAgICAgdGhpcy5pbnNlcnRCZWZvcmUobWFzaywgdGhpcy5jaGlsZHJlblswXSk7XG4gICAgfVxuXG4gICAgaWYgKCF0aGlzLl9kaWFsb2cpIHtcbiAgICAgIGNvbnN0IGRpYWxvZyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgZGlhbG9nLmNsYXNzTGlzdC5hZGQoJ2FsZXJ0LWRpYWxvZycpO1xuICAgICAgdGhpcy5pbnNlcnRCZWZvcmUoZGlhbG9nLCBudWxsKTtcbiAgICB9XG5cbiAgICBpZiAoIXV0aWwuZmluZENoaWxkKHRoaXMuX2RpYWxvZywgJy5hbGVydC1kaWFsb2ctY29udGFpbmVyJykpIHtcbiAgICAgIGNvbnN0IGNvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgY29udGFpbmVyLmNsYXNzTGlzdC5hZGQoJ2FsZXJ0LWRpYWxvZy1jb250YWluZXInKTtcbiAgICAgIHRoaXMuX2RpYWxvZy5hcHBlbmRDaGlsZChjb250YWluZXIpO1xuICAgIH1cblxuICAgIHRoaXMuX2RpYWxvZy5jaGlsZHJlblswXS5hcHBlbmRDaGlsZChjb250ZW50KTtcblxuICAgIHRoaXMuX2RpYWxvZy5zdHlsZS56SW5kZXggPSAyMDAwMTtcbiAgICB0aGlzLl9tYXNrLnN0eWxlLnpJbmRleCA9IDIwMDAwO1xuXG4gICAgaWYgKHRoaXMuZ2V0QXR0cmlidXRlKCdtYXNrLWNvbG9yJykpIHtcbiAgICAgIHRoaXMuX21hc2suc3R5bGUuYmFja2dyb3VuZENvbG9yID0gdGhpcy5nZXRBdHRyaWJ1dGUoJ21hc2stY29sb3InKTtcbiAgICB9XG5cbiAgICBNb2RpZmllclV0aWwuaW5pdE1vZGlmaWVyKHRoaXMsIHNjaGVtZSk7XG4gIH1cblxuICAvKipcbiAgICogQHByb3BlcnR5IGRpc2FibGVkXG4gICAqIEB0eXBlIHtCb29sZWFufVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dV2hldGhlciB0aGUgZWxlbWVudCBpcyBkaXNhYmxlZCBvciBub3QuWy9lbl1cbiAgICogICBbamFd54Sh5Yq55YyW44GV44KM44Gm44GE44KL5aC05ZCI44GrYHRydWVg44CCWy9qYV1cbiAgICovXG4gIHNldCBkaXNhYmxlZCh2YWx1ZSkge1xuICAgIHJldHVybiB1dGlsLnRvZ2dsZUF0dHJpYnV0ZSh0aGlzLCAnZGlzYWJsZWQnLCB2YWx1ZSk7XG4gIH1cblxuICBnZXQgZGlzYWJsZWQoKSB7XG4gICAgcmV0dXJuIHRoaXMuaGFzQXR0cmlidXRlKCdkaXNhYmxlZCcpO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwcm9wZXJ0eSBjYW5jZWxhYmxlXG4gICAqIEB0eXBlIHtCb29sZWFufVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dV2hldGhlciB0aGUgZGlhbG9nIGlzIGNhbmNlbGFibGUgb3Igbm90LiBBIGNhbmNlbGFibGUgZGlhbG9nIGNhbiBiZSBjbG9zZWQgYnkgdGFwcGluZyB0aGUgYmFja2dyb3VuZCBvciBieSBwcmVzc2luZyB0aGUgYmFjayBidXR0b24gb24gQW5kcm9pZCBkZXZpY2VzLlsvZW5dXG4gICAqICAgW2phXVsvamFdXG4gICAqL1xuICBzZXQgY2FuY2VsYWJsZSh2YWx1ZSkge1xuICAgIHJldHVybiB1dGlsLnRvZ2dsZUF0dHJpYnV0ZSh0aGlzLCAnY2FuY2VsYWJsZScsIHZhbHVlKTtcbiAgfVxuXG4gIGdldCBjYW5jZWxhYmxlKCkge1xuICAgIHJldHVybiB0aGlzLmhhc0F0dHJpYnV0ZSgnY2FuY2VsYWJsZScpO1xuICB9XG5cbiAgLyoqXG4gICAqIEBtZXRob2Qgc2hvd1xuICAgKiBAc2lnbmF0dXJlIHNob3coW29wdGlvbnNdKVxuICAgKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnNdXG4gICAqICAgW2VuXVBhcmFtZXRlciBvYmplY3QuWy9lbl1cbiAgICogICBbamFd44Kq44OX44K344On44Oz44KS5oyH5a6a44GZ44KL44Kq44OW44K444Kn44Kv44OI44Gn44GZ44CCWy9qYV1cbiAgICogQHBhcmFtIHtTdHJpbmd9IFtvcHRpb25zLmFuaW1hdGlvbl1cbiAgICogICBbZW5dQW5pbWF0aW9uIG5hbWUuIEF2YWlsYWJsZSBhbmltYXRpb25zIGFyZSBgXCJmYWRlXCJgIGFuZCBgXCJub25lXCJgLlsvZW5dXG4gICAqICAgW2phXeOCouODi+ODoeODvOOCt+ODp+ODs+WQjeOCkuaMh+WumuOBl+OBvuOBmeOAguaMh+WumuOBp+OBjeOCi+OBruOBr+OAgVwiZmFkZVwiLCBcIm5vbmVcIuOBruOBhOOBmuOCjOOBi+OBp+OBmeOAglsvamFdXG4gICAqIEBwYXJhbSB7U3RyaW5nfSBbb3B0aW9ucy5hbmltYXRpb25PcHRpb25zXVxuICAgKiAgIFtlbl1TcGVjaWZ5IHRoZSBhbmltYXRpb24ncyBkdXJhdGlvbiwgZGVsYXkgYW5kIHRpbWluZy4gRS5nLiAgYHtkdXJhdGlvbjogMC4yLCBkZWxheTogMC40LCB0aW1pbmc6ICdlYXNlLWluJ31gLlsvZW5dXG4gICAqICAgW2phXeOCouODi+ODoeODvOOCt+ODp+ODs+aZguOBrmR1cmF0aW9uLCBkZWxheSwgdGltaW5n44KS5oyH5a6a44GX44G+44GZ44CCZS5nLiA8Y29kZT57ZHVyYXRpb246IDAuMiwgZGVsYXk6IDAuNCwgdGltaW5nOiAnZWFzZS1pbid9PC9jb2RlPiBbL2phXVxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBbb3B0aW9ucy5jYWxsYmFja11cbiAgICogICBbZW5dRnVuY3Rpb24gdG8gZXhlY3V0ZSBhZnRlciB0aGUgZGlhbG9nIGhhcyBiZWVuIHJldmVhbGVkLlsvZW5dXG4gICAqICAgW2phXeODgOOCpOOCouODreOCsOOBjOihqOekuuOBleOCjOe1guOCj+OBo+OBn+aZguOBq+WRvOOBs+WHuuOBleOCjOOCi+OCs+ODvOODq+ODkOODg+OCr+OCkuaMh+WumuOBl+OBvuOBmeOAglsvamFdXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1TaG93IHRoZSBhbGVydCBkaWFsb2cuWy9lbl1cbiAgICogICBbamFd44OA44Kk44Ki44Ot44Kw44KS6KGo56S644GX44G+44GZ44CCWy9qYV1cbiAgICogQHJldHVybiB7UHJvbWlzZX1cbiAgICogICBbZW5dQSBgUHJvbWlzZWAgb2JqZWN0IHRoYXQgcmVzb2x2ZXMgdG8gdGhlIGRpc3BsYXllZCBlbGVtZW50LlsvZW5dXG4gICAqICAgW2phXVsvamFdXG4gICAqL1xuICBzaG93KG9wdGlvbnMgPSB7fSkge1xuICAgIGxldCBjYW5jZWwgPSBmYWxzZTtcbiAgICBjb25zdCBjYWxsYmFjayA9IG9wdGlvbnMuY2FsbGJhY2sgfHwgZnVuY3Rpb24oKSB7fTtcblxuICAgIG9wdGlvbnMuYW5pbWF0aW9uT3B0aW9ucyA9IHV0aWwuZXh0ZW5kKFxuICAgICAgb3B0aW9ucy5hbmltYXRpb25PcHRpb25zIHx8IHt9LFxuICAgICAgQW5pbWF0b3JGYWN0b3J5LnBhcnNlQW5pbWF0aW9uT3B0aW9uc1N0cmluZyh0aGlzLmdldEF0dHJpYnV0ZSgnYW5pbWF0aW9uLW9wdGlvbnMnKSlcbiAgICApO1xuXG4gICAgdXRpbC50cmlnZ2VyRWxlbWVudEV2ZW50KHRoaXMsICdwcmVzaG93Jywge1xuICAgICAgYWxlcnREaWFsb2c6IHRoaXMsXG4gICAgICBjYW5jZWw6IGZ1bmN0aW9uKCkge1xuICAgICAgICBjYW5jZWwgPSB0cnVlO1xuICAgICAgfVxuICAgIH0pO1xuXG4gICAgaWYgKCFjYW5jZWwpIHtcbiAgICAgIGNvbnN0IHRyeVNob3cgPSAoKSA9PiB7XG4gICAgICAgIGNvbnN0IHVubG9jayA9IHRoaXMuX2Rvb3JMb2NrLmxvY2soKTtcbiAgICAgICAgY29uc3QgYW5pbWF0b3IgPSB0aGlzLl9hbmltYXRvckZhY3RvcnkubmV3QW5pbWF0b3Iob3B0aW9ucyk7XG5cbiAgICAgICAgdGhpcy5zdHlsZS5kaXNwbGF5ID0gJ2Jsb2NrJztcbiAgICAgICAgdGhpcy5fbWFzay5zdHlsZS5vcGFjaXR5ID0gJzEnO1xuXG4gICAgICAgIHJldHVybiBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHtcbiAgICAgICAgICBjb250ZW50UmVhZHkodGhpcywgKCkgPT4ge1xuICAgICAgICAgICAgYW5pbWF0b3Iuc2hvdyh0aGlzLCAoKSA9PiB7XG4gICAgICAgICAgICAgIHRoaXMuX3Zpc2libGUgPSB0cnVlO1xuICAgICAgICAgICAgICB1bmxvY2soKTtcblxuICAgICAgICAgICAgICB1dGlsLnRyaWdnZXJFbGVtZW50RXZlbnQodGhpcywgJ3Bvc3RzaG93Jywge2FsZXJ0RGlhbG9nOiB0aGlzfSk7XG5cbiAgICAgICAgICAgICAgY2FsbGJhY2soKTtcbiAgICAgICAgICAgICAgcmVzb2x2ZSh0aGlzKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICAgIH07XG5cbiAgICAgIHJldHVybiBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHtcbiAgICAgICAgdGhpcy5fZG9vckxvY2sud2FpdFVubG9jaygoKSA9PiByZXNvbHZlKHRyeVNob3coKSkpO1xuICAgICAgfSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdCgnQ2FuY2VsZWQgaW4gcHJlc2hvdyBldmVudC4nKTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogQG1ldGhvZCBoaWRlXG4gICAqIEBzaWduYXR1cmUgaGlkZShbb3B0aW9uc10pXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0aW9uc11cbiAgICogICBbZW5dUGFyYW1ldGVyIG9iamVjdC5bL2VuXVxuICAgKiAgIFtqYV3jgqrjg5fjgrfjg6fjg7PjgpLmjIflrprjgZnjgovjgqrjg5bjgrjjgqfjgq/jg4jjgIJbL2phXVxuICAgKiBAcGFyYW0ge1N0cmluZ30gW29wdGlvbnMuYW5pbWF0aW9uXVxuICAgKiAgIFtlbl1BbmltYXRpb24gbmFtZS4gQXZhaWxhYmxlIGFuaW1hdGlvbnMgYXJlIGBcImZhZGVcImAgYW5kIGBcIm5vbmVcImAuWy9lbl1cbiAgICogICBbamFd44Ki44OL44Oh44O844K344On44Oz5ZCN44KS5oyH5a6a44GX44G+44GZ44CCXCJmYWRlXCIsIFwibm9uZVwi44Gu44GE44Ga44KM44GL44KS5oyH5a6a44GX44G+44GZ44CCWy9qYV1cbiAgICogQHBhcmFtIHtTdHJpbmd9IFtvcHRpb25zLmFuaW1hdGlvbk9wdGlvbnNdXG4gICAqICAgW2VuXVNwZWNpZnkgdGhlIGFuaW1hdGlvbidzIGR1cmF0aW9uLCBkZWxheSBhbmQgdGltaW5nLiBFLmcuICA8Y29kZT57ZHVyYXRpb246IDAuMiwgZGVsYXk6IDAuNCwgdGltaW5nOiAnZWFzZS1pbid9PC9jb2RlPlsvZW5dXG4gICAqICAgW2phXeOCouODi+ODoeODvOOCt+ODp+ODs+aZguOBrmR1cmF0aW9uLCBkZWxheSwgdGltaW5n44KS5oyH5a6a44GX44G+44GZ44CCZS5nLiA8Y29kZT57ZHVyYXRpb246IDAuMiwgZGVsYXk6IDAuNCwgdGltaW5nOiAnZWFzZS1pbid9PC9jb2RlPiBbL2phXVxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBbb3B0aW9ucy5jYWxsYmFja11cbiAgICogICBbZW5dRnVuY3Rpb24gdG8gZXhlY3V0ZSBhZnRlciB0aGUgZGlhbG9nIGhhcyBiZWVuIGhpZGRlbi5bL2VuXVxuICAgKiAgIFtqYV3jgZPjga7jg4DjgqTjgqLjg63jgrDjgYzplonjgZjjgZ/mmYLjgavlkbzjgbPlh7rjgZXjgozjgovjgrPjg7zjg6vjg5Djg4Pjgq/jgpLmjIflrprjgZfjgb7jgZnjgIJbL2phXVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dSGlkZSB0aGUgYWxlcnQgZGlhbG9nLlsvZW5dXG4gICAqICAgW2phXeODgOOCpOOCouODreOCsOOCkumWieOBmOOBvuOBmeOAglsvamFdXG4gICAqIEByZXR1cm4ge1Byb21pc2V9XG4gICAqICAgW2VuXVJlc29sdmVzIHRvIHRoZSBoaWRkZW4gZWxlbWVudFsvZW5dXG4gICAqICAgW2phXVsvamFdXG4gICAqL1xuICBoaWRlKG9wdGlvbnMgPSB7fSkge1xuICAgIGxldCBjYW5jZWwgPSBmYWxzZTtcbiAgICBjb25zdCBjYWxsYmFjayA9IG9wdGlvbnMuY2FsbGJhY2sgfHwgZnVuY3Rpb24oKSB7fTtcblxuICAgIG9wdGlvbnMuYW5pbWF0aW9uT3B0aW9ucyA9IHV0aWwuZXh0ZW5kKFxuICAgICAgb3B0aW9ucy5hbmltYXRpb25PcHRpb25zIHx8IHt9LFxuICAgICAgQW5pbWF0b3JGYWN0b3J5LnBhcnNlQW5pbWF0aW9uT3B0aW9uc1N0cmluZyh0aGlzLmdldEF0dHJpYnV0ZSgnYW5pbWF0aW9uLW9wdGlvbnMnKSlcbiAgICApO1xuXG4gICAgdXRpbC50cmlnZ2VyRWxlbWVudEV2ZW50KHRoaXMsICdwcmVoaWRlJywge1xuICAgICAgYWxlcnREaWFsb2c6IHRoaXMsXG4gICAgICBjYW5jZWw6IGZ1bmN0aW9uKCkge1xuICAgICAgICBjYW5jZWwgPSB0cnVlO1xuICAgICAgfVxuICAgIH0pO1xuXG4gICAgaWYgKCFjYW5jZWwpIHtcbiAgICAgIGNvbnN0IHRyeUhpZGUgPSAoKSA9PiB7XG4gICAgICAgIGNvbnN0IHVubG9jayA9IHRoaXMuX2Rvb3JMb2NrLmxvY2soKTtcbiAgICAgICAgY29uc3QgYW5pbWF0b3IgPSB0aGlzLl9hbmltYXRvckZhY3RvcnkubmV3QW5pbWF0b3Iob3B0aW9ucyk7XG5cbiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKHJlc29sdmUgPT4ge1xuICAgICAgICAgIGNvbnRlbnRSZWFkeSh0aGlzLCAoKSA9PiB7XG4gICAgICAgICAgICBhbmltYXRvci5oaWRlKHRoaXMsICgpID0+IHtcbiAgICAgICAgICAgICAgdGhpcy5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xuICAgICAgICAgICAgICB0aGlzLl92aXNpYmxlID0gZmFsc2U7XG4gICAgICAgICAgICAgIHVubG9jaygpO1xuXG4gICAgICAgICAgICAgIHV0aWwudHJpZ2dlckVsZW1lbnRFdmVudCh0aGlzLCAncG9zdGhpZGUnLCB7YWxlcnREaWFsb2c6IHRoaXN9KTtcblxuICAgICAgICAgICAgICBjYWxsYmFjaygpO1xuICAgICAgICAgICAgICByZXNvbHZlKHRoaXMpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgICAgfTtcblxuICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKHJlc29sdmUgPT4ge1xuICAgICAgICB0aGlzLl9kb29yTG9jay53YWl0VW5sb2NrKCgpID0+IHJlc29sdmUodHJ5SGlkZSgpKSk7XG4gICAgICB9KTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KCdDYW5jZWxlZCBpbiBwcmVoaWRlIGV2ZW50LicpO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBAcHJvcGVydHkgdmlzaWJsZVxuICAgKiBAcmVhZG9ubHlcbiAgICogQHR5cGUge0Jvb2xlYW59XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1XaGV0aGVyIHRoZSBkaWFsb2cgaXMgdmlzaWJsZSBvciBub3QuWy9lbl1cbiAgICogICBbamFd6KaB57Sg44GM6KaL44GI44KL5aC05ZCI44GrYHRydWVg44CCWy9qYV1cbiAgICovXG4gIGdldCB2aXNpYmxlKCkge1xuICAgIHJldHVybiB0aGlzLl92aXNpYmxlO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwcm9wZXJ0eSBvbkRldmljZUJhY2tCdXR0b25cbiAgICogQHR5cGUge09iamVjdH1cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXUJhY2stYnV0dG9uIGhhbmRsZXIuWy9lbl1cbiAgICogICBbamFd44OQ44OD44Kv44Oc44K/44Oz44OP44Oz44OJ44Op44CCWy9qYV1cbiAgICovXG4gIGdldCBvbkRldmljZUJhY2tCdXR0b24oKSB7XG4gICAgcmV0dXJuIHRoaXMuX2JhY2tCdXR0b25IYW5kbGVyO1xuICB9XG5cbiAgc2V0IG9uRGV2aWNlQmFja0J1dHRvbihjYWxsYmFjaykge1xuICAgIGlmICh0aGlzLl9iYWNrQnV0dG9uSGFuZGxlcikge1xuICAgICAgdGhpcy5fYmFja0J1dHRvbkhhbmRsZXIuZGVzdHJveSgpO1xuICAgIH1cblxuICAgIHRoaXMuX2JhY2tCdXR0b25IYW5kbGVyID0gZGV2aWNlQmFja0J1dHRvbkRpc3BhdGNoZXIuY3JlYXRlSGFuZGxlcih0aGlzLCBjYWxsYmFjayk7XG4gIH1cblxuICBfY2FuY2VsKCkge1xuICAgIGlmICh0aGlzLmNhbmNlbGFibGUgJiYgIXRoaXMuX3J1bm5pbmcpIHtcbiAgICAgIHRoaXMuX3J1bm5pbmcgPSB0cnVlO1xuICAgICAgdGhpcy5oaWRlKClcbiAgICAgICAgLnRoZW4oXG4gICAgICAgICAgKCkgPT4ge1xuICAgICAgICAgICAgdGhpcy5fcnVubmluZyA9IGZhbHNlO1xuICAgICAgICAgICAgdXRpbC50cmlnZ2VyRWxlbWVudEV2ZW50KHRoaXMsICdkaWFsb2ctY2FuY2VsJyk7XG4gICAgICAgICAgfSxcbiAgICAgICAgICAoKSA9PiB0aGlzLl9ydW5uaW5nID0gZmFsc2VcbiAgICAgICAgKTtcbiAgICB9XG4gIH1cblxuICBjb25uZWN0ZWRDYWxsYmFjaygpIHtcbiAgICB0aGlzLm9uRGV2aWNlQmFja0J1dHRvbiA9IGUgPT4gdGhpcy5jYW5jZWxhYmxlID8gdGhpcy5fY2FuY2VsKCkgOiBlLmNhbGxQYXJlbnRIYW5kbGVyKCk7XG5cbiAgICBjb250ZW50UmVhZHkodGhpcywgKCkgPT4ge1xuICAgICAgdGhpcy5fbWFzay5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMuX2JvdW5kQ2FuY2VsLCBmYWxzZSk7XG4gICAgfSk7XG4gIH1cblxuICBkaXNjb25uZWN0ZWRDYWxsYmFjaygpIHtcbiAgICB0aGlzLl9iYWNrQnV0dG9uSGFuZGxlci5kZXN0cm95KCk7XG4gICAgdGhpcy5fYmFja0J1dHRvbkhhbmRsZXIgPSBudWxsO1xuXG4gICAgdGhpcy5fbWFzay5yZW1vdmVFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMuX2JvdW5kQ2FuY2VsLmJpbmQodGhpcyksIGZhbHNlKTtcbiAgfVxuXG4gIHN0YXRpYyBnZXQgb2JzZXJ2ZWRBdHRyaWJ1dGVzKCkge1xuICAgIHJldHVybiBbJ21vZGlmaWVyJywgJ2FuaW1hdGlvbiddO1xuICB9XG5cbiAgYXR0cmlidXRlQ2hhbmdlZENhbGxiYWNrKG5hbWUsIGxhc3QsIGN1cnJlbnQpIHtcbiAgICBpZiAobmFtZSA9PT0gJ21vZGlmaWVyJykge1xuICAgICAgcmV0dXJuIE1vZGlmaWVyVXRpbC5vbk1vZGlmaWVyQ2hhbmdlZChsYXN0LCBjdXJyZW50LCB0aGlzLCBzY2hlbWUpO1xuICAgIH1cbiAgICBlbHNlIGlmIChuYW1lID09PSAnYW5pbWF0aW9uJykge1xuICAgICAgdGhpcy5fdXBkYXRlQW5pbWF0b3JGYWN0b3J5KCk7XG4gICAgfVxuICB9XG5cbiAgc3RhdGljIGdldCBldmVudHMoKSB7XG4gICAgcmV0dXJuIFsncHJlc2hvdycsICdwb3N0c2hvdycsICdwcmVoaWRlJywgJ3Bvc3RoaWRlJywgJ2RpYWxvZy1jYW5jZWwnXTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge1N0cmluZ30gbmFtZVxuICAgKiBAcGFyYW0ge0RpYWxvZ0FuaW1hdG9yfSBBbmltYXRvclxuICAgKi9cbiAgc3RhdGljIHJlZ2lzdGVyQW5pbWF0b3IobmFtZSwgQW5pbWF0b3IpIHtcbiAgICBpZiAoIShBbmltYXRvci5wcm90b3R5cGUgaW5zdGFuY2VvZiBBbGVydERpYWxvZ0FuaW1hdG9yKSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdcIkFuaW1hdG9yXCIgcGFyYW0gbXVzdCBpbmhlcml0IE9uc0FsZXJ0RGlhbG9nRWxlbWVudC5BbGVydERpYWxvZ0FuaW1hdG9yJyk7XG4gICAgfVxuICAgIF9hbmltYXRvckRpY3RbbmFtZV0gPSBBbmltYXRvcjtcbiAgfVxuXG4gIHN0YXRpYyBnZXQgYW5pbWF0b3JzKCkge1xuICAgIHJldHVybiBfYW5pbWF0b3JEaWN0O1xuICB9XG5cbiAgc3RhdGljIGdldCBBbGVydERpYWxvZ0FuaW1hdG9yKCkge1xuICAgIHJldHVybiBBbGVydERpYWxvZ0FuaW1hdG9yO1xuICB9XG59XG5cbmN1c3RvbUVsZW1lbnRzLmRlZmluZSgnb25zLWFsZXJ0LWRpYWxvZycsIEFsZXJ0RGlhbG9nRWxlbWVudCk7XG4iLCIvKlxuQ29weXJpZ2h0IDIwMTMtMjAxNSBBU0lBTCBDT1JQT1JBVElPTlxuXG5MaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xueW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG5cbiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuXG5Vbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG5kaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG5XSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cblNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbmxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuXG4qL1xuXG5pbXBvcnQgdXRpbCBmcm9tICcuLi9vbnMvdXRpbCc7XG5pbXBvcnQgYXV0b1N0eWxlIGZyb20gJy4uL29ucy9hdXRvc3R5bGUnO1xuaW1wb3J0IE1vZGlmaWVyVXRpbCBmcm9tICcuLi9vbnMvaW50ZXJuYWwvbW9kaWZpZXItdXRpbCc7XG5pbXBvcnQgQmFzZUVsZW1lbnQgZnJvbSAnLi4vb25zL2Jhc2UtZWxlbWVudCc7XG5pbXBvcnQgY29udGVudFJlYWR5IGZyb20gJy4uL29ucy9jb250ZW50LXJlYWR5JztcblxuY29uc3QgZGVmYXVsdENsYXNzTmFtZSA9ICdiYWNrLWJ1dHRvbic7XG5cbmNvbnN0IHNjaGVtZSA9IHtcbiAgJyc6ICdiYWNrLWJ1dHRvbi0tKicsXG4gICcuYmFjay1idXR0b25fX2ljb24nOiAnYmFjay1idXR0b24tLSpfX2ljb24nLFxuICAnLmJhY2stYnV0dG9uX19sYWJlbCc6ICdiYWNrLWJ1dHRvbi0tKl9fbGFiZWwnXG59O1xuXG4vKipcbiAqIEBlbGVtZW50IG9ucy1iYWNrLWJ1dHRvblxuICogQGNhdGVnb3J5IG5hdmlnYXRpb25cbiAqIEBkZXNjcmlwdGlvblxuICogICBbZW5dXG4gKiAgICAgQmFjayBidXR0b24gY29tcG9uZW50IGZvciBgPG9ucy10b29sYmFyPmAuIFB1dCBpdCBpbiB0aGUgbGVmdCBwYXJ0IG9mIHRoZSBgPG9ucy10b29sYmFyPmAuXG4gKlxuICogICAgIEl0IHdpbGwgZmluZCB0aGUgcGFyZW50IGA8b25zLW5hdmlnYXRvcj5gIGVsZW1lbnQgYW5kIHBvcCBhIHBhZ2Ugd2hlbiBjbGlja2VkLiBUaGlzIGJlaGF2aW9yIGNhbiBiZSBvdmVycmlkZW4gYnkgc3BlY2lmeWluZyB0aGUgYG9uQ2xpY2tgIHByb3BlcnR5LlxuICogICBbL2VuXVxuICogICBbamFdWy9qYV1cbiAqIEBjb2RlcGVuIGFIbUdMXG4gKiBAdHV0b3JpYWwgdmFuaWxsYS9SZWZlcmVuY2UvbmF2aWdhdG9yXG4gKiBAbW9kaWZpZXIgbWF0ZXJpYWxcbiAqICAgW2VuXU1hdGVyaWFsIERlc2lnbiBzdHlsZVsvZW5dXG4gKiAgIFtqYV1bL2phXVxuICogQHNlZWFsc28gb25zLXRvb2xiYXJcbiAqICAgW2VuXW9ucy10b29sYmFyIGNvbXBvbmVudFsvZW5dXG4gKiAgIFtqYV1vbnMtdG9vbGJhcuOCs+ODs+ODneODvOODjeODs+ODiFsvamFdXG4gKiBAc2VlYWxzbyBvbnMtbmF2aWdhdG9yXG4gKiAgIFtlbl1vbnMtbmF2aWdhdG9yIGNvbXBvbmVudFsvZW5dXG4gKiAgIFtqYV1vbnMtbmF2aWdhdG9y44Kz44Oz44Od44O844ON44Oz44OIWy9qYV1cbiAqIEBleGFtcGxlXG4gKiA8b25zLXRvb2xiYXI+XG4gKiAgIDxkaXYgY2xhc3M9XCJsZWZ0XCI+XG4gKiAgICAgPG9ucy1iYWNrLWJ1dHRvbj5CYWNrPC9vbnMtYmFjay1idXR0b24+XG4gKiAgIDwvZGl2PlxuICogICA8ZGl2IGNsYXNzPVwiY2VudGVyXCI+XG4gKiAgICAgVGl0bGVcbiAqICAgPGRpdj5cbiAqIDwvb25zLXRvb2xiYXI+XG4gKi9cblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQmFja0J1dHRvbkVsZW1lbnQgZXh0ZW5kcyBCYXNlRWxlbWVudCB7XG4gIC8qKlxuICAgKiBAYXR0cmlidXRlIG1vZGlmaWVyXG4gICAqIEB0eXBlIHtTdHJpbmd9XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgW2VuXVRoZSBhcHBlYXJhbmNlIG9mIHRoZSBiYWNrIGJ1dHRvbi5bL2VuXVxuICAgKiAgW2phXeODkOODg+OCr+ODnOOCv+ODs+OBruimi+OBn+ebruOCkuaMh+WumuOBl+OBvuOBmeOAglsvamFdXG4gICAqL1xuXG4gIGluaXQoKSB7XG4gICAgY29udGVudFJlYWR5KHRoaXMsICgpID0+IHtcbiAgICAgIHRoaXMuX2NvbXBpbGUoKTtcbiAgICB9KTtcblxuICAgIHRoaXMuX29wdGlvbnMgPSB7fTtcbiAgICB0aGlzLl9ib3VuZE9uQ2xpY2sgPSB0aGlzLl9vbkNsaWNrLmJpbmQodGhpcyk7XG4gIH1cblxuICBfY29tcGlsZSgpIHtcbiAgICBhdXRvU3R5bGUucHJlcGFyZSh0aGlzKTtcblxuICAgIHRoaXMuY2xhc3NMaXN0LmFkZChkZWZhdWx0Q2xhc3NOYW1lKTtcblxuICAgIGlmICghdXRpbC5maW5kQ2hpbGQodGhpcywgJy5iYWNrLWJ1dHRvbl9fbGFiZWwnKSkge1xuICAgICAgY29uc3QgbGFiZWwgPSB1dGlsLmNyZWF0ZSgnc3Bhbi5iYWNrLWJ1dHRvbl9fbGFiZWwnKTtcblxuICAgICAgd2hpbGUgKHRoaXMuY2hpbGROb2Rlc1swXSkge1xuICAgICAgICBsYWJlbC5hcHBlbmRDaGlsZCh0aGlzLmNoaWxkTm9kZXNbMF0pO1xuICAgICAgfVxuICAgICAgdGhpcy5hcHBlbmRDaGlsZChsYWJlbCk7XG4gICAgfVxuXG4gICAgaWYgKCF1dGlsLmZpbmRDaGlsZCh0aGlzLCAnLmJhY2stYnV0dG9uX19pY29uJykpIHtcbiAgICAgIGNvbnN0IGljb24gPSB1dGlsLmNyZWF0ZSgnc3Bhbi5iYWNrLWJ1dHRvbl9faWNvbicpO1xuXG4gICAgICB0aGlzLmluc2VydEJlZm9yZShpY29uLCB0aGlzLmNoaWxkcmVuWzBdKTtcbiAgICB9XG5cbiAgICBNb2RpZmllclV0aWwuaW5pdE1vZGlmaWVyKHRoaXMsIHNjaGVtZSk7XG4gIH1cblxuICAvKipcbiAgICogQHByb3BlcnR5IG9wdGlvbnNcbiAgICogQHR5cGUge09iamVjdH1cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXU9wdGlvbnMgb2JqZWN0LlsvZW5dXG4gICAqICAgW2phXeOCquODl+OCt+ODp+ODs+OCkuaMh+WumuOBmeOCi+OCquODluOCuOOCp+OCr+ODiOOAglsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAcHJvcGVydHkgb3B0aW9ucy5hbmltYXRpb25cbiAgICogQHR5cGUge1N0cmluZ31cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXUFuaW1hdGlvbiBuYW1lLiBBdmFpbGFibGUgYW5pbWF0aW9ucyBhcmUgXCJzbGlkZVwiLCBcImxpZnRcIiwgXCJmYWRlXCIgYW5kIFwibm9uZVwiLlxuICAgKiAgICAgVGhlc2UgYXJlIHBsYXRmb3JtIGJhc2VkIGFuaW1hdGlvbnMuIEZvciBmaXhlZCBhbmltYXRpb25zLCBhZGQgXCItaW9zXCIgb3IgXCItbWRcIlxuICAgKiAgICAgc3VmZml4IHRvIHRoZSBhbmltYXRpb24gbmFtZS4gRS5nLiBcImxpZnQtaW9zXCIsIFwibGlmdC1tZFwiLiBEZWZhdWx0cyB2YWx1ZXMgYXJlIFwic2xpZGUtaW9zXCIgYW5kIFwiZmFkZS1tZFwiLlxuICAgKiAgIFsvZW5dXG4gICAqICAgW2phXVsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAcHJvcGVydHkgb3B0aW9ucy5hbmltYXRpb25PcHRpb25zXG4gICAqIEB0eXBlIHtTdHJpbmd9XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1TcGVjaWZ5IHRoZSBhbmltYXRpb24ncyBkdXJhdGlvbiwgZGVsYXkgYW5kIHRpbWluZy4gRS5nLiAgYHtkdXJhdGlvbjogMC4yLCBkZWxheTogMC40LCB0aW1pbmc6ICdlYXNlLWluJ31gWy9lbl1cbiAgICogICBbamFd44Ki44OL44Oh44O844K344On44Oz5pmC44GuZHVyYXRpb24sIGRlbGF5LCB0aW1pbmfjgpLmjIflrprjgZfjgb7jgZnjgIJlLmcuIGB7ZHVyYXRpb246IDAuMiwgZGVsYXk6IDAuNCwgdGltaW5nOiAnZWFzZS1pbid9YCBbL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQHByb3BlcnR5IG9wdGlvbnMuY2FsbGJhY2tcbiAgICogQHR5cGUge1N0cmluZ31cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXUZ1bmN0aW9uIHRoYXQgaXMgY2FsbGVkIHdoZW4gdGhlIHRyYW5zaXRpb24gaGFzIGVuZGVkLlsvZW5dXG4gICAqICAgW2phXeOBk+OBruODoeOCveODg+ODieOBq+OCiOOCi+eUu+mdoumBt+enu+OBjOe1guS6huOBl+OBn+mam+OBq+WRvOOBs+WHuuOBleOCjOOCi+mWouaVsOOCquODluOCuOOCp+OCr+ODiOOCkuaMh+WumuOBl+OBvuOBmeOAglsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAcHJvcGVydHkgb3B0aW9ucy5yZWZyZXNoXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1UaGUgcHJldmlvdXMgcGFnZSB3aWxsIGJlIHJlZnJlc2hlZCAoZGVzdHJveWVkIGFuZCBjcmVhdGVkIGFnYWluKSBiZWZvcmUgcG9wUGFnZSBhY3Rpb24uWy9lbl1cbiAgICogICBbamFdcG9wUGFnZeOBmeOCi+WJjeOBq+OAgeWJjeOBq+OBguOCi+ODmuODvOOCuOOCkueUn+aIkOOBl+OBquOBiuOBl+OBpuabtOaWsOOBmeOCi+WgtOWQiOOBq3RydWXjgpLmjIflrprjgZfjgb7jgZnjgIJbL2phXVxuICAgKi9cbiAgZ2V0IG9wdGlvbnMoKSB7XG4gICAgcmV0dXJuIHRoaXMuX29wdGlvbnM7XG4gIH1cblxuICBzZXQgb3B0aW9ucyhvYmplY3QpIHtcbiAgICB0aGlzLl9vcHRpb25zID0gb2JqZWN0O1xuICB9XG5cbiAgLyoqXG4gICAqIEBwcm9wZXJ0eSBvbkNsaWNrXG4gICAqIEB0eXBlIHtGdW5jdGlvbn1cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXVVzZWQgdG8gb3ZlcnJpZGUgdGhlIGRlZmF1bHQgYmFjayBidXR0b24gYmVoYXZpb3IuWy9lbl1cbiAgICogICBbamFdWy9qYV1cbiAgICovXG4gIF9vbkNsaWNrKCkge1xuICAgIGlmICh0aGlzLm9uQ2xpY2spIHtcbiAgICAgIHRoaXMub25DbGljay5hcHBseSh0aGlzKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICBjb25zdCBuYXZpZ2F0b3IgPSB1dGlsLmZpbmRQYXJlbnQodGhpcywgJ29ucy1uYXZpZ2F0b3InKTtcbiAgICAgIGlmIChuYXZpZ2F0b3IpIHtcbiAgICAgICAgbmF2aWdhdG9yLnBvcFBhZ2UodGhpcy5vcHRpb25zKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBjb25uZWN0ZWRDYWxsYmFjaygpIHtcbiAgICB0aGlzLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdGhpcy5fYm91bmRPbkNsaWNrLCBmYWxzZSk7XG4gIH1cblxuICBzdGF0aWMgZ2V0IG9ic2VydmVkQXR0cmlidXRlcygpIHtcbiAgICByZXR1cm4gWydtb2RpZmllcicsICdjbGFzcyddO1xuICB9XG5cbiAgYXR0cmlidXRlQ2hhbmdlZENhbGxiYWNrKG5hbWUsIGxhc3QsIGN1cnJlbnQpIHtcbiAgICBzd2l0Y2ggKG5hbWUpIHtcbiAgICAgIGNhc2UgJ2NsYXNzJzpcbiAgICAgICAgaWYgKCF0aGlzLmNsYXNzTGlzdC5jb250YWlucyhkZWZhdWx0Q2xhc3NOYW1lKSkge1xuICAgICAgICAgIHRoaXMuY2xhc3NOYW1lID0gZGVmYXVsdENsYXNzTmFtZSArICcgJyArIGN1cnJlbnQ7XG4gICAgICAgIH1cbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIGNhc2UgJ21vZGlmaWVyJzpcbiAgICAgICAgTW9kaWZpZXJVdGlsLm9uTW9kaWZpZXJDaGFuZ2VkKGxhc3QsIGN1cnJlbnQsIHRoaXMsIHNjaGVtZSk7XG4gICAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuXG4gIGRpc2Nvbm5lY3RlZENhbGxiYWNrKCkge1xuICAgIHRoaXMucmVtb3ZlRXZlbnRMaXN0ZW5lcignY2xpY2snLCB0aGlzLl9ib3VuZE9uQ2xpY2ssIGZhbHNlKTtcbiAgfVxuXG4gIHNob3coKSB7XG4gICAgdGhpcy5zdHlsZS5kaXNwbGF5ID0gJ2lubGluZS1ibG9jayc7XG4gIH1cblxuICBoaWRlKCkge1xuICAgIHRoaXMuc3R5bGUuZGlzcGxheSA9ICdub25lJztcbiAgfVxufVxuXG5jdXN0b21FbGVtZW50cy5kZWZpbmUoJ29ucy1iYWNrLWJ1dHRvbicsIEJhY2tCdXR0b25FbGVtZW50KTtcbiIsIi8qXG5Db3B5cmlnaHQgMjAxMy0yMDE1IEFTSUFMIENPUlBPUkFUSU9OXG5cbkxpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG55b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG5Zb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcblxuICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG5cblVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbmRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbldJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxubGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5cbiovXG5cbmltcG9ydCB1dGlsIGZyb20gJy4uL29ucy91dGlsJztcbmltcG9ydCBhdXRvU3R5bGUgZnJvbSAnLi4vb25zL2F1dG9zdHlsZSc7XG5pbXBvcnQgTW9kaWZpZXJVdGlsIGZyb20gJy4uL29ucy9pbnRlcm5hbC9tb2RpZmllci11dGlsJztcbmltcG9ydCBCYXNlRWxlbWVudCBmcm9tICcuLi9vbnMvYmFzZS1lbGVtZW50JztcblxuY29uc3QgZGVmYXVsdENsYXNzTmFtZSA9ICdib3R0b20tYmFyJztcbmNvbnN0IHNjaGVtZSA9IHsnJzogJ2JvdHRvbS1iYXItLSonfTtcblxuLyoqXG4gKiBAZWxlbWVudCBvbnMtYm90dG9tLXRvb2xiYXJcbiAqIEBjYXRlZ29yeSBwYWdlXG4gKiBAZGVzY3JpcHRpb25cbiAqICAgW2VuXVRvb2xiYXIgY29tcG9uZW50IHRoYXQgaXMgcG9zaXRpb25lZCBhdCB0aGUgYm90dG9tIG9mIHRoZSBwYWdlLlsvZW5dXG4gKiAgIFtqYV3jg5rjg7zjgrjkuIvpg6jjgavphY3nva7jgZXjgozjgovjg4Tjg7zjg6vjg5Djg7znlKjjgrPjg7Pjg53jg7zjg43jg7Pjg4jjgafjgZnjgIJbL2phXVxuICogQG1vZGlmaWVyIHRyYW5zcGFyZW50XG4gKiAgIFtlbl1NYWtlIHRoZSB0b29sYmFyIHRyYW5zcGFyZW50LlsvZW5dXG4gKiAgIFtqYV3jg4Tjg7zjg6vjg5Djg7zjga7og4zmma/jgpLpgI/mmI7jgavjgZfjgabooajnpLrjgZfjgb7jgZnjgIJbL2phXVxuICogQHNlZWFsc28gb25zLXRvb2xiYXIgW2VuXW9ucy10b29sYmFyIGNvbXBvbmVudFsvZW5dW2phXW9ucy10b29sYmFy44Kz44Oz44Od44O844ON44Oz44OIWy9qYV1cbiAqIEBleGFtcGxlXG4gKiA8b25zLWJvdHRvbS10b29sYmFyPlxuICogICBDb250ZW50XG4gKiA8L29ucy1ib3R0b20tdG9vbGJhcj5cbiAqL1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQm90dG9tVG9vbGJhckVsZW1lbnQgZXh0ZW5kcyBCYXNlRWxlbWVudCB7XG4gIC8qKlxuICAgKiBAYXR0cmlidXRlIG1vZGlmaWVyXG4gICAqIEB0eXBlIHtTdHJpbmd9XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1UaGUgYXBwZWFyYW5jZSBvZiB0aGUgdG9vbGJhci5bL2VuXVxuICAgKiAgIFtqYV3jg4Tjg7zjg6vjg5Djg7zjga7opovjgZ/nm67jga7ooajnj77jgpLmjIflrprjgZfjgb7jgZnjgIJbL2phXVxuICAgKi9cblxuICBpbml0KCkge1xuICAgIHRoaXMuY2xhc3NMaXN0LmFkZChkZWZhdWx0Q2xhc3NOYW1lKTtcbiAgICBNb2RpZmllclV0aWwuaW5pdE1vZGlmaWVyKHRoaXMsIHNjaGVtZSk7XG4gIH1cblxuICBjb25uZWN0ZWRDYWxsYmFjaygpIHtcbiAgICBpZiAodXRpbC5tYXRjaCh0aGlzLnBhcmVudE5vZGUsICdvbnMtcGFnZScpKSB7XG4gICAgICB0aGlzLnBhcmVudE5vZGUuY2xhc3NMaXN0LmFkZCgncGFnZS13aXRoLWJvdHRvbS10b29sYmFyJyk7XG4gICAgfVxuICB9XG5cbiAgc3RhdGljIGdldCBvYnNlcnZlZEF0dHJpYnV0ZXMoKSB7XG4gICAgcmV0dXJuIFsnbW9kaWZpZXInLCAnY2xhc3MnXTtcbiAgfVxuXG4gIGF0dHJpYnV0ZUNoYW5nZWRDYWxsYmFjayhuYW1lLCBsYXN0LCBjdXJyZW50KSB7XG4gICAgc3dpdGNoIChuYW1lKSB7XG4gICAgICBjYXNlICdjbGFzcyc6XG4gICAgICAgIGlmICghdGhpcy5jbGFzc0xpc3QuY29udGFpbnMoZGVmYXVsdENsYXNzTmFtZSkpIHtcbiAgICAgICAgICB0aGlzLmNsYXNzTmFtZSA9IGRlZmF1bHRDbGFzc05hbWUgKyAnICcgKyBjdXJyZW50O1xuICAgICAgICB9XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnbW9kaWZpZXInOlxuICAgICAgICBNb2RpZmllclV0aWwub25Nb2RpZmllckNoYW5nZWQobGFzdCwgY3VycmVudCwgdGhpcywgc2NoZW1lKTtcbiAgICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG5cbn1cblxuY3VzdG9tRWxlbWVudHMuZGVmaW5lKCdvbnMtYm90dG9tLXRvb2xiYXInLCBCb3R0b21Ub29sYmFyRWxlbWVudCk7XG4iLCIvKlxuQ29weXJpZ2h0IDIwMTMtMjAxNSBBU0lBTCBDT1JQT1JBVElPTlxuXG5MaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xueW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG5cbiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuXG5Vbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG5kaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG5XSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cblNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbmxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuXG4qL1xuXG5pbXBvcnQgdXRpbCBmcm9tICcuLi9vbnMvdXRpbCc7XG5pbXBvcnQgYXV0b1N0eWxlIGZyb20gJy4uL29ucy9hdXRvc3R5bGUnO1xuaW1wb3J0IE1vZGlmaWVyVXRpbCBmcm9tICcuLi9vbnMvaW50ZXJuYWwvbW9kaWZpZXItdXRpbCc7XG5pbXBvcnQgQmFzZUVsZW1lbnQgZnJvbSAnLi4vb25zL2Jhc2UtZWxlbWVudCc7XG5cbmNvbnN0IHNjaGVtZSA9IHsnJzogJ2J1dHRvbi0tKid9O1xuXG5jb25zdCBkZWZhdWx0Q2xhc3NOYW1lID0gJ2J1dHRvbic7XG5cbi8qKlxuICogQGVsZW1lbnQgb25zLWJ1dHRvblxuICogQGNhdGVnb3J5IGZvcm1cbiAqIEBtb2RpZmllciBvdXRsaW5lXG4gKiAgIFtlbl1CdXR0b24gd2l0aCBvdXRsaW5lIGFuZCB0cmFuc3BhcmVudCBiYWNrZ3JvdW5kWy9lbl1cbiAqICAgW2phXeOCouOCpuODiOODqeOCpOODs+OCkuaMgeOBo+OBn+ODnOOCv+ODs+OCkuihqOekuuOBl+OBvuOBmeOAglsvamFdXG4gKiBAbW9kaWZpZXIgbGlnaHRcbiAqICAgW2VuXUJ1dHRvbiB0aGF0IGRvZXNuJ3Qgc3RhbmQgb3V0LlsvZW5dXG4gKiAgIFtqYV3nm67nq4vjgZ/jgarjgYTjg5zjgr/jg7PjgpLooajnpLrjgZfjgb7jgZnjgIJbL2phXVxuICogQG1vZGlmaWVyIHF1aWV0XG4gKiAgIFtlbl1CdXR0b24gd2l0aCBubyBvdXRsaW5lIGFuZCBvciBiYWNrZ3JvdW5kLi5bL2VuXVxuICogICBbamFd5p6g57ea44KE6IOM5pmv44GM54Sh44GE5paH5a2X44Gg44GR44Gu44Oc44K/44Oz44KS6KGo56S644GX44G+44GZ44CCWy9qYV1cbiAqIEBtb2RpZmllciBjdGFcbiAqICAgW2VuXUJ1dHRvbiB0aGF0IHJlYWxseSBzdGFuZHMgb3V0LlsvZW5dXG4gKiAgIFtqYV3nm67nq4vjgaTjg5zjgr/jg7PjgpLooajnpLrjgZfjgb7jgZnjgIJbL2phXVxuICogQG1vZGlmaWVyIGxhcmdlXG4gKiAgIFtlbl1MYXJnZSBidXR0b24gdGhhdCBjb3ZlcnMgdGhlIHdpZHRoIG9mIHRoZSBzY3JlZW4uWy9lbl1cbiAqICAgW2phXeaoquOBhOOBo+OBseOBhOOBq+W6g+OBjOOCi+Wkp+OBjeOBquODnOOCv+ODs+OCkuihqOekuuOBl+OBvuOBmeOAglsvamFdXG4gKiBAbW9kaWZpZXIgbGFyZ2UtLXF1aWV0XG4gKiAgIFtlbl1MYXJnZSBxdWlldCBidXR0b24uWy9lbl1cbiAqICAgW2phXeaoquOBhOOBo+OBseOBhOOBq+W6g+OBjOOCi3F1aWV044Oc44K/44Oz44KS6KGo56S644GX44G+44GZ44CCWy9qYV1cbiAqIEBtb2RpZmllciBsYXJnZS0tY3RhXG4gKiAgIFtlbl1MYXJnZSBjYWxsIHRvIGFjdGlvbiBidXR0b24uWy9lbl1cbiAqICAgW2phXeaoquOBhOOBo+OBseOBhOOBq+W6g+OBjOOCi2N0YeODnOOCv+ODs+OCkuihqOekuuOBl+OBvuOBmeOAglsvamFdXG4gKiBAbW9kaWZpZXIgbWF0ZXJpYWxcbiAqICAgW2VuXU1hdGVyaWFsIERlc2lnbiBidXR0b25bL2VuXVxuICogICBbamFd44Oe44OG44Oq44Ki44Or44OH44K244Kk44Oz44Gu44Oc44K/44OzWy9qYV1cbiAqIEBtb2RpZmllciBtYXRlcmlhbC0tZmxhdFxuICogICBbZW5dTWF0ZXJpYWwgRGVzaWduIGZsYXQgYnV0dG9uWy9lbl1cbiAqICAgW2phXeODnuODhuODquOCouODq+ODh+OCtuOCpOODs+OBruODleODqeODg+ODiOODnOOCv+ODs1svamFdXG4gKiBAZGVzY3JpcHRpb25cbiAqICAgW2VuXVxuICogICAgIEJ1dHRvbiBjb21wb25lbnQuIElmIHlvdSB3YW50IHRvIHBsYWNlIGEgYnV0dG9uIGluIGEgdG9vbGJhciwgdXNlIGA8b25zLXRvb2xiYXItYnV0dG9uPmAgb3IgYDxvbnMtYmFjay1idXR0b24+YCBpbnN0ZWFkLlxuICpcbiAqICAgICBXaWxsIGF1dG9tYXRpY2FsbHkgZGlzcGxheSBhcyBhIE1hdGVyaWFsIERlc2lnbiBidXR0b24gd2l0aCBhIHJpcHBsZSBlZmZlY3Qgb24gQW5kcm9pZC5cbiAqICAgWy9lbl1cbiAqICAgW2phXeODnOOCv+ODs+eUqOOCs+ODs+ODneODvOODjeODs+ODiOOAguODhOODvOODq+ODkOODvOOBq+ODnOOCv+ODs+OCkuioree9ruOBmeOCi+WgtOWQiOOBr+OAgW9ucy10b29sYmFyLWJ1dHRvbuOCguOBl+OBj+OBr29ucy1iYWNrLWJ1dHRvbuOCs+ODs+ODneODvOODjeODs+ODiOOCkuS9v+eUqOOBl+OBvuOBmeOAglsvamFdXG4gKiBAY29kZXBlbiBoTGF5eFxuICogQHR1dG9yaWFsIHZhbmlsbGEvUmVmZXJlbmNlL2J1dHRvblxuICogQGd1aWRlIHVzaW5nLW1vZGlmaWVyIFtlbl1Nb3JlIGRldGFpbHMgYWJvdXQgdGhlIGBtb2RpZmllcmAgYXR0cmlidXRlWy9lbl1bamFdbW9kaWZpZXLlsZ7mgKfjga7kvb/jgYTmlrlbL2phXVxuICogQGd1aWRlIGNyb3NzLXBsYXRmb3JtLXN0eWxpbmcgW2VuXUluZm9ybWF0aW9uIGFib3V0IGNyb3NzIHBsYXRmb3JtIHN0eWxpbmdbL2VuXVtqYV1JbmZvcm1hdGlvbiBhYm91dCBjcm9zcyBwbGF0Zm9ybSBzdHlsaW5nWy9qYV1cbiAqIEBleGFtcGxlXG4gKiA8b25zLWJ1dHRvbiBtb2RpZmllcj1cImxhcmdlLS1jdGFcIj5cbiAqICAgVGFwIE1lXG4gKiA8L29ucy1idXR0b24+XG4gKi9cblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQnV0dG9uRWxlbWVudCBleHRlbmRzIEJhc2VFbGVtZW50IHtcblxuICAvKipcbiAgICogQGF0dHJpYnV0ZSBtb2RpZmllclxuICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogIFtlbl1UaGUgYXBwZWFyYW5jZSBvZiB0aGUgYnV0dG9uLlsvZW5dXG4gICAqICBbamFd44Oc44K/44Oz44Gu6KGo54++44KS5oyH5a6a44GX44G+44GZ44CCWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBhdHRyaWJ1dGUgcmlwcGxlXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgW2VuXUlmIHRoaXMgYXR0cmlidXRlIGlzIGRlZmluZWQsIHRoZSBidXR0b24gd2lsbCBoYXZlIGEgcmlwcGxlIGVmZmVjdC5bL2VuXVxuICAgKiAgW2phXVsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAYXR0cmlidXRlIGRpc2FibGVkXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1TcGVjaWZ5IGlmIGJ1dHRvbiBzaG91bGQgYmUgZGlzYWJsZWQuWy9lbl1cbiAgICogICBbamFd44Oc44K/44Oz44KS54Sh5Yq55YyW44GZ44KL5aC05ZCI44Gv5oyH5a6a44GX44G+44GZ44CCWy9qYV1cbiAgICovXG5cbiAgaW5pdCgpIHtcbiAgICB0aGlzLl9jb21waWxlKCk7XG4gIH1cblxuICBzdGF0aWMgZ2V0IG9ic2VydmVkQXR0cmlidXRlcygpIHtcbiAgICByZXR1cm4gWydtb2RpZmllcicsICdyaXBwbGUnLCAnY2xhc3MnXTtcbiAgfVxuXG4gIGF0dHJpYnV0ZUNoYW5nZWRDYWxsYmFjayhuYW1lLCBsYXN0LCBjdXJyZW50KSB7XG4gICAgc3dpdGNoIChuYW1lKSB7XG4gICAgICBjYXNlICdjbGFzcyc6XG4gICAgICAgIGlmICghdGhpcy5jbGFzc0xpc3QuY29udGFpbnMoZGVmYXVsdENsYXNzTmFtZSkpIHtcbiAgICAgICAgICB0aGlzLmNsYXNzTmFtZSA9IGRlZmF1bHRDbGFzc05hbWUgKyAnICcgKyBjdXJyZW50O1xuICAgICAgICB9XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnbW9kaWZpZXInOlxuICAgICAgICBNb2RpZmllclV0aWwub25Nb2RpZmllckNoYW5nZWQobGFzdCwgY3VycmVudCwgdGhpcywgc2NoZW1lKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlICdyaXBwbGUnOlxuICAgICAgICB0aGlzLl91cGRhdGVSaXBwbGUoKTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogQHByb3BlcnR5IGRpc2FibGVkXG4gICAqIEB0eXBlIHtCb29sZWFufVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dV2hldGhlciB0aGUgYnV0dG9uIGlzIGRpc2FibGVkIG9yIG5vdC5bL2VuXVxuICAgKiAgIFtqYV3nhKHlirnljJbjgZXjgozjgabjgYTjgovloLTlkIjjgatgdHJ1ZWDjgIJbL2phXVxuICAgKi9cbiAgc2V0IGRpc2FibGVkKHZhbHVlKSB7XG4gICAgcmV0dXJuIHV0aWwudG9nZ2xlQXR0cmlidXRlKHRoaXMsICdkaXNhYmxlZCcsIHZhbHVlKTtcbiAgfVxuXG4gIGdldCBkaXNhYmxlZCgpIHtcbiAgICByZXR1cm4gdGhpcy5oYXNBdHRyaWJ1dGUoJ2Rpc2FibGVkJyk7XG4gIH1cblxuICBfY29tcGlsZSgpIHtcbiAgICBhdXRvU3R5bGUucHJlcGFyZSh0aGlzKTtcblxuICAgIHRoaXMuY2xhc3NMaXN0LmFkZChkZWZhdWx0Q2xhc3NOYW1lKTtcblxuICAgIHRoaXMuX3VwZGF0ZVJpcHBsZSgpO1xuXG4gICAgTW9kaWZpZXJVdGlsLmluaXRNb2RpZmllcih0aGlzLCBzY2hlbWUpO1xuICB9XG5cbiAgX3VwZGF0ZVJpcHBsZSgpIHtcbiAgICB1dGlsLnVwZGF0ZVJpcHBsZSh0aGlzKTtcbiAgfVxufVxuXG5jdXN0b21FbGVtZW50cy5kZWZpbmUoJ29ucy1idXR0b24nLCBCdXR0b25FbGVtZW50KTtcbiIsIi8qXG5Db3B5cmlnaHQgMjAxMy0yMDE1IEFTSUFMIENPUlBPUkFUSU9OXG5cbkxpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG55b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG5Zb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcblxuICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG5cblVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbmRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbldJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxubGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5cbiovXG5cbmltcG9ydCB1dGlsIGZyb20gJy4uL29ucy91dGlsJztcbmltcG9ydCBCYXNlRWxlbWVudCBmcm9tICcuLi9vbnMvYmFzZS1lbGVtZW50JztcbmltcG9ydCBNb2RpZmllclV0aWwgZnJvbSAnLi4vb25zL2ludGVybmFsL21vZGlmaWVyLXV0aWwnO1xuY29uc3Qgc2NoZW1lID0geycnOiAnY2Fyb3VzZWwtaXRlbS0tKid9O1xuXG4vKipcbiAqIEBlbGVtZW50IG9ucy1jYXJvdXNlbC1pdGVtXG4gKiBAY2F0ZWdvcnkgY2Fyb3VzZWxcbiAqIEBkZXNjcmlwdGlvblxuICogICBbZW5dXG4gKiAgICAgQ2Fyb3VzZWwgaXRlbSBjb21wb25lbnQuIFVzZWQgYXMgYSBjaGlsZCBvZiB0aGUgYDxvbnMtY2Fyb3VzZWw+YCBlbGVtZW50LlxuICogICBbL2VuXVxuICogICBbamFdWy9qYV1cbiAqIEBjb2RlcGVuIHhiYnpPUVxuICogQHR1dG9yaWFsIHZhbmlsbGEvUmVmZXJlbmNlL2Nhcm91c2VsXG4gKiBAc2VlYWxzbyBvbnMtY2Fyb3VzZWxcbiAqICAgW2VuXWA8b25zLWNhcm91c2VsPmAgY29tcG9uZW50c1svZW5dXG4gKiAgIFtqYV08b25zLWNhcm91c2VsPuOCs+ODs+ODneODvOODjeODs+ODiFsvamFdXG4gKiBAZXhhbXBsZVxuICogPG9ucy1jYXJvdXNlbCBzdHlsZT1cIndpZHRoOiAxMDAlOyBoZWlnaHQ6IDIwMHB4XCI+XG4gKiAgIDxvbnMtY2Fyb3VzZWwtaXRlbT5cbiAqICAgIC4uLlxuICogICA8L29ucy1jYXJvdXNlbC1pdGVtPlxuICogICA8b25zLWNhcm91c2VsLWl0ZW0+XG4gKiAgICAuLi5cbiAqICAgPC9vbnMtY2Fyb3VzZWwtaXRlbT5cbiAqIDwvb25zLWNhcm91c2VsPlxuICovXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBDYXJvdXNlbEl0ZW1FbGVtZW50IGV4dGVuZHMgQmFzZUVsZW1lbnQge1xuXG4gIGluaXQoKSB7XG4gICAgdGhpcy5zdHlsZS53aWR0aCA9ICcxMDAlJztcbiAgICBNb2RpZmllclV0aWwuaW5pdE1vZGlmaWVyKHRoaXMsIHNjaGVtZSk7XG4gIH1cblxuICBzdGF0aWMgZ2V0IG9ic2VydmVkQXR0cmlidXRlcygpIHtcbiAgICByZXR1cm4gWydtb2RpZmllciddXG4gIH1cblxuICBhdHRyaWJ1dGVDaGFuZ2VkQ2FsbGJhY2sobmFtZSwgbGFzdCwgY3VycmVudCkge1xuICAgIGlmIChuYW1lID09PSAnbW9kaWZpZXInKSB7XG4gICAgICByZXR1cm4gTW9kaWZpZXJVdGlsLm9uTW9kaWZpZXJDaGFuZ2VkKGxhc3QsIGN1cnJlbnQsIHRoaXMsIHNjaGVtZSk7XG4gICAgfVxuICB9XG59XG5cbmN1c3RvbUVsZW1lbnRzLmRlZmluZSgnb25zLWNhcm91c2VsLWl0ZW0nLCBDYXJvdXNlbEl0ZW1FbGVtZW50KTtcbiIsIi8qXG5Db3B5cmlnaHQgMjAxMy0yMDE1IEFTSUFMIENPUlBPUkFUSU9OXG5cbkxpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG55b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG5Zb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcblxuICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG5cblVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbmRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbldJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxubGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5cbiovXG5cbmltcG9ydCB1dGlsIGZyb20gJy4uL29ucy91dGlsJztcbmltcG9ydCBCYXNlRWxlbWVudCBmcm9tICcuLi9vbnMvYmFzZS1lbGVtZW50JztcbmltcG9ydCBHZXN0dXJlRGV0ZWN0b3IgZnJvbSAnLi4vb25zL2dlc3R1cmUtZGV0ZWN0b3InO1xuaW1wb3J0IERvb3JMb2NrIGZyb20gJy4uL29ucy9kb29ybG9jayc7XG5pbXBvcnQgYW5pbWl0IGZyb20gJy4uL29ucy9hbmltaXQnO1xuXG5jb25zdCBWZXJ0aWNhbE1vZGVUcmFpdCA9IHtcblxuICBfZ2V0U2Nyb2xsRGVsdGE6IGZ1bmN0aW9uKGV2ZW50KSB7XG4gICAgcmV0dXJuIGV2ZW50Lmdlc3R1cmUuZGVsdGFZO1xuICB9LFxuXG4gIF9nZXRTY3JvbGxWZWxvY2l0eTogZnVuY3Rpb24oZXZlbnQpIHtcbiAgICByZXR1cm4gZXZlbnQuZ2VzdHVyZS52ZWxvY2l0eVk7XG4gIH0sXG5cbiAgX2dldEVsZW1lbnRTaXplOiBmdW5jdGlvbigpIHtcbiAgICBpZiAoIXRoaXMuX2N1cnJlbnRFbGVtZW50U2l6ZSkge1xuICAgICAgdGhpcy5fY3VycmVudEVsZW1lbnRTaXplID0gdGhpcy5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS5oZWlnaHQ7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRoaXMuX2N1cnJlbnRFbGVtZW50U2l6ZTtcbiAgfSxcblxuICBfZ2VuZXJhdGVTY3JvbGxUcmFuc2Zvcm06IGZ1bmN0aW9uKHNjcm9sbCkge1xuICAgIHJldHVybiAndHJhbnNsYXRlM2QoMHB4LCAnICsgLXNjcm9sbCArICdweCwgMHB4KSc7XG4gIH0sXG5cbiAgX3VwZGF0ZURpbWVuc2lvbkRhdGE6IGZ1bmN0aW9uKCl7XG4gICAgdGhpcy5fc3R5bGUgPSB3aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZSh0aGlzKTtcbiAgICB0aGlzLl9kaW1lbnNpb25zID0gdGhpcy5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgfSxcblxuICBfdXBkYXRlT2Zmc2V0OiBmdW5jdGlvbigpe1xuICAgIGlmICh0aGlzLmNlbnRlcmVkKSB7XG4gICAgICBjb25zdCBoZWlnaHQgPSAodGhpcy5fZGltZW5zaW9ucy5oZWlnaHQgfHwgMCkgLSBwYXJzZUludCh0aGlzLl9zdHlsZS5wYWRkaW5nVG9wLCAxMCkgLSBwYXJzZUludCh0aGlzLl9zdHlsZS5wYWRkaW5nQm90dG9tLCAxMCk7XG4gICAgICB0aGlzLl9vZmZzZXQgPSAtKGhlaWdodCAtIHRoaXMuX2dldENhcm91c2VsSXRlbVNpemUoKSkgLyAyO1xuICAgIH1cbiAgfSxcblxuICBfbGF5b3V0Q2Fyb3VzZWxJdGVtczogZnVuY3Rpb24oKSB7XG4gICAgY29uc3QgY2hpbGRyZW4gPSB0aGlzLl9nZXRDYXJvdXNlbEl0ZW1FbGVtZW50cygpO1xuXG4gICAgY29uc3Qgc2l6ZUF0dHIgPSB0aGlzLl9nZXRDYXJvdXNlbEl0ZW1TaXplQXR0cigpO1xuICAgIGNvbnN0IHNpemVJbmZvID0gdGhpcy5fZGVjb21wb3NlU2l6ZVN0cmluZyhzaXplQXR0cik7XG5cbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGNoaWxkcmVuLmxlbmd0aDsgaSsrKSB7XG4gICAgICBjaGlsZHJlbltpXS5zdHlsZS5wb3NpdGlvbiA9ICdhYnNvbHV0ZSc7XG4gICAgICBjaGlsZHJlbltpXS5zdHlsZS5oZWlnaHQgPSBzaXplQXR0cjtcbiAgICAgIGNoaWxkcmVuW2ldLnN0eWxlLnZpc2liaWxpdHkgPSAndmlzaWJsZSc7XG4gICAgICBjaGlsZHJlbltpXS5zdHlsZS50b3AgPSAoaSAqIHNpemVJbmZvLm51bWJlcikgKyBzaXplSW5mby51bml0O1xuICAgIH1cbiAgfSxcblxuICBfc2V0dXA6IGZ1bmN0aW9uKCl7XG4gICAgdGhpcy5fdXBkYXRlRGltZW5zaW9uRGF0YSgpO1xuICAgIHRoaXMuX3VwZGF0ZU9mZnNldCgpO1xuICAgIHRoaXMuX2xheW91dENhcm91c2VsSXRlbXMoKTtcbiAgfVxufTtcblxuY29uc3QgSG9yaXpvbnRhbE1vZGVUcmFpdCA9IHtcblxuICBfZ2V0U2Nyb2xsRGVsdGE6IGZ1bmN0aW9uKGV2ZW50KSB7XG4gICAgcmV0dXJuIGV2ZW50Lmdlc3R1cmUuZGVsdGFYO1xuICB9LFxuXG4gIF9nZXRTY3JvbGxWZWxvY2l0eTogZnVuY3Rpb24oZXZlbnQpIHtcbiAgICByZXR1cm4gZXZlbnQuZ2VzdHVyZS52ZWxvY2l0eVg7XG4gIH0sXG5cbiAgX2dldEVsZW1lbnRTaXplOiBmdW5jdGlvbigpIHtcbiAgICBpZiAoIXRoaXMuX2N1cnJlbnRFbGVtZW50U2l6ZSkge1xuICAgICAgdGhpcy5fY3VycmVudEVsZW1lbnRTaXplID0gdGhpcy5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS53aWR0aDtcbiAgICB9XG5cbiAgICByZXR1cm4gdGhpcy5fY3VycmVudEVsZW1lbnRTaXplO1xuICB9LFxuXG4gIF9nZW5lcmF0ZVNjcm9sbFRyYW5zZm9ybTogZnVuY3Rpb24oc2Nyb2xsKSB7XG4gICAgcmV0dXJuICd0cmFuc2xhdGUzZCgnICsgLXNjcm9sbCArICdweCwgMHB4LCAwcHgpJztcbiAgfSxcblxuICBfdXBkYXRlRGltZW5zaW9uRGF0YTogZnVuY3Rpb24oKXtcbiAgICB0aGlzLl9zdHlsZSA9IHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKHRoaXMpO1xuICAgIHRoaXMuX2RpbWVuc2lvbnMgPSB0aGlzLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICB9LFxuXG4gIF91cGRhdGVPZmZzZXQ6IGZ1bmN0aW9uKCl7XG4gICAgaWYgKHRoaXMuY2VudGVyZWQpIHtcbiAgICAgIGNvbnN0IHdpZHRoID0gKHRoaXMuX2RpbWVuc2lvbnMud2lkdGggfHwgMCkgLSBwYXJzZUludCh0aGlzLl9zdHlsZS5wYWRkaW5nTGVmdCwgMTApIC0gcGFyc2VJbnQodGhpcy5fc3R5bGUucGFkZGluZ1JpZ2h0LCAxMCk7XG4gICAgICB0aGlzLl9vZmZzZXQgPSAtKHdpZHRoIC0gdGhpcy5fZ2V0Q2Fyb3VzZWxJdGVtU2l6ZSgpKSAvIDI7XG4gICAgfVxuICB9LFxuXG4gIF9sYXlvdXRDYXJvdXNlbEl0ZW1zOiBmdW5jdGlvbigpIHtcbiAgICBjb25zdCBjaGlsZHJlbiA9IHRoaXMuX2dldENhcm91c2VsSXRlbUVsZW1lbnRzKCk7XG5cbiAgICBjb25zdCBzaXplQXR0ciA9IHRoaXMuX2dldENhcm91c2VsSXRlbVNpemVBdHRyKCk7XG4gICAgY29uc3Qgc2l6ZUluZm8gPSB0aGlzLl9kZWNvbXBvc2VTaXplU3RyaW5nKHNpemVBdHRyKTtcblxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgY2hpbGRyZW4ubGVuZ3RoOyBpKyspIHtcbiAgICAgIGNoaWxkcmVuW2ldLnN0eWxlLnBvc2l0aW9uID0gJ2Fic29sdXRlJztcbiAgICAgIGNoaWxkcmVuW2ldLnN0eWxlLndpZHRoID0gc2l6ZUF0dHI7XG4gICAgICBjaGlsZHJlbltpXS5zdHlsZS52aXNpYmlsaXR5ID0gJ3Zpc2libGUnO1xuICAgICAgY2hpbGRyZW5baV0uc3R5bGUubGVmdCA9IChpICogc2l6ZUluZm8ubnVtYmVyKSArIHNpemVJbmZvLnVuaXQ7XG4gICAgfVxuICB9LFxuXG4gIF9zZXR1cDogZnVuY3Rpb24oKXtcbiAgICB0aGlzLl91cGRhdGVEaW1lbnNpb25EYXRhKCk7XG4gICAgdGhpcy5fdXBkYXRlT2Zmc2V0KCk7XG4gICAgdGhpcy5fbGF5b3V0Q2Fyb3VzZWxJdGVtcygpO1xuICB9XG59O1xuXG4vKipcbiAqIEBlbGVtZW50IG9ucy1jYXJvdXNlbFxuICogQGNhdGVnb3J5IGNhcm91c2VsXG4gKiBAZGVzY3JpcHRpb25cbiAqICAgW2VuXVxuICogICAgIENhcm91c2VsIGNvbXBvbmVudC4gQSBjYXJvdXNlbCBjYW4gYmUgdXNlZCB0byBkaXNwbGF5IHNldmVyYWwgaXRlbXMgaW4gdGhlIHNhbWUgc3BhY2UuXG4gKlxuICogICAgIFRoZSBjb21wb25lbnQgc3VwcG9ydHMgZGlzcGxheWluZyBjb250ZW50IGJvdGggaG9yaXpvbnRhbGx5IGFuZCB2ZXJ0aWNhbGx5LiBUaGUgdXNlciBjYW4gc2Nyb2xsIHRocm91Z2ggdGhlIGl0ZW1zIGJ5IGRyYWdnaW5nIGFuZCBpdCBjYW4gYWxzbyBiZSBjb250cm9sbGVyIHByb2dyYW1tYXRpY2FsbHkuXG4gKiAgIFsvZW5dXG4gKiAgIFtqYV1bL2phXVxuICogQGNvZGVwZW4geGJiek9RXG4gKiBAdHV0b3JpYWwgdmFuaWxsYS9SZWZlcmVuY2UvY2Fyb3VzZWxcbiAqIEBzZWVhbHNvIG9ucy1jYXJvdXNlbC1pdGVtXG4gKiAgIFtlbl1gPG9ucy1jYXJvdXNlbC1pdGVtPmAgY29tcG9uZW50Wy9lbl1cbiAqICAgW2phXW9ucy1jYXJvdXNlbC1pdGVt44Kz44Oz44Od44O844ON44Oz44OIWy9qYV1cbiAqIEBleGFtcGxlXG4gKiA8b25zLWNhcm91c2VsIHN0eWxlPVwid2lkdGg6IDEwMCU7IGhlaWdodDogMjAwcHhcIj5cbiAqICAgPG9ucy1jYXJvdXNlbC1pdGVtPlxuICogICAgLi4uXG4gKiAgIDwvb25zLWNhcm91c2VsLWl0ZW0+XG4gKiAgIDxvbnMtY2Fyb3VzZWwtaXRlbT5cbiAqICAgIC4uLlxuICogICA8L29ucy1jYXJvdXNlbC1pdGVtPlxuICogPC9vbnMtY2Fyb3VzZWw+XG4gKi9cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIENhcm91c2VsRWxlbWVudCBleHRlbmRzIEJhc2VFbGVtZW50IHtcblxuICAvKipcbiAgICogQGV2ZW50IHBvc3RjaGFuZ2VcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXUZpcmVkIGp1c3QgYWZ0ZXIgdGhlIGN1cnJlbnQgY2Fyb3VzZWwgaXRlbSBoYXMgY2hhbmdlZC5bL2VuXVxuICAgKiAgIFtqYV3nj77lnKjooajnpLrjgZfjgabjgYTjgovjgqvjg6vjg7zjgrvjg6vjga7opoHntKDjgYzlpInjgo/jgaPjgZ/mmYLjgavnmbrngavjgZfjgb7jgZnjgIJbL2phXVxuICAgKiBAcGFyYW0ge09iamVjdH0gZXZlbnRcbiAgICogICBbZW5dRXZlbnQgb2JqZWN0LlsvZW5dXG4gICAqICAgW2phXeOCpOODmeODs+ODiOOCquODluOCuOOCp+OCr+ODiOOBp+OBmeOAglsvamFdXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBldmVudC5jYXJvdXNlbFxuICAgKiAgIFtlbl1DYXJvdXNlbCBvYmplY3QuWy9lbl1cbiAgICogICBbamFd44Kk44OZ44Oz44OI44GM55m654Gr44GX44GfQ2Fyb3VzZWzjgqrjg5bjgrjjgqfjgq/jg4jjgafjgZnjgIJbL2phXVxuICAgKiBAcGFyYW0ge051bWJlcn0gZXZlbnQuYWN0aXZlSW5kZXhcbiAgICogICBbZW5dQ3VycmVudCBhY3RpdmUgaW5kZXguWy9lbl1cbiAgICogICBbamFd54++5Zyo44Ki44Kv44OG44Kj44OW44Gr44Gq44Gj44Gm44GE44KL6KaB57Sg44Gu44Kk44Oz44OH44OD44Kv44K544CCWy9qYV1cbiAgICogQHBhcmFtIHtOdW1iZXJ9IGV2ZW50Lmxhc3RBY3RpdmVJbmRleFxuICAgKiAgIFtlbl1QcmV2aW91cyBhY3RpdmUgaW5kZXguWy9lbl1cbiAgICogICBbamFd5Lul5YmN44Ki44Kv44OG44Kj44OW44Gg44Gj44Gf6KaB57Sg44Gu44Kk44Oz44OH44OD44Kv44K544CCWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBldmVudCByZWZyZXNoXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1GaXJlZCB3aGVuIHRoZSBjYXJvdXNlbCBoYXMgYmVlbiByZWZyZXNoZWQuWy9lbl1cbiAgICogICBbamFd44Kr44Or44O844K744Or44GM5pu05paw44GV44KM44Gf5pmC44Gr55m654Gr44GX44G+44GZ44CCWy9qYV1cbiAgICogQHBhcmFtIHtPYmplY3R9IGV2ZW50XG4gICAqICAgW2VuXUV2ZW50IG9iamVjdC5bL2VuXVxuICAgKiAgIFtqYV3jgqTjg5njg7Pjg4jjgqrjg5bjgrjjgqfjgq/jg4jjgafjgZnjgIJbL2phXVxuICAgKiBAcGFyYW0ge09iamVjdH0gZXZlbnQuY2Fyb3VzZWxcbiAgICogICBbZW5dQ2Fyb3VzZWwgb2JqZWN0LlsvZW5dXG4gICAqICAgW2phXeOCpOODmeODs+ODiOOBjOeZuueBq+OBl+OBn0Nhcm91c2Vs44Kq44OW44K444Kn44Kv44OI44Gn44GZ44CCWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBldmVudCBvdmVyc2Nyb2xsXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1GaXJlZCB3aGVuIHRoZSBjYXJvdXNlbCBoYXMgYmVlbiBvdmVyc2Nyb2xsZWQuWy9lbl1cbiAgICogICBbamFd44Kr44Or44O844K744Or44GM44Kq44O844OQ44O844K544Kv44Ot44O844Or44GX44Gf5pmC44Gr55m654Gr44GX44G+44GZ44CCWy9qYV1cbiAgICogQHBhcmFtIHtPYmplY3R9IGV2ZW50XG4gICAqICAgW2VuXUV2ZW50IG9iamVjdC5bL2VuXVxuICAgKiAgIFtqYV3jgqTjg5njg7Pjg4jjgqrjg5bjgrjjgqfjgq/jg4jjgafjgZnjgIJbL2phXVxuICAgKiBAcGFyYW0ge09iamVjdH0gZXZlbnQuY2Fyb3VzZWxcbiAgICogICBbZW5dRmlyZWQgd2hlbiB0aGUgY2Fyb3VzZWwgaGFzIGJlZW4gcmVmcmVzaGVkLlsvZW5dXG4gICAqICAgW2phXeOCq+ODq+ODvOOCu+ODq+OBjOabtOaWsOOBleOCjOOBn+aZguOBq+eZuueBq+OBl+OBvuOBmeOAglsvamFdXG4gICAqIEBwYXJhbSB7TnVtYmVyfSBldmVudC5hY3RpdmVJbmRleFxuICAgKiAgIFtlbl1DdXJyZW50IGFjdGl2ZSBpbmRleC5bL2VuXVxuICAgKiAgIFtqYV3nj77lnKjjgqLjgq/jg4bjgqPjg5bjgavjgarjgaPjgabjgYTjgovopoHntKDjga7jgqTjg7Pjg4fjg4Pjgq/jgrnjgIJbL2phXVxuICAgKiBAcGFyYW0ge1N0cmluZ30gZXZlbnQuZGlyZWN0aW9uXG4gICAqICAgW2VuXUNhbiBiZSBvbmUgb2YgZWl0aGVyIFwidXBcIiwgXCJkb3duXCIsIFwibGVmdFwiIG9yIFwicmlnaHRcIi5bL2VuXVxuICAgKiAgIFtqYV3jgqrjg7zjg5Djg7zjgrnjgq/jg63jg7zjg6vjgZXjgozjgZ/mlrnlkJHjgYzlvpfjgonjgozjgb7jgZnjgIJcInVwXCIsIFwiZG93blwiLCBcImxlZnRcIiwgXCJyaWdodFwi44Gu44GE44Ga44KM44GL44Gu5pa55ZCR44GM5rih44GV44KM44G+44GZ44CCWy9qYV1cbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gZXZlbnQud2FpdFRvUmV0dXJuXG4gICAqICAgW2VuXVRha2VzIGEgPGNvZGU+UHJvbWlzZTwvY29kZT4gb2JqZWN0IGFzIGFuIGFyZ3VtZW50LiBUaGUgY2Fyb3VzZWwgd2lsbCBub3Qgc2Nyb2xsIGJhY2sgdW50aWwgdGhlIHByb21pc2UgaGFzIGJlZW4gcmVzb2x2ZWQgb3IgcmVqZWN0ZWQuWy9lbl1cbiAgICogICBbamFd44GT44Gu6Zai5pWw44GvUHJvbWlzZeOCquODluOCuOOCp+OCr+ODiOOCkuW8leaVsOOBqOOBl+OBpuWPl+OBkeWPluOCiuOBvuOBmeOAgua4oeOBl+OBn1Byb21pc2Xjgqrjg5bjgrjjgqfjgq/jg4jjgYxyZXNvbHZl44GV44KM44KL44GLcmVqZWN044GV44KM44KL44G+44Gn44CB44Kr44Or44O844K744Or44Gv44K544Kv44Ot44O844Or44OQ44OD44Kv44GX44G+44Gb44KT44CCWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBhdHRyaWJ1dGUgZGlyZWN0aW9uXG4gICAqIEB0eXBlIHtTdHJpbmd9XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1UaGUgZGlyZWN0aW9uIG9mIHRoZSBjYXJvdXNlbC4gQ2FuIGJlIGVpdGhlciBcImhvcml6b250YWxcIiBvciBcInZlcnRpY2FsXCIuIERlZmF1bHQgaXMgXCJob3Jpem9udGFsXCIuWy9lbl1cbiAgICogICBbamFd44Kr44Or44O844K744Or44Gu5pa55ZCR44KS5oyH5a6a44GX44G+44GZ44CCXCJob3Jpem9udGFsXCLjgYtcInZlcnRpY2FsXCLjgpLmjIflrprjgafjgY3jgb7jgZnjgIJcImhvcml6b250YWxcIuOBjOODh+ODleOCqeODq+ODiOWApOOBp+OBmeOAglsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAYXR0cmlidXRlIGZ1bGxzY3JlZW5cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXUlmIHRoaXMgYXR0cmlidXRlIGlzIHNldCB0aGUgY2Fyb3VzZWwgd2lsbCBjb3ZlciB0aGUgd2hvbGUgc2NyZWVuLlsvZW5dXG4gICAqICAgW2phXeOBk+OBruWxnuaAp+OBjOOBguOCi+OBqOOAgWFic29sdXRl44Od44K444K344On44Oz44KS5L2/44Gj44Gm44Kr44Or44O844K744Or44GM6Ieq5YuV55qE44Gr55S76Z2i44GE44Gj44Gx44GE44Gr5bqD44GM44KK44G+44GZ44CCWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBhdHRyaWJ1dGUgb3ZlcnNjcm9sbGFibGVcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXUlmIHRoaXMgYXR0cmlidXRlIGlzIHNldCB0aGUgY2Fyb3VzZWwgd2lsbCBiZSBzY3JvbGxhYmxlIG92ZXIgdGhlIGVkZ2UuIEl0IHdpbGwgYm91bmNlIGJhY2sgd2hlbiByZWxlYXNlZC5bL2VuXVxuICAgKiAgIFtqYV3jgZPjga7lsZ7mgKfjgYzjgYLjgovmmYLjgIHjgr/jg4Pjg4HjgoTjg4njg6njg4PjgrDjgafnq6/jgb7jgafjgrnjgq/jg63jg7zjg6vjgZfjgZ/mmYLjgavjgIHjg5Djgqbjg7Pjg4njgZnjgovjgojjgYbjgarlirnmnpzjgYzlvZPjgZ/jgorjgb7jgZnjgIJbL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQGF0dHJpYnV0ZSBjZW50ZXJlZFxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dSWYgdGhpcyBhdHRyaWJ1dGUgaXMgc2V0IHRoZSBjYXJvdXNlbCB0aGVuIHRoZSBzZWxlY3RlZCBpdGVtIHdpbGwgYmUgaW4gdGhlIGNlbnRlciBvZiB0aGUgY2Fyb3VzZWwgaW5zdGVhZCBvZiB0aGUgYmVnaW5uaW5nLiBVc2VmdWwgb25seSB3aGVuIHRoZSBpdGVtcyBhcmUgc21hbGxlciB0aGFuIHRoZSBjYXJvdXNlbC4gWy9lbl1cbiAgICogICBbamFd44GT44Gu5bGe5oCn44GM44GC44KL5pmC44CB6YG444KT44Gn44GE44KLb25zLWNhcm91c2VsLWl0ZW3jga/jgqvjg6vjg7zjgrvjg6vjga7nnJ/jgpPkuK3jgbjooYzjgY3jgb7jgZnjgILpoIXnm67jgYzjgqvjg6vjg7zjgrvjg6vjgojjgorjgoLlsI/jgZXjgYTloLTlkIjjgavjga7jgb/jgIHjgZPjgozjga/kvr/liKnjgafjgZnjgIJbL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQGF0dHJpYnV0ZSBpdGVtLXdpZHRoXG4gICAqIEB0eXBlIHtTdHJpbmd9XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgICBbZW5db25zLWNhcm91c2VsLWl0ZW0ncyB3aWR0aC4gT25seSB3b3JrcyB3aGVuIHRoZSBkaXJlY3Rpb24gaXMgc2V0IHRvIFwiaG9yaXpvbnRhbFwiLlsvZW5dXG4gICAqICAgIFtqYV1vbnMtY2Fyb3VzZWwtaXRlbeOBruW5heOCkuaMh+WumuOBl+OBvuOBmeOAguOBk+OBruWxnuaAp+OBr+OAgWRpcmVjdGlvbuWxnuaAp+OBq1wiaG9yaXpvbnRhbFwi44KS5oyH5a6a44GX44Gf5pmC44Gu44G/5pyJ5Yq544Gr44Gq44KK44G+44GZ44CCWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBhdHRyaWJ1dGUgaXRlbS1oZWlnaHRcbiAgICogQHR5cGUge1N0cmluZ31cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXW9ucy1jYXJvdXNlbC1pdGVtJ3MgaGVpZ2h0LiBPbmx5IHdvcmtzIHdoZW4gdGhlIGRpcmVjdGlvbiBpcyBzZXQgdG8gXCJ2ZXJ0aWNhbFwiLlsvZW5dXG4gICAqICAgW2phXW9ucy1jYXJvdXNlbC1pdGVt44Gu6auY44GV44KS5oyH5a6a44GX44G+44GZ44CC44GT44Gu5bGe5oCn44Gv44CBZGlyZWN0aW9u5bGe5oCn44GrXCJ2ZXJ0aWNhbFwi44KS5oyH5a6a44GX44Gf5pmC44Gu44G/5pyJ5Yq544Gr44Gq44KK44G+44GZ44CCWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBhdHRyaWJ1dGUgYXV0by1zY3JvbGxcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXUlmIHRoaXMgYXR0cmlidXRlIGlzIHNldCB0aGUgY2Fyb3VzZWwgd2lsbCBiZSBhdXRvbWF0aWNhbGx5IHNjcm9sbGVkIHRvIHRoZSBjbG9zZXN0IGl0ZW0gYm9yZGVyIHdoZW4gcmVsZWFzZWQuWy9lbl1cbiAgICogICBbamFd44GT44Gu5bGe5oCn44GM44GC44KL5pmC44CB5LiA55Wq6L+R44GEY2Fyb3VzZWwtaXRlbeOBruWig+eVjOOBvuOBp+iHquWLleeahOOBq+OCueOCr+ODreODvOODq+OBmeOCi+OCiOOBhuOBq+OBquOCiuOBvuOBmeOAglsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAYXR0cmlidXRlIGF1dG8tc2Nyb2xsLXJhdGlvXG4gICAqIEB0eXBlIHtOdW1iZXJ9XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgICBbZW5dQSBudW1iZXIgYmV0d2VlbiAwLjAgYW5kIDEuMCB0aGF0IHNwZWNpZmllcyBob3cgbXVjaCB0aGUgdXNlciBtdXN0IGRyYWcgdGhlIGNhcm91c2VsIGluIG9yZGVyIGZvciBpdCB0byBhdXRvIHNjcm9sbCB0byB0aGUgbmV4dCBpdGVtLlsvZW5dXG4gICAqICAgIFtqYV0wLjDjgYvjgokxLjDjgb7jgafjga7lgKTjgpLmjIflrprjgZfjgb7jgZnjgILjgqvjg6vjg7zjgrvjg6vjga7opoHntKDjgpLjganjgozjgZDjgonjgYTjga7libLlkIjjgb7jgafjg4njg6njg4PjgrDjgZnjgovjgajmrKHjga7opoHntKDjgavoh6rli5XnmoTjgavjgrnjgq/jg63jg7zjg6vjgZnjgovjgYvjgpLmjIflrprjgZfjgb7jgZnjgIJbL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQGF0dHJpYnV0ZSBzd2lwZWFibGVcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXUlmIHRoaXMgYXR0cmlidXRlIGlzIHNldCB0aGUgY2Fyb3VzZWwgY2FuIGJlIHNjcm9sbGVkIGJ5IGRyYWcgb3Igc3dpcGUuWy9lbl1cbiAgICogICBbamFd44GT44Gu5bGe5oCn44GM44GC44KL5pmC44CB44Kr44Or44O844K744Or44KS44K544Ov44Kk44OX44KE44OJ44Op44OD44Kw44Gn56e75YuV44Gn44GN44KL44KI44GG44Gr44Gq44KK44G+44GZ44CCWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBhdHRyaWJ1dGUgZGlzYWJsZWRcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXUlmIHRoaXMgYXR0cmlidXRlIGlzIHNldCB0aGUgY2Fyb3VzZWwgaXMgZGlzYWJsZWQuWy9lbl1cbiAgICogICBbamFd44GT44Gu5bGe5oCn44GM44GC44KL5pmC44CBZHJhZ+OChHRvdWNo44KEc3dpcGXjgpLlj5fjgZHku5jjgZHjgarjgY/jgarjgorjgb7jgZnjgIJbL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQGF0dHJpYnV0ZSBpbml0aWFsLWluZGV4XG4gICAqIEBpbml0b25seVxuICAgKiBAdHlwZSB7TnVtYmVyfVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dU3BlY2lmeSB0aGUgaW5kZXggb2YgdGhlIG9ucy1jYXJvdXNlbC1pdGVtIHRvIHNob3cgaW5pdGlhbGx5LiBEZWZhdWx0IGlzIDAuWy9lbl1cbiAgICogICBbamFd5pyA5Yid44Gr6KGo56S644GZ44KLb25zLWNhcm91c2VsLWl0ZW3jgpIw5aeL44G+44KK44Gu44Kk44Oz44OH44OD44Kv44K544Gn5oyH5a6a44GX44G+44GZ44CC44OH44OV44Kp44Or44OI5YCk44GvIDAg44Gn44GZ44CCWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBhdHRyaWJ1dGUgYXV0by1yZWZyZXNoXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1XaGVuIHRoaXMgYXR0cmlidXRlIGlzIHNldCB0aGUgY2Fyb3VzZWwgd2lsbCBhdXRvbWF0aWNhbGx5IHJlZnJlc2ggd2hlbiB0aGUgbnVtYmVyIG9mIGNoaWxkIG5vZGVzIGNoYW5nZS5bL2VuXVxuICAgKiAgIFtqYV3jgZPjga7lsZ7mgKfjgYzjgYLjgovmmYLjgIHlrZDopoHntKDjga7mlbDjgYzlpInjgo/jgovjgajjgqvjg6vjg7zjgrvjg6vjga/oh6rli5XnmoTjgavmm7TmlrDjgZXjgozjgovjgojjgYbjgavjgarjgorjgb7jgZnjgIJbL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQGF0dHJpYnV0ZSBhbmltYXRpb25cbiAgICogQHR5cGUge1N0cmluZ31cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXUlmIHRoaXMgYXR0cmlidXRlIGlzIHNldCB0byBgXCJub25lXCJgIHRoZSB0cmFuc2l0aW9ucyB3aWxsIG5vdCBiZSBhbmltYXRlZC5bL2VuXVxuICAgKiAgIFtqYV1bL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQGF0dHJpYnV0ZSBhbmltYXRpb24tb3B0aW9uc1xuICAgKiBAdHlwZSB7RXhwcmVzc2lvbn1cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXVNwZWNpZnkgdGhlIGFuaW1hdGlvbidzIGR1cmF0aW9uLCB0aW1pbmcgYW5kIGRlbGF5IHdpdGggYW4gb2JqZWN0IGxpdGVyYWwuIEUuZy4gYHtkdXJhdGlvbjogMC4yLCBkZWxheTogMSwgdGltaW5nOiAnZWFzZS1pbid9YC5bL2VuXVxuICAgKiAgIFtqYV3jgqLjg4vjg6Hjg7zjgrfjg6fjg7PmmYLjga5kdXJhdGlvbiwgdGltaW5nLCBkZWxheeOCkuOCquODluOCuOOCp+OCr+ODiOODquODhuODqeODq+OBp+aMh+WumuOBl+OBvuOBmeOAguS+i++8mntkdXJhdGlvbjogMC4yLCBkZWxheTogMSwgdGltaW5nOiAnZWFzZS1pbid9Wy9qYV1cbiAgICovXG5cbiAgaW5pdCgpIHtcbiAgICB0aGlzLl9kb29yTG9jayA9IG5ldyBEb29yTG9jaygpO1xuICAgIHRoaXMuX3Njcm9sbCA9IDA7XG4gICAgdGhpcy5fb2Zmc2V0ID0gMDtcbiAgICB0aGlzLl9sYXN0QWN0aXZlSW5kZXggPSAwO1xuXG4gICAgdGhpcy5fYm91bmRPbkRyYWcgPSB0aGlzLl9vbkRyYWcuYmluZCh0aGlzKTtcbiAgICB0aGlzLl9ib3VuZE9uRHJhZ0VuZCA9IHRoaXMuX29uRHJhZ0VuZC5iaW5kKHRoaXMpO1xuICAgIHRoaXMuX2JvdW5kT25SZXNpemUgPSB0aGlzLl9vblJlc2l6ZS5iaW5kKHRoaXMpO1xuXG4gICAgdGhpcy5fbWl4aW4odGhpcy5faXNWZXJ0aWNhbCgpID8gVmVydGljYWxNb2RlVHJhaXQgOiBIb3Jpem9udGFsTW9kZVRyYWl0KTtcbiAgfVxuXG4gIF9vblJlc2l6ZSgpIHtcbiAgICBjb25zdCBpID0gdGhpcy5fc2Nyb2xsIC8gdGhpcy5fY3VycmVudEVsZW1lbnRTaXplO1xuICAgIGRlbGV0ZSB0aGlzLl9jdXJyZW50RWxlbWVudFNpemU7XG4gICAgdGhpcy5zZXRBY3RpdmVJbmRleChpKTtcbiAgfVxuXG4gIF9vbkRpcmVjdGlvbkNoYW5nZSgpIHtcbiAgICBpZiAodGhpcy5faXNWZXJ0aWNhbCgpKSB7XG4gICAgICB0aGlzLnN0eWxlLm92ZXJmbG93WCA9ICdhdXRvJztcbiAgICAgIHRoaXMuc3R5bGUub3ZlcmZsb3dZID0gJyc7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuc3R5bGUub3ZlcmZsb3dYID0gJyc7XG4gICAgICB0aGlzLnN0eWxlLm92ZXJmbG93WSA9ICdhdXRvJztcbiAgICB9XG5cbiAgICB0aGlzLnJlZnJlc2goKTtcbiAgfVxuXG4gIF9zYXZlTGFzdFN0YXRlKCkge1xuICAgIHRoaXMuX2xhc3RTdGF0ZSA9IHtcbiAgICAgIGVsZW1lbnRTaXplOiB0aGlzLl9nZXRDYXJvdXNlbEl0ZW1TaXplKCksXG4gICAgICBjYXJvdXNlbEVsZW1lbnRDb3VudDogdGhpcy5pdGVtQ291bnQsXG4gICAgICB3aWR0aDogdGhpcy5fZ2V0Q2Fyb3VzZWxJdGVtU2l6ZSgpICogdGhpcy5pdGVtQ291bnRcbiAgICB9O1xuICB9XG5cbiAgLyoqXG4gICAqIEByZXR1cm4ge051bWJlcn1cbiAgICovXG4gIF9nZXRDYXJvdXNlbEl0ZW1TaXplKCkge1xuICAgIGNvbnN0IHNpemVBdHRyID0gdGhpcy5fZ2V0Q2Fyb3VzZWxJdGVtU2l6ZUF0dHIoKTtcbiAgICBjb25zdCBzaXplSW5mbyA9IHRoaXMuX2RlY29tcG9zZVNpemVTdHJpbmcoc2l6ZUF0dHIpO1xuICAgIGNvbnN0IGVsZW1lbnRTaXplID0gdGhpcy5fZ2V0RWxlbWVudFNpemUoKTtcblxuICAgIGlmIChzaXplSW5mby51bml0ID09PSAnJScpIHtcbiAgICAgIHJldHVybiBNYXRoLnJvdW5kKHNpemVJbmZvLm51bWJlciAvIDEwMCAqIGVsZW1lbnRTaXplKTtcbiAgICB9IGVsc2UgaWYgKHNpemVJbmZvLnVuaXQgPT09ICdweCcpIHtcbiAgICAgIHJldHVybiBzaXplSW5mby5udW1iZXI7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignSW52YWxpZCBzdGF0ZScpO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBAcmV0dXJuIHtOdW1iZXJ9XG4gICAqL1xuICBfZ2V0SW5pdGlhbEluZGV4KCkge1xuICAgIGNvbnN0IGluZGV4ID0gcGFyc2VJbnQodGhpcy5nZXRBdHRyaWJ1dGUoJ2luaXRpYWwtaW5kZXgnKSwgMTApO1xuXG4gICAgaWYgKHR5cGVvZiBpbmRleCA9PT0gJ251bWJlcicgJiYgIWlzTmFOKGluZGV4KSkge1xuICAgICAgcmV0dXJuIE1hdGgubWF4KE1hdGgubWluKGluZGV4LCB0aGlzLml0ZW1Db3VudCAtIDEpLCAwKTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIDA7XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIEByZXR1cm4ge1N0cmluZ31cbiAgICovXG4gIF9nZXRDYXJvdXNlbEl0ZW1TaXplQXR0cigpIHtcbiAgICBjb25zdCBhdHRyTmFtZSA9ICdpdGVtLScgKyAodGhpcy5faXNWZXJ0aWNhbCgpID8gJ2hlaWdodCcgOiAnd2lkdGgnKTtcbiAgICBjb25zdCBpdGVtU2l6ZUF0dHIgPSAoJycgKyB0aGlzLmdldEF0dHJpYnV0ZShhdHRyTmFtZSkpLnRyaW0oKTtcblxuICAgIHJldHVybiBpdGVtU2l6ZUF0dHIubWF0Y2goL15cXGQrKHB4fCUpJC8pID8gaXRlbVNpemVBdHRyIDogJzEwMCUnO1xuICB9XG5cbiAgLyoqXG4gICAqIEByZXR1cm4ge09iamVjdH1cbiAgICovXG4gIF9kZWNvbXBvc2VTaXplU3RyaW5nKHNpemUpIHtcbiAgICBjb25zdCBtYXRjaGVzID0gc2l6ZS5tYXRjaCgvXihcXGQrKShweHwlKS8pO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgIG51bWJlcjogcGFyc2VJbnQobWF0Y2hlc1sxXSwgMTApLFxuICAgICAgdW5pdDogbWF0Y2hlc1syXSxcbiAgICB9O1xuICB9XG5cbiAgX3NldHVwSW5pdGlhbEluZGV4KCkge1xuICAgIHRoaXMuX3Njcm9sbCA9ICh0aGlzLl9vZmZzZXQgfHwgMCkgKyB0aGlzLl9nZXRDYXJvdXNlbEl0ZW1TaXplKCkgKiB0aGlzLl9nZXRJbml0aWFsSW5kZXgoKTtcbiAgICB0aGlzLl9sYXN0QWN0aXZlSW5kZXggPSB0aGlzLl9nZXRJbml0aWFsSW5kZXgoKTtcbiAgICB0aGlzLl9zY3JvbGxUbyh0aGlzLl9zY3JvbGwpO1xuICB9XG5cbiAgLyoqXG4gICAqIEBtZXRob2Qgc2V0QWN0aXZlSW5kZXhcbiAgICogQHNpZ25hdHVyZSBzZXRBY3RpdmVJbmRleChpbmRleCwgW29wdGlvbnNdKVxuICAgKiBAcGFyYW0ge051bWJlcn0gaW5kZXhcbiAgICogICBbZW5dVGhlIGluZGV4IHRoYXQgdGhlIGNhcm91c2VsIHNob3VsZCBiZSBzZXQgdG8uWy9lbl1cbiAgICogICBbamFdY2Fyb3VzZWzopoHntKDjga7jgqTjg7Pjg4fjg4Pjgq/jgrnjgpLmjIflrprjgZfjgb7jgZnjgIJbL2phXVxuICAgKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnNdXG4gICAqICAgW2VuXVBhcmFtZXRlciBvYmplY3QuWy9lbl1cbiAgICogICBbamFdWy9qYV1cbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gW29wdGlvbnMuY2FsbGJhY2tdXG4gICAqICAgW2VuXUEgZnVuY3Rpb24gdGhhdCB3aWxsIGJlIGNhbGxlZCBhZnRlciB0aGUgYW5pbWF0aW9uIGlzIGZpbmlzaGVkLlsvZW5dXG4gICAqICAgW2phXVsvamFdXG4gICAqIEBwYXJhbSB7U3RyaW5nfSBbb3B0aW9ucy5hbmltYXRpb25dXG4gICAqICAgW2VuXUlmIHRoaXMgYXR0cmlidXRlIGlzIHNldCB0byBgXCJub25lXCJgIHRoZSB0cmFuc2l0aW9ucyB3aWxsIG5vdCBiZSBhbmltYXRlZC5bL2VuXVxuICAgKiAgIFtqYV1bL2phXVxuICAgKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnMuYW5pbWF0aW9uT3B0aW9uc11cbiAgICogICBbZW5dQW4gb2JqZWN0IHRoYXQgY2FuIGJlIHVzZWQgdG8gc3BlY2lmeSBkdXJhdGlvbiwgZGVsYXkgYW5kIHRpbWluZyBmdW5jdGlvbiBvZiB0aGUgYW5pbWF0aW9uLlsvZW5dXG4gICAqICAgW2phXVsvamFdXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1TcGVjaWZ5IHRoZSBpbmRleCBvZiB0aGUgYDxvbnMtY2Fyb3VzZWwtaXRlbT5gIHRvIHNob3cuWy9lbl1cbiAgICogICBbamFd6KGo56S644GZ44KLb25zLWNhcm91c2VsLWl0ZW3jgpJpbmRleOOBp+aMh+WumuOBl+OBvuOBmeOAglsvamFdXG4gICAqIEByZXR1cm4ge1Byb21pc2V9XG4gICAqICAgW2VuXVJlc29sdmVzIHRvIHRoZSBjYXJvdXNlbCBlbGVtZW50LlsvZW5dXG4gICAqICAgW2phXVsvamFdXG4gICAqL1xuICBzZXRBY3RpdmVJbmRleChpbmRleCwgb3B0aW9ucyA9IHt9KSB7XG4gICAgaWYgKG9wdGlvbnMgJiYgdHlwZW9mIG9wdGlvbnMgIT0gJ29iamVjdCcpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignb3B0aW9ucyBtdXN0IGJlIGFuIG9iamVjdC4gWW91IHN1cHBsaWVkICcgKyBvcHRpb25zKTtcbiAgICB9XG5cbiAgICBvcHRpb25zLmFuaW1hdGlvbiA9IG9wdGlvbnMuYW5pbWF0aW9uIHx8IHRoaXMuZ2V0QXR0cmlidXRlKCdhbmltYXRpb24nKTtcbiAgICBvcHRpb25zLmFuaW1hdGlvbk9wdGlvbnMgPSB1dGlsLmV4dGVuZChcbiAgICAgIHsgZHVyYXRpb246IDAuMywgdGltaW5nOiAnY3ViaWMtYmV6aWVyKC4xLCAuNywgLjEsIDEpJyB9LFxuICAgICAgb3B0aW9ucy5hbmltYXRpb25PcHRpb25zIHx8IHt9LFxuICAgICAgdGhpcy5oYXNBdHRyaWJ1dGUoJ2FuaW1hdGlvbi1vcHRpb25zJykgPyB1dGlsLmFuaW1hdGlvbk9wdGlvbnNQYXJzZSh0aGlzLmdldEF0dHJpYnV0ZSgnYW5pbWF0aW9uLW9wdGlvbnMnKSkgOiB7fVxuICAgICk7XG5cbiAgICBpbmRleCA9IE1hdGgubWF4KDAsIE1hdGgubWluKGluZGV4LCB0aGlzLml0ZW1Db3VudCAtIDEpKTtcbiAgICBjb25zdCBzY3JvbGwgPSAodGhpcy5fb2Zmc2V0IHx8IDApICsgdGhpcy5fZ2V0Q2Fyb3VzZWxJdGVtU2l6ZSgpICogaW5kZXg7XG4gICAgY29uc3QgbWF4ID0gdGhpcy5fY2FsY3VsYXRlTWF4U2Nyb2xsKCk7XG5cbiAgICB0aGlzLl9zY3JvbGwgPSBNYXRoLm1heCgwLCBNYXRoLm1pbihtYXgsIHNjcm9sbCkpO1xuICAgIHJldHVybiB0aGlzLl9zY3JvbGxUbyh0aGlzLl9zY3JvbGwsIG9wdGlvbnMpLnRoZW4oKCkgPT4ge1xuICAgICAgdGhpcy5fdHJ5RmlyZVBvc3RDaGFuZ2VFdmVudCgpO1xuICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfSk7XG5cbiAgfVxuXG4gIC8qKlxuICAgKiBAbWV0aG9kIGdldEFjdGl2ZUluZGV4XG4gICAqIEBzaWduYXR1cmUgZ2V0QWN0aXZlSW5kZXgoKVxuICAgKiBAcmV0dXJuIHtOdW1iZXJ9XG4gICAqICAgW2VuXVRoZSBjdXJyZW50IGNhcm91c2VsIGl0ZW0gaW5kZXguWy9lbl1cbiAgICogICBbamFd54++5Zyo6KGo56S644GX44Gm44GE44KL44Kr44Or44O844K744Or6KaB57Sg44Gu44Kk44Oz44OH44OD44Kv44K544GM6L+U44GV44KM44G+44GZ44CCWy9qYV1cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXVJldHVybnMgdGhlIGluZGV4IG9mIHRoZSBjdXJyZW50bHkgdmlzaWJsZSBgPG9ucy1jYXJvdXNlbC1pdGVtPmAuWy9lbl1cbiAgICogICBbamFd54++5Zyo6KGo56S644GV44KM44Gm44GE44KLb25zLWNhcm91c2VsLWl0ZW3opoHntKDjga7jgqTjg7Pjg4fjg4Pjgq/jgrnjgpLov5TjgZfjgb7jgZnjgIJbL2phXVxuICAgKi9cbiAgZ2V0QWN0aXZlSW5kZXgoKSB7XG4gICAgY29uc3Qgc2Nyb2xsID0gdGhpcy5fc2Nyb2xsIC0gKHRoaXMuX29mZnNldCB8fCAwKTtcbiAgICBjb25zdCBjb3VudCA9IHRoaXMuaXRlbUNvdW50O1xuICAgIGNvbnN0IHNpemUgPSB0aGlzLl9nZXRDYXJvdXNlbEl0ZW1TaXplKCk7XG5cbiAgICBpZiAoc2Nyb2xsIDwgMCkge1xuICAgICAgcmV0dXJuIDA7XG4gICAgfVxuXG4gICAgbGV0IGk7XG4gICAgZm9yIChpID0gMDsgaSA8IGNvdW50OyBpKyspIHtcbiAgICAgIGlmIChzaXplICogaSA8PSBzY3JvbGwgJiYgc2l6ZSAqIChpICsgMSkgPiBzY3JvbGwpIHtcbiAgICAgICAgcmV0dXJuIGk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gbWF4IGNhcm91c2VsIGluZGV4XG4gICAgcmV0dXJuIGk7XG4gIH1cblxuICAvKipcbiAgICogQG1ldGhvZCBuZXh0XG4gICAqIEBzaWduYXR1cmUgbmV4dChbb3B0aW9uc10pXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0aW9uc11cbiAgICogICBbZW5dUGFyYW1ldGVyIG9iamVjdC5bL2VuXVxuICAgKiAgIFtqYV1bL2phXVxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBbb3B0aW9ucy5jYWxsYmFja11cbiAgICogICBbZW5dQSBmdW5jdGlvbiB0aGF0IHdpbGwgYmUgZXhlY3V0ZWQgYWZ0ZXIgdGhlIGFuaW1hdGlvbiBoYXMgZmluaXNoZWQuWy9lbl1cbiAgICogICBbamFdWy9qYV1cbiAgICogQHBhcmFtIHtTdHJpbmd9IFtvcHRpb25zLmFuaW1hdGlvbl1cbiAgICogICBbZW5dSWYgdGhpcyBhdHRyaWJ1dGUgaXMgc2V0IHRvIGBcIm5vbmVcImAgdGhlIHRyYW5zaXRpb25zIHdpbGwgbm90IGJlIGFuaW1hdGVkLlsvZW5dXG4gICAqICAgW2phXVsvamFdXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0aW9ucy5hbmltYXRpb25PcHRpb25zXVxuICAgKiAgIFtlbl1BbiBvYmplY3QgdGhhdCBjYW4gYmUgdXNlZCB0byBzcGVjaWZ5IHRoZSBkdXJhdGlvbiwgZGVsYXkgYW5kIHRpbWluZyBmdW5jdGlvbiBvZiB0aGUgYW5pbWF0aW9uLlsvZW5dXG4gICAqICAgW2phXVsvamFdXG4gICAqIEByZXR1cm4ge1Byb21pc2V9XG4gICAqICAgW2VuXVJlc29sdmVzIHRvIHRoZSBjYXJvdXNlbCBlbGVtZW50Wy9lbl1cbiAgICogICBbamFdWy9qYV1cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXVNob3cgbmV4dCBgPG9ucy1jYXJvdXNlbC1pdGVtPmAuWy9lbl1cbiAgICogICBbamFd5qyh44Gub25zLWNhcm91c2VsLWl0ZW3jgpLooajnpLrjgZfjgb7jgZnjgIJbL2phXVxuICAgKi9cbiAgbmV4dChvcHRpb25zKSB7XG4gICAgcmV0dXJuIHRoaXMuc2V0QWN0aXZlSW5kZXgodGhpcy5nZXRBY3RpdmVJbmRleCgpICsgMSwgb3B0aW9ucyk7XG4gIH1cblxuICAvKipcbiAgICogQG1ldGhvZCBwcmV2XG4gICAqIEBzaWduYXR1cmUgcHJldihbb3B0aW9uc10pXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0aW9uc11cbiAgICogICBbZW5dUGFyYW1ldGVyIG9iamVjdC5bL2VuXVxuICAgKiAgIFtqYV1bL2phXVxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBbb3B0aW9ucy5jYWxsYmFja11cbiAgICogICBbZW5dQSBmdW5jdGlvbiB0aGF0IHdpbGwgYmUgZXhlY3V0ZWQgYWZ0ZXIgdGhlIGFuaW1hdGlvbiBoYXMgZmluaXNoZWQuWy9lbl1cbiAgICogICBbamFdWy9qYV1cbiAgICogQHBhcmFtIHtTdHJpbmd9IFtvcHRpb25zLmFuaW1hdGlvbl1cbiAgICogICBbZW5dSWYgdGhpcyBhdHRyaWJ1dGUgaXMgc2V0IHRvIGBcIm5vbmVcImAgdGhlIHRyYW5zaXRpb25zIHdpbGwgbm90IGJlIGFuaW1hdGVkLlsvZW5dXG4gICAqICAgW2phXVsvamFdXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0aW9ucy5hbmltYXRpb25PcHRpb25zXVxuICAgKiAgIFtlbl1BbiBvYmplY3QgdGhhdCBjYW4gYmUgdXNlZCB0byBzcGVjaWZ5IHRoZSBkdXJhdGlvbiwgZGVsYXkgYW5kIHRpbWluZyBmdW5jdGlvbiBvZiB0aGUgYW5pbWF0aW9uLlsvZW5dXG4gICAqICAgW2phXVsvamFdXG4gICAqIEByZXR1cm4ge1Byb21pc2V9XG4gICAqICAgW2VuXVJlc29sdmVzIHRvIHRoZSBjYXJvdXNlbCBlbGVtZW50Wy9lbl1cbiAgICogICBbamFdWy9qYV1cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXVNob3cgcHJldmlvdXMgYDxvbnMtY2Fyb3VzZWwtaXRlbT5gLlsvZW5dXG4gICAqICAgW2phXeWJjeOBrm9ucy1jYXJvdXNlbC1pdGVt44KS6KGo56S644GX44G+44GZ44CCWy9qYV1cbiAgICovXG4gIHByZXYob3B0aW9ucykge1xuICAgIHJldHVybiB0aGlzLnNldEFjdGl2ZUluZGV4KHRoaXMuZ2V0QWN0aXZlSW5kZXgoKSAtIDEsIG9wdGlvbnMpO1xuICB9XG5cbiAgLyoqXG4gICAqIEByZXR1cm4ge0Jvb2xlYW59XG4gICAqL1xuICBfaXNFbmFibGVkQ2hhbmdlRXZlbnQoKSB7XG4gICAgY29uc3QgZWxlbWVudFNpemUgPSB0aGlzLl9nZXRFbGVtZW50U2l6ZSgpO1xuICAgIGNvbnN0IGNhcm91c2VsSXRlbVNpemUgPSB0aGlzLl9nZXRDYXJvdXNlbEl0ZW1TaXplKCk7XG5cbiAgICByZXR1cm4gdGhpcy5hdXRvU2Nyb2xsICYmIE1hdGguYWJzKGVsZW1lbnRTaXplIC0gY2Fyb3VzZWxJdGVtU2l6ZSkgPCAwLjU7XG4gIH1cblxuICAvKipcbiAgICogQHJldHVybiB7Qm9vbGVhbn1cbiAgICovXG4gIF9pc1ZlcnRpY2FsKCkge1xuICAgIHJldHVybiB0aGlzLmdldEF0dHJpYnV0ZSgnZGlyZWN0aW9uJykgPT09ICd2ZXJ0aWNhbCc7XG4gIH1cblxuICBfcHJlcGFyZUV2ZW50TGlzdGVuZXJzKCkge1xuICAgIHRoaXMuX2dlc3R1cmVEZXRlY3RvciA9IG5ldyBHZXN0dXJlRGV0ZWN0b3IodGhpcywge1xuICAgICAgZHJhZ01pbkRpc3RhbmNlOiAxLFxuICAgICAgZHJhZ0xvY2tUb0F4aXM6IHRydWVcbiAgICB9KTtcbiAgICB0aGlzLl9tdXRhdGlvbk9ic2VydmVyID0gbmV3IE11dGF0aW9uT2JzZXJ2ZXIoKCkgPT4gdGhpcy5yZWZyZXNoKCkpO1xuXG4gICAgdGhpcy5fdXBkYXRlU3dpcGVhYmxlKCk7XG4gICAgdGhpcy5fdXBkYXRlQXV0b1JlZnJlc2goKTtcblxuICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdyZXNpemUnLCB0aGlzLl9ib3VuZE9uUmVzaXplLCB0cnVlKTtcbiAgfVxuXG4gIF9yZW1vdmVFdmVudExpc3RlbmVycygpIHtcbiAgICB0aGlzLl9nZXN0dXJlRGV0ZWN0b3IuZGlzcG9zZSgpO1xuICAgIHRoaXMuX2dlc3R1cmVEZXRlY3RvciA9IG51bGw7XG5cbiAgICB0aGlzLl9tdXRhdGlvbk9ic2VydmVyLmRpc2Nvbm5lY3QoKTtcbiAgICB0aGlzLl9tdXRhdGlvbk9ic2VydmVyID0gbnVsbDtcblxuICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdyZXNpemUnLCB0aGlzLl9ib3VuZE9uUmVzaXplLCB0cnVlKTtcbiAgfVxuXG4gIF91cGRhdGVTd2lwZWFibGUoKSB7XG4gICAgaWYgKHRoaXMuX2dlc3R1cmVEZXRlY3Rvcikge1xuICAgICAgaWYgKHRoaXMuc3dpcGVhYmxlKSB7XG4gICAgICAgIHRoaXMuX2dlc3R1cmVEZXRlY3Rvci5vbignZHJhZyBkcmFnbGVmdCBkcmFncmlnaHQgZHJhZ3VwIGRyYWdkb3duIHN3aXBlIHN3aXBlbGVmdCBzd2lwZXJpZ2h0IHN3aXBldXAgc3dpcGVkb3duJywgdGhpcy5fYm91bmRPbkRyYWcpO1xuICAgICAgICB0aGlzLl9nZXN0dXJlRGV0ZWN0b3Iub24oJ2RyYWdlbmQnLCB0aGlzLl9ib3VuZE9uRHJhZ0VuZCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLl9nZXN0dXJlRGV0ZWN0b3Iub2ZmKCdkcmFnIGRyYWdsZWZ0IGRyYWdyaWdodCBkcmFndXAgZHJhZ2Rvd24gc3dpcGUgc3dpcGVsZWZ0IHN3aXBlcmlnaHQgc3dpcGV1cCBzd2lwZWRvd24nLCB0aGlzLl9ib3VuZE9uRHJhZyk7XG4gICAgICAgIHRoaXMuX2dlc3R1cmVEZXRlY3Rvci5vZmYoJ2RyYWdlbmQnLCB0aGlzLl9ib3VuZE9uRHJhZ0VuZCk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgX3VwZGF0ZUF1dG9SZWZyZXNoKCkge1xuICAgIGlmICh0aGlzLl9tdXRhdGlvbk9ic2VydmVyKSB7XG4gICAgICBpZiAodGhpcy5oYXNBdHRyaWJ1dGUoJ2F1dG8tcmVmcmVzaCcpKSB7XG4gICAgICAgIHRoaXMuX211dGF0aW9uT2JzZXJ2ZXIub2JzZXJ2ZSh0aGlzLCB7Y2hpbGRMaXN0OiB0cnVlfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLl9tdXRhdGlvbk9ic2VydmVyLmRpc2Nvbm5lY3QoKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBfdHJ5RmlyZVBvc3RDaGFuZ2VFdmVudCgpIHtcbiAgICBjb25zdCBjdXJyZW50SW5kZXggPSB0aGlzLmdldEFjdGl2ZUluZGV4KCk7XG5cbiAgICBpZiAodGhpcy5fbGFzdEFjdGl2ZUluZGV4ICE9PSBjdXJyZW50SW5kZXgpIHtcbiAgICAgIGNvbnN0IGxhc3RBY3RpdmVJbmRleCA9IHRoaXMuX2xhc3RBY3RpdmVJbmRleDtcbiAgICAgIHRoaXMuX2xhc3RBY3RpdmVJbmRleCA9IGN1cnJlbnRJbmRleDtcblxuICAgICAgdXRpbC50cmlnZ2VyRWxlbWVudEV2ZW50KHRoaXMsICdwb3N0Y2hhbmdlJywge1xuICAgICAgICBjYXJvdXNlbDogdGhpcyxcbiAgICAgICAgYWN0aXZlSW5kZXg6IGN1cnJlbnRJbmRleCxcbiAgICAgICAgbGFzdEFjdGl2ZUluZGV4OiBsYXN0QWN0aXZlSW5kZXhcbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuXG4gIF9pc1dyb25nRGlyZWN0aW9uKGQpIHtcbiAgICAvLyB0aGlzLl9sYXN0RHJhZ0RpcmVjdGlvbiA9IGQ7XG4gICAgcmV0dXJuIHRoaXMuX2lzVmVydGljYWwoKSA/IChkID09PSAnbGVmdCcgfHwgZCA9PT0gJ3JpZ2h0JykgOiAoZCA9PT0gJ3VwJyB8fCBkID09PSAnZG93bicpO1xuICB9XG5cbiAgX29uRHJhZyhldmVudCkge1xuICAgIGlmICh0aGlzLl9pc1dyb25nRGlyZWN0aW9uKGV2ZW50Lmdlc3R1cmUuZGlyZWN0aW9uKSB8fCAoZXZlbnQudGFyZ2V0ICYmIGV2ZW50LnRhcmdldC50YWdOYW1lLnRvTG93ZXJDYXNlKCkgPT09ICdpbnB1dCcgJiYgZXZlbnQudGFyZ2V0LnR5cGUgPT09ICdyYW5nZScpKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XG5cbiAgICB0aGlzLl9sYXN0RHJhZ0V2ZW50ID0gZXZlbnQ7XG5cbiAgICBjb25zdCBzY3JvbGwgPSB0aGlzLl9zY3JvbGwgLSB0aGlzLl9nZXRTY3JvbGxEZWx0YShldmVudCk7XG4gICAgdGhpcy5fc2Nyb2xsVG8oc2Nyb2xsKTtcbiAgICBldmVudC5nZXN0dXJlLnByZXZlbnREZWZhdWx0KCk7XG5cbiAgICB0aGlzLl90cnlGaXJlUG9zdENoYW5nZUV2ZW50KCk7XG4gIH1cblxuICBfb25EcmFnRW5kKGV2ZW50KSB7XG4gICAgaWYgKCF0aGlzLl9sYXN0RHJhZ0V2ZW50KSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHRoaXMuX2N1cnJlbnRFbGVtZW50U2l6ZSA9IHVuZGVmaW5lZDtcbiAgICB0aGlzLl9zY3JvbGwgPSB0aGlzLl9zY3JvbGwgLSB0aGlzLl9nZXRTY3JvbGxEZWx0YShldmVudCk7XG5cbiAgICAvLyBpZiAoIXRoaXMuX2lzV3JvbmdEaXJlY3Rpb24odGhpcy5fbGFzdERyYWdEaXJlY3Rpb24pICYmIHRoaXMuX2dldFNjcm9sbERlbHRhKGV2ZW50KSAhPT0gMCkge1xuICAgIC8vICAgZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgLy8gfVxuXG4gICAgaWYgKHRoaXMuX2lzT3ZlclNjcm9sbCh0aGlzLl9zY3JvbGwpKSB7XG4gICAgICBsZXQgd2FpdEZvckFjdGlvbiA9IGZhbHNlO1xuICAgICAgdXRpbC50cmlnZ2VyRWxlbWVudEV2ZW50KHRoaXMsICdvdmVyc2Nyb2xsJywge1xuICAgICAgICBjYXJvdXNlbDogdGhpcyxcbiAgICAgICAgYWN0aXZlSW5kZXg6IHRoaXMuZ2V0QWN0aXZlSW5kZXgoKSxcbiAgICAgICAgZGlyZWN0aW9uOiB0aGlzLl9nZXRPdmVyU2Nyb2xsRGlyZWN0aW9uKCksXG4gICAgICAgIHdhaXRUb1JldHVybjogKHByb21pc2UpID0+IHtcbiAgICAgICAgICB3YWl0Rm9yQWN0aW9uID0gdHJ1ZTtcbiAgICAgICAgICBwcm9taXNlLnRoZW4oKCkgPT4gdGhpcy5fc2Nyb2xsVG9LaWxsT3ZlclNjcm9sbCgpKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG5cbiAgICAgIGlmICghd2FpdEZvckFjdGlvbikge1xuICAgICAgICB0aGlzLl9zY3JvbGxUb0tpbGxPdmVyU2Nyb2xsKCk7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuX3N0YXJ0TW9tZW50dW1TY3JvbGwoKTtcbiAgICB9XG4gICAgdGhpcy5fbGFzdERyYWdFdmVudCA9IG51bGw7XG5cbiAgICBldmVudC5nZXN0dXJlLnByZXZlbnREZWZhdWx0KCk7XG4gIH1cblxuICAvKipcbiAgICogQHBhcmFtIHtPYmplY3R9IHRyYWl0XG4gICAqL1xuICBfbWl4aW4odHJhaXQpIHtcbiAgICBPYmplY3Qua2V5cyh0cmFpdCkuZm9yRWFjaChmdW5jdGlvbihrZXkpIHtcbiAgICAgIHRoaXNba2V5XSA9IHRyYWl0W2tleV07XG4gICAgfS5iaW5kKHRoaXMpKTtcbiAgfVxuXG4gIF9zdGFydE1vbWVudHVtU2Nyb2xsKCkge1xuICAgIGlmICh0aGlzLl9sYXN0RHJhZ0V2ZW50KSB7XG4gICAgICBjb25zdCB2ZWxvY2l0eSA9IHRoaXMuX2dldFNjcm9sbFZlbG9jaXR5KHRoaXMuX2xhc3REcmFnRXZlbnQpO1xuICAgICAgY29uc3QgZHVyYXRpb24gPSAwLjM7XG4gICAgICBjb25zdCBzY3JvbGxEZWx0YSA9IGR1cmF0aW9uICogMTAwICogdmVsb2NpdHk7XG4gICAgICBjb25zdCBzY3JvbGwgPSB0aGlzLl9ub3JtYWxpemVTY3JvbGxQb3NpdGlvbihcbiAgICAgICAgdGhpcy5fc2Nyb2xsICsgKHRoaXMuX2dldFNjcm9sbERlbHRhKHRoaXMuX2xhc3REcmFnRXZlbnQpID4gMCA/IC1zY3JvbGxEZWx0YSA6IHNjcm9sbERlbHRhKVxuICAgICAgKTtcblxuICAgICAgdGhpcy5fc2Nyb2xsID0gc2Nyb2xsO1xuXG4gICAgICBhbmltaXQodGhpcy5fZ2V0Q2Fyb3VzZWxJdGVtRWxlbWVudHMoKSlcbiAgICAgICAgLnF1ZXVlKHtcbiAgICAgICAgICB0cmFuc2Zvcm06IHRoaXMuX2dlbmVyYXRlU2Nyb2xsVHJhbnNmb3JtKHRoaXMuX3Njcm9sbClcbiAgICAgICAgfSwge1xuICAgICAgICAgIGR1cmF0aW9uOiBkdXJhdGlvbixcbiAgICAgICAgICB0aW1pbmc6ICdjdWJpYy1iZXppZXIoLjEsIC43LCAuMSwgMSknXG4gICAgICAgIH0pXG4gICAgICAgIC5xdWV1ZShmdW5jdGlvbihkb25lKSB7XG4gICAgICAgICAgZG9uZSgpO1xuICAgICAgICAgIHRoaXMuX3RyeUZpcmVQb3N0Q2hhbmdlRXZlbnQoKTtcbiAgICAgICAgfS5iaW5kKHRoaXMpKVxuICAgICAgICAucGxheSgpO1xuICAgIH1cbiAgfVxuXG4gIF9ub3JtYWxpemVTY3JvbGxQb3NpdGlvbihzY3JvbGwpIHtcbiAgICBjb25zdCBtYXggPSB0aGlzLl9jYWxjdWxhdGVNYXhTY3JvbGwoKTtcblxuICAgIGlmICghdGhpcy5hdXRvU2Nyb2xsKSB7XG4gICAgICByZXR1cm4gTWF0aC5tYXgoMCwgTWF0aC5taW4obWF4LCBzY3JvbGwpKTtcbiAgICB9XG4gICAgbGV0IGFyciA9IFtdO1xuICAgIGNvbnN0IHNpemUgPSB0aGlzLl9nZXRDYXJvdXNlbEl0ZW1TaXplKCk7XG4gICAgY29uc3QgbmJyT2ZJdGVtcyA9IHRoaXMuaXRlbUNvdW50O1xuXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBuYnJPZkl0ZW1zOyBpKyspIHtcbiAgICAgIGlmIChpICogc2l6ZSArIHRoaXMuX29mZnNldCA8IG1heCkge1xuICAgICAgICBhcnIucHVzaChpICogc2l6ZSArIHRoaXMuX29mZnNldCk7XG4gICAgICB9XG4gICAgfVxuICAgIGFyci5wdXNoKG1heCk7XG5cbiAgICBhcnIuc29ydChmdW5jdGlvbihsZWZ0LCByaWdodCkge1xuICAgICAgbGVmdCA9IE1hdGguYWJzKGxlZnQgLSBzY3JvbGwpO1xuICAgICAgcmlnaHQgPSBNYXRoLmFicyhyaWdodCAtIHNjcm9sbCk7XG5cbiAgICAgIHJldHVybiBsZWZ0IC0gcmlnaHQ7XG4gICAgfSk7XG5cbiAgICBhcnIgPSBhcnIuZmlsdGVyKGZ1bmN0aW9uKGl0ZW0sIHBvcykge1xuICAgICAgcmV0dXJuICFwb3MgfHwgaXRlbSAhPSBhcnJbcG9zIC0gMV07XG4gICAgfSk7XG5cbiAgICBjb25zdCBsYXN0U2Nyb2xsID0gdGhpcy5fbGFzdEFjdGl2ZUluZGV4ICogc2l6ZSArIHRoaXMuX29mZnNldDtcbiAgICBjb25zdCBzY3JvbGxSYXRpbyA9IE1hdGguYWJzKHNjcm9sbCAtIGxhc3RTY3JvbGwpIC8gc2l6ZTtcbiAgICBsZXQgcmVzdWx0ID0gYXJyWzBdO1xuXG4gICAgaWYgKHNjcm9sbFJhdGlvIDw9IHRoaXMuYXV0b1Njcm9sbFJhdGlvKSB7XG4gICAgICByZXN1bHQgPSBsYXN0U2Nyb2xsO1xuICAgIH0gZWxzZSBpZiAoc2Nyb2xsUmF0aW8gPCAxLjApIHtcbiAgICAgIGlmIChhcnJbMF0gPT09IGxhc3RTY3JvbGwgJiYgYXJyLmxlbmd0aCA+IDEpIHtcbiAgICAgICAgcmVzdWx0ID0gYXJyWzFdO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBNYXRoLm1heCgwLCBNYXRoLm1pbihtYXgsIHJlc3VsdCkpO1xuICB9XG5cbiAgLyoqXG4gICAqIEByZXR1cm4ge0FycmF5fVxuICAgKi9cbiAgX2dldENhcm91c2VsSXRlbUVsZW1lbnRzKCkge1xuICAgIHJldHVybiB1dGlsLmFycmF5RnJvbSh0aGlzLmNoaWxkcmVuKVxuICAgICAgLmZpbHRlcigoY2hpbGQpID0+IGNoaWxkLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkgPT09ICdvbnMtY2Fyb3VzZWwtaXRlbScpO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7TnVtYmVyfSBzY3JvbGxcbiAgICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zXVxuICAgKiBAcmV0dXJuIHtQcm9taXNlfSBSZXNvbHZlcyB0byB0aGUgY2Fyb3VzZWwgZWxlbWVudFxuICAgKi9cbiAgX3Njcm9sbFRvKHNjcm9sbCwgb3B0aW9ucyA9IHt9KSB7XG4gICAgY29uc3QgaXNPdmVyc2Nyb2xsYWJsZSA9IHRoaXMub3ZlcnNjcm9sbGFibGU7XG5cbiAgICBjb25zdCBub3JtYWxpemVTY3JvbGwgPSAoc2Nyb2xsKSA9PiB7XG4gICAgICBjb25zdCByYXRpbyA9IDAuMzU7XG5cbiAgICAgIGlmIChzY3JvbGwgPCAwKSB7XG4gICAgICAgIHJldHVybiBpc092ZXJzY3JvbGxhYmxlID8gTWF0aC5yb3VuZChzY3JvbGwgKiByYXRpbykgOiAwO1xuICAgICAgfVxuXG4gICAgICBjb25zdCBtYXhTY3JvbGwgPSB0aGlzLl9jYWxjdWxhdGVNYXhTY3JvbGwoKTtcbiAgICAgIGlmIChtYXhTY3JvbGwgPCBzY3JvbGwpIHtcbiAgICAgICAgcmV0dXJuIGlzT3ZlcnNjcm9sbGFibGUgPyBtYXhTY3JvbGwgKyBNYXRoLnJvdW5kKChzY3JvbGwgLSBtYXhTY3JvbGwpICogcmF0aW8pIDogbWF4U2Nyb2xsO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gc2Nyb2xsO1xuICAgIH07XG5cbiAgICByZXR1cm4gbmV3IFByb21pc2UocmVzb2x2ZSA9PiB7XG4gICAgICBhbmltaXQodGhpcy5fZ2V0Q2Fyb3VzZWxJdGVtRWxlbWVudHMoKSlcbiAgICAgICAgLnF1ZXVlKHtcbiAgICAgICAgICB0cmFuc2Zvcm06IHRoaXMuX2dlbmVyYXRlU2Nyb2xsVHJhbnNmb3JtKG5vcm1hbGl6ZVNjcm9sbChzY3JvbGwpKVxuICAgICAgICB9LCBvcHRpb25zLmFuaW1hdGlvbiAgIT09ICdub25lJyA/IG9wdGlvbnMuYW5pbWF0aW9uT3B0aW9ucyA6IHt9KVxuICAgICAgICAucGxheSgoKSA9PiB7XG4gICAgICAgICAgaWYgKG9wdGlvbnMuY2FsbGJhY2sgaW5zdGFuY2VvZiBGdW5jdGlvbikge1xuICAgICAgICAgICAgb3B0aW9ucy5jYWxsYmFjaygpO1xuICAgICAgICAgIH1cbiAgICAgICAgICByZXNvbHZlKCk7XG4gICAgICAgIH0pO1xuICAgIH0pO1xuICB9XG5cbiAgX2NhbGN1bGF0ZU1heFNjcm9sbCgpIHtcbiAgICBjb25zdCBtYXggPSB0aGlzLml0ZW1Db3VudCAqIHRoaXMuX2dldENhcm91c2VsSXRlbVNpemUoKSAtIHRoaXMuX2dldEVsZW1lbnRTaXplKCk7XG4gICAgcmV0dXJuIE1hdGguY2VpbChtYXggPCAwID8gMCA6IG1heCk7IC8vIE5lZWQgdG8gcmV0dXJuIGFuIGludGVnZXIgdmFsdWUuXG4gIH1cblxuICBfaXNPdmVyU2Nyb2xsKHNjcm9sbCkge1xuICAgIGlmIChzY3JvbGwgPCAwIHx8IHNjcm9sbCA+IHRoaXMuX2NhbGN1bGF0ZU1heFNjcm9sbCgpKSB7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgX2dldE92ZXJTY3JvbGxEaXJlY3Rpb24oKSB7XG4gICAgaWYgKHRoaXMuX2lzVmVydGljYWwoKSkge1xuICAgICAgcmV0dXJuIHRoaXMuX3Njcm9sbCA8PSAwID8gJ3VwJyA6ICdkb3duJztcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIHRoaXMuX3Njcm9sbCA8PSAwID8gJ2xlZnQnIDogJ3JpZ2h0JztcbiAgICB9XG4gIH1cblxuICBfc2Nyb2xsVG9LaWxsT3ZlclNjcm9sbCgpIHtcbiAgICBjb25zdCBkdXJhdGlvbiA9IDAuNDtcblxuICAgIGlmICh0aGlzLl9zY3JvbGwgPCAwKSB7XG4gICAgICBhbmltaXQodGhpcy5fZ2V0Q2Fyb3VzZWxJdGVtRWxlbWVudHMoKSlcbiAgICAgICAgLnF1ZXVlKHtcbiAgICAgICAgICB0cmFuc2Zvcm06IHRoaXMuX2dlbmVyYXRlU2Nyb2xsVHJhbnNmb3JtKDApXG4gICAgICAgIH0sIHtcbiAgICAgICAgICBkdXJhdGlvbjogZHVyYXRpb24sXG4gICAgICAgICAgdGltaW5nOiAnY3ViaWMtYmV6aWVyKC4xLCAuNCwgLjEsIDEpJ1xuICAgICAgICB9KVxuICAgICAgICAucXVldWUoZnVuY3Rpb24oZG9uZSkge1xuICAgICAgICAgIGRvbmUoKTtcbiAgICAgICAgICB0aGlzLl90cnlGaXJlUG9zdENoYW5nZUV2ZW50KCk7XG4gICAgICAgIH0uYmluZCh0aGlzKSlcbiAgICAgICAgLnBsYXkoKTtcbiAgICAgIHRoaXMuX3Njcm9sbCA9IDA7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgY29uc3QgbWF4U2Nyb2xsID0gdGhpcy5fY2FsY3VsYXRlTWF4U2Nyb2xsKCk7XG5cbiAgICBpZiAobWF4U2Nyb2xsIDwgdGhpcy5fc2Nyb2xsKSB7XG4gICAgICBhbmltaXQodGhpcy5fZ2V0Q2Fyb3VzZWxJdGVtRWxlbWVudHMoKSlcbiAgICAgICAgLnF1ZXVlKHtcbiAgICAgICAgICB0cmFuc2Zvcm06IHRoaXMuX2dlbmVyYXRlU2Nyb2xsVHJhbnNmb3JtKG1heFNjcm9sbClcbiAgICAgICAgfSwge1xuICAgICAgICAgIGR1cmF0aW9uOiBkdXJhdGlvbixcbiAgICAgICAgICB0aW1pbmc6ICdjdWJpYy1iZXppZXIoLjEsIC40LCAuMSwgMSknXG4gICAgICAgIH0pXG4gICAgICAgIC5xdWV1ZShmdW5jdGlvbihkb25lKSB7XG4gICAgICAgICAgZG9uZSgpO1xuICAgICAgICAgIHRoaXMuX3RyeUZpcmVQb3N0Q2hhbmdlRXZlbnQoKTtcbiAgICAgICAgfS5iaW5kKHRoaXMpKVxuICAgICAgICAucGxheSgpO1xuICAgICAgdGhpcy5fc2Nyb2xsID0gbWF4U2Nyb2xsO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcHJvcGVydHkgaXRlbUNvdW50XG4gICAqIEByZWFkb25seVxuICAgKiBAdHlwZSB7TnVtYmVyfVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dVGhlIG51bWJlciBvZiBjYXJvdXNlbCBpdGVtcy5bL2VuXVxuICAgKiAgIFtqYV3jgqvjg6vjg7zjgrvjg6vopoHntKDjga7mlbDjgafjgZnjgIJbL2phXVxuICAgKi9cbiAgZ2V0IGl0ZW1Db3VudCgpIHtcbiAgICByZXR1cm4gdGhpcy5fZ2V0Q2Fyb3VzZWxJdGVtRWxlbWVudHMoKS5sZW5ndGg7XG4gIH1cblxuICAvKipcbiAgICogQG1ldGhvZCByZWZyZXNoXG4gICAqIEBzaWduYXR1cmUgcmVmcmVzaCgpXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1VcGRhdGUgdGhlIGxheW91dCBvZiB0aGUgY2Fyb3VzZWwuIFVzZWQgd2hlbiBhZGRpbmcgYDxvbnMtY2Fyb3VzZWwtaXRlbXM+YCBkeW5hbWljYWxseSBvciB0byBhdXRvbWF0aWNhbGx5IGFkanVzdCB0aGUgc2l6ZS5bL2VuXVxuICAgKiAgIFtqYV3jg6zjgqTjgqLjgqbjg4jjgoTlhoXpg6jjga7nirbmhYvjgpLmnIDmlrDjga7jgoLjga7jgavmm7TmlrDjgZfjgb7jgZnjgIJvbnMtY2Fyb3VzZWwtaXRlbeOCkuWLleeahOOBq+Wil+OChOOBl+OBn+OCiuOAgW9ucy1jYXJvdXNlbOOBruWkp+OBjeOBleOCkuWLleeahOOBq+WkieOBiOOCi+mam+OBq+WIqeeUqOOBl+OBvuOBmeOAglsvamFdXG4gICAqL1xuICByZWZyZXNoKCkge1xuICAgIC8vIEJ1ZyBmaXhcbiAgICBpZiAodGhpcy5fZ2V0Q2Fyb3VzZWxJdGVtU2l6ZSgpID09PSAwKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgdGhpcy5fbWl4aW4odGhpcy5faXNWZXJ0aWNhbCgpID8gVmVydGljYWxNb2RlVHJhaXQgOiBIb3Jpem9udGFsTW9kZVRyYWl0KTtcbiAgICB0aGlzLl9zZXR1cCgpO1xuXG4gICAgaWYgKHRoaXMuX2xhc3RTdGF0ZSAmJiB0aGlzLl9sYXN0U3RhdGUud2lkdGggPiAwKSB7XG4gICAgICBsZXQgc2Nyb2xsID0gdGhpcy5fc2Nyb2xsOy8vIC0gdGhpcy5fb2Zmc2V0O1xuXG4gICAgICBpZiAodGhpcy5faXNPdmVyU2Nyb2xsKHNjcm9sbCkpIHtcbiAgICAgICAgdGhpcy5fc2Nyb2xsVG9LaWxsT3ZlclNjcm9sbCgpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgaWYgKHRoaXMuYXV0b1Njcm9sbCkge1xuICAgICAgICAgIHNjcm9sbCA9IHRoaXMuX25vcm1hbGl6ZVNjcm9sbFBvc2l0aW9uKHNjcm9sbCk7XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLl9zY3JvbGxUbyhzY3JvbGwpO1xuICAgICAgfVxuICAgIH1cblxuICAgIHRoaXMuX3NhdmVMYXN0U3RhdGUoKTtcblxuICAgIHV0aWwudHJpZ2dlckVsZW1lbnRFdmVudCh0aGlzLCAncmVmcmVzaCcsIHtjYXJvdXNlbDogdGhpc30pO1xuICB9XG5cbiAgLyoqXG4gICAqIEBtZXRob2QgZmlyc3RcbiAgICogQHNpZ25hdHVyZSBmaXJzdCgpXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0aW9uc11cbiAgICogICBbZW5dUGFyYW1ldGVyIG9iamVjdC5bL2VuXVxuICAgKiAgIFtqYV1bL2phXVxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBbb3B0aW9ucy5jYWxsYmFja11cbiAgICogICBbZW5dQSBmdW5jdGlvbiB0aGF0IHdpbGwgYmUgZXhlY3V0ZWQgYWZ0ZXIgdGhlIGFuaW1hdGlvbiBoYXMgZmluaXNoZWQuWy9lbl1cbiAgICogICBbamFdWy9qYV1cbiAgICogQHBhcmFtIHtTdHJpbmd9IFtvcHRpb25zLmFuaW1hdGlvbl1cbiAgICogICBbZW5dSWYgdGhpcyBpcyBzZXQgdG8gYFwibm9uZVwiYCwgdGhlIHRyYW5zaXRpb25zIHdpbGwgbm90IGJlIGFuaW1hdGVkLlsvZW5dXG4gICAqICAgW2phXVsvamFdXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0aW9ucy5hbmltYXRpb25PcHRpb25zXVxuICAgKiAgIFtlbl1BbiBvYmplY3QgdGhhdCBjYW4gYmUgdXNlZCB0byBzcGVjaWZ5IHRoZSBkdXJhdGlvbiwgZGVsYXkgYW5kIHRpbWluZyBmdW5jdGlvbiBvZiB0aGUgYW5pbWF0aW9uLlsvZW5dXG4gICAqICAgW2phXVsvamFdXG4gICAqIEByZXR1cm4ge1Byb21pc2V9XG4gICAqICAgW2VuXVJlc29sdmVzIHRvIHRoZSBjYXJvdXNlbCBlbGVtZW50Wy9lbl1cbiAgICogICBbamFdWy9qYV1cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXVNob3cgZmlyc3QgYDxvbnMtY2Fyb3VzZWwtaXRlbT5gLlsvZW5dXG4gICAqICAgW2phXeacgOWIneOBrm9ucy1jYXJvdXNlbC1pdGVt44KS6KGo56S644GX44G+44GZ44CCWy9qYV1cbiAgICovXG4gIGZpcnN0KG9wdGlvbnMpIHtcbiAgICByZXR1cm4gdGhpcy5zZXRBY3RpdmVJbmRleCgwLCBvcHRpb25zKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAbWV0aG9kIGxhc3RcbiAgICogQHNpZ25hdHVyZSBsYXN0KClcbiAgICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zXVxuICAgKiAgIFtlbl1QYXJhbWV0ZXIgb2JqZWN0LlsvZW5dXG4gICAqICAgW2phXVsvamFdXG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IFtvcHRpb25zLmNhbGxiYWNrXVxuICAgKiAgIFtlbl1BIGZ1bmN0aW9uIHRoYXQgd2lsbCBiZSBleGVjdXRlZCBhZnRlciB0aGUgYW5pbWF0aW9uIGhhcyBmaW5pc2hlZC5bL2VuXVxuICAgKiAgIFtqYV1bL2phXVxuICAgKiBAcGFyYW0ge1N0cmluZ30gW29wdGlvbnMuYW5pbWF0aW9uXVxuICAgKiAgIFtlbl1JZiB0aGlzIGF0dHJpYnV0ZSBpcyBzZXQgdG8gYFwibm9uZVwiYCB0aGUgdHJhbnNpdGlvbnMgd2lsbCBub3QgYmUgYW5pbWF0ZWQuWy9lbl1cbiAgICogICBbamFdWy9qYV1cbiAgICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zLmFuaW1hdGlvbk9wdGlvbnNdXG4gICAqICAgW2VuXUFuIG9iamVjdCB0aGF0IGNhbiBiZSB1c2VkIHRvIHNwZWNpZnkgdGhlIGR1cmF0aW9uLCBkZWxheSBhbmQgdGltaW5nIGZ1bmN0aW9uIG9mIHRoZSBhbmltYXRpb24uWy9lbl1cbiAgICogICBbamFdWy9qYV1cbiAgICogQHJldHVybiB7UHJvbWlzZX1cbiAgICogICBbZW5dUmVzb2x2ZXMgdG8gdGhlIGNhcm91c2VsIGVsZW1lbnRbL2VuXVxuICAgKiAgIFtqYV1SZXNvbHZlcyB0byB0aGUgY2Fyb3VzZWwgZWxlbWVudFsvamFdXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1TaG93IGxhc3Qgb25zLWNhcm91c2VsIGl0ZW0uWy9lbl1cbiAgICogICBbamFd5pyA5b6M44Gub25zLWNhcm91c2VsLWl0ZW3jgpLooajnpLrjgZfjgb7jgZnjgIJbL2phXVxuICAgKi9cbiAgbGFzdChvcHRpb25zKSB7XG4gICAgdGhpcy5zZXRBY3RpdmVJbmRleChcbiAgICAgIE1hdGgubWF4KHRoaXMuaXRlbUNvdW50IC0gMSwgMCksIG9wdGlvbnNcbiAgICApO1xuICB9XG5cbiAgY29ubmVjdGVkQ2FsbGJhY2soKSB7XG4gICAgdGhpcy5fcHJlcGFyZUV2ZW50TGlzdGVuZXJzKCk7XG5cbiAgICB0aGlzLl9zZXR1cCgpO1xuICAgIHRoaXMuX3NldHVwSW5pdGlhbEluZGV4KCk7XG5cbiAgICB0aGlzLl9zYXZlTGFzdFN0YXRlKCk7XG5cbiAgICAvLyBGaXggcmVuZGVyaW5nIGdsaXRjaCBvbiBBbmRyb2lkIDQuMVxuICAgIGlmICh0aGlzLm9mZnNldEhlaWdodCA9PT0gMCkge1xuICAgICAgc2V0SW1tZWRpYXRlKCgpID0+IHRoaXMucmVmcmVzaCgpKTtcbiAgICB9XG4gIH1cblxuICBzdGF0aWMgZ2V0IG9ic2VydmVkQXR0cmlidXRlcygpIHtcbiAgICByZXR1cm4gWydzd2lwZWFibGUnLCAnYXV0by1yZWZyZXNoJywgJ2RpcmVjdGlvbiddO1xuICB9XG5cbiAgYXR0cmlidXRlQ2hhbmdlZENhbGxiYWNrKG5hbWUsIGxhc3QsIGN1cnJlbnQpIHtcbiAgICBzd2l0Y2ggKG5hbWUpIHtcbiAgICAgIGNhc2UgJ3N3aXBlYWJsZSc6XG4gICAgICAgIHRoaXMuX3VwZGF0ZVN3aXBlYWJsZSgpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ2F1dG8tcmVmcmVzaCc6XG4gICAgICAgIHRoaXMuX3VwZGF0ZUF1dG9SZWZyZXNoKCk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnZGlyZWN0aW9uJzpcbiAgICAgICAgdGhpcy5fb25EaXJlY3Rpb25DaGFuZ2UoKTtcbiAgICB9XG4gIH1cblxuICBkaXNjb25uZWN0ZWRDYWxsYmFjaygpIHtcbiAgICB0aGlzLl9yZW1vdmVFdmVudExpc3RlbmVycygpO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwcm9wZXJ0eSBhdXRvU2Nyb2xsUmF0aW9cbiAgICogQHR5cGUge051bWJlcn1cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXVRoZSBjdXJyZW50IGF1dG8gc2Nyb2xsIHJhdGlvLiBbL2VuXVxuICAgKiAgIFtqYV3nj77lnKjjga7jgqrjg7zjg4jjgrnjgq/jg63jg7zjg6vjga5yYXRpb+WApOOAglsvamFdXG4gICAqL1xuICBnZXQgYXV0b1Njcm9sbFJhdGlvKCkge1xuICAgIGNvbnN0IGF0dHIgPSB0aGlzLmdldEF0dHJpYnV0ZSgnYXV0by1zY3JvbGwtcmF0aW8nKTtcblxuICAgIGlmICghYXR0cikge1xuICAgICAgcmV0dXJuIDAuNTtcbiAgICB9XG5cbiAgICBjb25zdCBzY3JvbGxSYXRpbyA9IHBhcnNlRmxvYXQoYXR0cik7XG4gICAgaWYgKHNjcm9sbFJhdGlvIDwgMC4wIHx8IHNjcm9sbFJhdGlvID4gMS4wKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgcmF0aW8uJyk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGlzTmFOKHNjcm9sbFJhdGlvKSA/IDAuNSA6IHNjcm9sbFJhdGlvO1xuICB9XG5cbiAgc2V0IGF1dG9TY3JvbGxSYXRpbyhyYXRpbykge1xuICAgIGlmIChyYXRpbyA8IDAuMCB8fCByYXRpbyA+IDEuMCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIHJhdGlvLicpO1xuICAgIH1cblxuICAgIHRoaXMuc2V0QXR0cmlidXRlKCdhdXRvLXNjcm9sbC1yYXRpbycsIHJhdGlvKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcHJvcGVydHkgc3dpcGVhYmxlXG4gICAqIEB0eXBlIHtCb29sZWFufVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5ddHJ1ZSBpZiB0aGUgY2Fyb3VzZWwgaXMgc3dpcGVhYmxlLlsvZW5dXG4gICAqICAgW2phXXN3aXBlYWJsZeOBp+OBguOCjOOBsHRydWXjgpLov5TjgZfjgb7jgZnjgIJbL2phXVxuICAgKi9cbiAgZ2V0IHN3aXBlYWJsZSgpIHtcbiAgICByZXR1cm4gdGhpcy5oYXNBdHRyaWJ1dGUoJ3N3aXBlYWJsZScpO1xuICB9XG5cbiAgc2V0IHN3aXBlYWJsZSh2YWx1ZSkge1xuICAgIHJldHVybiB1dGlsLnRvZ2dsZUF0dHJpYnV0ZSh0aGlzLCAnc3dpcGVhYmxlJywgdmFsdWUpO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwcm9wZXJ0eSBhdXRvU2Nyb2xsXG4gICAqIEB0eXBlIHtCb29sZWFufVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5ddHJ1ZSBpZiBhdXRvIHNjcm9sbCBpcyBlbmFibGVkLlsvZW5dXG4gICAqICAgW2phXeOCquODvOODiOOCueOCr+ODreODvOODq+OBjOacieWKueOBp+OBguOCjOOBsHRydWXjgpLov5TjgZfjgb7jgZnjgIJbL2phXVxuICAgKi9cbiAgZ2V0IGF1dG9TY3JvbGwoKSB7XG4gICAgcmV0dXJuIHRoaXMuaGFzQXR0cmlidXRlKCdhdXRvLXNjcm9sbCcpO1xuICB9XG5cbiAgc2V0IGF1dG9TY3JvbGwodmFsdWUpIHtcbiAgICByZXR1cm4gdXRpbC50b2dnbGVBdHRyaWJ1dGUodGhpcywgJ2F1dG8tc2Nyb2xsJywgdmFsdWUpO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwcm9wZXJ0eSBkaXNhYmxlZFxuICAgKiBAdHlwZSB7Qm9vbGVhbn1cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXVdoZXRoZXIgdGhlIGNhcm91c2VsIGlzIGRpc2FibGVkIG9yIG5vdC5bL2VuXVxuICAgKiAgIFtqYV3nhKHlirnljJbjgZXjgozjgabjgYTjgovloLTlkIjjgatgdHJ1ZWDjgIJbL2phXVxuICAgKi9cbiAgZ2V0IGRpc2FibGVkKCkge1xuICAgIHJldHVybiB0aGlzLmhhc0F0dHJpYnV0ZSgnZGlzYWJsZWQnKTtcbiAgfVxuXG4gIHNldCBkaXNhYmxlZCh2YWx1ZSkge1xuICAgIHJldHVybiB1dGlsLnRvZ2dsZUF0dHJpYnV0ZSh0aGlzLCAnZGlzYWJsZWQnLCB2YWx1ZSk7XG4gIH1cblxuICAvKipcbiAgICogQHByb3BlcnR5IG92ZXJzY3JvbGxhYmxlXG4gICAqIEB0eXBlIHtCb29sZWFufVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dV2hldGhlciB0aGUgY2Fyb3VzZWwgaXMgb3ZlcnNjcm9sbGFibGUgb3Igbm90LlsvZW5dXG4gICAqICAgW2phXW92ZXJzY3JvbGzjgafjgY3jgozjgbB0cnVl44KS6L+U44GX44G+44GZ44CCWy9qYV1cbiAgICovXG4gIGdldCBvdmVyc2Nyb2xsYWJsZSgpIHtcbiAgICByZXR1cm4gdGhpcy5oYXNBdHRyaWJ1dGUoJ292ZXJzY3JvbGxhYmxlJyk7XG4gIH1cblxuICBzZXQgb3ZlcnNjcm9sbGFibGUodmFsdWUpIHtcbiAgICByZXR1cm4gdXRpbC50b2dnbGVBdHRyaWJ1dGUodGhpcywgJ292ZXJzY3JvbGxhYmxlJywgdmFsdWUpO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwcm9wZXJ0eSBjZW50ZXJlZFxuICAgKiBAdHlwZSB7Qm9vbGVhbn1cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXVdoZXRoZXIgdGhlIGNhcm91c2VsIGlzIGNlbnRlcmVkIG9yIG5vdC5bL2VuXVxuICAgKiAgIFtqYV1jZW50ZXJlZOeKtuaFi+OBq+OBquOBo+OBpuOBhOOCjOOBsHRydWXjgpLov5TjgZfjgb7jgZnjgIJbL2phXVxuICAgKi9cbiAgZ2V0IGNlbnRlcmVkKCkge1xuICAgIHJldHVybiB0aGlzLmhhc0F0dHJpYnV0ZSgnY2VudGVyZWQnKTtcbiAgfVxuXG4gIHNldCBjZW50ZXJlZCh2YWx1ZSkge1xuICAgIHJldHVybiB1dGlsLnRvZ2dsZUF0dHJpYnV0ZSh0aGlzLCAnY2VudGVyZWQnLCB2YWx1ZSk7XG4gIH1cblxuICBzdGF0aWMgZ2V0IGV2ZW50cygpIHtcbiAgICByZXR1cm4gWydwb3N0Y2hhbmdlJywgJ3JlZnJlc2gnLCAnb3ZlcnNjcm9sbCddO1xuICB9XG59XG5cbmN1c3RvbUVsZW1lbnRzLmRlZmluZSgnb25zLWNhcm91c2VsJywgQ2Fyb3VzZWxFbGVtZW50KTtcbiIsIi8qXG5Db3B5cmlnaHQgMjAxMy0yMDE1IEFTSUFMIENPUlBPUkFUSU9OXG5cbkxpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG55b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG5Zb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcblxuICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG5cblVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbmRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbldJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxubGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5cbiovXG5cbmltcG9ydCBCYXNlRWxlbWVudCBmcm9tICcuLi9vbnMvYmFzZS1lbGVtZW50JztcblxuLyoqXG4gKiBAZWxlbWVudCBvbnMtY29sXG4gKiBAY2F0ZWdvcnkgZ3JpZFxuICogQGRlc2NyaXB0aW9uXG4gKiAgIFtlbl1SZXByZXNlbnRzIGEgY29sdW1uIGluIHRoZSBncmlkIHN5c3RlbS4gVXNlIHdpdGggYDxvbnMtcm93PmAgdG8gbGF5b3V0IGNvbXBvbmVudHMuWy9lbl1cbiAqICAgW2phXeOCsOODquODg+ODieOCt+OCueODhuODoOOBq+OBpuWIl+OCkuWumue+qeOBl+OBvuOBmeOAgm9ucy1yb3fjgajjgajjgoLjgavkvb/nlKjjgZfjgIHjgrPjg7Pjg53jg7zjg43jg7Pjg4jjga7jg6zjgqTjgqLjgqbjg4jjgavliKnnlKjjgZfjgb7jgZnjgIJbL2phXVxuICogQG5vdGVcbiAqICAgW2VuXUZvciBBbmRyb2lkIDQuMyBhbmQgZWFybGllciwgYW5kIGlPUzYgYW5kIGVhcmxpZXIsIHdoZW4gdXNpbmcgbWl4ZWQgYWxpZ25tZW50IHdpdGggb25zLXJvdyBhbmQgb25zLWNvbHVtbiwgdGhleSBtYXkgbm90IGJlIGRpc3BsYXllZCBjb3JyZWN0bHkuIFlvdSBjYW4gdXNlIG9ubHkgb25lIGFsaWdubWVudC5bL2VuXVxuICogICBbamFdQW5kcm9pZCA0LjPku6XliY3jgIHjgoLjgZfjgY/jga9pT1MgNuS7peWJjeOBrk9T44Gu5aC05ZCI44CBb25zLXJvd+OBqG9ucy1jb2x1bW7jgpLntYTjgb/lkIjjgo/jgZvjgZ/loLTlkIjjgavmj4/nlLvjgYzltKnjgozjgovloLTlkIjjgYzjgYLjgorjgb7jgZnjgIJbL2phXVxuICogQGNvZGVwZW4gR2d1akMge3dpZGV9XG4gKiBAZ3VpZGUgbGF5b3V0aW5nIFtlbl1MYXlvdXRpbmcgZ3VpZGVbL2VuXVtqYV3jg6zjgqTjgqLjgqbjg4jmqZ/og71bL2phXVxuICogQHNlZWFsc28gb25zLXJvd1xuICogICBbZW5dVGhlIGA8b25zLXJvdz5gIGNvbXBvbmVudCBpcyB0aGUgcGFyZW50IG9mIGA8b25zLWNvbD5gLlsvZW5dXG4gKiAgIFtqYV1vbnMtcm9344Kz44Oz44Od44O844ON44Oz44OIWy9qYV1cbiAqIEBleGFtcGxlXG4gKiA8b25zLXJvdz5cbiAqICAgPG9ucy1jb2wgd2lkdGg9XCI1MHB4XCI+PG9ucy1pY29uIGljb249XCJmYS10d2l0dGVyXCI+PC9vbnMtaWNvbj48L29ucy1jb2w+XG4gKiAgIDxvbnMtY29sPlRleHQ8L29ucy1jb2w+XG4gKiA8L29ucy1yb3c+XG4gKi9cblxuLyoqXG4gKiBAYXR0cmlidXRlIHZlcnRpY2FsLWFsaWduXG4gKiBAdHlwZSB7U3RyaW5nfVxuICogQGRlc2NyaXB0aW9uXG4gKiAgIFtlbl1WZXJ0aWNhbCBhbGlnbm1lbnQgb2YgdGhlIGNvbHVtbi4gVmFsaWQgdmFsdWVzIGFyZSBcInRvcFwiLCBcImNlbnRlclwiLCBhbmQgXCJib3R0b21cIi5bL2VuXVxuICogICBbamFd57im44Gu6YWN572u44KS5oyH5a6a44GZ44KL44CCXCJ0b3BcIiwgXCJjZW50ZXJcIiwgXCJib3R0b21cIuOBruOBhOOBmuOCjOOBi+OCkuaMh+WumuOBl+OBvuOBmeOAglsvamFdXG4gKi9cblxuLyoqXG4gKiBAYXR0cmlidXRlIHdpZHRoXG4gKiBAdHlwZSB7U3RyaW5nfVxuICogQGRlc2NyaXB0aW9uXG4gKiAgIFtlbl1UaGUgd2lkdGggb2YgdGhlIGNvbHVtbi4gVmFsaWQgdmFsdWVzIGFyZSBjc3Mgd2lkdGggdmFsdWVzIChcIjEwJVwiLCBcIjUwcHhcIikuWy9lbl1cbiAqICAgW2phXeOCq+ODqeODoOOBruaoquW5heOCkuaMh+WumuOBmeOCi+OAguODkeODvOOCu+ODs+ODiOOCguOBl+OBj+OBr+ODlOOCr+OCu+ODq+OBp+aMh+WumuOBl+OBvuOBme+8iDEwJeOChDUwcHjvvInjgIJbL2phXVxuICovXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBDb2xFbGVtZW50IGV4dGVuZHMgQmFzZUVsZW1lbnQge1xuXG4gIGluaXQoKSB7XG4gICAgaWYgKHRoaXMuZ2V0QXR0cmlidXRlKCd3aWR0aCcpKSB7XG4gICAgICB0aGlzLl91cGRhdGVXaWR0aCgpO1xuICAgIH1cbiAgfVxuXG4gIHN0YXRpYyBnZXQgb2JzZXJ2ZWRBdHRyaWJ1dGVzKCkge1xuICAgIHJldHVybiBbJ3dpZHRoJ107XG4gIH1cblxuICBhdHRyaWJ1dGVDaGFuZ2VkQ2FsbGJhY2sobmFtZSwgbGFzdCwgY3VycmVudCkge1xuICAgIGlmIChuYW1lID09PSAnd2lkdGgnKSB7XG4gICAgICB0aGlzLl91cGRhdGVXaWR0aCgpO1xuICAgIH1cbiAgfVxuXG4gIF91cGRhdGVXaWR0aCgpIHtcbiAgICBsZXQgd2lkdGggPSB0aGlzLmdldEF0dHJpYnV0ZSgnd2lkdGgnKTtcbiAgICBpZiAodHlwZW9mIHdpZHRoICA9PT0gJ3N0cmluZycpIHtcbiAgICAgIHdpZHRoID0gKCcnICsgd2lkdGgpLnRyaW0oKTtcbiAgICAgIHdpZHRoID0gd2lkdGgubWF0Y2goL15cXGQrJC8pID8gd2lkdGggKyAnJScgOiB3aWR0aDtcblxuICAgICAgdGhpcy5zdHlsZS53ZWJraXRCb3hGbGV4ID0gJzAnO1xuICAgICAgdGhpcy5zdHlsZS53ZWJraXRGbGV4ID0gJzAgMCAnICsgd2lkdGg7XG4gICAgICB0aGlzLnN0eWxlLm1vekJveEZsZXggPSAnMCc7XG4gICAgICB0aGlzLnN0eWxlLm1vekZsZXggPSAnMCAwICcgKyB3aWR0aDtcbiAgICAgIHRoaXMuc3R5bGUubXNGbGV4ID0gJzAgMCAnICsgd2lkdGg7XG4gICAgICB0aGlzLnN0eWxlLmZsZXggPSAnMCAwICcgKyB3aWR0aDtcbiAgICAgIHRoaXMuc3R5bGUubWF4V2lkdGggPSB3aWR0aDtcbiAgICB9XG4gIH1cbn1cblxuY3VzdG9tRWxlbWVudHMuZGVmaW5lKCdvbnMtY29sJywgQ29sRWxlbWVudCk7XG4iLCIvKlxuQ29weXJpZ2h0IDIwMTMtMjAxNSBBU0lBTCBDT1JQT1JBVElPTlxuXG5MaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xueW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG5cbiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuXG5Vbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG5kaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG5XSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cblNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbmxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuXG4qL1xuXG5pbXBvcnQgYW5pbWl0IGZyb20gJy4uLy4uL29ucy9hbmltaXQnO1xuaW1wb3J0IEJhc2VBbmltYXRvciBmcm9tICcuLi8uLi9vbnMvYmFzZS1hbmltYXRvcidcblxuZXhwb3J0IGNsYXNzIERpYWxvZ0FuaW1hdG9yIGV4dGVuZHMgQmFzZUFuaW1hdG9yIHtcblxuICBjb25zdHJ1Y3Rvcih7dGltaW5nID0gJ2xpbmVhcicsIGRlbGF5ID0gMCwgZHVyYXRpb24gPSAwLjJ9ID0ge30pIHtcbiAgICBzdXBlcih7IHRpbWluZywgZGVsYXksIGR1cmF0aW9uIH0pXG4gIH1cblxuICAvKipcbiAgICogQHBhcmFtIHtIVE1MRWxlbWVudH0gZGlhbG9nXG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IGRvbmVcbiAgICovXG4gIHNob3coZGlhbG9nLCBkb25lKSB7XG4gICAgZG9uZSgpO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7SFRNTEVsZW1lbnR9IGRpYWxvZ1xuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBkb25lXG4gICAqL1xuICBoaWRlKGRpYWxvZywgZG9uZSkge1xuICAgIGRvbmUoKTtcbiAgfVxufVxuXG4vKipcbiAqIEFuZHJvaWQgc3R5bGUgYW5pbWF0b3IgZm9yIGRpYWxvZy5cbiAqL1xuZXhwb3J0IGNsYXNzIEFuZHJvaWREaWFsb2dBbmltYXRvciBleHRlbmRzIERpYWxvZ0FuaW1hdG9yIHtcblxuICBjb25zdHJ1Y3Rvcih7dGltaW5nID0gJ2Vhc2UtaW4tb3V0JywgZGVsYXkgPSAwLCBkdXJhdGlvbiA9IDAuM30gPSB7fSkge1xuICAgIHN1cGVyKHt0aW1pbmcsIGRlbGF5LCBkdXJhdGlvbn0pO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBkaWFsb2dcbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gY2FsbGJhY2tcbiAgICovXG4gIHNob3coZGlhbG9nLCBjYWxsYmFjaykge1xuICAgIGNhbGxiYWNrID0gY2FsbGJhY2sgPyBjYWxsYmFjayA6IGZ1bmN0aW9uKCkge307XG5cbiAgICBhbmltaXQucnVuQWxsKFxuXG4gICAgICBhbmltaXQoZGlhbG9nLl9tYXNrKVxuICAgICAgICAucXVldWUoe1xuICAgICAgICAgIG9wYWNpdHk6IDBcbiAgICAgICAgfSlcbiAgICAgICAgLndhaXQodGhpcy5kZWxheSlcbiAgICAgICAgLnF1ZXVlKHtcbiAgICAgICAgICBvcGFjaXR5OiAxLjBcbiAgICAgICAgfSwge1xuICAgICAgICAgIGR1cmF0aW9uOiB0aGlzLmR1cmF0aW9uLFxuICAgICAgICAgIHRpbWluZzogdGhpcy50aW1pbmdcbiAgICAgICAgfSksXG5cbiAgICAgIGFuaW1pdChkaWFsb2cuX2RpYWxvZylcbiAgICAgICAgLnNhdmVTdHlsZSgpXG4gICAgICAgIC5xdWV1ZSh7XG4gICAgICAgICAgY3NzOiB7XG4gICAgICAgICAgICB0cmFuc2Zvcm06ICd0cmFuc2xhdGUzZCgtNTAlLCAtNjAlLCAwKScsXG4gICAgICAgICAgICBvcGFjaXR5OiAwLjBcbiAgICAgICAgICB9LFxuICAgICAgICAgIGR1cmF0aW9uOiAwXG4gICAgICAgIH0pXG4gICAgICAgIC53YWl0KHRoaXMuZGVsYXkpXG4gICAgICAgIC5xdWV1ZSh7XG4gICAgICAgICAgY3NzOiB7XG4gICAgICAgICAgICB0cmFuc2Zvcm06ICd0cmFuc2xhdGUzZCgtNTAlLCAtNTAlLCAwKScsXG4gICAgICAgICAgICBvcGFjaXR5OiAxLjBcbiAgICAgICAgICB9LFxuICAgICAgICAgIGR1cmF0aW9uOiB0aGlzLmR1cmF0aW9uLFxuICAgICAgICAgIHRpbWluZzogdGhpcy50aW1pbmdcbiAgICAgICAgfSlcbiAgICAgICAgLnJlc3RvcmVTdHlsZSgpXG4gICAgICAgIC5xdWV1ZShmdW5jdGlvbihkb25lKSB7XG4gICAgICAgICAgY2FsbGJhY2soKTtcbiAgICAgICAgICBkb25lKCk7XG4gICAgICAgIH0pXG4gICAgKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge09iamVjdH0gZGlhbG9nXG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IGNhbGxiYWNrXG4gICAqL1xuICBoaWRlKGRpYWxvZywgY2FsbGJhY2spIHtcbiAgICBjYWxsYmFjayA9IGNhbGxiYWNrID8gY2FsbGJhY2sgOiBmdW5jdGlvbigpIHt9O1xuXG4gICAgYW5pbWl0LnJ1bkFsbChcblxuICAgICAgYW5pbWl0KGRpYWxvZy5fbWFzaylcbiAgICAgICAgLnF1ZXVlKHtcbiAgICAgICAgICBvcGFjaXR5OiAxLjBcbiAgICAgICAgfSlcbiAgICAgICAgLndhaXQodGhpcy5kZWxheSlcbiAgICAgICAgLnF1ZXVlKHtcbiAgICAgICAgICBvcGFjaXR5OiAwXG4gICAgICAgIH0sIHtcbiAgICAgICAgICBkdXJhdGlvbjogdGhpcy5kdXJhdGlvbixcbiAgICAgICAgICB0aW1pbmc6IHRoaXMudGltaW5nXG4gICAgICAgIH0pLFxuXG4gICAgICBhbmltaXQoZGlhbG9nLl9kaWFsb2cpXG4gICAgICAgIC5zYXZlU3R5bGUoKVxuICAgICAgICAucXVldWUoe1xuICAgICAgICAgIGNzczoge1xuICAgICAgICAgICAgdHJhbnNmb3JtOiAndHJhbnNsYXRlM2QoLTUwJSwgLTUwJSwgMCknLFxuICAgICAgICAgICAgb3BhY2l0eTogMS4wXG4gICAgICAgICAgfSxcbiAgICAgICAgICBkdXJhdGlvbjogMFxuICAgICAgICB9KVxuICAgICAgICAud2FpdCh0aGlzLmRlbGF5KVxuICAgICAgICAucXVldWUoe1xuICAgICAgICAgIGNzczoge1xuICAgICAgICAgICAgdHJhbnNmb3JtOiAndHJhbnNsYXRlM2QoLTUwJSwgLTYwJSwgMCknLFxuICAgICAgICAgICAgb3BhY2l0eTogMC4wXG4gICAgICAgICAgfSxcbiAgICAgICAgICBkdXJhdGlvbjogdGhpcy5kdXJhdGlvbixcbiAgICAgICAgICB0aW1pbmc6IHRoaXMudGltaW5nXG4gICAgICAgIH0pXG4gICAgICAgIC5yZXN0b3JlU3R5bGUoKVxuICAgICAgICAucXVldWUoZnVuY3Rpb24oZG9uZSkge1xuICAgICAgICAgIGNhbGxiYWNrKCk7XG4gICAgICAgICAgZG9uZSgpO1xuICAgICAgICB9KVxuXG4gICAgKTtcbiAgfVxufVxuXG4vKipcbiAqIGlPUyBzdHlsZSBhbmltYXRvciBmb3IgZGlhbG9nLlxuICovXG5leHBvcnQgY2xhc3MgSU9TRGlhbG9nQW5pbWF0b3IgZXh0ZW5kcyBEaWFsb2dBbmltYXRvciB7XG5cbiAgY29uc3RydWN0b3Ioe3RpbWluZyA9ICdlYXNlLWluLW91dCcsIGRlbGF5ID0gMCwgZHVyYXRpb24gPSAwLjJ9ID0ge30pIHtcbiAgICBzdXBlcih7dGltaW5nLCBkZWxheSwgZHVyYXRpb259KTtcblxuICAgIHRoaXMuYm9keUhlaWdodCA9IGRvY3VtZW50LmJvZHkuY2xpZW50SGVpZ2h0OyAvLyBhdm9pZCBGb3JjZWQgU3luY2hyb25vdXMgTGF5b3V0XG4gIH1cblxuICAvKipcbiAgICogQHBhcmFtIHtPYmplY3R9IGRpYWxvZ1xuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBjYWxsYmFja1xuICAgKi9cbiAgc2hvdyhkaWFsb2csIGNhbGxiYWNrKSB7XG4gICAgY2FsbGJhY2sgPSBjYWxsYmFjayA/IGNhbGxiYWNrIDogZnVuY3Rpb24oKSB7fTtcblxuICAgIGFuaW1pdC5ydW5BbGwoXG5cbiAgICAgIGFuaW1pdChkaWFsb2cuX21hc2spXG4gICAgICAgIC5xdWV1ZSh7XG4gICAgICAgICAgb3BhY2l0eTogMFxuICAgICAgICB9KVxuICAgICAgICAud2FpdCh0aGlzLmRlbGF5KVxuICAgICAgICAucXVldWUoe1xuICAgICAgICAgIG9wYWNpdHk6IDEuMFxuICAgICAgICB9LCB7XG4gICAgICAgICAgZHVyYXRpb246IHRoaXMuZHVyYXRpb24sXG4gICAgICAgICAgdGltaW5nOiB0aGlzLnRpbWluZ1xuICAgICAgICB9KSxcblxuICAgICAgYW5pbWl0KGRpYWxvZy5fZGlhbG9nKVxuICAgICAgICAuc2F2ZVN0eWxlKClcbiAgICAgICAgLnF1ZXVlKHtcbiAgICAgICAgICBjc3M6IHtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogYHRyYW5zbGF0ZTNkKC01MCUsICR7dGhpcy5ib2R5SGVpZ2h0IC8gMi4wIC0gMX1weCwgMClgXG4gICAgICAgICAgfSxcbiAgICAgICAgICBkdXJhdGlvbjogMFxuICAgICAgICB9KVxuICAgICAgICAud2FpdCh0aGlzLmRlbGF5KVxuICAgICAgICAucXVldWUoe1xuICAgICAgICAgIGNzczoge1xuICAgICAgICAgICAgdHJhbnNmb3JtOiAndHJhbnNsYXRlM2QoLTUwJSwgLTUwJSwgMCknXG4gICAgICAgICAgfSxcbiAgICAgICAgICBkdXJhdGlvbjogdGhpcy5kdXJhdGlvbixcbiAgICAgICAgICB0aW1pbmc6IHRoaXMudGltaW5nXG4gICAgICAgIH0pXG4gICAgICAgIC5yZXN0b3JlU3R5bGUoKVxuICAgICAgICAucXVldWUoZnVuY3Rpb24oZG9uZSkge1xuICAgICAgICAgIGNhbGxiYWNrKCk7XG4gICAgICAgICAgZG9uZSgpO1xuICAgICAgICB9KVxuICAgICk7XG4gIH1cblxuICAvKipcbiAgICogQHBhcmFtIHtPYmplY3R9IGRpYWxvZ1xuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBjYWxsYmFja1xuICAgKi9cbiAgaGlkZShkaWFsb2csIGNhbGxiYWNrKSB7XG4gICAgY2FsbGJhY2sgPSBjYWxsYmFjayA/IGNhbGxiYWNrIDogZnVuY3Rpb24oKSB7fTtcblxuICAgIGFuaW1pdC5ydW5BbGwoXG5cbiAgICAgIGFuaW1pdChkaWFsb2cuX21hc2spXG4gICAgICAgIC5xdWV1ZSh7XG4gICAgICAgICAgb3BhY2l0eTogMS4wXG4gICAgICAgIH0pXG4gICAgICAgIC53YWl0KHRoaXMuZGVsYXkpXG4gICAgICAgIC5xdWV1ZSh7XG4gICAgICAgICAgb3BhY2l0eTogMFxuICAgICAgICB9LCB7XG4gICAgICAgICAgZHVyYXRpb246IHRoaXMuZHVyYXRpb24sXG4gICAgICAgICAgdGltaW5nOiB0aGlzLnRpbWluZ1xuICAgICAgICB9KSxcblxuICAgICAgYW5pbWl0KGRpYWxvZy5fZGlhbG9nKVxuICAgICAgICAuc2F2ZVN0eWxlKClcbiAgICAgICAgLnF1ZXVlKHtcbiAgICAgICAgICBjc3M6IHtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogJ3RyYW5zbGF0ZTNkKC01MCUsIC01MCUsIDApJ1xuICAgICAgICAgIH0sXG4gICAgICAgICAgZHVyYXRpb246IDBcbiAgICAgICAgfSlcbiAgICAgICAgLndhaXQodGhpcy5kZWxheSlcbiAgICAgICAgLnF1ZXVlKHtcbiAgICAgICAgICBjc3M6IHtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogYHRyYW5zbGF0ZTNkKC01MCUsICR7dGhpcy5ib2R5SGVpZ2h0IC8gMi4wIC0gMX1weCwgMClgXG4gICAgICAgICAgfSxcbiAgICAgICAgICBkdXJhdGlvbjogdGhpcy5kdXJhdGlvbixcbiAgICAgICAgICB0aW1pbmc6IHRoaXMudGltaW5nXG4gICAgICAgIH0pXG4gICAgICAgIC5yZXN0b3JlU3R5bGUoKVxuICAgICAgICAucXVldWUoZnVuY3Rpb24oZG9uZSkge1xuICAgICAgICAgIGNhbGxiYWNrKCk7XG4gICAgICAgICAgZG9uZSgpO1xuICAgICAgICB9KVxuXG4gICAgKTtcbiAgfVxufVxuXG4vKipcbiAqIFNsaWRlIGFuaW1hdG9yIGZvciBkaWFsb2cuXG4gKi9cbmV4cG9ydCBjbGFzcyBTbGlkZURpYWxvZ0FuaW1hdG9yIGV4dGVuZHMgRGlhbG9nQW5pbWF0b3Ige1xuXG4gIGNvbnN0cnVjdG9yKHt0aW1pbmcgPSAnY3ViaWMtYmV6aWVyKC4xLCAuNywgLjQsIDEpJywgZGVsYXkgPSAwLCBkdXJhdGlvbiA9IDAuMn0gPSB7fSkge1xuICAgIHN1cGVyKHt0aW1pbmcsIGRlbGF5LCBkdXJhdGlvbn0pO1xuXG4gICAgdGhpcy5ib2R5SGVpZ2h0ID0gZG9jdW1lbnQuYm9keS5jbGllbnRIZWlnaHQ7IC8vIGF2b2lkIEZvcmNlZCBTeW5jaHJvbm91cyBMYXlvdXRcbiAgfVxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge09iamVjdH0gZGlhbG9nXG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IGNhbGxiYWNrXG4gICAqL1xuICBzaG93KGRpYWxvZywgY2FsbGJhY2spIHtcbiAgICBjYWxsYmFjayA9IGNhbGxiYWNrID8gY2FsbGJhY2sgOiBmdW5jdGlvbigpIHt9O1xuXG4gICAgYW5pbWl0LnJ1bkFsbChcblxuICAgICAgYW5pbWl0KGRpYWxvZy5fbWFzaylcbiAgICAgICAgLnF1ZXVlKHtcbiAgICAgICAgICBvcGFjaXR5OiAwXG4gICAgICAgIH0pXG4gICAgICAgIC53YWl0KHRoaXMuZGVsYXkpXG4gICAgICAgIC5xdWV1ZSh7XG4gICAgICAgICAgb3BhY2l0eTogMS4wXG4gICAgICAgIH0sIHtcbiAgICAgICAgICBkdXJhdGlvbjogdGhpcy5kdXJhdGlvbixcbiAgICAgICAgICB0aW1pbmc6IHRoaXMudGltaW5nXG4gICAgICAgIH0pLFxuXG4gICAgICBhbmltaXQoZGlhbG9nLl9kaWFsb2cpXG4gICAgICAgIC5zYXZlU3R5bGUoKVxuICAgICAgICAucXVldWUoe1xuICAgICAgICAgIGNzczoge1xuICAgICAgICAgICAgLy8gRklYTUU6IFRoaXMgc2hvdWxkIGF2b2lkIEZvcmNlZCBTeW5jaHJvbm91cyBMYXlvdXQuIE90aGVyd2lzZSwgZmFkZSBhbmltYXRpb24gb2YgbWFzayB3aWxsIGJlIGJyb2tlbi5cbiAgICAgICAgICAgIHRyYW5zZm9ybTogYHRyYW5zbGF0ZTNkKC01MCUsICR7LSAodGhpcy5ib2R5SGVpZ2h0IC8gMi4wKSArIDEgLSBkaWFsb2cuX2RpYWxvZy5jbGllbnRIZWlnaHR9cHgsIDApYFxuICAgICAgICAgIH0sXG4gICAgICAgICAgZHVyYXRpb246IDBcbiAgICAgICAgfSlcbiAgICAgICAgLndhaXQodGhpcy5kZWxheSlcbiAgICAgICAgLnF1ZXVlKHtcbiAgICAgICAgICBjc3M6IHtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogJ3RyYW5zbGF0ZTNEKC01MCUsIC01MCUsIDApJyxcbiAgICAgICAgICB9LFxuICAgICAgICAgIGR1cmF0aW9uOiB0aGlzLmR1cmF0aW9uLFxuICAgICAgICAgIHRpbWluZzogdGhpcy50aW1pbmdcbiAgICAgICAgfSlcbiAgICAgICAgLnJlc3RvcmVTdHlsZSgpXG4gICAgICAgIC5xdWV1ZShmdW5jdGlvbihkb25lKSB7XG4gICAgICAgICAgY2FsbGJhY2soKTtcbiAgICAgICAgICBkb25lKCk7XG4gICAgICAgIH0pXG4gICAgKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge09iamVjdH0gZGlhbG9nXG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IGNhbGxiYWNrXG4gICAqL1xuICBoaWRlKGRpYWxvZywgY2FsbGJhY2spIHtcbiAgICBjYWxsYmFjayA9IGNhbGxiYWNrID8gY2FsbGJhY2sgOiBmdW5jdGlvbigpIHt9O1xuXG4gICAgYW5pbWl0LnJ1bkFsbChcblxuICAgICAgYW5pbWl0KGRpYWxvZy5fbWFzaylcbiAgICAgICAgLnF1ZXVlKHtcbiAgICAgICAgICBvcGFjaXR5OiAxLjBcbiAgICAgICAgfSlcbiAgICAgICAgLndhaXQodGhpcy5kZWxheSlcbiAgICAgICAgLnF1ZXVlKHtcbiAgICAgICAgICBvcGFjaXR5OiAwXG4gICAgICAgIH0sIHtcbiAgICAgICAgICBkdXJhdGlvbjogdGhpcy5kdXJhdGlvbixcbiAgICAgICAgICB0aW1pbmc6IHRoaXMudGltaW5nXG4gICAgICAgIH0pLFxuXG4gICAgICBhbmltaXQoZGlhbG9nLl9kaWFsb2cpXG4gICAgICAgIC5zYXZlU3R5bGUoKVxuICAgICAgICAucXVldWUoe1xuICAgICAgICAgIGNzczoge1xuICAgICAgICAgICAgdHJhbnNmb3JtOiAndHJhbnNsYXRlM0QoLTUwJSwgLTUwJSwgMCknXG4gICAgICAgICAgfSxcbiAgICAgICAgICBkdXJhdGlvbjogMFxuICAgICAgICB9KVxuICAgICAgICAud2FpdCh0aGlzLmRlbGF5KVxuICAgICAgICAucXVldWUoe1xuICAgICAgICAgIGNzczoge1xuICAgICAgICAgICAgLy8gRklYTUU6IFRoaXMgc2hvdWxkIGF2b2lkIEZvcmNlZCBTeW5jaHJvbm91cyBMYXlvdXQuIE90aGVyd2lzZSwgZmFkZSBhbmltYXRpb24gb2YgbWFzayB3aWxsIGJlIGJyb2tlbi5cbiAgICAgICAgICAgIHRyYW5zZm9ybTogYHRyYW5zbGF0ZTNkKC01MCUsICR7LSAodGhpcy5ib2R5SGVpZ2h0IC8gMi4wKSArIDEgLSBkaWFsb2cuX2RpYWxvZy5jbGllbnRIZWlnaHR9cHgsIDApYFxuICAgICAgICAgIH0sXG4gICAgICAgICAgZHVyYXRpb246IHRoaXMuZHVyYXRpb24sXG4gICAgICAgICAgdGltaW5nOiB0aGlzLnRpbWluZ1xuICAgICAgICB9KVxuICAgICAgICAucmVzdG9yZVN0eWxlKClcbiAgICAgICAgLnF1ZXVlKGZ1bmN0aW9uKGRvbmUpIHtcbiAgICAgICAgICBjYWxsYmFjaygpO1xuICAgICAgICAgIGRvbmUoKTtcbiAgICAgICAgfSlcbiAgICApO1xuICB9XG59XG4iLCIvKlxuQ29weXJpZ2h0IDIwMTMtMjAxNSBBU0lBTCBDT1JQT1JBVElPTlxuXG5MaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xueW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG5cbiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuXG5Vbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG5kaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG5XSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cblNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbmxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuXG4qL1xuXG5pbXBvcnQgdXRpbCBmcm9tICcuLi8uLi9vbnMvdXRpbCc7XG5pbXBvcnQgYXV0b1N0eWxlIGZyb20gJy4uLy4uL29ucy9hdXRvc3R5bGUnO1xuaW1wb3J0IE1vZGlmaWVyVXRpbCBmcm9tICcuLi8uLi9vbnMvaW50ZXJuYWwvbW9kaWZpZXItdXRpbCc7XG5pbXBvcnQgQW5pbWF0b3JGYWN0b3J5IGZyb20gJy4uLy4uL29ucy9pbnRlcm5hbC9hbmltYXRvci1mYWN0b3J5JztcbmltcG9ydCB7RGlhbG9nQW5pbWF0b3IsIElPU0RpYWxvZ0FuaW1hdG9yLCBBbmRyb2lkRGlhbG9nQW5pbWF0b3IsIFNsaWRlRGlhbG9nQW5pbWF0b3J9IGZyb20gJy4vYW5pbWF0b3InO1xuaW1wb3J0IHBsYXRmb3JtIGZyb20gJy4uLy4uL29ucy9wbGF0Zm9ybSc7XG5pbXBvcnQgQmFzZUVsZW1lbnQgZnJvbSAnLi4vLi4vb25zL2Jhc2UtZWxlbWVudCc7XG5pbXBvcnQgRG9vckxvY2sgZnJvbSAnLi4vLi4vb25zL2Rvb3Jsb2NrJztcbmltcG9ydCBkZXZpY2VCYWNrQnV0dG9uRGlzcGF0Y2hlciBmcm9tICcuLi8uLi9vbnMvZGV2aWNlLWJhY2stYnV0dG9uLWRpc3BhdGNoZXInO1xuaW1wb3J0IGNvbnRlbnRSZWFkeSBmcm9tICcuLi8uLi9vbnMvY29udGVudC1yZWFkeSc7XG5cbmNvbnN0IHNjaGVtZSA9IHtcbiAgJy5kaWFsb2cnOiAnZGlhbG9nLS0qJyxcbiAgJy5kaWFsb2ctY29udGFpbmVyJzogJ2RpYWxvZy1jb250YWluZXItLSonLFxuICAnLmRpYWxvZy1tYXNrJzogJ2RpYWxvZy1tYXNrLS0qJ1xufTtcblxuY29uc3QgX2FuaW1hdG9yRGljdCA9IHtcbiAgJ2RlZmF1bHQnOiAoKSA9PiBwbGF0Zm9ybS5pc0FuZHJvaWQoKSA/IEFuZHJvaWREaWFsb2dBbmltYXRvciA6IElPU0RpYWxvZ0FuaW1hdG9yLFxuICAnc2xpZGUnOiBTbGlkZURpYWxvZ0FuaW1hdG9yLFxuICAnbm9uZSc6IERpYWxvZ0FuaW1hdG9yXG59O1xuXG4vKipcbiAqIEBlbGVtZW50IG9ucy1kaWFsb2dcbiAqIEBjYXRlZ29yeSBkaWFsb2dcbiAqIEBkZXNjcmlwdGlvblxuICogICBbZW5dXG4gKiAgICAgRGlhbG9nIHRoYXQgaXMgZGlzcGxheWVkIG9uIHRvcCBvZiBjdXJyZW50IHNjcmVlbi4gQXMgb3Bwb3NlZCB0byB0aGUgYDxvbnMtYWxlcnQtZGlhbG9nPmAgZWxlbWVudCwgdGhpcyBjb21wb25lbnQgY2FuIGNvbnRhaW4gYW55IGtpbmQgb2YgY29udGVudC5cbiAqXG4gKiAgICAgVG8gdXNlIHRoZSBlbGVtZW50IGl0IGNhbiBlaXRoZXIgYmUgYXR0YWNoZWQgZGlyZWN0bHkgdG8gdGhlIGA8Ym9keT5gIGVsZW1lbnQgb3IgZHluYW1pY2FsbHkgY3JlYXRlZCBmcm9tIGEgdGVtcGxhdGUgdXNpbmcgdGhlIGBvbnMuY3JlYXRlRGlhbG9nKHRlbXBsYXRlKWAgdXRpbGl0eSBmdW5jdGlvbiBhbmQgdGhlIGA8b25zLXRlbXBsYXRlPmAgdGFnLlxuICpcbiAqICAgICBUaGUgZGlhbG9nIGlzIHVzZWZ1bCBmb3IgZGlzcGxheWluZyBtZW51cywgYWRkaXRpb25hbCBpbmZvcm1hdGlvbiBvciB0byBhc2sgdGhlIHVzZXIgdG8gbWFrZSBhIGRlY2lzaW9uLlxuICpcbiAqICAgICBJdCB3aWxsIGF1dG9tYXRpY2FsbHkgYmUgZGlzcGxheWVkIGFzIE1hdGVyaWFsIERlc2lnbiB3aGVuIHJ1bm5pbmcgb24gYW4gQW5kcm9pZCBkZXZpY2UuXG4gKiAgIFsvZW5dXG4gKiAgIFtqYV1bL2phXVxuICogQG1vZGlmaWVyIG1hdGVyaWFsXG4gKiAgIFtlbl1EaXNwbGF5IGEgTWF0ZXJpYWwgRGVzaWduIGRpYWxvZy5bL2VuXVxuICogICBbamFd44Oe44OG44Oq44Ki44Or44OH44K244Kk44Oz44Gu44OA44Kk44Ki44Ot44Kw44KS6KGo56S644GX44G+44GZ44CCWy9qYV1cbiAqIEBjb2RlcGVuIHp4eGFHYVxuICogQHR1dG9yaWFsIHZhbmlsbGEvUmVmZXJlbmNlL2RpYWxvZ1xuICogQGd1aWRlIGRpYWxvZ3NcbiAqICAgW2VuXURpYWxvZyBjb21wb25lbnRzWy9lbl1cbiAqICAgW2phXURpYWxvZyBjb21wb25lbnRzWy9qYV1cbiAqIEBndWlkZSB1c2luZy1tb2RpZmllciBbZW5dTW9yZSBkZXRhaWxzIGFib3V0IHRoZSBgbW9kaWZpZXJgIGF0dHJpYnV0ZVsvZW5dW2phXW1vZGlmaWVy5bGe5oCn44Gu5L2/44GE5pa5Wy9qYV1cbiAqIEBzZWVhbHNvIG9ucy1hbGVydC1kaWFsb2dcbiAqICAgW2VuXWA8b25zLWFsZXJ0LWRpYWxvZz5gIGNvbXBvbmVudFsvZW5dXG4gKiAgIFtqYV1vbnMtYWxlcnQtZGlhbG9n44Kz44Oz44Od44O844ON44Oz44OIWy9qYV1cbiAqIEBzZWVhbHNvIG9ucy1wb3BvdmVyXG4gKiAgIFtlbl1gPG9ucy1wb3BvdmVyPmAgY29tcG9uZW50Wy9lbl1cbiAqICAgW2phXW9ucy1wb3BvdmVy44Kz44Oz44Od44O844ON44Oz44OIWy9qYV1cbiAqIEBzZWVhbHNvIG9ucy1tb2RhbFxuICogICBbZW5dYDxvbnMtbW9kYWw+YCBjb21wb25lbnRbL2VuXVxuICogICBbamFdb25zLW1vZGFs44Kz44Oz44Od44O844ON44Oz44OIWy9qYV1cbiAqIEBleGFtcGxlXG4gKiA8b25zLWRpYWxvZyBpZD1cImRpYWxvZ1wiPlxuICogICA8cD5UaGlzIGlzIGEgZGlhbG9nITwvcD5cbiAqIDwvb25zLWRpYWxvZz5cbiAqXG4gKiA8c2NyaXB0PlxuICogICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZGlhbG9nJykuc2hvdygpO1xuICogPC9zY3JpcHQ+XG4gKi9cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIERpYWxvZ0VsZW1lbnQgZXh0ZW5kcyBCYXNlRWxlbWVudCB7XG5cbiAgLyoqXG4gICAqIEBldmVudCBwcmVzaG93XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiBbZW5dRmlyZWQganVzdCBiZWZvcmUgdGhlIGRpYWxvZyBpcyBkaXNwbGF5ZWQuWy9lbl1cbiAgICogW2phXeODgOOCpOOCouODreOCsOOBjOihqOekuuOBleOCjOOCi+ebtOWJjeOBq+eZuueBq+OBl+OBvuOBmeOAglsvamFdXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBldmVudCBbZW5dRXZlbnQgb2JqZWN0LlsvZW5dXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBldmVudC5kaWFsb2dcbiAgICogICBbZW5dQ29tcG9uZW50IG9iamVjdC5bL2VuXVxuICAgKiAgIFtqYV3jgrPjg7Pjg53jg7zjg43jg7Pjg4jjga7jgqrjg5bjgrjjgqfjgq/jg4jjgIJbL2phXVxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBldmVudC5jYW5jZWxcbiAgICogICBbZW5dRXhlY3V0ZSB0aGlzIGZ1bmN0aW9uIHRvIHN0b3AgdGhlIGRpYWxvZyBmcm9tIGJlaW5nIHNob3duLlsvZW5dXG4gICAqICAgW2phXeOBk+OBrumWouaVsOOCkuWun+ihjOOBmeOCi+OBqOOAgeODgOOCpOOCouODreOCsOOBruihqOekuuOBjOOCreODo+ODs+OCu+ODq+OBleOCjOOBvuOBmeOAglsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAZXZlbnQgcG9zdHNob3dcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqIFtlbl1GaXJlZCBqdXN0IGFmdGVyIHRoZSBkaWFsb2cgaXMgZGlzcGxheWVkLlsvZW5dXG4gICAqIFtqYV3jg4DjgqTjgqLjg63jgrDjgYzooajnpLrjgZXjgozjgZ/nm7TlvozjgavnmbrngavjgZfjgb7jgZnjgIJbL2phXVxuICAgKiBAcGFyYW0ge09iamVjdH0gZXZlbnQgW2VuXUV2ZW50IG9iamVjdC5bL2VuXVxuICAgKiBAcGFyYW0ge09iamVjdH0gZXZlbnQuZGlhbG9nXG4gICAqICAgW2VuXUNvbXBvbmVudCBvYmplY3QuWy9lbl1cbiAgICogICBbamFd44Kz44Oz44Od44O844ON44Oz44OI44Gu44Kq44OW44K444Kn44Kv44OI44CCWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBldmVudCBwcmVoaWRlXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiBbZW5dRmlyZWQganVzdCBiZWZvcmUgdGhlIGRpYWxvZyBpcyBoaWRkZW4uWy9lbl1cbiAgICogW2phXeODgOOCpOOCouODreOCsOOBjOmaoOOCjOOCi+ebtOWJjeOBq+eZuueBq+OBl+OBvuOBmeOAglsvamFdXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBldmVudCBbZW5dRXZlbnQgb2JqZWN0LlsvZW5dXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBldmVudC5kaWFsb2dcbiAgICogICBbZW5dQ29tcG9uZW50IG9iamVjdC5bL2VuXVxuICAgKiAgIFtqYV3jgrPjg7Pjg53jg7zjg43jg7Pjg4jjga7jgqrjg5bjgrjjgqfjgq/jg4jjgIJbL2phXVxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBldmVudC5jYW5jZWxcbiAgICogICBbZW5dRXhlY3V0ZSB0aGlzIGZ1bmN0aW9uIHRvIHN0b3AgdGhlIGRpYWxvZyBmcm9tIGJlaW5nIGhpZGRlbi5bL2VuXVxuICAgKiAgIFtqYV3jgZPjga7plqLmlbDjgpLlrp/ooYzjgZnjgovjgajjgIHjg4DjgqTjgqLjg63jgrDjga7pnZ7ooajnpLrjgYzjgq3jg6Pjg7Pjgrvjg6vjgZXjgozjgb7jgZnjgIJbL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQGV2ZW50IHBvc3RoaWRlXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiBbZW5dRmlyZWQganVzdCBhZnRlciB0aGUgZGlhbG9nIGlzIGhpZGRlbi5bL2VuXVxuICAgKiBbamFd44OA44Kk44Ki44Ot44Kw44GM6Zqg44KM44Gf5b6M44Gr55m654Gr44GX44G+44GZ44CCWy9qYV1cbiAgICogQHBhcmFtIHtPYmplY3R9IGV2ZW50IFtlbl1FdmVudCBvYmplY3QuWy9lbl1cbiAgICogQHBhcmFtIHtPYmplY3R9IGV2ZW50LmRpYWxvZ1xuICAgKiAgIFtlbl1Db21wb25lbnQgb2JqZWN0LlsvZW5dXG4gICAqICAgW2phXeOCs+ODs+ODneODvOODjeODs+ODiOOBruOCquODluOCuOOCp+OCr+ODiOOAglsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAYXR0cmlidXRlIG1vZGlmaWVyXG4gICAqIEB0eXBlIHtTdHJpbmd9XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgW2VuXVRoZSBhcHBlYXJhbmNlIG9mIHRoZSBkaWFsb2cuWy9lbl1cbiAgICogIFtqYV3jg4DjgqTjgqLjg63jgrDjga7ooajnj77jgpLmjIflrprjgZfjgb7jgZnjgIJbL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQGF0dHJpYnV0ZSBjYW5jZWxhYmxlXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgW2VuXUlmIHRoaXMgYXR0cmlidXRlIGlzIHNldCB0aGUgZGlhbG9nIGNhbiBiZSBjbG9zZWQgYnkgdGFwcGluZyB0aGUgYmFja2dyb3VuZCBvciBieSBwcmVzc2luZyB0aGUgYmFjayBidXR0b24gb24gQW5kcm9pZCBkZXZpY2VzLlsvZW5dXG4gICAqICBbamFdWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBhdHRyaWJ1dGUgZGlzYWJsZWRcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICBbZW5dSWYgdGhpcyBhdHRyaWJ1dGUgaXMgc2V0IHRoZSBkaWFsb2cgaXMgZGlzYWJsZWQuWy9lbl1cbiAgICogIFtqYV3jgZPjga7lsZ7mgKfjgYzjgYLjgovmmYLjgIHjg4DjgqTjgqLjg63jgrDjga9kaXNhYmxlZOeKtuaFi+OBq+OBquOCiuOBvuOBmeOAglsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAYXR0cmlidXRlIGFuaW1hdGlvblxuICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgKiBAZGVmYXVsdCBkZWZhdWx0XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgW2VuXVRoZSBhbmltYXRpb24gdXNlZCB3aGVuIHNob3dpbmcgYW5kIGhpZGluZyB0aGUgZGlhbG9nLiBDYW4gYmUgZWl0aGVyIGBcIm5vbmVcImAgb3IgYFwiZGVmYXVsdFwiYC5bL2VuXVxuICAgKiAgW2phXeODgOOCpOOCouODreOCsOOCkuihqOekuuOBmeOCi+mam+OBruOCouODi+ODoeODvOOCt+ODp+ODs+WQjeOCkuaMh+WumuOBl+OBvuOBmeOAglwibm9uZVwi44KC44GX44GP44GvXCJkZWZhdWx0XCLjgpLmjIflrprjgafjgY3jgb7jgZnjgIJbL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQGF0dHJpYnV0ZSBhbmltYXRpb24tb3B0aW9uc1xuICAgKiBAdHlwZSB7RXhwcmVzc2lvbn1cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICBbZW5dU3BlY2lmeSB0aGUgYW5pbWF0aW9uJ3MgZHVyYXRpb24sIHRpbWluZyBhbmQgZGVsYXkgd2l0aCBhbiBvYmplY3QgbGl0ZXJhbC4gRS5nLiBge2R1cmF0aW9uOiAwLjIsIGRlbGF5OiAxLCB0aW1pbmc6ICdlYXNlLWluJ31gLlsvZW5dXG4gICAqICBbamFd44Ki44OL44Oh44O844K344On44Oz5pmC44GuZHVyYXRpb24sIHRpbWluZywgZGVsYXnjgpLjgqrjg5bjgrjjgqfjgq/jg4jjg6rjg4bjg6njg6vjgafmjIflrprjgZfjgb7jgZnjgIJlLmcuIGB7ZHVyYXRpb246IDAuMiwgZGVsYXk6IDEsIHRpbWluZzogJ2Vhc2UtaW4nfWBbL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQGF0dHJpYnV0ZSBtYXNrLWNvbG9yXG4gICAqIEB0eXBlIHtTdHJpbmd9XG4gICAqIEBkZWZhdWx0IHJnYmEoMCwgMCwgMCwgMC4yKVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogIFtlbl1Db2xvciBvZiB0aGUgYmFja2dyb3VuZCBtYXNrLiBEZWZhdWx0IGlzIGBcInJnYmEoMCwgMCwgMCwgMC4yKVwiYC5bL2VuXVxuICAgKiAgW2phXeiDjOaZr+OBruODnuOCueOCr+OBruiJsuOCkuaMh+WumuOBl+OBvuOBmeOAglwicmdiYSgwLCAwLCAwLCAwLjIpXCLjgYzjg4fjg5Xjgqnjg6vjg4jlgKTjgafjgZnjgIJbL2phXVxuICAgKi9cblxuICBnZXQgX21hc2soKSB7XG4gICAgcmV0dXJuIHV0aWwuZmluZENoaWxkKHRoaXMsICcuZGlhbG9nLW1hc2snKTtcbiAgfVxuXG4gIGdldCBfZGlhbG9nKCkge1xuICAgIHJldHVybiB1dGlsLmZpbmRDaGlsZCh0aGlzLCAnLmRpYWxvZycpO1xuICB9XG5cbiAgaW5pdCgpIHtcbiAgICBjb250ZW50UmVhZHkodGhpcywgKCkgPT4gdGhpcy5fY29tcGlsZSgpKTtcblxuICAgIHRoaXMuX3Zpc2libGUgPSBmYWxzZTtcbiAgICB0aGlzLl9kb29yTG9jayA9IG5ldyBEb29yTG9jaygpO1xuICAgIHRoaXMuX2JvdW5kQ2FuY2VsID0gKCkgPT4gdGhpcy5fY2FuY2VsKCk7XG5cbiAgICB0aGlzLl91cGRhdGVBbmltYXRvckZhY3RvcnkoKTtcbiAgfVxuXG4gIF91cGRhdGVBbmltYXRvckZhY3RvcnkoKSB7XG4gICAgdGhpcy5fYW5pbWF0b3JGYWN0b3J5ID0gbmV3IEFuaW1hdG9yRmFjdG9yeSh7XG4gICAgICBhbmltYXRvcnM6IF9hbmltYXRvckRpY3QsXG4gICAgICBiYXNlQ2xhc3M6IERpYWxvZ0FuaW1hdG9yLFxuICAgICAgYmFzZUNsYXNzTmFtZTogJ0RpYWxvZ0FuaW1hdG9yJyxcbiAgICAgIGRlZmF1bHRBbmltYXRpb246IHRoaXMuZ2V0QXR0cmlidXRlKCdhbmltYXRpb24nKVxuICAgIH0pO1xuICB9XG5cbiAgX2NvbXBpbGUoKSB7XG4gICAgYXV0b1N0eWxlLnByZXBhcmUodGhpcyk7XG5cbiAgICB0aGlzLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XG4gICAgdGhpcy5zdHlsZS56SW5kZXggPSAxMDAwMTtcblxuICAgIC8qIEV4cGVjdGVkIHJlc3VsdDpcbiAgICAgKiAgIDxvbnMtZGlhbG9nPlxuICAgICAqICAgICA8ZGl2IGNsYXNzPVwiZGlhbG9nLW1hc2tcIj48L2Rpdj5cbiAgICAgKiAgICAgPGRpdiBjbGFzcz1cImRpYWxvZ1wiPlxuICAgICAqICAgICAgIDxkaXYgY2xhc3M9XCJkaWFsb2ctY29udGFpbmVyXCI+Li4uPC9kaXY+XG4gICAgICogICAgIDwvZGl2PlxuICAgICAqICAgPC9vbnMtZGlhbG9nPlxuICAgICAqL1xuXG4gICAgaWYgKCF0aGlzLl9kaWFsb2cpIHtcbiAgICAgIGNvbnN0IGRpYWxvZyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgZGlhbG9nLmNsYXNzTGlzdC5hZGQoJ2RpYWxvZycpO1xuXG4gICAgICBjb25zdCBjb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgIGNvbnRhaW5lci5jbGFzc0xpc3QuYWRkKCdkaWFsb2ctY29udGFpbmVyJyk7XG4gICAgICB3aGlsZSAodGhpcy5maXJzdENoaWxkKSB7XG4gICAgICAgIGNvbnRhaW5lci5hcHBlbmRDaGlsZCh0aGlzLmZpcnN0Q2hpbGQpO1xuICAgICAgfVxuICAgICAgZGlhbG9nLmFwcGVuZENoaWxkKGNvbnRhaW5lcik7XG5cbiAgICAgIHRoaXMuYXBwZW5kQ2hpbGQoZGlhbG9nKTtcbiAgICB9XG5cbiAgICBpZiAoIXRoaXMuX21hc2spIHtcbiAgICAgIGNvbnN0IG1hc2sgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgIG1hc2suY2xhc3NMaXN0LmFkZCgnZGlhbG9nLW1hc2snKTtcbiAgICAgIHRoaXMuaW5zZXJ0QmVmb3JlKG1hc2ssIHRoaXMuZmlyc3RDaGlsZCk7XG4gICAgfVxuXG4gICAgdGhpcy5fZGlhbG9nLnN0eWxlLnpJbmRleCA9IDIwMDAxO1xuICAgIHRoaXMuX21hc2suc3R5bGUuekluZGV4ID0gMjAwMDA7XG5cbiAgICB0aGlzLnNldEF0dHJpYnV0ZSgnc3RhdHVzLWJhci1maWxsJywgJycpO1xuXG4gICAgTW9kaWZpZXJVdGlsLmluaXRNb2RpZmllcih0aGlzLCBzY2hlbWUpO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwcm9wZXJ0eSBvbkRldmljZUJhY2tCdXR0b25cbiAgICogQHR5cGUge09iamVjdH1cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXUJhY2stYnV0dG9uIGhhbmRsZXIuWy9lbl1cbiAgICogICBbamFd44OQ44OD44Kv44Oc44K/44Oz44OP44Oz44OJ44Op44CCWy9qYV1cbiAgICovXG4gIGdldCBvbkRldmljZUJhY2tCdXR0b24oKSB7XG4gICAgcmV0dXJuIHRoaXMuX2JhY2tCdXR0b25IYW5kbGVyO1xuICB9XG5cbiAgc2V0IG9uRGV2aWNlQmFja0J1dHRvbihjYWxsYmFjaykge1xuICAgIGlmICh0aGlzLl9iYWNrQnV0dG9uSGFuZGxlcikge1xuICAgICAgdGhpcy5fYmFja0J1dHRvbkhhbmRsZXIuZGVzdHJveSgpO1xuICAgIH1cblxuICAgIHRoaXMuX2JhY2tCdXR0b25IYW5kbGVyID0gZGV2aWNlQmFja0J1dHRvbkRpc3BhdGNoZXIuY3JlYXRlSGFuZGxlcih0aGlzLCBjYWxsYmFjayk7XG4gIH1cblxuICBfY2FuY2VsKCkge1xuICAgIGlmICh0aGlzLmNhbmNlbGFibGUgJiYgIXRoaXMuX3J1bm5pbmcpIHtcbiAgICAgIHRoaXMuX3J1bm5pbmcgPSB0cnVlO1xuICAgICAgdGhpcy5oaWRlKClcbiAgICAgICAgLnRoZW4oXG4gICAgICAgICAgKCkgPT4ge1xuICAgICAgICAgICAgdGhpcy5fcnVubmluZyA9IGZhbHNlO1xuICAgICAgICAgICAgdXRpbC50cmlnZ2VyRWxlbWVudEV2ZW50KHRoaXMsICdkaWFsb2ctY2FuY2VsJyk7XG4gICAgICAgICAgfSxcbiAgICAgICAgICAoKSA9PiB0aGlzLl9ydW5uaW5nID0gZmFsc2VcbiAgICAgICAgKTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogQG1ldGhvZCBzaG93XG4gICAqIEBzaWduYXR1cmUgc2hvdyhbb3B0aW9uc10pXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0aW9uc11cbiAgICogICBbZW5dUGFyYW1ldGVyIG9iamVjdC5bL2VuXVxuICAgKiAgIFtqYV3jgqrjg5fjgrfjg6fjg7PjgpLmjIflrprjgZnjgovjgqrjg5bjgrjjgqfjgq/jg4jjgIJbL2phXVxuICAgKiBAcGFyYW0ge1N0cmluZ30gW29wdGlvbnMuYW5pbWF0aW9uXVxuICAgKiAgIFtlbl1BbmltYXRpb24gbmFtZS4gQXZhaWxhYmxlIGFuaW1hdGlvbnMgYXJlIGBcIm5vbmVcImAgYW5kIGBcInNsaWRlXCJgLlsvZW5dXG4gICAqICAgW2phXeOCouODi+ODoeODvOOCt+ODp+ODs+WQjeOCkuaMh+WumuOBl+OBvuOBmeOAglwibm9uZVwiLCBcInNsaWRlXCLjga7jgYTjgZrjgozjgYvjgpLmjIflrprjgZfjgb7jgZnjgIJbL2phXVxuICAgKiBAcGFyYW0ge1N0cmluZ30gW29wdGlvbnMuYW5pbWF0aW9uT3B0aW9uc11cbiAgICogICBbZW5dU3BlY2lmeSB0aGUgYW5pbWF0aW9uJ3MgZHVyYXRpb24sIGRlbGF5IGFuZCB0aW1pbmcuIEUuZy4gYHtkdXJhdGlvbjogMC4yLCBkZWxheTogMC40LCB0aW1pbmc6ICdlYXNlLWluJ31gLlsvZW5dXG4gICAqICAgW2phXeOCouODi+ODoeODvOOCt+ODp+ODs+aZguOBrmR1cmF0aW9uLCBkZWxheSwgdGltaW5n44KS5oyH5a6a44GX44G+44GZ44CCZS5nLiBge2R1cmF0aW9uOiAwLjIsIGRlbGF5OiAwLjQsIHRpbWluZzogJ2Vhc2UtaW4nfWAgWy9qYV1cbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gW29wdGlvbnMuY2FsbGJhY2tdXG4gICAqICAgW2VuXVRoaXMgZnVuY3Rpb24gaXMgY2FsbGVkIGFmdGVyIHRoZSBkaWFsb2cgaGFzIGJlZW4gcmV2ZWFsZWQuWy9lbl1cbiAgICogICBbamFd44OA44Kk44Ki44Ot44Kw44GM6KGo56S644GV44KM57WC44KP44Gj44Gf5b6M44Gr5ZG844Gz5Ye644GV44KM44KL6Zai5pWw44Kq44OW44K444Kn44Kv44OI44KS5oyH5a6a44GX44G+44GZ44CCWy9qYV1cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICBbZW5dU2hvdyB0aGUgZGlhbG9nLlsvZW5dXG4gICAqICBbamFd44OA44Kk44Ki44Ot44Kw44KS6ZaL44GN44G+44GZ44CCWy9qYV1cbiAgICogQHJldHVybiB7UHJvbWlzZX0gUmVzb2x2ZXMgdG8gdGhlIGRpc3BsYXllZCBlbGVtZW50LlxuICAgKi9cbiAgc2hvdyhvcHRpb25zID0ge30pIHtcbiAgICBsZXQgY2FuY2VsID0gZmFsc2U7XG4gICAgY29uc3QgY2FsbGJhY2sgPSBvcHRpb25zLmNhbGxiYWNrIHx8IGZ1bmN0aW9uKCkge307XG5cbiAgICBvcHRpb25zLmFuaW1hdGlvbk9wdGlvbnMgPSB1dGlsLmV4dGVuZChcbiAgICAgIG9wdGlvbnMuYW5pbWF0aW9uT3B0aW9ucyB8fCB7fSxcbiAgICAgIEFuaW1hdG9yRmFjdG9yeS5wYXJzZUFuaW1hdGlvbk9wdGlvbnNTdHJpbmcodGhpcy5nZXRBdHRyaWJ1dGUoJ2FuaW1hdGlvbi1vcHRpb25zJykpXG4gICAgKTtcblxuICAgIHV0aWwudHJpZ2dlckVsZW1lbnRFdmVudCh0aGlzLCAncHJlc2hvdycsIHtcbiAgICAgIGRpYWxvZzogdGhpcyxcbiAgICAgIGNhbmNlbDogZnVuY3Rpb24oKSB7XG4gICAgICAgIGNhbmNlbCA9IHRydWU7XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICBpZiAoIWNhbmNlbCkge1xuICAgICAgY29uc3QgdHJ5U2hvdyA9ICgpID0+IHtcbiAgICAgICAgY29uc3QgdW5sb2NrID0gdGhpcy5fZG9vckxvY2subG9jaygpO1xuICAgICAgICBjb25zdCBhbmltYXRvciA9IHRoaXMuX2FuaW1hdG9yRmFjdG9yeS5uZXdBbmltYXRvcihvcHRpb25zKTtcblxuICAgICAgICB0aGlzLnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snO1xuICAgICAgICB0aGlzLl9tYXNrLnN0eWxlLm9wYWNpdHkgPSAnMSc7XG5cbiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKHJlc29sdmUgPT4ge1xuICAgICAgICAgIGNvbnRlbnRSZWFkeSh0aGlzLCAoKSA9PiB7XG4gICAgICAgICAgICBhbmltYXRvci5zaG93KHRoaXMsICgpID0+IHtcbiAgICAgICAgICAgICAgdGhpcy5fdmlzaWJsZSA9IHRydWU7XG4gICAgICAgICAgICAgIHVubG9jaygpO1xuXG4gICAgICAgICAgICAgIHV0aWwudHJpZ2dlckVsZW1lbnRFdmVudCh0aGlzLCAncG9zdHNob3cnLCB7ZGlhbG9nOiB0aGlzfSk7XG5cbiAgICAgICAgICAgICAgY2FsbGJhY2soKTtcbiAgICAgICAgICAgICAgcmVzb2x2ZSh0aGlzKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICAgIH07XG5cbiAgICAgIHJldHVybiBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHtcbiAgICAgICAgdGhpcy5fZG9vckxvY2sud2FpdFVubG9jaygoKSA9PiByZXNvbHZlKHRyeVNob3coKSkpO1xuICAgICAgfSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdCgnQ2FuY2VsZWQgaW4gcHJlc2hvdyBldmVudC4nKTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogQG1ldGhvZCBoaWRlXG4gICAqIEBzaWduYXR1cmUgaGlkZShbb3B0aW9uc10pXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0aW9uc11cbiAgICogICBbZW5dUGFyYW1ldGVyIG9iamVjdC5bL2VuXVxuICAgKiAgIFtqYV3jgqrjg5fjgrfjg6fjg7PjgpLmjIflrprjgZnjgovjgqrjg5bjgrjjgqfjgq/jg4jjgIJbL2phXVxuICAgKiBAcGFyYW0ge1N0cmluZ30gW29wdGlvbnMuYW5pbWF0aW9uXVxuICAgKiAgIFtlbl1BbmltYXRpb24gbmFtZS4gQXZhaWxhYmxlIGFuaW1hdGlvbnMgYXJlIGBcIm5vbmVcImAgYW5kIGBcInNsaWRlXCJgLlsvZW5dXG4gICAqICAgW2phXeOCouODi+ODoeODvOOCt+ODp+ODs+WQjeOCkuaMh+WumuOBl+OBvuOBmeOAglwibm9uZVwiLCBcInNsaWRlXCLjga7jgYTjgZrjgozjgYvjgpLmjIflrprjgafjgY3jgb7jgZnjgIJbL2phXVxuICAgKiBAcGFyYW0ge1N0cmluZ30gW29wdGlvbnMuYW5pbWF0aW9uT3B0aW9uc11cbiAgICogICBbZW5dU3BlY2lmeSB0aGUgYW5pbWF0aW9uJ3MgZHVyYXRpb24sIGRlbGF5IGFuZCB0aW1pbmcuIEUuZy4gYHtkdXJhdGlvbjogMC4yLCBkZWxheTogMC40LCB0aW1pbmc6ICdlYXNlLWluJ31gLlsvZW5dXG4gICAqICAgW2phXeOCouODi+ODoeODvOOCt+ODp+ODs+aZguOBrmR1cmF0aW9uLCBkZWxheSwgdGltaW5n44KS5oyH5a6a44GX44G+44GZ44CCZS5nLiBge2R1cmF0aW9uOiAwLjIsIGRlbGF5OiAwLjQsIHRpbWluZzogJ2Vhc2UtaW4nfWBbL2phXVxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBbb3B0aW9ucy5jYWxsYmFja11cbiAgICogICBbZW5dVGhpcyBmdW5jdGlvbnMgaXMgY2FsbGVkIGFmdGVyIHRoZSBkaWFsb2cgaGFzIGJlZW4gaGlkZGVuLlsvZW5dXG4gICAqICAgW2phXeODgOOCpOOCouODreOCsOOBjOmaoOOCjOOBn+W+jOOBq+WRvOOBs+WHuuOBleOCjOOCi+mWouaVsOOCquODluOCuOOCp+OCr+ODiOOCkuaMh+WumuOBl+OBvuOBmeOAglsvamFdXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1IaWRlIHRoZSBkaWFsb2cuWy9lbl1cbiAgICogICBbamFd44OA44Kk44Ki44Ot44Kw44KS6ZaJ44GY44G+44GZ44CCWy9qYV1cbiAgICogQHJldHVybiB7UHJvbWlzZX1cbiAgICogICBbZW5dUmVzb2x2ZXMgdG8gdGhlIGhpZGRlbiBlbGVtZW50Wy9lbl1cbiAgICogICBbamFdWy9qYV1cbiAgICovXG4gIGhpZGUob3B0aW9ucyA9IHt9KSB7XG4gICAgbGV0IGNhbmNlbCA9IGZhbHNlO1xuICAgIGNvbnN0IGNhbGxiYWNrID0gb3B0aW9ucy5jYWxsYmFjayB8fCBmdW5jdGlvbigpIHt9O1xuXG4gICAgb3B0aW9ucy5hbmltYXRpb25PcHRpb25zID0gdXRpbC5leHRlbmQoXG4gICAgICBvcHRpb25zLmFuaW1hdGlvbk9wdGlvbnMgfHwge30sXG4gICAgICBBbmltYXRvckZhY3RvcnkucGFyc2VBbmltYXRpb25PcHRpb25zU3RyaW5nKHRoaXMuZ2V0QXR0cmlidXRlKCdhbmltYXRpb24tb3B0aW9ucycpKVxuICAgICk7XG5cbiAgICB1dGlsLnRyaWdnZXJFbGVtZW50RXZlbnQodGhpcywgJ3ByZWhpZGUnLCB7XG4gICAgICBkaWFsb2c6IHRoaXMsXG4gICAgICBjYW5jZWw6IGZ1bmN0aW9uKCkge1xuICAgICAgICBjYW5jZWwgPSB0cnVlO1xuICAgICAgfVxuICAgIH0pO1xuXG4gICAgaWYgKCFjYW5jZWwpIHtcbiAgICAgIGNvbnN0IHRyeUhpZGUgPSAoKSA9PiB7XG4gICAgICAgIGNvbnN0IHVubG9jayA9IHRoaXMuX2Rvb3JMb2NrLmxvY2soKTtcbiAgICAgICAgY29uc3QgYW5pbWF0b3IgPSB0aGlzLl9hbmltYXRvckZhY3RvcnkubmV3QW5pbWF0b3Iob3B0aW9ucyk7XG5cbiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKHJlc29sdmUgPT4ge1xuICAgICAgICAgIGNvbnRlbnRSZWFkeSh0aGlzLCAoKSA9PiB7XG4gICAgICAgICAgICBhbmltYXRvci5oaWRlKHRoaXMsICgpID0+IHtcbiAgICAgICAgICAgICAgdGhpcy5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xuICAgICAgICAgICAgICB0aGlzLl92aXNpYmxlID0gZmFsc2U7XG4gICAgICAgICAgICAgIHVubG9jaygpO1xuXG4gICAgICAgICAgICAgIHV0aWwudHJpZ2dlckVsZW1lbnRFdmVudCh0aGlzLCAncG9zdGhpZGUnLCB7ZGlhbG9nOiB0aGlzfSk7XG5cbiAgICAgICAgICAgICAgY2FsbGJhY2soKTtcbiAgICAgICAgICAgICAgcmVzb2x2ZSh0aGlzKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICAgIH07XG5cbiAgICAgIHJldHVybiBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHtcbiAgICAgICAgdGhpcy5fZG9vckxvY2sud2FpdFVubG9jaygoKSA9PiByZXNvbHZlKHRyeUhpZGUoKSkpO1xuICAgICAgfSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdCgnQ2FuY2VsZWQgaW4gcHJlaGlkZSBldmVudC4nKTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogQHByb3BlcnR5IHZpc2libGVcbiAgICogQHJlYWRvbmx5XG4gICAqIEB0eXBlIHtCb29sZWFufVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dV2hldGhlciB0aGUgZGlhbG9nIGlzIHZpc2libGUgb3Igbm90LlsvZW5dXG4gICAqICAgW2phXeimgee0oOOBjOimi+OBiOOCi+WgtOWQiOOBq2B0cnVlYOOAglsvamFdXG4gICAqL1xuICBnZXQgdmlzaWJsZSgpIHtcbiAgICByZXR1cm4gdGhpcy5fdmlzaWJsZTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcHJvcGVydHkgZGlzYWJsZWRcbiAgICogQHR5cGUge0Jvb2xlYW59XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1XaGV0aGVyIHRoZSBkaWFsb2cgaXMgZGlzYWJsZWQgb3Igbm90LlsvZW5dXG4gICAqICAgW2phXeeEoeWKueWMluOBleOCjOOBpuOBhOOCi+WgtOWQiOOBq2B0cnVlYOOAglsvamFdXG4gICAqL1xuICBzZXQgZGlzYWJsZWQodmFsdWUpIHtcbiAgICByZXR1cm4gdXRpbC50b2dnbGVBdHRyaWJ1dGUodGhpcywgJ2Rpc2FibGVkJywgdmFsdWUpO1xuICB9XG5cbiAgZ2V0IGRpc2FibGVkKCkge1xuICAgIHJldHVybiB0aGlzLmhhc0F0dHJpYnV0ZSgnZGlzYWJsZWQnKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcHJvcGVydHkgY2FuY2VsYWJsZVxuICAgKiBAdHlwZSB7Qm9vbGVhbn1cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXVdoZXRoZXIgdGhlIGRpYWxvZyBpcyBjYW5jZWxhYmxlIG9yIG5vdC4gQSBjYW5jZWxhYmxlIGRpYWxvZyBjYW4gYmUgY2xvc2VkIGJ5IHRhcHBpbmcgdGhlIGJhY2tncm91bmQgb3IgYnkgcHJlc3NpbmcgdGhlIGJhY2sgYnV0dG9uIG9uIEFuZHJvaWQgZGV2aWNlcy5bL2VuXVxuICAgKiAgIFtqYV1bL2phXVxuICAgKi9cbiAgc2V0IGNhbmNlbGFibGUodmFsdWUpIHtcbiAgICByZXR1cm4gdXRpbC50b2dnbGVBdHRyaWJ1dGUodGhpcywgJ2NhbmNlbGFibGUnLCB2YWx1ZSk7XG4gIH1cblxuICBnZXQgY2FuY2VsYWJsZSgpIHtcbiAgICByZXR1cm4gdGhpcy5oYXNBdHRyaWJ1dGUoJ2NhbmNlbGFibGUnKTtcbiAgfVxuXG4gIGNvbm5lY3RlZENhbGxiYWNrKCkge1xuICAgIHRoaXMub25EZXZpY2VCYWNrQnV0dG9uID0gZSA9PiB0aGlzLmNhbmNlbGFibGUgPyB0aGlzLl9jYW5jZWwoKSA6IGUuY2FsbFBhcmVudEhhbmRsZXIoKTtcblxuICAgIGNvbnRlbnRSZWFkeSh0aGlzLCAoKSA9PiB7XG4gICAgICB0aGlzLl9tYXNrLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdGhpcy5fYm91bmRDYW5jZWwsIGZhbHNlKTtcbiAgICB9KTtcbiAgfVxuXG4gIGRpc2Nvbm5lY3RlZENhbGxiYWNrKCkge1xuICAgIHRoaXMuX2JhY2tCdXR0b25IYW5kbGVyLmRlc3Ryb3koKTtcbiAgICB0aGlzLl9iYWNrQnV0dG9uSGFuZGxlciA9IG51bGw7XG5cbiAgICB0aGlzLl9tYXNrLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdGhpcy5fYm91bmRDYW5jZWwuYmluZCh0aGlzKSwgZmFsc2UpO1xuICB9XG5cbiAgc3RhdGljIGdldCBvYnNlcnZlZEF0dHJpYnV0ZXMoKSB7XG4gICAgcmV0dXJuIFsnbW9kaWZpZXInLCAnYW5pbWF0aW9uJ107XG4gIH1cblxuICBhdHRyaWJ1dGVDaGFuZ2VkQ2FsbGJhY2sobmFtZSwgbGFzdCwgY3VycmVudCkge1xuICAgIGlmIChuYW1lID09PSAnbW9kaWZpZXInKSB7XG4gICAgICByZXR1cm4gTW9kaWZpZXJVdGlsLm9uTW9kaWZpZXJDaGFuZ2VkKGxhc3QsIGN1cnJlbnQsIHRoaXMsIHNjaGVtZSk7XG4gICAgfVxuICAgIGVsc2UgaWYgKG5hbWUgPT09ICdhbmltYXRpb24nKSB7XG4gICAgICB0aGlzLl91cGRhdGVBbmltYXRvckZhY3RvcnkoKTtcbiAgICB9XG4gIH1cblxuICBzdGF0aWMgZ2V0IGV2ZW50cygpIHtcbiAgICByZXR1cm4gWydwcmVzaG93JywgJ3Bvc3RzaG93JywgJ3ByZWhpZGUnLCAncG9zdGhpZGUnLCAnZGlhbG9nLWNhbmNlbCddO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7U3RyaW5nfSBuYW1lXG4gICAqIEBwYXJhbSB7RGlhbG9nQW5pbWF0b3J9IEFuaW1hdG9yXG4gICAqL1xuICBzdGF0aWMgcmVnaXN0ZXJBbmltYXRvcihuYW1lLCBBbmltYXRvcikge1xuICAgIGlmICghKEFuaW1hdG9yLnByb3RvdHlwZSBpbnN0YW5jZW9mIERpYWxvZ0FuaW1hdG9yKSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdcIkFuaW1hdG9yXCIgcGFyYW0gbXVzdCBpbmhlcml0IE9uc0RpYWxvZ0VsZW1lbnQuRGlhbG9nQW5pbWF0b3InKTtcbiAgICB9XG4gICAgX2FuaW1hdG9yRGljdFtuYW1lXSA9IEFuaW1hdG9yO1xuICB9XG5cbiAgc3RhdGljIGdldCBhbmltYXRvcnMoKSB7XG4gICAgcmV0dXJuIF9hbmltYXRvckRpY3Q7XG4gIH1cblxuICBzdGF0aWMgZ2V0IERpYWxvZ0FuaW1hdG9yKCkge1xuICAgIHJldHVybiBEaWFsb2dBbmltYXRvcjtcbiAgfVxufVxuXG5jdXN0b21FbGVtZW50cy5kZWZpbmUoJ29ucy1kaWFsb2cnLCBEaWFsb2dFbGVtZW50KTtcbiIsIi8qXG5Db3B5cmlnaHQgMjAxMy0yMDE1IEFTSUFMIENPUlBPUkFUSU9OXG5MaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xueW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcblVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbmRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbldJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxubGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4qL1xuXG5pbXBvcnQgYXV0b1N0eWxlIGZyb20gJy4uL29ucy9hdXRvc3R5bGUnO1xuaW1wb3J0IE1vZGlmaWVyVXRpbCBmcm9tICcuLi9vbnMvaW50ZXJuYWwvbW9kaWZpZXItdXRpbCc7XG5pbXBvcnQgQmFzZUVsZW1lbnQgZnJvbSAnLi4vb25zL2Jhc2UtZWxlbWVudCc7XG5pbXBvcnQgdXRpbCBmcm9tICcuLi9vbnMvdXRpbCc7XG5pbXBvcnQgY29udGVudFJlYWR5IGZyb20gJy4uL29ucy9jb250ZW50LXJlYWR5JztcblxuY29uc3QgZGVmYXVsdENsYXNzTmFtZSA9ICdmYWInO1xuXG5jb25zdCBzY2hlbWUgPSB7XG4gICcnOiAnZmFiLS0qJyxcbiAgJy5mYWJfX2ljb24nOiAnZmFiLS0qX19pY29uJ1xufTtcblxuLyoqXG4gKiBAZWxlbWVudCBvbnMtZmFiXG4gKiBAY2F0ZWdvcnkgZm9ybVxuICogQGRlc2NyaXB0aW9uXG4gKiAgIFtlbl1cbiAqICAgICBUaGUgRmxvYXRpbmcgYWN0aW9uIGJ1dHRvbiBpcyBhIGNpcmN1bGFyIGJ1dHRvbiBkZWZpbmVkIGluIHRoZSBbTWF0ZXJpYWwgRGVzaWduIHNwZWNpZmljYXRpb25dKGh0dHBzOi8vd3d3Lmdvb2dsZS5jb20vZGVzaWduL3NwZWMvY29tcG9uZW50cy9idXR0b25zLWZsb2F0aW5nLWFjdGlvbi1idXR0b24uaHRtbCkuIFRoZXkgYXJlIG9mdGVuIHVzZWQgdG8gcHJvbW90ZSB0aGUgcHJpbWFyeSBhY3Rpb24gb2YgdGhlIGFwcC5cbiAqXG4gKiAgICAgSXQgY2FuIGJlIGRpc3BsYXllZCBlaXRoZXIgYXMgYW4gaW5saW5lIGVsZW1lbnQgb3IgaW4gb25lIG9mIHRoZSBjb3JuZXJzLiBOb3JtYWxseSBpdCB3aWxsIGJlIHBvc2l0aW9uZWQgaW4gdGhlIGxvd2VyIHJpZ2h0IGNvcm5lciBvZiB0aGUgc2NyZWVuLlxuICogICBbL2VuXVxuICogICBbamFdWy9qYV1cbiAqIEB0dXRvcmlhbCB2YW5pbGxhL1JlZmVyZW5jZS9mYWJcbiAqIEBndWlkZSBjcm9zcy1wbGF0Zm9ybS1zdHlsaW5nIFtlbl1JbmZvcm1hdGlvbiBhYm91dCBjcm9zcyBwbGF0Zm9ybSBzdHlsaW5nWy9lbl1bamFdSW5mb3JtYXRpb24gYWJvdXQgY3Jvc3MgcGxhdGZvcm0gc3R5bGluZ1svamFdXG4gKiBAc2VlYWxzbyBvbnMtc3BlZWQtZGlhbFxuICogICBbZW5dVGhlIGA8b25zLXNwZWVkLWRpYWw+YCBjb21wb25lbnQgaXMgYSBGbG9hdGluZyBhY3Rpb24gYnV0dG9uIHRoYXQgZGlzcGxheXMgYSBtZW51IHdoZW4gdGFwcGVkLlsvZW5dXG4gKiAgIFtqYV1bL2phXVxuICovXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBGYWJFbGVtZW50IGV4dGVuZHMgQmFzZUVsZW1lbnQge1xuXG4gIC8qKlxuICAgKiBAYXR0cmlidXRlIG1vZGlmaWVyXG4gICAqIEB0eXBlIHtTdHJpbmd9XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgW2VuXVRoZSBhcHBlYXJhbmNlIG9mIHRoZSBidXR0b24uWy9lbl1cbiAgICogIFtqYV3jg5zjgr/jg7Pjga7ooajnj77jgpLmjIflrprjgZfjgb7jgZnjgIJbL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQGF0dHJpYnV0ZSByaXBwbGVcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICBbZW5dSWYgdGhpcyBhdHRyaWJ1dGUgaXMgZGVmaW5lZCwgdGhlIGJ1dHRvbiB3aWxsIGhhdmUgYSByaXBwbGUgZWZmZWN0IHdoZW4gdGFwcGVkLlsvZW5dXG4gICAqICBbamFdWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBhdHRyaWJ1dGUgcG9zaXRpb25cbiAgICogQHR5cGUge1N0cmluZ31cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICBbZW5dVGhlIHBvc2l0aW9uIG9mIHRoZSBidXR0b24uIFNob3VsZCBiZSBhIHN0cmluZyBsaWtlIGBcImJvdHRvbSByaWdodFwiYCBvciBgXCJ0b3AgbGVmdFwiYC4gSWYgdGhpcyBhdHRyaWJ1dGUgaXMgbm90IGRlZmluZWQgaXQgd2lsbCBiZSBkaXNwbGF5ZWQgYXMgYW4gaW5saW5lIGVsZW1lbnQuWy9lbl1cbiAgICogIFtqYV1bL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQGF0dHJpYnV0ZSBkaXNhYmxlZFxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dU3BlY2lmeSBpZiBidXR0b24gc2hvdWxkIGJlIGRpc2FibGVkLlsvZW5dXG4gICAqICAgW2phXeODnOOCv+ODs+OCkueEoeWKueWMluOBmeOCi+WgtOWQiOOBr+aMh+WumuOBl+OBvuOBmeOAglsvamFdXG4gICAqL1xuXG4gIGluaXQoKSB7XG4gICAgLy8gVGhlIGZvbGxvd2luZyBzdGF0ZW1lbnRzIGNhbiBiZSBleGVjdXRlZCBiZWZvcmUgY29udGVudFJlYWR5XG4gICAgLy8gc2luY2UgdGhlc2UgZG8gbm90IGFjY2VzcyB0aGUgY2hpbGRyZW5cbiAgICB0aGlzLmhpZGUoKTtcbiAgICB0aGlzLmNsYXNzTGlzdC5hZGQoZGVmYXVsdENsYXNzTmFtZSk7XG5cbiAgICBjb250ZW50UmVhZHkodGhpcywgKCkgPT4ge1xuICAgICAgdGhpcy5fY29tcGlsZSgpO1xuICAgIH0pO1xuICB9XG5cbiAgX2NvbXBpbGUoKSB7XG4gICAgYXV0b1N0eWxlLnByZXBhcmUodGhpcyk7XG5cbiAgICBpZiAoIXV0aWwuZmluZENoaWxkKHRoaXMsICcuZmFiX19pY29uJykpIHtcbiAgICAgIGNvbnN0IGNvbnRlbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzcGFuJyk7XG4gICAgICBjb250ZW50LmNsYXNzTGlzdC5hZGQoJ2ZhYl9faWNvbicpO1xuXG4gICAgICB1dGlsLmFycmF5RnJvbSh0aGlzLmNoaWxkTm9kZXMpLmZvckVhY2goZWxlbWVudCA9PiB7XG4gICAgICAgIGlmICghZWxlbWVudC50YWdOYW1lIHx8IGVsZW1lbnQudGFnTmFtZS50b0xvd2VyQ2FzZSgpICE9PSAnb25zLXJpcHBsZScpIHtcbiAgICAgICAgICBjb250ZW50LmFwcGVuZENoaWxkKGVsZW1lbnQpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICAgIHRoaXMuYXBwZW5kQ2hpbGQoY29udGVudCk7XG4gICAgfVxuXG4gICAgdGhpcy5fdXBkYXRlUmlwcGxlKCk7XG5cbiAgICBNb2RpZmllclV0aWwuaW5pdE1vZGlmaWVyKHRoaXMsIHNjaGVtZSk7XG5cbiAgICB0aGlzLl91cGRhdGVQb3NpdGlvbigpO1xuICB9XG5cbiAgY29ubmVjdGVkQ2FsbGJhY2soKSB7XG4gICAgc2V0SW1tZWRpYXRlKCgpID0+IHRoaXMuc2hvdygpKTtcbiAgfVxuXG4gIHN0YXRpYyBnZXQgb2JzZXJ2ZWRBdHRyaWJ1dGVzKCkge1xuICAgIHJldHVybiBbJ21vZGlmaWVyJywgJ3JpcHBsZScsICdwb3NpdGlvbicsICdjbGFzcyddO1xuICB9XG5cbiAgYXR0cmlidXRlQ2hhbmdlZENhbGxiYWNrKG5hbWUsIGxhc3QsIGN1cnJlbnQpIHtcbiAgICBzd2l0Y2ggKG5hbWUpIHtcbiAgICAgIGNhc2UgJ2NsYXNzJzpcbiAgICAgICAgaWYgKCF0aGlzLmNsYXNzTGlzdC5jb250YWlucyhkZWZhdWx0Q2xhc3NOYW1lKSkge1xuICAgICAgICAgIHRoaXMuY2xhc3NOYW1lID0gZGVmYXVsdENsYXNzTmFtZSArICcgJyArIGN1cnJlbnQ7XG4gICAgICAgIH1cbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlICdtb2RpZmllcic6XG4gICAgICAgIE1vZGlmaWVyVXRpbC5vbk1vZGlmaWVyQ2hhbmdlZChsYXN0LCBjdXJyZW50LCB0aGlzLCBzY2hlbWUpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ3JpcHBsZSc6XG4gICAgICAgIHRoaXMuX3VwZGF0ZVJpcHBsZSgpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ3Bvc2l0aW9uJzpcbiAgICAgICAgdGhpcy5fdXBkYXRlUG9zaXRpb24oKTtcbiAgICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG5cbiAgX3Nob3coKSB7XG4gICAgdGhpcy5zaG93KCk7XG4gIH1cblxuICBfaGlkZSgpIHtcbiAgICBzZXRJbW1lZGlhdGUoKCkgPT4gdGhpcy5oaWRlKCkpO1xuICB9XG5cbiAgX3VwZGF0ZVJpcHBsZSgpIHtcbiAgICB1dGlsLnVwZGF0ZVJpcHBsZSh0aGlzKTtcbiAgfVxuXG4gIF91cGRhdGVQb3NpdGlvbigpIHtcbiAgICBjb25zdCBwb3NpdGlvbiA9IHRoaXMuZ2V0QXR0cmlidXRlKCdwb3NpdGlvbicpO1xuICAgIHRoaXMuY2xhc3NMaXN0LnJlbW92ZShcbiAgICAgICdmYWItLXRvcF9fbGVmdCcsXG4gICAgICAnZmFiLS1ib3R0b21fX3JpZ2h0JyxcbiAgICAgICdmYWItLWJvdHRvbV9fbGVmdCcsXG4gICAgICAnZmFiLS10b3BfX3JpZ2h0JyxcbiAgICAgICdmYWItLXRvcF9fY2VudGVyJyxcbiAgICAgICdmYWItLWJvdHRvbV9fY2VudGVyJyk7XG4gICAgc3dpdGNoIChwb3NpdGlvbikge1xuICAgICAgY2FzZSAndG9wIHJpZ2h0JzpcbiAgICAgIGNhc2UgJ3JpZ2h0IHRvcCc6XG4gICAgICAgIHRoaXMuY2xhc3NMaXN0LmFkZCgnZmFiLS10b3BfX3JpZ2h0Jyk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAndG9wIGxlZnQnOlxuICAgICAgY2FzZSAnbGVmdCB0b3AnOlxuICAgICAgICB0aGlzLmNsYXNzTGlzdC5hZGQoJ2ZhYi0tdG9wX19sZWZ0Jyk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnYm90dG9tIHJpZ2h0JzpcbiAgICAgIGNhc2UgJ3JpZ2h0IGJvdHRvbSc6XG4gICAgICAgIHRoaXMuY2xhc3NMaXN0LmFkZCgnZmFiLS1ib3R0b21fX3JpZ2h0Jyk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnYm90dG9tIGxlZnQnOlxuICAgICAgY2FzZSAnbGVmdCBib3R0b20nOlxuICAgICAgICB0aGlzLmNsYXNzTGlzdC5hZGQoJ2ZhYi0tYm90dG9tX19sZWZ0Jyk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnY2VudGVyIHRvcCc6XG4gICAgICBjYXNlICd0b3AgY2VudGVyJzpcbiAgICAgICAgdGhpcy5jbGFzc0xpc3QuYWRkKCdmYWItLXRvcF9fY2VudGVyJyk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnY2VudGVyIGJvdHRvbSc6XG4gICAgICBjYXNlICdib3R0b20gY2VudGVyJzpcbiAgICAgICAgdGhpcy5jbGFzc0xpc3QuYWRkKCdmYWItLWJvdHRvbV9fY2VudGVyJyk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgZGVmYXVsdDpcbiAgICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIEBtZXRob2Qgc2hvd1xuICAgKiBAc2lnbmF0dXJlIHNob3coKVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogIFtlbl1TaG93IHRoZSBmbG9hdGluZyBhY3Rpb24gYnV0dG9uLlsvZW5dXG4gICAqICBbamFdWy9qYV1cbiAgICovXG4gIHNob3cob3B0aW9ucyA9IHt9KSB7XG4gICAgdGhpcy5zdHlsZS50cmFuc2Zvcm0gPSAnc2NhbGUoMSknO1xuICAgIHRoaXMuc3R5bGUud2Via2l0VHJhbnNmb3JtID0gJ3NjYWxlKDEpJztcbiAgfVxuXG4gIC8qKlxuICAgKiBAbWV0aG9kIGhpZGVcbiAgICogQHNpZ25hdHVyZSBoaWRlKClcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICBbZW5dSGlkZSB0aGUgZmxvYXRpbmcgYWN0aW9uIGJ1dHRvbi5bL2VuXVxuICAgKiAgW2phXVsvamFdXG4gICAqL1xuICBoaWRlKG9wdGlvbnMgPSB7fSkge1xuICAgIHRoaXMuc3R5bGUudHJhbnNmb3JtID0gJ3NjYWxlKDApJztcbiAgICB0aGlzLnN0eWxlLndlYmtpdFRyYW5zZm9ybSA9ICdzY2FsZSgwKSc7XG4gIH1cblxuICAvKipcbiAgICogQHByb3BlcnR5IGRpc2FibGVkXG4gICAqIEB0eXBlIHtCb29sZWFufVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dV2hldGhlciB0aGUgZWxlbWVudCBpcyBkaXNhYmxlZCBvciBub3QuWy9lbl1cbiAgICogICBbamFd54Sh5Yq55YyW44GV44KM44Gm44GE44KL5aC05ZCI44GrYHRydWVg44CCWy9qYV1cbiAgICovXG4gIHNldCBkaXNhYmxlZCh2YWx1ZSkge1xuICAgIHJldHVybiB1dGlsLnRvZ2dsZUF0dHJpYnV0ZSh0aGlzLCAnZGlzYWJsZWQnLCB2YWx1ZSk7XG4gIH1cblxuICBnZXQgZGlzYWJsZWQoKSB7XG4gICAgcmV0dXJuIHRoaXMuaGFzQXR0cmlidXRlKCdkaXNhYmxlZCcpO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwcm9wZXJ0eSB2aXNpYmxlXG4gICAqIEByZWFkb25seVxuICAgKiBAdHlwZSB7Qm9vbGVhbn1cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXVdoZXRoZXIgdGhlIGVsZW1lbnQgaXMgdmlzaWJsZSBvciBub3QuWy9lbl1cbiAgICogICBbamFd6KaB57Sg44GM6KaL44GI44KL5aC05ZCI44GrYHRydWVg44CCWy9qYV1cbiAgICovXG4gIGdldCB2aXNpYmxlKCkge1xuICAgIHJldHVybiB0aGlzLnN0eWxlLnRyYW5zZm9ybSA9PT0gJ3NjYWxlKDEpJyAmJiB0aGlzLnN0eWxlLmRpc3BsYXkgIT09ICdub25lJztcbiAgfVxuXG4gIC8qKlxuICAgKiBAbWV0aG9kIHRvZ2dsZVxuICAgKiBAc2lnbmF0dXJlIHRvZ2dsZSgpXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1Ub2dnbGUgdGhlIHZpc2liaWxpdHkgb2YgdGhlIGJ1dHRvbi5bL2VuXVxuICAgKiAgIFtqYV1bL2phXVxuICAgKi9cbiAgdG9nZ2xlKCkge1xuICAgIHRoaXMudmlzaWJsZSA/IHRoaXMuaGlkZSgpIDogdGhpcy5zaG93KCk7XG4gIH1cbn1cblxuY3VzdG9tRWxlbWVudHMuZGVmaW5lKCdvbnMtZmFiJywgRmFiRWxlbWVudCk7XG4iLCIvKlxuQ29weXJpZ2h0IDIwMTMtMjAxNSBBU0lBTCBDT1JQT1JBVElPTlxuXG5MaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xueW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG5cbiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuXG5Vbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG5kaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG5XSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cblNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbmxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuXG4qL1xuXG5pbXBvcnQgQmFzZUVsZW1lbnQgZnJvbSAnLi4vb25zL2Jhc2UtZWxlbWVudCc7XG5pbXBvcnQgR2VzdHVyZURldGVjdG9yIGZyb20gJy4uL29ucy9nZXN0dXJlLWRldGVjdG9yJztcblxuLyoqXG4gKiBAZWxlbWVudCBvbnMtZ2VzdHVyZS1kZXRlY3RvclxuICogQGNhdGVnb3J5IGdlc3R1cmVcbiAqIEBkZXNjcmlwdGlvblxuICogICBbZW5dXG4gKiAgICAgQ29tcG9uZW50IHRvIGRldGVjdCBmaW5nZXIgZ2VzdHVyZXMgd2l0aGluIHRoZSB3cmFwcGVkIGVsZW1lbnQuIEZvbGxvd2luZyBnZXN0dXJlcyBhcmUgc3VwcG9ydGVkOlxuICogICAgIC0gRHJhZyBnZXN0dXJlczogYGRyYWdgLCBgZHJhZ2xlZnRgLCBgZHJhZ3JpZ2h0YCwgYGRyYWd1cGAsIGBkcmFnZG93bmBcbiAqICAgICAtIEhvbGQgZ2VzdHVyZXM6IGBob2xkYCwgYHJlbGVhc2VgXG4gKiAgICAgLSBTd2lwZSBnZXN0dXJlczogYHN3aXBlYCwgYHN3aXBlbGVmdGAsIGBzd2lwZXJpZ2h0YCwgYHN3aXBldXBgLCBgc3dpcGVkb3duYFxuICogICAgIC0gVGFwIGdlc3R1cmVzOiBgdGFwYCwgYGRvdWJsZXRhcGBcbiAqICAgICAtIFBpbmNoIGdlc3R1cmVzOiBgcGluY2hgLCBgcGluY2hpbmAsIGBwaW5jaG91dGBcbiAqICAgICAtIE90aGVyIGdlc3R1cmVzOiBgdG91Y2hgLCBgdHJhbnNmb3JtYCwgYHJvdGF0ZWBcbiAqICAgWy9lbl1cbiAqICAgW2phXeimgee0oOWGheOBruOCuOOCp+OCueODgeODo+ODvOaTjeS9nOOCkuaknOefpeOBl+OBvuOBmeOAguips+OBl+OBj+OBr+OCrOOCpOODieOCkuWPgueFp+OBl+OBpuOBj+OBoOOBleOBhOOAglsvamFdXG4gKiBAZ3VpZGUgZ2VzdHVyZS1kZXRlY3RvclxuICogICBbZW5dRGV0ZWN0aW5nIGZpbmdlciBnZXN0dXJlc1svZW5dXG4gKiAgIFtqYV3jgrjjgqfjgrnjg4Hjg6Pjg7zmk43kvZzjga7mpJznn6VbL2phXVxuICogQGV4YW1wbGVcbiAqIDxvbnMtZ2VzdHVyZS1kZXRlY3Rvcj5cbiAqICAgPGRpdiBpZD1cImRldGVjdC1hcmVhXCIgc3R5bGU9XCJ3aWR0aDogMTAwcHg7IGhlaWdodDogMTAwcHg7XCI+XG4gKiAgICAgU3dpcGUgSGVyZVxuICogICA8L2Rpdj5cbiAqIDwvb25zLWdlc3R1cmUtZGV0ZWN0b3I+XG4gKlxuICogPHNjcmlwdD5cbiAqICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignc3dpcGVsZWZ0JywgZnVuY3Rpb24oZXZlbnQpIHtcbiAqICAgICBpZiAoZXZlbnQudGFyZ2V0Lm1hdGNoZXMoJyNkZXRlY3QtYXJlYScpKSB7XG4gKiAgICAgICBjb25zb2xlLmxvZygnU3dpcGUgbGVmdCBpcyBkZXRlY3RlZC4nKTtcbiAqICAgICB9XG4gKiAgIH0pO1xuICogPC9zY3JpcHQ+XG4gKi9cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEdlc3R1cmVEZXRlY3RvckVsZW1lbnQgZXh0ZW5kcyBCYXNlRWxlbWVudCB7XG4gIGluaXQoKSB7XG4gICAgdGhpcy5fZ2VzdHVyZURldGVjdG9yID0gbmV3IEdlc3R1cmVEZXRlY3Rvcih0aGlzKTtcbiAgfVxufVxuXG5jdXN0b21FbGVtZW50cy5kZWZpbmUoJ29ucy1nZXN0dXJlLWRldGVjdG9yJywgR2VzdHVyZURldGVjdG9yRWxlbWVudCk7XG4iLCIvKlxuQ29weXJpZ2h0IDIwMTMtMjAxNSBBU0lBTCBDT1JQT1JBVElPTlxuXG5MaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xueW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG5cbiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuXG5Vbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG5kaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG5XSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cblNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbmxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuXG4qL1xuXG5pbXBvcnQgdXRpbCBmcm9tICcuLi9vbnMvdXRpbCc7XG5pbXBvcnQgYXV0b1N0eWxlIGZyb20gJy4uL29ucy9hdXRvc3R5bGUnO1xuaW1wb3J0IEJhc2VFbGVtZW50IGZyb20gJy4uL29ucy9iYXNlLWVsZW1lbnQnO1xuXG4vKipcbiAqIEBlbGVtZW50IG9ucy1pY29uXG4gKiBAY2F0ZWdvcnkgdmlzdWFsXG4gKiBAZGVzY3JpcHRpb25cbiAqICAgW2VuXVxuICogICAgIERpc3BsYXlzIGFuIGljb24uIFRoZSBmb2xsb3dpbmcgaWNvbiBzdWl0ZXMgYXJlIGF2YWlsYWJsZTpcbiAqXG4gKiAgICAgKiBbRm9udCBBd2Vzb21lXShodHRwczovL2ZvcnRhd2Vzb21lLmdpdGh1Yi5pby9Gb250LUF3ZXNvbWUvKVxuICogICAgICogW0lvbmljb25zXShodHRwOi8vaW9uaWNvbnMuY29tLylcbiAqICAgICAqIFtNYXRlcmlhbCBEZXNpZ24gSWNvbmljIEZvbnRdKGh0dHA6Ly96YXZvbG9rbG9tLmdpdGh1Yi5pby9tYXRlcmlhbC1kZXNpZ24taWNvbmljLWZvbnQvKVxuICogICBbL2VuXVxuICogICBbamFdWy9qYV1cbiAqIEBjb2RlcGVuIHhBaHZnXG4gKiBAdHV0b3JpYWwgdmFuaWxsYS9SZWZlcmVuY2UvaWNvblxuICogQGd1aWRlIGNyb3NzLXBsYXRmb3JtLXN0eWxpbmcgW2VuXUluZm9ybWF0aW9uIGFib3V0IGNyb3NzIHBsYXRmb3JtIHN0eWxpbmdbL2VuXVtqYV1JbmZvcm1hdGlvbiBhYm91dCBjcm9zcyBwbGF0Zm9ybSBzdHlsaW5nWy9qYV1cbiAqIEBleGFtcGxlXG4gKiA8b25zLWljb25cbiAqICAgaWNvbj1cIm1kLWNhclwiXG4gKiAgIHNpemU9XCIyMHB4XCJcbiAqICAgc3R5bGU9XCJjb2xvcjogcmVkXCI+XG4gKiA8L29ucy1pY29uPlxuICpcbiAqIDxvbnMtYnV0dG9uPlxuICogICA8b25zLWljb24gaWNvbj1cIm1kLWNhclwiPjwvb25zLWljb24+XG4gKiAgIENhclxuICogPC9vbnMtYnV0dG9uPlxuICovXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBJY29uRWxlbWVudCBleHRlbmRzIEJhc2VFbGVtZW50IHtcblxuICAvKipcbiAgICogQGF0dHJpYnV0ZSBpY29uXG4gICAqIEB0eXBlIHtTdHJpbmd9XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1cbiAgICogICAgIFRoZSBpY29uIG5hbWUuIGBcIm1kLVwiYCBwcmVmaXggZm9yIE1hdGVyaWFsIEljb25zLCBgXCJmYS1cImAgZm9yIEZvbnQgQXdlc29tZSBhbmQgYFwiaW9uLVwiYCBwcmVmaXggZm9yIElvbmljb25zLlxuICAgKlxuICAgKiAgICAgU2VlIGFsbCBhdmFpbGFibGUgaWNvbnMgb24gdGhlaXIgcmVzcGVjdGl2ZSBzaXRlczpcbiAgICpcbiAgICogICAgICogW0ZvbnQgQXdlc29tZV0oaHR0cHM6Ly9mb3J0YXdlc29tZS5naXRodWIuaW8vRm9udC1Bd2Vzb21lLylcbiAgICogICAgICogW0lvbmljb25zXShodHRwOi8vaW9uaWNvbnMuY29tKVxuICAgKiAgICAgKiBbTWF0ZXJpYWwgRGVzaWduIEljb25pYyBGb250XShodHRwOi8vemF2b2xva2xvbS5naXRodWIuaW8vbWF0ZXJpYWwtZGVzaWduLWljb25pYy1mb250LylcbiAgICpcbiAgICogICAgIEljb25zIGNhbiBhbHNvIGJlIHN0eWxlZCBiYXNlZCBvbiBtb2RpZmllciBwcmVzZW5jZS4gQWRkIGNvbW1hLXNlcGFyYXRlZCBpY29ucyB3aXRoIGBcIm1vZGlmaWVyTmFtZTpcImAgcHJlZml4LlxuICAgKlxuICAgKiAgICAgVGhlIGNvZGU6XG4gICAqXG4gICAqICAgICBgYGBcbiAgICogICAgIDxvbnMtaWNvblxuICAgKiAgICAgICBpY29uPVwiaW9uLWVkaXQsIG1hdGVyaWFsOm1kLWVkaXRcIj5cbiAgICogICAgIDwvb25zLWljb24+XG4gICAqICAgICBgYGBcbiAgICpcbiAgICogICAgIHdpbGwgZGlzcGxheSBgXCJtZC1lZGl0XCJgIGZvciBNYXRlcmlhbCBEZXNpZ24gYW5kIGBcImlvbi1lZGl0XCJgIGFzIHRoZSBkZWZhdWx0IGljb24uXG4gICAqICAgWy9lbl1cbiAgICogICBbamFdWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBhdHRyaWJ1dGUgc2l6ZVxuICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dXG4gICAqICAgICBUaGUgc2l6ZXMgb2YgdGhlIGljb24uIFZhbGlkIHZhbHVlcyBhcmUgbGcsIDJ4LCAzeCwgNHgsIDV4LCBvciBpbiB0aGUgc2l6ZSBpbiBwaXhlbHMuXG4gICAqICAgICBJY29ucyBjYW4gYWxzbyBiZSBzdHlsZWQgYmFzZWQgb24gbW9kaWZpZXIgcHJlc2VuY2UuIEFkZCBjb21tYS1zZXBhcmF0ZWQgaWNvbnMgd2l0aCBgXCJtb2RpZmllck5hbWU6XCJgIHByZWZpeC5cbiAgICpcbiAgICogICAgIFRoZSBjb2RlOlxuICAgKlxuICAgKiAgICAgYGBgXG4gICAqICAgICA8b25zLWljb25cbiAgICogICAgICAgaWNvbj1cImlvbi1lZGl0XCJcbiAgICogICAgICAgc2l6ZT1cIjMycHgsIG1hdGVyaWFsOjI0cHhcIj5cbiAgICogICAgIDwvb25zLWljb24+XG4gICAqICAgICBgYGBcbiAgICpcbiAgICogICAgIHdpbGwgcmVuZGVyIGFzIGEgYDI0cHhgIGljb24gaWYgdGhlIGBcIm1hdGVyaWFsXCJgIG1vZGlmaWVyIGlzIHByZXNlbnQgYW5kIGAzMnB4YCBvdGhlcndpc2UuXG4gICAqICAgWy9lbl1cbiAgICogICBbamFdWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBhdHRyaWJ1dGUgcm90YXRlXG4gICAqIEB0eXBlIHtOdW1iZXJ9XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1OdW1iZXIgb2YgZGVncmVlcyB0byByb3RhdGUgdGhlIGljb24uIFZhbGlkIHZhbHVlcyBhcmUgOTAsIDE4MCBhbmQgMjcwLlsvZW5dXG4gICAqICAgW2phXeOCouOCpOOCs+ODs+OCkuWbnui7ouOBl+OBpuihqOekuuOBl+OBvuOBmeOAgjkwLCAxODAsIDI3MOOBi+OCieaMh+WumuOBp+OBjeOBvuOBmeOAglsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAYXR0cmlidXRlIGZpeGVkLXdpZHRoXG4gICAqIEB0eXBlIHtCb29sZWFufVxuICAgKiBAZGVmYXVsdCBmYWxzZVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogIFtlbl1XaGVuIHVzZWQgaW4gYSBsaXN0LCB5b3Ugd2FudCB0aGUgaWNvbnMgdG8gaGF2ZSB0aGUgc2FtZSB3aWR0aCBzbyB0aGF0IHRoZXkgYWxpZ24gdmVydGljYWxseSBieSBkZWZpbmluZyB0aGlzIGF0dHJpYnV0ZS5bL2VuXVxuICAgKiAgW2phXVsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAYXR0cmlidXRlIHNwaW5cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXVNwZWNpZnkgd2hldGhlciB0aGUgaWNvbiBzaG91bGQgYmUgc3Bpbm5pbmcuWy9lbl1cbiAgICogICBbamFd44Ki44Kk44Kz44Oz44KS5Zue6Lui44GZ44KL44GL44Gp44GG44GL44KS5oyH5a6a44GX44G+44GZ44CCWy9qYV1cbiAgICovXG5cbiAgaW5pdCgpIHtcbiAgICB0aGlzLl9jb21waWxlKCk7XG4gIH1cblxuICBzdGF0aWMgZ2V0IG9ic2VydmVkQXR0cmlidXRlcygpIHtcbiAgICByZXR1cm4gWydpY29uJywgJ3NpemUnLCAnbW9kaWZpZXInXTtcbiAgfVxuXG4gIGF0dHJpYnV0ZUNoYW5nZWRDYWxsYmFjayhuYW1lLCBsYXN0LCBjdXJyZW50KSB7XG4gICAgaWYgKFsnaWNvbicsICdzaXplJywgJ21vZGlmaWVyJ10uaW5kZXhPZihuYW1lKSAhPT0gLTEpIHtcbiAgICAgIHRoaXMuX3VwZGF0ZSgpO1xuICAgIH1cbiAgfVxuXG4gIF9jb21waWxlKCkge1xuICAgIGF1dG9TdHlsZS5wcmVwYXJlKHRoaXMpO1xuICAgIHRoaXMuX3VwZGF0ZSgpO1xuICAgIHNldEltbWVkaWF0ZSgoKSA9PiB0aGlzLl91cGRhdGUoKSk7IC8vIEZpeCBmb3IgYmluZGluZ3NcbiAgfVxuXG4gIF91cGRhdGUoKSB7XG4gICAgdGhpcy5fY2xlYW5DbGFzc0F0dHJpYnV0ZSgpO1xuICAgIGNvbnN0IHtjbGFzc0xpc3QsIHN0eWxlfSA9IHRoaXMuX2J1aWxkQ2xhc3NBbmRTdHlsZSh0aGlzLl9nZXRBdHRyaWJ1dGUoJ2ljb24nKSwgdGhpcy5fZ2V0QXR0cmlidXRlKCdzaXplJykpO1xuICAgIHV0aWwuZXh0ZW5kKHRoaXMuc3R5bGUsIHN0eWxlKTtcblxuICAgIGNsYXNzTGlzdC5mb3JFYWNoKGNsYXNzTmFtZSA9PiB0aGlzLmNsYXNzTGlzdC5hZGQoY2xhc3NOYW1lKSk7XG4gIH1cblxuICBfZ2V0QXR0cmlidXRlKGF0dHIpIHtcbiAgICBjb25zdCBwYXJ0cyA9ICh0aGlzLmdldEF0dHJpYnV0ZShhdHRyKSB8fCAnJykuc3BsaXQoL1xccyosXFxzKi8pO1xuICAgIGNvbnN0IGRlZiA9IHBhcnRzWzBdO1xuICAgIGxldCBtZCA9IHBhcnRzWzFdO1xuICAgIG1kID0gKG1kIHx8ICcnKS5zcGxpdCgvXFxzKjpcXHMqLyk7XG4gICAgcmV0dXJuICh1dGlsLmhhc01vZGlmaWVyKHRoaXMsIG1kWzBdKSA/IG1kWzFdIDogZGVmKSB8fCAnJztcbiAgfVxuXG4gIC8qKlxuICAgKiBSZW1vdmUgdW5uZWVkZWQgY2xhc3MgdmFsdWUuXG4gICAqL1xuICBfY2xlYW5DbGFzc0F0dHJpYnV0ZSgpIHtcbiAgICB1dGlsLmFycmF5RnJvbSh0aGlzLmNsYXNzTGlzdClcbiAgICAgIC5maWx0ZXIoY2xhc3NOYW1lID0+IC9eKGZhJHxmYS18aW9uLXx6bWRpLSkvLnRlc3QoY2xhc3NOYW1lKSlcbiAgICAgIC5mb3JFYWNoKGNsYXNzTmFtZSA9PiB0aGlzLmNsYXNzTGlzdC5yZW1vdmUoY2xhc3NOYW1lKSk7XG5cbiAgICB0aGlzLmNsYXNzTGlzdC5yZW1vdmUoJ3ptZGknKTtcbiAgICB0aGlzLmNsYXNzTGlzdC5yZW1vdmUoJ29ucy1pY29uLS1pb24nKTtcbiAgfVxuXG4gIF9idWlsZENsYXNzQW5kU3R5bGUoaWNvbk5hbWUsIHNpemUpIHtcbiAgICBjb25zdCBjbGFzc0xpc3QgPSBbJ29ucy1pY29uJ107XG4gICAgY29uc3Qgc3R5bGUgPSB7fTtcblxuICAgIC8vIEljb25cbiAgICBpZiAoaWNvbk5hbWUuaW5kZXhPZignaW9uLScpID09PSAwKSB7XG4gICAgICBjbGFzc0xpc3QucHVzaChpY29uTmFtZSk7XG4gICAgICBjbGFzc0xpc3QucHVzaCgnb25zLWljb24tLWlvbicpO1xuICAgIH0gZWxzZSBpZiAoaWNvbk5hbWUuaW5kZXhPZignZmEtJykgPT09IDApIHtcbiAgICAgIGNsYXNzTGlzdC5wdXNoKGljb25OYW1lKTtcbiAgICAgIGNsYXNzTGlzdC5wdXNoKCdmYScpO1xuICAgIH0gZWxzZSBpZihpY29uTmFtZS5pbmRleE9mKCdtZC0nKSA9PT0gMCkgIHtcbiAgICAgIGNsYXNzTGlzdC5wdXNoKCd6bWRpJyk7XG4gICAgICBjbGFzc0xpc3QucHVzaCgnem1kaS0nICsgaWNvbk5hbWUuc3BsaXQoL1xcLSguKyk/LylbMV0pO1xuICAgIH0gZWxzZSB7XG4gICAgICBjbGFzc0xpc3QucHVzaCgnZmEnKTtcbiAgICAgIGNsYXNzTGlzdC5wdXNoKCdmYS0nICsgaWNvbk5hbWUpO1xuICAgIH1cblxuICAgIC8vIFNpemVcbiAgICBpZiAoc2l6ZS5tYXRjaCgvXlsxLTVdeHxsZyQvKSkge1xuICAgICAgY2xhc3NMaXN0LnB1c2goJ2ZhLScgKyBzaXplKTtcbiAgICAgIHRoaXMuc3R5bGUucmVtb3ZlUHJvcGVydHkoJ2ZvbnQtc2l6ZScpO1xuICAgIH0gZWxzZSB7XG4gICAgICBzdHlsZS5mb250U2l6ZSA9IHNpemU7XG4gICAgfVxuXG4gICAgcmV0dXJuIHtcbiAgICAgIGNsYXNzTGlzdDogY2xhc3NMaXN0LFxuICAgICAgc3R5bGU6IHN0eWxlXG4gICAgfTtcbiAgfVxufVxuXG5jdXN0b21FbGVtZW50cy5kZWZpbmUoJ29ucy1pY29uJywgSWNvbkVsZW1lbnQpO1xuIiwiLypcbkNvcHlyaWdodCAyMDEzLTIwMTUgQVNJQUwgQ09SUE9SQVRJT05cbkxpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG55b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG5Zb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG5TZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG5saW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiovXG5cbmltcG9ydCBCYXNlRWxlbWVudCBmcm9tICcuLi9vbnMvYmFzZS1lbGVtZW50JztcbmltcG9ydCB1dGlsIGZyb20gJy4uL29ucy91dGlsJztcbmltcG9ydCB7TGF6eVJlcGVhdERlbGVnYXRlLCBMYXp5UmVwZWF0UHJvdmlkZXJ9IGZyb20gJy4uL29ucy9pbnRlcm5hbC9sYXp5LXJlcGVhdCc7XG5cbi8qKlxuICogQGVsZW1lbnQgb25zLWxhenktcmVwZWF0XG4gKiBAY2F0ZWdvcnkgbGlzdFxuICogQGRlc2NyaXB0aW9uXG4gKiAgIFtlbl1cbiAqICAgICBVc2luZyB0aGlzIGNvbXBvbmVudCBhIGxpc3Qgd2l0aCBtaWxsaW9ucyBvZiBpdGVtcyBjYW4gYmUgcmVuZGVyZWQgd2l0aG91dCBhIGRyb3AgaW4gcGVyZm9ybWFuY2UuXG4gKiAgICAgSXQgZG9lcyB0aGF0IGJ5IFwibGF6aWx5XCIgbG9hZGluZyBlbGVtZW50cyBpbnRvIHRoZSBET00gd2hlbiB0aGV5IGNvbWUgaW50byB2aWV3IGFuZFxuICogICAgIHJlbW92aW5nIGl0ZW1zIGZyb20gdGhlIERPTSB3aGVuIHRoZXkgYXJlIG5vdCB2aXNpYmxlLlxuICogICBbL2VuXVxuICogICBbamFdXG4gKiAgICAg44GT44Gu44Kz44Oz44Od44O844ON44Oz44OI5YaF44Gn5o+P55S744GV44KM44KL44Ki44Kk44OG44Og44GuRE9N6KaB57Sg44Gu6Kqt44G/6L6844G/44Gv44CB55S76Z2i44Gr6KaL44GI44Gd44GG44Gr44Gq44Gj44Gf5pmC44G+44Gn6Ieq5YuV55qE44Gr6YGF5bu244GV44KM44CBXG4gKiAgICAg55S76Z2i44GL44KJ6KaL44GI44Gq44GP44Gq44Gj44Gf5aC05ZCI44Gr44Gv44Gd44Gu6KaB57Sg44Gv5YuV55qE44Gr44Ki44Oz44Ot44O844OJ44GV44KM44G+44GZ44CCXG4gKiAgICAg44GT44Gu44Kz44Oz44Od44O844ON44Oz44OI44KS5L2/44GG44GT44Go44Gn44CB44OR44OV44Kp44O844Oe44Oz44K544KS5Yqj5YyW44GV44Gb44KL44GT44Go54Sh44GX44Gr5beo5aSn44Gq5pWw44Gu6KaB57Sg44KS5o+P55S744Gn44GN44G+44GZ44CCXG4gKiAgIFsvamFdXG4gKiBAY29kZXBlbiBRd3JHQm1cbiAqIEB0dXRvcmlhbCB2YW5pbGxhL1JlZmVyZW5jZS9sYXp5LXJlcGVhdFxuICogQHNlZWFsc28gb25zLWxpc3RcbiAqICAgW2VuXVRoZSBgPG9ucy1saXN0PmAgZWxlbWVudCBpcyB1c2VkIHRvIHJlbmRlciBhIGxpc3QuWy9lbl1cbiAqICAgW2phXWA8b25zLWxpc3Q+YOimgee0oOOBr+ODquOCueODiOOCkuaPj+eUu+OBmeOCi+OBruOBq+S9v+OCj+OCjOOBvuOBmeOAglsvamFdXG4gKiBAZ3VpZGUgaW5maW5pdGUtc2Nyb2xsXG4gKiAgIFtlbl1Mb2FkaW5nIG1vcmUgaXRlbXMgb24gaW5maW5pdGUgc2Nyb2xsWy9lbl1cbiAqICAgW2phXUxvYWRpbmcgbW9yZSBpdGVtcyBvbiBpbmZpbml0ZSBzY3JvbGxbL2phXVxuICogQGV4YW1wbGVcbiAqIDxzY3JpcHQ+XG4gKiAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdsb2FkJywgZnVuY3Rpb24oKSB7XG4gKiAgICAgdmFyIGxhenlSZXBlYXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjbGlzdCcpO1xuICogICAgIGxhenlSZXBlYXQuZGVsZWdhdGUgPSB7XG4gKiAgICAgIGNyZWF0ZUl0ZW1Db250ZW50OiBmdW5jdGlvbihpLCB0ZW1wbGF0ZSkge1xuICogICAgICAgIHZhciBkb20gPSB0ZW1wbGF0ZS5jbG9uZU5vZGUodHJ1ZSk7XG4gKiAgICAgICAgZG9tLmlubmVyVGV4dCA9IGk7XG4gKlxuICogICAgICAgIHJldHVybiBkb207XG4gKiAgICAgIH0sXG4gKiAgICAgIGNvdW50SXRlbXM6IGZ1bmN0aW9uKCkge1xuICogICAgICAgIHJldHVybiAxMDAwMDAwMDtcbiAqICAgICAgfSxcbiAqICAgICAgZGVzdHJveUl0ZW06IGZ1bmN0aW9uKGluZGV4LCBpdGVtKSB7XG4gKiAgICAgICAgY29uc29sZS5sb2coJ0Rlc3Ryb3llZCBpdGVtIHdpdGggaW5kZXg6ICcgKyBpbmRleCk7XG4gKiAgICAgIH1cbiAqICAgICB9O1xuICogICB9KTtcbiAqIDwvc2NyaXB0PlxuICpcbiAqIDxvbnMtbGlzdCBpZD1cImxpc3RcIj5cbiAqICAgPG9ucy1sYXp5LXJlcGVhdD5cbiAqICAgICA8b25zLWxpc3QtaXRlbT48L29ucy1saXN0LWl0ZW0+XG4gKiAgIDwvb25zLWxhenktcmVwZWF0PlxuICogPC9vbnMtbGlzdD5cbiAqL1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTGF6eVJlcGVhdEVsZW1lbnQgZXh0ZW5kcyBCYXNlRWxlbWVudCB7XG5cbiAgY29ubmVjdGVkQ2FsbGJhY2soKSB7XG4gICAgLy8gbm90IHZlcnkgZ29vZCBpZGVhIGFuZCBhbHNvIG5vdCBkb2N1bWVudGVkXG4gICAgaWYgKHRoaXMuaGFzQXR0cmlidXRlKCdkZWxlZ2F0ZScpKSB7XG4gICAgICB0aGlzLmRlbGVnYXRlID0gd2luZG93W3RoaXMuZ2V0QXR0cmlidXRlKCdkZWxlZ2F0ZScpXTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogQHByb3BlcnR5IGRlbGVnYXRlXG4gICAqIEB0eXBlIHtPYmplY3R9XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgW2VuXVNwZWNpZnkgYSBkZWxlZ2F0ZSBvYmplY3QgdG8gbG9hZCBhbmQgdW5sb2FkIGl0ZW0gZWxlbWVudHMuWy9lbl1cbiAgICogIFtqYV3opoHntKDjga7jg63jg7zjg4njgIHjgqLjg7Pjg63jg7zjg4njgarjganjga7lh6bnkIbjgpLlp5TorbLjgZnjgovjgqrjg5bjgrjjgqfjgq/jg4jjgpLmjIflrprjgZfjgb7jgZnjgIJbL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQHByb3BlcnR5IGRlbGVnYXRlLmNyZWF0ZUl0ZW1Db250ZW50XG4gICAqIEB0eXBlIHtGdW5jdGlvbn1cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXVxuICAgKiAgICAgVGhpcyBmdW5jdGlvbiBzaG91bGQgcmV0dXJuIGEgYEhUTUxFbGVtZW50YC5cbiAgICpcbiAgICogICAgIFRvIGhlbHAgcmVuZGVyaW5nIHRoZSBlbGVtZW50LCB0aGUgY3VycmVudCBpbmRleCBhbmQgYSB0ZW1wbGF0ZSBpcyBzdXBwbGllZCBhcyBhcmd1bWVudHMuIFRoZSB0ZW1wbGF0ZSBpcyB0aGUgaW5pdGlhbCBjb250ZW50IG9mIHRoZSBgPG9ucy1sYXp5LXJlcGVhdD5gIGVsZW1lbnQuXG4gICAqICAgWy9lbl1cbiAgICogICBbamFdXG4gICAqICAgICDjgZPjga7plqLmlbDjga9gSFRNTEVsZW1lbnRg44KS6L+U44GX44Gm44GP44Gg44GV44GE44CCXG4gICAqICAgICDopoHntKDjgpLnlJ/miJDjgZfjgoTjgZnjgY/jgZnjgovjgZ/jgoHjgavjgIHnj77lnKjjga7jgqLjgqTjg4bjg6Djga7jgqTjg7Pjg4fjg4Pjgq/jgrnjgajjg4bjg7Pjg5fjg6zjg7zjg4jjgYzlvJXmlbDjgavmuKHjgZXjgozjgb7jgZnjgIJcbiAgICogICAgIOOBk+OBruODhuODs+ODl+ODrOODvOODiOOBr+OAgWA8b25zLWxhenktcmVwZWF0PmDopoHntKDjga7jgrPjg7Pjg4bjg7Pjg4TjgYzmuKHjgZXjgozjgb7jgZnjgIJcbiAgICogICBbL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQHByb3BlcnR5IGRlbGVnYXRlLmNvdW50SXRlbXNcbiAgICogQHR5cGUge0Z1bmN0aW9ufVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dU2hvdWxkIHJldHVybiB0aGUgbnVtYmVyIG9mIGl0ZW1zIGluIHRoZSBsaXN0LlsvZW5dXG4gICAqICAgW2phXeODquOCueODiOWGheOBruOCouOCpOODhuODoOaVsOOCkui/lOOBl+OBpuOBj+OBoOOBleOBhOOAglsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAcHJvcGVydHkgZGVsZWdhdGUuY2FsY3VsYXRlSXRlbUhlaWdodFxuICAgKiBAdHlwZSB7RnVuY3Rpb259XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1cbiAgICogICAgIFNob3VsZCByZXR1cm4gdGhlIGhlaWdodCBvZiBhbiBpdGVtLiBUaGUgaW5kZXggaXMgcHJvdmlkZWQgYXMgYW4gYXJndW1lbnQuXG4gICAqXG4gICAqICAgICBUaGlzIGlzIGltcG9ydGFudCB3aGVuIHJlbmRlcmluZyBsaXN0cyB3aGVyZSB0aGUgaXRlbXMgaGF2ZSBkaWZmZXJlbnQgaGVpZ2h0LlxuICAgKlxuICAgKiAgICAgVGhlIGZ1bmN0aW9uIGlzIG9wdGlvbmFsIGFuZCBpZiBpdCBpc24ndCBwcmVzZW50IHRoZSBoZWlnaHQgb2YgdGhlIGZpcnN0IGl0ZW0gd2lsbCBiZSBhdXRvbWF0aWNhbGx5IGNhbGN1bGF0ZWQgYW5kIHVzZWQgZm9yIGFsbCBvdGhlciBpdGVtcy5cbiAgICogICBbL2VuXVxuICAgKiAgIFtqYV1cbiAgICogICAgIOOCouOCpOODhuODoOOBrumrmOOBlSjjg5Tjgq/jgrvjg6sp44KS6L+U44GX44Gm44GP44Gg44GV44GE44CC44Ki44Kk44OG44Og44Gu44Kk44Oz44OH44OD44Kv44K55YCk44Gv5byV5pWw44Gn5rih44GV44KM44G+44GZ44CCXG4gICAqICAgICDjgZPjga7plqLmlbDjga/jgIHjgZ3jgozjgZ7jgozjga7jgqLjgqTjg6DjgYzpgZXjgaPjgZ/pq5jjgZXjgpLmjIHjgaTjg6rjgrnjg4jjgpLjg6zjg7Pjg4Djg6rjg7PjgrDjgZnjgovpmpvjgavph43opoHjgafjgZnjgIJcbiAgICogICAgIOOBk+OBrumWouaVsOOBr+OCquODl+OCt+ODp+ODiuODq+OBp+OBmeOAguOCguOBl+OBk+OBrumWouaVsOOBjOeEoeOBhOWgtOWQiOOBq+OBr+OAgVxuICAgKiAgICAg5pyA5Yid44Gu44Ki44Kk44OG44Og44Gu6auY44GV44GM5LuW44Gu44GZ44G544Gm44Gu44Ki44Kk44OG44Og44Gu6auY44GV44Go44GX44Gm5Yip55So44GV44KM44G+44GZ44CCXG4gICAqICAgWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBwcm9wZXJ0eSBkZWxlZ2F0ZS5kZXN0cm95SXRlbVxuICAgKiBAdHlwZSB7RnVuY3Rpb259XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1cbiAgICogICAgIFRoaXMgZnVuY3Rpb24gaXMgdXNlZCBjYWxsZWQgd2hlbiBhbiBpdGVtIGlzIHJlbW92ZWQgZnJvbSB0aGUgRE9NLiBUaGUgaW5kZXggYW5kIERPTSBlbGVtZW50IGlzIHByb3ZpZGVkIGFzIGFyZ3VtZW50cy5cbiAgICpcbiAgICogICAgIFRoZSBmdW5jdGlvbiBpcyBvcHRpb25hbCBidXQgbWF5IGJlIGltcG9ydGFudCBpbiBvcmRlciB0byBhdm9pZCBtZW1vcnkgbGVha3MuXG4gICAqICAgWy9lbl1cbiAgICogICBbamFdXG4gICAqICAgICDjgZPjga7plqLmlbDjga/jgIHjgYLjgovjgqLjgqTjg4bjg6DjgYxET03jg4Tjg6rjg7zjgYvjgonpmaTjgYvjgozjgZ/mmYLjgavlkbzjgbPlh7rjgZXjgozjgb7jgZnjgIJcbiAgICogICAgIOOCouOCpOODhuODoOOBruOCpOODs+ODh+ODg+OCr+OCueWApOOBqERPTeimgee0oOOBjOW8leaVsOOBqOOBl+OBpua4oeOBleOCjOOBvuOBmeOAglxuICAgKiAgICAg44GT44Gu6Zai5pWw44Gv44Kq44OX44K344On44OK44Or44Gn44GZ44GM44CB5ZCE44Ki44Kk44OG44Og44Gu5b6M5Yem55CG44GM5b+F6KaB44Gq5aC05ZCI44Gr44Gv44Oh44Oi44Oq44O844Oq44O844Kv44KS6YG/44GR44KL44Gf44KB44Gr6YeN6KaB44Gn44GZ44CCXG4gICAqICAgWy9qYV1cbiAgICovXG5cbiAgc2V0IGRlbGVnYXRlKHVzZXJEZWxlZ2F0ZSkge1xuICAgIHRoaXMuX2xhenlSZXBlYXRQcm92aWRlciAmJiB0aGlzLl9sYXp5UmVwZWF0UHJvdmlkZXIuZGVzdHJveSgpO1xuXG4gICAgaWYgKCF0aGlzLl90ZW1wbGF0ZUVsZW1lbnQgJiYgdGhpcy5jaGlsZHJlblswXSkge1xuICAgICAgdGhpcy5fdGVtcGxhdGVFbGVtZW50ID0gdGhpcy5yZW1vdmVDaGlsZCh0aGlzLmNoaWxkcmVuWzBdKTtcbiAgICB9XG5cbiAgICBjb25zdCBkZWxlZ2F0ZSA9IG5ldyBMYXp5UmVwZWF0RGVsZWdhdGUodXNlckRlbGVnYXRlLCB0aGlzLl90ZW1wbGF0ZUVsZW1lbnQgfHwgbnVsbCk7XG4gICAgdGhpcy5fbGF6eVJlcGVhdFByb3ZpZGVyID0gbmV3IExhenlSZXBlYXRQcm92aWRlcih0aGlzLnBhcmVudEVsZW1lbnQsIGRlbGVnYXRlKTtcbiAgfVxuXG4gIGdldCBkZWxlZ2F0ZSgpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ1RoaXMgcHJvcGVydHkgY2FuIG9ubHkgYmUgdXNlZCB0byBzZXQgdGhlIGRlbGVnYXRlIG9iamVjdC4nKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAbWV0aG9kIHJlZnJlc2hcbiAgICogQHNpZ25hdHVyZSByZWZyZXNoKClcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXVJlZnJlc2ggdGhlIGxpc3QuIFVzZSB0aGlzIG1ldGhvZCB3aGVuIHRoZSBkYXRhIGhhcyBjaGFuZ2VkLlsvZW5dXG4gICAqICAgW2phXeODquOCueODiOOCkuabtOaWsOOBl+OBvuOBmeOAguOCguOBl+ODh+ODvOOCv+OBjOWkieOCj+OBo+OBn+WgtOWQiOOBq+OBr+OBk+OBruODoeOCveODg+ODieOCkuS9v+OBo+OBpuOBj+OBoOOBleOBhOOAglsvamFdXG4gICAqL1xuICByZWZyZXNoKCkge1xuICAgIHRoaXMuX2xhenlSZXBlYXRQcm92aWRlciAmJiB0aGlzLl9sYXp5UmVwZWF0UHJvdmlkZXIucmVmcmVzaCgpO1xuICB9XG5cbiAgYXR0cmlidXRlQ2hhbmdlZENhbGxiYWNrKG5hbWUsIGxhc3QsIGN1cnJlbnQpIHt9XG5cbiAgZGlzY29ubmVjdGVkQ2FsbGJhY2soKSB7XG4gICAgaWYgKHRoaXMuX2xhenlSZXBlYXRQcm92aWRlcikge1xuICAgICAgdGhpcy5fbGF6eVJlcGVhdFByb3ZpZGVyLmRlc3Ryb3koKTtcbiAgICAgIHRoaXMuX2xhenlSZXBlYXRQcm92aWRlciA9IG51bGw7XG4gICAgfVxuICB9XG5cbn1cblxuY3VzdG9tRWxlbWVudHMuZGVmaW5lKCdvbnMtbGF6eS1yZXBlYXQnLCBMYXp5UmVwZWF0RWxlbWVudCk7XG4iLCIvKlxuQ29weXJpZ2h0IDIwMTMtMjAxNSBBU0lBTCBDT1JQT1JBVElPTlxuXG5MaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xueW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG5cbiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuXG5Vbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG5kaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG5XSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cblNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbmxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuXG4qL1xuXG5pbXBvcnQgdXRpbCBmcm9tICcuLi9vbnMvdXRpbCc7XG5pbXBvcnQgYXV0b1N0eWxlIGZyb20gJy4uL29ucy9hdXRvc3R5bGUnO1xuaW1wb3J0IE1vZGlmaWVyVXRpbCBmcm9tICcuLi9vbnMvaW50ZXJuYWwvbW9kaWZpZXItdXRpbCc7XG5pbXBvcnQgQmFzZUVsZW1lbnQgZnJvbSAnLi4vb25zL2Jhc2UtZWxlbWVudCc7XG5cbmNvbnN0IGRlZmF1bHRDbGFzc05hbWUgPSAnbGlzdC1oZWFkZXInO1xuY29uc3Qgc2NoZW1lID0geycnOiAnbGlzdC1oZWFkZXItLSonfTtcblxuLyoqXG4gKiBAZWxlbWVudCBvbnMtbGlzdC1oZWFkZXJcbiAqIEBjYXRlZ29yeSBsaXN0XG4gKiBAZGVzY3JpcHRpb25cbiAqICAgW2VuXUhlYWRlciBlbGVtZW50IGZvciBsaXN0IGl0ZW1zLiBNdXN0IGJlIHB1dCBpbnNpZGUgdGhlIGA8b25zLWxpc3Q+YCBjb21wb25lbnQuWy9lbl1cbiAqICAgW2phXeODquOCueODiOimgee0oOOBq+S9v+eUqOOBmeOCi+ODmOODg+ODgOODvOeUqOOCs+ODs+ODneODvOODjeODs+ODiOOAgm9ucy1saXN044Go5YWx44Gr5L2/55So44GX44G+44GZ44CCWy9qYV1cbiAqIEBzZWVhbHNvIG9ucy1saXN0XG4gKiAgIFtlbl1UaGUgYDxvbnMtbGlzdD5gIGNvbXBvbmVudFsvZW5dXG4gKiAgIFtqYV1vbnMtbGlzdOOCs+ODs+ODneODvOODjeODs+ODiFsvamFdXG4gKiBAc2VlYWxzbyBvbnMtbGlzdC1pdGVtXG4gKiAgIFtlbl1UaGUgYDxvbnMtbGlzdC1pdGVtPmAgY29tcG9uZW50Wy9lbl1cbiAqICAgW2phXW9ucy1saXN0LWl0ZW3jgrPjg7Pjg53jg7zjg43jg7Pjg4hbL2phXVxuICogQGd1aWRlIGxpc3RzIFtlbl1Vc2luZyBsaXN0c1svZW5dW2phXeODquOCueODiOOCkuS9v+OBhlsvamFdXG4gKiBAY29kZXBlbiB5eGNDdFxuICogQHR1dG9yaWFsIHZhbmlsbGEvUmVmZXJlbmNlL2xpc3RcbiAqIEBtb2RpZmllciBtYXRlcmlhbFxuICogICBbZW5dRGlzcGxheSBhIE1hdGVyaWFsIERlc2lnbiBsaXN0IGhlYWRlci5bL2VuXVxuICogICBbamFdWy9qYV1cbiAqIEBleGFtcGxlXG4gKiA8b25zLWxpc3Q+XG4gKiAgIDxvbnMtbGlzdC1oZWFkZXI+SGVhZGVyIFRleHQ8L29ucy1saXN0LWhlYWRlcj5cbiAqICAgPG9ucy1saXN0LWl0ZW0+SXRlbTwvb25zLWxpc3QtaXRlbT5cbiAqICAgPG9ucy1saXN0LWl0ZW0+SXRlbTwvb25zLWxpc3QtaXRlbT5cbiAqIDwvb25zLWxpc3Q+XG4gKi9cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIExpc3RIZWFkZXJFbGVtZW50IGV4dGVuZHMgQmFzZUVsZW1lbnQge1xuXG4gIC8qKlxuICAgKiBAYXR0cmlidXRlIG1vZGlmaWVyXG4gICAqIEB0eXBlIHtTdHJpbmd9XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1UaGUgYXBwZWFyYW5jZSBvZiB0aGUgbGlzdCBoZWFkZXIuWy9lbl1cbiAgICogICBbamFd44OY44OD44OA44O844Gu6KGo54++44KS5oyH5a6a44GX44G+44GZ44CCWy9qYV1cbiAgICovXG5cbiAgaW5pdCgpIHtcbiAgICB0aGlzLl9jb21waWxlKCk7XG4gIH1cblxuICBfY29tcGlsZSgpIHtcbiAgICBhdXRvU3R5bGUucHJlcGFyZSh0aGlzKTtcbiAgICB0aGlzLmNsYXNzTGlzdC5hZGQoZGVmYXVsdENsYXNzTmFtZSk7XG4gICAgTW9kaWZpZXJVdGlsLmluaXRNb2RpZmllcih0aGlzLCBzY2hlbWUpO1xuICB9XG5cbiAgc3RhdGljIGdldCBvYnNlcnZlZEF0dHJpYnV0ZXMoKSB7XG4gICAgcmV0dXJuIFsnbW9kaWZpZXInLCAnY2xhc3MnXTtcbiAgfVxuXG4gIGF0dHJpYnV0ZUNoYW5nZWRDYWxsYmFjayhuYW1lLCBsYXN0LCBjdXJyZW50KSB7XG4gICAgc3dpdGNoIChuYW1lKSB7XG4gICAgICBjYXNlICdjbGFzcyc6XG4gICAgICAgIGlmICghdGhpcy5jbGFzc0xpc3QuY29udGFpbnMoZGVmYXVsdENsYXNzTmFtZSkpIHtcbiAgICAgICAgICB0aGlzLmNsYXNzTmFtZSA9IGRlZmF1bHRDbGFzc05hbWUgKyAnICcgKyBjdXJyZW50O1xuICAgICAgICB9XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnbW9kaWZpZXInOlxuICAgICAgICBNb2RpZmllclV0aWwub25Nb2RpZmllckNoYW5nZWQobGFzdCwgY3VycmVudCwgdGhpcywgc2NoZW1lKTtcbiAgICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG59XG5cbmN1c3RvbUVsZW1lbnRzLmRlZmluZSgnb25zLWxpc3QtaGVhZGVyJywgTGlzdEhlYWRlckVsZW1lbnQpO1xuIiwiLypcbkNvcHlyaWdodCAyMDEzLTIwMTUgQVNJQUwgQ09SUE9SQVRJT05cblxuTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbnlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbllvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuXG4gICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcblxuVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG5TZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG5saW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cblxuKi9cblxuaW1wb3J0IHV0aWwgZnJvbSAnLi4vb25zL3V0aWwnO1xuaW1wb3J0IGF1dG9TdHlsZSBmcm9tICcuLi9vbnMvYXV0b3N0eWxlJztcbmltcG9ydCBNb2RpZmllclV0aWwgZnJvbSAnLi4vb25zL2ludGVybmFsL21vZGlmaWVyLXV0aWwnO1xuaW1wb3J0IEJhc2VFbGVtZW50IGZyb20gJy4uL29ucy9iYXNlLWVsZW1lbnQnO1xuaW1wb3J0IGNvbnRlbnRSZWFkeSBmcm9tICcuLi9vbnMvY29udGVudC1yZWFkeSc7XG5cbmNvbnN0IGRlZmF1bHRDbGFzc05hbWUgPSAnbGlzdC1pdGVtJztcbmNvbnN0IHNjaGVtZSA9IHtcbiAgJy5saXN0LWl0ZW0nOiAnbGlzdC1pdGVtLS0qJyxcbiAgJy5saXN0LWl0ZW1fX2xlZnQnOiAnbGlzdC1pdGVtLS0qX19sZWZ0JyxcbiAgJy5saXN0LWl0ZW1fX2NlbnRlcic6ICdsaXN0LWl0ZW0tLSpfX2NlbnRlcicsXG4gICcubGlzdC1pdGVtX19yaWdodCc6ICdsaXN0LWl0ZW0tLSpfX3JpZ2h0JyxcbiAgJy5saXN0LWl0ZW1fX2xhYmVsJzogJ2xpc3QtaXRlbS0tKl9fbGFiZWwnLFxuICAnLmxpc3QtaXRlbV9fdGl0bGUnOiAnbGlzdC1pdGVtLS0qX190aXRsZScsXG4gICcubGlzdC1pdGVtX19zdWJ0aXRsZSc6ICdsaXN0LWl0ZW0tLSpfX3N1YnRpdGxlJyxcbiAgJy5saXN0LWl0ZW1fX3RodW1ibmFpbCc6ICdsaXN0LWl0ZW0tLSpfX3RodW1ibmFpbCcsXG4gICcubGlzdC1pdGVtX19pY29uJzogJ2xpc3QtaXRlbS0tKl9faWNvbidcbn07XG5cbi8qKlxuICogQGVsZW1lbnQgb25zLWxpc3QtaXRlbVxuICogQGNhdGVnb3J5IGxpc3RcbiAqIEBtb2RpZmllciB0YXBwYWJsZVxuICogICBbZW5dTWFrZSB0aGUgbGlzdCBpdGVtIGNoYW5nZSBhcHBlYXJhbmNlIHdoZW4gaXQncyB0YXBwZWQuIE9uIGlPUyBpdCBpcyBiZXR0ZXIgdG8gdXNlIHRoZSBcInRhcHBhYmxlXCIgYW5kIFwidGFwLWJhY2tncm91bmQtY29sb3JcIiBhdHRyaWJ1dGUgZm9yIGJldHRlciBiZWhhdmlvciB3aGVuIHNjcm9sbGluZy5bL2VuXVxuICogICBbamFd44K/44OD44OX44KE44Kv44Oq44OD44Kv44GX44Gf5pmC44Gr5Yq55p6c44GM6KGo56S644GV44KM44KL44KI44GG44Gr44Gq44KK44G+44GZ44CCWy9qYV1cbiAqIEBtb2RpZmllciBjaGV2cm9uXG4gKiAgIFtlbl1EaXNwbGF5IGEgY2hldnJvbiBhdCB0aGUgcmlnaHQgZW5kIG9mIHRoZSBsaXN0IGl0ZW0gYW5kIG1ha2UgaXQgY2hhbmdlIGFwcGVhcmFuY2Ugd2hlbiB0YXBwZWQuIFRoZSBjaGV2cm9uIGlzIG5vdCBkaXNwbGF5ZWQgaW4gTWF0ZXJpYWwgRGVzaWduLlsvZW5dXG4gKiAgIFtqYV1bL2phXVxuICogQG1vZGlmaWVyIGxvbmdkaXZpZGVyXG4gKiAgIFtlbl1EaXNwbGF5cyBhIGxvbmcgaG9yaXpvbnRhbCBkaXZpZGVyIGJldHdlZW4gaXRlbXMuWy9lbl1cbiAqICAgW2phXVsvamFdXG4gKiBAbW9kaWZpZXIgbm9kaXZpZGVyXG4gKiAgIFtlbl1SZW1vdmVzIHRoZSBkaXZpZGVyIGJldHdlZW4gbGlzdCBpdGVtcy5bL2VuXVxuICogICBbamFdWy9qYV1cbiAqIEBtb2RpZmllciBtYXRlcmlhbFxuICogICBbZW5dRGlzcGxheSBhIE1hdGVyaWFsIERlc2lnbiBsaXN0IGl0ZW0uWy9lbl1cbiAqICAgW2phXVsvamFdXG4gKiBAZGVzY3JpcHRpb25cbiAqICAgW2VuXVxuICogICAgIENvbXBvbmVudCB0aGF0IHJlcHJlc2VudHMgZWFjaCBpdGVtIGluIHRoZSBsaXN0LiBNdXN0IGJlIHB1dCBpbnNpZGUgdGhlIGA8b25zLWxpc3Q+YCBjb21wb25lbnQuXG4gKlxuICogICAgIFRoZSBsaXN0IGl0ZW0gaXMgY29tcG9zZWQgb2YgdGhyZWUgcGFydHMgdGhhdCBhcmUgcmVwcmVzZW50ZWQgd2l0aCB0aGUgYGxlZnRgLCBgY2VudGVyYCBhbmQgYHJpZ2h0YCBjbGFzc2VzLiBUaGVzZSBjbGFzc2VzIGNhbiBiZSB1c2VkIHRvIGVuc3VyZSB0aGF0IHRoZSBjb250ZW50IG9mIHRoZSBsaXN0IGl0ZW1zIGlzIHByb3Blcmx5IGFsaWduZWQuXG4gKlxuICogICAgIGBgYFxuICogICAgIDxvbnMtbGlzdC1pdGVtPlxuICogICAgICAgPGRpdiBjbGFzcz1cImxlZnRcIj5MZWZ0PC9kaXY+XG4gKiAgICAgICA8ZGl2IGNsYXNzPVwiY2VudGVyXCI+Q2VudGVyPC9kaXY+XG4gKiAgICAgICA8ZGl2IGNsYXNzPVwicmlnaHRcIj5SaWdodDwvZGl2PlxuICogICAgIDwvb25zLWxpc3QtaXRlbT5cbiAqICAgICBgYGBcbiAqXG4gKiAgICAgVGhlcmUgaXMgYWxzbyBhIG51bWJlciBvZiBjbGFzc2VzIChwcmVmaXhlZCB3aXRoIGBsaXN0LWl0ZW1fXypgKSB0aGF0IGhlbHAgd2hlbiBwdXR0aW5nIHRoaW5ncyBsaWtlIGljb25zIGFuZCB0aHVtYm5haWxzIGludG8gdGhlIGxpc3QgaXRlbXMuXG4gKiAgIFsvZW5dXG4gKiAgIFtqYV1bL2phXVxuICogQHNlZWFsc28gb25zLWxpc3RcbiAqICAgW2VuXW9ucy1saXN0IGNvbXBvbmVudFsvZW5dXG4gKiAgIFtqYV1vbnMtbGlzdOOCs+ODs+ODneODvOODjeODs+ODiFsvamFdXG4gKiBAc2VlYWxzbyBvbnMtbGlzdC1oZWFkZXJcbiAqICAgW2VuXW9ucy1saXN0LWhlYWRlciBjb21wb25lbnRbL2VuXVxuICogICBbamFdb25zLWxpc3QtaGVhZGVy44Kz44Oz44Od44O844ON44Oz44OIWy9qYV1cbiAqIEBndWlkZSBsaXN0c1xuICogICBbZW5dVXNpbmcgbGlzdHNbL2VuXVxuICogICBbamFd44Oq44K544OI44KS5L2/44GGWy9qYV1cbiAqIEBjb2RlcGVuIHl4Y0N0XG4gKiBAdHV0b3JpYWwgdmFuaWxsYS9SZWZlcmVuY2UvbGlzdFxuICogQGV4YW1wbGVcbiAqIDxvbnMtbGlzdC1pdGVtPlxuICogICA8ZGl2IGNsYXNzPVwibGVmdFwiPlxuICogICAgIDxvbnMtaWNvbiBpY29uPVwibWQtZmFjZVwiIGNsYXNzPVwibGlzdC1pdGVtX19pY29uXCI+PC9vbnMtaWNvbj5cbiAqICAgPC9kaXY+XG4gKiAgIDxkaXYgY2xhc3M9XCJjZW50ZXJcIj5cbiAqICAgICA8ZGl2IGNsYXNzPVwibGlzdC1pdGVtX190aXRsZVwiPlRpdGxlPC9kaXY+XG4gKiAgICAgPGRpdiBjbGFzcz1cImxpc3QtaXRlbV9fc3VidGl0bGVcIj5TdWJ0aXRsZTwvZGl2PlxuICogICA8L2Rpdj5cbiAqICAgPGRpdiBjbGFzcz1cInJpZ2h0XCI+XG4gKiAgICAgPG9ucy1zd2l0Y2g+PC9vbnMtc3dpdGNoPlxuICogICA8L2Rpdj5cbiAqIDwvb25zLWxpc3QtaXRlbT5cbiAqL1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTGlzdEl0ZW1FbGVtZW50IGV4dGVuZHMgQmFzZUVsZW1lbnQge1xuXG4gIC8qKlxuICAgKiBAYXR0cmlidXRlIG1vZGlmaWVyXG4gICAqIEB0eXBlIHtTdHJpbmd9XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1UaGUgYXBwZWFyYW5jZSBvZiB0aGUgbGlzdCBpdGVtLlsvZW5dXG4gICAqICAgW2phXeWQhOimgee0oOOBruihqOePvuOCkuaMh+WumuOBl+OBvuOBmeOAglsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAYXR0cmlidXRlIGxvY2stb24tZHJhZ1xuICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dUHJldmVudCB2ZXJ0aWNhbCBzY3JvbGxpbmcgd2hlbiB0aGUgdXNlciBkcmFncyBob3Jpem9udGFsbHkuWy9lbl1cbiAgICogICBbamFd44GT44Gu5bGe5oCn44GM44GC44KL44Go44CB44Om44O844K244O844GM44GT44Gu6KaB57Sg44KS5qiq5pa55ZCR44Gr44OJ44Op44OD44Kw44GX44Gm44GE44KL5pmC44Gr44CB57im5pa55ZCR44Gu44K544Kv44Ot44O844Or44GM6LW344GN44Gq44GE44KI44GG44Gr44Gq44KK44G+44GZ44CCWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBhdHRyaWJ1dGUgdGFwcGFibGVcbiAgICogQHR5cGUge0Jvb2xlYW59XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1NYWtlcyB0aGUgZWxlbWVudCByZWFjdCB0byB0YXBzLlsvZW5dXG4gICAqICAgW2phXVsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAYXR0cmlidXRlIHRhcC1iYWNrZ3JvdW5kLWNvbG9yXG4gICAqIEB0eXBlIHtDb2xvcn1cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXSBDaGFuZ2VzIHRoZSBiYWNrZ3JvdW5kIGNvbG9yIHdoZW4gdGFwcGVkLiBGb3IgdGhpcyB0byB3b3JrLCB0aGUgYXR0cmlidXRlIFwidGFwcGFibGVcIiBuZWVkcyB0byBiZSBzZXQuIFRoZSBkZWZhdWx0IGNvbG9yIGlzIFwiI2Q5ZDlkOVwiLiBJdCB3aWxsIGRpc3BsYXkgYXMgYSByaXBwbGUgZWZmZWN0IG9uIEFuZHJvaWQuWy9lbl1cbiAgICogICBbamFdWy9qYV1cbiAgICovXG5cbiAgaW5pdCgpIHtcbiAgICBjb250ZW50UmVhZHkodGhpcywgKCkgPT4ge1xuICAgICAgdGhpcy5fY29tcGlsZSgpO1xuICAgIH0pO1xuICB9XG5cbiAgX2NvbXBpbGUoKSB7XG4gICAgdGhpcy5jbGFzc0xpc3QuYWRkKGRlZmF1bHRDbGFzc05hbWUpO1xuXG4gICAgbGV0IGxlZnQsIGNlbnRlciwgcmlnaHQ7XG5cbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMuY2hpbGRyZW4ubGVuZ3RoOyBpKyspIHtcbiAgICAgIGNvbnN0IGVsID0gdGhpcy5jaGlsZHJlbltpXTtcblxuICAgICAgaWYgKGVsLmNsYXNzTGlzdC5jb250YWlucygnbGVmdCcpKSB7XG4gICAgICAgIGVsLmNsYXNzTGlzdC5hZGQoJ2xpc3QtaXRlbV9fbGVmdCcpO1xuICAgICAgICBsZWZ0ID0gZWw7XG4gICAgICB9XG4gICAgICBlbHNlIGlmIChlbC5jbGFzc0xpc3QuY29udGFpbnMoJ2NlbnRlcicpKSB7XG4gICAgICAgIGNlbnRlciA9IGVsO1xuICAgICAgfVxuICAgICAgZWxzZSBpZiAoZWwuY2xhc3NMaXN0LmNvbnRhaW5zKCdyaWdodCcpKSB7XG4gICAgICAgIGVsLmNsYXNzTGlzdC5hZGQoJ2xpc3QtaXRlbV9fcmlnaHQnKTtcbiAgICAgICAgcmlnaHQgPSBlbDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAoIWNlbnRlcikge1xuICAgICAgY2VudGVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG5cbiAgICAgIGlmICghbGVmdCAmJiAhcmlnaHQpIHtcbiAgICAgICAgd2hpbGUgKHRoaXMuY2hpbGROb2Rlc1swXSkge1xuICAgICAgICAgIGNlbnRlci5hcHBlbmRDaGlsZCh0aGlzLmNoaWxkTm9kZXNbMF0pO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBmb3IgKGxldCBpID0gdGhpcy5jaGlsZE5vZGVzLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSB7XG4gICAgICAgICAgY29uc3QgZWwgPSB0aGlzLmNoaWxkTm9kZXNbaV07XG4gICAgICAgICAgaWYgKGVsICE9PSBsZWZ0ICYmIGVsICE9PSByaWdodCkge1xuICAgICAgICAgICAgY2VudGVyLmluc2VydEJlZm9yZShlbCwgY2VudGVyLmZpcnN0Q2hpbGQpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICB0aGlzLmluc2VydEJlZm9yZShjZW50ZXIsIHJpZ2h0IHx8IG51bGwpO1xuICAgIH1cblxuICAgIGNlbnRlci5jbGFzc0xpc3QuYWRkKCdjZW50ZXInKTtcbiAgICBjZW50ZXIuY2xhc3NMaXN0LmFkZCgnbGlzdC1pdGVtX19jZW50ZXInKTtcblxuICAgIHRoaXMuX3VwZGF0ZVJpcHBsZSgpO1xuXG4gICAgTW9kaWZpZXJVdGlsLmluaXRNb2RpZmllcih0aGlzLCBzY2hlbWUpO1xuXG4gICAgYXV0b1N0eWxlLnByZXBhcmUodGhpcyk7XG4gIH1cblxuICBzdGF0aWMgZ2V0IG9ic2VydmVkQXR0cmlidXRlcygpIHtcbiAgICByZXR1cm4gWydtb2RpZmllcicsICdjbGFzcycsICdyaXBwbGUnXTtcbiAgfVxuXG4gIGF0dHJpYnV0ZUNoYW5nZWRDYWxsYmFjayhuYW1lLCBsYXN0LCBjdXJyZW50KSB7XG4gICAgc3dpdGNoIChuYW1lKSB7XG4gICAgICBjYXNlICdjbGFzcyc6XG4gICAgICAgIGlmICghdGhpcy5jbGFzc0xpc3QuY29udGFpbnMoZGVmYXVsdENsYXNzTmFtZSkpIHtcbiAgICAgICAgICB0aGlzLmNsYXNzTmFtZSA9IGRlZmF1bHRDbGFzc05hbWUgKyAnICcgKyBjdXJyZW50O1xuICAgICAgICB9XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnbW9kaWZpZXInOlxuICAgICAgICBNb2RpZmllclV0aWwub25Nb2RpZmllckNoYW5nZWQobGFzdCwgY3VycmVudCwgdGhpcywgc2NoZW1lKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlICdyaXBwbGUnOlxuICAgICAgICB0aGlzLl91cGRhdGVSaXBwbGUoKTtcbiAgICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG5cbiAgY29ubmVjdGVkQ2FsbGJhY2soKSB7XG4gICAgdGhpcy5hZGRFdmVudExpc3RlbmVyKCdkcmFnJywgdGhpcy5fb25EcmFnKTtcbiAgICB0aGlzLmFkZEV2ZW50TGlzdGVuZXIoJ3RvdWNoc3RhcnQnLCB0aGlzLl9vblRvdWNoKTtcbiAgICB0aGlzLmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlZG93bicsIHRoaXMuX29uVG91Y2gpO1xuICAgIHRoaXMuYWRkRXZlbnRMaXN0ZW5lcigndG91Y2hlbmQnLCB0aGlzLl9vblJlbGVhc2UpO1xuICAgIHRoaXMuYWRkRXZlbnRMaXN0ZW5lcigndG91Y2htb3ZlJywgdGhpcy5fb25SZWxlYXNlKTtcbiAgICB0aGlzLmFkZEV2ZW50TGlzdGVuZXIoJ3RvdWNoY2FuY2VsJywgdGhpcy5fb25SZWxlYXNlKTtcbiAgICB0aGlzLmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNldXAnLCB0aGlzLl9vblJlbGVhc2UpO1xuICAgIHRoaXMuYWRkRXZlbnRMaXN0ZW5lcignbW91c2VvdXQnLCB0aGlzLl9vblJlbGVhc2UpO1xuICAgIHRoaXMuYWRkRXZlbnRMaXN0ZW5lcigndG91Y2hsZWF2ZScsIHRoaXMuX29uUmVsZWFzZSk7XG5cbiAgICB0aGlzLl9vcmlnaW5hbEJhY2tncm91bmRDb2xvciA9IHRoaXMuc3R5bGUuYmFja2dyb3VuZENvbG9yO1xuXG4gICAgdGhpcy50YXBwZWQgPSBmYWxzZTtcbiAgfVxuXG4gIGRpc2Nvbm5lY3RlZENhbGxiYWNrKCkge1xuICAgIHRoaXMucmVtb3ZlRXZlbnRMaXN0ZW5lcignZHJhZycsIHRoaXMuX29uRHJhZyk7XG4gICAgdGhpcy5yZW1vdmVFdmVudExpc3RlbmVyKCd0b3VjaHN0YXJ0JywgdGhpcy5fb25Ub3VjaCk7XG4gICAgdGhpcy5yZW1vdmVFdmVudExpc3RlbmVyKCdtb3VzZWRvd24nLCB0aGlzLl9vblRvdWNoKTtcbiAgICB0aGlzLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3RvdWNoZW5kJywgdGhpcy5fb25SZWxlYXNlKTtcbiAgICB0aGlzLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3RvdWNobW92ZScsIHRoaXMuX29uUmVsZWFzZSk7XG4gICAgdGhpcy5yZW1vdmVFdmVudExpc3RlbmVyKCd0b3VjaGNhbmNlbCcsIHRoaXMuX29uUmVsZWFzZSk7XG4gICAgdGhpcy5yZW1vdmVFdmVudExpc3RlbmVyKCdtb3VzZXVwJywgdGhpcy5fb25SZWxlYXNlKTtcbiAgICB0aGlzLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ21vdXNlb3V0JywgdGhpcy5fb25SZWxlYXNlKTtcbiAgICB0aGlzLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3RvdWNobGVhdmUnLCB0aGlzLl9vblJlbGVhc2UpO1xuICB9XG5cbiAgZ2V0IF90cmFuc2l0aW9uKCkge1xuICAgIHJldHVybiAnYmFja2dyb3VuZC1jb2xvciAwLjBzIGxpbmVhciAwLjAycywgYm94LXNoYWRvdyAwLjBzIGxpbmVhciAwLjAycyc7XG4gIH1cblxuICBnZXQgX3RhcHBhYmxlKCkge1xuICAgIHJldHVybiB0aGlzLmhhc0F0dHJpYnV0ZSgndGFwcGFibGUnKTtcbiAgfVxuXG4gIGdldCBfdGFwQmFja2dyb3VuZENvbG9yKCkge1xuICAgIHJldHVybiB0aGlzLmdldEF0dHJpYnV0ZSgndGFwLWJhY2tncm91bmQtY29sb3InKSB8fCAnI2Q5ZDlkOSc7XG4gIH1cblxuICBfdXBkYXRlUmlwcGxlKCkge1xuICAgIHV0aWwudXBkYXRlUmlwcGxlKHRoaXMpO1xuICB9XG5cbiAgX29uRHJhZyhldmVudCkge1xuICAgIGNvbnN0IGdlc3R1cmUgPSBldmVudC5nZXN0dXJlO1xuICAgIC8vIFByZXZlbnQgdmVydGljYWwgc2Nyb2xsaW5nIGlmIHRoZSB1c2VycyBwYW5zIGxlZnQgb3IgcmlnaHQuXG4gICAgaWYgKHRoaXMuX3Nob3VsZExvY2tPbkRyYWcoKSAmJiBbJ2xlZnQnLCAncmlnaHQnXS5pbmRleE9mKGdlc3R1cmUuZGlyZWN0aW9uKSA+IC0xKSB7XG4gICAgICBnZXN0dXJlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgfVxuICB9XG5cbiAgX29uVG91Y2goKSB7XG4gICAgaWYgKHRoaXMudGFwcGVkKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgdGhpcy50YXBwZWQgPSB0cnVlO1xuXG4gICAgdGhpcy5zdHlsZS50cmFuc2l0aW9uID0gdGhpcy5fdHJhbnNpdGlvbjtcbiAgICB0aGlzLnN0eWxlLndlYmtpdFRyYW5zaXRpb24gPSB0aGlzLl90cmFuc2l0aW9uO1xuICAgIHRoaXMuc3R5bGUuTW96VHJhbnNpdGlvbiA9IHRoaXMuX3RyYW5zaXRpb247XG5cbiAgICBpZiAodGhpcy5fdGFwcGFibGUpIHtcbiAgICAgIGlmICh0aGlzLnN0eWxlLmJhY2tncm91bmRDb2xvcikge1xuICAgICAgICB0aGlzLl9vcmlnaW5hbEJhY2tncm91bmRDb2xvciA9IHRoaXMuc3R5bGUuYmFja2dyb3VuZENvbG9yO1xuICAgICAgfVxuXG4gICAgICB0aGlzLnN0eWxlLmJhY2tncm91bmRDb2xvciA9IHRoaXMuX3RhcEJhY2tncm91bmRDb2xvcjtcbiAgICAgIHRoaXMuc3R5bGUuYm94U2hhZG93ID0gYDBweCAtMXB4IDBweCAwcHggJHt0aGlzLl90YXBCYWNrZ3JvdW5kQ29sb3J9YDtcbiAgICB9XG4gIH1cblxuICBfb25SZWxlYXNlKCkge1xuICAgIHRoaXMudGFwcGVkID0gZmFsc2U7XG5cbiAgICB0aGlzLnN0eWxlLnRyYW5zaXRpb24gPSAnJztcbiAgICB0aGlzLnN0eWxlLndlYmtpdFRyYW5zaXRpb24gPSAnJztcbiAgICB0aGlzLnN0eWxlLk1velRyYW5zaXRpb24gPSAnJztcblxuICAgIHRoaXMuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gdGhpcy5fb3JpZ2luYWxCYWNrZ3JvdW5kQ29sb3IgfHwgJyc7XG4gICAgdGhpcy5zdHlsZS5ib3hTaGFkb3cgPSAnJztcbiAgfVxuXG4gIF9zaG91bGRMb2NrT25EcmFnKCkge1xuICAgIHJldHVybiB0aGlzLmhhc0F0dHJpYnV0ZSgnbG9jay1vbi1kcmFnJyk7XG4gIH1cbn1cblxuY3VzdG9tRWxlbWVudHMuZGVmaW5lKCdvbnMtbGlzdC1pdGVtJywgTGlzdEl0ZW1FbGVtZW50KTtcbiIsIi8qXG5Db3B5cmlnaHQgMjAxMy0yMDE1IEFTSUFMIENPUlBPUkFUSU9OXG5cbkxpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG55b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG5Zb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcblxuICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG5cblVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbmRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbldJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxubGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5cbiovXG5cbmltcG9ydCB1dGlsIGZyb20gJy4uL29ucy91dGlsJztcbmltcG9ydCBhdXRvU3R5bGUgZnJvbSAnLi4vb25zL2F1dG9zdHlsZSc7XG5pbXBvcnQgTW9kaWZpZXJVdGlsIGZyb20gJy4uL29ucy9pbnRlcm5hbC9tb2RpZmllci11dGlsJztcbmltcG9ydCBCYXNlRWxlbWVudCBmcm9tICcuLi9vbnMvYmFzZS1lbGVtZW50JztcblxuY29uc3QgZGVmYXVsdENsYXNzTmFtZSA9ICdsaXN0JztcbmNvbnN0IHNjaGVtZSA9IHsnJzogJ2xpc3QtLSonfTtcblxuLyoqXG4gKiBAZWxlbWVudCBvbnMtbGlzdFxuICogQGNhdGVnb3J5IGxpc3RcbiAqIEBtb2RpZmllciBpbnNldFxuICogICBbZW5dSW5zZXQgbGlzdCB0aGF0IGRvZXNuJ3QgY292ZXIgdGhlIHdob2xlIHdpZHRoIG9mIHRoZSBwYXJlbnQuWy9lbl1cbiAqICAgW2phXeimquimgee0oOOBrueUu+mdouOBhOOBo+OBseOBhOOBq+W6g+OBjOOCieOBquOBhOODquOCueODiOOCkuihqOekuuOBl+OBvuOBmeOAglsvamFdXG4gKiBAbW9kaWZpZXIgbm9ib3JkZXJcbiAqICAgW2VuXUEgbGlzdCB3aXRoIG5vIGJvcmRlcnMgYXQgdGhlIHRvcCBhbmQgYm90dG9tLlsvZW5dXG4gKiAgIFtqYV3jg6rjgrnjg4jjga7kuIrkuIvjga7jg5zjg7zjg4Djg7zjgYznhKHjgYTjg6rjgrnjg4jjgpLooajnpLrjgZfjgb7jgZnjgIJbL2phXVxuICogQGRlc2NyaXB0aW9uXG4gKiAgIFtlbl1Db21wb25lbnQgdG8gZGVmaW5lIGEgbGlzdCwgYW5kIHRoZSBjb250YWluZXIgZm9yIG9ucy1saXN0LWl0ZW0ocykuWy9lbl1cbiAqICAgW2phXeODquOCueODiOOCkuihqOePvuOBmeOCi+OBn+OCgeOBruOCs+ODs+ODneODvOODjeODs+ODiOOAgm9ucy1saXN0LWl0ZW3jga7jgrPjg7Pjg4bjg4rjgajjgZfjgabkvb/nlKjjgZfjgb7jgZnjgIJbL2phXVxuICogQHNlZWFsc28gb25zLWxpc3QtaXRlbVxuICogICBbZW5db25zLWxpc3QtaXRlbSBjb21wb25lbnRbL2VuXVxuICogICBbamFdb25zLWxpc3QtaXRlbeOCs+ODs+ODneODvOODjeODs+ODiFsvamFdXG4gKiBAc2VlYWxzbyBvbnMtbGlzdC1oZWFkZXJcbiAqICAgW2VuXW9ucy1saXN0LWhlYWRlciBjb21wb25lbnRbL2VuXVxuICogICBbamFdb25zLWxpc3QtaGVhZGVy44Kz44Oz44Od44O844ON44Oz44OIWy9qYV1cbiAqIEBzZWVhbHNvIG9ucy1sYXp5LXJlcGVhdFxuICogICBbZW5db25zLWxhenktcmVwZWF0IGNvbXBvbmVudFsvZW5dXG4gKiAgIFtqYV1vbnMtbGF6eS1yZXBlYXTjgrPjg7Pjg53jg7zjg43jg7Pjg4hbL2phXVxuICogQGd1aWRlIGxpc3RzXG4gKiAgIFtlbl1Vc2luZyBsaXN0c1svZW5dXG4gKiAgIFtqYV3jg6rjgrnjg4jjgpLkvb/jgYZbL2phXVxuICogQGd1aWRlIGluZmluaXRlLXNjcm9sbFxuICogICBbZW5dTG9hZGluZyBtb3JlIGl0ZW1zIG9uIGluZmluaXRlIHNjcm9sbFsvZW5dXG4gKiAgIFtqYV1Mb2FkaW5nIG1vcmUgaXRlbXMgb24gaW5maW5pdGUgc2Nyb2xsWy9qYV1cbiAqIEBjb2RlcGVuIHl4Y0N0XG4gKiBAdHV0b3JpYWwgdmFuaWxsYS9SZWZlcmVuY2UvbGlzdFxuICogQGV4YW1wbGVcbiAqIDxvbnMtbGlzdD5cbiAqICAgPG9ucy1saXN0LWhlYWRlcj5IZWFkZXIgVGV4dDwvb25zLWxpc3QtaGVhZGVyPlxuICogICA8b25zLWxpc3QtaXRlbT5JdGVtPC9vbnMtbGlzdC1pdGVtPlxuICogICA8b25zLWxpc3QtaXRlbT5JdGVtPC9vbnMtbGlzdC1pdGVtPlxuICogPC9vbnMtbGlzdD5cbiAqL1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTGlzdEVsZW1lbnQgZXh0ZW5kcyBCYXNlRWxlbWVudCB7XG5cbiAgLyoqXG4gICAqIEBhdHRyaWJ1dGUgbW9kaWZpZXJcbiAgICogQHR5cGUge1N0cmluZ31cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXVRoZSBhcHBlYXJhbmNlIG9mIHRoZSBsaXN0LlsvZW5dXG4gICAqICAgW2phXeODquOCueODiOOBruihqOePvuOCkuaMh+WumuOBl+OBvuOBmeOAglsvamFdXG4gICAqL1xuXG4gIGluaXQoKSB7XG4gICAgdGhpcy5fY29tcGlsZSgpO1xuICB9XG5cbiAgX2NvbXBpbGUoKSB7XG4gICAgYXV0b1N0eWxlLnByZXBhcmUodGhpcyk7XG4gICAgdGhpcy5jbGFzc0xpc3QuYWRkKGRlZmF1bHRDbGFzc05hbWUpO1xuICAgIE1vZGlmaWVyVXRpbC5pbml0TW9kaWZpZXIodGhpcywgc2NoZW1lKTtcbiAgfVxuXG4gIHN0YXRpYyBnZXQgb2JzZXJ2ZWRBdHRyaWJ1dGVzKCkge1xuICAgIHJldHVybiBbJ21vZGlmaWVyJywgJ2NsYXNzJ107XG4gIH1cblxuICBhdHRyaWJ1dGVDaGFuZ2VkQ2FsbGJhY2sobmFtZSwgbGFzdCwgY3VycmVudCkge1xuICAgIHN3aXRjaCAobmFtZSkge1xuICAgICAgY2FzZSAnY2xhc3MnOlxuICAgICAgICBpZiAoIXRoaXMuY2xhc3NMaXN0LmNvbnRhaW5zKGRlZmF1bHRDbGFzc05hbWUpKSB7XG4gICAgICAgICAgdGhpcy5jbGFzc05hbWUgPSBkZWZhdWx0Q2xhc3NOYW1lICsgJyAnICsgY3VycmVudDtcbiAgICAgICAgfVxuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ21vZGlmaWVyJzpcbiAgICAgICAgTW9kaWZpZXJVdGlsLm9uTW9kaWZpZXJDaGFuZ2VkKGxhc3QsIGN1cnJlbnQsIHRoaXMsIHNjaGVtZSk7XG4gICAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxufVxuXG5jdXN0b21FbGVtZW50cy5kZWZpbmUoJ29ucy1saXN0JywgTGlzdEVsZW1lbnQpO1xuIiwiLypcbkNvcHlyaWdodCAyMDEzLTIwMTUgQVNJQUwgQ09SUE9SQVRJT05cbkxpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG55b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG5Zb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG5TZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG5saW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiovXG5cbmltcG9ydCB1dGlsIGZyb20gJy4uL29ucy91dGlsJztcbmltcG9ydCBhdXRvU3R5bGUgZnJvbSAnLi4vb25zL2F1dG9zdHlsZSc7XG5pbXBvcnQgTW9kaWZpZXJVdGlsIGZyb20gJy4uL29ucy9pbnRlcm5hbC9tb2RpZmllci11dGlsJztcbmltcG9ydCBCYXNlRWxlbWVudCBmcm9tICcuLi9vbnMvYmFzZS1lbGVtZW50JztcbmltcG9ydCBjb250ZW50UmVhZHkgZnJvbSAnLi4vb25zL2NvbnRlbnQtcmVhZHknO1xuXG5jb25zdCBkZWZhdWx0Q2hlY2tib3hDbGFzcyA9ICdjaGVja2JveCc7XG5jb25zdCBkZWZhdWx0UmFkaW9CdXR0b25DbGFzcyA9ICdyYWRpby1idXR0b24nO1xuXG5jb25zdCBzY2hlbWUgPSB7XG4gICcudGV4dC1pbnB1dCc6ICd0ZXh0LWlucHV0LS0qJyxcbiAgJy50ZXh0LWlucHV0X19sYWJlbCc6ICd0ZXh0LWlucHV0LS0qX19sYWJlbCcsXG4gICcucmFkaW8tYnV0dG9uJzogJ3JhZGlvLWJ1dHRvbi0tKicsXG4gICcucmFkaW8tYnV0dG9uX19pbnB1dCc6ICdyYWRpby1idXR0b24tLSpfX2lucHV0JyxcbiAgJy5yYWRpby1idXR0b25fX2NoZWNrbWFyayc6ICdyYWRpby1idXR0b24tLSpfX2NoZWNrbWFyaycsXG4gICcuY2hlY2tib3gnOiAnY2hlY2tib3gtLSonLFxuICAnLmNoZWNrYm94X19pbnB1dCc6ICdjaGVja2JveC0tKl9faW5wdXQnLFxuICAnLmNoZWNrYm94X19jaGVja21hcmsnOiAnY2hlY2tib3gtLSpfX2NoZWNrbWFyaydcbn07XG5cbmNvbnN0IElOUFVUX0FUVFJJQlVURVMgPSBbXG4gICdhdXRvY2FwaXRhbGl6ZScsXG4gICdhdXRvY29tcGxldGUnLFxuICAnYXV0b2NvcnJlY3QnLFxuICAnYXV0b2ZvY3VzJyxcbiAgJ2Rpc2FibGVkJyxcbiAgJ2lucHV0bW9kZScsXG4gICdtYXgnLFxuICAnbWF4bGVuZ3RoJyxcbiAgJ21pbicsXG4gICdtaW5sZW5ndGgnLFxuICAnbmFtZScsXG4gICdwYXR0ZXJuJyxcbiAgJ3BsYWNlaG9sZGVyJyxcbiAgJ3JlYWRvbmx5JyxcbiAgJ3NpemUnLFxuICAnc3RlcCcsXG4gICd0eXBlJyxcbiAgJ3ZhbGlkYXRvcicsXG4gICd2YWx1ZSdcbl07XG5cbi8qKlxuICogQGVsZW1lbnQgb25zLWlucHV0XG4gKiBAY2F0ZWdvcnkgZm9ybVxuICogQG1vZGlmaWVyIG1hdGVyaWFsXG4gKiAgW2VuXURpc3BsYXlzIGEgTWF0ZXJpYWwgRGVzaWduIGlucHV0LlsvZW5dXG4gKiAgW2phXVsvamFdXG4gKiBAbW9kaWZpZXIgdW5kZXJiYXJcbiAqICBbZW5dRGlzcGxheXMgYSBob3Jpem9udGFsIGxpbmUgdW5kZXJuZWF0aCBhIHRleHQgaW5wdXQuWy9lbl1cbiAqICBbamFdWy9qYV1cbiAqIEBtb2RpZmllciB0cmFuc3BhcmVudFxuICogIFtlbl1EaXNwbGF5cyBhIHRyYW5zcGFyZW50IGlucHV0LiBXb3JrcyBmb3IgTWF0ZXJpYWwgRGVzaWduLlsvZW5dXG4gKiAgW2phXVsvamFdXG4gKiBAZGVzY3JpcHRpb25cbiAqICBbZW5dXG4gKiAgICBBbiBpbnB1dCBlbGVtZW50LiBUaGUgYHR5cGVgIGF0dHJpYnV0ZSBjYW4gYmUgdXNlZCB0byBjaGFuZ2UgdGhlIGlucHV0IHR5cGUuIEFsbCB0ZXh0IGlucHV0IHR5cGVzIGFzIHdlbGwgYXMgYGNoZWNrYm94YCBhbmQgYHJhZGlvYCBhcmUgc3VwcG9ydGVkLlxuICpcbiAqICAgIFRoZSBjb21wb25lbnQgd2lsbCBhdXRvbWF0aWNhbGx5IHJlbmRlciBhcyBhIE1hdGVyaWFsIERlc2lnbiBpbnB1dCBvbiBBbmRyb2lkIGRldmljZXMuXG4gKlxuICogICAgTW9zdCBhdHRyaWJ1dGVzIHRoYXQgY2FuIGJlIHVzZWQgZm9yIGEgbm9ybWFsIGA8aW5wdXQ+YCBlbGVtZW50IGNhbiBhbHNvIGJlIHVzZWQgb24gdGhlIGA8b25zLWlucHV0PmAgZWxlbWVudC5cbiAqICBbL2VuXVxuICogIFtqYV1bL2phXVxuICogQGNvZGVwZW4gb2pReExqXG4gKiBAdHV0b3JpYWwgdmFuaWxsYS9SZWZlcmVuY2UvaW5wdXRcbiAqIEBzZWVhbHNvIG9ucy1yYW5nZVxuICogICBbZW5dVGhlIGA8b25zLXJhbmdlPmAgZWxlbWVudCBpcyB1c2VkIHRvIGRpc3BsYXkgYSByYW5nZSBzbGlkZXIuWy9lbl1cbiAqICAgW2phXVsvamFdXG4gKiBAc2VlYWxzbyBvbnMtc3dpdGNoXG4gKiAgIFtlbl1UaGUgYDxvbnMtc3dpdGNoPmAgZWxlbWVudCBpcyB1c2VkIHRvIGRpc3BsYXkgYSBkcmFnZ2FibGUgdG9nZ2xlIHN3aXRjaC5bL2VuXVxuICogICBbamFdWy9qYV1cbiAqIEBzZWVhbHNvIG9ucy1zZWxlY3RcbiAqICAgW2VuXVRoZSBgPG9ucy1zZWxlY3Q+YCBlbGVtZW50IGlzIHVzZWQgdG8gZGlzcGxheSBhIHNlbGVjdCBib3guWy9lbl1cbiAqICAgW2phXVsvamFdXG4gKiBAZ3VpZGUgYWRkaW5nLXBhZ2UtY29udGVudFxuICogICBbZW5dVXNpbmcgZm9ybSBjb21wb25lbnRzWy9lbl1cbiAqICAgW2phXeODleOCqeODvOODoOOCkuS9v+OBhlsvamFdXG4gKiBAZ3VpZGUgdXNpbmctbW9kaWZpZXIgW2VuXU1vcmUgZGV0YWlscyBhYm91dCB0aGUgYG1vZGlmaWVyYCBhdHRyaWJ1dGVbL2VuXVtqYV1tb2RpZmllcuWxnuaAp+OBruS9v+OBhOaWuVsvamFdXG4gKiBAZXhhbXBsZVxuICogPG9ucy1pbnB1dCBwbGFjZWhvbGRlcj1cIlVzZXJuYW1lXCIgZmxvYXQ+PC9vbnMtaW5wdXQ+XG4gKiA8b25zLWlucHV0IHR5cGU9XCJjaGVja2JveFwiIGNoZWNrZWQ+PC9vbnMtaW5wdXQ+XG4gKi9cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIElucHV0RWxlbWVudCBleHRlbmRzIEJhc2VFbGVtZW50IHtcblxuICAvKipcbiAgICogQGF0dHJpYnV0ZSBwbGFjZWhvbGRlclxuICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dUGxhY2Vob2xkZXIgdGV4dC4gSW4gTWF0ZXJpYWwgRGVzaWduLCB0aGlzIHBsYWNlaG9sZGVyIHdpbGwgYmUgYSBmbG9hdGluZyBsYWJlbC5bL2VuXVxuICAgKiAgIFtqYV1bL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQGF0dHJpYnV0ZSBmbG9hdFxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogIFtlbl1JZiB0aGlzIGF0dHJpYnV0ZSBpcyBwcmVzZW50LCB0aGUgcGxhY2Vob2xkZXIgd2lsbCBiZSBhbmltYXRlZCBpbiBNYXRlcmlhbCBEZXNpZ24uWy9lbl1cbiAgICogIFtqYV3jgZPjga7lsZ7mgKfjgYzoqK3lrprjgZXjgozjgZ/mmYLjgIHjg6njg5njg6vjga/jgqLjg4vjg6Hjg7zjgrfjg6fjg7PjgZnjgovjgojjgYbjgavjgarjgorjgb7jgZnjgIJbL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQGF0dHJpYnV0ZSB0eXBlXG4gICAqIEB0eXBlIHtTdHJpbmd9XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgW2VuXVxuICAgKiAgICBTcGVjaWZ5IHRoZSBpbnB1dCB0eXBlLiBUaGlzIGlzIHRoZSBzYW1lIGFzIHRoZSBcInR5cGVcIiBhdHRyaWJ1dGUgZm9yIG5vcm1hbCBpbnB1dHMuIEhvd2V2ZXIsIGZvciBcInJhbmdlXCIgeW91IHNob3VsZCBpbnN0ZWFkIHVzZSA8b25zLXJhbmdlPiBlbGVtZW50LlxuICAgKlxuICAgKiAgICBQbGVhc2UgdGFrZSBhIGxvb2sgYXQgW01ETl0oaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSFRNTC9FbGVtZW50L2lucHV0I2F0dHItdHlwZSkgZm9yIGFuIGV4aGF1c3RpdmUgbGlzdCBvZiBwb3NzaWJsZSB2YWx1ZXMuIERlcGVuZGluZyBvbiB0aGUgcGxhdGZvcm0gYW5kIGJyb3dzZXIgdmVyc2lvbiBzb21lIG9mIHRoZXNlIG1pZ2h0IG5vdCB3b3JrLlxuICAgKiAgWy9lbl1cbiAgICogIFtqYV1bL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQGF0dHJpYnV0ZSBpbnB1dC1pZFxuICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogIFtlbl1TcGVjaWZ5IHRoZSBcImlkXCIgYXR0cmlidXRlIG9mIHRoZSBpbm5lciBgPGlucHV0PmAgZWxlbWVudC4gVGhpcyBpcyB1c2VmdWwgd2hlbiB1c2luZyBgPGxhYmVsIGZvcj1cIi4uLlwiPmAgZWxlbWVudHMuWy9lbl1cbiAgICogIFtqYV1bL2phXVxuICAgKi9cblxuICBpbml0KCkge1xuICAgIGNvbnRlbnRSZWFkeSh0aGlzLCAoKSA9PiB7XG4gICAgICB0aGlzLl9jb21waWxlKCk7XG4gICAgICB0aGlzLmF0dHJpYnV0ZUNoYW5nZWRDYWxsYmFjaygnY2hlY2tlZCcsIG51bGwsIHRoaXMuZ2V0QXR0cmlidXRlKCdjaGVja2VkJykpO1xuICAgIH0pO1xuXG4gICAgdGhpcy5fYm91bmRPbklucHV0ID0gdGhpcy5fb25JbnB1dC5iaW5kKHRoaXMpO1xuICAgIHRoaXMuX2JvdW5kT25Gb2N1c2luID0gdGhpcy5fb25Gb2N1c2luLmJpbmQodGhpcyk7XG4gICAgdGhpcy5fYm91bmREZWxlZ2F0ZUV2ZW50ID0gdGhpcy5fZGVsZWdhdGVFdmVudC5iaW5kKHRoaXMpO1xuICB9XG5cbiAgX2NvbXBpbGUoKSB7XG4gICAgYXV0b1N0eWxlLnByZXBhcmUodGhpcyk7XG5cbiAgICBpZiAodGhpcy5jaGlsZHJlbi5sZW5ndGggIT09IDApIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBjb25zdCBoZWxwZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzcGFuJyk7XG4gICAgaGVscGVyLmNsYXNzTGlzdC5hZGQoJ19oZWxwZXInKTtcblxuICAgIGNvbnN0IGNvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xhYmVsJyk7XG4gICAgY29udGFpbmVyLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lucHV0JykpO1xuICAgIGNvbnRhaW5lci5hcHBlbmRDaGlsZChoZWxwZXIpO1xuXG4gICAgY29uc3QgbGFiZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzcGFuJyk7XG4gICAgbGFiZWwuY2xhc3NMaXN0LmFkZCgnaW5wdXQtbGFiZWwnKTtcblxuICAgIHV0aWwuYXJyYXlGcm9tKHRoaXMuY2hpbGROb2RlcykuZm9yRWFjaChlbGVtZW50ID0+IGxhYmVsLmFwcGVuZENoaWxkKGVsZW1lbnQpKTtcbiAgICB0aGlzLmhhc0F0dHJpYnV0ZSgnY29udGVudC1sZWZ0JykgPyBjb250YWluZXIuaW5zZXJ0QmVmb3JlKGxhYmVsLCBjb250YWluZXIuZmlyc3RDaGlsZCkgOiBjb250YWluZXIuYXBwZW5kQ2hpbGQobGFiZWwpO1xuXG4gICAgdGhpcy5hcHBlbmRDaGlsZChjb250YWluZXIpO1xuXG4gICAgc3dpdGNoICh0aGlzLmdldEF0dHJpYnV0ZSgndHlwZScpKSB7XG4gICAgICBjYXNlICdjaGVja2JveCc6XG4gICAgICAgIHRoaXMuY2xhc3NMaXN0LmFkZChkZWZhdWx0Q2hlY2tib3hDbGFzcyk7XG4gICAgICAgIHRoaXMuX2lucHV0LmNsYXNzTGlzdC5hZGQoJ2NoZWNrYm94X19pbnB1dCcpO1xuICAgICAgICB0aGlzLl9oZWxwZXIuY2xhc3NMaXN0LmFkZCgnY2hlY2tib3hfX2NoZWNrbWFyaycpO1xuICAgICAgICB0aGlzLl91cGRhdGVCb3VuZEF0dHJpYnV0ZXMoKTtcbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIGNhc2UgJ3JhZGlvJzpcbiAgICAgICAgdGhpcy5jbGFzc0xpc3QuYWRkKGRlZmF1bHRSYWRpb0J1dHRvbkNsYXNzKTtcbiAgICAgICAgdGhpcy5faW5wdXQuY2xhc3NMaXN0LmFkZCgncmFkaW8tYnV0dG9uX19pbnB1dCcpO1xuICAgICAgICB0aGlzLl9oZWxwZXIuY2xhc3NMaXN0LmFkZCgncmFkaW8tYnV0dG9uX19jaGVja21hcmsnKTtcbiAgICAgICAgdGhpcy5fdXBkYXRlQm91bmRBdHRyaWJ1dGVzKCk7XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBkZWZhdWx0OlxuICAgICAgICB0aGlzLl9pbnB1dC5jbGFzc0xpc3QuYWRkKCd0ZXh0LWlucHV0Jyk7XG4gICAgICAgIHRoaXMuX2hlbHBlci5jbGFzc0xpc3QuYWRkKCd0ZXh0LWlucHV0X19sYWJlbCcpO1xuICAgICAgICB0aGlzLl9pbnB1dC5wYXJlbnRFbGVtZW50LmNsYXNzTGlzdC5hZGQoJ3RleHQtaW5wdXRfX2NvbnRhaW5lcicpO1xuXG4gICAgICAgIHRoaXMuX3VwZGF0ZUxhYmVsKCk7XG4gICAgICAgIHRoaXMuX3VwZGF0ZUJvdW5kQXR0cmlidXRlcygpO1xuICAgICAgICB0aGlzLl91cGRhdGVMYWJlbENsYXNzKCk7XG4gICAgICAgIGJyZWFrO1xuICAgIH1cblxuICAgIGlmICh0aGlzLmhhc0F0dHJpYnV0ZSgnaW5wdXQtaWQnKSkge1xuICAgICAgdGhpcy5faW5wdXQuaWQgPSB0aGlzLmdldEF0dHJpYnV0ZSgnaW5wdXQtaWQnKTtcbiAgICB9XG5cbiAgICBNb2RpZmllclV0aWwuaW5pdE1vZGlmaWVyKHRoaXMsIHNjaGVtZSk7XG4gIH1cblxuICBzdGF0aWMgZ2V0IG9ic2VydmVkQXR0cmlidXRlcygpIHtcbiAgICByZXR1cm4gWydjbGFzcycsICdtb2RpZmllcicsICdwbGFjZWhvbGRlcicsICdpbnB1dC1pZCcsICdjaGVja2VkJywgLi4uSU5QVVRfQVRUUklCVVRFU107XG4gIH1cblxuICBhdHRyaWJ1dGVDaGFuZ2VkQ2FsbGJhY2sobmFtZSwgbGFzdCwgY3VycmVudCkge1xuICAgIHN3aXRjaCAobmFtZSkge1xuICAgICAgY2FzZSAnbW9kaWZpZXInOlxuICAgICAgICBjb250ZW50UmVhZHkodGhpcywgKCkgPT4gTW9kaWZpZXJVdGlsLm9uTW9kaWZpZXJDaGFuZ2VkKGxhc3QsIGN1cnJlbnQsIHRoaXMsIHNjaGVtZSkpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ3BsYWNlaG9sZGVyJzpcbiAgICAgICAgY29udGVudFJlYWR5KHRoaXMsICgpID0+IHRoaXMuX3VwZGF0ZUxhYmVsKCkpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ2lucHV0LWlkJzpcbiAgICAgICAgY29udGVudFJlYWR5KHRoaXMsICgpID0+IHRoaXMuX2lucHV0LmlkID0gY3VycmVudCk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnY2hlY2tlZCc6XG4gICAgICAgIHRoaXMuY2hlY2tlZCA9IGN1cnJlbnQgIT09IG51bGw7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnY2xhc3MnOlxuICAgICAgICBzd2l0Y2ggKHRoaXMuZ2V0QXR0cmlidXRlKCd0eXBlJykpIHtcbiAgICAgICAgICBjYXNlICdjaGVja2JveCc6XG4gICAgICAgICAgICBpZiAoIXRoaXMuY2xhc3NMaXN0LmNvbnRhaW5zKGRlZmF1bHRDaGVja2JveENsYXNzKSkge1xuICAgICAgICAgICAgICB0aGlzLmNsYXNzTmFtZSA9IGRlZmF1bHRDaGVja2JveENsYXNzICsgJyAnICsgY3VycmVudDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGNhc2UgJ3JhZGlvJzpcbiAgICAgICAgICAgIGlmICghdGhpcy5jbGFzc0xpc3QuY29udGFpbnMoZGVmYXVsdFJhZGlvQnV0dG9uQ2xhc3MpKSB7XG4gICAgICAgICAgICAgIHRoaXMuY2xhc3NOYW1lID0gZGVmYXVsdFJhZGlvQnV0dG9uQ2xhc3MgKyAnICcgKyBjdXJyZW50O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgICAgYnJlYWs7XG4gICAgfVxuXG4gICAgaWYgKElOUFVUX0FUVFJJQlVURVMuaW5kZXhPZihuYW1lKSA+PSAwKSB7XG4gICAgICBjb250ZW50UmVhZHkodGhpcywgKCkgPT4gdGhpcy5fdXBkYXRlQm91bmRBdHRyaWJ1dGVzKCkpO1xuICAgIH1cbiAgfVxuXG4gIGNvbm5lY3RlZENhbGxiYWNrKCkge1xuICAgIGNvbnRlbnRSZWFkeSh0aGlzLCAoKSA9PiB7XG4gICAgICBpZiAodGhpcy5faW5wdXQudHlwZSAhPT0gJ2NoZWNrYm94JyAmJiB0aGlzLl9pbnB1dC50eXBlICE9PSAncmFkaW8nKSB7XG4gICAgICAgIHRoaXMuX2lucHV0LmFkZEV2ZW50TGlzdGVuZXIoJ2lucHV0JywgdGhpcy5fYm91bmRPbklucHV0KTtcbiAgICAgICAgdGhpcy5faW5wdXQuYWRkRXZlbnRMaXN0ZW5lcignZm9jdXNpbicsIHRoaXMuX2JvdW5kT25Gb2N1c2luKTtcbiAgICAgICAgdGhpcy5faW5wdXQuYWRkRXZlbnRMaXN0ZW5lcignZm9jdXNvdXQnLCB0aGlzLl9ib3VuZE9uRm9jdXNvdXQpO1xuICAgICAgfVxuXG4gICAgICB0aGlzLl9pbnB1dC5hZGRFdmVudExpc3RlbmVyKCdmb2N1cycsIHRoaXMuX2JvdW5kRGVsZWdhdGVFdmVudCk7XG4gICAgICB0aGlzLl9pbnB1dC5hZGRFdmVudExpc3RlbmVyKCdibHVyJywgdGhpcy5fYm91bmREZWxlZ2F0ZUV2ZW50KTtcbiAgICB9KTtcbiAgfVxuXG4gIGRpc2Nvbm5lY3RlZENhbGxiYWNrKCkge1xuICAgIGNvbnRlbnRSZWFkeSh0aGlzLCAoKSA9PiB7XG4gICAgICB0aGlzLl9pbnB1dC5yZW1vdmVFdmVudExpc3RlbmVyKCdpbnB1dCcsIHRoaXMuX2JvdW5kT25JbnB1dCk7XG4gICAgICB0aGlzLl9pbnB1dC5yZW1vdmVFdmVudExpc3RlbmVyKCdmb2N1c2luJywgdGhpcy5fYm91bmRPbkZvY3VzaW4pO1xuICAgICAgdGhpcy5faW5wdXQucmVtb3ZlRXZlbnRMaXN0ZW5lcignZm9jdXMnLCB0aGlzLl9ib3VuZERlbGVnYXRlRXZlbnQpO1xuICAgICAgdGhpcy5faW5wdXQucmVtb3ZlRXZlbnRMaXN0ZW5lcignYmx1cicsIHRoaXMuX2JvdW5kRGVsZWdhdGVFdmVudCk7XG4gICAgfSk7XG4gIH1cblxuICBfc2V0TGFiZWwodmFsdWUpIHtcbiAgICBpZiAodHlwZW9mIHRoaXMuX2hlbHBlci50ZXh0Q29udGVudCAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIHRoaXMuX2hlbHBlci50ZXh0Q29udGVudCA9IHZhbHVlO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgIHRoaXMuX2hlbHBlci5pbm5lclRleHQgPSB2YWx1ZTtcbiAgICB9XG4gIH1cblxuICBfdXBkYXRlTGFiZWwoKSB7XG4gICAgdGhpcy5fc2V0TGFiZWwodGhpcy5oYXNBdHRyaWJ1dGUoJ3BsYWNlaG9sZGVyJykgPyB0aGlzLmdldEF0dHJpYnV0ZSgncGxhY2Vob2xkZXInKSA6ICcnKTtcbiAgfVxuXG4gIF91cGRhdGVCb3VuZEF0dHJpYnV0ZXMoKSB7XG4gICAgSU5QVVRfQVRUUklCVVRFUy5mb3JFYWNoKChhdHRyKSA9PiB7XG4gICAgICBpZiAodGhpcy5oYXNBdHRyaWJ1dGUoYXR0cikpIHtcbiAgICAgICAgdGhpcy5faW5wdXQuc2V0QXR0cmlidXRlKGF0dHIsIHRoaXMuZ2V0QXR0cmlidXRlKGF0dHIpKTtcbiAgICAgIH1cbiAgICAgIGVsc2Uge1xuICAgICAgICB0aGlzLl9pbnB1dC5yZW1vdmVBdHRyaWJ1dGUoYXR0cik7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICBfdXBkYXRlTGFiZWxDbGFzcygpIHtcbiAgICBpZiAodGhpcy52YWx1ZSA9PT0gJycpIHtcbiAgICAgIHRoaXMuX2hlbHBlci5jbGFzc0xpc3QucmVtb3ZlKCd0ZXh0LWlucHV0LS1tYXRlcmlhbF9fbGFiZWwtLWFjdGl2ZScpO1xuICAgIH1cbiAgICBlbHNlIGlmIChbJ2NoZWNrYm94JywgJ3JhZGlvJ10uaW5kZXhPZih0aGlzLmdldEF0dHJpYnV0ZSgndHlwZScpKSA9PT0gLTEpe1xuICAgICAgdGhpcy5faGVscGVyLmNsYXNzTGlzdC5hZGQoJ3RleHQtaW5wdXQtLW1hdGVyaWFsX19sYWJlbC0tYWN0aXZlJyk7XG4gICAgfVxuICB9XG5cbiAgX2RlbGVnYXRlRXZlbnQoZXZlbnQpIHtcbiAgICBjb25zdCBlID0gbmV3IEN1c3RvbUV2ZW50KGV2ZW50LnR5cGUsIHtcbiAgICAgIGJ1YmJsZXM6IGZhbHNlLFxuICAgICAgY2FuY2VsYWJsZTogdHJ1ZVxuICAgIH0pO1xuXG4gICAgcmV0dXJuIHRoaXMuZGlzcGF0Y2hFdmVudChlKTtcbiAgfVxuXG4gIF9vbklucHV0KGV2ZW50KSB7XG4gICAgdGhpcy5fdXBkYXRlTGFiZWxDbGFzcygpO1xuICB9XG5cbiAgX29uRm9jdXNpbihldmVudCkge1xuICAgIHRoaXMuX3VwZGF0ZUxhYmVsQ2xhc3MoKTtcbiAgfVxuXG4gIGdldCBfaW5wdXQoKSB7XG4gICAgcmV0dXJuIHRoaXMucXVlcnlTZWxlY3RvcignaW5wdXQnKTtcbiAgfVxuXG4gIGdldCBfaGVscGVyKCkge1xuICAgIHJldHVybiB0aGlzLnF1ZXJ5U2VsZWN0b3IoJy5faGVscGVyJyk7XG4gIH1cblxuICAvKipcbiAgICogQHByb3BlcnR5IHZhbHVlXG4gICAqIEB0eXBlIHtTdHJpbmd9XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1UaGUgY3VycmVudCB2YWx1ZSBvZiB0aGUgaW5wdXQuWy9lbl1cbiAgICogICBbamFdWy9qYV1cbiAgICovXG4gIGdldCB2YWx1ZSgpIHtcbiAgICByZXR1cm4gdGhpcy5faW5wdXQgPT09IG51bGxcbiAgICAgID8gdGhpcy5nZXRBdHRyaWJ1dGUoJ3ZhbHVlJylcbiAgICAgIDogdGhpcy5faW5wdXQudmFsdWU7XG4gIH1cblxuICBzZXQgdmFsdWUodmFsKSB7XG4gICAgY29udGVudFJlYWR5KHRoaXMsICgpID0+IHtcbiAgICAgIGlmICh2YWwgaW5zdGFuY2VvZiBEYXRlKSB7XG4gICAgICAgIHZhbCA9IHZhbC50b0lTT1N0cmluZygpLnN1YnN0cmluZygwLCAxMCk7XG4gICAgICB9XG4gICAgICB0aGlzLl9pbnB1dC52YWx1ZSA9IHZhbDtcbiAgICAgIHRoaXMuX29uSW5wdXQoKTtcbiAgICB9KTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcHJvcGVydHkgY2hlY2tlZFxuICAgKiBAdHlwZSB7Qm9vbGVhbn1cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXVdoZXRoZXIgdGhlIGlucHV0IGlzIGNoZWNrZWQgb3Igbm90LiBPbmx5IHdvcmtzIGZvciBgcmFkaW9gIGFuZCBgY2hlY2tib3hgIHR5cGUgaW5wdXRzLlsvZW5dXG4gICAqICAgW2phXVsvamFdXG4gICAqL1xuICBnZXQgY2hlY2tlZCgpIHtcbiAgICByZXR1cm4gdGhpcy5faW5wdXQuY2hlY2tlZDtcbiAgfVxuXG4gIHNldCBjaGVja2VkKHZhbCkge1xuICAgIGNvbnRlbnRSZWFkeSh0aGlzLCAoKSA9PiB7XG4gICAgICB0aGlzLl9pbnB1dC5jaGVja2VkID0gdmFsO1xuICAgIH0pO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwcm9wZXJ0eSBkaXNhYmxlZFxuICAgKiBAdHlwZSB7Qm9vbGVhbn1cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXVdoZXRoZXIgdGhlIGlucHV0IGlzIGRpc2FibGVkIG9yIG5vdC5bL2VuXVxuICAgKiAgIFtqYV3nhKHlirnljJbjgZXjgozjgabjgYTjgovloLTlkIjjgatgdHJ1ZWDjgIJbL2phXVxuICAgKi9cbiAgc2V0IGRpc2FibGVkKHZhbHVlKSB7XG4gICAgcmV0dXJuIHV0aWwudG9nZ2xlQXR0cmlidXRlKHRoaXMsICdkaXNhYmxlZCcsIHZhbHVlKTtcbiAgfVxuXG4gIGdldCBkaXNhYmxlZCgpIHtcbiAgICByZXR1cm4gdGhpcy5oYXNBdHRyaWJ1dGUoJ2Rpc2FibGVkJyk7XG4gIH1cblxuICBnZXQgX2lzVGV4dElucHV0KCkge1xuICAgIHJldHVybiB0aGlzLnR5cGUgIT09ICdyYWRpbycgJiYgdGhpcy50eXBlICE9PSAnY2hlY2tib3gnO1xuICB9XG5cbiAgZ2V0IHR5cGUoKSB7XG4gICAgcmV0dXJuIHRoaXMuZ2V0QXR0cmlidXRlKCd0eXBlJyk7XG4gIH1cblxuICBzdGF0aWMgZ2V0IGV2ZW50cygpIHtcbiAgICByZXR1cm4gWydjaGFuZ2UnLCAnaW5wdXQnLCAnZm9jdXMnLCAnZm9jdXNpbicsICdmb2N1c291dCcsICdibHVyJ107XG4gIH1cbn1cblxuY3VzdG9tRWxlbWVudHMuZGVmaW5lKCdvbnMtaW5wdXQnLCBJbnB1dEVsZW1lbnQpO1xuIiwiLypcbkNvcHlyaWdodCAyMDEzLTIwMTUgQVNJQUwgQ09SUE9SQVRJT05cblxuTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbnlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbllvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuXG4gICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcblxuVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG5TZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG5saW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cblxuKi9cblxuaW1wb3J0IEJhc2VBbmltYXRvciBmcm9tICcuLi8uLi9vbnMvYmFzZS1hbmltYXRvcic7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIE1vZGFsQW5pbWF0b3IgZXh0ZW5kcyBCYXNlQW5pbWF0b3Ige1xuXG4gIC8qKlxuICAgKiBAcGFyYW0ge09iamVjdH0gb3B0aW9uc1xuICAgKiBAcGFyYW0ge1N0cmluZ30gb3B0aW9ucy50aW1pbmdcbiAgICogQHBhcmFtIHtOdW1iZXJ9IG9wdGlvbnMuZHVyYXRpb25cbiAgICogQHBhcmFtIHtOdW1iZXJ9IG9wdGlvbnMuZGVsYXlcbiAgICovXG4gIGNvbnN0cnVjdG9yKHt0aW1pbmcgPSAnbGluZWFyJywgZGVsYXkgPSAwLCBkdXJhdGlvbiA9IDAuMn0gPSB7fSkge1xuICAgIHN1cGVyKHsgdGltaW5nLCBkZWxheSwgZHVyYXRpb24gfSk7XG4gIH1cblxuICAvKipcbiAgICogQHBhcmFtIHtIVE1MRWxlbWVudH0gbW9kYWxcbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gY2FsbGJhY2tcbiAgICovXG4gIHNob3cobW9kYWwsIGNhbGxiYWNrKSB7XG4gICAgY2FsbGJhY2soKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge0hUTUxFbGVtZW50fSBtb2RhbFxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBjYWxsYmFja1xuICAgKi9cbiAgaGlkZShtb2RhbCwgY2FsbGJhY2spIHtcbiAgICBjYWxsYmFjaygpO1xuICB9XG59XG4iLCJcbi8qXG5Db3B5cmlnaHQgMjAxMy0yMDE1IEFTSUFMIENPUlBPUkFUSU9OXG5cbkxpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG55b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG5Zb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcblxuICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG5cblVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbmRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbldJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxubGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5cbiovXG5cbmltcG9ydCBhbmltaXQgZnJvbSAnLi4vLi4vb25zL2FuaW1pdCc7XG5pbXBvcnQgTW9kYWxBbmltYXRvciBmcm9tICcuL2FuaW1hdG9yJztcblxuLyoqXG4gKiBpT1Mgc3R5bGUgYW5pbWF0b3IgZm9yIGRpYWxvZy5cbiAqL1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgRmFkZU1vZGFsQW5pbWF0b3IgZXh0ZW5kcyBNb2RhbEFuaW1hdG9yIHtcblxuICBjb25zdHJ1Y3Rvcih7dGltaW5nID0gJ2xpbmVhcicsIGRlbGF5ID0gMCwgZHVyYXRpb24gPSAwLjN9ID0ge30pIHtcbiAgICBzdXBlcih7IHRpbWluZywgZGVsYXksIGR1cmF0aW9uIH0pO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7SFRNTEVsZW1lbnR9IG1vZGFsXG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IGNhbGxiYWNrXG4gICAqL1xuICBzaG93KG1vZGFsLCBjYWxsYmFjaykge1xuICAgIGNhbGxiYWNrID0gY2FsbGJhY2sgPyBjYWxsYmFjayA6IGZ1bmN0aW9uKCkge307XG5cbiAgICBhbmltaXQobW9kYWwpXG4gICAgICAucXVldWUoe1xuICAgICAgICBvcGFjaXR5OiAwXG4gICAgICB9KVxuICAgICAgLndhaXQodGhpcy5kZWxheSlcbiAgICAgIC5xdWV1ZSh7XG4gICAgICAgIG9wYWNpdHk6IDEuMFxuICAgICAgfSwge1xuICAgICAgICBkdXJhdGlvbjogdGhpcy5kdXJhdGlvbixcbiAgICAgICAgdGltaW5nOiB0aGlzLnRpbWluZ1xuICAgICAgfSlcbiAgICAgIC5xdWV1ZShmdW5jdGlvbihkb25lKSB7XG4gICAgICAgIGNhbGxiYWNrKCk7XG4gICAgICAgIGRvbmUoKTtcbiAgICAgIH0pXG4gICAgICAucGxheSgpO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7SFRNTEVsZW1lbnR9IG1vZGFsXG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IGNhbGxiYWNrXG4gICAqL1xuICBoaWRlKG1vZGFsLCBjYWxsYmFjaykge1xuICAgIGNhbGxiYWNrID0gY2FsbGJhY2sgPyBjYWxsYmFjayA6IGZ1bmN0aW9uKCkge307XG5cbiAgICBhbmltaXQobW9kYWwpXG4gICAgICAucXVldWUoe1xuICAgICAgICBvcGFjaXR5OiAxXG4gICAgICB9KVxuICAgICAgLndhaXQodGhpcy5kZWxheSlcbiAgICAgIC5xdWV1ZSh7XG4gICAgICAgIG9wYWNpdHk6IDBcbiAgICAgIH0sIHtcbiAgICAgICAgZHVyYXRpb246IHRoaXMuZHVyYXRpb24sXG4gICAgICAgIHRpbWluZzogdGhpcy50aW1pbmdcbiAgICAgIH0pXG4gICAgICAucXVldWUoZnVuY3Rpb24oZG9uZSkge1xuICAgICAgICBjYWxsYmFjaygpO1xuICAgICAgICBkb25lKCk7XG4gICAgICB9KVxuICAgICAgLnBsYXkoKTtcbiAgfVxufVxuIiwiLypcbkNvcHlyaWdodCAyMDEzLTIwMTUgQVNJQUwgQ09SUE9SQVRJT05cblxuTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbnlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbllvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuXG4gICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcblxuVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG5TZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG5saW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cblxuKi9cblxuaW1wb3J0IHV0aWwgZnJvbSAnLi4vLi4vb25zL3V0aWwnO1xuaW1wb3J0IE1vZGlmaWVyVXRpbCBmcm9tICcuLi8uLi9vbnMvaW50ZXJuYWwvbW9kaWZpZXItdXRpbCc7XG5pbXBvcnQgQW5pbWF0b3JGYWN0b3J5IGZyb20gJy4uLy4uL29ucy9pbnRlcm5hbC9hbmltYXRvci1mYWN0b3J5JztcbmltcG9ydCBNb2RhbEFuaW1hdG9yIGZyb20gJy4vYW5pbWF0b3InO1xuaW1wb3J0IEZhZGVNb2RhbEFuaW1hdG9yIGZyb20gJy4vZmFkZS1hbmltYXRvcic7XG5pbXBvcnQgcGxhdGZvcm0gZnJvbSAnLi4vLi4vb25zL3BsYXRmb3JtJztcbmltcG9ydCBCYXNlRWxlbWVudCBmcm9tICcuLi8uLi9vbnMvYmFzZS1lbGVtZW50JztcbmltcG9ydCBkZXZpY2VCYWNrQnV0dG9uRGlzcGF0Y2hlciBmcm9tICcuLi8uLi9vbnMvZGV2aWNlLWJhY2stYnV0dG9uLWRpc3BhdGNoZXInO1xuaW1wb3J0IERvb3JMb2NrIGZyb20gJy4uLy4uL29ucy9kb29ybG9jayc7XG5pbXBvcnQgY29udGVudFJlYWR5IGZyb20gJy4uLy4uL29ucy9jb250ZW50LXJlYWR5JztcblxuY29uc3Qgc2NoZW1lID0ge1xuICAnJzogJ21vZGFsLS0qJyxcbiAgJ21vZGFsX19jb250ZW50JzogJ21vZGFsLS0qX19jb250ZW50J1xufTtcblxuY29uc3QgZGVmYXVsdENsYXNzTmFtZSA9ICdtb2RhbCc7XG5cbmNvbnN0IF9hbmltYXRvckRpY3QgPSB7XG4gICdkZWZhdWx0JzogTW9kYWxBbmltYXRvcixcbiAgJ2ZhZGUnOiBGYWRlTW9kYWxBbmltYXRvcixcbiAgJ25vbmUnOiBNb2RhbEFuaW1hdG9yXG59O1xuXG4vKipcbiAqIEBlbGVtZW50IG9ucy1tb2RhbFxuICogQGNhdGVnb3J5IGRpYWxvZ1xuICogQGRlc2NyaXB0aW9uXG4gKiAgIFtlbl1cbiAqICAgICBNb2RhbCBjb21wb25lbnQgdGhhdCBtYXNrcyBjdXJyZW50IHNjcmVlbi4gVW5kZXJseWluZyBjb21wb25lbnRzIGFyZSBub3Qgc3ViamVjdCB0byBhbnkgZXZlbnRzIHdoaWxlIHRoZSBtb2RhbCBjb21wb25lbnQgaXMgc2hvd24uXG4gKlxuICogICAgIFRoaXMgY29tcG9uZW50IGNhbiBiZSB1c2VkIHRvIGJsb2NrIHVzZXIgaW5wdXQgd2hpbGUgc29tZSBvcGVyYXRpb24gaXMgcnVubmluZyBvciB0byBzaG93IHNvbWUgaW5mb3JtYXRpb24gdG8gdGhlIHVzZXIuXG4gKiAgIFsvZW5dXG4gKiAgIFtqYV1cbiAqICAgICDnlLvpnaLlhajkvZPjgpLjg57jgrnjgq/jgZnjgovjg6Ljg7zjg4Djg6vnlKjjgrPjg7Pjg53jg7zjg43jg7Pjg4jjgafjgZnjgILkuIvlgbTjgavjgYLjgovjgrPjg7Pjg53jg7zjg43jg7Pjg4jjga/jgIFcbiAqICAgICDjg6Ljg7zjg4Djg6vjgYzooajnpLrjgZXjgozjgabjgYTjgovplpPjga/jgqTjg5njg7Pjg4jpgJrnn6XjgYzooYzjgo/jgozjgb7jgZvjgpPjgIJcbiAqICAgWy9qYV1cbiAqIEBndWlkZSBkaWFsb2dzXG4gKiAgIFtlbl1EaWFsb2cgY29tcG9uZW50c1svZW5dXG4gKiAgIFtqYV1EaWFsb2cgY29tcG9uZW50c1svamFdXG4gKiBAc2VlYWxzbyBvbnMtZGlhbG9nXG4gKiAgIFtlbl1UaGUgYDxvbnMtZGlhbG9nPmAgY29tcG9uZW50IGNhbiBiZSB1c2VkIHRvIGNyZWF0ZSBhIG1vZGFsIGRpYWxvZy5bL2VuXVxuICogICBbamFdWy9qYV1cbiAqIEBjb2RlcGVuIGRldklnXG4gKiBAZXhhbXBsZVxuICogPG9ucy1tb2RhbCBpZD1cIm1vZGFsXCI+XG4gKiAgIE1vZGFsIGNvbnRlbnRcbiAqIDwvb25zLW1vZGFsPlxuICogPHNjcmlwdD5cbiAqICAgdmFyIG1vZGFsID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ21vZGFsJyk7XG4gKiAgIG1vZGFsLnNob3coKTtcbiAqIDwvc2NyaXB0PlxuICovXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBNb2RhbEVsZW1lbnQgZXh0ZW5kcyBCYXNlRWxlbWVudCB7XG5cbiAgLyoqXG4gICAqIEBhdHRyaWJ1dGUgYW5pbWF0aW9uXG4gICAqIEB0eXBlIHtTdHJpbmd9XG4gICAqIEBkZWZhdWx0IGRlZmF1bHRcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICBbZW5dVGhlIGFuaW1hdGlvbiB1c2VkIHdoZW4gc2hvd2luZyBhbmQgaGlkaW5nIHRoZSBtb2RhbC4gQ2FuIGJlIGVpdGhlciBgXCJub25lXCJgIG9yIGBcImZhZGVcImAuWy9lbl1cbiAgICogIFtqYV3jg6Ljg7zjg4Djg6vjgpLooajnpLrjgZnjgovpmpvjga7jgqLjg4vjg6Hjg7zjgrfjg6fjg7PlkI3jgpLmjIflrprjgZfjgb7jgZnjgIJcIm5vbmVcIuOCguOBl+OBj+OBr1wiZmFkZVwi44KS5oyH5a6a44Gn44GN44G+44GZ44CCWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBhdHRyaWJ1dGUgYW5pbWF0aW9uLW9wdGlvbnNcbiAgICogQHR5cGUge0V4cHJlc3Npb259XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgW2VuXVNwZWNpZnkgdGhlIGFuaW1hdGlvbidzIGR1cmF0aW9uLCB0aW1pbmcgYW5kIGRlbGF5IHdpdGggYW4gb2JqZWN0IGxpdGVyYWwuIEUuZy4gYHtkdXJhdGlvbjogMC4yLCBkZWxheTogMSwgdGltaW5nOiAnZWFzZS1pbid9YC5bL2VuXVxuICAgKiAgW2phXeOCouODi+ODoeODvOOCt+ODp+ODs+aZguOBrmR1cmF0aW9uLCB0aW1pbmcsIGRlbGF544KS44Kq44OW44K444Kn44Kv44OI44Oq44OG44Op44Or44Gn5oyH5a6a44GX44G+44GZ44CCZS5nLiA8Y29kZT57ZHVyYXRpb246IDAuMiwgZGVsYXk6IDEsIHRpbWluZzogJ2Vhc2UtaW4nfTwvY29kZT5bL2phXVxuICAgKi9cblxuICBpbml0KCkge1xuICAgIGNvbnRlbnRSZWFkeSh0aGlzLCAoKSA9PiB7XG4gICAgICB0aGlzLl9jb21waWxlKCk7XG4gICAgfSk7XG5cbiAgICB0aGlzLl9kb29yTG9jayA9IG5ldyBEb29yTG9jaygpO1xuXG4gICAgdGhpcy5fYW5pbWF0b3JGYWN0b3J5ID0gbmV3IEFuaW1hdG9yRmFjdG9yeSh7XG4gICAgICBhbmltYXRvcnM6IF9hbmltYXRvckRpY3QsXG4gICAgICBiYXNlQ2xhc3M6IE1vZGFsQW5pbWF0b3IsXG4gICAgICBiYXNlQ2xhc3NOYW1lOiAnTW9kYWxBbmltYXRvcicsXG4gICAgICBkZWZhdWx0QW5pbWF0aW9uOiB0aGlzLmdldEF0dHJpYnV0ZSgnYW5pbWF0aW9uJylcbiAgICB9KTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcHJvcGVydHkgb25EZXZpY2VCYWNrQnV0dG9uXG4gICAqIEB0eXBlIHtPYmplY3R9XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1CYWNrLWJ1dHRvbiBoYW5kbGVyLlsvZW5dXG4gICAqICAgW2phXeODkOODg+OCr+ODnOOCv+ODs+ODj+ODs+ODieODqeOAglsvamFdXG4gICAqL1xuICBnZXQgb25EZXZpY2VCYWNrQnV0dG9uKCkge1xuICAgIHJldHVybiB0aGlzLl9iYWNrQnV0dG9uSGFuZGxlcjtcbiAgfVxuXG4gIHNldCBvbkRldmljZUJhY2tCdXR0b24oaGFuZGxlcikge1xuICAgIGlmICh0aGlzLl9iYWNrQnV0dG9uSGFuZGxlcikge1xuICAgICAgdGhpcy5fYmFja0J1dHRvbkhhbmRsZXIuZGVzdHJveSgpO1xuICAgIH1cblxuICAgIHRoaXMuX2JhY2tCdXR0b25IYW5kbGVyID0gZGV2aWNlQmFja0J1dHRvbkRpc3BhdGNoZXIuY3JlYXRlSGFuZGxlcih0aGlzLCBoYW5kbGVyKTtcbiAgfVxuXG4gIF9jb21waWxlKCkge1xuICAgIHRoaXMuc3R5bGUuZGlzcGxheSA9ICdub25lJztcbiAgICB0aGlzLnN0eWxlLnpJbmRleCA9IDEwMDAxO1xuICAgIHRoaXMuY2xhc3NMaXN0LmFkZChkZWZhdWx0Q2xhc3NOYW1lKTtcblxuICAgIGlmICghdXRpbC5maW5kQ2hpbGQodGhpcywgJy5tb2RhbF9fY29udGVudCcpKSB7XG4gICAgICBjb25zdCBjb250ZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICBjb250ZW50LmNsYXNzTGlzdC5hZGQoJ21vZGFsX19jb250ZW50Jyk7XG5cbiAgICAgIHdoaWxlICh0aGlzLmNoaWxkTm9kZXNbMF0pIHtcbiAgICAgICAgY29uc3Qgbm9kZSA9IHRoaXMuY2hpbGROb2Rlc1swXTtcbiAgICAgICAgdGhpcy5yZW1vdmVDaGlsZChub2RlKTtcbiAgICAgICAgY29udGVudC5pbnNlcnRCZWZvcmUobm9kZSwgbnVsbCk7XG4gICAgICB9XG5cbiAgICAgIHRoaXMuYXBwZW5kQ2hpbGQoY29udGVudCk7XG4gICAgfVxuXG4gICAgTW9kaWZpZXJVdGlsLmluaXRNb2RpZmllcih0aGlzLCBzY2hlbWUpO1xuICB9XG5cbiAgZGlzY29ubmVjdGVkQ2FsbGJhY2soKSB7XG4gICAgaWYgKHRoaXMuX2JhY2tCdXR0b25IYW5kbGVyKSB7XG4gICAgICB0aGlzLl9iYWNrQnV0dG9uSGFuZGxlci5kZXN0cm95KCk7XG4gICAgfVxuICB9XG5cbiAgY29ubmVjdGVkQ2FsbGJhY2soKSB7XG4gICAgdGhpcy5vbkRldmljZUJhY2tCdXR0b24gPSAoKSA9PiB1bmRlZmluZWQ7XG4gIH1cblxuICAvKipcbiAgICogQHByb3BlcnR5IHZpc2libGVcbiAgICogQHJlYWRvbmx5XG4gICAqIEB0eXBlIHtCb29sZWFufVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dV2hldGhlciB0aGUgZWxlbWVudCBpcyB2aXNpYmxlIG9yIG5vdC5bL2VuXVxuICAgKiAgIFtqYV3opoHntKDjgYzopovjgYjjgovloLTlkIjjgatgdHJ1ZWDjgIJbL2phXVxuICAgKi9cbiAgZ2V0IHZpc2libGUoKSB7XG4gICAgcmV0dXJuIHRoaXMuc3R5bGUuZGlzcGxheSAhPT0gJ25vbmUnO1xuICB9XG5cbiAgLyoqXG4gICAqIEBtZXRob2Qgc2hvd1xuICAgKiBAc2lnbmF0dXJlIHNob3coW29wdGlvbnNdKVxuICAgKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnNdXG4gICAqICAgW2VuXVBhcmFtZXRlciBvYmplY3QuWy9lbl1cbiAgICogICBbamFd44Kq44OX44K344On44Oz44KS5oyH5a6a44GZ44KL44Kq44OW44K444Kn44Kv44OI44CCWy9qYV1cbiAgICogQHBhcmFtIHtTdHJpbmd9IFtvcHRpb25zLmFuaW1hdGlvbl1cbiAgICogICBbZW5dQW5pbWF0aW9uIG5hbWUuIEF2YWlsYWJsZSBhbmltYXRpb25zIGFyZSBgXCJub25lXCJgIGFuZCBgXCJmYWRlXCJgLlsvZW5dXG4gICAqICAgW2phXeOCouODi+ODoeODvOOCt+ODp+ODs+WQjeOCkuaMh+WumuOBl+OBvuOBmeOAglwibm9uZVwiLCBcImZhZGVcIuOBruOBhOOBmuOCjOOBi+OCkuaMh+WumuOBl+OBvuOBmeOAglsvamFdXG4gICAqIEBwYXJhbSB7U3RyaW5nfSBbb3B0aW9ucy5hbmltYXRpb25PcHRpb25zXVxuICAgKiAgIFtlbl1TcGVjaWZ5IHRoZSBhbmltYXRpb24ncyBkdXJhdGlvbiwgZGVsYXkgYW5kIHRpbWluZy4gRS5nLiBge2R1cmF0aW9uOiAwLjIsIGRlbGF5OiAwLjQsIHRpbWluZzogJ2Vhc2UtaW4nfWAuWy9lbl1cbiAgICogICBbamFd44Ki44OL44Oh44O844K344On44Oz5pmC44GuZHVyYXRpb24sIGRlbGF5LCB0aW1pbmfjgpLmjIflrprjgZfjgb7jgZnjgIJlLmcuIHtkdXJhdGlvbjogMC4yLCBkZWxheTogMC40LCB0aW1pbmc6ICdlYXNlLWluJ31bL2phXVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dU2hvdyBtb2RhbC5bL2VuXVxuICAgKiAgIFtqYV3jg6Ljg7zjg4Djg6vjgpLooajnpLrjgZfjgb7jgZnjgIJbL2phXVxuICAgKiBAcmV0dXJuIHtQcm9taXNlfVxuICAgKiAgIFtlbl1SZXNvbHZlcyB0byB0aGUgZGlzcGxheWVkIGVsZW1lbnRbL2VuXVxuICAgKiAgIFtqYV1bL2phXVxuICAgKi9cbiAgc2hvdyhvcHRpb25zID0ge30pIHtcbiAgICBvcHRpb25zLmFuaW1hdGlvbk9wdGlvbnMgPSB1dGlsLmV4dGVuZChcbiAgICAgIG9wdGlvbnMuYW5pbWF0aW9uT3B0aW9ucyB8fCB7fSxcbiAgICAgIEFuaW1hdG9yRmFjdG9yeS5wYXJzZUFuaW1hdGlvbk9wdGlvbnNTdHJpbmcodGhpcy5nZXRBdHRyaWJ1dGUoJ2FuaW1hdGlvbi1vcHRpb25zJykpXG4gICAgKTtcblxuICAgIGNvbnN0IGNhbGxiYWNrID0gb3B0aW9ucy5jYWxsYmFjayB8fCBmdW5jdGlvbigpIHt9O1xuXG4gICAgY29uc3QgdHJ5U2hvdyA9ICgpID0+IHtcbiAgICAgIGNvbnN0IHVubG9jayA9IHRoaXMuX2Rvb3JMb2NrLmxvY2soKTtcbiAgICAgIGNvbnN0IGFuaW1hdG9yID0gdGhpcy5fYW5pbWF0b3JGYWN0b3J5Lm5ld0FuaW1hdG9yKG9wdGlvbnMpO1xuXG4gICAgICByZXR1cm4gbmV3IFByb21pc2UocmVzb2x2ZSA9PiB7XG4gICAgICAgIGNvbnRlbnRSZWFkeSh0aGlzLCAoKSA9PiB7XG4gICAgICAgICAgdGhpcy5zdHlsZS5kaXNwbGF5ID0gJ3RhYmxlJztcbiAgICAgICAgICBhbmltYXRvci5zaG93KHRoaXMsICgpID0+IHtcbiAgICAgICAgICAgIHVubG9jaygpO1xuXG4gICAgICAgICAgICB1dGlsLnByb3BhZ2F0ZUFjdGlvbih0aGlzLCAnX3Nob3cnKTtcbiAgICAgICAgICAgIGNhbGxiYWNrKCk7XG4gICAgICAgICAgICByZXNvbHZlKHRoaXMpO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICAgIH0pO1xuICAgIH07XG5cbiAgICByZXR1cm4gbmV3IFByb21pc2UocmVzb2x2ZSA9PiB7XG4gICAgICB0aGlzLl9kb29yTG9jay53YWl0VW5sb2NrKCgpID0+IHJlc29sdmUodHJ5U2hvdygpKSk7XG4gICAgfSk7XG4gIH1cblxuICAvKipcbiAgICogQG1ldGhvZCB0b2dnbGVcbiAgICogQHNpZ25hdHVyZSB0b2dnbGUoW29wdGlvbnNdKVxuICAgKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnNdXG4gICAqICAgW2VuXVBhcmFtZXRlciBvYmplY3QuWy9lbl1cbiAgICogICBbamFd44Kq44OX44K344On44Oz44KS5oyH5a6a44GZ44KL44Kq44OW44K444Kn44Kv44OI44CCWy9qYV1cbiAgICogQHBhcmFtIHtTdHJpbmd9IFtvcHRpb25zLmFuaW1hdGlvbl1cbiAgICogICBbZW5dQW5pbWF0aW9uIG5hbWUuIEF2YWlsYWJsZSBhbmltYXRpb25zIGFyZSBgXCJub25lXCJgIGFuZCBgXCJmYWRlXCJgLlsvZW5dXG4gICAqICAgW2phXeOCouODi+ODoeODvOOCt+ODp+ODs+WQjeOCkuaMh+WumuOBl+OBvuOBmeOAglwibm9uZVwiLCBcImZhZGVcIuOBruOBhOOBmuOCjOOBi+OCkuaMh+WumuOBl+OBvuOBmeOAglsvamFdXG4gICAqIEBwYXJhbSB7U3RyaW5nfSBbb3B0aW9ucy5hbmltYXRpb25PcHRpb25zXVxuICAgKiAgIFtlbl1TcGVjaWZ5IHRoZSBhbmltYXRpb24ncyBkdXJhdGlvbiwgZGVsYXkgYW5kIHRpbWluZy4gRS5nLiBge2R1cmF0aW9uOiAwLjIsIGRlbGF5OiAwLjQsIHRpbWluZzogJ2Vhc2UtaW4nfWAuWy9lbl1cbiAgICogICBbamFd44Ki44OL44Oh44O844K344On44Oz5pmC44GuZHVyYXRpb24sIGRlbGF5LCB0aW1pbmfjgpLmjIflrprjgZfjgb7jgZnjgIJlLmcuIHtkdXJhdGlvbjogMC4yLCBkZWxheTogMC40LCB0aW1pbmc6ICdlYXNlLWluJ31bL2phXVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dVG9nZ2xlIG1vZGFsIHZpc2liaWxpdHkuWy9lbl1cbiAgICogICBbamFd44Oi44O844OA44Or44Gu6KGo56S644KS5YiH44KK5pu/44GI44G+44GZ44CCWy9qYV1cbiAgICovXG4gIHRvZ2dsZSgpIHtcbiAgICBpZiAodGhpcy52aXNpYmxlKSB7XG4gICAgICByZXR1cm4gdGhpcy5oaWRlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiB0aGlzLnNob3cuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogQG1ldGhvZCBoaWRlXG4gICAqIEBzaWduYXR1cmUgaGlkZShbb3B0aW9uc10pXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0aW9uc11cbiAgICogICBbZW5dUGFyYW1ldGVyIG9iamVjdC5bL2VuXVxuICAgKiAgIFtqYV3jgqrjg5fjgrfjg6fjg7PjgpLmjIflrprjgZnjgovjgqrjg5bjgrjjgqfjgq/jg4jjgIJbL2phXVxuICAgKiBAcGFyYW0ge1N0cmluZ30gW29wdGlvbnMuYW5pbWF0aW9uXVxuICAgKiAgIFtlbl1BbmltYXRpb24gbmFtZS4gQXZhaWxhYmxlIGFuaW1hdGlvbnMgYXJlIGBcIm5vbmVcImAgYW5kIGBcImZhZGVcImAuWy9lbl1cbiAgICogICBbamFd44Ki44OL44Oh44O844K344On44Oz5ZCN44KS5oyH5a6a44GX44G+44GZ44CCXCJub25lXCIsIFwiZmFkZVwi44Gu44GE44Ga44KM44GL44KS5oyH5a6a44GX44G+44GZ44CCWy9qYV1cbiAgICogQHBhcmFtIHtTdHJpbmd9IFtvcHRpb25zLmFuaW1hdGlvbk9wdGlvbnNdXG4gICAqICAgW2VuXVNwZWNpZnkgdGhlIGFuaW1hdGlvbidzIGR1cmF0aW9uLCBkZWxheSBhbmQgdGltaW5nLiBFLmcuIGB7ZHVyYXRpb246IDAuMiwgZGVsYXk6IDAuNCwgdGltaW5nOiAnZWFzZS1pbid9YC5bL2VuXVxuICAgKiAgIFtqYV3jgqLjg4vjg6Hjg7zjgrfjg6fjg7PmmYLjga5kdXJhdGlvbiwgZGVsYXksIHRpbWluZ+OCkuaMh+WumuOBl+OBvuOBmeOAgmUuZy4ge2R1cmF0aW9uOiAwLjIsIGRlbGF5OiAwLjQsIHRpbWluZzogJ2Vhc2UtaW4nfVsvamFdXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1IaWRlIG1vZGFsLlsvZW5dXG4gICAqICAgW2phXeODouODvOODgOODq+OCkumdnuihqOekuuOBq+OBl+OBvuOBmeOAglsvamFdXG4gICAqIEByZXR1cm4ge1Byb21pc2V9XG4gICAqICAgW2VuXVJlc29sdmVzIHRvIHRoZSBoaWRkZW4gZWxlbWVudFsvZW5dXG4gICAqICAgW2phXVsvamFdXG4gICAqL1xuICBoaWRlKG9wdGlvbnMgPSB7fSkge1xuICAgIG9wdGlvbnMuYW5pbWF0aW9uT3B0aW9ucyA9IHV0aWwuZXh0ZW5kKFxuICAgICAgb3B0aW9ucy5hbmltYXRpb25PcHRpb25zIHx8IHt9LFxuICAgICAgQW5pbWF0b3JGYWN0b3J5LnBhcnNlQW5pbWF0aW9uT3B0aW9uc1N0cmluZyh0aGlzLmdldEF0dHJpYnV0ZSgnYW5pbWF0aW9uLW9wdGlvbnMnKSlcbiAgICApO1xuXG4gICAgY29uc3QgY2FsbGJhY2sgPSBvcHRpb25zLmNhbGxiYWNrIHx8IGZ1bmN0aW9uKCkge307XG5cbiAgICBjb25zdCB0cnlIaWRlID0gKCkgPT4ge1xuICAgICAgY29uc3QgdW5sb2NrID0gdGhpcy5fZG9vckxvY2subG9jaygpO1xuICAgICAgY29uc3QgYW5pbWF0b3IgPSB0aGlzLl9hbmltYXRvckZhY3RvcnkubmV3QW5pbWF0b3Iob3B0aW9ucyk7XG5cbiAgICAgIHJldHVybiBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHtcbiAgICAgICAgY29udGVudFJlYWR5KHRoaXMsICgpID0+IHtcbiAgICAgICAgICBhbmltYXRvci5oaWRlKHRoaXMsICgpID0+IHtcbiAgICAgICAgICAgIHRoaXMuc3R5bGUuZGlzcGxheSA9ICdub25lJztcbiAgICAgICAgICAgIHVubG9jaygpO1xuXG4gICAgICAgICAgICB1dGlsLnByb3BhZ2F0ZUFjdGlvbih0aGlzLCAnX2hpZGUnKTtcbiAgICAgICAgICAgIGNhbGxiYWNrKCk7XG4gICAgICAgICAgICByZXNvbHZlKHRoaXMpO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICAgIH0pO1xuICAgIH07XG5cbiAgICByZXR1cm4gbmV3IFByb21pc2UocmVzb2x2ZSA9PiB7XG4gICAgICB0aGlzLl9kb29yTG9jay53YWl0VW5sb2NrKCgpID0+IHJlc29sdmUodHJ5SGlkZSgpKSk7XG4gICAgfSk7XG4gIH1cblxuICBzdGF0aWMgZ2V0IG9ic2VydmVkQXR0cmlidXRlcygpIHtcbiAgICByZXR1cm4gWydtb2RpZmllcicsICdjbGFzcyddO1xuICB9XG5cbiAgYXR0cmlidXRlQ2hhbmdlZENhbGxiYWNrKG5hbWUsIGxhc3QsIGN1cnJlbnQpIHtcbiAgICBpZiAobmFtZSA9PT0gJ2NsYXNzJykge1xuICAgICAgaWYgKCF0aGlzLmNsYXNzTGlzdC5jb250YWlucyhkZWZhdWx0Q2xhc3NOYW1lKSkge1xuICAgICAgICB0aGlzLmNsYXNzTmFtZSA9IGRlZmF1bHRDbGFzc05hbWUgKyAnICcgKyBjdXJyZW50O1xuICAgICAgfVxuICAgIH0gZWxzZSBpZiAobmFtZSA9PT0gJ21vZGlmaWVyJykge1xuICAgICAgcmV0dXJuIE1vZGlmaWVyVXRpbC5vbk1vZGlmaWVyQ2hhbmdlZChsYXN0LCBjdXJyZW50LCB0aGlzLCBzY2hlbWUpO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge1N0cmluZ30gbmFtZVxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBBbmltYXRvclxuICAgKi9cbiAgc3RhdGljIHJlZ2lzdGVyQW5pbWF0b3IobmFtZSwgQW5pbWF0b3IpIHtcbiAgICBpZiAoIShBbmltYXRvci5wcm90b3R5cGUgaW5zdGFuY2VvZiBNb2RhbEFuaW1hdG9yKSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdcIkFuaW1hdG9yXCIgcGFyYW0gbXVzdCBpbmhlcml0IE9uc01vZGFsRWxlbWVudC5Nb2RhbEFuaW1hdG9yJyk7XG4gICAgfVxuICAgIF9hbmltYXRvckRpY3RbbmFtZV0gPSBBbmltYXRvcjtcbiAgfVxuXG4gIHN0YXRpYyBnZXQgYW5pbWF0b3JzKCkge1xuICAgIHJldHVybiBfYW5pbWF0b3JEaWN0O1xuICB9XG5cbiAgc3RhdGljIGdldCBNb2RhbEFuaW1hdG9yKCkge1xuICAgIHJldHVybiBNb2RhbEFuaW1hdG9yO1xuICB9XG59XG5cbmN1c3RvbUVsZW1lbnRzLmRlZmluZSgnb25zLW1vZGFsJywgTW9kYWxFbGVtZW50KTtcbiIsIi8qXG5Db3B5cmlnaHQgMjAxMy0yMDE1IEFTSUFMIENPUlBPUkFUSU9OXG5cbkxpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG55b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG5Zb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcblxuICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG5cblVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbmRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbldJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxubGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5cbiovXG5cbmltcG9ydCB1dGlsIGZyb20gJy4uLy4uL29ucy91dGlsJztcbmltcG9ydCBCYXNlQW5pbWF0b3IgZnJvbSAnLi4vLi4vb25zL2Jhc2UtYW5pbWF0b3InXG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIE5hdmlnYXRvclRyYW5zaXRpb25BbmltYXRvciBleHRlbmRzIEJhc2VBbmltYXRvciB7XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBvcHRpb25zXG4gICAqIEBwYXJhbSB7U3RyaW5nfSBvcHRpb25zLnRpbWluZ1xuICAgKiBAcGFyYW0ge051bWJlcn0gb3B0aW9ucy5kdXJhdGlvblxuICAgKiBAcGFyYW0ge051bWJlcn0gb3B0aW9ucy5kZWxheVxuICAgKi9cbiAgY29uc3RydWN0b3Iob3B0aW9ucykge1xuICAgIG9wdGlvbnMgPSB1dGlsLmV4dGVuZCh7XG4gICAgICB0aW1pbmc6ICdsaW5lYXInLFxuICAgICAgZHVyYXRpb246ICcwLjQnLFxuICAgICAgZGVsYXk6ICcwJ1xuICAgIH0sIG9wdGlvbnMgfHwge30pO1xuXG4gICAgc3VwZXIob3B0aW9ucyk7XG4gIH1cblxuICBwdXNoKGVudGVyUGFnZSwgbGVhdmVQYWdlLCBjYWxsYmFjaykge1xuICAgIGNhbGxiYWNrKCk7XG4gIH1cblxuICBwb3AoZW50ZXJQYWdlLCBsZWF2ZVBhZ2UsIGNhbGxiYWNrKSB7XG4gICAgY2FsbGJhY2soKTtcbiAgfVxuXG4gIGJsb2NrKHBhZ2UpIHtcbiAgICBjb25zdCBibG9ja2VyID0gdXRpbC5jcmVhdGVFbGVtZW50KGBcbiAgICAgIDxkaXYgc3R5bGU9XCJwb3NpdGlvbjogYWJzb2x1dGU7IGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50OyB3aWR0aDogMTAwJTsgaGVpZ2h0OiAxMDAlOyB6LWluZGV4OiAxMDAwMDBcIj48L2Rpdj5cbiAgICBgKTtcbiAgICBwYWdlLnBhcmVudE5vZGUuYXBwZW5kQ2hpbGQoYmxvY2tlcik7XG4gICAgcmV0dXJuICgpID0+IGJsb2NrZXIucmVtb3ZlKCk7XG4gIH1cbn1cblxuIiwiLypcbkNvcHlyaWdodCAyMDEzLTIwMTUgQVNJQUwgQ09SUE9SQVRJT05cblxuTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbnlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbllvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuXG4gICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcblxuVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG5TZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG5saW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cblxuKi9cblxuaW1wb3J0IE5hdmlnYXRvclRyYW5zaXRpb25BbmltYXRvciBmcm9tICcuL2FuaW1hdG9yJztcbmltcG9ydCB1dGlsIGZyb20gJy4uLy4uL29ucy91dGlsJztcbmltcG9ydCBhbmltaXQgZnJvbSAnLi4vLi4vb25zL2FuaW1pdCc7XG5pbXBvcnQgY29udGVudFJlYWR5IGZyb20gJy4uLy4uL29ucy9jb250ZW50LXJlYWR5JztcblxuLyoqXG4gKiBTbGlkZSBhbmltYXRvciBmb3IgbmF2aWdhdG9yIHRyYW5zaXRpb24gbGlrZSBpT1MncyBzY3JlZW4gc2xpZGUgdHJhbnNpdGlvbi5cbiAqL1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgSU9TU2xpZGVOYXZpZ2F0b3JUcmFuc2l0aW9uQW5pbWF0b3IgZXh0ZW5kcyBOYXZpZ2F0b3JUcmFuc2l0aW9uQW5pbWF0b3Ige1xuXG4gIGNvbnN0cnVjdG9yKHt0aW1pbmcgPSAnZWFzZScsIGRlbGF5ID0gMCwgZHVyYXRpb24gPSAwLjR9ID0ge30pIHtcbiAgICBzdXBlcih7IHRpbWluZywgZGVsYXksIGR1cmF0aW9uIH0pO1xuXG4gICAgdGhpcy5iYWNrZ3JvdW5kTWFzayA9IHV0aWwuY3JlYXRlRWxlbWVudChgXG4gICAgICA8ZGl2IHN0eWxlPVwicG9zaXRpb246IGFic29sdXRlOyB3aWR0aDogMTAwJTsgaGVpZ2h0OiAxMDAlO1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiBibGFjazsgb3BhY2l0eTogMDsgei1pbmRleDogMlwiPjwvZGl2PlxuICAgIGApO1xuXG4gIH1cblxuICBfZGVjb21wb3NlKHBhZ2UpIHtcbiAgICBjb25zdCB0b29sYmFyID0gcGFnZS5fZ2V0VG9vbGJhckVsZW1lbnQoKTtcbiAgICBjb25zdCBsZWZ0ID0gdG9vbGJhci5fZ2V0VG9vbGJhckxlZnRJdGVtc0VsZW1lbnQoKTtcbiAgICBjb25zdCByaWdodCA9IHRvb2xiYXIuX2dldFRvb2xiYXJSaWdodEl0ZW1zRWxlbWVudCgpO1xuXG4gICAgY29uc3QgZXhjbHVkZUJhY2tCdXR0b24gPSBmdW5jdGlvbihlbGVtZW50cykge1xuICAgICAgY29uc3QgcmVzdWx0ID0gW107XG5cbiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgZWxlbWVudHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgaWYgKGVsZW1lbnRzW2ldLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkgIT09ICdvbnMtYmFjay1idXR0b24nKSB7XG4gICAgICAgICAgcmVzdWx0LnB1c2goZWxlbWVudHNbaV0pO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfTtcblxuICAgIGNvbnN0IG90aGVyID0gW11cbiAgICAgIC5jb25jYXQobGVmdC5jaGlsZHJlbi5sZW5ndGggPT09IDAgPyBsZWZ0IDogZXhjbHVkZUJhY2tCdXR0b24obGVmdC5jaGlsZHJlbikpXG4gICAgICAuY29uY2F0KHJpZ2h0LmNoaWxkcmVuLmxlbmd0aCA9PT0gMCA/IHJpZ2h0IDogZXhjbHVkZUJhY2tCdXR0b24ocmlnaHQuY2hpbGRyZW4pKTtcblxuICAgIHJldHVybiB7XG4gICAgICB0b29sYmFyQ2VudGVyOiB0b29sYmFyLl9nZXRUb29sYmFyQ2VudGVySXRlbXNFbGVtZW50KCksXG4gICAgICBiYWNrQnV0dG9uSWNvbjogdG9vbGJhci5fZ2V0VG9vbGJhckJhY2tCdXR0b25JY29uRWxlbWVudCgpLFxuICAgICAgYmFja0J1dHRvbkxhYmVsOiB0b29sYmFyLl9nZXRUb29sYmFyQmFja0J1dHRvbkxhYmVsRWxlbWVudCgpLFxuICAgICAgb3RoZXI6IG90aGVyLFxuICAgICAgY29udGVudDogcGFnZS5fZ2V0Q29udGVudEVsZW1lbnQoKSxcbiAgICAgIGJhY2tncm91bmQ6IHBhZ2UuX2dldEJhY2tncm91bmRFbGVtZW50KCksXG4gICAgICB0b29sYmFyOiB0b29sYmFyLFxuICAgICAgYm90dG9tVG9vbGJhcjogcGFnZS5fZ2V0Qm90dG9tVG9vbGJhckVsZW1lbnQoKVxuICAgIH07XG4gIH1cblxuICBfc2hvdWxkQW5pbWF0ZVRvb2xiYXIoZW50ZXJQYWdlLCBsZWF2ZVBhZ2UpIHtcbiAgICBjb25zdCBib3RoUGFnZUhhc1Rvb2xiYXIgPVxuICAgICAgZW50ZXJQYWdlLl9jYW5BbmltYXRlVG9vbGJhcigpICYmIGxlYXZlUGFnZS5fY2FuQW5pbWF0ZVRvb2xiYXIoKTtcblxuICAgIHZhciBub01hdGVyaWFsVG9vbGJhciA9XG4gICAgICAhZW50ZXJQYWdlLl9nZXRUb29sYmFyRWxlbWVudCgpLmNsYXNzTGlzdC5jb250YWlucygndG9vbGJhci0tbWF0ZXJpYWwnKSAmJlxuICAgICAgIWxlYXZlUGFnZS5fZ2V0VG9vbGJhckVsZW1lbnQoKS5jbGFzc0xpc3QuY29udGFpbnMoJ3Rvb2xiYXItLW1hdGVyaWFsJyk7XG5cbiAgICByZXR1cm4gYm90aFBhZ2VIYXNUb29sYmFyICYmIG5vTWF0ZXJpYWxUb29sYmFyO1xuICB9XG5cbiAgX2NhbGN1bGF0ZURlbHRhKGVsZW1lbnQsIGRlY29tcG9zaXRpb24pIHtcbiAgICBsZXQgdGl0bGUsIGxhYmVsO1xuXG4gICAgY29uc3QgcGFnZVJlY3QgPSBlbGVtZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICAgIGlmIChkZWNvbXBvc2l0aW9uLmJhY2tCdXR0b25MYWJlbC5jbGFzc0xpc3QuY29udGFpbnMoJ2JhY2stYnV0dG9uX19sYWJlbCcpKSB7XG4gICAgICBjb25zdCBsYWJlbFJlY3QgPSBkZWNvbXBvc2l0aW9uLmJhY2tCdXR0b25MYWJlbC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgICAgIHRpdGxlID0gTWF0aC5yb3VuZCgocGFnZVJlY3Qud2lkdGggLyAyKSAtIChsYWJlbFJlY3Qud2lkdGggLyAyKSAtIGxhYmVsUmVjdC5sZWZ0KTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGl0bGUgPSBNYXRoLnJvdW5kKChwYWdlUmVjdC53aWR0aCAvIDIpICogMC42KTtcbiAgICB9XG5cbiAgICBpZiAoZGVjb21wb3NpdGlvbi5iYWNrQnV0dG9uSWNvbi5jbGFzc0xpc3QuY29udGFpbnMoJ2JhY2stYnV0dG9uX19pY29uJykpIHtcbiAgICAgIGxhYmVsID0gZGVjb21wb3NpdGlvbi5iYWNrQnV0dG9uSWNvbi5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS5yaWdodCAtIDI7XG4gICAgfVxuXG4gICAgcmV0dXJuIHt0aXRsZSwgbGFiZWx9XG4gIH1cblxuICAvKipcbiAgICogQHBhcmFtIHtPYmplY3R9IGVudGVyUGFnZVxuICAgKiBAcGFyYW0ge09iamVjdH0gbGVhdmVQYWdlXG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IGNhbGxiYWNrXG4gICAqL1xuICBwdXNoKGVudGVyUGFnZSwgbGVhdmVQYWdlLCBjYWxsYmFjaykge1xuICAgIHRoaXMuYmFja2dyb3VuZE1hc2sucmVtb3ZlKCk7XG4gICAgbGVhdmVQYWdlLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKHRoaXMuYmFja2dyb3VuZE1hc2ssIGxlYXZlUGFnZS5uZXh0U2libGluZyk7XG5cbiAgICBjb25zdCB1bmJsb2NrID0gc3VwZXIuYmxvY2soZW50ZXJQYWdlKTtcblxuICAgIGNvbnRlbnRSZWFkeShlbnRlclBhZ2UsICgpID0+IHtcbiAgICAgIGNvbnN0IGVudGVyUGFnZVRhcmdldCA9IHV0aWwuZmluZFRvb2xiYXJQYWdlKGVudGVyUGFnZSkgfHwgZW50ZXJQYWdlO1xuICAgICAgY29uc3QgbGVhdmVQYWdlVGFyZ2V0ID0gdXRpbC5maW5kVG9vbGJhclBhZ2UobGVhdmVQYWdlKSB8fCBsZWF2ZVBhZ2U7XG4gICAgICBjb25zdCBlbnRlclBhZ2VEZWNvbXBvc2l0aW9uID0gdGhpcy5fZGVjb21wb3NlKGVudGVyUGFnZVRhcmdldCk7XG4gICAgICBjb25zdCBsZWF2ZVBhZ2VEZWNvbXBvc2l0aW9uID0gdGhpcy5fZGVjb21wb3NlKGxlYXZlUGFnZVRhcmdldCk7XG5cbiAgICAgIGNvbnN0IGRlbHRhID0gdGhpcy5fY2FsY3VsYXRlRGVsdGEobGVhdmVQYWdlLCBlbnRlclBhZ2VEZWNvbXBvc2l0aW9uKTtcblxuICAgICAgY29uc3QgbWFza0NsZWFyID0gYW5pbWl0KHRoaXMuYmFja2dyb3VuZE1hc2spXG4gICAgICAgIC5zYXZlU3R5bGUoKVxuICAgICAgICAucXVldWUoe1xuICAgICAgICAgIG9wYWNpdHk6IDAsXG4gICAgICAgICAgdHJhbnNmb3JtOiAndHJhbnNsYXRlM2QoMCwgMCwgMCknXG4gICAgICAgIH0pXG4gICAgICAgIC53YWl0KHRoaXMuZGVsYXkpXG4gICAgICAgIC5xdWV1ZSh7XG4gICAgICAgICAgb3BhY2l0eTogMC4wNVxuICAgICAgICB9LCB7XG4gICAgICAgICAgZHVyYXRpb246IHRoaXMuZHVyYXRpb24sXG4gICAgICAgICAgdGltaW5nOiB0aGlzLnRpbWluZ1xuICAgICAgICB9KVxuICAgICAgICAucmVzdG9yZVN0eWxlKClcbiAgICAgICAgLnF1ZXVlKChkb25lKSA9PiB7XG4gICAgICAgICAgdGhpcy5iYWNrZ3JvdW5kTWFzay5yZW1vdmUoKTtcbiAgICAgICAgICBkb25lKCk7XG4gICAgICAgIH0pO1xuXG4gICAgICBjb25zdCBzaG91bGRBbmltYXRlVG9vbGJhciA9IHRoaXMuX3Nob3VsZEFuaW1hdGVUb29sYmFyKGVudGVyUGFnZVRhcmdldCwgbGVhdmVQYWdlVGFyZ2V0KTtcblxuICAgICAgaWYgKHNob3VsZEFuaW1hdGVUb29sYmFyKSB7XG4gICAgICAgIC8vIFRPRE86IFJlbW92ZSB0aGlzIGZpeFxuICAgICAgICBjb25zdCBlbnRlclBhZ2VUb29sYmFySGVpZ2h0ID0gZW50ZXJQYWdlRGVjb21wb3NpdGlvbi50b29sYmFyLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLmhlaWdodCArICdweCc7XG4gICAgICAgIHRoaXMuYmFja2dyb3VuZE1hc2suc3R5bGUudG9wID0gZW50ZXJQYWdlVG9vbGJhckhlaWdodDtcblxuICAgICAgICBhbmltaXQucnVuQWxsKFxuXG4gICAgICAgICAgbWFza0NsZWFyLFxuXG4gICAgICAgICAgYW5pbWl0KFtlbnRlclBhZ2VEZWNvbXBvc2l0aW9uLmNvbnRlbnQsIGVudGVyUGFnZURlY29tcG9zaXRpb24uYm90dG9tVG9vbGJhciwgZW50ZXJQYWdlRGVjb21wb3NpdGlvbi5iYWNrZ3JvdW5kXSlcbiAgICAgICAgICAgIC5zYXZlU3R5bGUoKVxuICAgICAgICAgICAgLnF1ZXVlKHtcbiAgICAgICAgICAgICAgY3NzOiB7XG4gICAgICAgICAgICAgICAgdHJhbnNmb3JtOiAndHJhbnNsYXRlM0QoMTAwJSwgMHB4LCAwcHgpJyxcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgZHVyYXRpb246IDBcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAud2FpdCh0aGlzLmRlbGF5KVxuICAgICAgICAgICAgLnF1ZXVlKHtcbiAgICAgICAgICAgICAgY3NzOiB7XG4gICAgICAgICAgICAgICAgdHJhbnNmb3JtOiAndHJhbnNsYXRlM0QoMHB4LCAwcHgsIDBweCknLFxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICBkdXJhdGlvbjogdGhpcy5kdXJhdGlvbixcbiAgICAgICAgICAgICAgdGltaW5nOiB0aGlzLnRpbWluZ1xuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIC5yZXN0b3JlU3R5bGUoKSxcblxuICAgICAgICAgIGFuaW1pdChlbnRlclBhZ2VEZWNvbXBvc2l0aW9uLnRvb2xiYXIpXG4gICAgICAgICAgICAuc2F2ZVN0eWxlKClcbiAgICAgICAgICAgIC5xdWV1ZSh7XG4gICAgICAgICAgICAgIGNzczoge1xuICAgICAgICAgICAgICAgIG9wYWNpdHk6IDBcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgZHVyYXRpb246IDBcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAucXVldWUoe1xuICAgICAgICAgICAgICBjc3M6IHtcbiAgICAgICAgICAgICAgICBvcGFjaXR5OiAxXG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIGR1cmF0aW9uOiB0aGlzLmR1cmF0aW9uLFxuICAgICAgICAgICAgICB0aW1pbmc6IHRoaXMudGltaW5nXG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgLnJlc3RvcmVTdHlsZSgpLFxuXG4gICAgICAgICAgYW5pbWl0KGVudGVyUGFnZURlY29tcG9zaXRpb24uYmFja2dyb3VuZClcbiAgICAgICAgICAgIC5xdWV1ZSh7XG4gICAgICAgICAgICAgIGNzczoge1xuICAgICAgICAgICAgICAgIHRvcDogZW50ZXJQYWdlVG9vbGJhckhlaWdodFxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICBkdXJhdGlvbjogMFxuICAgICAgICAgICAgfSksXG5cbiAgICAgICAgICBhbmltaXQoZW50ZXJQYWdlRGVjb21wb3NpdGlvbi50b29sYmFyQ2VudGVyKVxuICAgICAgICAgICAgLnNhdmVTdHlsZSgpXG4gICAgICAgICAgICAucXVldWUoe1xuICAgICAgICAgICAgICBjc3M6IHtcbiAgICAgICAgICAgICAgICB0cmFuc2Zvcm06ICd0cmFuc2xhdGUzZCgxMjUlLCAwLCAwKScsXG4gICAgICAgICAgICAgICAgb3BhY2l0eTogMVxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICBkdXJhdGlvbjogMFxuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIC53YWl0KHRoaXMuZGVsYXkpXG4gICAgICAgICAgICAucXVldWUoe1xuICAgICAgICAgICAgICBjc3M6IHtcbiAgICAgICAgICAgICAgICB0cmFuc2Zvcm06ICd0cmFuc2xhdGUzZCgwLCAwLCAwKScsXG4gICAgICAgICAgICAgICAgb3BhY2l0eTogMS4wXG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIGR1cmF0aW9uOiB0aGlzLmR1cmF0aW9uLFxuICAgICAgICAgICAgICB0aW1pbmc6IHRoaXMudGltaW5nXG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgLnJlc3RvcmVTdHlsZSgpLFxuXG4gICAgICAgICAgYW5pbWl0KGVudGVyUGFnZURlY29tcG9zaXRpb24uYmFja0J1dHRvbkxhYmVsKVxuICAgICAgICAgICAgLnNhdmVTdHlsZSgpXG4gICAgICAgICAgICAucXVldWUoe1xuICAgICAgICAgICAgICBjc3M6IHtcbiAgICAgICAgICAgICAgICB0cmFuc2Zvcm06ICd0cmFuc2xhdGUzZCgnICsgZGVsdGEudGl0bGUgKyAncHgsIDAsIDApJyxcbiAgICAgICAgICAgICAgICBvcGFjaXR5OiAwXG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIGR1cmF0aW9uOiAwXG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgLndhaXQodGhpcy5kZWxheSlcbiAgICAgICAgICAgIC5xdWV1ZSh7XG4gICAgICAgICAgICAgIGNzczoge1xuICAgICAgICAgICAgICAgIHRyYW5zZm9ybTogJ3RyYW5zbGF0ZTNkKDAsIDAsIDApJyxcbiAgICAgICAgICAgICAgICBvcGFjaXR5OiAxLjBcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgZHVyYXRpb246IHRoaXMuZHVyYXRpb24sXG4gICAgICAgICAgICAgIHRpbWluZzogdGhpcy50aW1pbmdcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAucmVzdG9yZVN0eWxlKCksXG5cbiAgICAgICAgICBhbmltaXQoZW50ZXJQYWdlRGVjb21wb3NpdGlvbi5vdGhlcilcbiAgICAgICAgICAgIC5zYXZlU3R5bGUoKVxuICAgICAgICAgICAgLnF1ZXVlKHtcbiAgICAgICAgICAgICAgY3NzOiB7b3BhY2l0eTogMH0sXG4gICAgICAgICAgICAgIGR1cmF0aW9uOiAwXG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgLndhaXQodGhpcy5kZWxheSlcbiAgICAgICAgICAgIC5xdWV1ZSh7XG4gICAgICAgICAgICAgIGNzczoge29wYWNpdHk6IDF9LFxuICAgICAgICAgICAgICBkdXJhdGlvbjogdGhpcy5kdXJhdGlvbixcbiAgICAgICAgICAgICAgdGltaW5nOiB0aGlzLnRpbWluZ1xuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIC5yZXN0b3JlU3R5bGUoKSxcblxuICAgICAgICAgIGFuaW1pdChbbGVhdmVQYWdlRGVjb21wb3NpdGlvbi5jb250ZW50LCBsZWF2ZVBhZ2VEZWNvbXBvc2l0aW9uLmJvdHRvbVRvb2xiYXIsIGxlYXZlUGFnZURlY29tcG9zaXRpb24uYmFja2dyb3VuZF0pXG4gICAgICAgICAgICAuc2F2ZVN0eWxlKClcbiAgICAgICAgICAgIC5xdWV1ZSh7XG4gICAgICAgICAgICAgIGNzczoge1xuICAgICAgICAgICAgICAgIHRyYW5zZm9ybTogJ3RyYW5zbGF0ZTNEKDAsIDAsIDApJyxcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgZHVyYXRpb246IDBcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAud2FpdCh0aGlzLmRlbGF5KVxuICAgICAgICAgICAgLnF1ZXVlKHtcbiAgICAgICAgICAgICAgY3NzOiB7XG4gICAgICAgICAgICAgICAgdHJhbnNmb3JtOiAndHJhbnNsYXRlM0QoLTI1JSwgMHB4LCAwcHgpJyxcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgZHVyYXRpb246IHRoaXMuZHVyYXRpb24sXG4gICAgICAgICAgICAgIHRpbWluZzogdGhpcy50aW1pbmdcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAucmVzdG9yZVN0eWxlKClcbiAgICAgICAgICAgIC5xdWV1ZShkb25lID0+IHtcbiAgICAgICAgICAgICAgdW5ibG9jaygpO1xuICAgICAgICAgICAgICBjYWxsYmFjaygpO1xuICAgICAgICAgICAgICBkb25lKCk7XG4gICAgICAgICAgICB9KSxcblxuICAgICAgICAgIGFuaW1pdChsZWF2ZVBhZ2VEZWNvbXBvc2l0aW9uLnRvb2xiYXJDZW50ZXIpXG4gICAgICAgICAgICAuc2F2ZVN0eWxlKClcbiAgICAgICAgICAgIC5xdWV1ZSh7XG4gICAgICAgICAgICAgIGNzczoge1xuICAgICAgICAgICAgICAgIHRyYW5zZm9ybTogJ3RyYW5zbGF0ZTNkKDAsIDAsIDApJyxcbiAgICAgICAgICAgICAgICBvcGFjaXR5OiAxLjBcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgZHVyYXRpb246IDBcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAud2FpdCh0aGlzLmRlbGF5KVxuICAgICAgICAgICAgLnF1ZXVlKHtcbiAgICAgICAgICAgICAgY3NzOiB7XG4gICAgICAgICAgICAgICAgdHJhbnNmb3JtOiAndHJhbnNsYXRlM2QoLScgKyBkZWx0YS50aXRsZSArICdweCwgMCwgMCknLFxuICAgICAgICAgICAgICAgIG9wYWNpdHk6IDAsXG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIGR1cmF0aW9uOiB0aGlzLmR1cmF0aW9uLFxuICAgICAgICAgICAgICB0aW1pbmc6IHRoaXMudGltaW5nXG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgLnJlc3RvcmVTdHlsZSgpLFxuXG4gICAgICAgICAgYW5pbWl0KGxlYXZlUGFnZURlY29tcG9zaXRpb24uYmFja0J1dHRvbkxhYmVsKVxuICAgICAgICAgICAgLnNhdmVTdHlsZSgpXG4gICAgICAgICAgICAucXVldWUoe1xuICAgICAgICAgICAgICBjc3M6IHtcbiAgICAgICAgICAgICAgICB0cmFuc2Zvcm06ICd0cmFuc2xhdGUzZCgwLCAwLCAwKScsXG4gICAgICAgICAgICAgICAgb3BhY2l0eTogMS4wXG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIGR1cmF0aW9uOiAwXG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgLndhaXQodGhpcy5kZWxheSlcbiAgICAgICAgICAgIC5xdWV1ZSh7XG4gICAgICAgICAgICAgIGNzczoge1xuICAgICAgICAgICAgICAgIHRyYW5zZm9ybTogJ3RyYW5zbGF0ZTNkKC0nICsgZGVsdGEubGFiZWwgKyAncHgsIDAsIDApJyxcbiAgICAgICAgICAgICAgICBvcGFjaXR5OiAwLFxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICBkdXJhdGlvbjogdGhpcy5kdXJhdGlvbixcbiAgICAgICAgICAgICAgdGltaW5nOiB0aGlzLnRpbWluZ1xuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIC5yZXN0b3JlU3R5bGUoKSxcblxuICAgICAgICAgIGFuaW1pdChsZWF2ZVBhZ2VEZWNvbXBvc2l0aW9uLm90aGVyKVxuICAgICAgICAgICAgLnNhdmVTdHlsZSgpXG4gICAgICAgICAgICAucXVldWUoe1xuICAgICAgICAgICAgICBjc3M6IHtvcGFjaXR5OiAxfSxcbiAgICAgICAgICAgICAgZHVyYXRpb246IDBcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAud2FpdCh0aGlzLmRlbGF5KVxuICAgICAgICAgICAgLnF1ZXVlKHtcbiAgICAgICAgICAgICAgY3NzOiB7b3BhY2l0eTogMH0sXG4gICAgICAgICAgICAgIGR1cmF0aW9uOiB0aGlzLmR1cmF0aW9uLFxuICAgICAgICAgICAgICB0aW1pbmc6IHRoaXMudGltaW5nXG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgLnJlc3RvcmVTdHlsZSgpXG5cbiAgICAgICAgKTtcblxuICAgICAgfSBlbHNlIHtcblxuICAgICAgICBhbmltaXQucnVuQWxsKFxuXG4gICAgICAgICAgbWFza0NsZWFyLFxuXG4gICAgICAgICAgYW5pbWl0KGVudGVyUGFnZSlcbiAgICAgICAgICAgIC5zYXZlU3R5bGUoKVxuICAgICAgICAgICAgLnF1ZXVlKHtcbiAgICAgICAgICAgICAgY3NzOiB7XG4gICAgICAgICAgICAgICAgdHJhbnNmb3JtOiAndHJhbnNsYXRlM0QoMTAwJSwgMHB4LCAwcHgpJyxcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgZHVyYXRpb246IDBcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAud2FpdCh0aGlzLmRlbGF5KVxuICAgICAgICAgICAgLnF1ZXVlKHtcbiAgICAgICAgICAgICAgY3NzOiB7XG4gICAgICAgICAgICAgICAgdHJhbnNmb3JtOiAndHJhbnNsYXRlM0QoMHB4LCAwcHgsIDBweCknLFxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICBkdXJhdGlvbjogdGhpcy5kdXJhdGlvbixcbiAgICAgICAgICAgICAgdGltaW5nOiB0aGlzLnRpbWluZ1xuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIC5yZXN0b3JlU3R5bGUoKSxcblxuICAgICAgICAgIGFuaW1pdChsZWF2ZVBhZ2UpXG4gICAgICAgICAgICAuc2F2ZVN0eWxlKClcbiAgICAgICAgICAgIC5xdWV1ZSh7XG4gICAgICAgICAgICAgIGNzczoge1xuICAgICAgICAgICAgICAgIHRyYW5zZm9ybTogJ3RyYW5zbGF0ZTNEKDAsIDAsIDApJ1xuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICBkdXJhdGlvbjogMFxuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIC53YWl0KHRoaXMuZGVsYXkpXG4gICAgICAgICAgICAucXVldWUoe1xuICAgICAgICAgICAgICBjc3M6IHtcbiAgICAgICAgICAgICAgICB0cmFuc2Zvcm06ICd0cmFuc2xhdGUzRCgtMjUlLCAwcHgsIDBweCknXG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIGR1cmF0aW9uOiB0aGlzLmR1cmF0aW9uLFxuICAgICAgICAgICAgICB0aW1pbmc6IHRoaXMudGltaW5nXG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgLnJlc3RvcmVTdHlsZSgpXG4gICAgICAgICAgICAucXVldWUoZG9uZSA9PiB7XG4gICAgICAgICAgICAgIHVuYmxvY2soKTtcbiAgICAgICAgICAgICAgY2FsbGJhY2soKTtcbiAgICAgICAgICAgICAgZG9uZSgpO1xuICAgICAgICAgICAgfSlcbiAgICAgICAgKTtcblxuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBlbnRlclBhZ2VcbiAgICogQHBhcmFtIHtPYmplY3R9IGxlYXZlUGFnZVxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBjYWxsYmFja1xuICAgKi9cbiAgcG9wKGVudGVyUGFnZSwgbGVhdmVQYWdlLCBjYWxsYmFjaykge1xuICAgIHRoaXMuYmFja2dyb3VuZE1hc2sucmVtb3ZlKCk7XG4gICAgZW50ZXJQYWdlLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKHRoaXMuYmFja2dyb3VuZE1hc2ssIGVudGVyUGFnZS5uZXh0U2libGluZyk7XG5cbiAgICBjb25zdCB1bmJsb2NrID0gc3VwZXIuYmxvY2soZW50ZXJQYWdlKTtcblxuICAgIGNvbnN0IGVudGVyUGFnZVRhcmdldCA9IHV0aWwuZmluZFRvb2xiYXJQYWdlKGVudGVyUGFnZSkgfHwgZW50ZXJQYWdlO1xuICAgIGNvbnN0IGxlYXZlUGFnZVRhcmdldCA9IHV0aWwuZmluZFRvb2xiYXJQYWdlKGxlYXZlUGFnZSkgfHwgbGVhdmVQYWdlO1xuICAgIGNvbnN0IGVudGVyUGFnZURlY29tcG9zaXRpb24gPSB0aGlzLl9kZWNvbXBvc2UoZW50ZXJQYWdlVGFyZ2V0KTtcbiAgICBjb25zdCBsZWF2ZVBhZ2VEZWNvbXBvc2l0aW9uID0gdGhpcy5fZGVjb21wb3NlKGxlYXZlUGFnZVRhcmdldCk7XG5cbiAgICBjb25zdCBkZWx0YSA9IHRoaXMuX2NhbGN1bGF0ZURlbHRhKGxlYXZlUGFnZSwgbGVhdmVQYWdlRGVjb21wb3NpdGlvbik7XG5cbiAgICBjb25zdCBtYXNrQ2xlYXIgPSBhbmltaXQodGhpcy5iYWNrZ3JvdW5kTWFzaylcbiAgICAgIC5zYXZlU3R5bGUoKVxuICAgICAgLnF1ZXVlKHtcbiAgICAgICAgb3BhY2l0eTogMC4xLFxuICAgICAgICB0cmFuc2Zvcm06ICd0cmFuc2xhdGUzZCgwLCAwLCAwKSdcbiAgICAgIH0pXG4gICAgICAud2FpdCh0aGlzLmRlbGF5KVxuICAgICAgLnF1ZXVlKHtcbiAgICAgICAgb3BhY2l0eTogMFxuICAgICAgfSwge1xuICAgICAgICBkdXJhdGlvbjogdGhpcy5kdXJhdGlvbixcbiAgICAgICAgdGltaW5nOiB0aGlzLnRpbWluZ1xuICAgICAgfSlcbiAgICAgIC5yZXN0b3JlU3R5bGUoKVxuICAgICAgLnF1ZXVlKChkb25lKSA9PiB7XG4gICAgICAgIGRvbmUoKTtcbiAgICAgIH0pO1xuXG4gICAgY29uc3Qgc2hvdWxkQW5pbWF0ZVRvb2xiYXIgPSB0aGlzLl9zaG91bGRBbmltYXRlVG9vbGJhcihlbnRlclBhZ2VUYXJnZXQsIGxlYXZlUGFnZVRhcmdldCk7XG5cbiAgICBpZiAoc2hvdWxkQW5pbWF0ZVRvb2xiYXIpIHtcbiAgICAgIGNvbnN0IGVudGVyUGFnZVRvb2xiYXJIZWlnaHQgPSBlbnRlclBhZ2VEZWNvbXBvc2l0aW9uLnRvb2xiYXIuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkuaGVpZ2h0ICsgJ3B4JztcbiAgICAgIHRoaXMuYmFja2dyb3VuZE1hc2suc3R5bGUudG9wID0gZW50ZXJQYWdlVG9vbGJhckhlaWdodDtcblxuICAgICAgYW5pbWl0LnJ1bkFsbChcblxuICAgICAgICBtYXNrQ2xlYXIsXG5cbiAgICAgICAgYW5pbWl0KFtlbnRlclBhZ2VEZWNvbXBvc2l0aW9uLmNvbnRlbnQsIGVudGVyUGFnZURlY29tcG9zaXRpb24uYm90dG9tVG9vbGJhciwgZW50ZXJQYWdlRGVjb21wb3NpdGlvbi5iYWNrZ3JvdW5kXSlcbiAgICAgICAgICAuc2F2ZVN0eWxlKClcbiAgICAgICAgICAucXVldWUoe1xuICAgICAgICAgICAgY3NzOiB7XG4gICAgICAgICAgICAgIHRyYW5zZm9ybTogJ3RyYW5zbGF0ZTNEKC0yNSUsIDBweCwgMHB4KScsXG4gICAgICAgICAgICAgIG9wYWNpdHk6IDAuOVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGR1cmF0aW9uOiAwXG4gICAgICAgICAgfSlcbiAgICAgICAgICAud2FpdCh0aGlzLmRlbGF5KVxuICAgICAgICAgIC5xdWV1ZSh7XG4gICAgICAgICAgICBjc3M6IHtcbiAgICAgICAgICAgICAgdHJhbnNmb3JtOiAndHJhbnNsYXRlM0QoMHB4LCAwcHgsIDBweCknLFxuICAgICAgICAgICAgICBvcGFjaXR5OiAxLjBcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBkdXJhdGlvbjogdGhpcy5kdXJhdGlvbixcbiAgICAgICAgICAgIHRpbWluZzogdGhpcy50aW1pbmdcbiAgICAgICAgICB9KVxuICAgICAgICAgIC5yZXN0b3JlU3R5bGUoKSxcblxuICAgICAgICBhbmltaXQoZW50ZXJQYWdlRGVjb21wb3NpdGlvbi50b29sYmFyQ2VudGVyKVxuICAgICAgICAgIC5zYXZlU3R5bGUoKVxuICAgICAgICAgIC5xdWV1ZSh7XG4gICAgICAgICAgICBjc3M6IHtcbiAgICAgICAgICAgICAgdHJhbnNmb3JtOiAndHJhbnNsYXRlM2QoLScgKyBkZWx0YS50aXRsZSArICdweCwgMCwgMCknLFxuICAgICAgICAgICAgICBvcGFjaXR5OiAwXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZHVyYXRpb246IDBcbiAgICAgICAgICB9KVxuICAgICAgICAgIC53YWl0KHRoaXMuZGVsYXkpXG4gICAgICAgICAgLnF1ZXVlKHtcbiAgICAgICAgICAgIGNzczoge1xuICAgICAgICAgICAgICB0cmFuc2Zvcm06ICd0cmFuc2xhdGUzZCgwLCAwLCAwKScsXG4gICAgICAgICAgICAgIG9wYWNpdHk6IDEuMFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGR1cmF0aW9uOiB0aGlzLmR1cmF0aW9uLFxuICAgICAgICAgICAgdGltaW5nOiB0aGlzLnRpbWluZ1xuICAgICAgICAgIH0pXG4gICAgICAgICAgLnJlc3RvcmVTdHlsZSgpLFxuXG4gICAgICAgIGFuaW1pdChlbnRlclBhZ2VEZWNvbXBvc2l0aW9uLmJhY2tCdXR0b25MYWJlbClcbiAgICAgICAgICAuc2F2ZVN0eWxlKClcbiAgICAgICAgICAucXVldWUoe1xuICAgICAgICAgICAgY3NzOiB7XG4gICAgICAgICAgICAgIHRyYW5zZm9ybTogJ3RyYW5zbGF0ZTNkKC0nICsgZGVsdGEubGFiZWwgKyAncHgsIDAsIDApJ1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGR1cmF0aW9uOiAwXG4gICAgICAgICAgfSlcbiAgICAgICAgICAud2FpdCh0aGlzLmRlbGF5KVxuICAgICAgICAgIC5xdWV1ZSh7XG4gICAgICAgICAgICBjc3M6IHtcbiAgICAgICAgICAgICAgdHJhbnNmb3JtOiAndHJhbnNsYXRlM2QoMCwgMCwgMCknXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZHVyYXRpb246IHRoaXMuZHVyYXRpb24sXG4gICAgICAgICAgICB0aW1pbmc6IHRoaXMudGltaW5nXG4gICAgICAgICAgfSlcbiAgICAgICAgICAucmVzdG9yZVN0eWxlKCksXG5cbiAgICAgICAgYW5pbWl0KGVudGVyUGFnZURlY29tcG9zaXRpb24ub3RoZXIpXG4gICAgICAgICAgLnNhdmVTdHlsZSgpXG4gICAgICAgICAgLnF1ZXVlKHtcbiAgICAgICAgICAgIGNzczoge29wYWNpdHk6IDB9LFxuICAgICAgICAgICAgZHVyYXRpb246IDBcbiAgICAgICAgICB9KVxuICAgICAgICAgIC53YWl0KHRoaXMuZGVsYXkpXG4gICAgICAgICAgLnF1ZXVlKHtcbiAgICAgICAgICAgIGNzczoge29wYWNpdHk6IDF9LFxuICAgICAgICAgICAgZHVyYXRpb246IHRoaXMuZHVyYXRpb24sXG4gICAgICAgICAgICB0aW1pbmc6IHRoaXMudGltaW5nXG4gICAgICAgICAgfSlcbiAgICAgICAgICAucmVzdG9yZVN0eWxlKCksXG5cbiAgICAgICAgYW5pbWl0KGxlYXZlUGFnZURlY29tcG9zaXRpb24uYmFja2dyb3VuZClcbiAgICAgICAgICAucXVldWUoe1xuICAgICAgICAgICAgY3NzOiB7XG4gICAgICAgICAgICAgIHRvcDogZW50ZXJQYWdlVG9vbGJhckhlaWdodFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGR1cmF0aW9uOiAwXG4gICAgICAgICAgfSksXG5cbiAgICAgICAgYW5pbWl0KFtsZWF2ZVBhZ2VEZWNvbXBvc2l0aW9uLmNvbnRlbnQsIGxlYXZlUGFnZURlY29tcG9zaXRpb24uYm90dG9tVG9vbGJhciwgbGVhdmVQYWdlRGVjb21wb3NpdGlvbi5iYWNrZ3JvdW5kXSlcbiAgICAgICAgICAucXVldWUoe1xuICAgICAgICAgICAgY3NzOiB7XG4gICAgICAgICAgICAgIHRyYW5zZm9ybTogJ3RyYW5zbGF0ZTNEKDBweCwgMHB4LCAwcHgpJ1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGR1cmF0aW9uOiAwXG4gICAgICAgICAgfSlcbiAgICAgICAgICAud2FpdCh0aGlzLmRlbGF5KVxuICAgICAgICAgIC5xdWV1ZSh7XG4gICAgICAgICAgICBjc3M6IHtcbiAgICAgICAgICAgICAgdHJhbnNmb3JtOiAndHJhbnNsYXRlM0QoMTAwJSwgMHB4LCAwcHgpJ1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGR1cmF0aW9uOiB0aGlzLmR1cmF0aW9uLFxuICAgICAgICAgICAgdGltaW5nOiB0aGlzLnRpbWluZ1xuICAgICAgICAgIH0pXG4gICAgICAgICAgLndhaXQoMClcbiAgICAgICAgICAucXVldWUoZG9uZSA9PiB7XG4gICAgICAgICAgICB0aGlzLmJhY2tncm91bmRNYXNrLnJlbW92ZSgpO1xuICAgICAgICAgICAgdW5ibG9jaygpO1xuICAgICAgICAgICAgY2FsbGJhY2soKTtcbiAgICAgICAgICAgIGRvbmUoKTtcbiAgICAgICAgICB9KSxcblxuICAgICAgICBhbmltaXQobGVhdmVQYWdlRGVjb21wb3NpdGlvbi50b29sYmFyKVxuICAgICAgICAgIC5xdWV1ZSh7XG4gICAgICAgICAgICBjc3M6IHtcbiAgICAgICAgICAgICAgb3BhY2l0eTogMVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGR1cmF0aW9uOiAwXG4gICAgICAgICAgfSlcbiAgICAgICAgICAucXVldWUoe1xuICAgICAgICAgICAgY3NzOiB7XG4gICAgICAgICAgICAgIG9wYWNpdHk6IDBcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBkdXJhdGlvbjogdGhpcy5kdXJhdGlvbixcbiAgICAgICAgICAgIHRpbWluZzogdGhpcy50aW1pbmdcbiAgICAgICAgICB9KSxcblxuICAgICAgICBhbmltaXQobGVhdmVQYWdlRGVjb21wb3NpdGlvbi50b29sYmFyQ2VudGVyKVxuICAgICAgICAgIC5xdWV1ZSh7XG4gICAgICAgICAgICBjc3M6IHtcbiAgICAgICAgICAgICAgdHJhbnNmb3JtOiAndHJhbnNsYXRlM2QoMCwgMCwgMCknXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZHVyYXRpb246IDBcbiAgICAgICAgICB9KVxuICAgICAgICAgIC53YWl0KHRoaXMuZGVsYXkpXG4gICAgICAgICAgLnF1ZXVlKHtcbiAgICAgICAgICAgIGNzczoge1xuICAgICAgICAgICAgICB0cmFuc2Zvcm06ICd0cmFuc2xhdGUzZCgxMjUlLCAwLCAwKSdcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBkdXJhdGlvbjogdGhpcy5kdXJhdGlvbixcbiAgICAgICAgICAgIHRpbWluZzogdGhpcy50aW1pbmdcbiAgICAgICAgICB9KSxcblxuICAgICAgICBhbmltaXQobGVhdmVQYWdlRGVjb21wb3NpdGlvbi5iYWNrQnV0dG9uTGFiZWwpXG4gICAgICAgICAgLnF1ZXVlKHtcbiAgICAgICAgICAgIGNzczoge1xuICAgICAgICAgICAgICB0cmFuc2Zvcm06ICd0cmFuc2xhdGUzZCgwLCAwLCAwKScsXG4gICAgICAgICAgICAgIG9wYWNpdHk6IDFcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBkdXJhdGlvbjogMFxuICAgICAgICAgIH0pXG4gICAgICAgICAgLndhaXQodGhpcy5kZWxheSlcbiAgICAgICAgICAucXVldWUoe1xuICAgICAgICAgICAgY3NzOiB7XG4gICAgICAgICAgICAgIHRyYW5zZm9ybTogJ3RyYW5zbGF0ZTNkKCcgKyBkZWx0YS50aXRsZSArICdweCwgMCwgMCknLFxuICAgICAgICAgICAgICBvcGFjaXR5OiAwXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZHVyYXRpb246IHRoaXMuZHVyYXRpb24sXG4gICAgICAgICAgICB0aW1pbmc6IHRoaXMudGltaW5nXG4gICAgICAgICAgfSlcbiAgICAgICk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGFuaW1pdC5ydW5BbGwoXG5cbiAgICAgICAgbWFza0NsZWFyLFxuXG4gICAgICAgIGFuaW1pdChlbnRlclBhZ2UpXG4gICAgICAgICAgLnNhdmVTdHlsZSgpXG4gICAgICAgICAgLnF1ZXVlKHtcbiAgICAgICAgICAgIGNzczoge1xuICAgICAgICAgICAgICB0cmFuc2Zvcm06ICd0cmFuc2xhdGUzRCgtMjUlLCAwcHgsIDBweCknLFxuICAgICAgICAgICAgICBvcGFjaXR5OiAwLjlcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBkdXJhdGlvbjogMFxuICAgICAgICAgIH0pXG4gICAgICAgICAgLndhaXQodGhpcy5kZWxheSlcbiAgICAgICAgICAucXVldWUoe1xuICAgICAgICAgICAgY3NzOiB7XG4gICAgICAgICAgICAgIHRyYW5zZm9ybTogJ3RyYW5zbGF0ZTNEKDBweCwgMHB4LCAwcHgpJyxcbiAgICAgICAgICAgICAgb3BhY2l0eTogMS4wXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZHVyYXRpb246IHRoaXMuZHVyYXRpb24sXG4gICAgICAgICAgICB0aW1pbmc6IHRoaXMudGltaW5nXG4gICAgICAgICAgfSlcbiAgICAgICAgICAucmVzdG9yZVN0eWxlKCksXG5cbiAgICAgICAgYW5pbWl0KGxlYXZlUGFnZSlcbiAgICAgICAgICAucXVldWUoe1xuICAgICAgICAgICAgY3NzOiB7XG4gICAgICAgICAgICAgIHRyYW5zZm9ybTogJ3RyYW5zbGF0ZTNEKDBweCwgMHB4LCAwcHgpJ1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGR1cmF0aW9uOiAwXG4gICAgICAgICAgfSlcbiAgICAgICAgICAud2FpdCh0aGlzLmRlbGF5KVxuICAgICAgICAgIC5xdWV1ZSh7XG4gICAgICAgICAgICBjc3M6IHtcbiAgICAgICAgICAgICAgdHJhbnNmb3JtOiAndHJhbnNsYXRlM0QoMTAwJSwgMHB4LCAwcHgpJ1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGR1cmF0aW9uOiB0aGlzLmR1cmF0aW9uLFxuICAgICAgICAgICAgdGltaW5nOiB0aGlzLnRpbWluZ1xuICAgICAgICAgIH0pXG4gICAgICAgICAgLnF1ZXVlKGRvbmUgPT4ge1xuICAgICAgICAgICAgdGhpcy5iYWNrZ3JvdW5kTWFzay5yZW1vdmUoKTtcbiAgICAgICAgICAgIHVuYmxvY2soKTtcbiAgICAgICAgICAgIGNhbGxiYWNrKCk7XG4gICAgICAgICAgICBkb25lKCk7XG4gICAgICAgICAgfSlcbiAgICAgICk7XG4gICAgfVxuICB9XG59XG4iLCIvKlxuQ29weXJpZ2h0IDIwMTMtMjAxNSBBU0lBTCBDT1JQT1JBVElPTlxuXG5MaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xueW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG5cbiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuXG5Vbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG5kaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG5XSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cblNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbmxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuXG4qL1xuXG5pbXBvcnQgTmF2aWdhdG9yVHJhbnNpdGlvbkFuaW1hdG9yIGZyb20gJy4vYW5pbWF0b3InO1xuaW1wb3J0IHV0aWwgZnJvbSAnLi4vLi4vb25zL3V0aWwnO1xuaW1wb3J0IGFuaW1pdCBmcm9tICcuLi8uLi9vbnMvYW5pbWl0JztcblxuLyoqXG4gKiBMaWZ0IHNjcmVlbiB0cmFuc2l0aW9uLlxuICovXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBJT1NMaWZ0TmF2aWdhdG9yVHJhbnNpdGlvbkFuaW1hdG9yIGV4dGVuZHMgTmF2aWdhdG9yVHJhbnNpdGlvbkFuaW1hdG9yIHtcblxuICBjb25zdHJ1Y3Rvcih7dGltaW5nID0gJ2N1YmljLWJlemllciguMSwgLjcsIC4xLCAxKScsIGRlbGF5ID0gMCwgZHVyYXRpb24gPSAwLjR9ID0ge30pIHtcbiAgICBzdXBlcih7IHRpbWluZywgZGVsYXksIGR1cmF0aW9uIH0pO1xuXG4gICAgdGhpcy5iYWNrZ3JvdW5kTWFzayA9IHV0aWwuY3JlYXRlRWxlbWVudChgXG4gICAgICA8ZGl2IHN0eWxlPVwicG9zaXRpb246IGFic29sdXRlOyB3aWR0aDogMTAwJTsgaGVpZ2h0OiAxMDAlO1xuICAgICAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoYmxhY2ssIHdoaXRlKTtcIj48L2Rpdj5cbiAgICBgKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge09iamVjdH0gZW50ZXJQYWdlXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBsZWF2ZVBhZ2VcbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gY2FsbGJhY2tcbiAgICovXG4gIHB1c2goZW50ZXJQYWdlLCBsZWF2ZVBhZ2UsIGNhbGxiYWNrKSB7XG4gICAgdGhpcy5iYWNrZ3JvdW5kTWFzay5yZW1vdmUoKTtcbiAgICBsZWF2ZVBhZ2UucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUodGhpcy5iYWNrZ3JvdW5kTWFzaywgbGVhdmVQYWdlKTtcblxuICAgIGNvbnN0IHVuYmxvY2sgPSBzdXBlci5ibG9jayhlbnRlclBhZ2UpO1xuXG4gICAgY29uc3QgbWFza0NsZWFyID0gYW5pbWl0KHRoaXMuYmFja2dyb3VuZE1hc2spXG4gICAgICAud2FpdCh0aGlzLmRlbGF5ICsgdGhpcy5kdXJhdGlvbilcbiAgICAgIC5xdWV1ZShkb25lID0+IHtcbiAgICAgICAgdGhpcy5iYWNrZ3JvdW5kTWFzay5yZW1vdmUoKTtcbiAgICAgICAgZG9uZSgpO1xuICAgICAgfSk7XG5cbiAgICBhbmltaXQucnVuQWxsKFxuXG4gICAgICBtYXNrQ2xlYXIsXG5cbiAgICAgIGFuaW1pdChlbnRlclBhZ2UpXG4gICAgICAgIC5zYXZlU3R5bGUoKVxuICAgICAgICAucXVldWUoe1xuICAgICAgICAgIGNzczoge1xuICAgICAgICAgICAgdHJhbnNmb3JtOiAndHJhbnNsYXRlM0QoMCwgMTAwJSwgMCknLFxuICAgICAgICAgIH0sXG4gICAgICAgICAgZHVyYXRpb246IDBcbiAgICAgICAgfSlcbiAgICAgICAgLndhaXQodGhpcy5kZWxheSlcbiAgICAgICAgLnF1ZXVlKHtcbiAgICAgICAgICBjc3M6IHtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogJ3RyYW5zbGF0ZTNEKDAsIDAsIDApJyxcbiAgICAgICAgICB9LFxuICAgICAgICAgIGR1cmF0aW9uOiB0aGlzLmR1cmF0aW9uLFxuICAgICAgICAgIHRpbWluZzogdGhpcy50aW1pbmdcbiAgICAgICAgfSlcbiAgICAgICAgLnJlc3RvcmVTdHlsZSgpXG4gICAgICAgIC5xdWV1ZShkb25lID0+IHtcbiAgICAgICAgICB1bmJsb2NrKCk7XG4gICAgICAgICAgY2FsbGJhY2soKTtcbiAgICAgICAgICBkb25lKCk7XG4gICAgICAgIH0pLFxuXG4gICAgICBhbmltaXQobGVhdmVQYWdlKVxuICAgICAgICAucXVldWUoe1xuICAgICAgICAgIGNzczoge1xuICAgICAgICAgICAgdHJhbnNmb3JtOiAndHJhbnNsYXRlM0QoMCwgMCwgMCknLFxuICAgICAgICAgICAgb3BhY2l0eTogMS4wXG4gICAgICAgICAgfSxcbiAgICAgICAgICBkdXJhdGlvbjogMFxuICAgICAgICB9KVxuICAgICAgICAud2FpdCh0aGlzLmRlbGF5KVxuICAgICAgICAucXVldWUoe1xuICAgICAgICAgIGNzczoge1xuICAgICAgICAgICAgdHJhbnNmb3JtOiAndHJhbnNsYXRlM0QoMCwgLTEwJSwgMCknLFxuICAgICAgICAgICAgb3BhY2l0eTogMC45XG4gICAgICAgICAgfSxcbiAgICAgICAgICBkdXJhdGlvbjogdGhpcy5kdXJhdGlvbixcbiAgICAgICAgICB0aW1pbmc6IHRoaXMudGltaW5nXG4gICAgICAgIH0pXG4gICAgKTtcblxuICB9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBlbnRlclBhZ2VcbiAgICogQHBhcmFtIHtPYmplY3R9IGxlYXZlUGFnZVxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBjYWxsYmFja1xuICAgKi9cbiAgcG9wKGVudGVyUGFnZSwgbGVhdmVQYWdlLCBjYWxsYmFjaykge1xuICAgIHRoaXMuYmFja2dyb3VuZE1hc2sucmVtb3ZlKCk7XG4gICAgZW50ZXJQYWdlLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKHRoaXMuYmFja2dyb3VuZE1hc2ssIGVudGVyUGFnZSk7XG5cbiAgICBjb25zdCB1bmJsb2NrID0gc3VwZXIuYmxvY2soZW50ZXJQYWdlKTtcblxuICAgIGFuaW1pdC5ydW5BbGwoXG5cbiAgICAgIGFuaW1pdCh0aGlzLmJhY2tncm91bmRNYXNrKVxuICAgICAgICAud2FpdCh0aGlzLmRlbGF5ICsgdGhpcy5kdXJhdGlvbilcbiAgICAgICAgLnF1ZXVlKGRvbmUgPT4ge1xuICAgICAgICAgIHRoaXMuYmFja2dyb3VuZE1hc2sucmVtb3ZlKCk7XG4gICAgICAgICAgZG9uZSgpO1xuICAgICAgICB9KSxcblxuICAgICAgYW5pbWl0KGVudGVyUGFnZSlcbiAgICAgICAgLnF1ZXVlKHtcbiAgICAgICAgICBjc3M6IHtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogJ3RyYW5zbGF0ZTNEKDAsIC0xMCUsIDApJyxcbiAgICAgICAgICAgIG9wYWNpdHk6IDAuOVxuICAgICAgICAgIH0sXG4gICAgICAgICAgZHVyYXRpb246IDBcbiAgICAgICAgfSlcbiAgICAgICAgLndhaXQodGhpcy5kZWxheSlcbiAgICAgICAgLnF1ZXVlKHtcbiAgICAgICAgICBjc3M6IHtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogJ3RyYW5zbGF0ZTNEKDAsIDAsIDApJyxcbiAgICAgICAgICAgIG9wYWNpdHk6IDEuMFxuICAgICAgICAgIH0sXG4gICAgICAgICAgZHVyYXRpb246IHRoaXMuZHVyYXRpb24sXG4gICAgICAgICAgdGltaW5nOiB0aGlzLnRpbWluZ1xuICAgICAgICB9KVxuICAgICAgICAucXVldWUoZG9uZSA9PiB7XG4gICAgICAgICAgdW5ibG9jaygpO1xuICAgICAgICAgIGNhbGxiYWNrKCk7XG4gICAgICAgICAgZG9uZSgpO1xuICAgICAgICB9KSxcblxuICAgICAgYW5pbWl0KGxlYXZlUGFnZSlcbiAgICAgICAgLnF1ZXVlKHtcbiAgICAgICAgICBjc3M6IHtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogJ3RyYW5zbGF0ZTNEKDAsIDAsIDApJ1xuICAgICAgICAgIH0sXG4gICAgICAgICAgZHVyYXRpb246IDBcbiAgICAgICAgfSlcbiAgICAgICAgLndhaXQodGhpcy5kZWxheSlcbiAgICAgICAgLnF1ZXVlKHtcbiAgICAgICAgICBjc3M6IHtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogJ3RyYW5zbGF0ZTNEKDAsIDEwMCUsIDApJ1xuICAgICAgICAgIH0sXG4gICAgICAgICAgZHVyYXRpb246IHRoaXMuZHVyYXRpb24sXG4gICAgICAgICAgdGltaW5nOiB0aGlzLnRpbWluZ1xuICAgICAgICB9KVxuXG4gICAgKTtcbiAgfVxufVxuIiwiLypcbkNvcHlyaWdodCAyMDEzLTIwMTUgQVNJQUwgQ09SUE9SQVRJT05cblxuTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbnlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbllvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuXG4gICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcblxuVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG5TZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG5saW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cblxuKi9cblxuaW1wb3J0IE5hdmlnYXRvclRyYW5zaXRpb25BbmltYXRvciBmcm9tICcuL2FuaW1hdG9yJztcbmltcG9ydCB1dGlsIGZyb20gJy4uLy4uL29ucy91dGlsJztcbmltcG9ydCBhbmltaXQgZnJvbSAnLi4vLi4vb25zL2FuaW1pdCc7XG5cbi8qKlxuICogRmFkZS1pbiBzY3JlZW4gdHJhbnNpdGlvbi5cbiAqL1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgSU9TRmFkZU5hdmlnYXRvclRyYW5zaXRpb25BbmltYXRvciBleHRlbmRzIE5hdmlnYXRvclRyYW5zaXRpb25BbmltYXRvciB7XG5cbiAgY29uc3RydWN0b3Ioe3RpbWluZyA9ICdsaW5lYXInLCBkZWxheSA9IDAsIGR1cmF0aW9uID0gMC40fSA9IHt9KSB7XG4gICAgc3VwZXIoeyB0aW1pbmcsIGRlbGF5LCBkdXJhdGlvbiB9KTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge09iamVjdH0gZW50ZXJQYWdlXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBsZWF2ZVBhZ2VcbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gY2FsbGJhY2tcbiAgICovXG4gIHB1c2goZW50ZXJQYWdlLCBsZWF2ZVBhZ2UsIGNhbGxiYWNrKSB7XG4gICAgY29uc3QgdW5ibG9jayA9IHN1cGVyLmJsb2NrKGVudGVyUGFnZSk7XG5cbiAgICBhbmltaXQucnVuQWxsKFxuXG4gICAgICBhbmltaXQoW2VudGVyUGFnZS5fZ2V0Q29udGVudEVsZW1lbnQoKSwgZW50ZXJQYWdlLl9nZXRCYWNrZ3JvdW5kRWxlbWVudCgpXSlcbiAgICAgICAgLnNhdmVTdHlsZSgpXG4gICAgICAgIC5xdWV1ZSh7XG4gICAgICAgICAgY3NzOiB7XG4gICAgICAgICAgICB0cmFuc2Zvcm06ICd0cmFuc2xhdGUzRCgwLCAwLCAwKScsXG4gICAgICAgICAgICBvcGFjaXR5OiAwXG4gICAgICAgICAgfSxcbiAgICAgICAgICBkdXJhdGlvbjogMFxuICAgICAgICB9KVxuICAgICAgICAud2FpdCh0aGlzLmRlbGF5KVxuICAgICAgICAucXVldWUoe1xuICAgICAgICAgIGNzczoge1xuICAgICAgICAgICAgdHJhbnNmb3JtOiAndHJhbnNsYXRlM0QoMCwgMCwgMCknLFxuICAgICAgICAgICAgb3BhY2l0eTogMVxuICAgICAgICAgIH0sXG4gICAgICAgICAgZHVyYXRpb246IHRoaXMuZHVyYXRpb24sXG4gICAgICAgICAgdGltaW5nOiB0aGlzLnRpbWluZ1xuICAgICAgICB9KVxuICAgICAgICAucmVzdG9yZVN0eWxlKClcbiAgICAgICAgLnF1ZXVlKGRvbmUgPT4ge1xuICAgICAgICAgIHVuYmxvY2soKTtcbiAgICAgICAgICBjYWxsYmFjaygpO1xuICAgICAgICAgIGRvbmUoKTtcbiAgICAgICAgfSksXG5cbiAgICAgIGFuaW1pdChlbnRlclBhZ2UuX2dldFRvb2xiYXJFbGVtZW50KCkpXG4gICAgICAgIC5zYXZlU3R5bGUoKVxuICAgICAgICAucXVldWUoe1xuICAgICAgICAgIGNzczoge1xuICAgICAgICAgICAgdHJhbnNmb3JtOiAndHJhbnNsYXRlM0QoMCwgMCwgMCknLFxuICAgICAgICAgICAgb3BhY2l0eTogMFxuICAgICAgICAgIH0sXG4gICAgICAgICAgZHVyYXRpb246IDBcbiAgICAgICAgfSlcbiAgICAgICAgLndhaXQodGhpcy5kZWxheSlcbiAgICAgICAgLnF1ZXVlKHtcbiAgICAgICAgICBjc3M6IHtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogJ3RyYW5zbGF0ZTNEKDAsIDAsIDApJyxcbiAgICAgICAgICAgIG9wYWNpdHk6IDFcbiAgICAgICAgICB9LFxuICAgICAgICAgIGR1cmF0aW9uOiB0aGlzLmR1cmF0aW9uLFxuICAgICAgICAgIHRpbWluZzogdGhpcy50aW1pbmdcbiAgICAgICAgfSlcbiAgICAgICAgLnJlc3RvcmVTdHlsZSgpXG4gICAgKTtcblxuICB9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBlbnRlclBhZ2VcbiAgICogQHBhcmFtIHtPYmplY3R9IGxlYXZlUGFnZVxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBkb25lXG4gICAqL1xuICBwb3AoZW50ZXJQYWdlLCBsZWF2ZVBhZ2UsIGNhbGxiYWNrKSB7XG4gICAgY29uc3QgdW5ibG9jayA9IHN1cGVyLmJsb2NrKGVudGVyUGFnZSk7XG5cbiAgICBhbmltaXQucnVuQWxsKFxuXG4gICAgICBhbmltaXQoW2xlYXZlUGFnZS5fZ2V0Q29udGVudEVsZW1lbnQoKSwgbGVhdmVQYWdlLl9nZXRCYWNrZ3JvdW5kRWxlbWVudCgpXSlcbiAgICAgICAgLnF1ZXVlKHtcbiAgICAgICAgICBjc3M6IHtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogJ3RyYW5zbGF0ZTNEKDAsIDAsIDApJyxcbiAgICAgICAgICAgIG9wYWNpdHk6IDFcbiAgICAgICAgICB9LFxuICAgICAgICAgIGR1cmF0aW9uOiAwXG4gICAgICAgIH0pXG4gICAgICAgIC53YWl0KHRoaXMuZGVsYXkpXG4gICAgICAgIC5xdWV1ZSh7XG4gICAgICAgICAgY3NzOiB7XG4gICAgICAgICAgICB0cmFuc2Zvcm06ICd0cmFuc2xhdGUzRCgwLCAwLCAwKScsXG4gICAgICAgICAgICBvcGFjaXR5OiAwXG4gICAgICAgICAgfSxcbiAgICAgICAgICBkdXJhdGlvbjogdGhpcy5kdXJhdGlvbixcbiAgICAgICAgICB0aW1pbmc6IHRoaXMudGltaW5nXG4gICAgICAgIH0pXG4gICAgICAgIC5xdWV1ZShkb25lID0+IHtcbiAgICAgICAgICB1bmJsb2NrKCk7XG4gICAgICAgICAgY2FsbGJhY2soKTtcbiAgICAgICAgICBkb25lKCk7XG4gICAgICAgIH0pLFxuXG4gICAgICBhbmltaXQobGVhdmVQYWdlLl9nZXRUb29sYmFyRWxlbWVudCgpKVxuICAgICAgICAucXVldWUoe1xuICAgICAgICAgIGNzczoge1xuICAgICAgICAgICAgdHJhbnNmb3JtOiAndHJhbnNsYXRlM0QoMCwgMCwgMCknLFxuICAgICAgICAgICAgb3BhY2l0eTogMVxuICAgICAgICAgIH0sXG4gICAgICAgICAgZHVyYXRpb246IDBcbiAgICAgICAgfSlcbiAgICAgICAgLndhaXQodGhpcy5kZWxheSlcbiAgICAgICAgLnF1ZXVlKHtcbiAgICAgICAgICBjc3M6IHtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogJ3RyYW5zbGF0ZTNEKDAsIDAsIDApJyxcbiAgICAgICAgICAgIG9wYWNpdHk6IDBcbiAgICAgICAgICB9LFxuICAgICAgICAgIGR1cmF0aW9uOiB0aGlzLmR1cmF0aW9uLFxuICAgICAgICAgIHRpbWluZzogdGhpcy50aW1pbmdcbiAgICAgICAgfSlcblxuICAgICk7XG4gIH1cbn1cbiIsIi8qXG5Db3B5cmlnaHQgMjAxMy0yMDE1IEFTSUFMIENPUlBPUkFUSU9OXG5cbkxpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG55b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG5Zb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcblxuICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG5cblVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbmRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbldJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxubGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5cbiovXG5cbmltcG9ydCB1dGlsIGZyb20gJy4uLy4uL29ucy91dGlsJztcbmltcG9ydCBOYXZpZ2F0b3JUcmFuc2l0aW9uQW5pbWF0b3IgZnJvbSAnLi9hbmltYXRvcic7XG5pbXBvcnQgYW5pbWl0IGZyb20gJy4uLy4uL29ucy9hbmltaXQnO1xuXG4vKipcbiAqIFNsaWRlIGFuaW1hdG9yIGZvciBuYXZpZ2F0b3IgdHJhbnNpdGlvbi5cbiAqL1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTURTbGlkZU5hdmlnYXRvclRyYW5zaXRpb25BbmltYXRvciBleHRlbmRzIE5hdmlnYXRvclRyYW5zaXRpb25BbmltYXRvciB7XG5cbiAgY29uc3RydWN0b3Ioe3RpbWluZyA9ICdjdWJpYy1iZXppZXIoLjEsIC43LCAuNCwgMSknLCBkZWxheSA9IDAsIGR1cmF0aW9uID0gMC4zfSA9IHt9KSB7XG4gICAgc3VwZXIoeyB0aW1pbmcsIGRlbGF5LCBkdXJhdGlvbiB9KTtcblxuICAgIHRoaXMuYmFja2dyb3VuZE1hc2sgPSB1dGlsLmNyZWF0ZUVsZW1lbnQoYFxuICAgICAgPGRpdiBzdHlsZT1cInBvc2l0aW9uOiBhYnNvbHV0ZTsgd2lkdGg6IDEwMCU7IGhlaWdodDogMTAwJTsgei1pbmRleDogMjtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogYmxhY2s7IG9wYWNpdHk6IDA7XCI+PC9kaXY+XG4gICAgYCk7XG4gICAgdGhpcy5ibGFja01hc2tPcGFjaXR5ID0gMC40O1xuICB9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBlbnRlclBhZ2VcbiAgICogQHBhcmFtIHtPYmplY3R9IGxlYXZlUGFnZVxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBjYWxsYmFja1xuICAgKi9cbiAgcHVzaChlbnRlclBhZ2UsIGxlYXZlUGFnZSwgY2FsbGJhY2spIHtcbiAgICB0aGlzLmJhY2tncm91bmRNYXNrLnJlbW92ZSgpO1xuICAgIGxlYXZlUGFnZS5wYXJlbnRFbGVtZW50Lmluc2VydEJlZm9yZSh0aGlzLmJhY2tncm91bmRNYXNrLCBsZWF2ZVBhZ2UubmV4dFNpYmxpbmcpO1xuXG4gICAgY29uc3QgdW5ibG9jayA9IHN1cGVyLmJsb2NrKGVudGVyUGFnZSk7XG5cbiAgICBhbmltaXQucnVuQWxsKFxuXG4gICAgICBhbmltaXQodGhpcy5iYWNrZ3JvdW5kTWFzaylcbiAgICAgICAgLnNhdmVTdHlsZSgpXG4gICAgICAgIC5xdWV1ZSh7XG4gICAgICAgICAgb3BhY2l0eTogMCxcbiAgICAgICAgICB0cmFuc2Zvcm06ICd0cmFuc2xhdGUzZCgwLCAwLCAwKSdcbiAgICAgICAgfSlcbiAgICAgICAgLndhaXQodGhpcy5kZWxheSlcbiAgICAgICAgLnF1ZXVlKHtcbiAgICAgICAgICBvcGFjaXR5OiB0aGlzLmJsYWNrTWFza09wYWNpdHlcbiAgICAgICAgfSwge1xuICAgICAgICAgIGR1cmF0aW9uOiB0aGlzLmR1cmF0aW9uLFxuICAgICAgICAgIHRpbWluZzogdGhpcy50aW1pbmdcbiAgICAgICAgfSlcbiAgICAgICAgLnJlc3RvcmVTdHlsZSgpXG4gICAgICAgIC5xdWV1ZShkb25lID0+IHtcbiAgICAgICAgICB0aGlzLmJhY2tncm91bmRNYXNrLnJlbW92ZSgpO1xuICAgICAgICAgIGRvbmUoKTtcbiAgICAgICAgfSksXG5cbiAgICAgIGFuaW1pdChlbnRlclBhZ2UpXG4gICAgICAgIC5zYXZlU3R5bGUoKVxuICAgICAgICAucXVldWUoe1xuICAgICAgICAgIGNzczoge1xuICAgICAgICAgICAgdHJhbnNmb3JtOiAndHJhbnNsYXRlM0QoMTAwJSwgMCwgMCknLFxuICAgICAgICAgIH0sXG4gICAgICAgICAgZHVyYXRpb246IDBcbiAgICAgICAgfSlcbiAgICAgICAgLndhaXQodGhpcy5kZWxheSlcbiAgICAgICAgLnF1ZXVlKHtcbiAgICAgICAgICBjc3M6IHtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogJ3RyYW5zbGF0ZTNEKDAsIDAsIDApJyxcbiAgICAgICAgICB9LFxuICAgICAgICAgIGR1cmF0aW9uOiB0aGlzLmR1cmF0aW9uLFxuICAgICAgICAgIHRpbWluZzogdGhpcy50aW1pbmdcbiAgICAgICAgfSlcbiAgICAgICAgLnJlc3RvcmVTdHlsZSgpLFxuXG4gICAgICBhbmltaXQobGVhdmVQYWdlKVxuICAgICAgICAuc2F2ZVN0eWxlKClcbiAgICAgICAgLnF1ZXVlKHtcbiAgICAgICAgICBjc3M6IHtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogJ3RyYW5zbGF0ZTNEKDAsIDAsIDApJ1xuICAgICAgICAgIH0sXG4gICAgICAgICAgZHVyYXRpb246IDBcbiAgICAgICAgfSlcbiAgICAgICAgLndhaXQodGhpcy5kZWxheSlcbiAgICAgICAgLnF1ZXVlKHtcbiAgICAgICAgICBjc3M6IHtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogJ3RyYW5zbGF0ZTNEKC00NSUsIDBweCwgMHB4KSdcbiAgICAgICAgICB9LFxuICAgICAgICAgIGR1cmF0aW9uOiB0aGlzLmR1cmF0aW9uLFxuICAgICAgICAgIHRpbWluZzogdGhpcy50aW1pbmdcbiAgICAgICAgfSlcbiAgICAgICAgLnJlc3RvcmVTdHlsZSgpXG4gICAgICAgIC53YWl0KDAuMilcbiAgICAgICAgLnF1ZXVlKGRvbmUgPT4ge1xuICAgICAgICAgIHVuYmxvY2soKTtcbiAgICAgICAgICBjYWxsYmFjaygpO1xuICAgICAgICAgIGRvbmUoKTtcbiAgICAgICAgfSlcbiAgICApO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBlbnRlclBhZ2VcbiAgICogQHBhcmFtIHtPYmplY3R9IGxlYXZlUGFnZVxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBjYWxsYmFja1xuICAgKi9cbiAgcG9wKGVudGVyUGFnZSwgbGVhdmVQYWdlLCBjYWxsYmFjaykge1xuICAgIHRoaXMuYmFja2dyb3VuZE1hc2sucmVtb3ZlKCk7XG4gICAgZW50ZXJQYWdlLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKHRoaXMuYmFja2dyb3VuZE1hc2ssIGVudGVyUGFnZS5uZXh0U2libGluZyk7XG5cbiAgICBjb25zdCB1bmJsb2NrID0gc3VwZXIuYmxvY2soZW50ZXJQYWdlKTtcblxuICAgIGFuaW1pdC5ydW5BbGwoXG5cbiAgICAgIGFuaW1pdCh0aGlzLmJhY2tncm91bmRNYXNrKVxuICAgICAgICAuc2F2ZVN0eWxlKClcbiAgICAgICAgLnF1ZXVlKHtcbiAgICAgICAgICBvcGFjaXR5OiB0aGlzLmJsYWNrTWFza09wYWNpdHksXG4gICAgICAgICAgdHJhbnNmb3JtOiAndHJhbnNsYXRlM2QoMCwgMCwgMCknXG4gICAgICAgIH0pXG4gICAgICAgIC53YWl0KHRoaXMuZGVsYXkpXG4gICAgICAgIC5xdWV1ZSh7XG4gICAgICAgICAgb3BhY2l0eTogMFxuICAgICAgICB9LCB7XG4gICAgICAgICAgZHVyYXRpb246IHRoaXMuZHVyYXRpb24sXG4gICAgICAgICAgdGltaW5nOiB0aGlzLnRpbWluZ1xuICAgICAgICB9KVxuICAgICAgICAucmVzdG9yZVN0eWxlKClcbiAgICAgICAgLnF1ZXVlKGRvbmUgPT4ge1xuICAgICAgICAgIHRoaXMuYmFja2dyb3VuZE1hc2sucmVtb3ZlKCk7XG4gICAgICAgICAgZG9uZSgpO1xuICAgICAgICB9KSxcblxuICAgICAgYW5pbWl0KGVudGVyUGFnZSlcbiAgICAgICAgLnNhdmVTdHlsZSgpXG4gICAgICAgIC5xdWV1ZSh7XG4gICAgICAgICAgY3NzOiB7XG4gICAgICAgICAgICB0cmFuc2Zvcm06ICd0cmFuc2xhdGUzRCgtNDUlLCAwcHgsIDBweCknLFxuICAgICAgICAgICAgb3BhY2l0eTogMC45XG4gICAgICAgICAgfSxcbiAgICAgICAgICBkdXJhdGlvbjogMFxuICAgICAgICB9KVxuICAgICAgICAud2FpdCh0aGlzLmRlbGF5KVxuICAgICAgICAucXVldWUoe1xuICAgICAgICAgIGNzczoge1xuICAgICAgICAgICAgdHJhbnNmb3JtOiAndHJhbnNsYXRlM0QoMHB4LCAwcHgsIDBweCknLFxuICAgICAgICAgICAgb3BhY2l0eTogMS4wXG4gICAgICAgICAgfSxcbiAgICAgICAgICBkdXJhdGlvbjogdGhpcy5kdXJhdGlvbixcbiAgICAgICAgICB0aW1pbmc6IHRoaXMudGltaW5nXG4gICAgICAgIH0pXG4gICAgICAgIC5yZXN0b3JlU3R5bGUoKSxcblxuICAgICAgYW5pbWl0KGxlYXZlUGFnZSlcbiAgICAgICAgLnF1ZXVlKHtcbiAgICAgICAgICBjc3M6IHtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogJ3RyYW5zbGF0ZTNEKDBweCwgMHB4LCAwcHgpJ1xuICAgICAgICAgIH0sXG4gICAgICAgICAgZHVyYXRpb246IDBcbiAgICAgICAgfSlcbiAgICAgICAgLndhaXQodGhpcy5kZWxheSlcbiAgICAgICAgLnF1ZXVlKHtcbiAgICAgICAgICBjc3M6IHtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogJ3RyYW5zbGF0ZTNEKDEwMCUsIDBweCwgMHB4KSdcbiAgICAgICAgICB9LFxuICAgICAgICAgIGR1cmF0aW9uOiB0aGlzLmR1cmF0aW9uLFxuICAgICAgICAgIHRpbWluZzogdGhpcy50aW1pbmdcbiAgICAgICAgfSlcbiAgICAgICAgLndhaXQoMC4yKVxuICAgICAgICAucXVldWUoZG9uZSA9PiB7XG4gICAgICAgICAgdW5ibG9jaygpO1xuICAgICAgICAgIGNhbGxiYWNrKCk7XG4gICAgICAgICAgZG9uZSgpO1xuICAgICAgICB9KVxuICAgICk7XG4gIH1cbn1cbiIsIi8qXG5Db3B5cmlnaHQgMjAxMy0yMDE1IEFTSUFMIENPUlBPUkFUSU9OXG5cbkxpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG55b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG5Zb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcblxuICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG5cblVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbmRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbldJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxubGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5cbiovXG5cbmltcG9ydCBOYXZpZ2F0b3JUcmFuc2l0aW9uQW5pbWF0b3IgZnJvbSAnLi9hbmltYXRvcic7XG5pbXBvcnQgdXRpbCBmcm9tICcuLi8uLi9vbnMvdXRpbCc7XG5pbXBvcnQgYW5pbWl0IGZyb20gJy4uLy4uL29ucy9hbmltaXQnO1xuXG4vKipcbiAqIExpZnQgc2NyZWVuIHRyYW5zaXRpb24uXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIE1ETGlmdE5hdmlnYXRvclRyYW5zaXRpb25BbmltYXRvciBleHRlbmRzIE5hdmlnYXRvclRyYW5zaXRpb25BbmltYXRvciB7XG5cbiAgY29uc3RydWN0b3Ioe3RpbWluZyA9ICdjdWJpYy1iZXppZXIoLjEsIC43LCAuMSwgMSknLCBkZWxheSA9IDAuMDUsIGR1cmF0aW9uID0gMC40fSA9IHt9KSB7XG4gICAgc3VwZXIoeyB0aW1pbmcsIGRlbGF5LCBkdXJhdGlvbiB9KTtcblxuICAgIHRoaXMuYmFja2dyb3VuZE1hc2sgPSB1dGlsLmNyZWF0ZUVsZW1lbnQoYFxuICAgICAgPGRpdiBzdHlsZT1cInBvc2l0aW9uOiBhYnNvbHV0ZTsgd2lkdGg6IDEwMCU7IGhlaWdodDogMTAwJTtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogYmxhY2s7XCI+PC9kaXY+XG4gICAgYCk7XG4gIH1cblxuICAvKipcbiAgICogQHBhcmFtIHtPYmplY3R9IGVudGVyUGFnZVxuICAgKiBAcGFyYW0ge09iamVjdH0gbGVhdmVQYWdlXG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IGNhbGxiYWNrXG4gICAqL1xuICBwdXNoKGVudGVyUGFnZSwgbGVhdmVQYWdlLCBjYWxsYmFjaykge1xuICAgIHRoaXMuYmFja2dyb3VuZE1hc2sucmVtb3ZlKCk7XG4gICAgbGVhdmVQYWdlLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKHRoaXMuYmFja2dyb3VuZE1hc2ssIGxlYXZlUGFnZSk7XG5cbiAgICBjb25zdCB1bmJsb2NrID0gc3VwZXIuYmxvY2soZW50ZXJQYWdlKTtcblxuICAgIGNvbnN0IG1hc2tDbGVhciA9IGFuaW1pdCh0aGlzLmJhY2tncm91bmRNYXNrKVxuICAgICAgLndhaXQodGhpcy5kZWxheSArIHRoaXMuZHVyYXRpb24pXG4gICAgICAucXVldWUoZG9uZSA9PiB7XG4gICAgICAgIHRoaXMuYmFja2dyb3VuZE1hc2sucmVtb3ZlKCk7XG4gICAgICAgIGRvbmUoKTtcbiAgICAgIH0pO1xuXG4gICAgYW5pbWl0LnJ1bkFsbChcblxuICAgICAgbWFza0NsZWFyLFxuXG4gICAgICBhbmltaXQoZW50ZXJQYWdlKVxuICAgICAgICAuc2F2ZVN0eWxlKClcbiAgICAgICAgLnF1ZXVlKHtcbiAgICAgICAgICBjc3M6IHtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogJ3RyYW5zbGF0ZTNEKDAsIDEwMCUsIDApJyxcbiAgICAgICAgICB9LFxuICAgICAgICAgIGR1cmF0aW9uOiAwXG4gICAgICAgIH0pXG4gICAgICAgIC53YWl0KHRoaXMuZGVsYXkpXG4gICAgICAgIC5xdWV1ZSh7XG4gICAgICAgICAgY3NzOiB7XG4gICAgICAgICAgICB0cmFuc2Zvcm06ICd0cmFuc2xhdGUzRCgwLCAwLCAwKScsXG4gICAgICAgICAgfSxcbiAgICAgICAgICBkdXJhdGlvbjogdGhpcy5kdXJhdGlvbixcbiAgICAgICAgICB0aW1pbmc6IHRoaXMudGltaW5nXG4gICAgICAgIH0pXG4gICAgICAgIC5yZXN0b3JlU3R5bGUoKVxuICAgICAgICAucXVldWUoZG9uZSA9PiB7XG4gICAgICAgICAgdW5ibG9jaygpO1xuICAgICAgICAgIGNhbGxiYWNrKCk7XG4gICAgICAgICAgZG9uZSgpO1xuICAgICAgICB9KSxcblxuICAgICAgYW5pbWl0KGxlYXZlUGFnZSlcbiAgICAgICAgLnF1ZXVlKHtcbiAgICAgICAgICBjc3M6IHtcbiAgICAgICAgICAgIG9wYWNpdHk6IDEuMFxuICAgICAgICAgIH0sXG4gICAgICAgICAgZHVyYXRpb246IDBcbiAgICAgICAgfSlcbiAgICAgICAgLnF1ZXVlKHtcbiAgICAgICAgICBjc3M6IHtcbiAgICAgICAgICAgIG9wYWNpdHk6IDAuNFxuICAgICAgICAgIH0sXG4gICAgICAgICAgZHVyYXRpb246IHRoaXMuZHVyYXRpb24sXG4gICAgICAgICAgdGltaW5nOiB0aGlzLnRpbWluZ1xuICAgICAgICB9KVxuICAgICk7XG5cbiAgfVxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge09iamVjdH0gZW50ZXJQYWdlXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBsZWF2ZVBhZ2VcbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gY2FsbGJhY2tcbiAgICovXG4gIHBvcChlbnRlclBhZ2UsIGxlYXZlUGFnZSwgY2FsbGJhY2spIHtcbiAgICB0aGlzLmJhY2tncm91bmRNYXNrLnJlbW92ZSgpO1xuICAgIGVudGVyUGFnZS5wYXJlbnROb2RlLmluc2VydEJlZm9yZSh0aGlzLmJhY2tncm91bmRNYXNrLCBlbnRlclBhZ2UpO1xuXG4gICAgY29uc3QgdW5ibG9jayA9IHN1cGVyLmJsb2NrKGVudGVyUGFnZSk7XG5cbiAgICBhbmltaXQucnVuQWxsKFxuXG4gICAgICBhbmltaXQodGhpcy5iYWNrZ3JvdW5kTWFzaylcbiAgICAgICAgLndhaXQodGhpcy5kZWxheSArIHRoaXMuZHVyYXRpb24pXG4gICAgICAgIC5xdWV1ZShkb25lID0+IHtcbiAgICAgICAgICB0aGlzLmJhY2tncm91bmRNYXNrLnJlbW92ZSgpO1xuICAgICAgICAgIGRvbmUoKTtcbiAgICAgICAgfSksXG5cbiAgICAgIGFuaW1pdChlbnRlclBhZ2UpXG4gICAgICAgIC5xdWV1ZSh7XG4gICAgICAgICAgY3NzOiB7XG4gICAgICAgICAgICB0cmFuc2Zvcm06ICd0cmFuc2xhdGUzRCgwLCAwLCAwKScsXG4gICAgICAgICAgICBvcGFjaXR5OiAwLjRcbiAgICAgICAgICB9LFxuICAgICAgICAgIGR1cmF0aW9uOiAwXG4gICAgICAgIH0pXG4gICAgICAgIC53YWl0KHRoaXMuZGVsYXkpXG4gICAgICAgIC5xdWV1ZSh7XG4gICAgICAgICAgY3NzOiB7XG4gICAgICAgICAgICB0cmFuc2Zvcm06ICd0cmFuc2xhdGUzRCgwLCAwLCAwKScsXG4gICAgICAgICAgICBvcGFjaXR5OiAxLjBcbiAgICAgICAgICB9LFxuICAgICAgICAgIGR1cmF0aW9uOiB0aGlzLmR1cmF0aW9uLFxuICAgICAgICAgIHRpbWluZzogdGhpcy50aW1pbmdcbiAgICAgICAgfSlcbiAgICAgICAgLnF1ZXVlKGRvbmUgPT4ge1xuICAgICAgICAgIHVuYmxvY2soKTtcbiAgICAgICAgICBjYWxsYmFjaygpO1xuICAgICAgICAgIGRvbmUoKTtcbiAgICAgICAgfSksXG5cbiAgICAgIGFuaW1pdChsZWF2ZVBhZ2UpXG4gICAgICAgIC5xdWV1ZSh7XG4gICAgICAgICAgY3NzOiB7XG4gICAgICAgICAgICB0cmFuc2Zvcm06ICd0cmFuc2xhdGUzRCgwLCAwLCAwKSdcbiAgICAgICAgICB9LFxuICAgICAgICAgIGR1cmF0aW9uOiAwXG4gICAgICAgIH0pXG4gICAgICAgIC53YWl0KHRoaXMuZGVsYXkpXG4gICAgICAgIC5xdWV1ZSh7XG4gICAgICAgICAgY3NzOiB7XG4gICAgICAgICAgICB0cmFuc2Zvcm06ICd0cmFuc2xhdGUzRCgwLCAxMDAlLCAwKSdcbiAgICAgICAgICB9LFxuICAgICAgICAgIGR1cmF0aW9uOiB0aGlzLmR1cmF0aW9uLFxuICAgICAgICAgIHRpbWluZzogdGhpcy50aW1pbmdcbiAgICAgICAgfSlcbiAgICApO1xuICB9XG59XG4iLCIvKlxuQ29weXJpZ2h0IDIwMTMtMjAxNSBBU0lBTCBDT1JQT1JBVElPTlxuXG5MaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xueW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG5cbiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuXG5Vbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG5kaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG5XSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cblNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbmxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuXG4qL1xuXG5pbXBvcnQgTmF2aWdhdG9yVHJhbnNpdGlvbkFuaW1hdG9yIGZyb20gJy4vYW5pbWF0b3InO1xuaW1wb3J0IHV0aWwgZnJvbSAnLi4vLi4vb25zL3V0aWwnO1xuaW1wb3J0IGFuaW1pdCBmcm9tICcuLi8uLi9vbnMvYW5pbWl0JztcblxuLyoqXG4gKiBGYWRlLWluICsgTGlmdCBzY3JlZW4gdHJhbnNpdGlvbi5cbiAqL1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTURGYWRlTmF2aWdhdG9yVHJhbnNpdGlvbkFuaW1hdG9yIGV4dGVuZHMgTmF2aWdhdG9yVHJhbnNpdGlvbkFuaW1hdG9yIHtcblxuICBjb25zdHJ1Y3Rvcih7dGltaW5nID0gJ2Vhc2Utb3V0JywgZGVsYXkgPSAwLCBkdXJhdGlvbiA9IDAuMjV9ID0ge30pIHtcbiAgICBzdXBlcih7IHRpbWluZywgZGVsYXksIGR1cmF0aW9uIH0pO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBlbnRlclBhZ2VcbiAgICogQHBhcmFtIHtPYmplY3R9IGxlYXZlUGFnZVxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBjYWxsYmFja1xuICAgKi9cbiAgcHVzaChlbnRlclBhZ2UsIGxlYXZlUGFnZSwgY2FsbGJhY2spIHtcbiAgICBjb25zdCB1bmJsb2NrID0gc3VwZXIuYmxvY2soZW50ZXJQYWdlKTtcblxuICAgIGFuaW1pdC5ydW5BbGwoXG5cbiAgICAgIGFuaW1pdChlbnRlclBhZ2UpXG4gICAgICAgIC5zYXZlU3R5bGUoKVxuICAgICAgICAucXVldWUoe1xuICAgICAgICAgIGNzczoge1xuICAgICAgICAgICAgdHJhbnNmb3JtOiAndHJhbnNsYXRlM0QoMCwgNDJweCwgMCknLFxuICAgICAgICAgICAgb3BhY2l0eTogMFxuICAgICAgICAgIH0sXG4gICAgICAgICAgZHVyYXRpb246IDBcbiAgICAgICAgfSlcbiAgICAgICAgLndhaXQodGhpcy5kZWxheSlcbiAgICAgICAgLnF1ZXVlKHtcbiAgICAgICAgICBjc3M6IHtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogJ3RyYW5zbGF0ZTNEKDAsIDAsIDApJyxcbiAgICAgICAgICAgIG9wYWNpdHk6IDFcbiAgICAgICAgICB9LFxuICAgICAgICAgIGR1cmF0aW9uOiB0aGlzLmR1cmF0aW9uLFxuICAgICAgICAgIHRpbWluZzogdGhpcy50aW1pbmdcbiAgICAgICAgfSlcbiAgICAgICAgLnJlc3RvcmVTdHlsZSgpXG4gICAgICAgIC5xdWV1ZShkb25lID0+IHtcbiAgICAgICAgICB1bmJsb2NrKCk7XG4gICAgICAgICAgY2FsbGJhY2soKTtcbiAgICAgICAgICBkb25lKCk7XG4gICAgICAgIH0pXG4gICAgKTtcblxuICB9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBlbnRlclBhZ2VcbiAgICogQHBhcmFtIHtPYmplY3R9IGxlYXZlUGFnZVxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBkb25lXG4gICAqL1xuICBwb3AoZW50ZXJQYWdlLCBsZWF2ZVBhZ2UsIGNhbGxiYWNrKSB7XG4gICAgY29uc3QgdW5ibG9jayA9IHN1cGVyLmJsb2NrKGVudGVyUGFnZSk7XG5cbiAgICBhbmltaXQucnVuQWxsKFxuXG4gICAgICBhbmltaXQobGVhdmVQYWdlKVxuICAgICAgICAucXVldWUoe1xuICAgICAgICAgIGNzczoge1xuICAgICAgICAgICAgdHJhbnNmb3JtOiAndHJhbnNsYXRlM0QoMCwgMCwgMCknXG4gICAgICAgICAgfSxcbiAgICAgICAgICBkdXJhdGlvbjogMFxuICAgICAgICB9KVxuICAgICAgICAud2FpdCgwLjE1KVxuICAgICAgICAucXVldWUoe1xuICAgICAgICAgIGNzczoge1xuICAgICAgICAgICAgdHJhbnNmb3JtOiAndHJhbnNsYXRlM0QoMCwgMzhweCwgMCknXG4gICAgICAgICAgfSxcbiAgICAgICAgICBkdXJhdGlvbjogdGhpcy5kdXJhdGlvbixcbiAgICAgICAgICB0aW1pbmc6IHRoaXMudGltaW5nXG4gICAgICAgIH0pXG4gICAgICAgIC5xdWV1ZShkb25lID0+IHtcbiAgICAgICAgICB1bmJsb2NrKCk7XG4gICAgICAgICAgY2FsbGJhY2soKTtcbiAgICAgICAgICBkb25lKCk7XG4gICAgICAgIH0pLFxuXG4gICAgICBhbmltaXQobGVhdmVQYWdlKVxuICAgICAgICAucXVldWUoe1xuICAgICAgICAgIGNzczoge1xuICAgICAgICAgICAgb3BhY2l0eTogMVxuICAgICAgICAgIH0sXG4gICAgICAgICAgZHVyYXRpb246IDBcbiAgICAgICAgfSlcbiAgICAgICAgLndhaXQoMC4wNClcbiAgICAgICAgLnF1ZXVlKHtcbiAgICAgICAgICBjc3M6IHtcbiAgICAgICAgICAgIG9wYWNpdHk6IDBcbiAgICAgICAgICB9LFxuICAgICAgICAgIGR1cmF0aW9uOiB0aGlzLmR1cmF0aW9uLFxuICAgICAgICAgIHRpbWluZzogdGhpcy50aW1pbmdcbiAgICAgICAgfSlcbiAgICApO1xuICB9XG59XG4iLCIvKlxuQ29weXJpZ2h0IDIwMTMtMjAxNSBBU0lBTCBDT1JQT1JBVElPTlxuXG5MaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xueW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG5cbiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuXG5Vbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG5kaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG5XSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cblNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbmxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuXG4qL1xuXG5pbXBvcnQgTmF2aWdhdG9yVHJhbnNpdGlvbkFuaW1hdG9yIGZyb20gJy4vYW5pbWF0b3InO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBOb25lTmF2aWdhdG9yVHJhbnNpdGlvbkFuaW1hdG9yIGV4dGVuZHMgTmF2aWdhdG9yVHJhbnNpdGlvbkFuaW1hdG9yIHtcbiAgY29uc3RydWN0b3Iob3B0aW9ucykge1xuICAgIHN1cGVyKG9wdGlvbnMpO1xuICB9XG4gIHB1c2goZW50ZXJQYWdlLCBsZWF2ZVBhZ2UsIGNhbGxiYWNrKSB7XG4gICAgY2FsbGJhY2soKTtcbiAgfVxuXG4gIHBvcChlbnRlclBhZ2UsIGxlYXZlUGFnZSwgY2FsbGJhY2spIHtcbiAgICBjYWxsYmFjaygpO1xuICB9XG59XG4iLCIvKlxuQ29weXJpZ2h0IDIwMTMtMjAxNSBBU0lBTCBDT1JQT1JBVElPTlxuXG5MaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xueW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG5cbiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuXG5Vbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG5kaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG5XSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cblNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbmxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuXG4qL1xuXG5pbXBvcnQgdXRpbCBmcm9tICcuLi8uLi9vbnMvdXRpbCc7XG5pbXBvcnQgaW50ZXJuYWwgZnJvbSAnLi4vLi4vb25zL2ludGVybmFsJztcbmltcG9ydCBBbmltYXRvckZhY3RvcnkgZnJvbSAnLi4vLi4vb25zL2ludGVybmFsL2FuaW1hdG9yLWZhY3RvcnknO1xuaW1wb3J0IE5hdmlnYXRvclRyYW5zaXRpb25BbmltYXRvciBmcm9tICcuL2FuaW1hdG9yJztcbmltcG9ydCBJT1NTbGlkZU5hdmlnYXRvclRyYW5zaXRpb25BbmltYXRvciBmcm9tICcuL2lvcy1zbGlkZS1hbmltYXRvcic7XG5pbXBvcnQgSU9TTGlmdE5hdmlnYXRvclRyYW5zaXRpb25BbmltYXRvciBmcm9tICcuL2lvcy1saWZ0LWFuaW1hdG9yJztcbmltcG9ydCBJT1NGYWRlTmF2aWdhdG9yVHJhbnNpdGlvbkFuaW1hdG9yIGZyb20gJy4vaW9zLWZhZGUtYW5pbWF0b3InO1xuaW1wb3J0IE1EU2xpZGVOYXZpZ2F0b3JUcmFuc2l0aW9uQW5pbWF0b3IgZnJvbSAnLi9tZC1zbGlkZS1hbmltYXRvcic7XG5pbXBvcnQgTURMaWZ0TmF2aWdhdG9yVHJhbnNpdGlvbkFuaW1hdG9yIGZyb20gJy4vbWQtbGlmdC1hbmltYXRvcic7XG5pbXBvcnQgTURGYWRlTmF2aWdhdG9yVHJhbnNpdGlvbkFuaW1hdG9yIGZyb20gJy4vbWQtZmFkZS1hbmltYXRvcic7XG5pbXBvcnQgTm9uZU5hdmlnYXRvclRyYW5zaXRpb25BbmltYXRvciBmcm9tICcuL25vbmUtYW5pbWF0b3InO1xuaW1wb3J0IHBsYXRmb3JtIGZyb20gJy4uLy4uL29ucy9wbGF0Zm9ybSc7XG5pbXBvcnQgY29udGVudFJlYWR5IGZyb20gJy4uLy4uL29ucy9jb250ZW50LXJlYWR5JztcbmltcG9ydCBCYXNlRWxlbWVudCBmcm9tICcuLi8uLi9vbnMvYmFzZS1lbGVtZW50JztcbmltcG9ydCBkZXZpY2VCYWNrQnV0dG9uRGlzcGF0Y2hlciBmcm9tICcuLi8uLi9vbnMvZGV2aWNlLWJhY2stYnV0dG9uLWRpc3BhdGNoZXInO1xuaW1wb3J0IHtQYWdlTG9hZGVyLCBkZWZhdWx0UGFnZUxvYWRlciwgaW5zdGFudFBhZ2VMb2FkZXJ9IGZyb20gJy4uLy4uL29ucy9wYWdlLWxvYWRlcic7XG5cbmNvbnN0IF9hbmltYXRvckRpY3QgPSB7XG4gICdkZWZhdWx0JzogKCkgPT4gcGxhdGZvcm0uaXNBbmRyb2lkKCkgPyBNREZhZGVOYXZpZ2F0b3JUcmFuc2l0aW9uQW5pbWF0b3IgOiBJT1NTbGlkZU5hdmlnYXRvclRyYW5zaXRpb25BbmltYXRvcixcbiAgJ3NsaWRlJzogKCkgPT4gcGxhdGZvcm0uaXNBbmRyb2lkKCkgPyBNRFNsaWRlTmF2aWdhdG9yVHJhbnNpdGlvbkFuaW1hdG9yIDogSU9TU2xpZGVOYXZpZ2F0b3JUcmFuc2l0aW9uQW5pbWF0b3IsXG4gICdsaWZ0JzogKCkgPT4gcGxhdGZvcm0uaXNBbmRyb2lkKCkgPyBNRExpZnROYXZpZ2F0b3JUcmFuc2l0aW9uQW5pbWF0b3IgOiBJT1NMaWZ0TmF2aWdhdG9yVHJhbnNpdGlvbkFuaW1hdG9yLFxuICAnZmFkZSc6ICgpID0+IHBsYXRmb3JtLmlzQW5kcm9pZCgpID8gTURGYWRlTmF2aWdhdG9yVHJhbnNpdGlvbkFuaW1hdG9yIDogSU9TRmFkZU5hdmlnYXRvclRyYW5zaXRpb25BbmltYXRvcixcbiAgJ3NsaWRlLWlvcyc6IElPU1NsaWRlTmF2aWdhdG9yVHJhbnNpdGlvbkFuaW1hdG9yLFxuICAnc2xpZGUtbWQnOiBNRFNsaWRlTmF2aWdhdG9yVHJhbnNpdGlvbkFuaW1hdG9yLFxuICAnbGlmdC1pb3MnOiBJT1NMaWZ0TmF2aWdhdG9yVHJhbnNpdGlvbkFuaW1hdG9yLFxuICAnbGlmdC1tZCc6IE1ETGlmdE5hdmlnYXRvclRyYW5zaXRpb25BbmltYXRvcixcbiAgJ2ZhZGUtaW9zJzogSU9TRmFkZU5hdmlnYXRvclRyYW5zaXRpb25BbmltYXRvcixcbiAgJ2ZhZGUtbWQnOiBNREZhZGVOYXZpZ2F0b3JUcmFuc2l0aW9uQW5pbWF0b3IsXG4gICdub25lJzogTm9uZU5hdmlnYXRvclRyYW5zaXRpb25BbmltYXRvclxufTtcblxuY29uc3QgcmV3cml0YWJsZXMgPSB7XG4gIC8qKlxuICAgKiBAcGFyYW0ge0VsZW1lbnR9IG5hdmlnYXRvclNpZGVFbGVtZW50XG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IGNhbGxiYWNrXG4gICAqL1xuICByZWFkeShuYXZpZ2F0b3JFbGVtZW50LCBjYWxsYmFjaykge1xuICAgIGNhbGxiYWNrKCk7XG4gIH1cbn07XG5cbi8qKlxuICogQGVsZW1lbnQgb25zLW5hdmlnYXRvclxuICogQGNhdGVnb3J5IG5hdmlnYXRpb25cbiAqIEBkZXNjcmlwdGlvblxuICogICBbZW5dXG4gKiAgICAgQSBjb21wb25lbnQgdGhhdCBwcm92aWRlcyBwYWdlIHN0YWNrIG1hbmFnZW1lbnQgYW5kIG5hdmlnYXRpb24uIFN0YWNrIG5hdmlnYXRpb24gaXMgdGhlIG1vc3QgY29tbW9uIG5hdmlnYXRpb24gcGF0dGVybiBmb3IgbW9iaWxlIGFwcHMuXG4gKlxuICogICAgIFdoZW4gYSBwYWdlIGlzIHB1c2hlZCBvbiB0b3Agb2YgdGhlIHN0YWNrIGl0IGlzIGRpc3BsYXllZCB3aXRoIGEgdHJhbnNpdGlvbiBhbmltYXRpb24uIFdoZW4gdGhlIHVzZXIgcmV0dXJucyB0byB0aGUgcHJldmlvdXMgcGFnZSB0aGUgdG9wIHBhZ2Ugd2lsbCBiZSBwb3BwZWQgZnJvbSB0aGUgdG9wIG9mIHRoZSBzdGFjayBhbmQgaGlkZGVuIHdpdGggYW4gb3Bwb3NpdGUgdHJhbnNpdGlvbiBhbmltYXRpb24uXG4gKiAgIFsvZW5dXG4gKiAgIFtqYV1bL2phXVxuICogQGNvZGVwZW4geXJodHZcbiAqIEB0dXRvcmlhbCB2YW5pbGxhL1JlZmVyZW5jZS9uYXZpZ2F0b3JcbiAqIEBndWlkZSBtdWx0aXBsZS1wYWdlLW5hdmlnYXRpb25cbiAqICAgW2VuXUd1aWRlIGZvciBwYWdlIG5hdmlnYXRpb25bL2VuXVxuICogICBbamFd44Oa44O844K444OK44OT44Ky44O844K344On44Oz44Gu5qaC6KaBWy9qYV1cbiAqIEBndWlkZSB0ZW1wbGF0ZXNcbiAqICAgW2VuXURlZmluaW5nIG11bHRpcGxlIHBhZ2VzIGluIHNpbmdsZSBodG1sWy9lbl1cbiAqICAgW2phXeikh+aVsOOBruODmuODvOOCuOOCkjHjgaTjga5IVE1M44Gr6KiY6L+w44GZ44KLWy9qYV1cbiAqIEBndWlkZSBjcmVhdGluZy1hLXBhZ2VcbiAqICAgW2VuXVNldHRpbmcgdXAgYSBwYWdlIGluIGl0cyBgaW5pdGAgZXZlbnRbL2VuXVxuICogICBbamFdU2V0dGluZyB1cCBhIHBhZ2UgaW4gaXRzIGBpbml0YCBldmVudFsvamFdXG4gKiBAc2VlYWxzbyBvbnMtdG9vbGJhclxuICogICBbZW5dVGhlIGA8b25zLXRvb2xiYXI+YCBjb21wb25lbnQgaXMgdXNlZCB0byBkaXNwbGF5IGEgdG9vbGJhciBvbiB0aGUgdG9wIG9mIGEgcGFnZS5bL2VuXVxuICogICBbamFdWy9qYV1cbiAqIEBzZWVhbHNvIG9ucy1iYWNrLWJ1dHRvblxuICogICBbZW5dVGhlIGA8b25zLWJhY2stYnV0dG9uPmAgY29tcG9uZW50IGxldHMgdGhlIHVzZXIgcmV0dXJuIHRvIHRoZSBwcmV2aW91cyBwYWdlLlsvZW5dXG4gKiAgIFtqYV1bL2phXVxuICogQGV4YW1wbGVcbiAqIDxvbnMtbmF2aWdhdG9yIGlkPVwibmF2aWdhdG9yXCI+XG4gKiAgIDxvbnMtcGFnZT5cbiAqICAgICA8b25zLXRvb2xiYXI+XG4gKiAgICAgICA8ZGl2IGNsYXNzPVwiY2VudGVyXCI+XG4gKiAgICAgICAgIFRpdGxlXG4gKiAgICAgICA8L2Rpdj5cbiAqICAgICA8L29ucy10b29sYmFyPlxuICogICAgIDxwPlxuICogICAgICAgPG9ucy1idXR0b25cbiAqICAgICAgICAgb25jbGljaz1cImRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCduYXZpZ2F0b3InKS5wdXNoUGFnZSgncGFnZS5odG1sJylcIj5cbiAqICAgICAgICAgUHVzaCBwYWdlXG4gKiAgICAgICA8L29ucy1idXR0b24+XG4gKiAgICAgPC9wPlxuICogICA8L29ucy1wYWdlPlxuICogPC9vbnMtbmF2aWdhdG9yPlxuICpcbiAqIDxvbnMtdGVtcGxhdGUgaWQ9XCJwYWdlLmh0bWxcIj5cbiAqICAgPG9ucy1wYWdlPlxuICogICAgIDxvbnMtdG9vbGJhcj5cbiAqICAgICAgIDxkaXYgY2xhc3M9XCJsZWZ0XCI+XG4gKiAgICAgICAgIDxvbnMtYmFjay1idXR0b24+QmFjazwvb25zLWJhY2stYnV0dG9uPlxuICogICAgICAgPC9kaXY+XG4gKiAgICAgICA8ZGl2IGNsYXNzPVwiY2VudGVyXCI+XG4gKiAgICAgICAgIEFub3RoZXIgcGFnZVxuICogICAgICAgPC9kaXY+XG4gKiAgICAgPC9vbnMtdG9vbGJhcj5cbiAqICAgPC9vbnMtcGFnZT5cbiAqIDwvb25zLXRlbXBsYXRlPlxuICovXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBOYXZpZ2F0b3JFbGVtZW50IGV4dGVuZHMgQmFzZUVsZW1lbnQge1xuXG4gIC8qKlxuICAgKiBAYXR0cmlidXRlIHBhZ2VcbiAgICogQGluaXRvbmx5XG4gICAqIEB0eXBlIHtTdHJpbmd9XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1GaXJzdCBwYWdlIHRvIHNob3cgd2hlbiBuYXZpZ2F0b3IgaXMgaW5pdGlhbGl6ZWQuWy9lbl1cbiAgICogICBbamFd44OK44OT44Ky44O844K/44O844GM5Yid5pyf5YyW44GV44KM44Gf5pmC44Gr6KGo56S644GZ44KL44Oa44O844K444KS5oyH5a6a44GX44G+44GZ44CCWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBhdHRyaWJ1dGUgYW5pbWF0aW9uXG4gICAqIEB0eXBlIHtTdHJpbmd9XG4gICAqIEBkZWZhdWx0IGRlZmF1bHRcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXVxuICAgKiAgICAgQW5pbWF0aW9uIG5hbWUuIEF2YWlsYWJsZSBhbmltYXRpb25zIGFyZSBgXCJzbGlkZVwiYCwgYFwibGlmdFwiYCwgYFwiZmFkZVwiYCBhbmQgYFwibm9uZVwiYC5cbiAgICpcbiAgICogICAgIFRoZXNlIGFyZSBwbGF0Zm9ybSBiYXNlZCBhbmltYXRpb25zLiBGb3IgZml4ZWQgYW5pbWF0aW9ucywgYWRkIGBcIi1pb3NcImAgb3IgYFwiLW1kXCJgIHN1ZmZpeCB0byB0aGUgYW5pbWF0aW9uIG5hbWUuIEUuZy4gYFwibGlmdC1pb3NcImAsIGBcImxpZnQtbWRcImAuIERlZmF1bHRzIHZhbHVlcyBhcmUgYFwic2xpZGUtaW9zXCJgIGFuZCBgXCJmYWRlLW1kXCJgIGRlcGVuZGluZyBvbiB0aGUgcGxhdGZvcm0uXG4gICAqICAgWy9lbl1cbiAgICogICBbamFdWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBhdHRyaWJ1dGUgYW5pbWF0aW9uLW9wdGlvbnNcbiAgICogQHR5cGUge0V4cHJlc3Npb259XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgW2VuXVNwZWNpZnkgdGhlIGFuaW1hdGlvbidzIGR1cmF0aW9uLCB0aW1pbmcgYW5kIGRlbGF5IHdpdGggYW4gb2JqZWN0IGxpdGVyYWwuIEUuZy4gYHtkdXJhdGlvbjogMC4yLCBkZWxheTogMSwgdGltaW5nOiAnZWFzZS1pbid9YFsvZW5dXG4gICAqICBbamFd44Ki44OL44Oh44O844K344On44Oz5pmC44GuZHVyYXRpb24sIHRpbWluZywgZGVsYXnjgpLjgqrjg5bjgrjjgqfjgq/jg4jjg6rjg4bjg6njg6vjgafmjIflrprjgZfjgb7jgZnjgIJlLmcuIGB7ZHVyYXRpb246IDAuMiwgZGVsYXk6IDEsIHRpbWluZzogJ2Vhc2UtaW4nfWBbL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQGV2ZW50IHByZXB1c2hcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXUZpcmVkIGp1c3QgYmVmb3JlIGEgcGFnZSBpcyBwdXNoZWQuWy9lbl1cbiAgICogICBbamFdcGFnZeOBjHB1c2jjgZXjgozjgovnm7TliY3jgavnmbrngavjgZXjgozjgb7jgZnjgIJbL2phXVxuICAgKiBAcGFyYW0ge09iamVjdH0gZXZlbnQgW2VuXUV2ZW50IG9iamVjdC5bL2VuXVxuICAgKiBAcGFyYW0ge09iamVjdH0gZXZlbnQubmF2aWdhdG9yXG4gICAqICAgW2VuXUNvbXBvbmVudCBvYmplY3QuWy9lbl1cbiAgICogICBbamFd44Kz44Oz44Od44O844ON44Oz44OI44Gu44Kq44OW44K444Kn44Kv44OI44CCWy9qYV1cbiAgICogQHBhcmFtIHtPYmplY3R9IGV2ZW50LmN1cnJlbnRQYWdlXG4gICAqICAgW2VuXUN1cnJlbnQgcGFnZSBvYmplY3QuWy9lbl1cbiAgICogICBbamFd54++5Zyo44GucGFnZeOCquODluOCuOOCp+OCr+ODiOOAglsvamFdXG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IGV2ZW50LmNhbmNlbFxuICAgKiAgIFtlbl1DYWxsIHRoaXMgZnVuY3Rpb24gdG8gY2FuY2VsIHRoZSBwdXNoLlsvZW5dXG4gICAqICAgW2phXeOBk+OBrumWouaVsOOCkuWRvOOBs+WHuuOBmeOBqOOAgXB1c2jlh6bnkIbjgYzjgq3jg6Pjg7Pjgrvjg6vjgZXjgozjgb7jgZnjgIJbL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQGV2ZW50IHByZXBvcFxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dRmlyZWQganVzdCBiZWZvcmUgYSBwYWdlIGlzIHBvcHBlZC5bL2VuXVxuICAgKiAgIFtqYV1wYWdl44GMcG9w44GV44KM44KL55u05YmN44Gr55m654Gr44GV44KM44G+44GZ44CCWy9qYV1cbiAgICogQHBhcmFtIHtPYmplY3R9IGV2ZW50IFtlbl1FdmVudCBvYmplY3QuWy9lbl1cbiAgICogQHBhcmFtIHtPYmplY3R9IGV2ZW50Lm5hdmlnYXRvclxuICAgKiAgIFtlbl1Db21wb25lbnQgb2JqZWN0LlsvZW5dXG4gICAqICAgW2phXeOCs+ODs+ODneODvOODjeODs+ODiOOBruOCquODluOCuOOCp+OCr+ODiOOAglsvamFdXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBldmVudC5jdXJyZW50UGFnZVxuICAgKiAgIFtlbl1DdXJyZW50IHBhZ2Ugb2JqZWN0LlsvZW5dXG4gICAqICAgW2phXeePvuWcqOOBrnBhZ2Xjgqrjg5bjgrjjgqfjgq/jg4jjgIJbL2phXVxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBldmVudC5jYW5jZWxcbiAgICogICBbZW5dQ2FsbCB0aGlzIGZ1bmN0aW9uIHRvIGNhbmNlbCB0aGUgcG9wLlsvZW5dXG4gICAqICAgW2phXeOBk+OBrumWouaVsOOCkuWRvOOBs+WHuuOBmeOBqOOAgXBhZ2Xjga5wb3DjgYzjgq3jg6Pjg7Pjgrvjg6vjgZXjgozjgb7jgZnjgIJbL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQGV2ZW50IHBvc3RwdXNoXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1GaXJlZCBqdXN0IGFmdGVyIGEgcGFnZSBpcyBwdXNoZWQuWy9lbl1cbiAgICogICBbamFdcGFnZeOBjHB1c2jjgZXjgozjgabjgqLjg4vjg6Hjg7zjgrfjg6fjg7PjgYzntYLkuobjgZfjgabjgYvjgonnmbrngavjgZXjgozjgb7jgZnjgIJbL2phXVxuICAgKiBAcGFyYW0ge09iamVjdH0gZXZlbnQgW2VuXUV2ZW50IG9iamVjdC5bL2VuXVxuICAgKiBAcGFyYW0ge09iamVjdH0gZXZlbnQubmF2aWdhdG9yXG4gICAqICAgW2VuXUNvbXBvbmVudCBvYmplY3QuWy9lbl1cbiAgICogICBbamFd44Kz44Oz44Od44O844ON44Oz44OI44Gu44Kq44OW44K444Kn44Kv44OI44CCWy9qYV1cbiAgICogQHBhcmFtIHtPYmplY3R9IGV2ZW50LmVudGVyUGFnZVxuICAgKiAgIFtlbl1PYmplY3Qgb2YgdGhlIG5leHQgcGFnZS5bL2VuXVxuICAgKiAgIFtqYV1wdXNo44GV44KM44GfcGFnZeOCquODluOCuOOCp+OCr+ODiOOAglsvamFdXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBldmVudC5sZWF2ZVBhZ2VcbiAgICogICBbZW5dT2JqZWN0IG9mIHRoZSBwcmV2aW91cyBwYWdlLlsvZW5dXG4gICAqICAgW2phXeS7peWJjeOBrnBhZ2Xjgqrjg5bjgrjjgqfjgq/jg4jjgIJbL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQGV2ZW50IHBvc3Rwb3BcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXUZpcmVkIGp1c3QgYWZ0ZXIgYSBwYWdlIGlzIHBvcHBlZC5bL2VuXVxuICAgKiAgIFtqYV1wYWdl44GMcG9w44GV44KM44Gm44Ki44OL44Oh44O844K344On44Oz44GM57WC44KP44Gj44Gf5b6M44Gr55m654Gr44GV44KM44G+44GZ44CCWy9qYV1cbiAgICogQHBhcmFtIHtPYmplY3R9IGV2ZW50IFtlbl1FdmVudCBvYmplY3QuWy9lbl1cbiAgICogQHBhcmFtIHtPYmplY3R9IGV2ZW50Lm5hdmlnYXRvclxuICAgKiAgIFtlbl1Db21wb25lbnQgb2JqZWN0LlsvZW5dXG4gICAqICAgW2phXeOCs+ODs+ODneODvOODjeODs+ODiOOBruOCquODluOCuOOCp+OCr+ODiOOAglsvamFdXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBldmVudC5lbnRlclBhZ2VcbiAgICogICBbZW5dT2JqZWN0IG9mIHRoZSBuZXh0IHBhZ2UuWy9lbl1cbiAgICogICBbamFdcG9w44GV44KM44Gm6KGo56S644GV44KM44KL44Oa44O844K444Gu44Kq44OW44K444Kn44Kv44OI44CCWy9qYV1cbiAgICogQHBhcmFtIHtPYmplY3R9IGV2ZW50LmxlYXZlUGFnZVxuICAgKiAgIFtlbl1PYmplY3Qgb2YgdGhlIHByZXZpb3VzIHBhZ2UuWy9lbl1cbiAgICogICBbamFdcG9w44GV44KM44Gm5raI44GI44KL44Oa44O844K444Gu44Kq44OW44K444Kn44Kv44OI44CCWy9qYV1cbiAgICovXG5cbiAgZ2V0IGFuaW1hdG9yRmFjdG9yeSgpIHtcbiAgICByZXR1cm4gdGhpcy5fYW5pbWF0b3JGYWN0b3J5O1xuICB9XG5cbiAgaW5pdCgpIHtcbiAgICB0aGlzLl9pc1J1bm5pbmcgPSBmYWxzZTtcbiAgICB0aGlzLl9pbml0aWFsaXplZCA9IGZhbHNlO1xuICAgIHRoaXMuX3BhZ2VMb2FkZXIgPSBkZWZhdWx0UGFnZUxvYWRlcjtcbiAgICB0aGlzLl9wYWdlTWFwID0gbmV3IFdlYWtNYXAoKTtcblxuICAgIHRoaXMuX3VwZGF0ZUFuaW1hdG9yRmFjdG9yeSgpO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwcm9wZXJ0eSBwYWdlTG9hZGVyXG4gICAqIEB0eXBlIHtQYWdlTG9hZGVyfVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dWy9lbl1cbiAgICogICBbamFdUGFnZUxvYWRlcuOCpOODs+OCueOCv+ODs+OCueOCkuagvOe0jeOBl+OBpuOBhOOBvuOBmeOAglsvamFdXG4gICAqL1xuICBnZXQgcGFnZUxvYWRlcigpIHtcbiAgICByZXR1cm4gdGhpcy5fcGFnZUxvYWRlcjtcbiAgfVxuXG4gIHNldCBwYWdlTG9hZGVyKHBhZ2VMb2FkZXIpIHtcbiAgICBpZiAoIShwYWdlTG9hZGVyIGluc3RhbmNlb2YgUGFnZUxvYWRlcikpIHtcbiAgICAgIHRocm93IEVycm9yKCdGaXJzdCBwYXJhbWV0ZXIgbXVzdCBiZSBhbiBpbnN0YW5jZSBvZiBQYWdlTG9hZGVyLicpO1xuICAgIH1cbiAgICB0aGlzLl9wYWdlTG9hZGVyID0gcGFnZUxvYWRlcjtcbiAgfVxuXG4gIF9nZXRQYWdlVGFyZ2V0KCkge1xuICAgIHJldHVybiB0aGlzLl9wYWdlIHx8IHRoaXMuZ2V0QXR0cmlidXRlKCdwYWdlJyk7XG4gIH1cblxuICAvKipcbiAgICogQHByb3BlcnR5IHBhZ2VcbiAgICogQHR5cGUgeyp9XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1bL2VuXVxuICAgKiAgIFtqYV3liJ3mnJ/ljJbmmYLjgavoqq3jgb/ovrzjgoDjg5rjg7zjgrjjgpLmjIflrprjgZfjgb7jgZnjgIJgcGFnZWDlsZ7mgKfjgafmjIflrprjgZfjgZ/lgKTjgojjgorjgoJgcGFnZWDjg5fjg63jg5Hjg4bjgqPjgavmjIflrprjgZfjgZ/lgKTjgpLlhKrlhYjjgZfjgb7jgZnjgIJbL2phXVxuICAgKi9cbiAgZ2V0IHBhZ2UoKSB7XG4gICAgcmV0dXJuIHRoaXMuX3BhZ2U7XG4gIH1cblxuICBzZXQgcGFnZShwYWdlKSB7XG4gICAgdGhpcy5fcGFnZSA9IHBhZ2U7XG4gIH1cblxuICBjb25uZWN0ZWRDYWxsYmFjaygpIHtcbiAgICB0aGlzLm9uRGV2aWNlQmFja0J1dHRvbiA9IHRoaXMuX29uRGV2aWNlQmFja0J1dHRvbi5iaW5kKHRoaXMpO1xuXG4gICAgaWYgKHRoaXMuX2luaXRpYWxpemVkKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgdGhpcy5faW5pdGlhbGl6ZWQgPSB0cnVlO1xuXG4gICAgcmV3cml0YWJsZXMucmVhZHkodGhpcywgKCkgPT4ge1xuICAgICAgaWYgKHRoaXMucGFnZXMubGVuZ3RoID09PSAwICYmIHRoaXMuX2dldFBhZ2VUYXJnZXQoKSkge1xuICAgICAgICB0aGlzLnB1c2hQYWdlKHRoaXMuX2dldFBhZ2VUYXJnZXQoKSwge2FuaW1hdGlvbjogJ25vbmUnfSk7XG4gICAgICB9IGVsc2UgaWYgKHRoaXMucGFnZXMubGVuZ3RoID4gMCkge1xuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMucGFnZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICBpZiAodGhpcy5wYWdlc1tpXS5ub2RlTmFtZSAhPT0gJ09OUy1QQUdFJykge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdUaGUgY2hpbGRyZW4gb2YgPG9ucy1uYXZpZ2F0b3I+IG5lZWQgdG8gYmUgb2YgdHlwZSA8b25zLXBhZ2U+Jyk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHRoaXMudG9wUGFnZSkge1xuICAgICAgICAgIGNvbnRlbnRSZWFkeSh0aGlzLnRvcFBhZ2UsICgpID0+XG4gICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgICAgdGhpcy50b3BQYWdlLl9zaG93KCk7XG4gICAgICAgICAgICAgIHRoaXMuX3VwZGF0ZUxhc3RQYWdlQmFja0J1dHRvbigpO1xuICAgICAgICAgICAgfSwgMClcbiAgICAgICAgICApO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBjb250ZW50UmVhZHkodGhpcywgKCkgPT4ge1xuICAgICAgICAgIGlmICh0aGlzLnBhZ2VzLmxlbmd0aCA9PT0gMCAmJiB0aGlzLl9nZXRQYWdlVGFyZ2V0KCkpIHtcbiAgICAgICAgICAgIHRoaXMucHVzaFBhZ2UodGhpcy5fZ2V0UGFnZVRhcmdldCgpLCB7YW5pbWF0aW9uOiAnbm9uZSd9KTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgX3VwZGF0ZUFuaW1hdG9yRmFjdG9yeSgpIHtcbiAgICB0aGlzLl9hbmltYXRvckZhY3RvcnkgPSBuZXcgQW5pbWF0b3JGYWN0b3J5KHtcbiAgICAgIGFuaW1hdG9yczogX2FuaW1hdG9yRGljdCxcbiAgICAgIGJhc2VDbGFzczogTmF2aWdhdG9yVHJhbnNpdGlvbkFuaW1hdG9yLFxuICAgICAgYmFzZUNsYXNzTmFtZTogJ05hdmlnYXRvclRyYW5zaXRpb25BbmltYXRvcicsXG4gICAgICBkZWZhdWx0QW5pbWF0aW9uOiB0aGlzLmdldEF0dHJpYnV0ZSgnYW5pbWF0aW9uJylcbiAgICB9KTtcbiAgfVxuXG4gIGRpc2Nvbm5lY3RlZENhbGxiYWNrKCkge1xuICAgIHRoaXMuX2JhY2tCdXR0b25IYW5kbGVyLmRlc3Ryb3koKTtcbiAgICB0aGlzLl9iYWNrQnV0dG9uSGFuZGxlciA9IG51bGw7XG4gIH1cblxuICBzdGF0aWMgZ2V0IG9ic2VydmVkQXR0cmlidXRlcygpIHtcbiAgICByZXR1cm4gWydhbmltYXRpb24nXTtcbiAgfVxuXG4gIGF0dHJpYnV0ZUNoYW5nZWRDYWxsYmFjayhuYW1lLCBsYXN0LCBjdXJyZW50KSB7XG4gICAgaWYgKG5hbWUgPT09ICdhbmltYXRpb24nKSB7XG4gICAgICB0aGlzLl91cGRhdGVBbmltYXRvckZhY3RvcnkoKTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogQG1ldGhvZCBwb3BQYWdlXG4gICAqIEBzaWduYXR1cmUgcG9wUGFnZShbb3B0aW9uc10pXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0aW9uc11cbiAgICogICBbZW5dUGFyYW1ldGVyIG9iamVjdC5bL2VuXVxuICAgKiAgIFtqYV3jgqrjg5fjgrfjg6fjg7PjgpLmjIflrprjgZnjgovjgqrjg5bjgrjjgqfjgq/jg4jjgIJbL2phXVxuICAgKiBAcGFyYW0ge1N0cmluZ30gW29wdGlvbnMuYW5pbWF0aW9uXVxuICAgKiAgIFtlbl1cbiAgICogICAgIEFuaW1hdGlvbiBuYW1lLiBBdmFpbGFibGUgYW5pbWF0aW9ucyBhcmUgYFwic2xpZGVcImAsIGBcImxpZnRcImAsIGBcImZhZGVcImAgYW5kIGBcIm5vbmVcImAuXG4gICAqXG4gICAqICAgICBUaGVzZSBhcmUgcGxhdGZvcm0gYmFzZWQgYW5pbWF0aW9ucy4gRm9yIGZpeGVkIGFuaW1hdGlvbnMsIGFkZCBgXCItaW9zXCJgIG9yIGBcIi1tZFwiYCBzdWZmaXggdG8gdGhlIGFuaW1hdGlvbiBuYW1lLiBFLmcuIGBcImxpZnQtaW9zXCJgLCBgXCJsaWZ0LW1kXCJgLiBEZWZhdWx0cyB2YWx1ZXMgYXJlIGBcInNsaWRlLWlvc1wiYCBhbmQgYFwiZmFkZS1tZFwiYC5cbiAgICogICBbL2VuXVxuICAgKiAgIFtqYV1bL2phXVxuICAgKiBAcGFyYW0ge1N0cmluZ30gW29wdGlvbnMuYW5pbWF0aW9uT3B0aW9uc11cbiAgICogICBbZW5dU3BlY2lmeSB0aGUgYW5pbWF0aW9uJ3MgZHVyYXRpb24sIGRlbGF5IGFuZCB0aW1pbmcuIEUuZy4gYHtkdXJhdGlvbjogMC4yLCBkZWxheTogMC40LCB0aW1pbmc6ICdlYXNlLWluJ31gLlsvZW5dXG4gICAqICAgW2phXeOCouODi+ODoeODvOOCt+ODp+ODs+aZguOBrmR1cmF0aW9uLCBkZWxheSwgdGltaW5n44KS5oyH5a6a44GX44G+44GZ44CCZS5nLiB7ZHVyYXRpb246IDAuMiwgZGVsYXk6IDAuNCwgdGltaW5nOiAnZWFzZS1pbid9Wy9qYV1cbiAgICogQHBhcmFtIHtCb29sZWFufSBbb3B0aW9ucy5yZWZyZXNoXVxuICAgKiAgIFtlbl1UaGUgcHJldmlvdXMgcGFnZSB3aWxsIGJlIHJlZnJlc2hlZCAoZGVzdHJveWVkIGFuZCBjcmVhdGVkIGFnYWluKSBiZWZvcmUgcG9wUGFnZSBhY3Rpb24uWy9lbl1cbiAgICogICBbamFdcG9wUGFnZeOBmeOCi+WJjeOBq+OAgeWJjeOBq+OBguOCi+ODmuODvOOCuOOCkueUn+aIkOOBl+OBquOBiuOBl+OBpuabtOaWsOOBmeOCi+WgtOWQiOOBq3RydWXjgpLmjIflrprjgZfjgb7jgZnjgIJbL2phXVxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBbb3B0aW9ucy5jYWxsYmFja11cbiAgICogICBbZW5dRnVuY3Rpb24gdGhhdCBpcyBjYWxsZWQgd2hlbiB0aGUgdHJhbnNpdGlvbiBoYXMgZW5kZWQuWy9lbl1cbiAgICogICBbamFd44GT44Gu44Oh44K944OD44OJ44Gr44KI44KL55S76Z2i6YG356e744GM57WC5LqG44GX44Gf6Zqb44Gr5ZG844Gz5Ye644GV44KM44KL6Zai5pWw44Kq44OW44K444Kn44Kv44OI44KS5oyH5a6a44GX44G+44GZ44CCWy9qYV1cbiAgICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zLmRhdGFdXG4gICAqICAgW2VuXUN1c3RvbSBkYXRhIHRoYXQgd2lsbCBiZSBzdG9yZWQgaW4gdGhlIG5ldyBwYWdlIGVsZW1lbnQuWy9lbl1cbiAgICogICBbamFdWy9qYV1cbiAgICogQHJldHVybiB7UHJvbWlzZX1cbiAgICogICBbZW5dUHJvbWlzZSB3aGljaCByZXNvbHZlcyB0byB0aGUgcmV2ZWFsZWQgcGFnZS5bL2VuXVxuICAgKiAgIFtqYV3mmI7jgonjgYvjgavjgZfjgZ/jg5rjg7zjgrjjgpLop6PmsbrjgZnjgotQcm9taXNl44KS6L+U44GX44G+44GZ44CCWy9qYV1cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXVBvcHMgdGhlIGN1cnJlbnQgcGFnZSBmcm9tIHRoZSBwYWdlIHN0YWNrLiBUaGUgcHJldmlvdXMgcGFnZSB3aWxsIGJlIGRpc3BsYXllZC5bL2VuXVxuICAgKiAgIFtqYV3nj77lnKjooajnpLrkuK3jga7jg5rjg7zjgrjjgpLjg5rjg7zjgrjjgrnjgr/jg4Pjgq/jgYvjgonlj5bjgorpmaTjgY3jgb7jgZnjgILkuIDjgaTliY3jga7jg5rjg7zjgrjjgavmiLvjgorjgb7jgZnjgIJbL2phXVxuICAgKi9cbiAgcG9wUGFnZShvcHRpb25zID0ge30pIHtcbiAgICAoe29wdGlvbnN9ID0gdGhpcy5fcHJlcGFyZVBhZ2VBbmRPcHRpb25zKG51bGwsIG9wdGlvbnMpKTtcblxuICAgIGNvbnN0IHBvcFVwZGF0ZSA9ICgpID0+IG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7XG4gICAgICB0aGlzLl9wYWdlTG9hZGVyLnVubG9hZCh0aGlzLnBhZ2VzW3RoaXMucGFnZXMubGVuZ3RoIC0gMV0pO1xuICAgICAgcmVzb2x2ZSgpO1xuICAgIH0pO1xuXG4gICAgaWYgKCFvcHRpb25zLnJlZnJlc2gpIHtcbiAgICAgIHJldHVybiB0aGlzLl9wb3BQYWdlKG9wdGlvbnMsIHBvcFVwZGF0ZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiB0aGlzLl9wb3BQYWdlQW5kUmVmcmVzaChvcHRpb25zLCBwb3BVcGRhdGUpO1xuICAgIH1cbiAgfVxuXG4gIF9wb3BQYWdlQW5kUmVmcmVzaChvcHRpb25zLCBwb3BVcGRhdGUpIHtcbiAgICB1dGlsLndhcm4oJ1xcJ3JlZnJlc2hcXCcgb3B0aW9uIGZvciBwdXNoUGFnZSBoYXMgYmVlbiBkZXByZWNhdGVkIGFuZCB3aWxsIGJlIHJlbW92ZWQgaW4gdGhlIG5leHQgcmVsZWFzZS4nKTtcblxuICAgIGNvbnN0IGluZGV4ID0gdGhpcy5wYWdlcy5sZW5ndGggLSAyO1xuICAgIGNvbnN0IG9sZFBhZ2UgPSB0aGlzLnBhZ2VzW2luZGV4XTtcblxuICAgIGlmICghdGhpcy5fcGFnZU1hcC5oYXMob2xkUGFnZSkpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignUmVmcmVzaCBvcHRpb24gY2Fubm90IGJlIHVzZWQgd2l0aCBwYWdlcyBkaXJlY3RseSBpbnNpZGUgdGhlIE5hdmlnYXRvci4gVXNlIG9ucy10ZW1wbGF0ZSBpbnN0ZWFkLicpO1xuICAgIH1cblxuICAgIGNvbnN0IHBhZ2UgPSB0aGlzLl9wYWdlTWFwLmdldChvbGRQYWdlKTtcblxuICAgIHJldHVybiBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHtcbiAgICAgIGNvbnN0IG9wdGlvbnMgPSB7XG4gICAgICAgIHBhZ2U6IHBhZ2UsXG4gICAgICAgIHBhcmVudDogdGhpcyxcbiAgICAgICAgcGFyYW1zOiBvbGRQYWdlLnB1c2hlZE9wdGlvbnMgPyBvbGRQYWdlLnB1c2hlZE9wdGlvbnMuZGF0YSA6IHt9XG4gICAgICB9O1xuXG4gICAgICB0aGlzLl9wYWdlTG9hZGVyLmxvYWQob3B0aW9ucywgcGFnZUVsZW1lbnQgPT4ge1xuICAgICAgICB0aGlzLl9wYWdlTWFwLnNldChwYWdlRWxlbWVudCwgcGFnZSk7XG5cbiAgICAgICAgcGFnZUVsZW1lbnQgPSB1dGlsLmV4dGVuZChwYWdlRWxlbWVudCwge1xuICAgICAgICAgIGRhdGE6IG9sZFBhZ2UuZGF0YSxcbiAgICAgICAgICBwdXNoZWRPcHRpb25zOiBvbGRQYWdlLnB1c2hlZE9wdGlvbnMgfHwge31cbiAgICAgICAgfSk7XG5cbiAgICAgICAgdGhpcy5pbnNlcnRCZWZvcmUocGFnZUVsZW1lbnQsIG9sZFBhZ2UgPyBvbGRQYWdlIDogbnVsbCk7XG4gICAgICAgIHRoaXMuX3BhZ2VMb2FkZXIudW5sb2FkKG9sZFBhZ2UpO1xuICAgICAgICByZXNvbHZlKCk7XG4gICAgICB9KTtcblxuICAgIH0pLnRoZW4oKCkgPT4gdGhpcy5fcG9wUGFnZShvcHRpb25zLCBwb3BVcGRhdGUpKTtcblxuICB9XG5cbiAgX3BvcFBhZ2Uob3B0aW9ucywgdXBkYXRlID0gKCkgPT4gUHJvbWlzZS5yZXNvbHZlKCkpIHtcbiAgICBpZiAodGhpcy5faXNSdW5uaW5nKSB7XG4gICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoJ3BvcFBhZ2UgaXMgYWxyZWFkeSBydW5uaW5nLicpO1xuICAgIH1cblxuICAgIGlmICh0aGlzLnBhZ2VzLmxlbmd0aCA8PSAxKSB7XG4gICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoJ29ucy1uYXZpZ2F0b3JcXCdzIHBhZ2Ugc3RhY2sgaXMgZW1wdHkuJyk7XG4gICAgfVxuXG4gICAgaWYgKHRoaXMuX2VtaXRQcmVQb3BFdmVudCgpKSB7XG4gICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoJ0NhbmNlbGVkIGluIHByZXBvcCBldmVudC4nKTtcbiAgICB9XG5cbiAgICBjb25zdCBsZW5ndGggPSB0aGlzLnBhZ2VzLmxlbmd0aDtcblxuICAgIHRoaXMuX2lzUnVubmluZyA9IHRydWU7XG5cbiAgICB0aGlzLnBhZ2VzW2xlbmd0aCAtIDJdLnVwZGF0ZUJhY2tCdXR0b24oKGxlbmd0aCAtIDIpID4gMCk7XG5cbiAgICByZXR1cm4gbmV3IFByb21pc2UocmVzb2x2ZSA9PiB7XG4gICAgICBjb25zdCBsZWF2ZVBhZ2UgPSB0aGlzLnBhZ2VzW2xlbmd0aCAtIDFdO1xuICAgICAgY29uc3QgZW50ZXJQYWdlID0gdGhpcy5wYWdlc1tsZW5ndGggLSAyXTtcblxuICAgICAgb3B0aW9ucy5hbmltYXRpb24gPSBvcHRpb25zLmFuaW1hdGlvbiB8fCAobGVhdmVQYWdlLnB1c2hlZE9wdGlvbnMgPyBsZWF2ZVBhZ2UucHVzaGVkT3B0aW9ucy5hbmltYXRpb24gOiB1bmRlZmluZWQpO1xuICAgICAgb3B0aW9ucy5hbmltYXRpb25PcHRpb25zID0gdXRpbC5leHRlbmQoXG4gICAgICAgIHt9LFxuICAgICAgICBsZWF2ZVBhZ2UucHVzaGVkT3B0aW9ucyA/IGxlYXZlUGFnZS5wdXNoZWRPcHRpb25zLmFuaW1hdGlvbk9wdGlvbnMgOiB7fSxcbiAgICAgICAgb3B0aW9ucy5hbmltYXRpb25PcHRpb25zIHx8IHt9XG4gICAgICApO1xuXG4gICAgICBpZiAob3B0aW9ucy5kYXRhKSB7XG4gICAgICAgIGVudGVyUGFnZS5kYXRhID0gdXRpbC5leHRlbmQoe30sIGVudGVyUGFnZS5kYXRhIHx8IHt9LCBvcHRpb25zLmRhdGEgfHwge30pO1xuICAgICAgfVxuXG4gICAgICBjb25zdCBjYWxsYmFjayA9ICgpID0+IHtcbiAgICAgICAgdXBkYXRlKCkudGhlbigoKSA9PiB7XG4gICAgICAgICAgdGhpcy5faXNSdW5uaW5nID0gZmFsc2U7XG5cbiAgICAgICAgICBlbnRlclBhZ2UuX3Nob3coKTtcbiAgICAgICAgICB1dGlsLnRyaWdnZXJFbGVtZW50RXZlbnQodGhpcywgJ3Bvc3Rwb3AnLCB7bGVhdmVQYWdlLCBlbnRlclBhZ2UsIG5hdmlnYXRvcjogdGhpc30pO1xuXG4gICAgICAgICAgaWYgKHR5cGVvZiBvcHRpb25zLmNhbGxiYWNrID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICBvcHRpb25zLmNhbGxiYWNrKCk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgcmVzb2x2ZShlbnRlclBhZ2UpO1xuICAgICAgICB9KTtcbiAgICAgIH07XG5cbiAgICAgIGxlYXZlUGFnZS5faGlkZSgpO1xuICAgICAgY29uc3QgYW5pbWF0b3IgPSB0aGlzLl9hbmltYXRvckZhY3RvcnkubmV3QW5pbWF0b3Iob3B0aW9ucyk7XG4gICAgICBhbmltYXRvci5wb3AodGhpcy5wYWdlc1tsZW5ndGggLSAyXSwgdGhpcy5wYWdlc1tsZW5ndGggLSAxXSwgY2FsbGJhY2spO1xuICAgIH0pLmNhdGNoKCgpID0+IHRoaXMuX2lzUnVubmluZyA9IGZhbHNlKTtcbiAgfVxuXG5cbiAgLyoqXG4gICAqIEBtZXRob2QgcHVzaFBhZ2VcbiAgICogQHNpZ25hdHVyZSBwdXNoUGFnZShwYWdlLCBbb3B0aW9uc10pXG4gICAqIEBwYXJhbSB7U3RyaW5nfSBwYWdlXG4gICAqICAgW2VuXVBhZ2UgVVJMLiBDYW4gYmUgZWl0aGVyIGEgSFRNTCBkb2N1bWVudCBvciBhIHRlbXBsYXRlIGRlZmluZWQgd2l0aCB0aGUgYDxvbnMtdGVtcGxhdGU+YCB0YWcuWy9lbl1cbiAgICogICBbamFdcGFnZeOBrlVSTOOBi+OAgeOCguOBl+OBj+OBr29ucy10ZW1wbGF0ZeOBp+Wuo+iogOOBl+OBn+ODhuODs+ODl+ODrOODvOODiOOBrmlk5bGe5oCn44Gu5YCk44KS5oyH5a6a44Gn44GN44G+44GZ44CCWy9qYV1cbiAgICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zXVxuICAgKiAgIFtlbl1QYXJhbWV0ZXIgb2JqZWN0LlsvZW5dXG4gICAqICAgW2phXeOCquODl+OCt+ODp+ODs+OCkuaMh+WumuOBmeOCi+OCquODluOCuOOCp+OCr+ODiOOAglsvamFdXG4gICAqIEBwYXJhbSB7U3RyaW5nfSBbb3B0aW9ucy5wYWdlXVxuICAgKiAgIFtlbl1QYWdlIFVSTC4gT25seSBuZWNlc3NhcnkgaWYgYHBhZ2VgIHBhcmFtZXRlciBpcyBudWxsIG9yIHVuZGVmaW5lZC5bL2VuXVxuICAgKiAgIFtqYV1bL2phXVxuICAgKiBAcGFyYW0ge1N0cmluZ30gW29wdGlvbnMucGFnZUhUTUxdXG4gICAqICAgW2VuXUhUTUwgY29kZSB0aGF0IHdpbGwgYmUgY29tcHV0ZWQgYXMgYSBuZXcgcGFnZS4gT3ZlcndyaXRlcyBgcGFnZWAgcGFyYW1ldGVyLlsvZW5dXG4gICAqICAgW2phXVsvamFdXG4gICAqIEBwYXJhbSB7U3RyaW5nfSBbb3B0aW9ucy5hbmltYXRpb25dXG4gICAqICAgW2VuXVxuICAgKiAgICAgQW5pbWF0aW9uIG5hbWUuIEF2YWlsYWJsZSBhbmltYXRpb25zIGFyZSBgXCJzbGlkZVwiYCwgYFwibGlmdFwiYCwgYFwiZmFkZVwiYCBhbmQgYFwibm9uZVwiYC5cbiAgICpcbiAgICogICAgIFRoZXNlIGFyZSBwbGF0Zm9ybSBiYXNlZCBhbmltYXRpb25zLiBGb3IgZml4ZWQgYW5pbWF0aW9ucywgYWRkIGBcIi1pb3NcImAgb3IgYFwiLW1kXCJgIHN1ZmZpeCB0byB0aGUgYW5pbWF0aW9uIG5hbWUuIEUuZy4gYFwibGlmdC1pb3NcImAsIGBcImxpZnQtbWRcImAuIERlZmF1bHRzIHZhbHVlcyBhcmUgYFwic2xpZGUtaW9zXCJgIGFuZCBgXCJmYWRlLW1kXCJgLlxuICAgKiAgIFsvZW5dXG4gICAqICAgW2phXVsvamFdXG4gICAqIEBwYXJhbSB7U3RyaW5nfSBbb3B0aW9ucy5hbmltYXRpb25PcHRpb25zXVxuICAgKiAgIFtlbl1TcGVjaWZ5IHRoZSBhbmltYXRpb24ncyBkdXJhdGlvbiwgZGVsYXkgYW5kIHRpbWluZy4gRS5nLiBge2R1cmF0aW9uOiAwLjIsIGRlbGF5OiAwLjQsIHRpbWluZzogJ2Vhc2UtaW4nfWBbL2VuXVxuICAgKiAgIFtqYV3jgqLjg4vjg6Hjg7zjgrfjg6fjg7PmmYLjga5kdXJhdGlvbiwgZGVsYXksIHRpbWluZ+OCkuaMh+WumuOBl+OBvuOBmeOAgmUuZy4gYHtkdXJhdGlvbjogMC4yLCBkZWxheTogMC40LCB0aW1pbmc6ICdlYXNlLWluJ31gIFsvamFdXG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IFtvcHRpb25zLmNhbGxiYWNrXVxuICAgKiAgIFtlbl1GdW5jdGlvbiB0aGF0IGlzIGNhbGxlZCB3aGVuIHRoZSB0cmFuc2l0aW9uIGhhcyBlbmRlZC5bL2VuXVxuICAgKiAgIFtqYV1wdXNoUGFnZSgp44Gr44KI44KL55S76Z2i6YG356e744GM57WC5LqG44GX44Gf5pmC44Gr5ZG844Gz5Ye644GV44KM44KL6Zai5pWw44Kq44OW44K444Kn44Kv44OI44KS5oyH5a6a44GX44G+44GZ44CCWy9qYV1cbiAgICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zLmRhdGFdXG4gICAqICAgW2VuXUN1c3RvbSBkYXRhIHRoYXQgd2lsbCBiZSBzdG9yZWQgaW4gdGhlIG5ldyBwYWdlIGVsZW1lbnQuWy9lbl1cbiAgICogICBbamFdWy9qYV1cbiAgICogQHJldHVybiB7UHJvbWlzZX1cbiAgICogICBbZW5dUHJvbWlzZSB3aGljaCByZXNvbHZlcyB0byB0aGUgcHVzaGVkIHBhZ2UuWy9lbl1cbiAgICogICBbamFd6L+95Yqg44GX44Gf44Oa44O844K444KS6Kej5rG644GZ44KLUHJvbWlzZeOCkui/lOOBl+OBvuOBmeOAglsvamFdXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1QdXNoZXMgdGhlIHNwZWNpZmllZCBwYWdlIGludG8gdGhlIHN0YWNrLlsvZW5dXG4gICAqICAgW2phXeaMh+WumuOBl+OBn3BhZ2XjgpLmlrDjgZfjgYTjg5rjg7zjgrjjgrnjgr/jg4Pjgq/jgavov73liqDjgZfjgb7jgZnjgILmlrDjgZfjgYTjg5rjg7zjgrjjgYzooajnpLrjgZXjgozjgb7jgZnjgIJbL2phXVxuICAgKi9cbiAgcHVzaFBhZ2UocGFnZSwgb3B0aW9ucyA9IHt9KSB7XG4gICAgKHtwYWdlLCBvcHRpb25zfSA9IHRoaXMuX3ByZXBhcmVQYWdlQW5kT3B0aW9ucyhwYWdlLCBvcHRpb25zKSk7XG5cbiAgICBjb25zdCBwcmVwYXJlID0gcGFnZUVsZW1lbnQgPT4ge1xuICAgICAgdGhpcy5fdmVyaWZ5UGFnZUVsZW1lbnQocGFnZUVsZW1lbnQpO1xuICAgICAgdGhpcy5fcGFnZU1hcC5zZXQocGFnZUVsZW1lbnQsIHBhZ2UpO1xuICAgICAgcGFnZUVsZW1lbnQgPSB1dGlsLmV4dGVuZChwYWdlRWxlbWVudCwge1xuICAgICAgICBkYXRhOiBvcHRpb25zLmRhdGFcbiAgICAgIH0pO1xuICAgICAgcGFnZUVsZW1lbnQuc3R5bGUudmlzaWJpbGl0eSA9ICdoaWRkZW4nO1xuICAgIH07XG5cbiAgICBpZiAob3B0aW9ucy5wYWdlSFRNTCkge1xuICAgICAgcmV0dXJuIHRoaXMuX3B1c2hQYWdlKG9wdGlvbnMsICgpID0+IG5ldyBQcm9taXNlKHJlc29sdmUgPT4ge1xuICAgICAgICBpbnN0YW50UGFnZUxvYWRlci5sb2FkKHtwYWdlOiBvcHRpb25zLnBhZ2VIVE1MLCBwYXJlbnQ6IHRoaXMsIHBhcmFtczogb3B0aW9ucy5kYXRhfSwgcGFnZUVsZW1lbnQgPT4ge1xuICAgICAgICAgIHByZXBhcmUocGFnZUVsZW1lbnQpO1xuICAgICAgICAgIHJlc29sdmUoKTtcbiAgICAgICAgfSk7XG4gICAgICB9KSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRoaXMuX3B1c2hQYWdlKG9wdGlvbnMsICgpID0+IG5ldyBQcm9taXNlKHJlc29sdmUgPT4ge1xuICAgICAgdGhpcy5fcGFnZUxvYWRlci5sb2FkKHtwYWdlLCBwYXJlbnQ6IHRoaXMsIHBhcmFtczogb3B0aW9ucy5kYXRhfSwgcGFnZUVsZW1lbnQgPT4ge1xuICAgICAgICBwcmVwYXJlKHBhZ2VFbGVtZW50KTtcbiAgICAgICAgcmVzb2x2ZSgpO1xuICAgICAgfSk7XG4gICAgfSkpO1xuICB9XG5cbiAgX3B1c2hQYWdlKG9wdGlvbnMgPSB7fSwgdXBkYXRlID0gKCkgPT4gUHJvbWlzZS5yZXNvbHZlKCkpIHtcbiAgICBpZiAodGhpcy5faXNSdW5uaW5nKSB7XG4gICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoJ3B1c2hQYWdlIGlzIGFscmVhZHkgcnVubmluZy4nKTtcbiAgICB9XG5cbiAgICBpZiAodGhpcy5fZW1pdFByZVB1c2hFdmVudCgpKSB7XG4gICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoJ0NhbmNlbGVkIGluIHByZXB1c2ggZXZlbnQuJyk7XG4gICAgfVxuXG4gICAgdGhpcy5faXNSdW5uaW5nID0gdHJ1ZTtcblxuICAgIGNvbnN0IGFuaW1hdGlvbk9wdGlvbnMgPSBBbmltYXRvckZhY3RvcnkucGFyc2VBbmltYXRpb25PcHRpb25zU3RyaW5nKHRoaXMuZ2V0QXR0cmlidXRlKCdhbmltYXRpb24tb3B0aW9ucycpKTtcbiAgICBvcHRpb25zID0gdXRpbC5leHRlbmQoe30sIHRoaXMub3B0aW9ucyB8fCB7fSwge2FuaW1hdGlvbk9wdGlvbnN9LCBvcHRpb25zKTtcblxuICAgIGNvbnN0IGFuaW1hdG9yID0gdGhpcy5fYW5pbWF0b3JGYWN0b3J5Lm5ld0FuaW1hdG9yKG9wdGlvbnMpO1xuXG4gICAgcmV0dXJuIHVwZGF0ZSgpLnRoZW4oKCkgPT4ge1xuICAgICAgY29uc3QgcGFnZUxlbmd0aCA9IHRoaXMucGFnZXMubGVuZ3RoO1xuXG4gICAgICBjb25zdCBlbnRlclBhZ2UgID0gdGhpcy5wYWdlc1twYWdlTGVuZ3RoIC0gMV07XG4gICAgICBjb25zdCBsZWF2ZVBhZ2UgPSBvcHRpb25zLmxlYXZlUGFnZSB8fCB0aGlzLnBhZ2VzW3BhZ2VMZW5ndGggLSAyXTtcblxuICAgICAgaWYgKGVudGVyUGFnZS5ub2RlTmFtZSAhPT0gJ09OUy1QQUdFJykge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ09ubHkgZWxlbWVudHMgb2YgdHlwZSA8b25zLXBhZ2U+IGNhbiBiZSBwdXNoZWQgdG8gdGhlIG5hdmlnYXRvcicpO1xuICAgICAgfVxuXG4gICAgICBlbnRlclBhZ2UudXBkYXRlQmFja0J1dHRvbihwYWdlTGVuZ3RoIC0gMSk7XG5cbiAgICAgIGVudGVyUGFnZS5wdXNoZWRPcHRpb25zID0gdXRpbC5leHRlbmQoe30sIGVudGVyUGFnZS5wdXNoZWRPcHRpb25zIHx8IHt9LCBvcHRpb25zIHx8IHt9KTtcbiAgICAgIGVudGVyUGFnZS5kYXRhID0gdXRpbC5leHRlbmQoe30sIGVudGVyUGFnZS5kYXRhIHx8IHt9LCBvcHRpb25zLmRhdGEgfHwge30pO1xuICAgICAgZW50ZXJQYWdlLnVubG9hZCA9IGVudGVyUGFnZS51bmxvYWQgfHwgb3B0aW9ucy51bmxvYWQ7XG5cbiAgICAgIHJldHVybiBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHtcbiAgICAgICAgY29uc3QgZG9uZSA9ICgpID0+IHtcbiAgICAgICAgICB0aGlzLl9pc1J1bm5pbmcgPSBmYWxzZTtcblxuICAgICAgICAgIHNldEltbWVkaWF0ZSgoKSA9PiBlbnRlclBhZ2UuX3Nob3coKSk7XG4gICAgICAgICAgdXRpbC50cmlnZ2VyRWxlbWVudEV2ZW50KHRoaXMsICdwb3N0cHVzaCcsIHtsZWF2ZVBhZ2UsIGVudGVyUGFnZSwgbmF2aWdhdG9yOiB0aGlzfSk7XG5cbiAgICAgICAgICBpZiAodHlwZW9mIG9wdGlvbnMuY2FsbGJhY2sgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgIG9wdGlvbnMuY2FsbGJhY2soKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICByZXNvbHZlKGVudGVyUGFnZSk7XG4gICAgICAgIH07XG5cbiAgICAgICAgZW50ZXJQYWdlLnN0eWxlLnZpc2liaWxpdHkgPSAnJztcbiAgICAgICAgaWYgKGxlYXZlUGFnZSkge1xuICAgICAgICAgIGxlYXZlUGFnZS5faGlkZSgpO1xuICAgICAgICAgIGFuaW1hdG9yLnB1c2goZW50ZXJQYWdlLCBsZWF2ZVBhZ2UsIGRvbmUpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGRvbmUoKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfSkuY2F0Y2goKGVycm9yKSA9PiB7XG4gICAgICB0aGlzLl9pc1J1bm5pbmcgPSBmYWxzZTtcbiAgICAgIHRocm93IGVycm9yO1xuICAgIH0pO1xuICB9XG5cbiAgLyoqXG4gICAqIEBtZXRob2QgcmVwbGFjZVBhZ2VcbiAgICogQHNpZ25hdHVyZSByZXBsYWNlUGFnZShwYWdlLCBbb3B0aW9uc10pXG4gICAqIEByZXR1cm4ge1Byb21pc2V9XG4gICAqICAgW2VuXVByb21pc2Ugd2hpY2ggcmVzb2x2ZXMgdG8gdGhlIG5ldyBwYWdlLlsvZW5dXG4gICAqICAgW2phXeaWsOOBl+OBhOODmuODvOOCuOOCkuino+axuuOBmeOCi1Byb21pc2XjgpLov5TjgZfjgb7jgZnjgIJbL2phXVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dUmVwbGFjZXMgdGhlIGN1cnJlbnQgdG9wIHBhZ2Ugd2l0aCB0aGUgc3BlY2lmaWVkIG9uZS4gRXh0ZW5kcyBgcHVzaFBhZ2UoKWAgcGFyYW1ldGVycy5bL2VuXVxuICAgKiAgIFtqYV3nj77lnKjooajnpLrkuK3jga7jg5rjg7zjgrjjgpLjgpLmjIflrprjgZfjgZ/jg5rjg7zjgrjjgavnva7jgY3mj5vjgYjjgb7jgZnjgIJbL2phXVxuICAgKi9cbiAgcmVwbGFjZVBhZ2UocGFnZSwgb3B0aW9ucyA9IHt9KSB7XG4gICAgcmV0dXJuIHRoaXMucHVzaFBhZ2UocGFnZSwgb3B0aW9ucylcbiAgICAgIC50aGVuKHJlc29sdmVkVmFsdWUgPT4ge1xuICAgICAgICBpZiAodGhpcy5wYWdlcy5sZW5ndGggPiAxKSB7XG4gICAgICAgICAgdGhpcy5fcGFnZUxvYWRlci51bmxvYWQodGhpcy5wYWdlc1t0aGlzLnBhZ2VzLmxlbmd0aCAtIDJdKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLl91cGRhdGVMYXN0UGFnZUJhY2tCdXR0b24oKTtcblxuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHJlc29sdmVkVmFsdWUpO1xuICAgICAgfSk7XG4gIH1cblxuICAvKipcbiAgICogQG1ldGhvZCBpbnNlcnRQYWdlXG4gICAqIEBzaWduYXR1cmUgaW5zZXJ0UGFnZShpbmRleCwgcGFnZSwgW29wdGlvbnNdKVxuICAgKiBAcGFyYW0ge051bWJlcn0gaW5kZXhcbiAgICogICBbZW5dVGhlIGluZGV4IHdoZXJlIGl0IHNob3VsZCBiZSBpbnNlcnRlZC5bL2VuXVxuICAgKiAgIFtqYV3jgrnjgr/jg4Pjgq/jgavmjL/lhaXjgZnjgovkvY3nva7jga7jgqTjg7Pjg4fjg4Pjgq/jgrnjgpLmjIflrprjgZfjgb7jgZnjgIJbL2phXVxuICAgKiBAcmV0dXJuIHtQcm9taXNlfVxuICAgKiAgIFtlbl1Qcm9taXNlIHdoaWNoIHJlc29sdmVzIHRvIHRoZSBpbnNlcnRlZCBwYWdlLlsvZW5dXG4gICAqICAgW2phXeaMh+WumuOBl+OBn+ODmuODvOOCuOOCkuino+axuuOBmeOCi1Byb21pc2XjgpLov5TjgZfjgb7jgZnjgIJbL2phXVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dSW5zZXJ0IHRoZSBzcGVjaWZpZWQgcGFnZSBpbnRvIHRoZSBzdGFjayB3aXRoIGF0IGEgcG9zaXRpb24gZGVmaW5lZCBieSB0aGUgYGluZGV4YCBhcmd1bWVudC4gRXh0ZW5kcyBgcHVzaFBhZ2UoKWAgcGFyYW1ldGVycy5bL2VuXVxuICAgKiAgIFtqYV3mjIflrprjgZfjgZ9wYWdl44KS44Oa44O844K444K544K/44OD44Kv44GuaW5kZXjjgafmjIflrprjgZfjgZ/kvY3nva7jgavov73liqDjgZfjgb7jgZnjgIJbL2phXVxuICAgKi9cbiAgaW5zZXJ0UGFnZShpbmRleCwgcGFnZSwgb3B0aW9ucyA9IHt9KSB7XG4gICAgKHtwYWdlLCBvcHRpb25zfSA9IHRoaXMuX3ByZXBhcmVQYWdlQW5kT3B0aW9ucyhwYWdlLCBvcHRpb25zKSk7XG4gICAgaW5kZXggPSB0aGlzLl9ub3JtYWxpemVJbmRleChpbmRleCk7XG5cbiAgICBpZiAoaW5kZXggPj0gdGhpcy5wYWdlcy5sZW5ndGgpIHtcbiAgICAgIHJldHVybiB0aGlzLnB1c2hQYWdlKHBhZ2UsIG9wdGlvbnMpO1xuICAgIH1cblxuICAgIHBhZ2UgPSB0eXBlb2Ygb3B0aW9ucy5wYWdlSFRNTCA9PT0gJ3N0cmluZycgPyBvcHRpb25zLnBhZ2VIVE1MIDogcGFnZTtcbiAgICBjb25zdCBsb2FkZXIgPSB0eXBlb2Ygb3B0aW9ucy5wYWdlSFRNTCA9PT0gJ3N0cmluZycgPyBpbnN0YW50UGFnZUxvYWRlciA6IHRoaXMuX3BhZ2VMb2FkZXI7XG5cbiAgICByZXR1cm4gbmV3IFByb21pc2UocmVzb2x2ZSA9PiB7XG4gICAgICBsb2FkZXIubG9hZCh7cGFnZSwgcGFyZW50OiB0aGlzfSwgcGFnZUVsZW1lbnQgPT4ge1xuICAgICAgICB0aGlzLl92ZXJpZnlQYWdlRWxlbWVudChwYWdlRWxlbWVudCk7XG4gICAgICAgIHRoaXMuX3BhZ2VNYXAuc2V0KHBhZ2VFbGVtZW50LCBwYWdlKTtcbiAgICAgICAgcGFnZUVsZW1lbnQgPSB1dGlsLmV4dGVuZChwYWdlRWxlbWVudCwge1xuICAgICAgICAgIGRhdGE6IG9wdGlvbnMuZGF0YSxcbiAgICAgICAgICBwdXNoZWRPcHRpb25zOiBvcHRpb25zXG4gICAgICAgIH0pO1xuXG4gICAgICAgIG9wdGlvbnMuYW5pbWF0aW9uT3B0aW9ucyA9IHV0aWwuZXh0ZW5kKFxuICAgICAgICAgIHt9LFxuICAgICAgICAgIEFuaW1hdG9yRmFjdG9yeS5wYXJzZUFuaW1hdGlvbk9wdGlvbnNTdHJpbmcodGhpcy5nZXRBdHRyaWJ1dGUoJ2FuaW1hdGlvbi1vcHRpb25zJykpLFxuICAgICAgICAgIG9wdGlvbnMuYW5pbWF0aW9uT3B0aW9ucyB8fCB7fVxuICAgICAgICApO1xuXG4gICAgICAgIHRoaXMuaW5zZXJ0QmVmb3JlKHBhZ2VFbGVtZW50LCB0aGlzLnBhZ2VzW2luZGV4XSk7XG4gICAgICAgIHRoaXMudG9wUGFnZS51cGRhdGVCYWNrQnV0dG9uKHRydWUpO1xuXG4gICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgIHBhZ2VFbGVtZW50ID0gbnVsbDtcbiAgICAgICAgICByZXNvbHZlKHRoaXMucGFnZXNbaW5kZXhdKTtcbiAgICAgICAgfSwgMTAwMCAvIDYwKTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG5cbiAgLyoqXG4gICAqIEBtZXRob2QgcmVzZXRUb1BhZ2VcbiAgICogQHNpZ25hdHVyZSByZXNldFRvUGFnZShwYWdlLCBbb3B0aW9uc10pXG4gICAqIEByZXR1cm4ge1Byb21pc2V9XG4gICAqICAgW2VuXVByb21pc2Ugd2hpY2ggcmVzb2x2ZXMgdG8gdGhlIG5ldyB0b3AgcGFnZS5bL2VuXVxuICAgKiAgIFtqYV3mlrDjgZfjgYTjg4jjg4Pjg5fjg5rjg7zjgrjjgpLop6PmsbrjgZnjgotQcm9taXNl44KS6L+U44GX44G+44GZ44CCWy9qYV1cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXUNsZWFycyBwYWdlIHN0YWNrIGFuZCBhZGRzIHRoZSBzcGVjaWZpZWQgcGFnZSB0byB0aGUgc3RhY2suIEV4dGVuZHMgYHB1c2hQYWdlKClgIHBhcmFtZXRlcnMuWy9lbl1cbiAgICogICBbamFd44Oa44O844K444K544K/44OD44Kv44KS44Oq44K744OD44OI44GX44CB5oyH5a6a44GX44Gf44Oa44O844K444KS6KGo56S644GX44G+44GZ44CCWy9qYV1cbiAgICovXG4gIHJlc2V0VG9QYWdlKHBhZ2UsIG9wdGlvbnMgPSB7fSkge1xuICAgICh7cGFnZSwgb3B0aW9uc30gPSB0aGlzLl9wcmVwYXJlUGFnZUFuZE9wdGlvbnMocGFnZSwgb3B0aW9ucykpO1xuXG4gICAgaWYgKCFvcHRpb25zLmFuaW1hdG9yICYmICFvcHRpb25zLmFuaW1hdGlvbikge1xuICAgICAgb3B0aW9ucy5hbmltYXRpb24gPSAnbm9uZSc7XG4gICAgfVxuXG4gICAgY29uc3QgY2FsbGJhY2sgPSBvcHRpb25zLmNhbGxiYWNrO1xuXG4gICAgb3B0aW9ucy5jYWxsYmFjayA9ICgpID0+IHtcbiAgICAgIHdoaWxlICh0aGlzLnBhZ2VzLmxlbmd0aCA+IDEpIHtcbiAgICAgICAgdGhpcy5fcGFnZUxvYWRlci51bmxvYWQodGhpcy5wYWdlc1swXSk7XG4gICAgICB9XG5cbiAgICAgIHRoaXMucGFnZXNbMF0udXBkYXRlQmFja0J1dHRvbihmYWxzZSk7XG4gICAgICBjYWxsYmFjayAmJiBjYWxsYmFjaygpO1xuICAgIH07XG5cbiAgICBpZiAoIW9wdGlvbnMucGFnZSAmJiAhb3B0aW9ucy5wYWdlSFRNTCAmJiB0aGlzLl9nZXRQYWdlVGFyZ2V0KCkpIHtcbiAgICAgIHBhZ2UgPSBvcHRpb25zLnBhZ2UgPSB0aGlzLl9nZXRQYWdlVGFyZ2V0KCk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRoaXMucHVzaFBhZ2UocGFnZSwgb3B0aW9ucyk7XG4gIH1cblxuICAvKipcbiAgICogQG1ldGhvZCBicmluZ1BhZ2VUb3BcbiAgICogQHNpZ25hdHVyZSBicmluZ1BhZ2VUb3AoaXRlbSwgW29wdGlvbnNdKVxuICAgKiBAcGFyYW0ge1N0cmluZ3xOdW1iZXJ9IGl0ZW1cbiAgICogICBbZW5dUGFnZSBVUkwgb3IgaW5kZXggb2YgYW4gZXhpc3RpbmcgcGFnZSBpbiBuYXZpZ2F0b3IncyBzdGFjay5bL2VuXVxuICAgKiAgIFtqYV3jg5rjg7zjgrjjga5VUkzjgYvjgoLjgZfjgY/jga9vbnMtbmF2aWdhdG9y44Gu44Oa44O844K444K544K/44OD44Kv44Gu44Kk44Oz44OH44OD44Kv44K55YCk44KS5oyH5a6a44GX44G+44GZ44CCWy9qYV1cbiAgICogQHJldHVybiB7UHJvbWlzZX1cbiAgICogICBbZW5dUHJvbWlzZSB3aGljaCByZXNvbHZlcyB0byB0aGUgbmV3IHRvcCBwYWdlLlsvZW5dXG4gICAqICAgW2phXeaWsOOBl+OBhOODiOODg+ODl+ODmuODvOOCuOOCkuino+axuuOBmeOCi1Byb21pc2XjgpLov5TjgZfjgb7jgZnjgIJbL2phXVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dQnJpbmdzIHRoZSBnaXZlbiBwYWdlIHRvIHRoZSB0b3Agb2YgdGhlIHBhZ2Ugc3RhY2sgaWYgaXQgYWxyZWFkeSBleGlzdHMgb3IgcHVzaGVzIGl0IGludG8gdGhlIHN0YWNrIGlmIGRvZXNuJ3QuIEV4dGVuZHMgYHB1c2hQYWdlKClgIHBhcmFtZXRlcnMuWy9lbl1cbiAgICogICBbamFd5oyH5a6a44GX44Gf44Oa44O844K444KS44Oa44O844K444K544K/44OD44Kv44Gu5LiA55Wq5LiK44Gr56e75YuV44GX44G+44GZ44CC44KC44GX5oyH5a6a44GX44Gf44Oa44O844K444GM54Sh44GL44Gj44Gf5aC05ZCI5paw44GX44GPcHVzaOOBleOCjOOBvuOBmeOAglsvamFdXG4gICAqL1xuICBicmluZ1BhZ2VUb3AoaXRlbSwgb3B0aW9ucyA9IHt9KSB7XG4gICAgaWYgKFsnbnVtYmVyJywgJ3N0cmluZyddLmluZGV4T2YodHlwZW9mIGl0ZW0pID09PSAtMSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdGaXJzdCBhcmd1bWVudCBtdXN0IGJlIGEgcGFnZSBuYW1lIG9yIHRoZSBpbmRleCBvZiBhbiBleGlzdGluZyBwYWdlLiBZb3Ugc3VwcGxpZWQgJyArIGl0ZW0pO1xuICAgIH1cbiAgICBjb25zdCBpbmRleCA9IHR5cGVvZiBpdGVtID09PSAnbnVtYmVyJyA/IHRoaXMuX25vcm1hbGl6ZUluZGV4KGl0ZW0pIDogdGhpcy5fbGFzdEluZGV4T2ZQYWdlKGl0ZW0pO1xuICAgIGNvbnN0IHBhZ2UgPSB0aGlzLnBhZ2VzW2luZGV4XTtcblxuICAgIGlmIChpbmRleCA8IDApIHtcbiAgICAgIHJldHVybiB0aGlzLnB1c2hQYWdlKGl0ZW0sIG9wdGlvbnMpO1xuICAgIH1cbiAgICAoe29wdGlvbnN9ID0gdGhpcy5fcHJlcGFyZVBhZ2VBbmRPcHRpb25zKHBhZ2UsIG9wdGlvbnMpKTtcblxuICAgIGlmIChpbmRleCA9PT0gdGhpcy5wYWdlcy5sZW5ndGggLSAxKSB7XG4gICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHBhZ2UpO1xuICAgIH1cbiAgICBpZiAoIXBhZ2UpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignRmFpbGVkIHRvIGZpbmQgaXRlbSAnICsgaXRlbSk7XG4gICAgfVxuICAgIGlmICh0aGlzLl9pc1J1bm5pbmcpIHtcbiAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdCgncHVzaFBhZ2UgaXMgYWxyZWFkeSBydW5uaW5nLicpO1xuICAgIH1cbiAgICBpZiAodGhpcy5fZW1pdFByZVB1c2hFdmVudCgpKSB7XG4gICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoJ0NhbmNlbGVkIGluIHByZXB1c2ggZXZlbnQuJyk7XG4gICAgfVxuXG4gICAgcGFnZS5zdHlsZS52aXNpYmlsaXR5ID0gJ2hpZGRlbic7XG4gICAgcGFnZS5zZXRBdHRyaWJ1dGUoJ19za2lwaW5pdCcsICcnKTtcbiAgICBwYWdlLnBhcmVudE5vZGUuYXBwZW5kQ2hpbGQocGFnZSk7XG4gICAgcmV0dXJuIHRoaXMuX3B1c2hQYWdlKG9wdGlvbnMpO1xuICB9XG5cbiAgX3ByZXBhcmVQYWdlQW5kT3B0aW9ucyhwYWdlLCBvcHRpb25zID0ge30pIHtcbiAgICBpZiAodHlwZW9mIG9wdGlvbnMgIT0gJ29iamVjdCcpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignb3B0aW9ucyBtdXN0IGJlIGFuIG9iamVjdC4gWW91IHN1cHBsaWVkICcgKyBvcHRpb25zKTtcbiAgICB9XG5cbiAgICBpZiAoKHBhZ2UgPT09IG51bGwgfHwgcGFnZSA9PT0gdW5kZWZpbmVkKSAmJiBvcHRpb25zLnBhZ2UpIHtcbiAgICAgIHBhZ2UgPSBvcHRpb25zLnBhZ2U7XG4gICAgfVxuXG4gICAgb3B0aW9ucyA9IHV0aWwuZXh0ZW5kKHt9LCB0aGlzLm9wdGlvbnMgfHwge30sIG9wdGlvbnMsIHtwYWdlfSk7XG5cbiAgICByZXR1cm4ge3BhZ2UsIG9wdGlvbnN9O1xuICB9XG5cbiAgX3VwZGF0ZUxhc3RQYWdlQmFja0J1dHRvbigpIHtcbiAgICBjb25zdCBpbmRleCA9IHRoaXMucGFnZXMubGVuZ3RoIC0gMTtcbiAgICBpZiAoaW5kZXggPj0gMCkge1xuICAgICAgdGhpcy5wYWdlc1tpbmRleF0udXBkYXRlQmFja0J1dHRvbihpbmRleCA+IDApO1xuICAgIH1cbiAgfVxuXG4gIF9ub3JtYWxpemVJbmRleChpbmRleCkge1xuICAgIHJldHVybiBpbmRleCA+PSAwID8gaW5kZXggOiBNYXRoLmFicyh0aGlzLnBhZ2VzLmxlbmd0aCArIGluZGV4KSAlIHRoaXMucGFnZXMubGVuZ3RoO1xuICB9XG5cbiAgX29uRGV2aWNlQmFja0J1dHRvbihldmVudCkge1xuICAgIGlmICh0aGlzLnBhZ2VzLmxlbmd0aCA+IDEpIHtcbiAgICAgIHRoaXMucG9wUGFnZSgpO1xuICAgIH0gZWxzZSB7XG4gICAgICBldmVudC5jYWxsUGFyZW50SGFuZGxlcigpO1xuICAgIH1cbiAgfVxuXG4gIF9sYXN0SW5kZXhPZlBhZ2UocGFnZU5hbWUpIHtcbiAgICBsZXQgaW5kZXg7XG4gICAgZm9yIChpbmRleCA9IHRoaXMucGFnZXMubGVuZ3RoIC0gMTsgaW5kZXggPj0gMDsgaW5kZXgtLSkge1xuICAgICAgaWYgKCF0aGlzLl9wYWdlTWFwLmhhcyh0aGlzLnBhZ2VzW2luZGV4XSkpIHtcbiAgICAgICAgdGhyb3cgRXJyb3IoJ1RoaXMgaXMgYnVnLicpO1xuICAgICAgfVxuXG4gICAgICBpZiAocGFnZU5hbWUgPT09IHRoaXMuX3BhZ2VNYXAuZ2V0KHRoaXMucGFnZXNbaW5kZXhdKSkge1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGluZGV4O1xuICB9XG5cbiAgX2VtaXRQcmVFdmVudChuYW1lLCBkYXRhID0ge30pIHtcbiAgICBsZXQgaXNDYW5jZWxlZCA9IGZhbHNlO1xuXG4gICAgdXRpbC50cmlnZ2VyRWxlbWVudEV2ZW50KHRoaXMsICdwcmUnICsgbmFtZSwgdXRpbC5leHRlbmQoe1xuICAgICAgbmF2aWdhdG9yOiB0aGlzLFxuICAgICAgY3VycmVudFBhZ2U6IHRoaXMucGFnZXNbdGhpcy5wYWdlcy5sZW5ndGggLSAxXSxcbiAgICAgIGNhbmNlbDogKCkgPT4gaXNDYW5jZWxlZCA9IHRydWVcbiAgICB9LCBkYXRhKSk7XG5cbiAgICByZXR1cm4gaXNDYW5jZWxlZDtcbiAgfVxuXG4gIF9lbWl0UHJlUHVzaEV2ZW50KCkge1xuICAgIHJldHVybiB0aGlzLl9lbWl0UHJlRXZlbnQoJ3B1c2gnKTtcbiAgfVxuXG4gIF9lbWl0UHJlUG9wRXZlbnQoKSB7XG4gICAgY29uc3QgbCA9IHRoaXMucGFnZXMubGVuZ3RoO1xuICAgIHJldHVybiB0aGlzLl9lbWl0UHJlRXZlbnQoJ3BvcCcsIHtcbiAgICAgIGxlYXZlUGFnZTogdGhpcy5wYWdlc1tsIC0gMV0sXG4gICAgICBlbnRlclBhZ2U6IHRoaXMucGFnZXNbbCAtIDJdXG4gICAgfSk7XG4gIH1cblxuICAvLyBUT0RPOiDmm7jjgY3nm7TjgZlcbiAgX2NyZWF0ZVBhZ2VFbGVtZW50KHRlbXBsYXRlSFRNTCkge1xuICAgIGNvbnN0IHBhZ2VFbGVtZW50ID0gdXRpbC5jcmVhdGVFbGVtZW50KGludGVybmFsLm5vcm1hbGl6ZVBhZ2VIVE1MKHRlbXBsYXRlSFRNTCkpO1xuICAgIHRoaXMuX3ZlcmlmeVBhZ2VFbGVtZW50KHBhZ2VFbGVtZW50KTtcbiAgICByZXR1cm4gcGFnZUVsZW1lbnQ7XG4gIH1cblxuICAvKipcbiAgICogQHBhcmFtIHtFbGVtZW50fSBlbGVtZW50XG4gICAqL1xuICBfdmVyaWZ5UGFnZUVsZW1lbnQoZWxlbWVudCkge1xuICAgIGlmIChlbGVtZW50Lm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkgIT09ICdvbnMtcGFnZScpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignWW91IG11c3Qgc3VwcGx5IGFuIFwib25zLXBhZ2VcIiBlbGVtZW50IHRvIFwib25zLW5hdmlnYXRvclwiLicpO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBAcHJvcGVydHkgb25EZXZpY2VCYWNrQnV0dG9uXG4gICAqIEB0eXBlIHtPYmplY3R9XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1CYWNrLWJ1dHRvbiBoYW5kbGVyLlsvZW5dXG4gICAqICAgW2phXeODkOODg+OCr+ODnOOCv+ODs+ODj+ODs+ODieODqeOAglsvamFdXG4gICAqL1xuICBnZXQgb25EZXZpY2VCYWNrQnV0dG9uKCkge1xuICAgIHJldHVybiB0aGlzLl9iYWNrQnV0dG9uSGFuZGxlcjtcbiAgfVxuXG4gIHNldCBvbkRldmljZUJhY2tCdXR0b24oY2FsbGJhY2spIHtcbiAgICBpZiAodGhpcy5fYmFja0J1dHRvbkhhbmRsZXIpIHtcbiAgICAgIHRoaXMuX2JhY2tCdXR0b25IYW5kbGVyLmRlc3Ryb3koKTtcbiAgICB9XG5cbiAgICB0aGlzLl9iYWNrQnV0dG9uSGFuZGxlciA9IGRldmljZUJhY2tCdXR0b25EaXNwYXRjaGVyLmNyZWF0ZUhhbmRsZXIodGhpcywgY2FsbGJhY2spO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwcm9wZXJ0eSB0b3BQYWdlXG4gICAqIEByZWFkb25seVxuICAgKiBAdHlwZSB7SFRNTEVsZW1lbnR9XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1DdXJyZW50IHRvcCBwYWdlIGVsZW1lbnQuIFVzZSB0aGlzIG1ldGhvZCB0byBhY2Nlc3Mgb3B0aW9ucyBwYXNzZWQgYnkgYHB1c2hQYWdlKClgLWxpa2UgbWV0aG9kcy5bL2VuXVxuICAgKiAgIFtqYV3nj77lnKjjga7jg5rjg7zjgrjjgpLlj5blvpfjgZfjgb7jgZnjgIJwdXNoUGFnZSgp44KEcmVzZXRUb1BhZ2UoKeODoeOCveODg+ODieOBruW8leaVsOOCkuWPluW+l+OBp+OBjeOBvuOBmeOAglsvamFdXG4gICAqL1xuICBnZXQgdG9wUGFnZSgpIHtcbiAgICByZXR1cm4gdGhpcy5wYWdlc1t0aGlzLnBhZ2VzLmxlbmd0aCAtIDFdIHx8IG51bGw7XG4gIH1cblxuICAvKipcbiAgICogQHByb3BlcnR5IHBhZ2VzXG4gICAqIEByZWFkb25seVxuICAgKiBAdHlwZSB7QXJyYXl9XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1Db3B5IG9mIHRoZSBuYXZpZ2F0b3IncyBwYWdlIHN0YWNrLlsvZW5dXG4gICAqICAgW2phXVsvamFdXG4gICAqL1xuICBnZXQgcGFnZXMoKSB7XG4gICAgcmV0dXJuIHV0aWwuYXJyYXlGcm9tKHRoaXMuY2hpbGRyZW4pXG4gICAgICAuZmlsdGVyKGVsZW1lbnQgPT4gZWxlbWVudC50YWdOYW1lID09PSAnT05TLVBBR0UnKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcHJvcGVydHkgb3B0aW9uc1xuICAgKiBAdHlwZSB7T2JqZWN0fVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dRGVmYXVsdCBvcHRpb25zIG9iamVjdC4gQXR0cmlidXRlcyBoYXZlIHByaW9yaXR5IG92ZXIgdGhpcyBwcm9wZXJ0eS5bL2VuXVxuICAgKiAgIFtqYV1bL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQHByb3BlcnR5IG9wdGlvbnMuYW5pbWF0aW9uXG4gICAqIEB0eXBlIHtTdHJpbmd9XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1cbiAgICogICAgIEFuaW1hdGlvbiBuYW1lLiBBdmFpbGFibGUgYW5pbWF0aW9ucyBhcmUgYFwic2xpZGVcImAsIGBcImxpZnRcImAsIGBcImZhZGVcImAgYW5kIGBcIm5vbmVcImAuXG4gICAqICAgICBUaGVzZSBhcmUgcGxhdGZvcm0gYmFzZWQgYW5pbWF0aW9ucy4gRm9yIGZpeGVkIGFuaW1hdGlvbnMsIGFkZCBgXCItaW9zXCJgIG9yIGBcIi1tZFwiYCBzdWZmaXggdG8gdGhlIGFuaW1hdGlvbiBuYW1lLiBFLmcuIGBcImxpZnQtaW9zXCJgLCBgXCJsaWZ0LW1kXCJgLiBEZWZhdWx0cyB2YWx1ZXMgYXJlIGBcInNsaWRlLWlvc1wiYCBhbmQgYFwiZmFkZS1tZFwiYC5cbiAgICogICBbL2VuXVxuICAgKiAgIFtqYV1bL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQHByb3BlcnR5IG9wdGlvbnMuYW5pbWF0aW9uT3B0aW9uc1xuICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dU3BlY2lmeSB0aGUgYW5pbWF0aW9uJ3MgZHVyYXRpb24sIGRlbGF5IGFuZCB0aW1pbmcuIEUuZy4gYHtkdXJhdGlvbjogMC4yLCBkZWxheTogMC40LCB0aW1pbmc6ICdlYXNlLWluJ31gLlsvZW5dXG4gICAqICAgW2phXeOCouODi+ODoeODvOOCt+ODp+ODs+aZguOBrmR1cmF0aW9uLCBkZWxheSwgdGltaW5n44KS5oyH5a6a44GX44G+44GZ44CCZS5nLiBge2R1cmF0aW9uOiAwLjIsIGRlbGF5OiAwLjQsIHRpbWluZzogJ2Vhc2UtaW4nfWAgWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBwcm9wZXJ0eSBvcHRpb25zLmNhbGxiYWNrXG4gICAqIEB0eXBlIHtTdHJpbmd9XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1GdW5jdGlvbiB0aGF0IGlzIGNhbGxlZCB3aGVuIHRoZSB0cmFuc2l0aW9uIGhhcyBlbmRlZC5bL2VuXVxuICAgKiAgIFtqYV3jgZPjga7jg6Hjgr3jg4Pjg4njgavjgojjgovnlLvpnaLpgbfnp7vjgYzntYLkuobjgZfjgZ/pmpvjgavlkbzjgbPlh7rjgZXjgozjgovplqLmlbDjgqrjg5bjgrjjgqfjgq/jg4jjgpLmjIflrprjgZfjgb7jgZnjgIJbL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQHByb3BlcnR5IG9wdGlvbnMucmVmcmVzaFxuICAgKiBAZGVmYXVsdCAgZmFsc2VcbiAgICogQHR5cGUge0Jvb2xlYW59XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1JZiB0aGlzIHBhcmFtZXRlciBpcyBgdHJ1ZWAsIHRoZSBwcmV2aW91cyBwYWdlIHdpbGwgYmUgcmVmcmVzaGVkIChkZXN0cm95ZWQgYW5kIGNyZWF0ZWQgYWdhaW4pIGJlZm9yZSBgcG9wUGFnZSgpYCBhY3Rpb24uWy9lbl1cbiAgICogICBbamFdcG9wUGFnZeOBmeOCi+WJjeOBq+OAgeWJjeOBq+OBguOCi+ODmuODvOOCuOOCkueUn+aIkOOBl+OBquOBiuOBl+OBpuabtOaWsOOBmeOCi+WgtOWQiOOBq3RydWXjgpLmjIflrprjgZfjgb7jgZnjgIJbL2phXVxuICAgKi9cbiAgZ2V0IG9wdGlvbnMoKSB7XG4gICAgcmV0dXJuIHRoaXMuX29wdGlvbnM7XG4gIH1cbiAgc2V0IG9wdGlvbnMob2JqZWN0KSB7XG4gICAgdGhpcy5fb3B0aW9ucyA9IG9iamVjdDtcbiAgfVxuXG4gIHNldCBfaXNSdW5uaW5nKHZhbHVlKSB7XG4gICAgdGhpcy5zZXRBdHRyaWJ1dGUoJ19pcy1ydW5uaW5nJywgdmFsdWUgPyAndHJ1ZScgOiAnZmFsc2UnKTtcbiAgfVxuICBnZXQgX2lzUnVubmluZygpIHtcbiAgIHJldHVybiBKU09OLnBhcnNlKHRoaXMuZ2V0QXR0cmlidXRlKCdfaXMtcnVubmluZycpKTtcbiAgfVxuXG4gIF9zaG93KCkge1xuICAgIGlmICh0aGlzLnRvcFBhZ2UpIHtcbiAgICAgIHRoaXMudG9wUGFnZS5fc2hvdygpO1xuICAgIH1cbiAgfVxuXG4gIF9oaWRlKCkge1xuICAgIGlmICh0aGlzLnRvcFBhZ2UpIHtcbiAgICAgIHRoaXMudG9wUGFnZS5faGlkZSgpO1xuICAgIH1cbiAgfVxuXG4gIF9kZXN0cm95KCkge1xuICAgIGZvciAobGV0IGkgPSB0aGlzLnBhZ2VzLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSB7XG4gICAgICB0aGlzLl9wYWdlTG9hZGVyLnVubG9hZCh0aGlzLnBhZ2VzW2ldKTtcbiAgICB9XG5cbiAgICB0aGlzLnJlbW92ZSgpO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7U3RyaW5nfSBuYW1lXG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IEFuaW1hdG9yXG4gICAqL1xuICBzdGF0aWMgcmVnaXN0ZXJBbmltYXRvcihuYW1lLCBBbmltYXRvcikge1xuICAgIGlmICghKEFuaW1hdG9yLnByb3RvdHlwZSBpbnN0YW5jZW9mIE5hdmlnYXRvclRyYW5zaXRpb25BbmltYXRvcikpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignXCJBbmltYXRvclwiIHBhcmFtIG11c3QgaW5oZXJpdCBOYXZpZ2F0b3JFbGVtZW50Lk5hdmlnYXRvclRyYW5zaXRpb25BbmltYXRvcicpO1xuICAgIH1cblxuICAgIF9hbmltYXRvckRpY3RbbmFtZV0gPSBBbmltYXRvcjtcbiAgfVxuXG4gIHN0YXRpYyBnZXQgYW5pbWF0b3JzKCkge1xuICAgIHJldHVybiBfYW5pbWF0b3JEaWN0O1xuICB9XG5cbiAgc3RhdGljIGdldCBOYXZpZ2F0b3JUcmFuc2l0aW9uQW5pbWF0b3IoKSB7XG4gICAgcmV0dXJuIE5hdmlnYXRvclRyYW5zaXRpb25BbmltYXRvcjtcbiAgfVxuXG4gIHN0YXRpYyBnZXQgZXZlbnRzKCkge1xuICAgIHJldHVybiBbJ3ByZXB1c2gnLCAncG9zdHB1c2gnLCAncHJlcG9wJywgJ3Bvc3Rwb3AnXTtcbiAgfVxuXG4gIHN0YXRpYyBnZXQgcmV3cml0YWJsZXMoKSB7XG4gICAgcmV0dXJuIHJld3JpdGFibGVzO1xuICB9XG59XG5cbmN1c3RvbUVsZW1lbnRzLmRlZmluZSgnb25zLW5hdmlnYXRvcicsIE5hdmlnYXRvckVsZW1lbnQpO1xuIiwiLypcbkNvcHlyaWdodCAyMDEzLTIwMTUgQVNJQUwgQ09SUE9SQVRJT05cblxuTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbnlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbllvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuXG4gICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcblxuVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG5TZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG5saW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cblxuKi9cblxuaW1wb3J0IHV0aWwgZnJvbSAnLi4vb25zL3V0aWwnO1xuaW1wb3J0IGludGVybmFsIGZyb20gJy4uL29ucy9pbnRlcm5hbCc7XG5pbXBvcnQgYXV0b1N0eWxlIGZyb20gJy4uL29ucy9hdXRvc3R5bGUnO1xuaW1wb3J0IE1vZGlmaWVyVXRpbCBmcm9tICcuLi9vbnMvaW50ZXJuYWwvbW9kaWZpZXItdXRpbCc7XG5pbXBvcnQgQmFzZUVsZW1lbnQgZnJvbSAnLi4vb25zL2Jhc2UtZWxlbWVudCc7XG5pbXBvcnQgY29udGVudFJlYWR5IGZyb20gJy4uL29ucy9jb250ZW50LXJlYWR5JztcblxuY29uc3QgZGVmYXVsdENsYXNzTmFtZSA9ICd0b29sYmFyJztcblxuY29uc3Qgc2NoZW1lID0ge1xuICAnJzogJ3Rvb2xiYXItLSonLFxuICAnLnRvb2xiYXJfX2xlZnQnOiAndG9vbGJhci0tKl9fbGVmdCcsXG4gICcudG9vbGJhcl9fY2VudGVyJzogJ3Rvb2xiYXItLSpfX2NlbnRlcicsXG4gICcudG9vbGJhcl9fcmlnaHQnOiAndG9vbGJhci0tKl9fcmlnaHQnXG59O1xuXG4vKipcbiAqIEBlbGVtZW50IG9ucy10b29sYmFyXG4gKiBAY2F0ZWdvcnkgcGFnZVxuICogQG1vZGlmaWVyIG1hdGVyaWFsXG4gKiAgIFtlbl1NYXRlcmlhbCBEZXNpZ24gdG9vbGJhci5bL2VuXVxuICogICBbamFdWy9qYV1cbiAqIEBtb2RpZmllciB0cmFuc3BhcmVudFxuICogICBbZW5dVHJhbnNwYXJlbnQgdG9vbGJhclsvZW5dXG4gKiAgIFtqYV3pgI/mmI7jgarog4zmma/jgpLmjIHjgaTjg4Tjg7zjg6vjg5Djg7zjgpLooajnpLrjgZfjgb7jgZnjgIJbL2phXVxuICogQG1vZGlmaWVyIG5vc2hhZG93XG4gKiAgIFtlbl1Ub29sYmFyIHdpdGhvdXQgc2hhZG93Wy9lbl1cbiAqICAgW2phXeODhOODvOODq+ODkOODvOOBq+W9seOCkuS7mOOBkeOBmuOBq+ihqOekuuOBl+OBvuOBmeOAglsvamFdXG4gKiBAZGVzY3JpcHRpb25cbiAqICAgW2VuXVxuICogICAgIFRvb2xiYXIgY29tcG9uZW50IHRoYXQgY2FuIGJlIHVzZWQgd2l0aCBuYXZpZ2F0aW9uLlxuICpcbiAqICAgICBMZWZ0LCBjZW50ZXIgYW5kIHJpZ2h0IGNvbnRhaW5lciBjYW4gYmUgc3BlY2lmaWVkIGJ5IGNsYXNzIG5hbWVzLlxuICpcbiAqICAgICBUaGlzIGNvbXBvbmVudCB3aWxsIGF1dG9tYXRpY2FsbHkgZGlzcGxheXMgYXMgYSBNYXRlcmlhbCBEZXNpZ24gdG9vbGJhciB3aGVuIHJ1bm5pbmcgb24gQW5kcm9pZCBkZXZpY2VzLlxuICogICBbL2VuXVxuICogICBbamFd44OK44OT44Ky44O844K344On44Oz44Gn5L2/55So44GZ44KL44OE44O844Or44OQ44O855So44Kz44Oz44Od44O844ON44Oz44OI44Gn44GZ44CC44Kv44Op44K55ZCN44Gr44KI44KK44CB5bem44CB5Lit5aSu44CB5Y+z44Gu44Kz44Oz44OG44OK44KS5oyH5a6a44Gn44GN44G+44GZ44CCWy9qYV1cbiAqIEBjb2RlcGVuIGFIbUdMXG4gKiBAdHV0b3JpYWwgdmFuaWxsYS9SZWZlcmVuY2UvcGFnZVxuICogQGd1aWRlIGFkZGluZy1hLXRvb2xiYXIgW2VuXUFkZGluZyBhIHRvb2xiYXJbL2VuXVtqYV3jg4Tjg7zjg6vjg5Djg7zjga7ov73liqBbL2phXVxuICogQHNlZWFsc28gb25zLWJvdHRvbS10b29sYmFyXG4gKiAgIFtlbl1UaGUgYDxvbnMtYm90dG9tLXRvb2xiYXI+YCBkaXNwbGF5cyBhIHRvb2xiYXIgb24gdGhlIGJvdHRvbSBvZiB0aGUgcGFnZS5bL2VuXVxuICogICBbamFdb25zLWJvdHRvbS10b29sYmFy44Kz44Oz44Od44O844ON44Oz44OIWy9qYV1cbiAqIEBzZWVhbHNvIG9ucy1iYWNrLWJ1dHRvblxuICogICBbZW5dVGhlIGA8b25zLWJhY2stYnV0dG9uPmAgY29tcG9uZW50IGRpc3BsYXlzIGEgYmFjayBidXR0b24gaW5zaWRlIHRoZSB0b29sYmFyLlsvZW5dXG4gKiAgIFtqYV1vbnMtYmFjay1idXR0b27jgrPjg7Pjg53jg7zjg43jg7Pjg4hbL2phXVxuICogQHNlZWFsc28gb25zLXRvb2xiYXItYnV0dG9uXG4gKiAgIFtlbl1UaGUgYDxvbnMtdG9vbGJhci1idXR0b24+YCBjb21wb25lbnQgZGlzcGxheXMgYSB0b29sYmFyIGJ1dHRvbiBpbnNpZGUgdGhlIHRvb2xiYXIuWy9lbl1cbiAqICAgW2phXW9ucy10b29sYmFyLWJ1dHRvbuOCs+ODs+ODneODvOODjeODs+ODiFsvamFdXG4gKiBAZXhhbXBsZVxuICogPG9ucy1wYWdlPlxuICogICA8b25zLXRvb2xiYXI+XG4gKiAgICAgPGRpdiBjbGFzcz1cImxlZnRcIj5cbiAqICAgICAgIDxvbnMtYmFjay1idXR0b24+XG4gKiAgICAgICAgIEJhY2tcbiAqICAgICAgIDwvb25zLWJhY2stYnV0dG9uPlxuICogICAgIDwvZGl2PlxuICogICAgIDxkaXYgY2xhc3M9XCJjZW50ZXJcIj5cbiAqICAgICAgIFRpdGxlXG4gKiAgICAgPC9kaXY+XG4gKiAgICAgPGRpdiBjbGFzcz1cInJpZ2h0XCI+XG4gKiAgICAgICA8b25zLXRvb2xiYXItYnV0dG9uPlxuICogICAgICAgICA8b25zLWljb24gaWNvbj1cIm1kLW1lbnVcIj48L29ucy1pY29uPlxuICogICAgICAgPC9vbnMtdG9vbGJhci1idXR0b24+XG4gKiAgICAgPC9kaXY+XG4gKiAgIDwvb25zLXRvb2xiYXI+XG4gKiA8L29ucy1wYWdlPlxuICovXG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFRvb2xiYXJFbGVtZW50IGV4dGVuZHMgQmFzZUVsZW1lbnQge1xuXG4gIC8qKlxuICAgKiBAYXR0cmlidXRlIGlubGluZVxuICAgKiBAaW5pdG9ubHlcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXURpc3BsYXkgdGhlIHRvb2xiYXIgYXMgYW4gaW5saW5lIGVsZW1lbnQuWy9lbl1cbiAgICogICBbamFd44OE44O844Or44OQ44O844KS44Kk44Oz44Op44Kk44Oz44Gr572u44GN44G+44GZ44CC44K544Kv44Ot44O844Or6aCY5Z+f5YaF44Gr44Gd44Gu44G+44G+6KGo56S644GV44KM44G+44GZ44CCWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBhdHRyaWJ1dGUgbW9kaWZpZXJcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXVRoZSBhcHBlYXJhbmNlIG9mIHRoZSB0b29sYmFyLlsvZW5dXG4gICAqICAgW2phXeODhOODvOODq+ODkOODvOOBruihqOePvuOCkuaMh+WumuOBl+OBvuOBmeOAglsvamFdXG4gICAqL1xuXG4gIGluaXQoKSB7XG4gICAgY29udGVudFJlYWR5KHRoaXMsICgpID0+IHtcbiAgICAgIHRoaXMuX2NvbXBpbGUoKTtcbiAgICB9KTtcbiAgfVxuXG4gIHN0YXRpYyBnZXQgb2JzZXJ2ZWRBdHRyaWJ1dGVzKCkge1xuICAgIHJldHVybiBbJ21vZGlmaWVyJywgJ2NsYXNzJ107XG4gIH1cblxuICBhdHRyaWJ1dGVDaGFuZ2VkQ2FsbGJhY2sobmFtZSwgbGFzdCwgY3VycmVudCkge1xuICAgIHN3aXRjaCAobmFtZSkge1xuICAgICAgY2FzZSAnY2xhc3MnOlxuICAgICAgICBpZiAoIXRoaXMuY2xhc3NMaXN0LmNvbnRhaW5zKGRlZmF1bHRDbGFzc05hbWUpKSB7XG4gICAgICAgICAgdGhpcy5jbGFzc05hbWUgPSBkZWZhdWx0Q2xhc3NOYW1lICsgJyAnICsgY3VycmVudDtcbiAgICAgICAgfVxuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ21vZGlmaWVyJzpcbiAgICAgICAgTW9kaWZpZXJVdGlsLm9uTW9kaWZpZXJDaGFuZ2VkKGxhc3QsIGN1cnJlbnQsIHRoaXMsIHNjaGVtZSk7XG4gICAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBAcmV0dXJuIHtIVE1MRWxlbWVudH1cbiAgICovXG4gIF9nZXRUb29sYmFyTGVmdEl0ZW1zRWxlbWVudCgpIHtcbiAgICByZXR1cm4gdGhpcy5xdWVyeVNlbGVjdG9yKCcubGVmdCcpIHx8IGludGVybmFsLm51bGxFbGVtZW50O1xuICB9XG5cbiAgLyoqXG4gICAqIEByZXR1cm4ge0hUTUxFbGVtZW50fVxuICAgKi9cbiAgX2dldFRvb2xiYXJDZW50ZXJJdGVtc0VsZW1lbnQoKSB7XG4gICAgcmV0dXJuIHRoaXMucXVlcnlTZWxlY3RvcignLmNlbnRlcicpIHx8IGludGVybmFsLm51bGxFbGVtZW50O1xuICB9XG5cbiAgLyoqXG4gICAqIEByZXR1cm4ge0hUTUxFbGVtZW50fVxuICAgKi9cbiAgX2dldFRvb2xiYXJSaWdodEl0ZW1zRWxlbWVudCgpIHtcbiAgICByZXR1cm4gdGhpcy5xdWVyeVNlbGVjdG9yKCcucmlnaHQnKSB8fCBpbnRlcm5hbC5udWxsRWxlbWVudDtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcmV0dXJuIHtIVE1MRWxlbWVudH1cbiAgICovXG4gIF9nZXRUb29sYmFyQmFja0J1dHRvbkxhYmVsRWxlbWVudCgpIHtcbiAgICByZXR1cm4gdGhpcy5xdWVyeVNlbGVjdG9yKCdvbnMtYmFjay1idXR0b24gLmJhY2stYnV0dG9uX19sYWJlbCcpIHx8IGludGVybmFsLm51bGxFbGVtZW50O1xuICB9XG5cbiAgLyoqXG4gICAqIEByZXR1cm4ge0hUTUxFbGVtZW50fVxuICAgKi9cbiAgX2dldFRvb2xiYXJCYWNrQnV0dG9uSWNvbkVsZW1lbnQoKSB7XG4gICAgcmV0dXJuIHRoaXMucXVlcnlTZWxlY3Rvcignb25zLWJhY2stYnV0dG9uIC5iYWNrLWJ1dHRvbl9faWNvbicpIHx8IGludGVybmFsLm51bGxFbGVtZW50O1xuICB9XG5cbiAgX2NvbXBpbGUoKSB7XG4gICAgYXV0b1N0eWxlLnByZXBhcmUodGhpcyk7XG4gICAgdGhpcy5jbGFzc0xpc3QuYWRkKGRlZmF1bHRDbGFzc05hbWUpO1xuICAgIHRoaXMuX2Vuc3VyZVRvb2xiYXJJdGVtRWxlbWVudHMoKTtcbiAgICBNb2RpZmllclV0aWwuaW5pdE1vZGlmaWVyKHRoaXMsIHNjaGVtZSk7XG4gIH1cblxuICBfZW5zdXJlVG9vbGJhckl0ZW1FbGVtZW50cygpIHtcbiAgICBmb3IgKGxldCBpID0gdGhpcy5jaGlsZE5vZGVzLmxlbmd0aCAtIDE7IGkgPj0gMCA7IGktLSkge1xuICAgICAgLy8gY2FzZSBvZiBub3QgZWxlbWVudFxuICAgICAgaWYgKHRoaXMuY2hpbGROb2Rlc1tpXS5ub2RlVHlwZSAhPSAxKSB7XG4gICAgICAgIHRoaXMucmVtb3ZlQ2hpbGQodGhpcy5jaGlsZE5vZGVzW2ldKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBjb25zdCBjZW50ZXIgPSB0aGlzLl9lbnN1cmVUb29sYmFyRWxlbWVudCgnY2VudGVyJyk7XG4gICAgY2VudGVyLmNsYXNzTGlzdC5hZGQoJ3Rvb2xiYXJfX3RpdGxlJyk7XG5cbiAgICBpZiAodGhpcy5jaGlsZHJlbi5sZW5ndGggIT09IDEgfHwgIXRoaXMuY2hpbGRyZW5bMF0uY2xhc3NMaXN0LmNvbnRhaW5zKCdjZW50ZXInKSkge1xuICAgICAgY29uc3QgbGVmdCA9IHRoaXMuX2Vuc3VyZVRvb2xiYXJFbGVtZW50KCdsZWZ0Jyk7XG4gICAgICBjb25zdCByaWdodCA9IHRoaXMuX2Vuc3VyZVRvb2xiYXJFbGVtZW50KCdyaWdodCcpO1xuXG4gICAgICBpZiAodGhpcy5jaGlsZHJlblswXSAhPT0gbGVmdCB8fCB0aGlzLmNoaWxkcmVuWzFdICE9PSBjZW50ZXIgfHwgdGhpcy5jaGlsZHJlblsyXSAhPT0gcmlnaHQpIHtcbiAgICAgICAgdGhpcy5hcHBlbmRDaGlsZChsZWZ0KTtcbiAgICAgICAgdGhpcy5hcHBlbmRDaGlsZChjZW50ZXIpO1xuICAgICAgICB0aGlzLmFwcGVuZENoaWxkKHJpZ2h0KTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBfZW5zdXJlVG9vbGJhckVsZW1lbnQobmFtZSkge1xuICAgIGlmICh1dGlsLmZpbmRDaGlsZCh0aGlzLCAnLnRvb2xiYXJfXycgKyBuYW1lKSkge1xuICAgICAgY29uc3QgZWxlbWVudCA9IHV0aWwuZmluZENoaWxkKHRoaXMsICcudG9vbGJhcl9fJyArIG5hbWUpO1xuICAgICAgZWxlbWVudC5jbGFzc0xpc3QuYWRkKG5hbWUpO1xuICAgICAgcmV0dXJuIGVsZW1lbnQ7XG4gICAgfVxuXG4gICAgY29uc3QgZWxlbWVudCA9IHV0aWwuZmluZENoaWxkKHRoaXMsICcuJyArIG5hbWUpIHx8IHV0aWwuY3JlYXRlKCcuJyArIG5hbWUpO1xuICAgIGVsZW1lbnQuY2xhc3NMaXN0LmFkZCgndG9vbGJhcl9fJyArIG5hbWUpO1xuXG4gICAgcmV0dXJuIGVsZW1lbnQ7XG4gIH1cbn1cblxuY3VzdG9tRWxlbWVudHMuZGVmaW5lKCdvbnMtdG9vbGJhcicsIFRvb2xiYXJFbGVtZW50KTtcbiIsIi8qXG5Db3B5cmlnaHQgMjAxMy0yMDE1IEFTSUFMIENPUlBPUkFUSU9OXG5cbkxpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG55b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG5Zb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcblxuICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG5cblVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbmRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbldJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxubGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5cbiovXG5cbmltcG9ydCB1dGlsIGZyb20gJy4uL29ucy91dGlsJztcbmltcG9ydCBpbnRlcm5hbCBmcm9tICcuLi9vbnMvaW50ZXJuYWwnO1xuaW1wb3J0IGF1dG9TdHlsZSBmcm9tICcuLi9vbnMvYXV0b3N0eWxlJztcbmltcG9ydCBNb2RpZmllclV0aWwgZnJvbSAnLi4vb25zL2ludGVybmFsL21vZGlmaWVyLXV0aWwnO1xuaW1wb3J0IEJhc2VFbGVtZW50IGZyb20gJy4uL29ucy9iYXNlLWVsZW1lbnQnO1xuaW1wb3J0IGRldmljZUJhY2tCdXR0b25EaXNwYXRjaGVyIGZyb20gJy4uL29ucy9kZXZpY2UtYmFjay1idXR0b24tZGlzcGF0Y2hlcic7XG5pbXBvcnQgY29udGVudFJlYWR5IGZyb20gJy4uL29ucy9jb250ZW50LXJlYWR5JztcblxuaW1wb3J0ICcuL29ucy10b29sYmFyJzsgLy8gZW5zdXJlcyB0aGF0ICdvbnMtdG9vbGJhcicgZWxlbWVudCBpcyByZWdpc3RlcmVkXG5cbmNvbnN0IGRlZmF1bHRDbGFzc05hbWUgPSAncGFnZSc7XG5jb25zdCBzY2hlbWUgPSB7XG4gICcnOiAncGFnZS0tKicsXG4gICcucGFnZV9fY29udGVudCc6ICdwYWdlLS0qX19jb250ZW50JyxcbiAgJy5wYWdlX19iYWNrZ3JvdW5kJzogJ3BhZ2UtLSpfX2JhY2tncm91bmQnXG59O1xuXG5jb25zdCBudWxsVG9vbGJhckVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdvbnMtdG9vbGJhcicpOyAvLyByZXF1aXJlcyB0aGF0ICdvbnMtdG9vbGJhcicgZWxlbWVudCBpcyByZWdpc3RlcmVkXG5cbi8qKlxuICogQGVsZW1lbnQgb25zLXBhZ2VcbiAqIEBjYXRlZ29yeSBwYWdlXG4gKiBAbW9kaWZpZXIgbWF0ZXJpYWxcbiAqICAgW2VuXU1hdGVyaWFsIERlc2lnbiBzdHlsZVsvZW5dXG4gKiAgIFtqYV1bL2phXVxuICogQGRlc2NyaXB0aW9uXG4gKiAgIFtlbl1cbiAqICAgICBUaGlzIGNvbXBvbmVudCBkZWZpbmVzIHRoZSByb290IG9mIGVhY2ggcGFnZS4gSWYgdGhlIGNvbnRlbnQgaXMgbGFyZ2UgaXQgd2lsbCBiZWNvbWUgc2Nyb2xsYWJsZS5cbiAqXG4gKiAgICAgQSBuYXZpZ2F0aW9uIGJhciBjYW4gYmUgYWRkZWQgdG8gdGhlIHRvcCBvZiB0aGUgcGFnZSB1c2luZyB0aGUgYDxvbnMtdG9vbGJhcj5gIGVsZW1lbnQuXG4gKiAgIFsvZW5dXG4gKiAgIFtqYV3jg5rjg7zjgrjlrprnvqnjga7jgZ/jgoHjga7jgrPjg7Pjg53jg7zjg43jg7Pjg4jjgafjgZnjgILjgZPjga7jgrPjg7Pjg53jg7zjg43jg7Pjg4jjga7lhoXlrrnjga/jgrnjgq/jg63jg7zjg6vjgYzoqLHlj6/jgZXjgozjgb7jgZnjgIJbL2phXVxuICogQHR1dG9yaWFsIHZhbmlsbGEvUmVmZXJlbmNlL3BhZ2VcbiAqIEBndWlkZSBjcmVhdGluZy1hLXBhZ2VcbiAqICAgW2VuXVNldHRpbmcgdXAgYSBwYWdlIGluIGl0cyBgaW5pdGAgZXZlbnRbL2VuXVxuICogICBbamFdU2V0dGluZyB1cCBhIHBhZ2UgaW4gaXRzIGBpbml0YCBldmVudFsvamFdXG4gKiBAZ3VpZGUgdGVtcGxhdGVzXG4gKiAgIFtlbl1EZWZpbmluZyBtdWx0aXBsZSBwYWdlcyBpbiBzaW5nbGUgaHRtbFsvZW5dXG4gKiAgIFtqYV3opIfmlbDjga7jg5rjg7zjgrjjgpIx44Gk44GuSFRNTOOBq+iomOi/sOOBmeOCi1svamFdXG4gKiBAZ3VpZGUgbXVsdGlwbGUtcGFnZS1uYXZpZ2F0aW9uXG4gKiAgIFtlbl1NYW5hZ2luZyBtdWx0aXBsZSBwYWdlc1svZW5dXG4gKiAgIFtqYV3opIfmlbDjga7jg5rjg7zjgrjjgpLnrqHnkIbjgZnjgotbL2phXVxuICogQGd1aWRlIHVzaW5nLW1vZGlmaWVyIFtlbl1Nb3JlIGRldGFpbHMgYWJvdXQgdGhlIGBtb2RpZmllcmAgYXR0cmlidXRlWy9lbl1bamFdbW9kaWZpZXLlsZ7mgKfjga7kvb/jgYTmlrlbL2phXVxuICogQHNlZWFsc28gb25zLXRvb2xiYXJcbiAqICAgW2VuXVVzZSB0aGUgYDxvbnMtdG9vbGJhcj5gIGVsZW1lbnQgdG8gYWRkIGEgbmF2aWdhdGlvbiBiYXIgdG8gdGhlIHRvcCBvZiB0aGUgcGFnZS5bL2VuXVxuICogICBbamFdWy9qYV1cbiAqIEBleGFtcGxlXG4gKiA8b25zLXBhZ2U+XG4gKiAgIDxvbnMtdG9vbGJhcj5cbiAqICAgICA8ZGl2IGNsYXNzPVwibGVmdFwiPlxuICogICAgICAgPG9ucy1iYWNrLWJ1dHRvbj5CYWNrPC9vbnMtYmFjay1idXR0b24+XG4gKiAgICAgPC9kaXY+XG4gKiAgICAgPGRpdiBjbGFzcz1cImNlbnRlclwiPlRpdGxlPC9kaXY+XG4gKiAgICAgPGRpdiBjbGFzcz1cInJpZ2h0XCI+XG4gKiAgICAgICA8b25zLXRvb2xiYXItYnV0dG9uPlxuICogICAgICAgICA8b25zLWljb24gaWNvbj1cIm1kLW1lbnVcIj48L29ucy1pY29uPlxuICogICAgICAgPC9vbnMtdG9vbGJhci1idXR0b24+XG4gKiAgICAgPC9kaXY+XG4gKiAgIDwvb25zLXRvb2xiYXI+XG4gKlxuICogICA8cD5QYWdlIGNvbnRlbnQ8L3A+XG4gKiA8L29ucy1wYWdlPlxuICpcbiAqIEBleGFtcGxlXG4gKiA8c2NyaXB0PlxuICogICBteUFwcC5oYW5kbGVyID0gZnVuY3Rpb24oZG9uZSkge1xuICogICAgIGxvYWRNb3JlKCkudGhlbihkb25lKTtcbiAqICAgfVxuICogPC9zY3JpcHQ+XG4gKlxuICogPG9ucy1wYWdlIG9uLWluZmluaXRlLXNjcm9sbD1cIm15QXBwLmhhbmRsZXJcIj5cbiAqICAgPG9ucy10b29sYmFyPlxuICogICAgIDxkaXYgY2xhc3M9XCJjZW50ZXJcIj5MaXN0PC9kaXY+XG4gKiAgIDwvb25zLXRvb2xiYXI+XG4gKlxuICogICA8b25zLWxpc3Q+XG4gKiAgICAgPG9ucy1saXN0LWl0ZW0+IzE8L29ucy1saXN0LWl0ZW0+XG4gKiAgICAgPG9ucy1saXN0LWl0ZW0+IzI8L29ucy1saXN0LWl0ZW0+XG4gKiAgICAgPG9ucy1saXN0LWl0ZW0+IzM8L29ucy1saXN0LWl0ZW0+XG4gKiAgICAgLi4uXG4gKiAgIDwvb25zLWxpc3Q+XG4gKiA8L29ucy1wYWdlPlxuICovXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQYWdlRWxlbWVudCBleHRlbmRzIEJhc2VFbGVtZW50IHtcblxuICAvKipcbiAgICogQGV2ZW50IGluaXRcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXUZpcmVkIHJpZ2h0IGFmdGVyIHRoZSBwYWdlIGlzIGF0dGFjaGVkLlsvZW5dXG4gICAqICAgW2phXeODmuODvOOCuOOBjOOCouOCv+ODg+ODgeOBleOCjOOBn+W+jOOBq+eZuueBq+OBl+OBvuOBmeOAglsvamFdXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBldmVudCBbZW5dRXZlbnQgb2JqZWN0LlsvZW5dXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAZXZlbnQgc2hvd1xuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dRmlyZWQgcmlnaHQgYWZ0ZXIgdGhlIHBhZ2UgaXMgc2hvd24uWy9lbl1cbiAgICogICBbamFd44Oa44O844K444GM6KGo56S644GV44KM44Gf5b6M44Gr55m654Gr44GX44G+44GZ44CCWy9qYV1cbiAgICogQHBhcmFtIHtPYmplY3R9IGV2ZW50IFtlbl1FdmVudCBvYmplY3QuWy9lbl1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBldmVudCBoaWRlXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1GaXJlZCByaWdodCBhZnRlciB0aGUgcGFnZSBpcyBoaWRkZW4uWy9lbl1cbiAgICogICBbamFd44Oa44O844K444GM6Zqg44KM44Gf5b6M44Gr55m654Gr44GX44G+44GZ44CCWy9qYV1cbiAgICogQHBhcmFtIHtPYmplY3R9IGV2ZW50IFtlbl1FdmVudCBvYmplY3QuWy9lbl1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBldmVudCBkZXN0cm95XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1GaXJlZCByaWdodCBiZWZvcmUgdGhlIHBhZ2UgaXMgZGVzdHJveWVkLlsvZW5dXG4gICAqICAgW2phXeODmuODvOOCuOOBjOegtOajhOOBleOCjOOCi+WJjeOBq+eZuueBq+OBl+OBvuOBmeOAglsvamFdXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBldmVudCBbZW5dRXZlbnQgb2JqZWN0LlsvZW5dXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAYXR0cmlidXRlIG1vZGlmaWVyXG4gICAqIEB0eXBlIHtTdHJpbmd9XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1TcGVjaWZ5IG1vZGlmaWVyIG5hbWUgdG8gc3BlY2lmeSBjdXN0b20gc3R5bGVzLlsvZW5dXG4gICAqICAgW2phXeOCueOCv+OCpOODq+Wumue+qeOCkuOCq+OCueOCv+ODnuOCpOOCuuOBmeOCi+OBn+OCgeOBruWQjeWJjeOCkuaMh+WumuOBl+OBvuOBmeOAglsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAYXR0cmlidXRlIG9uLWluZmluaXRlLXNjcm9sbFxuICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dUGF0aCBvZiB0aGUgZnVuY3Rpb24gdG8gYmUgZXhlY3V0ZWQgb24gaW5maW5pdGUgc2Nyb2xsaW5nLiBFeGFtcGxlOiBgYXBwLmxvYWREYXRhYC4gVGhlIGZ1bmN0aW9uIHJlY2VpdmVzIGEgZG9uZSBjYWxsYmFjayB0aGF0IG11c3QgYmUgY2FsbGVkIHdoZW4gaXQncyBmaW5pc2hlZC5bL2VuXVxuICAgKiAgIFtqYV1bL2phXVxuICAgKi9cblxuICBpbml0KCkge1xuICAgIHRoaXMuY2xhc3NMaXN0LmFkZChkZWZhdWx0Q2xhc3NOYW1lKTtcbiAgICB0aGlzLl9pbml0aWFsaXplZCA9IGZhbHNlO1xuXG4gICAgY29udGVudFJlYWR5KHRoaXMsICgpID0+IHtcbiAgICAgIHRoaXMuX2NvbXBpbGUoKTtcblxuICAgICAgdGhpcy5faXNTaG93biA9IGZhbHNlO1xuICAgICAgdGhpcy5fY29udGVudEVsZW1lbnQgPSB0aGlzLl9nZXRDb250ZW50RWxlbWVudCgpO1xuICAgICAgdGhpcy5faXNNdXRlZCA9IHRoaXMuaGFzQXR0cmlidXRlKCdfbXV0ZWQnKTtcbiAgICAgIHRoaXMuX3NraXBJbml0ID0gdGhpcy5oYXNBdHRyaWJ1dGUoJ19za2lwaW5pdCcpO1xuICAgIH0pO1xuICB9XG5cbiAgY29ubmVjdGVkQ2FsbGJhY2soKSB7XG4gICAgaWYgKHRoaXMuX2luaXRpYWxpemVkKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgdGhpcy5faW5pdGlhbGl6ZWQgPSB0cnVlO1xuXG4gICAgY29udGVudFJlYWR5KHRoaXMsICgpID0+IHtcbiAgICAgIGlmICghdGhpcy5faXNNdXRlZCkge1xuICAgICAgICBpZiAodGhpcy5fc2tpcEluaXQpIHtcbiAgICAgICAgICB0aGlzLnJlbW92ZUF0dHJpYnV0ZSgnX3NraXBpbml0Jyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgc2V0SW1tZWRpYXRlKCgpID0+IHV0aWwudHJpZ2dlckVsZW1lbnRFdmVudCh0aGlzLCAnaW5pdCcpKTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAoIXV0aWwuaGFzQW55Q29tcG9uZW50QXNQYXJlbnQodGhpcykpIHtcbiAgICAgICAgc2V0SW1tZWRpYXRlKCgpID0+IHRoaXMuX3Nob3coKSk7XG4gICAgICB9XG5cbiAgICAgIHRoaXMuX3RyeVRvRmlsbFN0YXR1c0JhcigpO1xuXG4gICAgICBpZiAodGhpcy5oYXNBdHRyaWJ1dGUoJ29uLWluZmluaXRlLXNjcm9sbCcpKSB7XG4gICAgICAgIHRoaXMuYXR0cmlidXRlQ2hhbmdlZENhbGxiYWNrKCdvbi1pbmZpbml0ZS1zY3JvbGwnLCBudWxsLCB0aGlzLmdldEF0dHJpYnV0ZSgnb24taW5maW5pdGUtc2Nyb2xsJykpO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgdXBkYXRlQmFja0J1dHRvbihzaG93KSB7XG4gICAgaWYgKHRoaXMuYmFja0J1dHRvbikge1xuICAgICAgc2hvdyA/IHRoaXMuYmFja0J1dHRvbi5zaG93KCkgOiB0aGlzLmJhY2tCdXR0b24uaGlkZSgpO1xuICAgIH1cbiAgfVxuXG4gIHNldCBuYW1lKHN0cikge1xuICAgIHRoaXMuc2V0QXR0cmlidXRlKCduYW1lJywgc3RyKTtcbiAgfVxuXG4gIGdldCBuYW1lKCkge1xuICAgIHJldHVybiB0aGlzLmdldEF0dHJpYnV0ZSgnbmFtZScpO1xuICB9XG5cbiAgZ2V0IGJhY2tCdXR0b24oKSB7XG4gICAgcmV0dXJuIHRoaXMucXVlcnlTZWxlY3Rvcignb25zLWJhY2stYnV0dG9uJyk7XG4gIH1cblxuICBfdHJ5VG9GaWxsU3RhdHVzQmFyKCl7XG4gICAgaW50ZXJuYWwuYXV0b1N0YXR1c0JhckZpbGwoKCkgPT4ge1xuICAgICAgY29uc3QgZmlsbGVkID0gdXRpbC5maW5kUGFyZW50KHRoaXMsIGUgPT4gZS5oYXNBdHRyaWJ1dGUoJ3N0YXR1cy1iYXItZmlsbCcpKTtcbiAgICAgIHV0aWwudG9nZ2xlQXR0cmlidXRlKHRoaXMsICdzdGF0dXMtYmFyLWZpbGwnLCAhZmlsbGVkICYmICh0aGlzLl9jYW5BbmltYXRlVG9vbGJhcigpIHx8ICF0aGlzLl9oYXNBUGFnZUNvbnRyb2xDaGlsZCgpKSk7XG4gICAgfSk7XG4gIH1cblxuICBfaGFzQVBhZ2VDb250cm9sQ2hpbGQoKSB7XG4gICAgcmV0dXJuIHV0aWwuZmluZENoaWxkKHRoaXMuX2NvbnRlbnRFbGVtZW50LCBlID0+IGUubm9kZU5hbWUubWF0Y2goL29ucy0oc3BsaXR0ZXJ8c2xpZGluZy1tZW51fG5hdmlnYXRvcnx0YWJiYXIpL2kpKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcHJvcGVydHkgb25JbmZpbml0ZVNjcm9sbFxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogIFtlbl1GdW5jdGlvbiB0byBiZSBleGVjdXRlZCB3aGVuIHNjcm9sbGluZyB0byB0aGUgYm90dG9tIG9mIHRoZSBwYWdlLiBUaGUgZnVuY3Rpb24gcmVjZWl2ZXMgYSBkb25lIGNhbGxiYWNrIGFzIGFuIGFyZ3VtZW50IHRoYXQgbXVzdCBiZSBjYWxsZWQgd2hlbiBpdCdzIGZpbmlzaGVkLlsvZW5dXG4gICAqICBbamFdWy9qYV1cbiAgICovXG4gIHNldCBvbkluZmluaXRlU2Nyb2xsKHZhbHVlKSB7XG4gICAgaWYgKHZhbHVlID09PSBudWxsKSB7XG4gICAgICB0aGlzLl9vbkluZmluaXRlU2Nyb2xsID0gbnVsbDtcbiAgICAgIHRoaXMuX2NvbnRlbnRFbGVtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3Njcm9sbCcsIHRoaXMuX2JvdW5kT25TY3JvbGwpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBpZiAoISh2YWx1ZSBpbnN0YW5jZW9mIEZ1bmN0aW9uKSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdvbkluZmluaXRlU2Nyb2xsIG11c3QgYmUgYSBmdW5jdGlvbiBvciBudWxsJyk7XG4gICAgfVxuICAgIGlmICghdGhpcy5fb25JbmZpbml0ZVNjcm9sbCkge1xuICAgICAgdGhpcy5faW5maW5pdGVTY3JvbGxMaW1pdCA9IDAuOTtcbiAgICAgIHRoaXMuX2JvdW5kT25TY3JvbGwgPSB0aGlzLl9vblNjcm9sbC5iaW5kKHRoaXMpO1xuICAgICAgc2V0SW1tZWRpYXRlKCgpID0+IHRoaXMuX2NvbnRlbnRFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ3Njcm9sbCcsIHRoaXMuX2JvdW5kT25TY3JvbGwpKTtcbiAgICB9XG4gICAgdGhpcy5fb25JbmZpbml0ZVNjcm9sbCA9IHZhbHVlO1xuICB9XG5cbiAgZ2V0IG9uSW5maW5pdGVTY3JvbGwoKSB7XG4gICAgcmV0dXJuIHRoaXMuX29uSW5maW5pdGVTY3JvbGw7XG4gIH1cblxuICBfb25TY3JvbGwoKSB7XG4gICAgY29uc3QgYyA9IHRoaXMuX2NvbnRlbnRFbGVtZW50LFxuICAgICAgb3ZlckxpbWl0ID0gKGMuc2Nyb2xsVG9wICsgYy5jbGllbnRIZWlnaHQpIC8gYy5zY3JvbGxIZWlnaHQgPj0gdGhpcy5faW5maW5pdGVTY3JvbGxMaW1pdDtcblxuICAgIGlmICh0aGlzLl9vbkluZmluaXRlU2Nyb2xsICYmICF0aGlzLl9sb2FkaW5nQ29udGVudCAmJiBvdmVyTGltaXQpIHtcbiAgICAgIHRoaXMuX2xvYWRpbmdDb250ZW50ID0gdHJ1ZTtcbiAgICAgIHRoaXMuX29uSW5maW5pdGVTY3JvbGwoKCkgPT4gdGhpcy5fbG9hZGluZ0NvbnRlbnQgPSBmYWxzZSk7XG4gICAgfVxuICB9XG5cblxuICAvKipcbiAgICogQHByb3BlcnR5IG9uRGV2aWNlQmFja0J1dHRvblxuICAgKiBAdHlwZSB7T2JqZWN0fVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dQmFjay1idXR0b24gaGFuZGxlci5bL2VuXVxuICAgKiAgIFtqYV3jg5Djg4Pjgq/jg5zjgr/jg7Pjg4/jg7Pjg4njg6njgIJbL2phXVxuICAgKi9cbiAgZ2V0IG9uRGV2aWNlQmFja0J1dHRvbigpIHtcbiAgICByZXR1cm4gdGhpcy5fYmFja0J1dHRvbkhhbmRsZXI7XG4gIH1cblxuICBzZXQgb25EZXZpY2VCYWNrQnV0dG9uKGNhbGxiYWNrKSB7XG4gICAgaWYgKHRoaXMuX2JhY2tCdXR0b25IYW5kbGVyKSB7XG4gICAgICB0aGlzLl9iYWNrQnV0dG9uSGFuZGxlci5kZXN0cm95KCk7XG4gICAgfVxuXG4gICAgdGhpcy5fYmFja0J1dHRvbkhhbmRsZXIgPSBkZXZpY2VCYWNrQnV0dG9uRGlzcGF0Y2hlci5jcmVhdGVIYW5kbGVyKHRoaXMsIGNhbGxiYWNrKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcmV0dXJuIHtIVE1MRWxlbWVudH1cbiAgICovXG4gIF9nZXRDb250ZW50RWxlbWVudCgpIHtcbiAgICBjb25zdCByZXN1bHQgPSB1dGlsLmZpbmRDaGlsZCh0aGlzLCAnLnBhZ2VfX2NvbnRlbnQnKTtcbiAgICBpZiAocmVzdWx0KSB7XG4gICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cbiAgICB0aHJvdyBFcnJvcignZmFpbCB0byBnZXQgXCIucGFnZV9fY29udGVudFwiIGVsZW1lbnQuJyk7XG4gIH1cblxuICAvKipcbiAgICogQHJldHVybiB7Qm9vbGVhbn1cbiAgICovXG4gIF9jYW5BbmltYXRlVG9vbGJhcigpIHtcbiAgICBpZiAodXRpbC5maW5kQ2hpbGQodGhpcywgJ29ucy10b29sYmFyJykpIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICByZXR1cm4gISF1dGlsLmZpbmRDaGlsZCh0aGlzLl9jb250ZW50RWxlbWVudCwgZWwgPT4ge1xuICAgICAgcmV0dXJuIHV0aWwubWF0Y2goZWwsICdvbnMtdG9vbGJhcicpICYmICFlbC5oYXNBdHRyaWJ1dGUoJ2lubGluZScpO1xuICAgIH0pO1xuICB9XG5cbiAgLyoqXG4gICAqIEByZXR1cm4ge0hUTUxFbGVtZW50fVxuICAgKi9cbiAgX2dldEJhY2tncm91bmRFbGVtZW50KCkge1xuICAgIGNvbnN0IHJlc3VsdCA9IHV0aWwuZmluZENoaWxkKHRoaXMsICcucGFnZV9fYmFja2dyb3VuZCcpO1xuICAgIGlmIChyZXN1bHQpIHtcbiAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxuICAgIHRocm93IEVycm9yKCdmYWlsIHRvIGdldCBcIi5wYWdlX19iYWNrZ3JvdW5kXCIgZWxlbWVudC4nKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcmV0dXJuIHtIVE1MRWxlbWVudH1cbiAgICovXG4gIF9nZXRCb3R0b21Ub29sYmFyRWxlbWVudCgpIHtcbiAgICByZXR1cm4gdXRpbC5maW5kQ2hpbGQodGhpcywgJ29ucy1ib3R0b20tdG9vbGJhcicpIHx8IGludGVybmFsLm51bGxFbGVtZW50O1xuICB9XG5cblxuICAvKipcbiAgICogQHJldHVybiB7SFRNTEVsZW1lbnR9XG4gICAqL1xuICBfZ2V0VG9vbGJhckVsZW1lbnQoKSB7XG4gICAgcmV0dXJuIHV0aWwuZmluZENoaWxkKHRoaXMsICdvbnMtdG9vbGJhcicpIHx8IG51bGxUb29sYmFyRWxlbWVudDtcbiAgfVxuXG4gIHN0YXRpYyBnZXQgb2JzZXJ2ZWRBdHRyaWJ1dGVzKCkge1xuICAgIHJldHVybiBbJ21vZGlmaWVyJywgJ19tdXRlZCcsICdfc2tpcGluaXQnLCAnb24taW5maW5pdGUtc2Nyb2xsJywgJ2NsYXNzJ107XG4gIH1cblxuICBhdHRyaWJ1dGVDaGFuZ2VkQ2FsbGJhY2sobmFtZSwgbGFzdCwgY3VycmVudCkge1xuICAgIHN3aXRjaCAobmFtZSkge1xuICAgICAgY2FzZSAnY2xhc3MnOlxuICAgICAgICBpZiAoIXRoaXMuY2xhc3NMaXN0LmNvbnRhaW5zKGRlZmF1bHRDbGFzc05hbWUpKSB7XG4gICAgICAgICAgdGhpcy5jbGFzc05hbWUgPSBkZWZhdWx0Q2xhc3NOYW1lICsgJyAnICsgY3VycmVudDtcbiAgICAgICAgfVxuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ21vZGlmaWVyJzpcbiAgICAgICAgTW9kaWZpZXJVdGlsLm9uTW9kaWZpZXJDaGFuZ2VkKGxhc3QsIGN1cnJlbnQsIHRoaXMsIHNjaGVtZSk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnX211dGVkJzpcbiAgICAgICAgdGhpcy5faXNNdXRlZCA9IHRoaXMuaGFzQXR0cmlidXRlKCdfbXV0ZWQnKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlICdfc2tpcGluaXQnOlxuICAgICAgICB0aGlzLl9za2lwSW5pdCA9IHRoaXMuaGFzQXR0cmlidXRlKCdfc2tpcGluaXQnKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlICdvbi1pbmZpbml0ZS1zY3JvbGwnOlxuICAgICAgICBpZiAoY3VycmVudCA9PT0gbnVsbCkge1xuICAgICAgICAgIHRoaXMub25JbmZpbml0ZVNjcm9sbCA9IG51bGw7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdGhpcy5vbkluZmluaXRlU2Nyb2xsID0gKGRvbmUpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IGYgPSB1dGlsLmZpbmRGcm9tUGF0aChjdXJyZW50KTtcbiAgICAgICAgICAgIHRoaXMub25JbmZpbml0ZVNjcm9sbCA9IGY7XG4gICAgICAgICAgICBmKGRvbmUpO1xuICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG5cbiAgX2NvbXBpbGUoKSB7XG4gICAgYXV0b1N0eWxlLnByZXBhcmUodGhpcyk7XG5cbiAgICBpZiAodXRpbC5maW5kQ2hpbGQodGhpcywgJy5jb250ZW50JykpIHtcbiAgICAgIHV0aWwuZmluZENoaWxkKHRoaXMsICcuY29udGVudCcpLmNsYXNzTGlzdC5hZGQoJ3BhZ2VfX2NvbnRlbnQnKTtcbiAgICB9XG5cbiAgICBpZiAodXRpbC5maW5kQ2hpbGQodGhpcywgJy5iYWNrZ3JvdW5kJykpIHtcbiAgICAgIHV0aWwuZmluZENoaWxkKHRoaXMsICcuYmFja2dyb3VuZCcpLmNsYXNzTGlzdC5hZGQoJ3BhZ2VfX2JhY2tncm91bmQnKTtcbiAgICB9XG5cbiAgICBpZiAoIXV0aWwuZmluZENoaWxkKHRoaXMsICcucGFnZV9fY29udGVudCcpKSB7XG4gICAgICBjb25zdCBjb250ZW50ID0gdXRpbC5jcmVhdGUoJy5wYWdlX19jb250ZW50Jyk7XG5cbiAgICAgIHV0aWwuYXJyYXlGcm9tKHRoaXMuY2hpbGROb2RlcykuZm9yRWFjaChub2RlID0+IHtcbiAgICAgICAgaWYgKG5vZGUubm9kZVR5cGUgIT09IDEgfHwgdGhpcy5fZWxlbWVudFNob3VsZEJlTW92ZWQobm9kZSkpIHtcbiAgICAgICAgICBjb250ZW50LmFwcGVuZENoaWxkKG5vZGUpO1xuICAgICAgICB9XG4gICAgICB9KTtcblxuICAgICAgY29uc3QgcHJldk5vZGUgPSB1dGlsLmZpbmRDaGlsZCh0aGlzLCAnLnBhZ2VfX2JhY2tncm91bmQnKSB8fCB1dGlsLmZpbmRDaGlsZCh0aGlzLCAnb25zLXRvb2xiYXInKTtcblxuICAgICAgdGhpcy5pbnNlcnRCZWZvcmUoY29udGVudCwgcHJldk5vZGUgJiYgcHJldk5vZGUubmV4dFNpYmxpbmcpO1xuICAgIH1cblxuICAgIGlmICghdXRpbC5maW5kQ2hpbGQodGhpcywgJy5wYWdlX19iYWNrZ3JvdW5kJykpIHtcbiAgICAgIGNvbnN0IGJhY2tncm91bmQgPSB1dGlsLmNyZWF0ZSgnLnBhZ2VfX2JhY2tncm91bmQnKTtcbiAgICAgIHRoaXMuaW5zZXJ0QmVmb3JlKGJhY2tncm91bmQsIHV0aWwuZmluZENoaWxkKHRoaXMsICcucGFnZV9fY29udGVudCcpKTtcbiAgICB9XG5cbiAgICBNb2RpZmllclV0aWwuaW5pdE1vZGlmaWVyKHRoaXMsIHNjaGVtZSk7XG4gIH1cblxuICBfZWxlbWVudFNob3VsZEJlTW92ZWQoZWwpIHtcbiAgICBpZiAoZWwuY2xhc3NMaXN0LmNvbnRhaW5zKCdwYWdlX19iYWNrZ3JvdW5kJykpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgY29uc3QgdGFnTmFtZSA9IGVsLnRhZ05hbWUudG9Mb3dlckNhc2UoKTtcbiAgICBpZiAodGFnTmFtZSA9PT0gJ29ucy1mYWInKSB7XG4gICAgICByZXR1cm4gIWVsLmhhc0F0dHJpYnV0ZSgncG9zaXRpb24nKTtcbiAgICB9XG4gICAgY29uc3QgZml4ZWRFbGVtZW50cyA9IFsnb25zLXRvb2xiYXInLCAnb25zLWJvdHRvbS10b29sYmFyJywgJ29ucy1tb2RhbCcsICdvbnMtc3BlZWQtZGlhbCcsICdvbnMtZGlhbG9nJywgJ29ucy1hbGVydC1kaWFsb2cnLCAnb25zLXBvcG92ZXInXTtcbiAgICByZXR1cm4gZWwuaGFzQXR0cmlidXRlKCdpbmxpbmUnKSB8fCBmaXhlZEVsZW1lbnRzLmluZGV4T2YodGFnTmFtZSkgPT09IC0xO1xuICB9XG5cbiAgX3Nob3coKSB7XG4gICAgaWYgKCF0aGlzLl9pc1Nob3duICYmIHV0aWwuaXNBdHRhY2hlZCh0aGlzKSkge1xuICAgICAgdGhpcy5faXNTaG93biA9IHRydWU7XG5cbiAgICAgIGlmICghdGhpcy5faXNNdXRlZCkge1xuICAgICAgICB1dGlsLnRyaWdnZXJFbGVtZW50RXZlbnQodGhpcywgJ3Nob3cnKTtcbiAgICAgIH1cblxuICAgICAgdXRpbC5wcm9wYWdhdGVBY3Rpb24odGhpcywgJ19zaG93Jyk7XG4gICAgfVxuICB9XG5cbiAgX2hpZGUoKSB7XG4gICAgaWYgKHRoaXMuX2lzU2hvd24pIHtcbiAgICAgIHRoaXMuX2lzU2hvd24gPSBmYWxzZTtcblxuICAgICAgaWYgKCF0aGlzLl9pc011dGVkKSB7XG4gICAgICAgIHV0aWwudHJpZ2dlckVsZW1lbnRFdmVudCh0aGlzLCAnaGlkZScpO1xuICAgICAgfVxuXG4gICAgICB1dGlsLnByb3BhZ2F0ZUFjdGlvbih0aGlzLCAnX2hpZGUnKTtcbiAgICB9XG4gIH1cblxuICBfZGVzdHJveSgpIHtcbiAgICB0aGlzLl9oaWRlKCk7XG5cbiAgICBpZiAoIXRoaXMuX2lzTXV0ZWQpIHtcbiAgICAgIHV0aWwudHJpZ2dlckVsZW1lbnRFdmVudCh0aGlzLCAnZGVzdHJveScpO1xuICAgIH1cblxuICAgIGlmICh0aGlzLm9uRGV2aWNlQmFja0J1dHRvbikge1xuICAgICAgdGhpcy5vbkRldmljZUJhY2tCdXR0b24uZGVzdHJveSgpO1xuICAgIH1cblxuICAgIHV0aWwucHJvcGFnYXRlQWN0aW9uKHRoaXMsICdfZGVzdHJveScpO1xuXG4gICAgdGhpcy5yZW1vdmUoKTtcbiAgfVxuXG4gIHN0YXRpYyBnZXQgZXZlbnRzKCkge1xuICAgIHJldHVybiBbJ2luaXQnLCAnc2hvdycsICdoaWRlJywgJ2Rlc3Ryb3knXTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcHJvcGVydHkgZGF0YVxuICAgKiBAdHlwZSB7Kn1cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXVVzZXIncyBjdXN0b20gZGF0YSBwYXNzZWQgdG8gYHB1c2hQYWdlKClgLWxpa2UgbWV0aG9kcy5bL2VuXVxuICAgKiAgIFtqYV1bL2phXVxuICAgKi9cbn1cblxuY3VzdG9tRWxlbWVudHMuZGVmaW5lKCdvbnMtcGFnZScsIFBhZ2VFbGVtZW50KTtcbiIsIi8qXG5Db3B5cmlnaHQgMjAxMy0yMDE1IEFTSUFMIENPUlBPUkFUSU9OXG5cbkxpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG55b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG5Zb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcblxuICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG5cblVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbmRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbldJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxubGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5cbiovXG5pbXBvcnQgdXRpbCBmcm9tICcuLi8uLi9vbnMvdXRpbCc7XG5pbXBvcnQgYW5pbWl0IGZyb20gJy4uLy4uL29ucy9hbmltaXQnO1xuaW1wb3J0IEJhc2VBbmltYXRvciBmcm9tICcuLi8uLi9vbnMvYmFzZS1hbmltYXRvcic7XG5cbmV4cG9ydCBjbGFzcyBQb3BvdmVyQW5pbWF0b3IgZXh0ZW5kcyBCYXNlQW5pbWF0b3Ige1xuXG4gIC8qKlxuICAgKiBAcGFyYW0ge09iamVjdH0gb3B0aW9uc1xuICAgKiBAcGFyYW0ge1N0cmluZ30gb3B0aW9ucy50aW1pbmdcbiAgICogQHBhcmFtIHtOdW1iZXJ9IG9wdGlvbnMuZHVyYXRpb25cbiAgICogQHBhcmFtIHtOdW1iZXJ9IG9wdGlvbnMuZGVsYXlcbiAgICovXG4gIGNvbnN0cnVjdG9yKHt0aW1pbmcgPSAnY3ViaWMtYmV6aWVyKC4xLCAuNywgLjQsIDEpJywgZGVsYXkgPSAwLCBkdXJhdGlvbiA9IDAuMn0gPSB7fSkge1xuICAgIHN1cGVyKHsgdGltaW5nLCBkZWxheSwgZHVyYXRpb24gfSk7XG4gIH1cblxuICBzaG93KHBvcG92ZXIsIGNhbGxiYWNrKSB7XG4gICAgY2FsbGJhY2soKTtcbiAgfVxuXG4gIGhpZGUocG9wb3ZlciwgY2FsbGJhY2spIHtcbiAgICBjYWxsYmFjaygpO1xuICB9XG5cbiAgX2FuaW1hdGUoZWxlbWVudCwge2Zyb20sIHRvLCBvcHRpb25zLCBjYWxsYmFjaywgcmVzdG9yZSA9IGZhbHNlLCBhbmltYXRpb259KSB7XG4gICAgb3B0aW9ucyA9IHV0aWwuZXh0ZW5kKHt9LCB0aGlzLm9wdGlvbnMsIG9wdGlvbnMpO1xuXG4gICAgaWYgKGFuaW1hdGlvbikge1xuICAgICAgZnJvbSA9IGFuaW1hdGlvbi5mcm9tO1xuICAgICAgdG8gPSBhbmltYXRpb24udG87XG4gICAgfVxuXG4gICAgYW5pbWF0aW9uID0gYW5pbWl0KGVsZW1lbnQpO1xuICAgIGlmIChyZXN0b3JlKSB7XG4gICAgICBhbmltYXRpb24gPSBhbmltYXRpb24uc2F2ZVN0eWxlKCk7XG4gICAgfVxuICAgIGFuaW1hdGlvbiA9IGFuaW1hdGlvbi5xdWV1ZShmcm9tKS53YWl0KHRoaXMuZGVsYXkpLnF1ZXVlKHtcbiAgICAgIGNzczogdG8sXG4gICAgICBkdXJhdGlvbjogdGhpcy5kdXJhdGlvbixcbiAgICAgIHRpbWluZzogdGhpcy50aW1pbmdcbiAgICB9KTtcbiAgICBpZiAocmVzdG9yZSkge1xuICAgICAgYW5pbWF0aW9uID0gYW5pbWF0aW9uLnJlc3RvcmVTdHlsZSgpO1xuICAgIH1cbiAgICBpZiAoY2FsbGJhY2spIHtcbiAgICAgIGFuaW1hdGlvbiA9IGFuaW1hdGlvbi5xdWV1ZSgoZG9uZSkgPT4ge1xuICAgICAgICBjYWxsYmFjaygpO1xuICAgICAgICBkb25lKCk7XG4gICAgICB9KTtcbiAgICB9XG4gICAgcmV0dXJuIGFuaW1hdGlvbjtcbiAgfVxuXG4gIF9hbmltYXRlQWxsKGVsZW1lbnQsIGFuaW1hdGlvbnMpIHtcbiAgICBPYmplY3Qua2V5cyhhbmltYXRpb25zKS5mb3JFYWNoKGtleSA9PiB0aGlzLl9hbmltYXRlKGVsZW1lbnRba2V5XSwgYW5pbWF0aW9uc1trZXldKS5wbGF5KCkpO1xuICB9XG5cbn1cblxuY29uc3QgZmFkZSA9IHtcbiAgb3V0OiB7XG4gICAgZnJvbToge29wYWNpdHk6IDEuMH0sXG4gICAgdG86IHtvcGFjaXR5OiAwfVxuICB9LFxuICBpbjoge1xuICAgIGZyb206IHtvcGFjaXR5OiAwfSxcbiAgICB0bzoge29wYWNpdHk6IDEuMH1cbiAgfVxufTtcblxuZXhwb3J0IGNsYXNzIE1ERmFkZVBvcG92ZXJBbmltYXRvciBleHRlbmRzIFBvcG92ZXJBbmltYXRvciB7XG4gIHNob3cocG9wb3ZlciwgY2FsbGJhY2spIHtcbiAgICB0aGlzLl9hbmltYXRlQWxsKHBvcG92ZXIsIHtcbiAgICAgIF9tYXNrOiBmYWRlLmluLFxuICAgICAgX3BvcG92ZXI6IHthbmltYXRpb246IGZhZGUuaW4sIHJlc3RvcmU6IHRydWUsIGNhbGxiYWNrfVxuICAgIH0pO1xuICB9XG5cbiAgaGlkZShwb3BvdmVyLCBjYWxsYmFjaykge1xuICAgIHRoaXMuX2FuaW1hdGVBbGwocG9wb3Zlciwge1xuICAgICAgX21hc2s6IGZhZGUub3V0LFxuICAgICAgX3BvcG92ZXI6IHthbmltYXRpb246IGZhZGUub3V0LCByZXN0b3JlOiB0cnVlLCBjYWxsYmFja31cbiAgICB9KTtcbiAgfVxufVxuXG5leHBvcnQgY2xhc3MgSU9TRmFkZVBvcG92ZXJBbmltYXRvciBleHRlbmRzIE1ERmFkZVBvcG92ZXJBbmltYXRvciB7XG4gIHNob3cocG9wb3ZlciwgY2FsbGJhY2spIHtcbiAgICB0aGlzLl9hbmltYXRlQWxsKHBvcG92ZXIsIHtcbiAgICAgIF9tYXNrOiBmYWRlLmluLFxuICAgICAgX3BvcG92ZXI6IHtcbiAgICAgICAgZnJvbToge1xuICAgICAgICAgIHRyYW5zZm9ybTogJ3NjYWxlM2QoMS4zLCAxLjMsIDEuMCknLFxuICAgICAgICAgIG9wYWNpdHk6IDBcbiAgICAgICAgfSxcbiAgICAgICAgdG86IHtcbiAgICAgICAgICB0cmFuc2Zvcm06ICdzY2FsZTNkKDEuMCwgMS4wLCAgMS4wKScsXG4gICAgICAgICAgb3BhY2l0eTogMS4wXG4gICAgICAgIH0sXG4gICAgICAgIHJlc3RvcmU6IHRydWUsXG4gICAgICAgIGNhbGxiYWNrXG4gICAgICB9XG4gICAgfSk7XG4gIH1cbn1cbiIsIi8qXG5Db3B5cmlnaHQgMjAxMy0yMDE1IEFTSUFMIENPUlBPUkFUSU9OXG5cbkxpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG55b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG5Zb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcblxuICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG5cblVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbmRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbldJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxubGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5cbiovXG5cbmltcG9ydCB1dGlsIGZyb20gJy4uLy4uL29ucy91dGlsJztcbmltcG9ydCBhdXRvU3R5bGUgZnJvbSAnLi4vLi4vb25zL2F1dG9zdHlsZSc7XG5pbXBvcnQgTW9kaWZpZXJVdGlsIGZyb20gJy4uLy4uL29ucy9pbnRlcm5hbC9tb2RpZmllci11dGlsJztcbmltcG9ydCBBbmltYXRvckZhY3RvcnkgZnJvbSAnLi4vLi4vb25zL2ludGVybmFsL2FuaW1hdG9yLWZhY3RvcnknO1xuaW1wb3J0IHtQb3BvdmVyQW5pbWF0b3IsIElPU0ZhZGVQb3BvdmVyQW5pbWF0b3IsIE1ERmFkZVBvcG92ZXJBbmltYXRvcn0gZnJvbSAnLi9hbmltYXRvcic7XG5pbXBvcnQgcGxhdGZvcm0gZnJvbSAnLi4vLi4vb25zL3BsYXRmb3JtJztcbmltcG9ydCBCYXNlRWxlbWVudCBmcm9tICcuLi8uLi9vbnMvYmFzZS1lbGVtZW50JztcbmltcG9ydCBkZXZpY2VCYWNrQnV0dG9uRGlzcGF0Y2hlciBmcm9tICcuLi8uLi9vbnMvZGV2aWNlLWJhY2stYnV0dG9uLWRpc3BhdGNoZXInO1xuaW1wb3J0IERvb3JMb2NrIGZyb20gJy4uLy4uL29ucy9kb29ybG9jayc7XG5pbXBvcnQgY29udGVudFJlYWR5IGZyb20gJy4uLy4uL29ucy9jb250ZW50LXJlYWR5JztcblxuY29uc3Qgc2NoZW1lID0ge1xuICAnLnBvcG92ZXInOiAncG9wb3Zlci0tKicsXG4gICcucG9wb3Zlci1tYXNrJzogJ3BvcG92ZXItbWFzay0tKicsXG4gICcucG9wb3Zlcl9fY29udGVudCc6ICdwb3BvdmVyLS0qX19jb250ZW50JyxcbiAgJy5wb3BvdmVyX19hcnJvdyc6ICdwb3BvdmVyLS0qX19hcnJvdydcbn07XG5cbmNvbnN0IF9hbmltYXRvckRpY3QgPSB7XG4gICdkZWZhdWx0JzogKCkgPT4gcGxhdGZvcm0uaXNBbmRyb2lkKCkgPyBNREZhZGVQb3BvdmVyQW5pbWF0b3IgOiBJT1NGYWRlUG9wb3ZlckFuaW1hdG9yLFxuICAnbm9uZSc6IFBvcG92ZXJBbmltYXRvcixcbiAgJ2ZhZGUtaW9zJzogSU9TRmFkZVBvcG92ZXJBbmltYXRvcixcbiAgJ2ZhZGUtbWQnOiBNREZhZGVQb3BvdmVyQW5pbWF0b3Jcbn07XG5cbmNvbnN0IHRlbXBsYXRlU291cmNlID0gdXRpbC5jcmVhdGVGcmFnbWVudChgXG4gIDxkaXYgY2xhc3M9XCJwb3BvdmVyLW1hc2tcIj48L2Rpdj5cbiAgPGRpdiBjbGFzcz1cInBvcG92ZXJcIj5cbiAgICA8ZGl2IGNsYXNzPVwicG9wb3Zlcl9fY29udGVudFwiPjwvZGl2PlxuICAgIDxkaXYgY2xhc3M9XCJwb3BvdmVyX19hcnJvd1wiPjwvZGl2PlxuICA8L2Rpdj5cbmApO1xuXG5jb25zdCBwb3NpdGlvbnMgPSB7XG4gIHVwOiAnYm90dG9tJyxcbiAgbGVmdDogJ3JpZ2h0JyxcbiAgZG93bjogJ3RvcCcsXG4gIHJpZ2h0OiAnbGVmdCdcbn07XG5cbmNvbnN0IGRpcmVjdGlvbnMgPSBPYmplY3Qua2V5cyhwb3NpdGlvbnMpO1xuLyoqXG4gKiBAZWxlbWVudCBvbnMtcG9wb3ZlclxuICogQGNhdGVnb3J5IGRpYWxvZ1xuICogQGRlc2NyaXB0aW9uXG4gKiAgW2VuXVxuICogICAgQSBjb21wb25lbnQgdGhhdCBkaXNwbGF5cyBhIHBvcG92ZXIgbmV4dCB0byBhbiBlbGVtZW50LiBUaGUgcG9wb3ZlciBjYW4gYmUgdXNlZCB0byBkaXNwbGF5IGV4dHJhIGluZm9ybWF0aW9uIGFib3V0IGEgY29tcG9uZW50IG9yIGEgdG9vbHRpcC5cbiAqXG4gKiAgICBUbyB1c2UgdGhlIGVsZW1lbnQgaXQgY2FuIGVpdGhlciBiZSBhdHRhY2hlZCBkaXJlY3RseSB0byB0aGUgYDxib2R5PmAgZWxlbWVudCBvciBkeW5hbWljYWxseSBjcmVhdGVkIGZyb20gYSB0ZW1wbGF0ZSB1c2luZyB0aGUgYG9ucy5jcmVhdGVQb3BvdmVyKHRlbXBsYXRlKWAgdXRpbGl0eSBmdW5jdGlvbiBhbmQgdGhlIGA8b25zLXRlbXBsYXRlPmAgdGFnLlxuICpcbiAqICAgIEFub3RoZXIgY29tbW9uIHdheSB0byB1c2UgdGhlIHBvcG92ZXIgaXMgdG8gZGlzcGxheSBhIG1lbnUgd2hlbiBhIGJ1dHRvbiBvbiB0aGUgc2NyZWVuIGlzIHRhcHBlZC4gRm9yIE1hdGVyaWFsIERlc2lnbiwgcG9wb3ZlciBsb29rcyBleGFjdGx5IGFzIGEgZHJvcGRvd24gbWVudS5cbiAqICBbL2VuXVxuICogIFtqYV3jgYLjgovopoHntKDjgpLlr77osaHjgajjgZnjgovjg53jg4Pjg5fjgqrjg7zjg5Djg7zjgpLooajnpLrjgZnjgovjgrPjg7Pjg53jg7zjg43jg7Pjg4jjgafjgZnjgIJbL2phXVxuICogQGNvZGVwZW4gWllZUktvXG4gKiBAdHV0b3JpYWwgdmFuaWxsYS9SZWZlcmVuY2UvcG9wb3ZlclxuICogQGd1aWRlIGRpYWxvZ3NcbiAqICBbZW5dRGlhbG9nIGNvbXBvbmVudHNbL2VuXVxuICogIFtqYV1EaWFsb2cgY29tcG9uZW50c1svamFdXG4gKiBAZ3VpZGUgdXNpbmctbW9kaWZpZXIgW2VuXU1vcmUgZGV0YWlscyBhYm91dCB0aGUgYG1vZGlmaWVyYCBhdHRyaWJ1dGVbL2VuXVtqYV1tb2RpZmllcuWxnuaAp+OBruS9v+OBhOaWuVsvamFdXG4gKiBAZXhhbXBsZVxuICogPG9ucy1idXR0b24gb25jbGljaz1cInNob3dQb3BvdmVyKHRoaXMpXCI+XG4gKiAgIENsaWNrIG1lIVxuICogPC9vbnMtYnV0dG9uPlxuICpcbiAqIDxvbnMtcG9wb3ZlciBkaXJlY3Rpb249XCJkb3duXCIgaWQ9XCJwb3BvdmVyXCI+XG4gKiAgIDxwPlRoaXMgaXMgYSBwb3BvdmVyITwvcD5cbiAqIDwvb25zLXBvcG92ZXI+XG4gKlxuICogPHNjcmlwdD5cbiAqICAgdmFyIHNob3dQb3BvdmVyID0gZnVuY3Rpb24oZWxlbWVudCkge1xuICogICAgIHZhciBwb3BvdmVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3BvcG92ZXInKTtcbiAqICAgICBwb3BvdmVyLnNob3coZWxlbWVudCk7XG4gKiAgIH07XG4gKiA8L3NjcmlwdD5cbiAqL1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wb3ZlckVsZW1lbnQgZXh0ZW5kcyBCYXNlRWxlbWVudCB7XG5cbiAgLyoqXG4gICAqIEBldmVudCBwcmVzaG93XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1GaXJlZCBqdXN0IGJlZm9yZSB0aGUgcG9wb3ZlciBpcyBkaXNwbGF5ZWQuWy9lbl1cbiAgICogICBbamFd44Od44OD44OX44Kq44O844OQ44O844GM6KGo56S644GV44KM44KL55u05YmN44Gr55m654Gr44GX44G+44GZ44CCWy9qYV1cbiAgICogQHBhcmFtIHtPYmplY3R9IGV2ZW50IFtlbl1FdmVudCBvYmplY3QuWy9lbl1cbiAgICogQHBhcmFtIHtPYmplY3R9IGV2ZW50LnBvcG92ZXJcbiAgICogICBbZW5dQ29tcG9uZW50IG9iamVjdC5bL2VuXVxuICAgKiAgIFtqYV3jgrPjg7Pjg53jg7zjg43jg7Pjg4jjga7jgqrjg5bjgrjjgqfjgq/jg4jjgIJbL2phXVxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBldmVudC5jYW5jZWxcbiAgICogICBbZW5dQ2FsbCB0aGlzIGZ1bmN0aW9uIHRvIHN0b3AgdGhlIHBvcG92ZXIgZnJvbSBiZWluZyBzaG93bi5bL2VuXVxuICAgKiAgIFtqYV3jgZPjga7plqLmlbDjgpLlkbzjgbPlh7rjgZnjgajjgIHjg53jg4Pjg5fjgqrjg7zjg5Djg7zjga7ooajnpLrjgYzjgq3jg6Pjg7Pjgrvjg6vjgZXjgozjgb7jgZnjgIJbL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQGV2ZW50IHBvc3RzaG93XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1GaXJlZCBqdXN0IGFmdGVyIHRoZSBwb3BvdmVyIGlzIGRpc3BsYXllZC5bL2VuXVxuICAgKiAgIFtqYV3jg53jg4Pjg5fjgqrjg7zjg5Djg7zjgYzooajnpLrjgZXjgozjgZ/nm7TlvozjgavnmbrngavjgZfjgb7jgZnjgIJbL2phXVxuICAgKiBAcGFyYW0ge09iamVjdH0gZXZlbnQgW2VuXUV2ZW50IG9iamVjdC5bL2VuXVxuICAgKiBAcGFyYW0ge09iamVjdH0gZXZlbnQucG9wb3ZlclxuICAgKiAgIFtlbl1Db21wb25lbnQgb2JqZWN0LlsvZW5dXG4gICAqICAgW2phXeOCs+ODs+ODneODvOODjeODs+ODiOOBruOCquODluOCuOOCp+OCr+ODiOOAglsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAZXZlbnQgcHJlaGlkZVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dRmlyZWQganVzdCBiZWZvcmUgdGhlIHBvcG92ZXIgaXMgaGlkZGVuLlsvZW5dXG4gICAqICAgW2phXeODneODg+ODl+OCquODvOODkOODvOOBjOmaoOOCjOOCi+ebtOWJjeOBq+eZuueBq+OBl+OBvuOBmeOAglsvamFdXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBldmVudCBbZW5dRXZlbnQgb2JqZWN0LlsvZW5dXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBldmVudC5wb3BvdmVyXG4gICAqICAgW2VuXUNvbXBvbmVudCBvYmplY3QuWy9lbl1cbiAgICogICBbamFd44Kz44Oz44Od44O844ON44Oz44OI44Gu44Kq44OW44K444Kn44Kv44OI44CCWy9qYV1cbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gZXZlbnQuY2FuY2VsXG4gICAqICAgW2VuXUNhbGwgdGhpcyBmdW5jdGlvbiB0byBzdG9wIHRoZSBwb3BvdmVyIGZyb20gYmVpbmcgaGlkZGVuLlsvZW5dXG4gICAqICAgW2phXeOBk+OBrumWouaVsOOCkuWRvOOBs+WHuuOBmeOBqOOAgeODneODg+ODl+OCquODvOODkOODvOOBjOmaoOOCjOOCi+WHpueQhuOCkuOCreODo+ODs+OCu+ODq+OBl+OBvuOBmeOAglsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAZXZlbnQgcG9zdGhpZGVcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXUZpcmVkIGp1c3QgYWZ0ZXIgdGhlIHBvcG92ZXIgaXMgaGlkZGVuLlsvZW5dXG4gICAqICAgW2phXeODneODg+ODl+OCquODvOODkOODvOOBjOmaoOOCjOOBn+W+jOOBq+eZuueBq+OBl+OBvuOBmeOAglsvamFdXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBldmVudCBbZW5dRXZlbnQgb2JqZWN0LlsvZW5dXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBldmVudC5wb3BvdmVyXG4gICAqICAgW2VuXUNvbXBvbmVudCBvYmplY3QuWy9lbl1cbiAgICogICBbamFd44Kz44Oz44Od44O844ON44Oz44OI44Gu44Kq44OW44K444Kn44Kv44OI44CCWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBhdHRyaWJ1dGUgbW9kaWZpZXJcbiAgICogQHR5cGUge1N0cmluZ31cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICBbZW5dVGhlIGFwcGVhcmFuY2Ugb2YgdGhlIHBvcG92ZXIuWy9lbl1cbiAgICogIFtqYV3jg53jg4Pjg5fjgqrjg7zjg5Djg7zjga7ooajnj77jgpLmjIflrprjgZfjgb7jgZnjgIJbL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQGF0dHJpYnV0ZSBkaXJlY3Rpb25cbiAgICogQHR5cGUge1N0cmluZ31cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICBbZW5dXG4gICAqICAgIEEgc3BhY2Ugc2VwYXJhdGVkIGxpc3Qgb2YgZGlyZWN0aW9ucy4gSWYgbW9yZSB0aGFuIG9uZSBkaXJlY3Rpb24gaXMgc3BlY2lmaWVkLFxuICAgKiAgICBpdCB3aWxsIGJlIGNob3NlbiBhdXRvbWF0aWNhbGx5LiBWYWxpZCBkaXJlY3Rpb25zIGFyZSBgXCJ1cFwiYCwgYFwiZG93blwiYCwgYFwibGVmdFwiYCBhbmQgYFwicmlnaHRcImAuXG4gICAqICBbL2VuXVxuICAgKiAgW2phXVxuICAgKiAgICDjg53jg4Pjg5fjgqrjg7zjg5Djg7zjgpLooajnpLrjgZnjgovmlrnlkJHjgpLnqbrnmb3ljLrliIfjgorjgafopIfmlbDmjIflrprjgafjgY3jgb7jgZnjgIJcbiAgICogICAg5oyH5a6a44Gn44GN44KL5pa55ZCR44Gv44CBXCJ1cFwiLCBcImRvd25cIiwgXCJsZWZ0XCIsIFwicmlnaHRcIuOBrjTjgaTjgafjgZnjgILnqbrnmb3ljLrliIfjgorjgafopIfmlbDmjIflrprjgZnjgovjgZPjgajjgoLjgafjgY3jgb7jgZnjgIJcbiAgICogICAg6KSH5pWw5oyH5a6a44GV44KM44Gf5aC05ZCI44CB5a++6LGh44Go44GZ44KL6KaB57Sg44Gr5ZCI44KP44Gb44Gm5oyH5a6a44GX44Gf5YCk44GL44KJ6Ieq5YuV55qE44Gr6YG45oqe44GV44KM44G+44GZ44CCXG4gICAqICBbL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQGF0dHJpYnV0ZSBjYW5jZWxhYmxlXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1JZiB0aGlzIGF0dHJpYnV0ZSBpcyBzZXQgdGhlIHBvcG92ZXIgY2FuIGJlIGNsb3NlZCBieSB0YXBwaW5nIHRoZSBiYWNrZ3JvdW5kIG9yIGJ5IHByZXNzaW5nIHRoZSBiYWNrIGJ1dHRvbi5bL2VuXVxuICAgKiAgIFtqYV3jgZPjga7lsZ7mgKfjgYzjgYLjgovjgajjgIHjg53jg4Pjg5fjgqrjg7zjg5Djg7zjgYzooajnpLrjgZXjgozjgZ/mmYLjgavjgIHog4zmma/jgoTjg5Djg4Pjgq/jg5zjgr/jg7PjgpLjgr/jg4Pjg5fjgZfjgZ/mmYLjgavjgpLjg53jg4Pjg5fjgqrjg7zjg5Djg7zplonjgZjjgb7jgZnjgIJbL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQGF0dHJpYnV0ZSBjb3Zlci10YXJnZXRcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXUlmIHNldCB0aGUgcG9wb3ZlciB3aWxsIGNvdmVyIHRoZSB0YXJnZXQgb24gdGhlIHNjcmVlbi5bL2VuXVxuICAgKiAgIFtqYV1bL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQGF0dHJpYnV0ZSBhbmltYXRpb25cbiAgICogQHR5cGUge1N0cmluZ31cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXVRoZSBhbmltYXRpb24gdXNlZCB3aGVuIHNob3dpbmcgYW4gaGlkaW5nIHRoZSBwb3BvdmVyLiBDYW4gYmUgZWl0aGVyIGBcIm5vbmVcImAsIGBcImRlZmF1bHRcImAsIGBcImZhZGUtaW9zXCJgIG9yIGBcImZhZGUtbWRcImAuWy9lbl1cbiAgICogICBbamFd44Od44OD44OX44Kq44O844OQ44O844KS6KGo56S644GZ44KL6Zqb44Gu44Ki44OL44Oh44O844K344On44Oz5ZCN44KS5oyH5a6a44GX44G+44GZ44CCWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBhdHRyaWJ1dGUgYW5pbWF0aW9uLW9wdGlvbnNcbiAgICogQHR5cGUge0V4cHJlc3Npb259XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgW2VuXVNwZWNpZnkgdGhlIGFuaW1hdGlvbidzIGR1cmF0aW9uLCB0aW1pbmcgYW5kIGRlbGF5IHdpdGggYW4gb2JqZWN0IGxpdGVyYWwuIEUuZy4gYHtkdXJhdGlvbjogMC4yLCBkZWxheTogMSwgdGltaW5nOiAnZWFzZS1pbid9YC5bL2VuXVxuICAgKiAgW2phXeOCouODi+ODoeODvOOCt+ODp+ODs+aZguOBrmR1cmF0aW9uLCB0aW1pbmcsIGRlbGF544KS44Kq44OW44K444Kn44Kv44OI44Oq44OG44Op44Or44Gn5oyH5a6a44GX44G+44GZ44CCZS5nLiB7ZHVyYXRpb246IDAuMiwgZGVsYXk6IDEsIHRpbWluZzogJ2Vhc2UtaW4nfVsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAYXR0cmlidXRlIG1hc2stY29sb3JcbiAgICogQHR5cGUge0NvbG9yfVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dQ29sb3Igb2YgdGhlIGJhY2tncm91bmQgbWFzay4gRGVmYXVsdCBpcyBgXCJyZ2JhKDAsIDAsIDAsIDAuMilcImAuWy9lbl1cbiAgICogICBbamFd6IOM5pmv44Gu44Oe44K544Kv44Gu6Imy44KS5oyH5a6a44GX44G+44GZ44CC44OH44OV44Kp44Or44OI44GvXCJyZ2JhKDAsIDAsIDAsIDAuMilcIuOBp+OBmeOAglsvamFdXG4gICAqL1xuXG4gIGdldCBfbWFzaygpIHtcbiAgICByZXR1cm4gdXRpbC5maW5kQ2hpbGQodGhpcywgJy5wb3BvdmVyLW1hc2snKTtcbiAgfVxuXG4gIGdldCBfcG9wb3ZlcigpIHtcbiAgICByZXR1cm4gdXRpbC5maW5kQ2hpbGQodGhpcywgJy5wb3BvdmVyJyk7XG4gIH1cblxuICBnZXQgX2NvbnRlbnQoKSB7XG4gICAgcmV0dXJuIHV0aWwuZmluZENoaWxkKHRoaXMuX3BvcG92ZXIsICcucG9wb3Zlcl9fY29udGVudCcpO1xuICB9XG5cbiAgZ2V0IF9hcnJvdygpIHtcbiAgICByZXR1cm4gdXRpbC5maW5kQ2hpbGQodGhpcy5fcG9wb3ZlciwgJy5wb3BvdmVyX19hcnJvdycpO1xuICB9XG5cbiAgaW5pdCgpIHtcbiAgICBjb250ZW50UmVhZHkodGhpcywgKCkgPT4ge1xuICAgICAgdGhpcy5fY29tcGlsZSgpO1xuICAgICAgdGhpcy5faW5pdEFuaW1hdG9yRmFjdG9yeSgpO1xuICAgICAgdGhpcy5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xuICAgIH0pO1xuXG4gICAgdGhpcy5fZG9vckxvY2sgPSBuZXcgRG9vckxvY2soKTtcbiAgICB0aGlzLl9ib3VuZE9uQ2hhbmdlID0gdGhpcy5fb25DaGFuZ2UuYmluZCh0aGlzKTtcbiAgICB0aGlzLl9ib3VuZENhbmNlbCA9ICgpID0+IHRoaXMuX2NhbmNlbCgpO1xuICB9XG5cbiAgX2luaXRBbmltYXRvckZhY3RvcnkoKSB7XG4gICAgY29uc3QgZmFjdG9yeSA9IG5ldyBBbmltYXRvckZhY3Rvcnkoe1xuICAgICAgYW5pbWF0b3JzOiBfYW5pbWF0b3JEaWN0LFxuICAgICAgYmFzZUNsYXNzOiBQb3BvdmVyQW5pbWF0b3IsXG4gICAgICBiYXNlQ2xhc3NOYW1lOiAnUG9wb3ZlckFuaW1hdG9yJyxcbiAgICAgIGRlZmF1bHRBbmltYXRpb246IHRoaXMuZ2V0QXR0cmlidXRlKCdhbmltYXRpb24nKSB8fCAnZGVmYXVsdCdcbiAgICB9KTtcbiAgICB0aGlzLl9hbmltYXRvciA9IChvcHRpb25zKSA9PiBmYWN0b3J5Lm5ld0FuaW1hdG9yKG9wdGlvbnMpO1xuICB9XG5cbiAgX3Bvc2l0aW9uUG9wb3Zlcih0YXJnZXQpIHtcbiAgICBjb25zdCB7X3JhZGl1czogcmFkaXVzLCBfY29udGVudDogY29udGVudEVsZW1lbnQsIF9tYXJnaW46IG1hcmdpbn0gPSB0aGlzO1xuICAgIGNvbnN0IHRhcmdldFJlY3QgPSB0YXJnZXQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gICAgY29uc3QgaXNNRCA9IHV0aWwuaGFzTW9kaWZpZXIodGhpcywgJ21hdGVyaWFsJyk7XG4gICAgY29uc3QgY292ZXIgPSBpc01EICYmIHRoaXMuaGFzQXR0cmlidXRlKCdjb3Zlci10YXJnZXQnKTtcblxuICAgIGNvbnN0IHRhcmdldERpc3RhbmNlID0ge1xuICAgICAgdG9wOiB0YXJnZXRSZWN0LnRvcCAtIG1hcmdpbixcbiAgICAgIGxlZnQ6IHRhcmdldFJlY3QubGVmdCAtIG1hcmdpbixcbiAgICAgIHJpZ2h0OiB3aW5kb3cuaW5uZXJXaWR0aCAtIHRhcmdldFJlY3QucmlnaHQgLSBtYXJnaW4sXG4gICAgICBib3R0b206IHdpbmRvdy5pbm5lckhlaWdodCAtIHRhcmdldFJlY3QuYm90dG9tIC0gbWFyZ2luXG4gICAgfTtcblxuICAgIGNvbnN0IHRhcmdldENlbnRlckRpc3RhbmNlRnJvbSA9IHtcbiAgICAgIHRvcDogdGFyZ2V0UmVjdC50b3AgKyBNYXRoLnJvdW5kKHRhcmdldFJlY3QuaGVpZ2h0IC8gMiksXG4gICAgICBib3R0b206IHdpbmRvdy5pbm5lckhlaWdodCAtIHRhcmdldFJlY3QuYm90dG9tICsgTWF0aC5yb3VuZCh0YXJnZXRSZWN0LmhlaWdodCAvIDIpLFxuICAgICAgbGVmdDogdGFyZ2V0UmVjdC5sZWZ0ICsgTWF0aC5yb3VuZCh0YXJnZXRSZWN0LndpZHRoIC8gMiksXG4gICAgICByaWdodDogd2luZG93LmlubmVyV2lkdGggLSB0YXJnZXRSZWN0LnJpZ2h0ICsgTWF0aC5yb3VuZCh0YXJnZXRSZWN0LndpZHRoIC8gMilcbiAgICB9O1xuXG4gICAgY29uc3Qge3ZlcnRpY2FsLCBwcmltYXJ5OiBwcmltYXJ5RGlyZWN0aW9uLCBzZWNvbmRhcnl9ID0gdGhpcy5fY2FsY3VsYXRlRGlyZWN0aW9ucyh0YXJnZXREaXN0YW5jZSk7XG4gICAgTW9kaWZpZXJVdGlsLmFkZE1vZGlmaWVyKHRoaXMsIHByaW1hcnlEaXJlY3Rpb24pO1xuXG4gICAgY29uc3Qgc2l6ZU5hbWUgPSB2ZXJ0aWNhbCA/ICd3aWR0aCcgOiAnaGVpZ2h0JztcbiAgICAvLyBHZXQgLnBvcG92ZXJfX2NvbnRlbnQgc2l6ZVxuICAgIGNvbnN0IGNvbnRlbnRTaXplID0gKHN0eWxlID0+ICh7XG4gICAgICB3aWR0aDogcGFyc2VJbnQoc3R5bGUuZ2V0UHJvcGVydHlWYWx1ZSgnd2lkdGgnKSwgMTApLFxuICAgICAgaGVpZ2h0OiBwYXJzZUludChzdHlsZS5nZXRQcm9wZXJ0eVZhbHVlKCdoZWlnaHQnKSwgMTApXG4gICAgfSkpKHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKGNvbnRlbnRFbGVtZW50KSk7XG5cbiAgICAvLyBTZXR0aW5nIC5wb3BvdmVyIHBvc2l0aW9uLlxuICAgIGNvbnN0IG9mZnNldCA9IGNvdmVyID8gMCA6ICh2ZXJ0aWNhbCA/IHRhcmdldFJlY3QuaGVpZ2h0IDogdGFyZ2V0UmVjdC53aWR0aCkgKyAoaXNNRCA/IDAgOiAxNCk7XG4gICAgdGhpcy5fcG9wb3Zlci5zdHlsZVtwcmltYXJ5RGlyZWN0aW9uXSA9IE1hdGgubWF4KG1hcmdpbiwgdGFyZ2V0RGlzdGFuY2VbcHJpbWFyeURpcmVjdGlvbl0gKyBvZmZzZXQgKyBtYXJnaW4pICsgJ3B4JztcbiAgICBjb25zdCBzZWNvbmRhcnlPZmZzZXQgPSBNYXRoLm1heChtYXJnaW4sIG1hcmdpbiArIHRhcmdldERpc3RhbmNlW3NlY29uZGFyeV0gLSAoY29udGVudFNpemVbc2l6ZU5hbWVdIC0gdGFyZ2V0UmVjdFtzaXplTmFtZV0pIC8gMik7XG4gICAgdGhpcy5fcG9wb3Zlci5zdHlsZVtzZWNvbmRhcnldID0gc2Vjb25kYXJ5T2Zmc2V0ICsgJ3B4JztcblxuICAgIC8vIFNldHRpbmcgLnBvcG92ZXJfX2Fycm93IHBvc2l0aW9uLlxuICAgIHRoaXMuX2Fycm93LnN0eWxlW3NlY29uZGFyeV0gPSBNYXRoLm1heChyYWRpdXMsICh0YXJnZXRDZW50ZXJEaXN0YW5jZUZyb21bc2Vjb25kYXJ5XSAtIHNlY29uZGFyeU9mZnNldCkpICsgJ3B4JztcbiAgfVxuXG4gIF9jYWxjdWxhdGVEaXJlY3Rpb25zKGRpc3RhbmNlKSB7XG4gICAgY29uc3Qgb3B0aW9ucyA9ICh0aGlzLmdldEF0dHJpYnV0ZSgnZGlyZWN0aW9uJykgfHwgJ3VwIGRvd24gbGVmdCByaWdodCcpLnNwbGl0KC9cXHMrLykubWFwKGUgPT4gcG9zaXRpb25zW2VdKTtcbiAgICBjb25zdCBwcmltYXJ5ID0gb3B0aW9ucy5zb3J0KChhLCBiKSA9PiBkaXN0YW5jZVthXSAtIGRpc3RhbmNlW2JdKVswXTtcbiAgICBjb25zdCB2ZXJ0aWNhbCA9ICd0b3AnID09IHByaW1hcnkgfHwgJ2JvdHRvbScgPT0gcHJpbWFyeTtcbiAgICBsZXQgc2Vjb25kYXJ5O1xuXG4gICAgaWYgKHZlcnRpY2FsKSB7XG4gICAgICBzZWNvbmRhcnkgPSBkaXN0YW5jZS5sZWZ0IDwgZGlzdGFuY2UucmlnaHQgPyAnbGVmdCcgOiAncmlnaHQnO1xuICAgIH0gZWxzZSB7XG4gICAgICBzZWNvbmRhcnkgPSBkaXN0YW5jZS50b3AgPCBkaXN0YW5jZS5ib3R0b20gPyAndG9wJyA6ICdib3R0b20nO1xuICAgIH1cblxuICAgIHJldHVybiB7dmVydGljYWwsIHByaW1hcnksIHNlY29uZGFyeX07XG4gIH1cblxuICBfY2xlYXJTdHlsZXMoKSB7XG4gICAgWyd0b3AnLCAnYm90dG9tJywgJ2xlZnQnLCAncmlnaHQnXS5mb3JFYWNoKGUgPT4ge1xuICAgICAgdGhpcy5fYXJyb3cuc3R5bGVbZV0gPSB0aGlzLl9jb250ZW50LnN0eWxlW2VdID0gdGhpcy5fcG9wb3Zlci5zdHlsZVtlXSA9ICcnO1xuICAgICAgTW9kaWZpZXJVdGlsLnJlbW92ZU1vZGlmaWVyKHRoaXMsIGUpO1xuICAgIH0pO1xuICB9XG5cbiAgX29uQ2hhbmdlKCkge1xuICAgIHNldEltbWVkaWF0ZSgoKSA9PiB7XG4gICAgICBpZiAodGhpcy5fY3VycmVudFRhcmdldCkge1xuICAgICAgICB0aGlzLl9wb3NpdGlvblBvcG92ZXIodGhpcy5fY3VycmVudFRhcmdldCk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICBfY29tcGlsZSgpIHtcbiAgICBhdXRvU3R5bGUucHJlcGFyZSh0aGlzKTtcblxuICAgIGlmICh0aGlzLl9wb3BvdmVyICYmIHRoaXMuX21hc2spIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBjb25zdCBoYXNEZWZhdWx0Q29udGFpbmVyID0gdGhpcy5fcG9wb3ZlciAmJiB0aGlzLl9jb250ZW50O1xuXG4gICAgaWYgKGhhc0RlZmF1bHRDb250YWluZXIpIHtcblxuICAgICAgaWYgKCF0aGlzLl9tYXNrKSB7XG4gICAgICAgIGNvbnN0IG1hc2sgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgbWFzay5jbGFzc0xpc3QuYWRkKCdwb3BvdmVyLW1hc2snKTtcbiAgICAgICAgdGhpcy5pbnNlcnRCZWZvcmUobWFzaywgdGhpcy5maXJzdENoaWxkKTtcbiAgICAgIH1cblxuICAgICAgaWYgKCF0aGlzLl9hcnJvdykge1xuICAgICAgICBjb25zdCBhcnJvdyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgICBhcnJvdy5jbGFzc0xpc3QuYWRkKCdwb3BvdmVyX19hcnJvdycpO1xuICAgICAgICB0aGlzLl9wb3BvdmVyLmFwcGVuZENoaWxkKGFycm93KTtcbiAgICAgIH1cblxuICAgIH0gZWxzZSB7XG5cbiAgICAgIGNvbnN0IHRlbXBsYXRlID0gdGVtcGxhdGVTb3VyY2UuY2xvbmVOb2RlKHRydWUpO1xuICAgICAgY29uc3QgY29udGVudCA9IHRlbXBsYXRlLnF1ZXJ5U2VsZWN0b3IoJy5wb3BvdmVyX19jb250ZW50Jyk7XG5cbiAgICAgIHdoaWxlICh0aGlzLmNoaWxkTm9kZXNbMF0pIHtcbiAgICAgICAgY29udGVudC5hcHBlbmRDaGlsZCh0aGlzLmNoaWxkTm9kZXNbMF0pO1xuICAgICAgfVxuXG4gICAgICB0aGlzLmFwcGVuZENoaWxkKHRlbXBsYXRlKTtcbiAgICB9XG5cbiAgICAvLyBGSVhNRSFcbiAgICBpZiAodGhpcy5oYXNBdHRyaWJ1dGUoJ3N0eWxlJykpIHtcbiAgICAgIHRoaXMuX3BvcG92ZXIuc2V0QXR0cmlidXRlKCdzdHlsZScsIHRoaXMuZ2V0QXR0cmlidXRlKCdzdHlsZScpKTtcbiAgICAgIHRoaXMucmVtb3ZlQXR0cmlidXRlKCdzdHlsZScpO1xuICAgIH1cblxuICAgIC8vIEZJWE1FIVxuICAgIGlmICh0aGlzLmhhc0F0dHJpYnV0ZSgnbWFzay1jb2xvcicpKSB7XG4gICAgICB0aGlzLl9tYXNrLnN0eWxlLmJhY2tncm91bmRDb2xvciA9IHRoaXMuZ2V0QXR0cmlidXRlKCdtYXNrLWNvbG9yJyk7XG4gICAgfVxuXG4gICAgTW9kaWZpZXJVdGlsLmluaXRNb2RpZmllcih0aGlzLCBzY2hlbWUpO1xuICB9XG5cbiAgX3ByZXBhcmVBbmltYXRpb25PcHRpb25zKG9wdGlvbnMpIHtcbiAgICBpZiAob3B0aW9ucy5hbmltYXRpb24gJiYgIShvcHRpb25zLmFuaW1hdGlvbiBpbiBfYW5pbWF0b3JEaWN0KSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGBBbmltYXRvciAke29wdGlvbnMuYW5pbWF0aW9ufSBpcyBub3QgcmVnaXN0ZXJlZC5gKTtcbiAgICB9XG5cbiAgICBvcHRpb25zLmFuaW1hdGlvbk9wdGlvbnMgPSB1dGlsLmV4dGVuZChcbiAgICAgIEFuaW1hdG9yRmFjdG9yeS5wYXJzZUFuaW1hdGlvbk9wdGlvbnNTdHJpbmcodGhpcy5nZXRBdHRyaWJ1dGUoJ2FuaW1hdGlvbi1vcHRpb25zJykpLFxuICAgICAgb3B0aW9ucy5hbmltYXRpb25PcHRpb25zIHx8IHt9XG4gICAgKTtcbiAgfVxuXG4gIF9leGVjdXRlQWN0aW9uKGFjdGlvbnMsIG9wdGlvbnMgPSB7fSkge1xuICAgIGNvbnN0IGNhbGxiYWNrID0gb3B0aW9ucy5jYWxsYmFjaztcbiAgICBjb25zdCB7YWN0aW9uLCBiZWZvcmUsIGFmdGVyfSA9IGFjdGlvbnM7XG5cbiAgICB0aGlzLl9wcmVwYXJlQW5pbWF0aW9uT3B0aW9ucyhvcHRpb25zKTtcblxuICAgIGxldCBjYW5jZWxlZCA9IGZhbHNlO1xuICAgIHV0aWwudHJpZ2dlckVsZW1lbnRFdmVudCh0aGlzLCBgcHJlJHthY3Rpb259YCwgeyAvLyBzeW5jaHJvbm91c1xuICAgICAgcG9wb3ZlcjogdGhpcyxcbiAgICAgIGNhbmNlbDogKCkgPT4gY2FuY2VsZWQgPSB0cnVlXG4gICAgfSk7XG5cbiAgICBpZiAoY2FuY2VsZWQpIHtcbiAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChgQ2FuY2VsZWQgaW4gcHJlJHthY3Rpb259IGV2ZW50LmApO1xuICAgIH1cblxuICAgIHJldHVybiBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHtcbiAgICAgIHRoaXMuX2Rvb3JMb2NrLndhaXRVbmxvY2soKCkgPT4ge1xuICAgICAgICBjb25zdCB1bmxvY2sgPSB0aGlzLl9kb29yTG9jay5sb2NrKCk7XG5cbiAgICAgICAgYmVmb3JlICYmIGJlZm9yZSgpO1xuXG4gICAgICAgIGNvbnRlbnRSZWFkeSh0aGlzLCAoKSA9PiB7XG4gICAgICAgICAgdGhpcy5fYW5pbWF0b3Iob3B0aW9ucylbYWN0aW9uXSh0aGlzLCAoKSA9PiB7XG4gICAgICAgICAgICBhZnRlciAmJiBhZnRlcigpO1xuXG4gICAgICAgICAgICB1bmxvY2soKTtcblxuICAgICAgICAgICAgdXRpbC50cmlnZ2VyRWxlbWVudEV2ZW50KHRoaXMsIGBwb3N0JHthY3Rpb259YCwge3BvcG92ZXI6IHRoaXN9KTtcblxuICAgICAgICAgICAgY2FsbGJhY2sgJiYgY2FsbGJhY2soKTtcbiAgICAgICAgICAgIHJlc29sdmUodGhpcyk7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cblxuICAvKipcbiAgICogQG1ldGhvZCBzaG93XG4gICAqIEBzaWduYXR1cmUgc2hvdyh0YXJnZXQsIFtvcHRpb25zXSlcbiAgICogQHBhcmFtIHtTdHJpbmd8RXZlbnR8SFRNTEVsZW1lbnR9IHRhcmdldFxuICAgKiAgIFtlbl1UYXJnZXQgZWxlbWVudC4gQ2FuIGJlIGVpdGhlciBhIENTUyBzZWxlY3RvciwgYW4gZXZlbnQgb2JqZWN0IG9yIGEgRE9NIGVsZW1lbnQuIEl0IGNhbiBiZSBhbHNvIHByb3ZpZGVkIGFzICdvcHRpb25zLnRhcmdldCcgaW5zdGVhZC4gWy9lbl1cbiAgICogICBbamFd44Od44OD44OX44Kq44O844OQ44O844Gu44K/44O844Ky44OD44OI44Go44Gq44KL6KaB57Sg44KS5oyH5a6a44GX44G+44GZ44CCQ1NT44K744Os44Kv44K/44GLZXZlbnTjgqrjg5bjgrjjgqfjgq/jg4jjgYtET03opoHntKDjga7jgYTjgZrjgozjgYvjgpLmuKHjgZvjgb7jgZnjgIJbL2phXVxuICAgKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnNdXG4gICAqICAgW2VuXVBhcmFtZXRlciBvYmplY3QuWy9lbl1cbiAgICogICBbamFd44Kq44OX44K344On44Oz44KS5oyH5a6a44GZ44KL44Kq44OW44K444Kn44Kv44OI44CCWy9qYV1cbiAgICogQHBhcmFtIHtTdHJpbmd9IFtvcHRpb25zLmFuaW1hdGlvbl1cbiAgICogICBbZW5dQW5pbWF0aW9uIG5hbWUuICBVc2Ugb25lIG9mIGBcImZhZGUtaW9zXCJgLCBgXCJmYWRlLW1kXCJgLCBgXCJub25lXCJgIGFuZCBgXCJkZWZhdWx0XCJgLlsvZW5dXG4gICAqICAgW2phXeOCouODi+ODoeODvOOCt+ODp+ODs+WQjeOCkuaMh+WumuOBl+OBvuOBmeOAglwiZmFkZS1pb3NcIiwgXCJmYWRlLW1kXCIsIFwibm9uZVwiLCBcImRlZmF1bHRcIuOBruOBhOOBmuOCjOOBi+OCkuaMh+WumuOBp+OBjeOBvuOBmeOAglsvamFdXG4gICAqIEBwYXJhbSB7U3RyaW5nfSBbb3B0aW9ucy5hbmltYXRpb25PcHRpb25zXVxuICAgKiAgIFtlbl1TcGVjaWZ5IHRoZSBhbmltYXRpb24ncyBkdXJhdGlvbiwgZGVsYXkgYW5kIHRpbWluZy4gRS5nLiBge2R1cmF0aW9uOiAwLjIsIGRlbGF5OiAwLjQsIHRpbWluZzogJ2Vhc2UtaW4nfWAuWy9lbl1cbiAgICogICBbamFd44Ki44OL44Oh44O844K344On44Oz5pmC44GuZHVyYXRpb24sIGRlbGF5LCB0aW1pbmfjgpLmjIflrprjgZfjgb7jgZnjgIJlLmcuIHtkdXJhdGlvbjogMC4yLCBkZWxheTogMC40LCB0aW1pbmc6ICdlYXNlLWluJ31bL2phXVxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBbb3B0aW9ucy5jYWxsYmFja11cbiAgICogICBbZW5dVGhpcyBmdW5jdGlvbiBpcyBjYWxsZWQgYWZ0ZXIgdGhlIHBvcG92ZXIgaGFzIGJlZW4gcmV2ZWFsZWQuWy9lbl1cbiAgICogICBbamFd44Od44OD44OX44Kq44O844OQ44O844GM6KGo56S644GV44KM57WC44KP44Gj44Gf5b6M44Gr5ZG844Gz5Ye644GV44KM44KL6Zai5pWw44Kq44OW44K444Kn44Kv44OI44KS5oyH5a6a44GX44G+44GZ44CCWy9qYV1cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXU9wZW4gdGhlIHBvcG92ZXIgYW5kIHBvaW50IGl0IGF0IGEgdGFyZ2V0LiBUaGUgdGFyZ2V0IGNhbiBiZSBlaXRoZXIgYW4gZXZlbnQsIGEgQ1NTIHNlbGVjdG9yIG9yIGEgRE9NIGVsZW1lbnQuLlsvZW5dXG4gICAqICAgW2phXeWvvuixoeOBqOOBmeOCi+imgee0oOOBq+ODneODg+ODl+OCquODvOODkOODvOOCkuihqOekuuOBl+OBvuOBmeOAgnRhcmdldOW8leaVsOOBq+OBr+OAgSRldmVudOOCquODluOCuOOCp+OCr+ODiOOChERPTeOCqOODrOODoeODs+ODiOOChENTU+OCu+ODrOOCr+OCv+OCkua4oeOBmeOBk+OBqOOBjOWHuuadpeOBvuOBmeOAglsvamFdXG4gICAqIEByZXR1cm4ge1Byb21pc2V9XG4gICAqICAgW2VuXVJlc29sdmVzIHRvIHRoZSBkaXNwbGF5ZWQgZWxlbWVudFsvZW5dXG4gICAqICAgW2phXVsvamFdXG4gICAqL1xuICBzaG93KHRhcmdldCwgb3B0aW9ucyA9IHt9KSB7XG4gICAgLy8gQWNjZXB0cyBvcHRpb25zLnRhcmdldFxuICAgIGlmICh0YXJnZXQgJiYgdHlwZW9mIHRhcmdldCA9PT0gJ29iamVjdCcgJiYgISh0YXJnZXQgaW5zdGFuY2VvZiBFdmVudCkgJiYgISh0YXJnZXQgaW5zdGFuY2VvZiBIVE1MRWxlbWVudCkpIHtcbiAgICAgIG9wdGlvbnMgPSB0YXJnZXQ7XG4gICAgICB0YXJnZXQgPSBvcHRpb25zLnRhcmdldDtcbiAgICB9XG5cbiAgICBpZiAodHlwZW9mIHRhcmdldCA9PT0gJ3N0cmluZycpIHtcbiAgICAgIHRhcmdldCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGFyZ2V0KTtcbiAgICB9IGVsc2UgaWYgKHRhcmdldCBpbnN0YW5jZW9mIEV2ZW50KSB7XG4gICAgICB0YXJnZXQgPSB0YXJnZXQudGFyZ2V0O1xuICAgIH1cblxuICAgIGlmICh0eXBlb2YgdGFyZ2V0ID09PSAndW5kZWZpbmVkJykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdBIHRhcmdldCBhcmd1bWVudCBtdXN0IGJlIGRlZmluZWQgZm9yIHRoZSBwb3BvdmVyLicpO1xuICAgIH1cblxuICAgIGlmICghKHRhcmdldCBpbnN0YW5jZW9mIEhUTUxFbGVtZW50KSkge1xuICAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgdGFyZ2V0Jyk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRoaXMuX2V4ZWN1dGVBY3Rpb24oe1xuICAgICAgYWN0aW9uOiAnc2hvdycsXG4gICAgICBiZWZvcmU6ICgpID0+IHtcbiAgICAgICAgdGhpcy5zdHlsZS5kaXNwbGF5ID0gJ2Jsb2NrJztcbiAgICAgICAgdGhpcy5fY3VycmVudFRhcmdldCA9IHRhcmdldDtcbiAgICAgICAgdGhpcy5fcG9zaXRpb25Qb3BvdmVyKHRhcmdldCk7XG4gICAgICB9XG4gICAgfSwgb3B0aW9ucyk7XG4gIH1cblxuICAvKipcbiAgICogQG1ldGhvZCBoaWRlXG4gICAqIEBzaWduYXR1cmUgaGlkZShbb3B0aW9uc10pXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0aW9uc11cbiAgICogICBbZW5dUGFyYW1ldGVyIG9iamVjdC5bL2VuXVxuICAgKiAgIFtqYV3jgqrjg5fjgrfjg6fjg7PjgpLmjIflrprjgZnjgovjgqrjg5bjgrjjgqfjgq/jg4jjgIJbL2phXVxuICAgKiBAcGFyYW0ge1N0cmluZ30gW29wdGlvbnMuYW5pbWF0aW9uXVxuICAgKiAgIFtlbl1BbmltYXRpb24gbmFtZS4gIFVzZSBvbmUgb2YgYFwiZmFkZS1pb3NcImAsIGBcImZhZGUtbWRcImAsIGBcIm5vbmVcImAgYW5kIGBcImRlZmF1bHRcImAuWy9lbl1cbiAgICogICBbamFd44Ki44OL44Oh44O844K344On44Oz5ZCN44KS5oyH5a6a44GX44G+44GZ44CCXCJmYWRlLWlvc1wiLCBcImZhZGUtbWRcIiwgXCJub25lXCIsIFwiZGVmYXVsdFwi44Gu44GE44Ga44KM44GL44KS5oyH5a6a44Gn44GN44G+44GZ44CCWy9qYV1cbiAgICogQHBhcmFtIHtTdHJpbmd9IFtvcHRpb25zLmFuaW1hdGlvbk9wdGlvbnNdXG4gICAqICAgW2VuXVNwZWNpZnkgdGhlIGFuaW1hdGlvbidzIGR1cmF0aW9uLCBkZWxheSBhbmQgdGltaW5nLiBFLmcuIGB7ZHVyYXRpb246IDAuMiwgZGVsYXk6IDAuNCwgdGltaW5nOiAnZWFzZS1pbid9YC5bL2VuXVxuICAgKiAgIFtqYV3jgqLjg4vjg6Hjg7zjgrfjg6fjg7PmmYLjga5kdXJhdGlvbiwgZGVsYXksIHRpbWluZ+OCkuaMh+WumuOBl+OBvuOBmeOAgmUuZy4ge2R1cmF0aW9uOiAwLjIsIGRlbGF5OiAwLjQsIHRpbWluZzogJ2Vhc2UtaW4nfVsvamFdXG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IFtvcHRpb25zLmNhbGxiYWNrXVxuICAgKiAgIFtlbl1UaGlzIGZ1bmN0aW9ucyBpcyBjYWxsZWQgYWZ0ZXIgdGhlIHBvcG92ZXIgaGFzIGJlZW4gaGlkZGVuLlsvZW5dXG4gICAqICAgW2phXeODneODg+ODl+OCquODvOODkOODvOOBjOmaoOOCjOOBn+W+jOOBq+WRvOOBs+WHuuOBleOCjOOCi+mWouaVsOOCquODluOCuOOCp+OCr+ODiOOCkuaMh+WumuOBl+OBvuOBmeOAglsvamFdXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1DbG9zZSB0aGUgcG9wb3Zlci5bL2VuXVxuICAgKiAgIFtqYV3jg53jg4Pjg5fjgqrjg7zjg5Djg7zjgpLplonjgZjjgb7jgZnjgIJbL2phXVxuICAgKiBAcmV0dXJuIHtQcm9taXNlfVxuICAgKiAgIFtlbl1SZXNvbHZlcyB0byB0aGUgaGlkZGVuIGVsZW1lbnRbL2VuXVxuICAgKiAgIFtqYV1bL2phXVxuICAgKi9cbiAgaGlkZShvcHRpb25zID0ge30pIHtcbiAgICByZXR1cm4gdGhpcy5fZXhlY3V0ZUFjdGlvbih7XG4gICAgICBhY3Rpb246ICdoaWRlJyxcbiAgICAgIGFmdGVyOiAoKSA9PiB7XG4gICAgICAgIHRoaXMuc3R5bGUuZGlzcGxheSA9ICdub25lJztcbiAgICAgICAgdGhpcy5fY2xlYXJTdHlsZXMoKTtcbiAgICAgIH1cbiAgICB9LCBvcHRpb25zKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcHJvcGVydHkgdmlzaWJsZVxuICAgKiBAcmVhZG9ubHlcbiAgICogQHR5cGUge0Jvb2xlYW59XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1XaGV0aGVyIHRoZSBlbGVtZW50IGlzIHZpc2libGUgb3Igbm90LlsvZW5dXG4gICAqICAgW2phXeimgee0oOOBjOimi+OBiOOCi+WgtOWQiOOBq2B0cnVlYOOAglsvamFdXG4gICAqL1xuICBnZXQgdmlzaWJsZSgpIHtcbiAgICByZXR1cm4gd2luZG93LmdldENvbXB1dGVkU3R5bGUodGhpcykuZ2V0UHJvcGVydHlWYWx1ZSgnZGlzcGxheScpICE9PSAnbm9uZSc7XG4gIH1cblxuICAvKipcbiAgICogQHByb3BlcnR5IGNhbmNlbGFibGVcbiAgICogQHR5cGUge0Jvb2xlYW59XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1cbiAgICogICAgIEEgYm9vbGVhbiB2YWx1ZSB0aGF0IHNwZWNpZmllcyB3aGV0aGVyIHRoZSBwb3BvdmVyIGlzIGNhbmNlbGFibGUgb3Igbm90LlxuICAgKlxuICAgKiAgICAgV2hlbiB0aGUgcG9wb3ZlciBpcyBjYW5jZWxhYmxlIGl0IGNhbiBiZSBjbG9zZWQgYnkgdGFwcGluZyB0aGUgYmFja2dyb3VuZCBvciBieSBwcmVzc2luZyB0aGUgYmFjayBidXR0b24gb24gQW5kcm9pZCBkZXZpY2VzLlxuICAgKiAgIFsvZW5dXG4gICAqICAgW2phXVsvamFdXG4gICAqL1xuICBzZXQgY2FuY2VsYWJsZSh2YWx1ZSkge1xuICAgIHJldHVybiB1dGlsLnRvZ2dsZUF0dHJpYnV0ZSh0aGlzLCAnY2FuY2VsYWJsZScsIHZhbHVlKTtcbiAgfVxuXG4gIGdldCBjYW5jZWxhYmxlKCkge1xuICAgIHJldHVybiB0aGlzLmhhc0F0dHJpYnV0ZSgnY2FuY2VsYWJsZScpO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwcm9wZXJ0eSBvbkRldmljZUJhY2tCdXR0b25cbiAgICogQHR5cGUge09iamVjdH1cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXUJhY2stYnV0dG9uIGhhbmRsZXIuWy9lbl1cbiAgICogICBbamFd44OQ44OD44Kv44Oc44K/44Oz44OP44Oz44OJ44Op44CCWy9qYV1cbiAgICovXG4gIGdldCBvbkRldmljZUJhY2tCdXR0b24oKSB7XG4gICAgcmV0dXJuIHRoaXMuX2JhY2tCdXR0b25IYW5kbGVyO1xuICB9XG5cbiAgc2V0IG9uRGV2aWNlQmFja0J1dHRvbihjYWxsYmFjaykge1xuICAgIGlmICh0aGlzLl9iYWNrQnV0dG9uSGFuZGxlcikge1xuICAgICAgdGhpcy5fYmFja0J1dHRvbkhhbmRsZXIuZGVzdHJveSgpO1xuICAgIH1cblxuICAgIHRoaXMuX2JhY2tCdXR0b25IYW5kbGVyID0gZGV2aWNlQmFja0J1dHRvbkRpc3BhdGNoZXIuY3JlYXRlSGFuZGxlcih0aGlzLl9wb3BvdmVyLCBjYWxsYmFjayk7XG4gIH1cblxuICBjb25uZWN0ZWRDYWxsYmFjaygpIHtcbiAgICBjb250ZW50UmVhZHkodGhpcywgKCkgPT4ge1xuICAgICAgdGhpcy5fbWFyZ2luID0gdGhpcy5fbWFyZ2luIHx8IHBhcnNlSW50KHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKHRoaXMpLmdldFByb3BlcnR5VmFsdWUoJ3RvcCcpKTtcblxuICAgICAgLy8gRml4IGZvciBpZnJhbWVzXG4gICAgICBpZiAoIXRoaXMuX21hcmdpbikge1xuICAgICAgICB0aGlzLl9tYXJnaW4gPSA2O1xuICAgICAgfVxuXG4gICAgICB0aGlzLl9yYWRpdXMgPSBwYXJzZUludCh3aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZSh0aGlzLl9jb250ZW50KS5nZXRQcm9wZXJ0eVZhbHVlKCdib3JkZXItdG9wLWxlZnQtcmFkaXVzJykpO1xuXG4gICAgICB0aGlzLl9tYXNrLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdGhpcy5fYm91bmRDYW5jZWwsIGZhbHNlKTtcblxuICAgICAgdGhpcy5vbkRldmljZUJhY2tCdXR0b24gPSBlID0+IHRoaXMuY2FuY2VsYWJsZSA/IHRoaXMuX2NhbmNlbCgpIDogZS5jYWxsUGFyZW50SGFuZGxlcigpO1xuXG4gICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigncmVzaXplJywgdGhpcy5fYm91bmRPbkNoYW5nZSwgZmFsc2UpO1xuICAgIH0pO1xuICB9XG5cbiAgZGlzY29ubmVjdGVkQ2FsbGJhY2soKSB7XG4gICAgY29udGVudFJlYWR5KHRoaXMsICgpID0+IHtcbiAgICAgIHRoaXMuX21hc2sucmVtb3ZlRXZlbnRMaXN0ZW5lcignY2xpY2snLCB0aGlzLl9ib3VuZENhbmNlbCwgZmFsc2UpO1xuXG4gICAgICB0aGlzLl9iYWNrQnV0dG9uSGFuZGxlci5kZXN0cm95KCk7XG4gICAgICB0aGlzLl9iYWNrQnV0dG9uSGFuZGxlciA9IG51bGw7XG5cbiAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdyZXNpemUnLCB0aGlzLl9ib3VuZE9uQ2hhbmdlLCBmYWxzZSk7XG4gICAgfSk7XG4gIH1cblxuICBzdGF0aWMgZ2V0IG9ic2VydmVkQXR0cmlidXRlcygpIHtcbiAgICByZXR1cm4gWydtb2RpZmllcicsICdkaXJlY3Rpb24nLCAnYW5pbWF0aW9uJ107XG4gIH1cblxuICBhdHRyaWJ1dGVDaGFuZ2VkQ2FsbGJhY2sobmFtZSwgbGFzdCwgY3VycmVudCkge1xuICAgIHN3aXRjaCAobmFtZSkge1xuICAgICAgY2FzZSAnbW9kaWZpZXInOlxuICAgICAgICBNb2RpZmllclV0aWwub25Nb2RpZmllckNoYW5nZWQobGFzdCwgY3VycmVudCwgdGhpcywgc2NoZW1lKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlICdkaXJlY3Rpb24nOlxuICAgICAgICB0aGlzLl9ib3VuZE9uQ2hhbmdlKCk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnYW5pbWF0aW9uJzpcbiAgICAgICAgdGhpcy5faW5pdEFuaW1hdG9yRmFjdG9yeSgpO1xuICAgICAgICBicmVhaztcbiAgICB9XG4gIH1cblxuXG4gIF9jYW5jZWwoKSB7XG4gICAgaWYgKHRoaXMuY2FuY2VsYWJsZSkge1xuICAgICAgdGhpcy5oaWRlKHtcbiAgICAgICAgY2FsbGJhY2s6ICgpID0+IHtcbiAgICAgICAgICB1dGlsLnRyaWdnZXJFbGVtZW50RXZlbnQodGhpcywgJ2RpYWxvZy1jYW5jZWwnKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuICB9XG5cbiAgc3RhdGljIGdldCBldmVudHMoKSB7XG4gICAgcmV0dXJuIFsncHJlc2hvdycsICdwb3N0c2hvdycsICdwcmVoaWRlJywgJ3Bvc3RoaWRlJywgJ2RpYWxvZy1jYW5jZWwnXTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge1N0cmluZ30gbmFtZVxuICAgKiBAcGFyYW0ge1BvcG92ZXJBbmltYXRvcn0gQW5pbWF0b3JcbiAgICovXG4gIHN0YXRpYyByZWdpc3RlckFuaW1hdG9yKG5hbWUsIEFuaW1hdG9yKSB7XG4gICAgaWYgKCEoQW5pbWF0b3IucHJvdG90eXBlIGluc3RhbmNlb2YgUG9wb3ZlckFuaW1hdG9yKSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdcIkFuaW1hdG9yXCIgcGFyYW0gbXVzdCBpbmhlcml0IFBvcG92ZXJBbmltYXRvcicpO1xuICAgIH1cbiAgICBfYW5pbWF0b3JEaWN0W25hbWVdID0gQW5pbWF0b3I7XG4gIH1cblxuICBzdGF0aWMgZ2V0IGFuaW1hdG9ycygpIHtcbiAgICByZXR1cm4gX2FuaW1hdG9yRGljdDtcbiAgfVxuXG4gIHN0YXRpYyBnZXQgUG9wb3ZlckFuaW1hdG9yKCkge1xuICAgIHJldHVybiBQb3BvdmVyQW5pbWF0b3I7XG4gIH1cbn1cblxuY3VzdG9tRWxlbWVudHMuZGVmaW5lKCdvbnMtcG9wb3ZlcicsIFBvcG92ZXJFbGVtZW50KTtcbiIsIi8qXG5Db3B5cmlnaHQgMjAxMy0yMDE1IEFTSUFMIENPUlBPUkFUSU9OXG5cbkxpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG55b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG5Zb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcblxuICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG5cblVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbmRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbldJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxubGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5cbiovXG5cbmltcG9ydCB1dGlsIGZyb20gJy4uL29ucy91dGlsJztcbmltcG9ydCBNb2RpZmllclV0aWwgZnJvbSAnLi4vb25zL2ludGVybmFsL21vZGlmaWVyLXV0aWwnO1xuaW1wb3J0IEJhc2VFbGVtZW50IGZyb20gJy4uL29ucy9iYXNlLWVsZW1lbnQnO1xuaW1wb3J0IGNvbnRlbnRSZWFkeSBmcm9tICcuLi9vbnMvY29udGVudC1yZWFkeSc7XG5cbmNvbnN0IHNjaGVtZSA9IHtcbiAgJy5wcm9ncmVzcy1iYXInOiAncHJvZ3Jlc3MtYmFyLS0qJyxcbiAgJy5wcm9ncmVzcy1iYXJfX3ByaW1hcnknOiAncHJvZ3Jlc3MtYmFyLS0qX19wcmltYXJ5JyxcbiAgJy5wcm9ncmVzcy1iYXJfX3NlY29uZGFyeSc6ICdwcm9ncmVzcy1iYXItLSpfX3NlY29uZGFyeSdcbn07XG5cbmNvbnN0IHRlbXBsYXRlID0gdXRpbC5jcmVhdGVFbGVtZW50KGBcbiAgPGRpdiBjbGFzcz1cInByb2dyZXNzLWJhclwiPlxuICAgIDxkaXYgY2xhc3M9XCJwcm9ncmVzcy1iYXJfX3NlY29uZGFyeVwiPjwvZGl2PlxuICAgIDxkaXYgY2xhc3M9XCJwcm9ncmVzcy1iYXJfX3ByaW1hcnlcIj48L2Rpdj5cbiAgPC9kaXY+XG5gKTtcblxuLyoqXG4gKiBAZWxlbWVudCBvbnMtcHJvZ3Jlc3MtYmFyXG4gKiBAY2F0ZWdvcnkgdmlzdWFsXG4gKiBAZGVzY3JpcHRpb25cbiAqICAgW2VuXVxuICogICAgIFRoZSBjb21wb25lbnQgaXMgdXNlZCB0byBkaXNwbGF5IGEgbGluZWFyIHByb2dyZXNzIGJhci4gSXQgY2FuIGVpdGhlciBkaXNwbGF5IGEgcHJvZ3Jlc3MgYmFyIHRoYXQgc2hvd3MgdGhlIHVzZXIgaG93IG11Y2ggb2YgYSB0YXNrIGhhcyBiZWVuIGNvbXBsZXRlZC4gSW4gdGhlIGNhc2Ugd2hlcmUgdGhlIHBlcmNlbnRhZ2UgaXMgbm90IGtub3duIGl0IGNhbiBiZSB1c2VkIHRvIGRpc3BsYXkgYW4gYW5pbWF0ZWQgcHJvZ3Jlc3MgYmFyIHNvIHRoZSB1c2VyIGNhbiBzZWUgdGhhdCBhbiBvcGVyYXRpb24gaXMgaW4gcHJvZ3Jlc3MuXG4gKiAgIFsvZW5dXG4gKiAgIFtqYV1bL2phXVxuICogQGNvZGVwZW4genZRYkdqXG4gKiBAdHV0b3JpYWwgdmFuaWxsYS9SZWZlcmVuY2UvcHJvZ3Jlc3NcbiAqIEBzZWVhbHNvIG9ucy1wcm9ncmVzcy1jaXJjdWxhclxuICogICBbZW5dVGhlIGA8b25zLXByb2dyZXNzLWNpcmN1bGFyPmAgY29tcG9uZW50IGRpc3BsYXlzIGEgY2lyY3VsYXIgcHJvZ3Jlc3MgaW5kaWNhdG9yLlsvZW5dXG4gKiAgIFtqYV1bL2phXVxuICogQGV4YW1wbGVcbiAqIDxvbnMtcHJvZ3Jlc3MtYmFyXG4gKiAgdmFsdWU9XCI1NVwiXG4gKiAgc2Vjb25kYXJ5LXZhbHVlPVwiODdcIj5cbiAqIDwvb25zLXByb2dyZXNzLWJhcj5cbiAqXG4gKiA8b25zLXByb2dyZXNzLWJhclxuICogIGluZGV0ZXJtaW5hdGU+XG4gKiA8L29ucy1wcm9ncmVzcy1iYXI+XG4gKi9cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFByb2dyZXNzQmFyRWxlbWVudCBleHRlbmRzIEJhc2VFbGVtZW50IHtcblxuICAvKipcbiAgICogQGF0dHJpYnV0ZSBtb2RpZmllclxuICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dQ2hhbmdlIHRoZSBhcHBlYXJhbmNlIG9mIHRoZSBwcm9ncmVzcyBpbmRpY2F0b3IuWy9lbl1cbiAgICogICBbamFd44OX44Ot44Kw44Os44K544Kk44Oz44K444Kx44O844K/44Gu6KaL44Gf55uu44KS5aSJ5pu044GX44G+44GZ44CCWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBhdHRyaWJ1dGUgdmFsdWVcbiAgICogQHR5cGUge051bWJlcn1cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXUN1cnJlbnQgcHJvZ3Jlc3MuIFNob3VsZCBiZSBhIHZhbHVlIGJldHdlZW4gMCBhbmQgMTAwLlsvZW5dXG4gICAqICAgW2phXeePvuWcqOOBrumAsuihjOeKtuazgeOBruWApOOCkuaMh+WumuOBl+OBvuOBmeOAgjDjgYvjgokxMDDjga7plpPjga7lgKTjgpLmjIflrprjgZfjgabkuIvjgZXjgYTjgIJbL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQGF0dHJpYnV0ZSBzZWNvbmRhcnktdmFsdWVcbiAgICogQHR5cGUge051bWJlcn1cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXUN1cnJlbnQgc2Vjb25kYXJ5IHByb2dyZXNzLiBTaG91bGQgYmUgYSB2YWx1ZSBiZXR3ZWVuIDAgYW5kIDEwMC5bL2VuXVxuICAgKiAgIFtqYV3nj77lnKjjga7vvJLnlarnm67jga7pgLLooYznirbms4Hjga7lgKTjgpLmjIflrprjgZfjgb7jgZnjgIIw44GL44KJMTAw44Gu6ZaT44Gu5YCk44KS5oyH5a6a44GX44Gm5LiL44GV44GE44CCWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBhdHRyaWJ1dGUgaW5kZXRlcm1pbmF0ZVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dSWYgdGhpcyBhdHRyaWJ1dGUgaXMgc2V0LCBhbiBpbmZpbml0ZSBsb29waW5nIGFuaW1hdGlvbiB3aWxsIGJlIHNob3duLlsvZW5dXG4gICAqICAgW2phXeOBk+OBruWxnuaAp+OBjOioreWumuOBleOCjOOBn+WgtOWQiOOAgeODq+ODvOODl+OBmeOCi+OCouODi+ODoeODvOOCt+ODp+ODs+OBjOihqOekuuOBleOCjOOBvuOBmeOAglsvamFdXG4gICAqL1xuXG4gIGluaXQoKSB7XG4gICAgY29udGVudFJlYWR5KHRoaXMsICgpID0+IHRoaXMuX2NvbXBpbGUoKSk7XG4gIH1cblxuICBfY29tcGlsZSgpIHtcbiAgICBpZiAoIXRoaXMuX2lzQ29tcGlsZWQoKSkge1xuICAgICAgdGhpcy5fdGVtcGxhdGUgPSB0ZW1wbGF0ZS5jbG9uZU5vZGUodHJ1ZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuX3RlbXBsYXRlID0gdXRpbC5maW5kQ2hpbGQodGhpcywgJy5wcm9ncmVzcy1iYXInKTtcbiAgICB9XG5cbiAgICB0aGlzLl9wcmltYXJ5ID0gdXRpbC5maW5kQ2hpbGQodGhpcy5fdGVtcGxhdGUsICcucHJvZ3Jlc3MtYmFyX19wcmltYXJ5Jyk7XG4gICAgdGhpcy5fc2Vjb25kYXJ5ID0gdXRpbC5maW5kQ2hpbGQodGhpcy5fdGVtcGxhdGUsICcucHJvZ3Jlc3MtYmFyX19zZWNvbmRhcnknKTtcblxuICAgIHRoaXMuX3VwZGF0ZURldGVybWluYXRlKCk7XG4gICAgdGhpcy5fdXBkYXRlVmFsdWUoKTtcblxuICAgIHRoaXMuYXBwZW5kQ2hpbGQodGhpcy5fdGVtcGxhdGUpO1xuXG4gICAgTW9kaWZpZXJVdGlsLmluaXRNb2RpZmllcih0aGlzLCBzY2hlbWUpO1xuICB9XG5cbiAgX2lzQ29tcGlsZWQoKSB7XG4gICAgaWYgKCF1dGlsLmZpbmRDaGlsZCh0aGlzLCAnLnByb2dyZXNzLWJhcicpKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuXG4gICAgY29uc3QgYmFyRWxlbWVudCA9IHV0aWwuZmluZENoaWxkKHRoaXMsICcucHJvZ3Jlc3MtYmFyJyk7XG5cbiAgICBpZiAoIXV0aWwuZmluZENoaWxkKGJhckVsZW1lbnQsICcucHJvZ3Jlc3MtYmFyX19zZWNvbmRhcnknKSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cblxuICAgIGlmICghdXRpbC5maW5kQ2hpbGQoYmFyRWxlbWVudCwgJy5wcm9ncmVzcy1iYXJfX3ByaW1hcnknKSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cblxuICAgIHJldHVybiB0cnVlO1xuICB9XG5cbiAgc3RhdGljIGdldCBvYnNlcnZlZEF0dHJpYnV0ZXMoKSB7XG4gICAgcmV0dXJuIFsnbW9kaWZpZXInLCAndmFsdWUnLCAnc2Vjb25kYXJ5LXZhbHVlJywgJ2luZGV0ZXJtaW5hdGUnXTtcbiAgfVxuXG4gIGF0dHJpYnV0ZUNoYW5nZWRDYWxsYmFjayhuYW1lLCBsYXN0LCBjdXJyZW50KSB7XG4gICAgaWYgKG5hbWUgPT09ICdtb2RpZmllcicpIHtcbiAgICAgIHJldHVybiBNb2RpZmllclV0aWwub25Nb2RpZmllckNoYW5nZWQobGFzdCwgY3VycmVudCwgdGhpcywgc2NoZW1lKTtcbiAgICB9IGVsc2UgaWYgKG5hbWUgPT09ICd2YWx1ZScgfHwgbmFtZSA9PT0gJ3NlY29uZGFyeS12YWx1ZScpIHtcbiAgICAgIHRoaXMuX3VwZGF0ZVZhbHVlKCk7XG4gICAgfSBlbHNlIGlmIChuYW1lID09PSAnaW5kZXRlcm1pbmF0ZScpIHtcbiAgICAgIHRoaXMuX3VwZGF0ZURldGVybWluYXRlKCk7XG4gICAgfVxuICB9XG5cbiAgX3VwZGF0ZURldGVybWluYXRlKCkge1xuICAgIGlmICh0aGlzLmhhc0F0dHJpYnV0ZSgnaW5kZXRlcm1pbmF0ZScpKSB7XG4gICAgICBjb250ZW50UmVhZHkodGhpcywgKCkgPT4ge1xuICAgICAgICB0aGlzLl90ZW1wbGF0ZS5jbGFzc0xpc3QuYWRkKGBwcm9ncmVzcy1iYXItLWluZGV0ZXJtaW5hdGVgKTtcbiAgICAgICAgdGhpcy5fdGVtcGxhdGUuY2xhc3NMaXN0LnJlbW92ZShgcHJvZ3Jlc3MtYmFyLS1kZXRlcm1pbmF0ZWApO1xuICAgICAgfSk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgY29udGVudFJlYWR5KHRoaXMsICgpID0+IHtcbiAgICAgICAgdGhpcy5fdGVtcGxhdGUuY2xhc3NMaXN0LmFkZChgcHJvZ3Jlc3MtYmFyLS1kZXRlcm1pbmF0ZWApO1xuICAgICAgICB0aGlzLl90ZW1wbGF0ZS5jbGFzc0xpc3QucmVtb3ZlKGBwcm9ncmVzcy1iYXItLWluZGV0ZXJtaW5hdGVgKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuXG4gIF91cGRhdGVWYWx1ZSgpIHtcbiAgICBjb250ZW50UmVhZHkodGhpcywgKCkgPT4ge1xuICAgICAgdGhpcy5fcHJpbWFyeS5zdHlsZS53aWR0aCA9ICh0aGlzLmhhc0F0dHJpYnV0ZSgndmFsdWUnKSkgPyB0aGlzLmdldEF0dHJpYnV0ZSgndmFsdWUnKSArICclJyA6ICcwJSc7XG4gICAgICB0aGlzLl9zZWNvbmRhcnkuc3R5bGUud2lkdGggPSB0aGlzLmhhc0F0dHJpYnV0ZSgnc2Vjb25kYXJ5LXZhbHVlJykgPyB0aGlzLmdldEF0dHJpYnV0ZSgnc2Vjb25kYXJ5LXZhbHVlJykgKyAnJScgOiAnMCUnO1xuICAgIH0pO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwcm9wZXJ0eSB2YWx1ZVxuICAgKiBAdHlwZSB7TnVtYmVyfVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dQ3VycmVudCBwcm9ncmVzcy4gU2hvdWxkIGJlIGEgdmFsdWUgYmV0d2VlbiAwIGFuZCAxMDAuWy9lbl1cbiAgICogICBbamFd54++5Zyo44Gu6YCy6KGM54q25rOB44Gu5YCk44KS5oyH5a6a44GX44G+44GZ44CCMOOBi+OCiTEwMOOBrumWk+OBruWApOOCkuaMh+WumuOBl+OBpuS4i+OBleOBhOOAglsvamFdXG4gICAqL1xuICBzZXQgdmFsdWUodmFsdWUpIHtcbiAgICBpZiAodHlwZW9mIHZhbHVlICE9PSAnbnVtYmVyJyB8fCB2YWx1ZSA8IDAgfHwgdmFsdWUgPiAxMDApIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignSW52YWxpZCB2YWx1ZScpO1xuICAgIH1cblxuICAgIHRoaXMuc2V0QXR0cmlidXRlKCd2YWx1ZScsIE1hdGguZmxvb3IodmFsdWUpKTtcbiAgfVxuXG4gIGdldCB2YWx1ZSgpIHtcbiAgICByZXR1cm4gcGFyc2VJbnQodGhpcy5nZXRBdHRyaWJ1dGUoJ3ZhbHVlJykgfHwgJzAnKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcHJvcGVydHkgc2Vjb25kYXJ5VmFsdWVcbiAgICogQHR5cGUge051bWJlcn1cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXUN1cnJlbnQgc2Vjb25kYXJ5IHByb2dyZXNzLiBTaG91bGQgYmUgYSB2YWx1ZSBiZXR3ZWVuIDAgYW5kIDEwMC5bL2VuXVxuICAgKiAgIFtqYV3nj77lnKjjga7vvJLnlarnm67jga7pgLLooYznirbms4Hjga7lgKTjgpLmjIflrprjgZfjgb7jgZnjgIIw44GL44KJMTAw44Gu6ZaT44Gu5YCk44KS5oyH5a6a44GX44Gm5LiL44GV44GE44CCWy9qYV1cbiAgICovXG4gIHNldCBzZWNvbmRhcnlWYWx1ZSh2YWx1ZSkge1xuICAgIGlmICh0eXBlb2YgdmFsdWUgIT09ICdudW1iZXInIHx8IHZhbHVlIDwgMCB8fCB2YWx1ZSA+IDEwMCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIHZhbHVlJyk7XG4gICAgfVxuXG4gICAgdGhpcy5zZXRBdHRyaWJ1dGUoJ3NlY29uZGFyeS12YWx1ZScsIE1hdGguZmxvb3IodmFsdWUpKTtcbiAgfVxuXG4gIGdldCBzZWNvbmRhcnlWYWx1ZSgpIHtcbiAgICByZXR1cm4gcGFyc2VJbnQodGhpcy5nZXRBdHRyaWJ1dGUoJ3NlY29uZGFyeS12YWx1ZScpIHx8ICcwJyk7XG4gIH1cblxuICAvKipcbiAgICogQHByb3BlcnR5IGluZGV0ZXJtaW5hdGVcbiAgICogQHR5cGUge0Jvb2xlYW59XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1JZiB0aGlzIHByb3BlcnR5IGlzIGB0cnVlYCwgYW4gaW5maW5pdGUgbG9vcGluZyBhbmltYXRpb24gd2lsbCBiZSBzaG93bi5bL2VuXVxuICAgKiAgIFtqYV3jgZPjga7lsZ7mgKfjgYzoqK3lrprjgZXjgozjgZ/loLTlkIjjgIHjg6vjg7zjg5fjgZnjgovjgqLjg4vjg6Hjg7zjgrfjg6fjg7PjgYzooajnpLrjgZXjgozjgb7jgZnjgIJbL2phXVxuICAgKi9cbiAgc2V0IGluZGV0ZXJtaW5hdGUodmFsdWUpIHtcbiAgICBpZiAodmFsdWUpIHtcbiAgICAgIHRoaXMuc2V0QXR0cmlidXRlKCdpbmRldGVybWluYXRlJywgJycpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgIHRoaXMucmVtb3ZlQXR0cmlidXRlKCdpbmRldGVybWluYXRlJyk7XG4gICAgfVxuICB9XG5cbiAgZ2V0IGluZGV0ZXJtaW5hdGUoKSB7XG4gICAgcmV0dXJuIHRoaXMuaGFzQXR0cmlidXRlKCdpbmRldGVybWluYXRlJyk7XG4gIH1cbn1cblxuY3VzdG9tRWxlbWVudHMuZGVmaW5lKCdvbnMtcHJvZ3Jlc3MtYmFyJywgUHJvZ3Jlc3NCYXJFbGVtZW50KTtcbiIsIi8qXG5Db3B5cmlnaHQgMjAxMy0yMDE1IEFTSUFMIENPUlBPUkFUSU9OXG5cbkxpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG55b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG5Zb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcblxuICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG5cblVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbmRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbldJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxubGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5cbiovXG5cbmltcG9ydCB1dGlsIGZyb20gJy4uL29ucy91dGlsJztcbmltcG9ydCBNb2RpZmllclV0aWwgZnJvbSAnLi4vb25zL2ludGVybmFsL21vZGlmaWVyLXV0aWwnO1xuaW1wb3J0IEJhc2VFbGVtZW50IGZyb20gJy4uL29ucy9iYXNlLWVsZW1lbnQnO1xuaW1wb3J0IGNvbnRlbnRSZWFkeSBmcm9tICcuLi9vbnMvY29udGVudC1yZWFkeSc7XG5cbmNvbnN0IHNjaGVtZSA9IHtcbiAgJy5wcm9ncmVzcy1jaXJjdWxhcic6ICdwcm9ncmVzcy1jaXJjdWxhci0tKicsXG4gICcucHJvZ3Jlc3MtY2lyY3VsYXJfX3ByaW1hcnknOiAncHJvZ3Jlc3MtY2lyY3VsYXItLSpfX3ByaW1hcnknLFxuICAnLnByb2dyZXNzLWNpcmN1bGFyX19zZWNvbmRhcnknOiAncHJvZ3Jlc3MtY2lyY3VsYXItLSpfX3NlY29uZGFyeSdcbn07XG5cbmNvbnN0IHRlbXBsYXRlID0gdXRpbC5jcmVhdGVFbGVtZW50KGBcbiAgPHN2ZyBjbGFzcz1cInByb2dyZXNzLWNpcmN1bGFyXCI+XG4gICAgPGNpcmNsZSBjbGFzcz1cInByb2dyZXNzLWNpcmN1bGFyX19zZWNvbmRhcnlcIiAvPlxuICAgIDxjaXJjbGUgY2xhc3M9XCJwcm9ncmVzcy1jaXJjdWxhcl9fcHJpbWFyeVwiIC8+XG4gIDwvc3ZnPlxuYCk7XG5cbi8qKlxuICogQGVsZW1lbnQgb25zLXByb2dyZXNzLWNpcmN1bGFyXG4gKiBAY2F0ZWdvcnkgdmlzdWFsXG4gKiBAZGVzY3JpcHRpb25cbiAqICAgW2VuXVxuICogICAgIFRoaXMgY29tcG9uZW50IGRpc3BsYXlzIGEgY2lyY3VsYXIgcHJvZ3Jlc3MgaW5kaWNhdG9yLiBJdCBjYW4gZWl0aGVyIGJlIHVzZWQgdG8gc2hvdyBob3cgbXVjaCBvZiBhIHRhc2sgaGFzIGJlZW4gY29tcGxldGVkIG9yIHRvIHNob3cgYSBsb29waW5nIGFuaW1hdGlvbiB0byBpbmRpY2F0ZSB0aGF0IGFuIG9wZXJhdGlvbiBpcyBjdXJyZW50bHkgcnVubmluZy5cbiAqICAgWy9lbl1cbiAqICAgW2phXVsvamFdXG4gKiBAY29kZXBlbiBFVnpNalJcbiAqIEB0dXRvcmlhbCB2YW5pbGxhL1JlZmVyZW5jZS9wcm9ncmVzc1xuICogQHNlZWFsc28gb25zLXByb2dyZXNzLWJhclxuICogICBbZW5dVGhlIGA8b25zLXByb2dyZXNzLWJhcj5gIGNvbXBvbmVudCBkaXNwbGF5cyBhIGJhciBwcm9ncmVzcyBpbmRpY2F0b3IuWy9lbl1cbiAqICAgW2phXVsvamFdXG4gKiBAZXhhbXBsZVxuICogPG9ucy1wcm9ncmVzcy1jaXJjdWxhclxuICogIHZhbHVlPVwiNTVcIlxuICogIHNlY29uZGFyeS12YWx1ZT1cIjg3XCI+XG4gKiA8L29ucy1wcm9ncmVzcy1jaXJjdWxhcj5cbiAqXG4gKiA8b25zLXByb2dyZXNzLWNpcmN1bGFyXG4gKiAgaW5kZXRlcm1pbmF0ZT5cbiAqIDwvb25zLXByb2dyZXNzLWNpcmN1bGFyPlxuICovXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQcm9ncmVzc0NpcmN1bGFyRWxlbWVudCBleHRlbmRzIEJhc2VFbGVtZW50IHtcblxuICAvKipcbiAgICogQGF0dHJpYnV0ZSBtb2RpZmllclxuICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dQ2hhbmdlIHRoZSBhcHBlYXJhbmNlIG9mIHRoZSBwcm9ncmVzcyBpbmRpY2F0b3IuWy9lbl1cbiAgICogICBbamFd44OX44Ot44Kw44Os44K544Kk44Oz44K444Kx44O844K/44Gu6KaL44Gf55uu44KS5aSJ5pu044GX44G+44GZ44CCWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBhdHRyaWJ1dGUgdmFsdWVcbiAgICogQHR5cGUge051bWJlcn1cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXUN1cnJlbnQgcHJvZ3Jlc3MuIFNob3VsZCBiZSBhIHZhbHVlIGJldHdlZW4gMCBhbmQgMTAwLlsvZW5dXG4gICAqICAgW2phXeePvuWcqOOBrumAsuihjOeKtuazgeOBruWApOOCkuaMh+WumuOBl+OBvuOBmeOAgjDjgYvjgokxMDDjga7plpPjga7lgKTjgpLmjIflrprjgZfjgabkuIvjgZXjgYTjgIJbL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQGF0dHJpYnV0ZSBzZWNvbmRhcnktdmFsdWVcbiAgICogQHR5cGUge051bWJlcn1cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXUN1cnJlbnQgc2Vjb25kYXJ5IHByb2dyZXNzLiBTaG91bGQgYmUgYSB2YWx1ZSBiZXR3ZWVuIDAgYW5kIDEwMC5bL2VuXVxuICAgKiAgIFtqYV3nj77lnKjjga7vvJLnlarnm67jga7pgLLooYznirbms4Hjga7lgKTjgpLmjIflrprjgZfjgb7jgZnjgIIw44GL44KJMTAw44Gu6ZaT44Gu5YCk44KS5oyH5a6a44GX44Gm5LiL44GV44GE44CCWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBhdHRyaWJ1dGUgaW5kZXRlcm1pbmF0ZVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dSWYgdGhpcyBhdHRyaWJ1dGUgaXMgc2V0LCBhbiBpbmZpbml0ZSBsb29waW5nIGFuaW1hdGlvbiB3aWxsIGJlIHNob3duLlsvZW5dXG4gICAqICAgW2phXeOBk+OBruWxnuaAp+OBjOioreWumuOBleOCjOOBn+WgtOWQiOOAgeODq+ODvOODl+OBmeOCi+OCouODi+ODoeODvOOCt+ODp+ODs+OBjOihqOekuuOBleOCjOOBvuOBmeOAglsvamFdXG4gICAqL1xuXG4gIGluaXQoKSB7XG4gICAgY29udGVudFJlYWR5KHRoaXMsICgpID0+IHRoaXMuX2NvbXBpbGUoKSk7XG4gIH1cblxuICBzdGF0aWMgZ2V0IG9ic2VydmVkQXR0cmlidXRlcygpIHtcbiAgICByZXR1cm4gWydtb2RpZmllcicsICd2YWx1ZScsICdzZWNvbmRhcnktdmFsdWUnLCAnaW5kZXRlcm1pbmF0ZSddO1xuICB9XG5cbiAgYXR0cmlidXRlQ2hhbmdlZENhbGxiYWNrKG5hbWUsIGxhc3QsIGN1cnJlbnQpIHtcbiAgICBpZiAobmFtZSA9PT0gJ21vZGlmaWVyJykge1xuICAgICAgcmV0dXJuIE1vZGlmaWVyVXRpbC5vbk1vZGlmaWVyQ2hhbmdlZChsYXN0LCBjdXJyZW50LCB0aGlzLCBzY2hlbWUpO1xuICAgIH0gZWxzZSBpZiAobmFtZSA9PT0gJ3ZhbHVlJyB8fCBuYW1lID09PSAnc2Vjb25kYXJ5LXZhbHVlJykge1xuICAgICAgdGhpcy5fdXBkYXRlVmFsdWUoKTtcbiAgICB9IGVsc2UgaWYgKG5hbWUgPT09ICdpbmRldGVybWluYXRlJykge1xuICAgICAgdGhpcy5fdXBkYXRlRGV0ZXJtaW5hdGUoKTtcbiAgICB9XG4gIH1cblxuICBfdXBkYXRlRGV0ZXJtaW5hdGUoKSB7XG4gICAgaWYgKHRoaXMuaGFzQXR0cmlidXRlKCdpbmRldGVybWluYXRlJykpIHtcbiAgICAgIGNvbnRlbnRSZWFkeSh0aGlzLCAoKSA9PiB7XG4gICAgICAgIE1vZGlmaWVyVXRpbC5hZGRNb2RpZmllcih0aGlzLCAnaW5kZXRlcm1pbmF0ZScpO1xuICAgICAgfSk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgY29udGVudFJlYWR5KHRoaXMsICgpID0+IHtcbiAgICAgICAgTW9kaWZpZXJVdGlsLnJlbW92ZU1vZGlmaWVyKHRoaXMsICdpbmRldGVybWluYXRlJyk7XG4gICAgICB9KTtcbiAgICB9XG4gIH1cblxuICBfdXBkYXRlVmFsdWUoKSB7XG4gICAgaWYgKHRoaXMuaGFzQXR0cmlidXRlKCd2YWx1ZScpKSB7XG4gICAgICBjb250ZW50UmVhZHkodGhpcywgKCkgPT4ge1xuICAgICAgICBjb25zdCBwZXIgPSBNYXRoLmNlaWwodGhpcy5nZXRBdHRyaWJ1dGUoJ3ZhbHVlJykgKiAyNTEuMzIgKiAwLjAxKTtcbiAgICAgICAgdGhpcy5fcHJpbWFyeS5zdHlsZVsnc3Ryb2tlLWRhc2hhcnJheSddID0gcGVyICsgJyUsIDI1MS4zMiUnO1xuICAgICAgfSk7XG4gICAgfVxuICAgIGlmICh0aGlzLmhhc0F0dHJpYnV0ZSgnc2Vjb25kYXJ5LXZhbHVlJykpIHtcbiAgICAgIGNvbnRlbnRSZWFkeSh0aGlzLCAoKSA9PiB7XG4gICAgICAgIGNvbnN0IHBlciA9ICBNYXRoLmNlaWwodGhpcy5nZXRBdHRyaWJ1dGUoJ3NlY29uZGFyeS12YWx1ZScpICogMjUxLjMyICogMC4wMSk7XG4gICAgICAgIHRoaXMuX3NlY29uZGFyeS5zdHlsZS5kaXNwbGF5ID0gbnVsbDtcbiAgICAgICAgdGhpcy5fc2Vjb25kYXJ5LnN0eWxlWydzdHJva2UtZGFzaGFycmF5J10gPSBwZXIgKyAnJSwgMjUxLjMyJSc7XG4gICAgICB9KTtcbiAgICB9IGVsc2Uge1xuICAgICAgY29udGVudFJlYWR5KHRoaXMsICgpID0+IHtcbiAgICAgICAgdGhpcy5fc2Vjb25kYXJ5LnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XG4gICAgICB9KTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogQHByb3BlcnR5IHZhbHVlXG4gICAqIEB0eXBlIHtOdW1iZXJ9XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1DdXJyZW50IHByb2dyZXNzLiBTaG91bGQgYmUgYSB2YWx1ZSBiZXR3ZWVuIDAgYW5kIDEwMC5bL2VuXVxuICAgKiAgIFtqYV3nj77lnKjjga7pgLLooYznirbms4Hjga7lgKTjgpLmjIflrprjgZfjgb7jgZnjgIIw44GL44KJMTAw44Gu6ZaT44Gu5YCk44KS5oyH5a6a44GX44Gm5LiL44GV44GE44CCWy9qYV1cbiAgICovXG4gIHNldCB2YWx1ZSh2YWx1ZSkge1xuICAgIGlmICh0eXBlb2YgdmFsdWUgIT09ICdudW1iZXInIHx8IHZhbHVlIDwgMCB8fCB2YWx1ZSA+IDEwMCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIHZhbHVlJyk7XG4gICAgfVxuXG4gICAgdGhpcy5zZXRBdHRyaWJ1dGUoJ3ZhbHVlJywgTWF0aC5mbG9vcih2YWx1ZSkpO1xuICB9XG5cbiAgZ2V0IHZhbHVlKCkge1xuICAgIHJldHVybiBwYXJzZUludCh0aGlzLmdldEF0dHJpYnV0ZSgndmFsdWUnKSB8fCAnMCcpO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwcm9wZXJ0eSBzZWNvbmRhcnlWYWx1ZVxuICAgKiBAdHlwZSB7TnVtYmVyfVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dQ3VycmVudCBzZWNvbmRhcnkgcHJvZ3Jlc3MuIFNob3VsZCBiZSBhIHZhbHVlIGJldHdlZW4gMCBhbmQgMTAwLlsvZW5dXG4gICAqICAgW2phXeePvuWcqOOBru+8kueVquebruOBrumAsuihjOeKtuazgeOBruWApOOCkuaMh+WumuOBl+OBvuOBmeOAgjDjgYvjgokxMDDjga7plpPjga7lgKTjgpLmjIflrprjgZfjgabkuIvjgZXjgYTjgIJbL2phXVxuICAgKi9cbiAgc2V0IHNlY29uZGFyeVZhbHVlKHZhbHVlKSB7XG4gICAgaWYgKHR5cGVvZiB2YWx1ZSAhPT0gJ251bWJlcicgfHwgdmFsdWUgPCAwIHx8IHZhbHVlID4gMTAwKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgdmFsdWUnKTtcbiAgICB9XG5cbiAgICB0aGlzLnNldEF0dHJpYnV0ZSgnc2Vjb25kYXJ5LXZhbHVlJywgTWF0aC5mbG9vcih2YWx1ZSkpO1xuICB9XG5cbiAgZ2V0IHNlY29uZGFyeVZhbHVlKCkge1xuICAgIHJldHVybiBwYXJzZUludCh0aGlzLmdldEF0dHJpYnV0ZSgnc2Vjb25kYXJ5LXZhbHVlJykgfHwgJzAnKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcHJvcGVydHkgaW5kZXRlcm1pbmF0ZVxuICAgKiBAdHlwZSB7Qm9vbGVhbn1cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXUlmIHRoaXMgcHJvcGVydHkgaXMgYHRydWVgLCBhbiBpbmZpbml0ZSBsb29waW5nIGFuaW1hdGlvbiB3aWxsIGJlIHNob3duLlsvZW5dXG4gICAqICAgW2phXeOBk+OBruWxnuaAp+OBjOioreWumuOBleOCjOOBn+WgtOWQiOOAgeODq+ODvOODl+OBmeOCi+OCouODi+ODoeODvOOCt+ODp+ODs+OBjOihqOekuuOBleOCjOOBvuOBmeOAglsvamFdXG4gICAqL1xuICBzZXQgaW5kZXRlcm1pbmF0ZSh2YWx1ZSkge1xuICAgIGlmICh2YWx1ZSkge1xuICAgICAgdGhpcy5zZXRBdHRyaWJ1dGUoJ2luZGV0ZXJtaW5hdGUnLCAnJyk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgdGhpcy5yZW1vdmVBdHRyaWJ1dGUoJ2luZGV0ZXJtaW5hdGUnKTtcbiAgICB9XG4gIH1cblxuICBnZXQgaW5kZXRlcm1pbmF0ZSgpIHtcbiAgICByZXR1cm4gdGhpcy5oYXNBdHRyaWJ1dGUoJ2luZGV0ZXJtaW5hdGUnKTtcbiAgfVxuXG4gIF9jb21waWxlKCkge1xuICAgIGlmICh0aGlzLl9pc0NvbXBpbGVkKCkpIHtcbiAgICAgIHRoaXMuX3RlbXBsYXRlID0gdXRpbC5maW5kQ2hpbGQodGhpcywgJy5wcm9ncmVzcy1jaXJjdWxhcicpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLl90ZW1wbGF0ZSA9IHRlbXBsYXRlLmNsb25lTm9kZSh0cnVlKTtcbiAgICB9XG5cbiAgICB0aGlzLl9wcmltYXJ5ID0gdXRpbC5maW5kQ2hpbGQodGhpcy5fdGVtcGxhdGUsICcucHJvZ3Jlc3MtY2lyY3VsYXJfX3ByaW1hcnknKTtcbiAgICB0aGlzLl9zZWNvbmRhcnkgPSB1dGlsLmZpbmRDaGlsZCh0aGlzLl90ZW1wbGF0ZSwgJy5wcm9ncmVzcy1jaXJjdWxhcl9fc2Vjb25kYXJ5Jyk7XG5cbiAgICB0aGlzLl91cGRhdGVEZXRlcm1pbmF0ZSgpO1xuICAgIHRoaXMuX3VwZGF0ZVZhbHVlKCk7XG5cbiAgICB0aGlzLmFwcGVuZENoaWxkKHRoaXMuX3RlbXBsYXRlKTtcblxuICAgIE1vZGlmaWVyVXRpbC5pbml0TW9kaWZpZXIodGhpcywgc2NoZW1lKTtcbiAgfVxuXG4gIF9pc0NvbXBpbGVkKCkge1xuICAgIGlmICghdXRpbC5maW5kQ2hpbGQodGhpcywgJy5wcm9ncmVzcy1jaXJjdWxhcicpKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuXG4gICAgY29uc3Qgc3ZnID0gdXRpbC5maW5kQ2hpbGQodGhpcywgJy5wcm9ncmVzcy1jaXJjdWxhcicpO1xuXG4gICAgaWYgKCF1dGlsLmZpbmRDaGlsZChzdmcsICcucHJvZ3Jlc3MtY2lyY3VsYXJfX3NlY29uZGFyeScpKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuXG4gICAgaWYgKCF1dGlsLmZpbmRDaGlsZChzdmcsICcucHJvZ3Jlc3MtY2lyY3VsYXJfX3ByaW1hcnknKSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cblxuICAgIHJldHVybiB0cnVlO1xuICB9XG59XG5cbmN1c3RvbUVsZW1lbnRzLmRlZmluZSgnb25zLXByb2dyZXNzLWNpcmN1bGFyJywgUHJvZ3Jlc3NDaXJjdWxhckVsZW1lbnQpO1xuIiwiLypcbkNvcHlyaWdodCAyMDEzLTIwMTUgQVNJQUwgQ09SUE9SQVRJT05cblxuTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbnlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbllvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuXG4gICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcblxuVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG5TZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG5saW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cblxuKi9cblxuaW1wb3J0IHV0aWwgZnJvbSAnLi4vb25zL3V0aWwnO1xuaW1wb3J0IHBsYXRmb3JtIGZyb20gJy4uL29ucy9wbGF0Zm9ybSc7XG5pbXBvcnQgQmFzZUVsZW1lbnQgZnJvbSAnLi4vb25zL2Jhc2UtZWxlbWVudCc7XG5pbXBvcnQgR2VzdHVyZURldGVjdG9yIGZyb20gJy4uL29ucy9nZXN0dXJlLWRldGVjdG9yJztcbmltcG9ydCBhbmltaXQgZnJvbSAnLi4vb25zL2FuaW1pdCc7XG5cbmNvbnN0IFNUQVRFX0lOSVRJQUwgPSAnaW5pdGlhbCc7XG5jb25zdCBTVEFURV9QUkVBQ1RJT04gPSAncHJlYWN0aW9uJztcbmNvbnN0IFNUQVRFX0FDVElPTiA9ICdhY3Rpb24nO1xuXG5jb25zdCByZW1vdmVUcmFuc2Zvcm0gPSAoZWwpID0+IHtcbiAgZWwuc3R5bGUudHJhbnNmb3JtID0gJyc7XG4gIGVsLnN0eWxlLldlYmtpdFRyYW5zZm9ybSA9ICcnO1xuICBlbC5zdHlsZS50cmFuc2l0aW9uID0gJyc7XG4gIGVsLnN0eWxlLldlYmtpdFRyYW5zaXRpb24gPSAnJztcbn07XG5cbi8qKlxuICogQGVsZW1lbnQgb25zLXB1bGwtaG9va1xuICogQGNhdGVnb3J5IGNvbnRyb2xcbiAqIEBkZXNjcmlwdGlvblxuICogICBbZW5dXG4gKiAgICAgQ29tcG9uZW50IHRoYXQgYWRkcyAqKlB1bGwgdG8gcmVmcmVzaCoqIGZ1bmN0aW9uYWxpdHkgdG8gYW4gYDxvbnMtcGFnZT5gIGVsZW1lbnQuXG4gKlxuICogICAgIEl0IGNhbiBiZSB1c2VkIHRvIHBlcmZvcm0gYSB0YXNrIHdoZW4gdGhlIHVzZXIgcHVsbHMgZG93biBhdCB0aGUgdG9wIG9mIHRoZSBwYWdlLiBBIGNvbW1vbiB1c2FnZSBpcyB0byByZWZyZXNoIHRoZSBkYXRhIGRpc3BsYXllZCBpbiBhIHBhZ2UuXG4gKiAgIFsvZW5dXG4gKiAgIFtqYV1bL2phXVxuICogQGNvZGVwZW4gV2JKb2dNXG4gKiBAdHV0b3JpYWwgdmFuaWxsYS9SZWZlcmVuY2UvcHVsbC1ob29rXG4gKiBAZXhhbXBsZVxuICogPG9ucy1wYWdlPlxuICogICA8b25zLXB1bGwtaG9vaz5cbiAqICAgICBSZWxlYXNlIHRvIHJlZnJlc2hcbiAqICAgPC9vbnMtcHVsbC1ob29rPlxuICogPC9vbnMtcGFnZT5cbiAqXG4gKiA8c2NyaXB0PlxuICogICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdvbnMtcHVsbC1ob29rJykub25BY3Rpb24gPSBmdW5jdGlvbihkb25lKSB7XG4gKiAgICAgc2V0VGltZW91dChkb25lLCAxMDAwKTtcbiAqICAgfTtcbiAqIDwvc2NyaXB0PlxuICovXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQdWxsSG9va0VsZW1lbnQgZXh0ZW5kcyBCYXNlRWxlbWVudCB7XG5cbiAgLyoqXG4gICAqIEBldmVudCBjaGFuZ2VzdGF0ZVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dRmlyZWQgd2hlbiB0aGUgc3RhdGUgaXMgY2hhbmdlZC4gVGhlIHN0YXRlIGNhbiBiZSBlaXRoZXIgXCJpbml0aWFsXCIsIFwicHJlYWN0aW9uXCIgb3IgXCJhY3Rpb25cIi5bL2VuXVxuICAgKiAgIFtqYV3jgrPjg7Pjg53jg7zjg43jg7Pjg4jjga7nirbmhYvjgYzlpInjgo/jgaPjgZ/loLTlkIjjgavnmbrngavjgZfjgb7jgZnjgILnirbmhYvjga/jgIFcImluaXRpYWxcIiwgXCJwcmVhY3Rpb25cIiwgXCJhY3Rpb25cIuOBruOBhOOBmuOCjOOBi+OBp+OBmeOAglsvamFdXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBldmVudFxuICAgKiAgIFtlbl1FdmVudCBvYmplY3QuWy9lbl1cbiAgICogICBbamFd44Kk44OZ44Oz44OI44Kq44OW44K444Kn44Kv44OI44CCWy9qYV1cbiAgICogQHBhcmFtIHtPYmplY3R9IGV2ZW50LnB1bGxIb29rXG4gICAqICAgW2VuXUNvbXBvbmVudCBvYmplY3QuWy9lbl1cbiAgICogICBbamFd44Kz44Oz44Od44O844ON44Oz44OI44Gu44Kq44OW44K444Kn44Kv44OI44CCWy9qYV1cbiAgICogQHBhcmFtIHtTdHJpbmd9IGV2ZW50LnN0YXRlXG4gICAqICAgW2VuXUN1cnJlbnQgc3RhdGUuWy9lbl1cbiAgICogICBbamFd54++5Zyo44Gu54q25oWL5ZCN44KS5Y+C54Wn44Gn44GN44G+44GZ44CCWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBhdHRyaWJ1dGUgZGlzYWJsZWRcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXUlmIHRoaXMgYXR0cmlidXRlIGlzIHNldCB0aGUgXCJwdWxsLXRvLXJlZnJlc2hcIiBmdW5jdGlvbmFsaXR5IGlzIGRpc2FibGVkLlsvZW5dXG4gICAqICAgW2phXeOBk+OBruWxnuaAp+OBjOOBguOCi+aZguOAgWRpc2FibGVk54q25oWL44Gr44Gq44KK44Ki44Kv44K344On44Oz44GM5a6f6KGM44GV44KM44Gq44GP44Gq44KK44G+44GZWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBhdHRyaWJ1dGUgaGVpZ2h0XG4gICAqIEB0eXBlIHtTdHJpbmd9XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1TcGVjaWZ5IHRoZSBoZWlnaHQgb2YgdGhlIGNvbXBvbmVudC4gV2hlbiBwdWxsZWQgZG93biBmdXJ0aGVyIHRoYW4gdGhpcyB2YWx1ZSBpdCB3aWxsIHN3aXRjaCB0byB0aGUgXCJwcmVhY3Rpb25cIiBzdGF0ZS4gVGhlIGRlZmF1bHQgdmFsdWUgaXMgXCI2NHB4XCIuWy9lbl1cbiAgICogICBbamFd44Kz44Oz44Od44O844ON44Oz44OI44Gu6auY44GV44KS5oyH5a6a44GX44G+44GZ44CC44GT44Gu6auY44GV5Lul5LiK44GrcHVsbCBkb3du44GZ44KL44GoXCJwcmVhY3Rpb25cIueKtuaFi+OBq+enu+ihjOOBl+OBvuOBmeOAguODh+ODleOCqeODq+ODiOOBruWApOOBr1wiNjRweFwi44Gn44GZ44CCWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBhdHRyaWJ1dGUgdGhyZXNob2xkLWhlaWdodFxuICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dU3BlY2lmeSB0aGUgdGhyZXNob2xkIGhlaWdodC4gVGhlIGNvbXBvbmVudCBhdXRvbWF0aWNhbGx5IHN3aXRjaGVzIHRvIHRoZSBcImFjdGlvblwiIHN0YXRlIHdoZW4gcHVsbGVkIGZ1cnRoZXIgdGhhbiB0aGlzIHZhbHVlLiBUaGUgZGVmYXVsdCB2YWx1ZSBpcyBcIjk2cHhcIi4gQSBuZWdhdGl2ZSB2YWx1ZSBvciBhIHZhbHVlIGxlc3MgdGhhbiB0aGUgaGVpZ2h0IHdpbGwgZGlzYWJsZSB0aGlzIHByb3BlcnR5LlsvZW5dXG4gICAqICAgW2phXemWvuWApOOBqOOBquOCi+mrmOOBleOCkuaMh+WumuOBl+OBvuOBmeOAguOBk+OBruWApOOBp+aMh+WumuOBl+OBn+mrmOOBleOCiOOCiuOCgnB1bGwgZG93buOBmeOCi+OBqOOAgeOBk+OBruOCs+ODs+ODneODvOODjeODs+ODiOOBr+iHquWLleeahOOBq1wiYWN0aW9uXCLnirbmhYvjgavnp7vooYzjgZfjgb7jgZnjgIJbL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQGF0dHJpYnV0ZSBmaXhlZC1jb250ZW50XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1JZiB0aGlzIGF0dHJpYnV0ZSBpcyBzZXQgdGhlIGNvbnRlbnQgb2YgdGhlIHBhZ2Ugd2lsbCBub3QgbW92ZSB3aGVuIHB1bGxpbmcuWy9lbl1cbiAgICogICBbamFd44GT44Gu5bGe5oCn44GM44GC44KL5pmC44CB44OX44Or44OV44OD44Kv44GM5byV44GN5Ye644GV44KM44Gm44GE44KL5pmC44Gr44KC44Kz44Oz44OG44Oz44OE44Gv5YuV44GN44G+44Gb44KT44CCWy9qYV1cbiAgICovXG5cbiAgaW5pdCgpIHtcbiAgICB0aGlzLl9ib3VuZE9uRHJhZyA9IHRoaXMuX29uRHJhZy5iaW5kKHRoaXMpO1xuICAgIHRoaXMuX2JvdW5kT25EcmFnU3RhcnQgPSB0aGlzLl9vbkRyYWdTdGFydC5iaW5kKHRoaXMpO1xuICAgIHRoaXMuX2JvdW5kT25EcmFnRW5kID0gdGhpcy5fb25EcmFnRW5kLmJpbmQodGhpcyk7XG4gICAgdGhpcy5fYm91bmRPblNjcm9sbCA9IHRoaXMuX29uU2Nyb2xsLmJpbmQodGhpcyk7XG5cbiAgICB0aGlzLl9zZXRTdGF0ZShTVEFURV9JTklUSUFMLCB0cnVlKTtcbiAgICB0aGlzLl9oaWRlKCk7IC8vIEZpeCBmb3IgdHJhbnNwYXJlbnQgdG9vbGJhciB0cmFuc2l0aW9uc1xuICB9XG5cbiAgX3NldFN0eWxlKCkge1xuICAgIGNvbnN0IGhlaWdodCA9IHRoaXMuaGVpZ2h0O1xuXG4gICAgdGhpcy5zdHlsZS5oZWlnaHQgPSBgJHtoZWlnaHR9cHhgO1xuICAgIHRoaXMuc3R5bGUubGluZUhlaWdodCA9IGAke2hlaWdodH1weGA7XG4gICAgdGhpcy5zdHlsZS5tYXJnaW5Ub3AgPSAnLTFweCc7XG4gICAgdGhpcy5fcGFnZUVsZW1lbnQuc3R5bGUubWFyZ2luVG9wID0gYC0ke2hlaWdodH1weGA7XG4gIH1cblxuICBfb25TY3JvbGwoZXZlbnQpIHtcbiAgICBjb25zdCBlbGVtZW50ID0gdGhpcy5fcGFnZUVsZW1lbnQ7XG5cbiAgICBpZiAoZWxlbWVudC5zY3JvbGxUb3AgPCAwKSB7XG4gICAgICBlbGVtZW50LnNjcm9sbFRvcCA9IDA7XG4gICAgfVxuICB9XG5cbiAgX2dlbmVyYXRlVHJhbnNsYXRpb25UcmFuc2Zvcm0oc2Nyb2xsKSB7XG4gICAgcmV0dXJuIGB0cmFuc2xhdGUzZCgwcHgsICR7c2Nyb2xsfXB4LCAwcHgpYDtcbiAgfVxuXG4gIF9vbkRyYWcoZXZlbnQpIHtcbiAgICBpZiAodGhpcy5kaXNhYmxlZCkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIC8vIEhhY2sgdG8gbWFrZSBpdCB3b3JrIG9uIEFuZHJvaWQgNC40IFdlYlZpZXcuIFNjcm9sbHMgbWFudWFsbHkgbmVhciB0aGUgdG9wIG9mIHRoZSBwYWdlIHNvXG4gICAgLy8gdGhlcmUgd2lsbCBiZSBubyBpbmVydGlhbCBzY3JvbGwgd2hlbiBzY3JvbGxpbmcgZG93bi4gQWxsb3dpbmcgZGVmYXVsdCBzY3JvbGxpbmcgd2lsbFxuICAgIC8vIGtpbGwgYWxsICd0b3VjaG1vdmUnIGV2ZW50cy5cbiAgICBpZiAocGxhdGZvcm0uaXNBbmRyb2lkKCkpIHtcbiAgICAgIGNvbnN0IGVsZW1lbnQgPSB0aGlzLl9wYWdlRWxlbWVudDtcbiAgICAgIGVsZW1lbnQuc2Nyb2xsVG9wID0gdGhpcy5fc3RhcnRTY3JvbGwgLSBldmVudC5nZXN0dXJlLmRlbHRhWTtcbiAgICAgIGlmIChlbGVtZW50LnNjcm9sbFRvcCA8IHdpbmRvdy5pbm5lckhlaWdodCAmJiBldmVudC5nZXN0dXJlLmRpcmVjdGlvbiAhPT0gJ3VwJykge1xuICAgICAgICBldmVudC5nZXN0dXJlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKHRoaXMuX2N1cnJlbnRUcmFuc2xhdGlvbiA9PT0gMCAmJiB0aGlzLl9nZXRDdXJyZW50U2Nyb2xsKCkgPT09IDApIHtcbiAgICAgIHRoaXMuX3RyYW5zaXRpb25EcmFnTGVuZ3RoID0gZXZlbnQuZ2VzdHVyZS5kZWx0YVk7XG5cbiAgICAgIGNvbnN0IGRpcmVjdGlvbiA9IGV2ZW50Lmdlc3R1cmUuaW50ZXJpbURpcmVjdGlvbjtcbiAgICAgIGlmIChkaXJlY3Rpb24gPT09ICdkb3duJykge1xuICAgICAgICB0aGlzLl90cmFuc2l0aW9uRHJhZ0xlbmd0aCAtPSAxO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5fdHJhbnNpdGlvbkRyYWdMZW5ndGggKz0gMTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBjb25zdCBzY3JvbGwgPSBNYXRoLm1heChldmVudC5nZXN0dXJlLmRlbHRhWSAtIHRoaXMuX3N0YXJ0U2Nyb2xsLCAwKTtcblxuICAgIGlmICh0aGlzLl90aHJlc2hvbGRIZWlnaHRFbmFibGVkKCkgJiYgc2Nyb2xsID49IHRoaXMudGhyZXNob2xkSGVpZ2h0KSB7XG4gICAgICBldmVudC5nZXN0dXJlLnN0b3BEZXRlY3QoKTtcblxuICAgICAgc2V0SW1tZWRpYXRlKCgpID0+IHRoaXMuX2ZpbmlzaCgpKTtcbiAgICB9IGVsc2UgaWYgKHNjcm9sbCA+PSB0aGlzLmhlaWdodCkge1xuICAgICAgdGhpcy5fc2V0U3RhdGUoU1RBVEVfUFJFQUNUSU9OKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5fc2V0U3RhdGUoU1RBVEVfSU5JVElBTCk7XG4gICAgfVxuXG4gICAgLy8gQnkgc3RvcHBpbmcgcHJvcGFnYXRpb24gb25seSBvZiBgZHJhZ3VwYCBhbmQgYGRyYWdkb3duYCxcbiAgICAvLyBhbGxvd2luZyBhbmNlc3RvciBlbGVtZW50cyB0byBkZXRlY3QgYGRyYWdsZWZ0YCBhbmQgYGRyYWdyaWdodGAuXG4gICAgLy8gSWYgd2UgY29tbWVudCBvdXQgdGhlIGZvbGxvd2luZyBgaWZgIGJsb2NrLCBgb25zLXNwbGl0dGVyYCB3aXRoIGBvbnMtcHVsbC1ob29rYCB3aWxsIGJlIGJyb2tlbi5cbiAgICBpZiAoZXZlbnQuZ2VzdHVyZS5kaXJlY3Rpb24gPT09ICd1cCcgfHwgZXZlbnQuZ2VzdHVyZS5kaXJlY3Rpb24gPT09ICdkb3duJykge1xuICAgICAgICBldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICB9XG4gICAgdGhpcy5fdHJhbnNsYXRlVG8oc2Nyb2xsKTtcbiAgfVxuXG4gIF9vbkRyYWdTdGFydChldmVudCkge1xuICAgIGlmICh0aGlzLmRpc2FibGVkKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgdGhpcy5fc3RhcnRTY3JvbGwgPSB0aGlzLl9nZXRDdXJyZW50U2Nyb2xsKCk7XG4gIH1cblxuICBfb25EcmFnRW5kKGV2ZW50KSB7XG4gICAgaWYgKHRoaXMuZGlzYWJsZWQpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBpZiAodGhpcy5fY3VycmVudFRyYW5zbGF0aW9uID4gMCkge1xuICAgICAgY29uc3Qgc2Nyb2xsID0gdGhpcy5fY3VycmVudFRyYW5zbGF0aW9uO1xuXG4gICAgICBpZiAoc2Nyb2xsID4gdGhpcy5oZWlnaHQpIHtcbiAgICAgICAgdGhpcy5fZmluaXNoKCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLl90cmFuc2xhdGVUbygwLCB7YW5pbWF0ZTogdHJ1ZX0pO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBAcHJvcGVydHkgb25BY3Rpb25cbiAgICogQHR5cGUge0Z1bmN0aW9ufVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dVGhpcyB3aWxsIGJlIGNhbGxlZCBpbiB0aGUgYGFjdGlvbmAgc3RhdGUgaWYgaXQgZXhpc3RzLiBUaGUgZnVuY3Rpb24gd2lsbCBiZSBnaXZlbiBhIGBkb25lYCBjYWxsYmFjayBhcyBpdCdzIGZpcnN0IGFyZ3VtZW50LlsvZW5dXG4gICAqICAgW2phXVsvamFdXG4gICAqL1xuICBnZXQgb25BY3Rpb24oKSB7XG4gICAgcmV0dXJuIHRoaXMuX29uQWN0aW9uO1xuICB9XG5cbiAgc2V0IG9uQWN0aW9uKHZhbHVlKSB7XG4gICAgaWYgKCEodmFsdWUgaW5zdGFuY2VvZiBGdW5jdGlvbikgJiYgdmFsdWUgIT09IG51bGwpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignb25BY3Rpb24gbXVzdCBiZSBhIGZ1bmN0aW9uIG9yIG51bGwnKTtcbiAgICB9XG4gICAgdGhpcy5fb25BY3Rpb24gPSB2YWx1ZTtcbiAgfVxuXG4gIF9maW5pc2goKSB7XG4gICAgdGhpcy5fc2V0U3RhdGUoU1RBVEVfQUNUSU9OKTtcbiAgICB0aGlzLl90cmFuc2xhdGVUbyh0aGlzLmhlaWdodCwge2FuaW1hdGU6IHRydWV9KTtcbiAgICBjb25zdCBhY3Rpb24gPSB0aGlzLm9uQWN0aW9uIHx8IChkb25lID0+IGRvbmUoKSk7XG4gICAgYWN0aW9uKCgpID0+IHtcbiAgICAgIHRoaXMuX3RyYW5zbGF0ZVRvKDAsIHthbmltYXRlOiB0cnVlfSk7XG4gICAgICB0aGlzLl9zZXRTdGF0ZShTVEFURV9JTklUSUFMKTtcbiAgICB9KTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcHJvcGVydHkgaGVpZ2h0XG4gICAqIEB0eXBlIHtOdW1iZXJ9XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1UaGUgaGVpZ2h0IG9mIHRoZSBwdWxsIGhvb2sgaW4gcGl4ZWxzLiBUaGUgZGVmYXVsdCB2YWx1ZSBpcyBgNjRweGAuWy9lbl1cbiAgICogICBbamFdWy9qYV1cbiAgICovXG4gIHNldCBoZWlnaHQodmFsdWUpIHtcbiAgICBpZiAoIXV0aWwuaXNJbnRlZ2VyKHZhbHVlKSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdUaGUgaGVpZ2h0IG11c3QgYmUgYW4gaW50ZWdlcicpO1xuICAgIH1cblxuICAgIHRoaXMuc2V0QXR0cmlidXRlKCdoZWlnaHQnLCBgJHt2YWx1ZX1weGApO1xuICB9XG5cbiAgZ2V0IGhlaWdodCgpIHtcbiAgICByZXR1cm4gcGFyc2VJbnQodGhpcy5nZXRBdHRyaWJ1dGUoJ2hlaWdodCcpIHx8ICc2NCcsIDEwKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcHJvcGVydHkgdGhyZXNob2xkSGVpZ2h0XG4gICAqIEB0eXBlIHtOdW1iZXJ9XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1UaGUgdGhyZXNob2xkSGVpZ2h0IG9mIHRoZSBwdWxsIGhvb2sgaW4gcGl4ZWxzLiBUaGUgZGVmYXVsdCB2YWx1ZSBpcyBgOTZweGAuWy9lbl1cbiAgICogICBbamFdWy9qYV1cbiAgICovXG4gIHNldCB0aHJlc2hvbGRIZWlnaHQodmFsdWUpIHtcbiAgICBpZiAoIXV0aWwuaXNJbnRlZ2VyKHZhbHVlKSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdUaGUgdGhyZXNob2xkIGhlaWdodCBtdXN0IGJlIGFuIGludGVnZXInKTtcbiAgICB9XG5cbiAgICB0aGlzLnNldEF0dHJpYnV0ZSgndGhyZXNob2xkLWhlaWdodCcsIGAke3ZhbHVlfXB4YCk7XG4gIH1cblxuICBnZXQgdGhyZXNob2xkSGVpZ2h0KCkge1xuICAgIHJldHVybiBwYXJzZUludCh0aGlzLmdldEF0dHJpYnV0ZSgndGhyZXNob2xkLWhlaWdodCcpIHx8ICc5NicsIDEwKTtcbiAgfVxuXG4gIF90aHJlc2hvbGRIZWlnaHRFbmFibGVkKCkge1xuICAgIGNvbnN0IHRoID0gdGhpcy50aHJlc2hvbGRIZWlnaHQ7XG4gICAgcmV0dXJuIHRoID4gMCAmJiB0aCA+PSB0aGlzLmhlaWdodDtcbiAgfVxuXG4gIF9zZXRTdGF0ZShzdGF0ZSwgbm9FdmVudCkge1xuICAgIGNvbnN0IGxhc3RTdGF0ZSA9IHRoaXMuX2dldFN0YXRlKCk7XG5cbiAgICB0aGlzLnNldEF0dHJpYnV0ZSgnc3RhdGUnLCBzdGF0ZSk7XG5cbiAgICBpZiAoIW5vRXZlbnQgJiYgbGFzdFN0YXRlICE9PSB0aGlzLl9nZXRTdGF0ZSgpKSB7XG4gICAgICB1dGlsLnRyaWdnZXJFbGVtZW50RXZlbnQodGhpcywgJ2NoYW5nZXN0YXRlJywge1xuICAgICAgICBwdWxsSG9vazogdGhpcyxcbiAgICAgICAgc3RhdGU6IHN0YXRlLFxuICAgICAgICBsYXN0U3RhdGU6IGxhc3RTdGF0ZVxuICAgICAgfSk7XG4gICAgfVxuICB9XG5cbiAgX2dldFN0YXRlKCkge1xuICAgIHJldHVybiB0aGlzLmdldEF0dHJpYnV0ZSgnc3RhdGUnKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcHJvcGVydHkgc3RhdGVcbiAgICogQHJlYWRvbmx5XG4gICAqIEB0eXBlIHtTdHJpbmd9XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1DdXJyZW50IHN0YXRlIG9mIHRoZSBlbGVtZW50LlsvZW5dXG4gICAqICAgW2phXVsvamFdXG4gICAqL1xuICBnZXQgc3RhdGUoKSB7XG4gICAgcmV0dXJuIHRoaXMuX2dldFN0YXRlKCk7XG4gIH1cblxuICBfZ2V0Q3VycmVudFNjcm9sbCgpIHtcbiAgICByZXR1cm4gdGhpcy5fcGFnZUVsZW1lbnQuc2Nyb2xsVG9wO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwcm9wZXJ0eSBwdWxsRGlzdGFuY2VcbiAgICogQHJlYWRvbmx5XG4gICAqIEB0eXBlIHtOdW1iZXJ9XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1UaGUgY3VycmVudCBudW1iZXIgb2YgcGl4ZWxzIHRoZSBwdWxsIGhvb2sgaGFzIG1vdmVkLlsvZW5dXG4gICAqICAgW2phXeePvuWcqOOBruODl+ODq+ODleODg+OCr+OBjOW8leOBjeWHuuOBleOCjOOBn+i3nembouOCkuODlOOCr+OCu+ODq+aVsOOAglsvamFdXG4gICAqL1xuICBnZXQgcHVsbERpc3RhbmNlKCkge1xuICAgIHJldHVybiB0aGlzLl9jdXJyZW50VHJhbnNsYXRpb247XG4gIH1cblxuICAvKipcbiAgICogQHByb3BlcnR5IGRpc2FibGVkXG4gICAqIEB0eXBlIHtCb29sZWFufVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dV2hldGhlciB0aGUgZWxlbWVudCBpcyBkaXNhYmxlZCBvciBub3QuWy9lbl1cbiAgICogICBbamFd54Sh5Yq55YyW44GV44KM44Gm44GE44KL5aC05ZCI44GrYHRydWVg44CCWy9qYV1cbiAgICovXG4gIHNldCBkaXNhYmxlZCh2YWx1ZSkge1xuICAgIHJldHVybiB1dGlsLnRvZ2dsZUF0dHJpYnV0ZSh0aGlzLCAnZGlzYWJsZWQnLCB2YWx1ZSk7XG4gIH1cblxuICBnZXQgZGlzYWJsZWQoKSB7XG4gICAgcmV0dXJuIHRoaXMuaGFzQXR0cmlidXRlKCdkaXNhYmxlZCcpO1xuICB9XG5cbiAgX2lzQ29udGVudEZpeGVkKCkge1xuICAgIHJldHVybiB0aGlzLmhhc0F0dHJpYnV0ZSgnZml4ZWQtY29udGVudCcpO1xuICB9XG5cbiAgX2dldFNjcm9sbGFibGVFbGVtZW50KCkge1xuICAgIGlmICh0aGlzLl9pc0NvbnRlbnRGaXhlZCgpKSB7XG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIHRoaXMuX3BhZ2VFbGVtZW50O1xuICAgIH1cbiAgfVxuXG4gIF9zaG93KCkge1xuICAgIHRoaXMuc3R5bGUudmlzaWJpbGl0eSA9ICcnO1xuICB9XG5cbiAgX2hpZGUoKSB7XG4gICAgdGhpcy5zdHlsZS52aXNpYmlsaXR5ID0gJ2hpZGRlbic7XG4gIH1cblxuICAvKipcbiAgICogQHBhcmFtIHtOdW1iZXJ9IHNjcm9sbFxuICAgKiBAcGFyYW0ge09iamVjdH0gb3B0aW9uc1xuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBbb3B0aW9ucy5jYWxsYmFja11cbiAgICovXG4gIF90cmFuc2xhdGVUbyhzY3JvbGwsIG9wdGlvbnMgPSB7fSkge1xuICAgIGlmICh0aGlzLl9jdXJyZW50VHJhbnNsYXRpb24gPT0gMCAmJiBzY3JvbGwgPT0gMCkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGNvbnN0IGRvbmUgPSAoKSA9PiB7XG4gICAgICBpZiAoc2Nyb2xsID09PSAwKSB7XG4gICAgICAgIGNvbnN0IGVsID0gdGhpcy5fZ2V0U2Nyb2xsYWJsZUVsZW1lbnQoKTtcbiAgICAgICAgcmVtb3ZlVHJhbnNmb3JtKGVsKTtcbiAgICAgIH1cblxuICAgICAgaWYgKG9wdGlvbnMuY2FsbGJhY2spIHtcbiAgICAgICAgb3B0aW9ucy5jYWxsYmFjaygpO1xuICAgICAgfVxuICAgIH07XG5cbiAgICB0aGlzLl9jdXJyZW50VHJhbnNsYXRpb24gPSBzY3JvbGw7XG5cbiAgICBpZiAob3B0aW9ucy5hbmltYXRlKSB7XG4gICAgICBhbmltaXQodGhpcy5fZ2V0U2Nyb2xsYWJsZUVsZW1lbnQoKSlcbiAgICAgICAgLnF1ZXVlKHtcbiAgICAgICAgICB0cmFuc2Zvcm06IHRoaXMuX2dlbmVyYXRlVHJhbnNsYXRpb25UcmFuc2Zvcm0oc2Nyb2xsKVxuICAgICAgICB9LCB7XG4gICAgICAgICAgZHVyYXRpb246IDAuMyxcbiAgICAgICAgICB0aW1pbmc6ICdjdWJpYy1iZXppZXIoLjEsIC43LCAuMSwgMSknXG4gICAgICAgIH0pXG4gICAgICAgIC5wbGF5KGRvbmUpO1xuICAgIH0gZWxzZSB7XG4gICAgICBhbmltaXQodGhpcy5fZ2V0U2Nyb2xsYWJsZUVsZW1lbnQoKSlcbiAgICAgICAgLnF1ZXVlKHtcbiAgICAgICAgICB0cmFuc2Zvcm06IHRoaXMuX2dlbmVyYXRlVHJhbnNsYXRpb25UcmFuc2Zvcm0oc2Nyb2xsKVxuICAgICAgICB9KVxuICAgICAgICAucGxheShkb25lKTtcbiAgICB9XG4gIH1cblxuICBfZGlzYWJsZURyYWdMb2NrKCkgeyAvLyBlMmUgdGVzdHMgbmVlZCBpdFxuICAgIHRoaXMuX2RyYWdMb2NrRGlzYWJsZWQgPSB0cnVlO1xuICAgIHRoaXMuX2Rlc3Ryb3lFdmVudExpc3RlbmVycygpO1xuICAgIHRoaXMuX2NyZWF0ZUV2ZW50TGlzdGVuZXJzKCk7XG4gIH1cblxuICBfY3JlYXRlRXZlbnRMaXN0ZW5lcnMoKSB7XG4gICAgdGhpcy5fZ2VzdHVyZURldGVjdG9yID0gbmV3IEdlc3R1cmVEZXRlY3Rvcih0aGlzLl9wYWdlRWxlbWVudCwge1xuICAgICAgZHJhZ01pbkRpc3RhbmNlOiAxLFxuICAgICAgZHJhZ0Rpc3RhbmNlQ29ycmVjdGlvbjogZmFsc2UsXG4gICAgICBkcmFnTG9ja1RvQXhpczogIXRoaXMuX2RyYWdMb2NrRGlzYWJsZWRcbiAgICB9KTtcblxuICAgIC8vIEJpbmQgbGlzdGVuZXJzXG4gICAgLy9cbiAgICAvLyBOb3RlOlxuICAgIC8vIElmIHdlIHN3aXBlIHVwL2Rvd24gYSBzY3JlZW4gdG9vIGZhc3QsXG4gICAgLy8gdGhlIGdlc3R1cmUgZGV0ZWN0b3Igb2NjYXNpb25hbGx5IGRpc3BhdGNoZXMgYSBgZHJhZ2xlZnRgIG9yIGBkcmFncmlnaHRgLFxuICAgIC8vIHNvIHdlIG5lZWQgdG8gaGF2ZSB0aGUgcHVsbCBob29rIGxpc3RlbiB0byBgZHJhZ2xlZnRgIGFuZCBgZHJhZ3JpZ2h0YCBhcyB3ZWxsIGFzIGBkcmFndXBgIGFuZCBgZHJhZ2Rvd25gLlxuICAgIHRoaXMuX2dlc3R1cmVEZXRlY3Rvci5vbignZHJhZ3VwIGRyYWdkb3duIGRyYWdsZWZ0IGRyYWdyaWdodCcsIHRoaXMuX2JvdW5kT25EcmFnKTtcbiAgICB0aGlzLl9nZXN0dXJlRGV0ZWN0b3Iub24oJ2RyYWdzdGFydCcsIHRoaXMuX2JvdW5kT25EcmFnU3RhcnQpO1xuICAgIHRoaXMuX2dlc3R1cmVEZXRlY3Rvci5vbignZHJhZ2VuZCcsIHRoaXMuX2JvdW5kT25EcmFnRW5kKTtcblxuICAgIHRoaXMuX3BhZ2VFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ3Njcm9sbCcsIHRoaXMuX2JvdW5kT25TY3JvbGwsIGZhbHNlKTtcbiAgfVxuXG4gIF9kZXN0cm95RXZlbnRMaXN0ZW5lcnMoKSB7XG4gICAgaWYgKHRoaXMuX2dlc3R1cmVEZXRlY3Rvcikge1xuICAgICAgdGhpcy5fZ2VzdHVyZURldGVjdG9yLm9mZignZHJhZ3VwIGRyYWdkb3duIGRyYWdsZWZ0IGRyYWdyaWdodCcsIHRoaXMuX2JvdW5kT25EcmFnKTtcbiAgICAgIHRoaXMuX2dlc3R1cmVEZXRlY3Rvci5vZmYoJ2RyYWdzdGFydCcsIHRoaXMuX2JvdW5kT25EcmFnU3RhcnQpO1xuICAgICAgdGhpcy5fZ2VzdHVyZURldGVjdG9yLm9mZignZHJhZ2VuZCcsIHRoaXMuX2JvdW5kT25EcmFnRW5kKTtcblxuICAgICAgdGhpcy5fZ2VzdHVyZURldGVjdG9yLmRpc3Bvc2UoKTtcbiAgICAgIHRoaXMuX2dlc3R1cmVEZXRlY3RvciA9IG51bGw7XG4gICAgfVxuXG4gICAgdGhpcy5fcGFnZUVsZW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcignc2Nyb2xsJywgdGhpcy5fYm91bmRPblNjcm9sbCwgZmFsc2UpO1xuICB9XG5cbiAgY29ubmVjdGVkQ2FsbGJhY2soKSB7XG4gICAgdGhpcy5fY3VycmVudFRyYW5zbGF0aW9uID0gMDtcbiAgICB0aGlzLl9wYWdlRWxlbWVudCA9IHRoaXMucGFyZW50Tm9kZTtcblxuICAgIHRoaXMuX2NyZWF0ZUV2ZW50TGlzdGVuZXJzKCk7XG4gICAgdGhpcy5fc2V0U3R5bGUoKTtcbiAgfVxuXG4gIGRpc2Nvbm5lY3RlZENhbGxiYWNrKCkge1xuICAgIHRoaXMuX3BhZ2VFbGVtZW50LnN0eWxlLm1hcmdpblRvcCA9ICcnO1xuXG4gICAgdGhpcy5fZGVzdHJveUV2ZW50TGlzdGVuZXJzKCk7XG4gIH1cblxuICBzdGF0aWMgZ2V0IG9ic2VydmVkQXR0cmlidXRlcygpIHtcbiAgICByZXR1cm4gWydoZWlnaHQnXTtcbiAgfVxuXG4gIGF0dHJpYnV0ZUNoYW5nZWRDYWxsYmFjayhuYW1lLCBsYXN0LCBjdXJyZW50KSB7XG4gICAgaWYgKG5hbWUgPT09ICdoZWlnaHQnKSB7XG4gICAgICB0aGlzLl9zZXRTdHlsZSgpO1xuICAgIH1cbiAgfVxuXG4gIHN0YXRpYyBnZXQgU1RBVEVfSU5JVElBTCgpIHtcbiAgICByZXR1cm4gU1RBVEVfSU5JVElBTDtcbiAgfVxuXG4gIHN0YXRpYyBnZXQgU1RBVEVfUFJFQUNUSU9OKCkge1xuICAgIHJldHVybiBTVEFURV9QUkVBQ1RJT047XG4gIH1cblxuICBzdGF0aWMgZ2V0IFNUQVRFX0FDVElPTigpIHtcbiAgICByZXR1cm4gU1RBVEVfQUNUSU9OO1xuICB9XG5cbiAgc3RhdGljIGdldCBldmVudHMoKSB7XG4gICAgcmV0dXJuIFsnY2hhbmdlc3RhdGUnXVxuICB9XG59XG5cbmN1c3RvbUVsZW1lbnRzLmRlZmluZSgnb25zLXB1bGwtaG9vaycsIFB1bGxIb29rRWxlbWVudCk7XG4iLCIvKlxuQ29weXJpZ2h0IDIwMTMtMjAxNiBBU0lBTCBDT1JQT1JBVElPTlxuXG5MaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xueW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG5cbiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuXG5Vbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG5kaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG5XSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cblNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbmxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuXG4qL1xuXG5pbXBvcnQgaW50ZXJuYWwgZnJvbSAnLi4vLi4vb25zL2ludGVybmFsJztcblxuLyoqXG4gKiBAY2xhc3MgQW5pbWF0b3JDU1MgLSBpbXBsZW1lbnRhdGlvbiBvZiBBbmltYXRvciBjbGFzcyB1c2luZyBjc3MgdHJhbnNpdGlvbnNcbiAqL1xuY2xhc3MgQW5pbWF0b3JDU1Mge1xuXG4gIC8qKlxuICAgKiBAbWV0aG9kIGFuaW1hdGVcbiAgICogQGRlc2MgbWFpbiBhbmltYXRpb24gZnVuY3Rpb25cbiAgICogQHBhcmFtIHtFbGVtZW50fSBlbGVtZW50XG4gICAqIEBwYXJhbSB7T2JqZWN0fSBmaW5hbENTU1xuICAgKiBAcGFyYW0ge251bWJlcn0gW2R1cmF0aW9uPTIwMF0gLSBkdXJhdGlvbiBpbiBtaWxsaXNlY29uZHNcbiAgICogQHJldHVybiB7T2JqZWN0fSByZXN1bHRcbiAgICogQHJldHVybiB7RnVuY3Rpb259IHJlc3VsdC50aGVuKGNhbGxiYWNrKSAtIHNldHMgYSBjYWxsYmFjayB0byBiZSBleGVjdXRlZCBhZnRlciB0aGUgYW5pbWF0aW9uIGhhcyBzdG9wcGVkXG4gICAqIEByZXR1cm4ge0Z1bmN0aW9ufSByZXN1bHQuc3RvcChvcHRpb25zKSAtIHN0b3BzIHRoZSBhbmltYXRpb247IGlmIG9wdGlvbnMuc3RvcE5leHQgaXMgdHJ1ZSB0aGVuIGl0IGRvZXNuJ3QgY2FsbCB0aGUgY2FsbGJhY2tcbiAgICogQHJldHVybiB7RnVuY3Rpb259IHJlc3VsdC5maW5pc2gobXMpIC0gZmluaXNoZXMgdGhlIGFuaW1hdGlvbiBpbiB0aGUgc3BlY2lmaWVkIHRpbWUgaW4gbWlsbGlzZWNvbmRzXG4gICAqIEByZXR1cm4ge0Z1bmN0aW9ufSByZXN1bHQuc3BlZWQobXMpIC0gc2V0cyB0aGUgYW5pbWF0aW9uIHNwZWVkIHNvIHRoYXQgaXQgZmluaXNoZXMgYXMgaWYgdGhlIG9yaWdpbmFsIGR1cmF0aW9uIHdhcyB0aGUgb25lIHNwZWNpZmllZCBoZXJlXG4gICAqIEBleGFtcGxlXG4gICAqIGBgYGBcbiAgICogIHZhciByZXN1bHQgPSBhbmltYXRvci5hbmltYXRlKGVsLCB7b3BhY2l0eTogMC41fSwgMTAwMCk7XG4gICAqXG4gICAqICBlbC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uKGUpe1xuICAgKiAgICByZXN1bHQuc3BlZWQoMjAwKS50aGVuKGZ1bmN0aW9uKCl7XG4gICAqICAgICAgY29uc29sZS5sb2coJ2RvbmUnKTtcbiAgICogICAgfSk7XG4gICAqICB9LCAzMDApO1xuICAgKiBgYGBgXG4gICAqL1xuICBhbmltYXRlKGVsLCBmaW5hbCwgZHVyYXRpb24gPSAyMDApIHtcbiAgICB2YXIgc3RhcnQgPSAobmV3IERhdGUoKSkuZ2V0VGltZSgpLFxuICAgICAgICBpbml0aWFsID0ge30sXG4gICAgICAgIHN0b3BwZWQgPSBmYWxzZSxcbiAgICAgICAgbmV4dCA9IGZhbHNlLFxuICAgICAgICB0aW1lb3V0ID0gZmFsc2UsXG4gICAgICAgIHByb3BlcnRpZXMgPSBPYmplY3Qua2V5cyhmaW5hbCk7XG5cbiAgICB2YXIgdXBkYXRlU3R5bGVzID0gKCkgPT4ge1xuICAgICAgbGV0IHMgPSB3aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZShlbCk7XG4gICAgICBwcm9wZXJ0aWVzLmZvckVhY2gocy5nZXRQcm9wZXJ0eVZhbHVlLmJpbmQocykpO1xuICAgICAgcyA9IGVsLm9mZnNldEhlaWdodDtcbiAgICB9O1xuXG4gICAgdmFyIHJlc3VsdCA9IHtcbiAgICAgIHN0b3A6IChvcHRpb25zID0ge30pID0+IHtcbiAgICAgICAgdGltZW91dCAmJiBjbGVhclRpbWVvdXQodGltZW91dCk7XG4gICAgICAgIHZhciBrID0gTWF0aC5taW4oMSwgKChuZXcgRGF0ZSgpKS5nZXRUaW1lKCkgLSBzdGFydCkgLyBkdXJhdGlvbik7XG4gICAgICAgIHByb3BlcnRpZXMuZm9yRWFjaChpID0+IHtcbiAgICAgICAgICBlbC5zdHlsZVtpXSA9ICgxIC0gaykgKiBpbml0aWFsW2ldICsgayAqIGZpbmFsW2ldICsgKGkgPT0gJ29wYWNpdHknID8gJycgOiAncHgnKTtcbiAgICAgICAgfSk7XG4gICAgICAgIGVsLnN0eWxlLnRyYW5zaXRpb25EdXJhdGlvbiA9ICcwcyc7XG5cbiAgICAgICAgaWYgKG9wdGlvbnMuc3RvcE5leHQpIHtcbiAgICAgICAgICBuZXh0ID0gZmFsc2U7XG4gICAgICAgIH0gZWxzZSBpZiAoIXN0b3BwZWQpIHtcbiAgICAgICAgICBzdG9wcGVkID0gdHJ1ZTtcbiAgICAgICAgICBuZXh0ICYmIG5leHQoKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgICAgfSxcbiAgICAgIHRoZW46IChjYikgPT4ge1xuICAgICAgICBuZXh0ID0gY2I7XG4gICAgICAgIGlmIChzdG9wcGVkKSB7XG4gICAgICAgICAgbmV4dCAmJiBuZXh0KCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICAgIH0sXG4gICAgICBzcGVlZDogKG5ld0R1cmF0aW9uKSA9PiB7XG4gICAgICAgIGlmIChpbnRlcm5hbC5jb25maWcuYW5pbWF0aW9uc0Rpc2FibGVkKSB7XG4gICAgICAgICAgbmV3RHVyYXRpb24gPSAwO1xuICAgICAgICB9XG4gICAgICAgIGlmICghc3RvcHBlZCkge1xuICAgICAgICAgIHRpbWVvdXQgJiYgY2xlYXJUaW1lb3V0KHRpbWVvdXQpO1xuXG4gICAgICAgICAgY29uc3QgcGFzc2VkID0gKG5ldyBEYXRlKCkpLmdldFRpbWUoKSAtIHN0YXJ0O1xuICAgICAgICAgIGNvbnN0ICBrID0gcGFzc2VkIC8gZHVyYXRpb247XG4gICAgICAgICAgY29uc3QgcmVtYWluaW5nID0gbmV3RHVyYXRpb24gKiAoMSAtIGspO1xuXG4gICAgICAgICAgcHJvcGVydGllcy5mb3JFYWNoKGkgPT4ge1xuICAgICAgICAgICAgZWwuc3R5bGVbaV0gPSAoMSAtIGspICogaW5pdGlhbFtpXSArIGsgKiBmaW5hbFtpXSArIChpID09ICdvcGFjaXR5JyA/ICcnIDogJ3B4Jyk7XG4gICAgICAgICAgfSk7XG5cbiAgICAgICAgICB1cGRhdGVTdHlsZXMoKTtcblxuICAgICAgICAgIHN0YXJ0ID0gZWwuc3BlZWRVcFRpbWU7XG4gICAgICAgICAgZHVyYXRpb24gPSByZW1haW5pbmc7XG5cbiAgICAgICAgICBlbC5zdHlsZS50cmFuc2l0aW9uRHVyYXRpb24gPSBkdXJhdGlvbiAvIDEwMDAgKyAncyc7XG5cbiAgICAgICAgICBwcm9wZXJ0aWVzLmZvckVhY2goaSA9PiB7XG4gICAgICAgICAgICBlbC5zdHlsZVtpXSA9IGZpbmFsW2ldICsgKGkgPT0gJ29wYWNpdHknID8gJycgOiAncHgnKTtcbiAgICAgICAgICB9KTtcblxuICAgICAgICAgIHRpbWVvdXQgPSBzZXRUaW1lb3V0KHJlc3VsdC5zdG9wLCByZW1haW5pbmcpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgICB9LFxuICAgICAgZmluaXNoOiAobWlsbGlzZWNvbmRzID0gNTApID0+IHtcbiAgICAgICAgdmFyIGsgPSAoKG5ldyBEYXRlKCkpLmdldFRpbWUoKSAtIHN0YXJ0KSAvIGR1cmF0aW9uO1xuXG4gICAgICAgIHJlc3VsdC5zcGVlZChtaWxsaXNlY29uZHMgLyAoMSAtIGspKTtcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgaWYgKGVsLmhhc0F0dHJpYnV0ZSgnZGlzYWJsZWQnKSB8fCBzdG9wcGVkIHx8IGludGVybmFsLmNvbmZpZy5hbmltYXRpb25zRGlzYWJsZWQpIHtcbiAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxuXG4gICAgdmFyIHN0eWxlID0gd2luZG93LmdldENvbXB1dGVkU3R5bGUoZWwpO1xuICAgIHByb3BlcnRpZXMuZm9yRWFjaChlID0+IHtcbiAgICAgIGNvbnN0IHYgPSBwYXJzZUZsb2F0KHN0eWxlLmdldFByb3BlcnR5VmFsdWUoZSkpO1xuICAgICAgaW5pdGlhbFtlXSA9IGlzTmFOKHYpID8gMCA6IHY7XG4gICAgfSk7XG5cblxuICAgIGlmICghc3RvcHBlZCkge1xuICAgICAgZWwuc3R5bGUudHJhbnNpdGlvblByb3BlcnR5ID0gcHJvcGVydGllcy5qb2luKCcsJyk7XG4gICAgICBlbC5zdHlsZS50cmFuc2l0aW9uRHVyYXRpb24gPSBkdXJhdGlvbiAvIDEwMDAgKyAncyc7XG5cbiAgICAgIHByb3BlcnRpZXMuZm9yRWFjaChlID0+IHtcbiAgICAgICAgZWwuc3R5bGVbZV0gPSBmaW5hbFtlXSArIChlID09ICdvcGFjaXR5JyA/ICcnIDogJ3B4Jyk7XG4gICAgICB9KTtcbiAgICB9XG5cbiAgICB0aW1lb3V0ID0gc2V0VGltZW91dChyZXN1bHQuc3RvcCwgZHVyYXRpb24pO1xuICAgIHRoaXMuX29uU3RvcEFuaW1hdGlvbnMoZWwsIHJlc3VsdC5zdG9wKTtcblxuICAgIHJldHVybiByZXN1bHQ7XG4gIH1cblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICB0aGlzLl9xdWV1ZSA9IFtdO1xuICAgIHRoaXMuX2luZGV4ID0gMDtcbiAgfVxuXG4gIF9vblN0b3BBbmltYXRpb25zKGVsLCBsaXN0ZW5lcikge1xuICAgIHZhciBxdWV1ZSA9IHRoaXMuX3F1ZXVlO1xuICAgIHZhciBpID0gdGhpcy5faW5kZXgrKztcbiAgICBxdWV1ZVtlbF0gPSBxdWV1ZVtlbF0gfHwgW107XG4gICAgcXVldWVbZWxdW2ldID0gKG9wdGlvbnMpID0+IHtcbiAgICAgIGRlbGV0ZSBxdWV1ZVtlbF1baV07XG4gICAgICBpZiAocXVldWVbZWxdICYmIHF1ZXVlW2VsXS5sZW5ndGggPT0gMCkge1xuICAgICAgICBkZWxldGUgcXVldWVbZWxdO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGxpc3RlbmVyKG9wdGlvbnMpO1xuICAgIH07XG4gIH1cblxuICAvKipcbiAgKiBAbWV0aG9kIHN0b3BBbmltYXRpb25zXG4gICogQGRlc2Mgc3RvcHMgYWN0aXZlIGFuaW1hdGlvbnMgb24gYSBzcGVjaWZpZWQgZWxlbWVudFxuICAqIEBwYXJhbSB7RWxlbWVudHxBcnJheX0gZWxlbWVudCAtIGVsZW1lbnQgb3IgYXJyYXkgb2YgZWxlbWVudHNcbiAgKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnM9e31dXG4gICogQHBhcmFtIHtCb29sZWFufSBbb3B0aW9ucy5zdG9wTmV4dF0gLSB0aGUgY2FsbGJhY2tzIGFmdGVyIHRoZSBhbmltYXRpb25zIHdvbid0IGJlIGNhbGxlZCBpZiB0aGlzIG9wdGlvbiBpcyB0cnVlXG4gICovXG4gIHN0b3BBbmltYXRpb25zKGVsLCBvcHRpb25zID0ge30pIHtcbiAgICBpZiAoQXJyYXkuaXNBcnJheShlbCkpIHtcbiAgICAgIHJldHVybiBlbC5mb3JFYWNoKGVsID0+IHtcbiAgICAgICAgdGhpcy5zdG9wQW5pbWF0aW9ucyhlbCwgb3B0aW9ucyk7XG4gICAgICB9KTtcbiAgICB9XG5cbiAgICAodGhpcy5fcXVldWVbZWxdIHx8IFtdKS5mb3JFYWNoKGUgPT4geyBlKG9wdGlvbnMgfHwge30pOyB9KTtcbiAgfVxuXG4gIC8qKlxuICAqIEBtZXRob2Qgc3RvcEFsbFxuICAqIEBkZXNjIHN0b3BzIGFsbCBhY3RpdmUgYW5pbWF0aW9uc1xuICAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0aW9ucz17fV1cbiAgKiBAcGFyYW0ge0Jvb2xlYW59IFtvcHRpb25zLnN0b3BOZXh0XSAtIHRoZSBjYWxsYmFja3MgYWZ0ZXIgdGhlIGFuaW1hdGlvbnMgd29uJ3QgYmUgY2FsbGVkIGlmIHRoaXMgb3B0aW9uIGlzIHRydWVcbiAgKi9cbiAgc3RvcEFsbChvcHRpb25zID0ge30pIHtcbiAgICB0aGlzLnN0b3BBbmltYXRpb25zKE9iamVjdC5rZXlzKHRoaXMuX3F1ZXVlKSwgb3B0aW9ucyk7XG4gIH1cblxuICAvKipcbiAgKiBAbWV0aG9kIGZhZGVcbiAgKiBAZGVzYyBmYWRlcyB0aGUgZWxlbWVudCAoc2hvcnQgdmVyc2lvbiBmb3IgYW5pbWF0ZShlbCwge29wYWNpdHk6IDB9KSlcbiAgKiBAcGFyYW0ge0VsZW1lbnR9IGVsZW1lbnRcbiAgKiBAcGFyYW0ge251bWJlcn0gW2R1cmF0aW9uPTIwMF1cbiAgKi9cbiAgZmFkZShlbCwgZHVyYXRpb24gPSAyMDApIHtcbiAgICByZXR1cm4gdGhpcy5hbmltYXRlKGVsLCB7b3BhY2l0eTogMH0sIGR1cmF0aW9uKTtcbiAgfVxuXG59XG5cbmV4cG9ydCBkZWZhdWx0IEFuaW1hdG9yQ1NTO1xuXG4iLCIvKlxuQ29weXJpZ2h0IDIwMTMtMjAxNSBBU0lBTCBDT1JQT1JBVElPTlxuXG5MaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xueW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG5cbiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuXG5Vbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG5kaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG5XSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cblNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbmxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuXG4qL1xuXG5pbXBvcnQgdXRpbCBmcm9tICcuLi8uLi9vbnMvdXRpbCc7XG5pbXBvcnQgaW50ZXJuYWwgZnJvbSAnLi4vLi4vb25zL2ludGVybmFsJztcbmltcG9ydCBCYXNlRWxlbWVudCBmcm9tICcuLi8uLi9vbnMvYmFzZS1lbGVtZW50JztcbmltcG9ydCBBbmltYXRvciBmcm9tICcuL2FuaW1hdG9yLWNzcyc7XG5pbXBvcnQgY29udGVudFJlYWR5IGZyb20gJy4uLy4uL29ucy9jb250ZW50LXJlYWR5JztcblxuY29uc3QgZGVmYXVsdENsYXNzTmFtZSA9ICdyaXBwbGUnO1xuXG4vKipcbiAqIEBlbGVtZW50IG9ucy1yaXBwbGVcbiAqIEBjYXRlZ29yeSB2aXN1YWxcbiAqIEBkZXNjcmlwdGlvblxuICogICBbZW5dXG4gKiAgICAgQWRkcyBhIE1hdGVyaWFsIERlc2lnbiBcInJpcHBsZVwiIGVmZmVjdCB0byBhbiBlbGVtZW50LiBUaGUgcmlwcGxlIGVmZmVjdCB3aWxsIHNwcmVhZCBmcm9tIHRoZSBwb3NpdGlvbiB3aGVyZSB0aGUgdXNlciB0YXBzLlxuICpcbiAqICAgICBTb21lIGVsZW1lbnRzIHN1Y2ggYXMgYDxvbnMtYnV0dG9uPmAgYW5kIGA8b25zLWZhYj5gICBzdXBwb3J0IGEgYHJpcHBsZWAgYXR0cmlidXRlLlxuICogICBbL2VuXVxuICogICBbamFd44Oe44OG44Oq44Ki44Or44OH44K244Kk44Oz44Gu44Oq44OD44OX44Or5Yq55p6c44KSRE9N6KaB57Sg44Gr6L+95Yqg44GX44G+44GZ44CCWy9qYV1cbiAqIEBjb2RlcGVuIHdLUVdkWlxuICogQHR1dG9yaWFsIHZhbmlsbGEvUmVmZXJlbmNlL3JpcHBsZVxuICogQGd1aWRlIGNyb3NzLXBsYXRmb3JtLXN0eWxpbmdcbiAqICBbZW5dQ3Jvc3MgcGxhdGZvcm0gc3R5bGluZ1svZW5dXG4gKiAgW2phXUNyb3NzIHBsYXRmb3JtIHN0eWxpbmdbL2phXVxuICogQGV4YW1wbGVcbiAqIDxkaXYgY2xhc3M9XCJteS1kaXZcIj5cbiAqICA8b25zLXJpcHBsZT48L29ucy1yaXBwbGU+XG4gKiA8L2Rpdj5cbiAqXG4gKiBAZXhhbXBsZVxuICogPG9ucy1idXR0b24gcmlwcGxlPkNsaWNrIG1lITwvb25zLWJ1dHRvbj5cbiAqL1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUmlwcGxlRWxlbWVudCBleHRlbmRzIEJhc2VFbGVtZW50IHtcblxuICAvKipcbiAgICogQGF0dHJpYnV0ZSBjb2xvclxuICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dQ29sb3Igb2YgdGhlIHJpcHBsZSBlZmZlY3QuWy9lbl1cbiAgICogICBbamFd44Oq44OD44OX44Or44Ko44OV44Kn44Kv44OI44Gu6Imy44KS5oyH5a6a44GX44G+44GZ44CCWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBhdHRyaWJ1dGUgYmFja2dyb3VuZFxuICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dQ29sb3Igb2YgdGhlIGJhY2tncm91bmQuWy9lbl1cbiAgICogICBbamFd6IOM5pmv44Gu6Imy44KS6Kit5a6a44GX44G+44GZ44CCWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBhdHRyaWJ1dGUgZGlzYWJsZWRcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXUlmIHRoaXMgYXR0cmlidXRlIGlzIHNldCwgdGhlIHJpcHBsZSBlZmZlY3Qgd2lsbCBiZSBkaXNhYmxlZC5bL2VuXVxuICAgKiAgIFtqYV3jgZPjga7lsZ7mgKfjgYzoqK3lrprjgZXjgozjgZ/loLTlkIjjgIHjg6rjg4Pjg5fjg6vjgqjjg5Xjgqfjgq/jg4jjga/nhKHlirnjgavjgarjgorjgb7jgZnjgIJbL2phXVxuICAgKi9cblxuICBpbml0KCkge1xuICAgIGNvbnRlbnRSZWFkeSh0aGlzLCAoKSA9PiB0aGlzLl9jb21waWxlKCkpO1xuXG4gICAgdGhpcy5fYW5pbWF0b3IgPSBuZXcgQW5pbWF0b3IoKTtcblxuICAgIFsnY29sb3InLCAnY2VudGVyJywgJ3N0YXJ0LXJhZGl1cycsICdiYWNrZ3JvdW5kJ10uZm9yRWFjaChlID0+IHtcbiAgICAgIHRoaXMuYXR0cmlidXRlQ2hhbmdlZENhbGxiYWNrKGUsIG51bGwsIHRoaXMuZ2V0QXR0cmlidXRlKGUpKTtcbiAgICB9KTtcbiAgfVxuXG4gIF9jb21waWxlKCkge1xuICAgIHRoaXMuY2xhc3NMaXN0LmFkZChkZWZhdWx0Q2xhc3NOYW1lKTtcblxuICAgIHRoaXMuX3dhdmUgPSB0aGlzLmdldEVsZW1lbnRzQnlDbGFzc05hbWUoJ3JpcHBsZV9fd2F2ZScpWzBdO1xuICAgIHRoaXMuX2JhY2tncm91bmQgPSB0aGlzLmdldEVsZW1lbnRzQnlDbGFzc05hbWUoJ3JpcHBsZV9fYmFja2dyb3VuZCcpWzBdO1xuXG4gICAgaWYgKCEodGhpcy5fYmFja2dyb3VuZCAmJiB0aGlzLl93YXZlKSkge1xuICAgICAgdGhpcy5fd2F2ZSA9IHV0aWwuY3JlYXRlKCcucmlwcGxlX193YXZlJyk7XG4gICAgICB0aGlzLl9iYWNrZ3JvdW5kID0gdXRpbC5jcmVhdGUoJy5yaXBwbGVfX2JhY2tncm91bmQnKTtcblxuICAgICAgdGhpcy5hcHBlbmRDaGlsZCh0aGlzLl93YXZlKTtcbiAgICAgIHRoaXMuYXBwZW5kQ2hpbGQodGhpcy5fYmFja2dyb3VuZCk7XG4gICAgfVxuICB9XG5cbiAgX2NhbGN1bGF0ZUNvb3JkcyhlKSB7XG4gICAgdmFyIHgsIHksIGgsIHcsIHI7XG4gICAgdmFyIGIgPSB0aGlzLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICAgIGlmICh0aGlzLl9jZW50ZXIpIHtcbiAgICAgIHggPSBiLndpZHRoIC8gMjtcbiAgICAgIHkgPSBiLmhlaWdodCAvIDI7XG4gICAgICByID0gTWF0aC5zcXJ0KHggKiB4ICsgeSAqIHkpO1xuICAgIH0gZWxzZSB7XG4gICAgICB4ID0gKGUuY2xpZW50WCB8fCBlLmNoYW5nZWRUb3VjaGVzWzBdLmNsaWVudFgpIC0gYi5sZWZ0O1xuICAgICAgeSA9IChlLmNsaWVudFkgfHwgZS5jaGFuZ2VkVG91Y2hlc1swXS5jbGllbnRZKSAtIGIudG9wO1xuICAgICAgaCA9IE1hdGgubWF4KHksIGIuaGVpZ2h0IC0geSk7XG4gICAgICB3ID0gTWF0aC5tYXgoeCwgYi53aWR0aCAtIHgpO1xuICAgICAgciA9IE1hdGguc3FydChoICogaCArIHcgKiB3KTtcbiAgICB9XG4gICAgcmV0dXJuIHt4LCB5LCByfTtcbiAgfVxuXG4gIF9yaXBwbGVBbmltYXRpb24oZSwgZHVyYXRpb24gPSAzMDApIHtcbiAgICB2YXJcbiAgICAgIHtfYW5pbWF0b3IsIF93YXZlLCBfYmFja2dyb3VuZCwgX21pblJ9ID0gdGhpcyxcbiAgICAgIHt4LCB5LCByfSA9IHRoaXMuX2NhbGN1bGF0ZUNvb3JkcyhlKTtcblxuICAgIF9hbmltYXRvci5zdG9wQWxsKHtzdG9wTmV4dDogMX0pO1xuICAgIF9hbmltYXRvci5hbmltYXRlKF9iYWNrZ3JvdW5kLCB7b3BhY2l0eTogMX0sIGR1cmF0aW9uKTtcblxuICAgIHV0aWwuZXh0ZW5kKF93YXZlLnN0eWxlLCB7XG4gICAgICBvcGFjaXR5OiAxLFxuICAgICAgdG9wOiB5IC0gX21pblIgKyAncHgnLFxuICAgICAgbGVmdDogeCAtIF9taW5SICsgJ3B4JyxcbiAgICAgIHdpZHRoOiAyICogX21pblIgKyAncHgnLFxuICAgICAgaGVpZ2h0OiAyICogX21pblIgKyAncHgnXG4gICAgfSk7XG5cbiAgICByZXR1cm4gX2FuaW1hdG9yLmFuaW1hdGUoX3dhdmUsIHtcbiAgICAgIHRvcDogeSAtIHIsXG4gICAgICBsZWZ0OiB4IC0gcixcbiAgICAgIGhlaWdodDogMiAqIHIsXG4gICAgICB3aWR0aDogMiAqIHJcbiAgICB9LCBkdXJhdGlvbik7XG4gIH1cblxuICBfdXBkYXRlUGFyZW50KCkge1xuICAgIGlmICghdGhpcy5fcGFyZW50VXBkYXRlZCAmJiB0aGlzLnBhcmVudE5vZGUpIHtcbiAgICAgIGNvbnN0IGNvbXB1dGVkU3R5bGUgPSB3aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZSh0aGlzLnBhcmVudE5vZGUpO1xuICAgICAgaWYgKGNvbXB1dGVkU3R5bGUuZ2V0UHJvcGVydHlWYWx1ZSgncG9zaXRpb24nKSA9PT0gJ3N0YXRpYycpIHtcbiAgICAgICAgdGhpcy5wYXJlbnROb2RlLnN0eWxlLnBvc2l0aW9uID0gJ3JlbGF0aXZlJztcbiAgICAgIH1cbiAgICAgIHRoaXMuX3BhcmVudFVwZGF0ZWQgPSB0cnVlO1xuICAgIH1cbiAgfVxuXG4gIF9vblRhcChlKSB7XG4gICAgaWYgKCF0aGlzLmRpc2FibGVkKSB7XG4gICAgICB0aGlzLl91cGRhdGVQYXJlbnQoKTtcbiAgICAgIHRoaXMuX3JpcHBsZUFuaW1hdGlvbihlLmdlc3R1cmUuc3JjRXZlbnQpLnRoZW4oKCkgPT4ge1xuICAgICAgICB0aGlzLl9hbmltYXRvci5mYWRlKHRoaXMuX3dhdmUpO1xuICAgICAgICB0aGlzLl9hbmltYXRvci5mYWRlKHRoaXMuX2JhY2tncm91bmQpO1xuICAgICAgfSk7XG4gICAgfVxuICB9XG5cbiAgX29uSG9sZChlKSB7XG4gICAgaWYgKCF0aGlzLmRpc2FibGVkKSB7XG4gICAgICB0aGlzLl91cGRhdGVQYXJlbnQoKTtcbiAgICAgIHRoaXMuX2hvbGRpbmcgPSB0aGlzLl9yaXBwbGVBbmltYXRpb24oZS5nZXN0dXJlLnNyY0V2ZW50LCAyMDAwKTtcbiAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ3JlbGVhc2UnLCB0aGlzLl9ib3VuZE9uUmVsZWFzZSk7XG4gICAgfVxuICB9XG5cbiAgX29uUmVsZWFzZShlKSB7XG4gICAgaWYgKHRoaXMuX2hvbGRpbmcpIHtcbiAgICAgIHRoaXMuX2hvbGRpbmcuc3BlZWQoMzAwKS50aGVuKCgpID0+IHtcbiAgICAgICAgdGhpcy5fYW5pbWF0b3Iuc3RvcEFsbCh7c3RvcE5leHQ6IHRydWV9KTtcbiAgICAgICAgdGhpcy5fYW5pbWF0b3IuZmFkZSh0aGlzLl93YXZlKTtcbiAgICAgICAgdGhpcy5fYW5pbWF0b3IuZmFkZSh0aGlzLl9iYWNrZ3JvdW5kKTtcbiAgICAgIH0pO1xuXG4gICAgICB0aGlzLl9ob2xkaW5nID0gZmFsc2U7XG4gICAgfVxuXG4gICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcigncmVsZWFzZScsIHRoaXMuX2JvdW5kT25SZWxlYXNlKTtcbiAgfVxuXG4gIF9vbkRyYWdTdGFydChlKSB7XG4gICAgaWYgKHRoaXMuX2hvbGRpbmcpIHtcbiAgICAgIHJldHVybiB0aGlzLl9vblJlbGVhc2UoZSk7XG4gICAgfVxuICAgIGlmIChbJ2xlZnQnLCAncmlnaHQnXS5pbmRleE9mKGUuZ2VzdHVyZS5kaXJlY3Rpb24pICE9IC0xKSB7XG4gICAgICB0aGlzLl9vblRhcChlKTtcbiAgICB9XG4gIH1cblxuICBjb25uZWN0ZWRDYWxsYmFjaygpIHtcbiAgICB0aGlzLl9wYXJlbnROb2RlID0gdGhpcy5wYXJlbnROb2RlO1xuICAgIHRoaXMuX2JvdW5kT25UYXAgPSB0aGlzLl9vblRhcC5iaW5kKHRoaXMpO1xuICAgIHRoaXMuX2JvdW5kT25Ib2xkID0gdGhpcy5fb25Ib2xkLmJpbmQodGhpcyk7XG4gICAgdGhpcy5fYm91bmRPbkRyYWdTdGFydCA9IHRoaXMuX29uRHJhZ1N0YXJ0LmJpbmQodGhpcyk7XG4gICAgdGhpcy5fYm91bmRPblJlbGVhc2UgPSB0aGlzLl9vblJlbGVhc2UuYmluZCh0aGlzKTtcblxuICAgIGlmIChpbnRlcm5hbC5jb25maWcuYW5pbWF0aW9uc0Rpc2FibGVkKSB7XG4gICAgICB0aGlzLmRpc2FibGVkID0gdHJ1ZTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5fcGFyZW50Tm9kZS5hZGRFdmVudExpc3RlbmVyKCd0YXAnLCB0aGlzLl9ib3VuZE9uVGFwKTtcbiAgICAgIHRoaXMuX3BhcmVudE5vZGUuYWRkRXZlbnRMaXN0ZW5lcignaG9sZCcsIHRoaXMuX2JvdW5kT25Ib2xkKTtcbiAgICAgIHRoaXMuX3BhcmVudE5vZGUuYWRkRXZlbnRMaXN0ZW5lcignZHJhZ3N0YXJ0JywgdGhpcy5fYm91bmRPbkRyYWdTdGFydCk7XG4gICAgfVxuICB9XG5cbiAgZGlzY29ubmVjdGVkQ2FsbGJhY2soKSB7XG4gICAgY29uc3QgcG4gPSB0aGlzLl9wYXJlbnROb2RlIHx8IHRoaXMucGFyZW50Tm9kZTtcbiAgICBwbi5yZW1vdmVFdmVudExpc3RlbmVyKCd0YXAnLCB0aGlzLl9ib3VuZE9uVGFwKTtcbiAgICBwbi5yZW1vdmVFdmVudExpc3RlbmVyKCdob2xkJywgdGhpcy5fYm91bmRPbkhvbGQpO1xuICAgIHBuLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2RyYWdzdGFydCcsIHRoaXMuX2JvdW5kT25EcmFnU3RhcnQpO1xuICB9XG5cbiAgc3RhdGljIGdldCBvYnNlcnZlZEF0dHJpYnV0ZXMoKSB7XG4gICAgcmV0dXJuIFsnc3RhcnQtcmFkaXVzJywgJ2NvbG9yJywgJ2JhY2tncm91bmQnLCAnY2VudGVyJywgJ2NsYXNzJ107XG4gIH1cblxuICBhdHRyaWJ1dGVDaGFuZ2VkQ2FsbGJhY2sobmFtZSwgbGFzdCwgY3VycmVudCkge1xuICAgIHN3aXRjaCAobmFtZSkge1xuXG4gICAgICBjYXNlICdjbGFzcyc6XG4gICAgICAgIGlmICghdGhpcy5jbGFzc0xpc3QuY29udGFpbnMoZGVmYXVsdENsYXNzTmFtZSkpIHtcbiAgICAgICAgICB0aGlzLmNsYXNzTmFtZSA9IGRlZmF1bHRDbGFzc05hbWUgKyAnICcgKyBjdXJyZW50O1xuICAgICAgICB9XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBjYXNlICdzdGFydC1yYWRpdXMnOlxuICAgICAgICB0aGlzLl9taW5SID0gTWF0aC5tYXgoMCwgcGFyc2VGbG9hdChjdXJyZW50KSB8fCAwKTtcbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIGNhc2UgJ2NvbG9yJzpcbiAgICAgICAgaWYgKGN1cnJlbnQpIHtcbiAgICAgICAgICBjb250ZW50UmVhZHkodGhpcywgKCkgPT4ge1xuICAgICAgICAgICAgdGhpcy5fd2F2ZS5zdHlsZS5iYWNrZ3JvdW5kID0gY3VycmVudDtcbiAgICAgICAgICAgIGlmICghdGhpcy5oYXNBdHRyaWJ1dGUoJ2JhY2tncm91bmQnKSkge1xuICAgICAgICAgICAgICB0aGlzLl9iYWNrZ3JvdW5kLnN0eWxlLmJhY2tncm91bmQgPSBjdXJyZW50O1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBjYXNlICdiYWNrZ3JvdW5kJzpcbiAgICAgICAgaWYgKGN1cnJlbnQgfHwgbGFzdCkge1xuICAgICAgICAgIGlmIChjdXJyZW50ID09PSAnbm9uZScpIHtcbiAgICAgICAgICAgIGNvbnRlbnRSZWFkeSh0aGlzLCAoKSA9PiB7XG4gICAgICAgICAgICAgIHRoaXMuX2JhY2tncm91bmQuc2V0QXR0cmlidXRlKCdkaXNhYmxlZCcsICdkaXNhYmxlZCcpO1xuICAgICAgICAgICAgICB0aGlzLl9iYWNrZ3JvdW5kLnN0eWxlLmJhY2tncm91bmQgPSAndHJhbnNwYXJlbnQnO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNvbnRlbnRSZWFkeSh0aGlzLCAoKSA9PiB7XG4gICAgICAgICAgICAgIGlmICh0aGlzLl9iYWNrZ3JvdW5kLmhhc0F0dHJpYnV0ZSgnZGlzYWJsZWQnKSkge1xuICAgICAgICAgICAgICAgIHRoaXMuX2JhY2tncm91bmQucmVtb3ZlQXR0cmlidXRlKCdkaXNhYmxlZCcpO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIHRoaXMuX2JhY2tncm91bmQuc3R5bGUuYmFja2dyb3VuZCA9IGN1cnJlbnQ7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIGNhc2UgJ2NlbnRlcic6XG4gICAgICAgIGlmIChuYW1lID09PSAnY2VudGVyJykge1xuICAgICAgICAgIHRoaXMuX2NlbnRlciA9IGN1cnJlbnQgIT0gbnVsbCAmJiBjdXJyZW50ICE9ICdmYWxzZSc7XG4gICAgICAgIH1cbiAgICAgICAgYnJlYWs7XG5cbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogQHByb3BlcnR5IGRpc2FibGVkXG4gICAqIEB0eXBlIHtCb29sZWFufVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dV2hldGhlciB0aGUgZWxlbWVudCBpcyBkaXNhYmxlZCBvciBub3QuWy9lbl1cbiAgICogICBbamFd54Sh5Yq55YyW44GV44KM44Gm44GE44KL5aC05ZCI44GrYHRydWVg44CCWy9qYV1cbiAgICovXG4gIHNldCBkaXNhYmxlZCh2YWx1ZSkge1xuICAgIHJldHVybiB1dGlsLnRvZ2dsZUF0dHJpYnV0ZSh0aGlzLCAnZGlzYWJsZWQnLCB2YWx1ZSk7XG4gIH1cblxuICBnZXQgZGlzYWJsZWQoKSB7XG4gICAgcmV0dXJuIHRoaXMuaGFzQXR0cmlidXRlKCdkaXNhYmxlZCcpO1xuICB9XG59XG5cbmN1c3RvbUVsZW1lbnRzLmRlZmluZSgnb25zLXJpcHBsZScsIFJpcHBsZUVsZW1lbnQpO1xuIiwiLypcbkNvcHlyaWdodCAyMDEzLTIwMTUgQVNJQUwgQ09SUE9SQVRJT05cblxuTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbnlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbllvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuXG4gICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcblxuVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG5TZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG5saW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cblxuKi9cblxuaW1wb3J0IEJhc2VFbGVtZW50IGZyb20gJy4uL29ucy9iYXNlLWVsZW1lbnQnO1xuXG4vKipcbiAqIEBlbGVtZW50IG9ucy1yb3dcbiAqIEBjYXRlZ29yeSBncmlkXG4gKiBAZGVzY3JpcHRpb25cbiAqICAgW2VuXVJlcHJlc2VudHMgYSByb3cgaW4gdGhlIGdyaWQgc3lzdGVtLiBVc2Ugd2l0aCBgPG9ucy1jb2w+YCB0byBsYXlvdXQgY29tcG9uZW50cy5bL2VuXVxuICogICBbamFd44Kw44Oq44OD44OJ44K344K544OG44Og44Gr44Gm6KGM44KS5a6a576p44GX44G+44GZ44CCb25zLWNvbOOBqOOBqOOCguOBq+S9v+eUqOOBl+OAgeOCs+ODs+ODneODvOODjeODs+ODiOOBrumFjee9ruOBq+S9v+eUqOOBl+OBvuOBmeOAglsvamFdXG4gKiBAY29kZXBlbiBHZ3VqQyB7d2lkZX1cbiAqIEBndWlkZSBsYXlvdXRpbmdcbiAqICAgW2VuXUxheW91dGluZyBndWlkZVsvZW5dXG4gKiAgIFtqYV3jg6zjgqTjgqLjgqbjg4joqr/mlbRbL2phXVxuICogQHNlZWFsc28gb25zLWNvbFxuICogICBbZW5dVGhlIGA8b25zLWNvbD5gIGNvbXBvbmVudCBpcyB1c2VkIGFzIGNoaWxkcmVuIG9mIGA8b25zLXJvdz5gLlsvZW5dXG4gKiAgIFtqYV1vbnMtY29s44Kz44Oz44Od44O844ON44Oz44OIWy9qYV1cbiAqIEBub3RlXG4gKiAgIFtlbl1Gb3IgQW5kcm9pZCA0LjMgYW5kIGVhcmxpZXIsIGFuZCBpT1M2IGFuZCBlYXJsaWVyLCB3aGVuIHVzaW5nIG1peGVkIGFsaWdubWVudCB3aXRoIG9ucy1yb3cgYW5kIG9ucy1jb2wsIHRoZXkgbWF5IG5vdCBiZSBkaXNwbGF5ZWQgY29ycmVjdGx5LiBZb3UgY2FuIHVzZSBvbmx5IG9uZSB2ZXJ0aWNhbC1hbGlnbi5bL2VuXVxuICogICBbamFdQW5kcm9pZCA0LjPku6XliY3jgIHjgoLjgZfjgY/jga9pT1MgNuS7peWJjeOBrk9T44Gu5aC05ZCI44CBb25zLXJvd+OBqG9ucy1jb2zjgpLntYTjgb/lkIjjgo/jgZvjgabjgZ3jgozjgZ7jgozjga5vbnMtY29s6KaB57Sg44GudmVydGljYWwtYWxpZ27lsZ7mgKfjga7lgKTjgavliKXjgIXjga7lgKTjgpLmjIflrprjgZnjgovjgajjgIHmj4/nlLvjgYzltKnjgozjgovloLTlkIjjgYzjgYLjgorjgb7jgZnjgIJ2ZXJ0aWNhbC1hbGlnbuWxnuaAp+OBruWApOOBq+OBr+S4gOOBpOOBruWApOOBoOOBkeOCkuaMh+WumuOBp+OBjeOBvuOBmeOAglsvamFdXG4gKiBAZXhhbXBsZVxuICogPG9ucy1yb3c+XG4gKiAgIDxvbnMtY29sIHdpZHRoPVwiNTBweFwiPjxvbnMtaWNvbiBpY29uPVwiZmEtdHdpdHRlclwiPjwvb25zLWljb24+PC9vbnMtY29sPlxuICogICA8b25zLWNvbD5UZXh0PC9vbnMtY29sPlxuICogPC9vbnMtcm93PlxuICovXG5cbi8qKlxuICogQGF0dHJpYnV0ZSB2ZXJ0aWNhbC1hbGlnblxuICogQHR5cGUge1N0cmluZ31cbiAqIEBkZXNjcmlwdGlvblxuICogICBbZW5dU2hvcnQgaGFuZCBhdHRyaWJ1dGUgZm9yIGFsaWduaW5nIHZlcnRpY2FsbHkuIFZhbGlkIHZhbHVlcyBhcmUgdG9wLCBib3R0b20sIGFuZCBjZW50ZXIuWy9lbl1cbiAqICAgW2phXee4puOBq+aVtOWIl+OBmeOCi+OBn+OCgeOBq+aMh+WumuOBl+OBvuOBmeOAgnRvcOOAgWJvdHRvbeOAgWNlbnRlcuOBruOBhOOBmuOCjOOBi+OCkuaMh+WumuOBp+OBjeOBvuOBmeOAglsvamFdXG4gKi9cblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUm93RWxlbWVudCBleHRlbmRzIEJhc2VFbGVtZW50IHtcbn1cblxuY3VzdG9tRWxlbWVudHMuZGVmaW5lKCdvbnMtcm93JywgUm93RWxlbWVudCk7XG4iLCIvKlxuQ29weXJpZ2h0IDIwMTMtMjAxNSBBU0lBTCBDT1JQT1JBVElPTlxuXG5MaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xueW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG5cbiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuXG5Vbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG5kaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG5XSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cblNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbmxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuXG4qL1xuXG5pbXBvcnQgdXRpbCBmcm9tICcuLi9vbnMvdXRpbCc7XG5pbXBvcnQgYXV0b1N0eWxlIGZyb20gJy4uL29ucy9hdXRvc3R5bGUnO1xuaW1wb3J0IE1vZGlmaWVyVXRpbCBmcm9tICcuLi9vbnMvaW50ZXJuYWwvbW9kaWZpZXItdXRpbCc7XG5pbXBvcnQgQmFzZUVsZW1lbnQgZnJvbSAnLi4vb25zL2Jhc2UtZWxlbWVudCc7XG5pbXBvcnQgY29udGVudFJlYWR5IGZyb20gJy4uL29ucy9jb250ZW50LXJlYWR5JztcblxuY29uc3Qgc2NoZW1lID0ge1xuICAnJzogJ3NlbGVjdC0qJyxcbiAgJy5zZWxlY3QtaW5wdXQnOiAnc2VsZWN0LWlucHV0LS0qJ1xufTtcblxuY29uc3QgZGVmYXVsdENsYXNzTmFtZSA9ICdzZWxlY3QnO1xuXG5jb25zdCBJTlBVVF9BVFRSSUJVVEVTID0gW1xuICAnYXV0b2ZvY3VzJyxcbiAgJ2Rpc2FibGVkJyxcbiAgJ2Zvcm0nLFxuICAnbXVsdGlwbGUnLFxuICAnbmFtZScsXG4gICdyZXF1aXJlZCcsXG4gICdzaXplJ1xuXTtcblxuLyoqXG4gKiBAZWxlbWVudCBvbnMtc2VsZWN0XG4gKiBAY2F0ZWdvcnkgZm9ybVxuICogQG1vZGlmaWVyIG1hdGVyaWFsXG4gKiAgW2VuXURpc3BsYXlzIGEgTWF0ZXJpYWwgRGVzaWduIHNlbGVjdCBpbnB1dC5bL2VuXVxuICogIFtqYV1bL2phXVxuICogQG1vZGlmaWVyIHVuZGVyYmFyXG4gKiAgW2VuXURpc3BsYXlzIGEgaG9yaXpvbnRhbCBsaW5lIHVuZGVybmVhdGggYSBzZWxlY3QgaW5wdXQuWy9lbl1cbiAqICBbamFdWy9qYV1cbiAqIEBkZXNjcmlwdGlvblxuICogICBbZW5dXG4gKiAgICAgU2VsZWN0IGNvbXBvbmVudC4gSWYgeW91IHdhbnQgdG8gcGxhY2UgYSBzZWxlY3Qgd2l0aCBhbiBJRCBvZiBgbXktaWRgIG9uIGEgcGFnZSwgdXNlIGA8b25zLXNlbGVjdCBzZWxlY3QtaWQ9XCJteS1pZFwiPmAuXG4gKlxuICogICAgIFRoZSBjb21wb25lbnQgd2lsbCBhdXRvbWF0aWNhbGx5IGRpc3BsYXkgYXMgYSBNYXRlcmlhbCBEZXNpZ24gc2VsZWN0IG9uIEFuZHJvaWQuXG4gKlxuICogICAgIE1vc3QgYXR0cmlidXRlcyB0aGF0IGNhbiBiZSB1c2VkIGZvciBhIG5vcm1hbCBgPHNlbGVjdD5gIGVsZW1lbnQgY2FuIGFsc28gYmUgdXNlZCBvbiB0aGUgYDxvbnMtc2VsZWN0PmAgZWxlbWVudC5cbiAqICAgWy9lbl1cbiAqICAgW2phXeOCu+ODrOOCr+ODiOODnOODg+OCr+OCueOCkuihqOekuuOBmeOCi+OCs+ODs+ODneODvOODjeODs+ODiOOBp+OBmeOAgmBzZWxlY3RgIOimgee0oOOBq+S9v+eUqOOBp+OBjeOCi+WxnuaAp+OBruWkmuOBj+OBjCBgb25zLXNlbGVjdGAg6KaB57Sg44Gn44KC5Yip55So44Gn44GN44G+44GZ44CCWy9qYV1cbiAqIEBjb2RlcGVuIGhMYXl4XG4gKiBAdHV0b3JpYWwgdmFuaWxsYS9SZWZlcmVuY2Uvc2VsZWN0XG4gKiBAZ3VpZGUgdXNpbmctbW9kaWZpZXIgW2VuXU1vcmUgZGV0YWlscyBhYm91dCB0aGUgYG1vZGlmaWVyYCBhdHRyaWJ1dGVbL2VuXVtqYV1tb2RpZmllcuWxnuaAp+OBruS9v+OBhOaWuVsvamFdXG4gKiBAZ3VpZGUgY3Jvc3MtcGxhdGZvcm0tc3R5bGluZyBbZW5dSW5mb3JtYXRpb24gYWJvdXQgY3Jvc3MgcGxhdGZvcm0gc3R5bGluZ1svZW5dW2phXUluZm9ybWF0aW9uIGFib3V0IGNyb3NzIHBsYXRmb3JtIHN0eWxpbmdbL2phXVxuICogQGV4YW1wbGVcbiAqIDxvbnMtc2VsZWN0PlxuICogICA8b3B0aW9uIHZhbHVlPVwiMVwiPjE8L29wdGlvbj5cbiAqICAgPG9wdGlvbiB2YWx1ZT1cIjJcIj4ybmQ8L29wdGlvbj5cbiAqICAgPG9wdGlvbiB2YWx1ZT1cIjNcIj4zcmQgb3B0aW9uPC9vcHRpb24+XG4gKiA8L29ucy1zZWxlY3Q+XG4gKi9cblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU2VsZWN0RWxlbWVudCBleHRlbmRzIEJhc2VFbGVtZW50IHtcblxuICAvKipcbiAgICogQGF0dHJpYnV0ZSBhdXRvZm9jdXNcbiAgICogQHR5cGUge0Jvb2xlYW59XG4gICAqIEBkZWZhdWx0IGZhbHNlXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgW2VuXUVsZW1lbnQgYXV0b21hdGljYWxseSBnYWlucyBmb2N1cyBvbiBwYWdlIGxvYWQuWy9lbl1cbiAgICogIFtqYV3jg5rjg7zjgrjjg63jg7zjg4nmmYLjgavjgZPjga7jgrvjg6zjgq/jg4jjg5zjg4Pjgq/jgrnjgavjg5Xjgqnjg7zjgqvjgrnjgYznp7vjgovjgojjgYbjgavjgZfjgb7jgZnjgIJbL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQGF0dHJpYnV0ZSBkaXNhYmxlZFxuICAgKiBAdHlwZSB7Qm9vbGVhbn1cbiAgICogQGRlZmF1bHQgZmFsc2VcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXVNwZWNpZnkgaWYgc2VsZWN0IGlucHV0IHNob3VsZCBiZSBkaXNhYmxlZC5bL2VuXVxuICAgKiAgIFtqYV3jgZPjga7jgrvjg6zjgq/jg4jjg5zjg4Pjgq/jgrnjgpLnhKHlirnljJbjgZnjgovloLTlkIjjgavmjIflrprjgZfjgb7jgZnjgIJbL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQGF0dHJpYnV0ZSBmb3JtXG4gICAqIEB0eXBlIHtTdHJpbmd9XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1Bc3NvY2lhdGUgYSBzZWxlY3QgZWxlbWVudCB0byBhbiBleGlzdGluZyBmb3JtIG9uIHRoZSBwYWdlLCBldmVuIGlmIG5vdCBuZXN0ZWQuWy9lbl1cbiAgICogICBbamFd44GT44Gu44K744Os44Kv44OI44Oc44OD44Kv44K544KS44CB5oyH5a6a44GX44GfIGBmb3JtYCDopoHntKDjgavntJDku5jjgZHjgb7jgZnjgILjgrvjg6zjgq/jg4jjg5zjg4Pjgq/jgrnjgpIgYGZvcm1gIOimgee0oOOBruWkluWBtOOBq+mFjee9ruOBmeOCi+mam+OBq+S9v+eUqOOBl+OBvuOBmeOAglsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAYXR0cmlidXRlIG11bHRpcGxlXG4gICAqIEB0eXBlIHtCb29sZWFufVxuICAgKiBAZGVmYXVsdCBmYWxzZVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogIFtlbl1JZiB0aGlzIGF0dHJpYnV0ZSBpcyBkZWZpbmVkLCBtdWx0aXBsZSBvcHRpb25zIGNhbiBiZSBzZWxlY3RlZCBhdCBvbmNlLlsvZW5dXG4gICAqICBbamFd6YG45oqe6IKi44Gu6KSH5pWw6YG45oqe44KS5pyJ5Yq544Gr44GX44G+44GZ44CCWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBhdHRyaWJ1dGUgbmFtZVxuICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dTmFtZSB0aGUgc2VsZWN0IGVsZW1lbnQsIHVzZWZ1bCBmb3IgaW5zdGFuY2UgaWYgaXQgaXMgcGFydCBvZiBhIGZvcm0uWy9lbl1cbiAgICogICBbamFd44GT44Gu44K744Os44Kv44OI44Oc44OD44Kv44K544Gu5ZCN5YmN44KS5oyH5a6a44GX44G+44GZ44CC6YCa5bi4IGBmb3JtYCDopoHntKDjgajlhbHjgavkvb/nlKjjgZfjgb7jgZnjgIJbL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQGF0dHJpYnV0ZSByZXF1aXJlZFxuICAgKiBAdHlwZSB7Qm9vbGVhbn1cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXU1ha2UgdGhlIHNlbGVjdCBpbnB1dCByZXF1aXJlZCBmb3Igc3VibWl0dGluZyB0aGUgZm9ybSBpdCBpcyBwYXJ0IG9mLlsvZW5dXG4gICAqICAgW2phXeOBk+OBruOCu+ODrOOCr+ODiOODnOODg+OCr+OCueOCkuWFpeWKm+W/hemgiOOBq+OBmeOCi+WgtOWQiOOBq+aMh+WumuOBl+OBvuOBmeOAgumAmuW4uCBgZm9ybWAg6KaB57Sg44Go5YWx44Gr5L2/55So44GX44G+44GZ44CCWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBhdHRyaWJ1dGUgc2VsZWN0LWlkXG4gICAqIEB0eXBlIHtTdHJpbmd9XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1JRCBnaXZlbiB0byB0aGUgaW5uZXIgc2VsZWN0LCB1c2VmdWwgZm9yIGR5bmFtaWMgbWFuaXB1bGF0aW9uLlsvZW5dXG4gICAqICAgW2phXeOBk+OBruOCu+ODrOOCr+ODiOODnOODg+OCr+OCueOBjOWGhemDqOOBq+aMgeOBpCBzZWxlY3Qg6KaB57Sg44Gr5LiO44GI44KLIElEIOOCkuaMh+WumuOBl+OBvuOBmeOAguOCu+ODrOOCr+ODiOODnOODg+OCr+OCueOBruWGheWuueOCkuWLleeahOOBq+WkieabtOOBmeOCi+W/heimgeOBjOOBguOCi+WgtOWQiOOBq+S9v+eUqOOBl+OBvuOBmeOAglsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAYXR0cmlidXRlIHNpemVcbiAgICogQHR5cGUge051bWJlcn1cbiAgICogQGRlZmF1bHQgMVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dSG93IG1hbnkgb3B0aW9ucyBhcmUgZGlzcGxheWVkOyBpZiB0aGVyZSBhcmUgbW9yZSB0aGFuIHRoZSBzaXplIHRoZW4gYSBzY3JvbGwgYXBwZWFycyB0byBuYXZpZ2F0ZSB0aGVtLlsvZW5dXG4gICAqICAgW2phXeS4gOW6puOBq+ihqOekuuOBmeOCi+mBuOaKnuiCouOBruWAi+aVsOOCkuaMh+WumuOBl+OBvuOBmeOAgumBuOaKnuiCouOBjOOBk+OBruWxnuaAp+OBp+aMh+WumuOBl+OBn+WAi+aVsOOCiOOCiuOCguWkmuOBhOWgtOWQiOOAgeOCueOCr+ODreODvOODq+OBjOacieWKueOBq+OBquOCiuOBvuOBmeOAglsvamFdXG4gICAqL1xuXG4gIGluaXQoKSB7XG4gICAgY29udGVudFJlYWR5KHRoaXMsICgpID0+IHtcbiAgICAgIHRoaXMuX2NvbXBpbGUoKTtcbiAgICB9KTtcbiAgfVxuXG4gIHN0YXRpYyBnZXQgb2JzZXJ2ZWRBdHRyaWJ1dGVzKCkge1xuICAgIHJldHVybiBbJ21vZGlmaWVyJywgJ2NsYXNzJywgLi4uSU5QVVRfQVRUUklCVVRFU107XG4gIH1cblxuICBhdHRyaWJ1dGVDaGFuZ2VkQ2FsbGJhY2sobmFtZSwgbGFzdCwgY3VycmVudCkge1xuICAgIHN3aXRjaCAobmFtZSkge1xuICAgICAgY2FzZSAnY2xhc3MnOlxuICAgICAgICBpZiAoIXRoaXMuY2xhc3NMaXN0LmNvbnRhaW5zKGRlZmF1bHRDbGFzc05hbWUpKSB7XG4gICAgICAgICAgdGhpcy5jbGFzc05hbWUgPSBkZWZhdWx0Q2xhc3NOYW1lICsgJyAnICsgY3VycmVudDtcbiAgICAgICAgfVxuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ21vZGlmaWVyJzpcbiAgICAgICAgTW9kaWZpZXJVdGlsLm9uTW9kaWZpZXJDaGFuZ2VkKGxhc3QsIGN1cnJlbnQsIHRoaXMsIHNjaGVtZSk7XG4gICAgICAgIGJyZWFrO1xuICAgIH1cblxuICAgIGlmIChJTlBVVF9BVFRSSUJVVEVTLmluZGV4T2YobmFtZSkgPj0gMCkge1xuICAgICAgY29udGVudFJlYWR5KHRoaXMsICgpID0+IHRoaXMuX3VwZGF0ZUJvdW5kQXR0cmlidXRlcygpKTtcbiAgICB9XG4gIH1cblxuICBnZXQgX3NlbGVjdCgpIHtcbiAgICByZXR1cm4gdGhpcy5xdWVyeVNlbGVjdG9yKCdzZWxlY3QnKTtcbiAgfVxuXG4gIHN0YXRpYyBnZXQgZXZlbnRzKCkge1xuICAgIHJldHVybiBbJ2NoYW5nZSddO1xuICB9XG5cbiAgX3VwZGF0ZUJvdW5kQXR0cmlidXRlcygpIHtcbiAgICBJTlBVVF9BVFRSSUJVVEVTLmZvckVhY2goKGF0dHIpID0+IHtcbiAgICAgIGlmICh0aGlzLmhhc0F0dHJpYnV0ZShhdHRyKSkge1xuICAgICAgICB0aGlzLl9zZWxlY3Quc2V0QXR0cmlidXRlKGF0dHIsIHRoaXMuZ2V0QXR0cmlidXRlKGF0dHIpKTtcbiAgICAgIH1cbiAgICAgIGVsc2Uge1xuICAgICAgICB0aGlzLl9zZWxlY3QucmVtb3ZlQXR0cmlidXRlKGF0dHIpO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwcm9wZXJ0eSBsZW5ndGhcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXU51bWJlciBvZiBvcHRpb25zIGluIHRoZSBzZWxlY3QgYm94LlsvZW5dXG4gICAqICAgW2phXeOBk+OBruOCu+ODrOOCr+ODiOODnOODg+OCr+OCueOBq+WQq+OBvuOCjOOCi+mBuOaKnuiCouOBruWAi+aVsOOCkui/lOOBl+OBvuOBmeOAgiBgc2VsZWN0YCDopoHntKBbL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQHByb3BlcnR5IG9wdGlvbnNcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXVNldmVyYWwgb3B0aW9ucyBmb3IgaGFuZGxpbmcgdGhlIHNlbGVjdCBET00gb2JqZWN0LlsvZW5dXG4gICAqICAgW2phXeOBk+OBruOCu+ODrOOCr+ODiOODnOODg+OCr+OCueOBq+WQq+OBvuOCjOOCiyBgb3B0aW9uYCDopoHntKDjga7phY3liJfjgpLov5TjgZfjgb7jgZnjgIJbL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQHByb3BlcnR5IHNlbGVjdGVkSW5kZXhcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXUluZGV4IG9mIHRoZSBjdXJyZW50bHkgc2VsZWN0ZWQgb3B0aW9uLlsvZW5dXG4gICAqICAgW2phXeePvuWcqOmBuOaKnuOBleOCjOOBpuOBhOOCi+mBuOaKnuiCouOBruOCpOODs+ODh+ODg+OCr+OCueOCkui/lOOBl+OBvuOBmeOAglsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAcHJvcGVydHkgdmFsdWVcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXVZhbHVlIG9mIHRoZSBjdXJyZW50bHkgc2VsZWN0ZWQgb3B0aW9uLlsvZW5dXG4gICAqICAgW2phXeePvuWcqOmBuOaKnuOBleOCjOOBpuOBhOOCi+mBuOaKnuiCouOBruWApOOCkui/lOOBl+OBvuOBmeOAglsvamFdXG4gICAqL1xuICBfY29tcGlsZSgpIHtcbiAgICBhdXRvU3R5bGUucHJlcGFyZSh0aGlzKTtcblxuICAgIHRoaXMuY2xhc3NMaXN0LmFkZChkZWZhdWx0Q2xhc3NOYW1lKTtcbiAgICBjb25zdCBzZWwgPSB0aGlzLl9zZWxlY3QgfHwgZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc2VsZWN0Jyk7XG4gICAgaWYgKCFzZWwuaWQgJiYgdGhpcy5oYXNBdHRyaWJ1dGUoJ3NlbGVjdC1pZCcpKSB7XG4gICAgICBzZWwuaWQgPSB0aGlzLmdldEF0dHJpYnV0ZSgnc2VsZWN0LWlkJyk7XG4gICAgfVxuICAgIHNlbC5jbGFzc0xpc3QuYWRkKCdzZWxlY3QtaW5wdXQnKTtcbiAgICBpZiAoIXRoaXMuX3NlbGVjdCkge1xuICAgICAgdXRpbC5hcnJheUZyb20odGhpcy5jaGlsZE5vZGVzKS5mb3JFYWNoKGVsZW1lbnQgPT4gc2VsLmFwcGVuZENoaWxkKGVsZW1lbnQpKTtcbiAgICAgIHRoaXMuYXBwZW5kQ2hpbGQoc2VsKTtcbiAgICB9XG5cbiAgICBNb2RpZmllclV0aWwuaW5pdE1vZGlmaWVyKHRoaXMsIHNjaGVtZSk7XG5cbiAgICBmb3IgKGNvbnN0IGtleSBvZiBbJ2Rpc2FibGVkJywgJ2xlbmd0aCcsICdtdWx0aXBsZScsICduYW1lJywgJ29wdGlvbnMnLCAnc2VsZWN0ZWRJbmRleCcsICdzaXplJywgJ3ZhbHVlJ10pIHtcbiAgICAgIHRoaXMuX19kZWZpbmVHZXR0ZXJfXyhrZXksICgpID0+IHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX3NlbGVjdFtrZXldO1xuICAgICAgfSk7XG4gICAgICB0aGlzLl9fZGVmaW5lU2V0dGVyX18oa2V5LCAodmFsdWUpID0+IHtcbiAgICAgICAgdGhpcy5fc2VsZWN0W2tleV0gPSB2YWx1ZTtcbiAgICAgIH0pO1xuICAgIH1cbiAgICB0aGlzLl9fZGVmaW5lR2V0dGVyX18oJ2Zvcm0nLCAoKSA9PiB7XG4gICAgICByZXR1cm4gdGhpcy5fc2VsZWN0Wydmb3JtJ107XG4gICAgfSk7XG4gICAgdGhpcy5fX2RlZmluZUdldHRlcl9fKCd0eXBlJywgKCkgPT4ge1xuICAgICAgcmV0dXJuIHRoaXMuX3NlbGVjdFsndHlwZSddO1xuICAgIH0pO1xuXG4gICAgdGhpcy5hZGQgPSAob3B0aW9uLCBpbmRleCA9IG51bGwpID0+IHtcbiAgICAgIHRoaXMuX3NlbGVjdC5hZGQob3B0aW9uLCBpbmRleCk7XG4gICAgfVxuICAgIHRoaXMucmVtb3ZlID0gKGluZGV4KSA9PiB7XG4gICAgICB0aGlzLl9zZWxlY3QucmVtb3ZlKGluZGV4KTtcbiAgICB9XG4gIH1cbn1cblxuY3VzdG9tRWxlbWVudHMuZGVmaW5lKCdvbnMtc2VsZWN0JywgU2VsZWN0RWxlbWVudCk7XG4iLCIvKlxuQ29weXJpZ2h0IDIwMTMtMjAxNSBBU0lBTCBDT1JQT1JBVElPTlxuTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbnlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbllvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG5Vbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG5kaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG5XSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cblNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbmxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuKi9cblxuaW1wb3J0IHV0aWwgZnJvbSAnLi4vb25zL3V0aWwnO1xuaW1wb3J0IGF1dG9TdHlsZSBmcm9tICcuLi9vbnMvYXV0b3N0eWxlJztcbmltcG9ydCBNb2RpZmllclV0aWwgZnJvbSAnLi4vb25zL2ludGVybmFsL21vZGlmaWVyLXV0aWwnO1xuaW1wb3J0IEJhc2VFbGVtZW50IGZyb20gJy4uL29ucy9iYXNlLWVsZW1lbnQnO1xuXG5jb25zdCBkZWZhdWx0Q2xhc3NOYW1lID0gJ2ZhYiBmYWItLW1pbmkgc3BlZWQtZGlhbF9faXRlbSc7XG5cbmNvbnN0IHNjaGVtZSA9IHtcbiAgJyc6ICdzcGVlZC1kaWFsX19pdGVtLS0qJyxcbn07XG5cbi8qKlxuICogQGVsZW1lbnQgb25zLXNwZWVkLWRpYWwtaXRlbVxuICogQGNhdGVnb3J5IGNvbnRyb2xcbiAqIEBkZXNjcmlwdGlvblxuICogICBbZW5dXG4gKiAgICAgVGhpcyBjb21wb25lbnQgZGlzcGxheXMgdGhlIGNoaWxkIGVsZW1lbnRzIG9mIHRoZSBNYXRlcmlhbCBEZXNpZ24gU3BlZWQgZGlhbCBjb21wb25lbnQuXG4gKiAgIFsvZW5dXG4gKiAgIFtqYV1cbiAqICAgICBNYXRlcmlhbCBEZXNpZ27jga5TcGVlZCBkaWFs44Gu5a2Q6KaB57Sg44KS6KGo54++44GZ44KL6KaB57Sg44Gn44GZ44CCXG4gKiAgIFsvamFdXG4gKiBAY29kZXBlbiBkWVFZTGdcbiAqIEB0dXRvcmlhbCB2YW5pbGxhL1JlZmVyZW5jZS9zcGVlZC1kaWFsXG4gKiBAc2VlYWxzbyBvbnMtc3BlZWQtZGlhbFxuICogICBbZW5dVGhlIGA8b25zLXNwZWVkLWRpYWw+YCBjb21wb25lbnQuWy9lbl1cbiAqICAgW2phXW9ucy1zcGVlZC1kaWFs44Kz44Oz44Od44O844ON44Oz44OIWy9qYV1cbiAqIEBzZWVhbHNvIG9ucy1mYWJcbiAqICAgW2VuXW9ucy1mYWIgY29tcG9uZW50Wy9lbl1cbiAqICAgW2phXW9ucy1mYWLjgrPjg7Pjg53jg7zjg43jg7Pjg4hbL2phXVxuICogQGV4YW1wbGVcbiAqIDxvbnMtc3BlZWQtZGlhbCBwb3NpdGlvbj1cImxlZnQgYm90dG9tXCI+XG4gKiAgIDxvbnMtZmFiPlxuICogICAgIDxvbnMtaWNvbiBpY29uPVwiZmEtdHdpdHRlclwiPjwvb25zLWljb24+XG4gKiAgIDwvb25zLWZhYj5cbiAqICAgPG9ucy1zcGVlZC1kaWFsLWl0ZW0+QTwvb25zLXNwZWVkLWRpYWwtaXRlbT5cbiAqICAgPG9ucy1zcGVlZC1kaWFsLWl0ZW0+Qjwvb25zLXNwZWVkLWRpYWwtaXRlbT5cbiAqICAgPG9ucy1zcGVlZC1kaWFsLWl0ZW0+Qzwvb25zLXNwZWVkLWRpYWwtaXRlbT5cbiAqIDwvb25zLXNwZWVkLWRpYWw+XG4gKi9cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFNwZWVkRGlhbEl0ZW1FbGVtZW50IGV4dGVuZHMgQmFzZUVsZW1lbnQge1xuXG4gIC8qKlxuICAgKiBAYXR0cmlidXRlIG1vZGlmaWVyXG4gICAqIEB0eXBlIHtTdHJpbmd9XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1UaGUgYXBwZWFyYW5jZSBvZiB0aGUgY29tcG9uZW50LlsvZW5dXG4gICAqICAgW2phXeOBk+OBruOCs+ODs+ODneODvOODjeODs+ODiOOBruihqOePvuOCkuaMh+WumuOBl+OBvuOBmeOAglsvamFdXG4gICAqL1xuXG4gIGluaXQoKSB7XG4gICAgdGhpcy5fY29tcGlsZSgpO1xuICAgIHRoaXMuX2JvdW5kT25DbGljayA9IHRoaXMuX29uQ2xpY2suYmluZCh0aGlzKTtcbiAgfVxuXG4gIHN0YXRpYyBnZXQgb2JzZXJ2ZWRBdHRyaWJ1dGVzKCkge1xuICAgIHJldHVybiBbJ21vZGlmaWVyJywgJ3JpcHBsZScsICdjbGFzcyddO1xuICB9XG5cbiAgYXR0cmlidXRlQ2hhbmdlZENhbGxiYWNrKG5hbWUsIGxhc3QsIGN1cnJlbnQpIHtcbiAgICBzd2l0Y2ggKG5hbWUpIHtcbiAgICAgIGNhc2UgJ2NsYXNzJzpcbiAgICAgICAgdGhpcy5fdXBkYXRlQ2xhc3NOYW1lKGN1cnJlbnQpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ21vZGlmaWVyJzpcbiAgICAgICAgTW9kaWZpZXJVdGlsLm9uTW9kaWZpZXJDaGFuZ2VkKGxhc3QsIGN1cnJlbnQsIHRoaXMsIHNjaGVtZSk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAncmlwcGxlJzpcbiAgICAgICAgdGhpcy5fdXBkYXRlUmlwcGxlKCk7XG4gICAgfVxuICB9XG5cbiAgX3VwZGF0ZUNsYXNzTmFtZShjbGFzc05hbWUpIHtcbiAgICBpZiAoIWRlZmF1bHRDbGFzc05hbWUuc3BsaXQoL1xccysvKS5ldmVyeSh0b2tlbiA9PiB7XG4gICAgICByZXR1cm4gdGhpcy5jbGFzc0xpc3QuY29udGFpbnModG9rZW4pO1xuICAgIH0pKSB7XG4gICAgICB0aGlzLmNsYXNzTmFtZSA9IGRlZmF1bHRDbGFzc05hbWUgKyAnICcgKyBjbGFzc05hbWU7XG4gICAgfVxuICB9XG5cbiAgY29ubmVjdGVkQ2FsbGJhY2soKSB7XG4gICAgdGhpcy5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMuX2JvdW5kT25DbGljaywgZmFsc2UpO1xuICB9XG5cbiAgZGlzY29ubmVjdGVkQ2FsbGJhY2soKSB7XG4gICAgdGhpcy5yZW1vdmVFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMuX2JvdW5kT25DbGljaywgZmFsc2UpO1xuICB9XG5cbiAgX3VwZGF0ZVJpcHBsZSgpIHtcbiAgICB1dGlsLnVwZGF0ZVJpcHBsZSh0aGlzKTtcbiAgfVxuXG4gIF9vbkNsaWNrKGUpIHtcbiAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xuICB9XG5cbiAgX2NvbXBpbGUoKSB7XG4gICAgYXV0b1N0eWxlLnByZXBhcmUodGhpcyk7XG5cbiAgICBkZWZhdWx0Q2xhc3NOYW1lLnNwbGl0KC9cXHMrLykuZm9yRWFjaCh0b2tlbiA9PiB7XG4gICAgICB0aGlzLmNsYXNzTGlzdC5hZGQodG9rZW4pO1xuICAgIH0pO1xuXG4gICAgdGhpcy5fdXBkYXRlUmlwcGxlKCk7XG5cbiAgICBNb2RpZmllclV0aWwuaW5pdE1vZGlmaWVyKHRoaXMsIHNjaGVtZSk7XG4gIH1cbn1cblxuY3VzdG9tRWxlbWVudHMuZGVmaW5lKCdvbnMtc3BlZWQtZGlhbC1pdGVtJywgU3BlZWREaWFsSXRlbUVsZW1lbnQpO1xuIiwiLypcbkNvcHlyaWdodCAyMDEzLTIwMTUgQVNJQUwgQ09SUE9SQVRJT05cblxuTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbnlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbllvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuXG4gICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcblxuVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG5TZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG5saW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cblxuKi9cblxuaW1wb3J0IHV0aWwgZnJvbSAnLi4vb25zL3V0aWwnO1xuXG4vKipcbiAqIE1pbmltYWwgdXRpbGl0eSBsaWJyYXJ5IGZvciBtYW5pcHVsYXRpbmcgZWxlbWVudCdzIHN0eWxlLlxuICovXG5jb25zdCBzdHlsZXIgPSBmdW5jdGlvbihlbGVtZW50LCBzdHlsZSkge1xuICByZXR1cm4gc3R5bGVyLmNzcy5hcHBseShzdHlsZXIsIGFyZ3VtZW50cyk7XG59O1xuXG4vKipcbiAqIFNldCBlbGVtZW50J3Mgc3R5bGUuXG4gKlxuICogQHBhcmFtIHtFbGVtZW50fSBlbGVtZW50XG4gKiBAcGFyYW0ge09iamVjdH0gc3R5bGVzXG4gKiBAcmV0dXJuIHtFbGVtZW50fVxuICovXG5zdHlsZXIuY3NzID0gZnVuY3Rpb24oZWxlbWVudCwgc3R5bGVzKSB7XG4gIHZhciBrZXlzID0gT2JqZWN0LmtleXMoc3R5bGVzKTtcbiAga2V5cy5mb3JFYWNoKGZ1bmN0aW9uKGtleSkge1xuICAgIGlmIChrZXkgaW4gZWxlbWVudC5zdHlsZSkge1xuICAgICAgZWxlbWVudC5zdHlsZVtrZXldID0gc3R5bGVzW2tleV07XG4gICAgfSBlbHNlIGlmIChzdHlsZXIuX3ByZWZpeChrZXkpIGluIGVsZW1lbnQuc3R5bGUpIHtcbiAgICAgIGVsZW1lbnQuc3R5bGVbc3R5bGVyLl9wcmVmaXgoa2V5KV0gPSBzdHlsZXNba2V5XTtcbiAgICB9IGVsc2Uge1xuICAgICAgdXRpbC53YXJuKCdObyBzdWNoIHN0eWxlIHByb3BlcnR5OiAnICsga2V5KTtcbiAgICB9XG4gIH0pO1xuICByZXR1cm4gZWxlbWVudDtcbn07XG5cbi8qKlxuICogQWRkIHZlbmRvciBwcmVmaXguXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IG5hbWVcbiAqIEByZXR1cm4ge1N0cmluZ31cbiAqL1xuc3R5bGVyLl9wcmVmaXggPSAoZnVuY3Rpb24oKSB7XG4gIHZhciBzdHlsZXMgPSB3aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZShkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQsICcnKTtcbiAgdmFyIHByZWZpeCA9IChBcnJheS5wcm90b3R5cGUuc2xpY2VcbiAgICAuY2FsbChzdHlsZXMpXG4gICAgLmpvaW4oJycpXG4gICAgLm1hdGNoKC8tKG1venx3ZWJraXR8bXMpLS8pIHx8IChzdHlsZXMuT0xpbmsgPT09ICcnICYmIFsnJywgJ28nXSlcbiAgKVsxXTtcblxuICByZXR1cm4gZnVuY3Rpb24obmFtZSkge1xuICAgIHJldHVybiBwcmVmaXggKyBuYW1lLnN1YnN0cigwLCAxKS50b1VwcGVyQ2FzZSgpICsgbmFtZS5zdWJzdHIoMSk7XG4gIH07XG59KSgpO1xuXG4vKipcbiAqIEBwYXJhbSB7RWxlbWVudH0gZWxlbWVudFxuICovXG5zdHlsZXIuY2xlYXIgPSBmdW5jdGlvbihlbGVtZW50KSB7XG4gIHN0eWxlci5fY2xlYXIoZWxlbWVudCk7XG59O1xuXG4vKipcbiAqIEBwYXJhbSB7RWxlbWVudH0gZWxlbWVudFxuICovXG5zdHlsZXIuX2NsZWFyID0gZnVuY3Rpb24oZWxlbWVudCkge1xuICB2YXIgbGVuID0gZWxlbWVudC5zdHlsZS5sZW5ndGg7XG4gIHZhciBzdHlsZSA9IGVsZW1lbnQuc3R5bGU7XG4gIHZhciBrZXlzID0gW107XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbGVuOyBpKyspIHtcbiAgICBrZXlzLnB1c2goc3R5bGVbaV0pO1xuICB9XG5cbiAga2V5cy5mb3JFYWNoKGZ1bmN0aW9uKGtleSkge1xuICAgIHN0eWxlW2tleV0gPSAnJztcbiAgfSk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBzdHlsZXI7XG4iLCIvKlxuQ29weXJpZ2h0IDIwMTMtMjAxNSBBU0lBTCBDT1JQT1JBVElPTlxuTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbnlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbllvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG5Vbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG5kaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG5XSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cblNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbmxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuKi9cblxuaW1wb3J0IHV0aWwgZnJvbSAnLi4vb25zL3V0aWwnO1xuaW1wb3J0IGF1dG9TdHlsZSBmcm9tICcuLi9vbnMvYXV0b3N0eWxlJztcbmltcG9ydCBNb2RpZmllclV0aWwgZnJvbSAnLi4vb25zL2ludGVybmFsL21vZGlmaWVyLXV0aWwnO1xuaW1wb3J0IEJhc2VFbGVtZW50IGZyb20gJy4uL29ucy9iYXNlLWVsZW1lbnQnO1xuaW1wb3J0IGNvbnRlbnRSZWFkeSBmcm9tICcuLi9vbnMvY29udGVudC1yZWFkeSc7XG5pbXBvcnQgc3R5bGVyIGZyb20gJy4uL2xpYi9zdHlsZXInO1xuXG5jb25zdCBkZWZhdWx0Q2xhc3NOYW1lID0gJ3NwZWVkLWRpYWwnO1xuY29uc3Qgc2NoZW1lID0ge1xuICAnJzogJ3NwZWVkLWRpYWwtLSonLFxufTtcblxuLyoqXG4gKiBAZWxlbWVudCBvbnMtc3BlZWQtZGlhbFxuICogQGNhdGVnb3J5IGNvbnRyb2xcbiAqIEBkZXNjcmlwdGlvblxuICogICBbZW5dXG4gKiAgICAgRWxlbWVudCB0aGF0IGRpc3BsYXlzIGEgTWF0ZXJpYWwgRGVzaWduIFNwZWVkIERpYWxvZyBjb21wb25lbnQuIEl0IGlzIHVzZWZ1bCB3aGVuIHRoZXJlIGFyZSBtb3JlIHRoYW4gb25lIHByaW1hcnkgYWN0aW9uIHRoYXQgY2FuIGJlIHBlcmZvcm1lZCBpbiBhIHBhZ2UuXG4gKlxuICogICAgIFRoZSBTcGVlZCBkaWFsIGxvb2tzIGxpa2UgYSBgPG9ucy1mYWI+YCBlbGVtZW50IGJ1dCB3aWxsIGV4cGFuZCBhIG1lbnUgd2hlbiB0YXBwZWQuXG4gKiAgIFsvZW5dXG4gKiAgIFtqYV1bL2phXVxuICogQGNvZGVwZW4gZFlRWUxnXG4gKiBAdHV0b3JpYWwgdmFuaWxsYS9SZWZlcmVuY2Uvc3BlZWQtZGlhbFxuICogQHNlZWFsc28gb25zLXNwZWVkLWRpYWwtaXRlbVxuICogICBbZW5dVGhlIGA8b25zLXNwZWVkLWRpYWwtaXRlbT5gIHJlcHJlc2VudHMgYSBtZW51IGl0ZW0uWy9lbl1cbiAqICAgW2phXW9ucy1zcGVlZC1kaWFsLWl0ZW3jgrPjg7Pjg53jg7zjg43jg7Pjg4hbL2phXVxuICogQHNlZWFsc28gb25zLWZhYlxuICogICBbZW5db25zLWZhYiBjb21wb25lbnRbL2VuXVxuICogICBbamFdb25zLWZhYuOCs+ODs+ODneODvOODjeODs+ODiFsvamFdXG4gKiBAZXhhbXBsZVxuICogPG9ucy1zcGVlZC1kaWFsIHBvc2l0aW9uPVwibGVmdCBib3R0b21cIj5cbiAqICAgPG9ucy1mYWI+XG4gKiAgICAgPG9ucy1pY29uIGljb249XCJmYS10d2l0dGVyXCI+PC9vbnMtaWNvbj5cbiAqICAgPC9vbnMtZmFiPlxuICogICA8b25zLXNwZWVkLWRpYWwtaXRlbT5BPC9vbnMtc3BlZWQtZGlhbC1pdGVtPlxuICogICA8b25zLXNwZWVkLWRpYWwtaXRlbT5CPC9vbnMtc3BlZWQtZGlhbC1pdGVtPlxuICogICA8b25zLXNwZWVkLWRpYWwtaXRlbT5DPC9vbnMtc3BlZWQtZGlhbC1pdGVtPlxuICogPC9vbnMtc3BlZWQtZGlhbD5cbiAqL1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU3BlZWREaWFsRWxlbWVudCBleHRlbmRzIEJhc2VFbGVtZW50IHtcblxuICAvKipcbiAgICogQGV2ZW50IG9wZW5cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXUZpcmVkIHdoZW4gdGhlIG1lbnUgaXRlbXMgYXJlIHNob3duLlsvZW5dXG4gICAqICAgW2phXVsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAZXZlbnQgY2xvc2VcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXUZpcmVkIHdoZW4gdGhlIG1lbnUgaXRlbXMgYXJlIGhpZGRlbi5bL2VuXVxuICAgKiAgIFtqYV1bL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQGF0dHJpYnV0ZSBtb2RpZmllclxuICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dVGhlIGFwcGVhcmFuY2Ugb2YgdGhlIGNvbXBvbmVudC5bL2VuXVxuICAgKiAgIFtqYV3jgZPjga7jgrPjg7Pjg53jg7zjg43jg7Pjg4jjga7ooajnj77jgpLmjIflrprjgZfjgb7jgZnjgIJbL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQGF0dHJpYnV0ZSBwb3NpdGlvblxuICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dXG4gICAqICAgICBTcGVjaWZ5IHRoZSB2ZXJ0aWNhbCBhbmQgaG9yaXpvbnRhbCBwb3NpdGlvbiBvZiB0aGUgY29tcG9uZW50LlxuICAgKiAgICAgSS5lLiB0byBkaXNwbGF5IGl0IGluIHRoZSB0b3AgcmlnaHQgY29ybmVyIHNwZWNpZnkgXCJyaWdodCB0b3BcIi5cbiAgICogICAgIENob29zZSBmcm9tIFwicmlnaHRcIiwgXCJsZWZ0XCIsIFwidG9wXCIgYW5kIFwiYm90dG9tXCIuXG4gICAqICAgWy9lbl1cbiAgICogICBbamFdXG4gICAqICAgICDjgZPjga7opoHntKDjgpLooajnpLrjgZnjgovlt6blj7PjgajkuIrkuIvjga7kvY3nva7jgpLmjIflrprjgZfjgb7jgZnjgIJcbiAgICogICAgIOS+i+OBiOOBsOOAgeWPs+S4iuOBq+ihqOekuuOBmeOCi+WgtOWQiOOBq+OBr1wicmlnaHQgdG9wXCLjgpLmjIflrprjgZfjgb7jgZnjgIJcbiAgICogICAgIOW3puWPs+OBqOS4iuS4i+OBruS9jee9ruOBruaMh+WumuOBq+OBr+OAgXJpZ2h044GobGVmdOOAgXRvcOOBqGJvdHRvbeOBjOOBneOCjOOBnuOCjOaMh+WumuOBp+OBjeOBvuOBmeOAglxuICAgKiAgIFsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAYXR0cmlidXRlIGRpcmVjdGlvblxuICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dU3BlY2lmeSB0aGUgZGlyZWN0aW9uIHRoZSBpdGVtcyBhcmUgZGlzcGxheWVkLiBQb3NzaWJsZSB2YWx1ZXMgYXJlIFwidXBcIiwgXCJkb3duXCIsIFwibGVmdFwiIGFuZCBcInJpZ2h0XCIuWy9lbl1cbiAgICogICBbamFdXG4gICAqICAgICDopoHntKDjgYzooajnpLrjgZnjgovmlrnlkJHjgpLmjIflrprjgZfjgb7jgZnjgIJ1cCwgZG93biwgbGVmdCwgcmlnaHTjgYzmjIflrprjgafjgY3jgb7jgZnjgIJcbiAgICogICBbL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQGF0dHJpYnV0ZSBkaXNhYmxlZFxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dU3BlY2lmeSBpZiBidXR0b24gc2hvdWxkIGJlIGRpc2FibGVkLlsvZW5dXG4gICAqICAgW2phXeeEoeWKueWMluOBmeOCi+WgtOWQiOOBq+aMh+WumuOBl+OBvuOBmeOAglsvamFdXG4gICAqL1xuXG4gIGluaXQoKSB7XG4gICAgY29udGVudFJlYWR5KHRoaXMsICgpID0+IHtcbiAgICAgIHRoaXMuX2NvbXBpbGUoKTtcbiAgICB9KTtcblxuICAgIHRoaXMuX2l0ZW1TaG93biA9IGZhbHNlO1xuICAgIHRoaXMuX2JvdW5kT25DbGljayA9IHRoaXMuX29uQ2xpY2suYmluZCh0aGlzKTtcbiAgfVxuXG4gIF9jb21waWxlKCkge1xuICAgIHRoaXMuY2xhc3NMaXN0LmFkZChkZWZhdWx0Q2xhc3NOYW1lKTtcbiAgICBhdXRvU3R5bGUucHJlcGFyZSh0aGlzKTtcbiAgICB0aGlzLl91cGRhdGVSaXBwbGUoKTtcbiAgICBNb2RpZmllclV0aWwuaW5pdE1vZGlmaWVyKHRoaXMsIHNjaGVtZSk7XG5cbiAgICBpZiAodGhpcy5oYXNBdHRyaWJ1dGUoJ2RpcmVjdGlvbicpKSB7XG4gICAgICB0aGlzLl91cGRhdGVEaXJlY3Rpb24odGhpcy5nZXRBdHRyaWJ1dGUoJ2RpcmVjdGlvbicpKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5fdXBkYXRlRGlyZWN0aW9uKCd1cCcpO1xuICAgIH1cblxuICAgIHRoaXMuX3VwZGF0ZVBvc2l0aW9uKCk7XG4gIH1cblxuICBzdGF0aWMgZ2V0IG9ic2VydmVkQXR0cmlidXRlcygpIHtcbiAgICByZXR1cm4gWydjbGFzcycsICdtb2RpZmllcicsICdyaXBwbGUnLCAnZGlyZWN0aW9uJywgJ3Bvc2l0aW9uJ107XG4gIH1cblxuICBhdHRyaWJ1dGVDaGFuZ2VkQ2FsbGJhY2sobmFtZSwgbGFzdCwgY3VycmVudCkge1xuICAgIHN3aXRjaCAobmFtZSkge1xuICAgICAgY2FzZSAnY2xhc3MnOlxuICAgICAgICBpZiAoIXRoaXMuY2xhc3NMaXN0LmNvbnRhaW5zKGRlZmF1bHRDbGFzc05hbWUpKSB7XG4gICAgICAgICAgdGhpcy5jbGFzc05hbWUgPSBkZWZhdWx0Q2xhc3NOYW1lICsgJyAnICsgY3VycmVudDtcbiAgICAgICAgfVxuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ21vZGlmaWVyJzpcbiAgICAgICAgTW9kaWZpZXJVdGlsLm9uTW9kaWZpZXJDaGFuZ2VkKGxhc3QsIGN1cnJlbnQsIHRoaXMsIHNjaGVtZSk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAncmlwcGxlJzpcbiAgICAgICAgY29udGVudFJlYWR5KHRoaXMsICgpID0+IHRoaXMuX3VwZGF0ZVJpcHBsZSgpKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlICdkaXJlY3Rpb24nOlxuICAgICAgICBjb250ZW50UmVhZHkodGhpcywgKCkgPT4gdGhpcy5fdXBkYXRlRGlyZWN0aW9uKGN1cnJlbnQpKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlICdwb3NpdGlvbic6XG4gICAgICAgIGNvbnRlbnRSZWFkeSh0aGlzLCAoKSA9PiB0aGlzLl91cGRhdGVQb3NpdGlvbigpKTtcbiAgICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG5cbiAgY29ubmVjdGVkQ2FsbGJhY2soKSB7XG4gICAgdGhpcy5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMuX2JvdW5kT25DbGljaywgZmFsc2UpO1xuICB9XG5cbiAgZGlzY29ubmVjdGVkQ2FsbGJhY2soKSB7XG4gICAgdGhpcy5yZW1vdmVFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMuX2JvdW5kT25DbGljaywgZmFsc2UpO1xuICB9XG5cbiAgZ2V0IGl0ZW1zKCkge1xuICAgIHJldHVybiB1dGlsLmFycmF5RnJvbSh0aGlzLnF1ZXJ5U2VsZWN0b3JBbGwoJ29ucy1zcGVlZC1kaWFsLWl0ZW0nKSk7XG4gIH1cblxuICBnZXQgX2ZhYigpIHtcbiAgICByZXR1cm4gdXRpbC5maW5kQ2hpbGQodGhpcywgJ29ucy1mYWInKTtcbiAgfVxuXG4gIF9vbkNsaWNrKGUpIHtcbiAgICBpZiAodGhpcy5vbkNsaWNrKSB7XG4gICAgICB0aGlzLm9uQ2xpY2suYXBwbHkodGhpcyk7XG4gICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKCk7XG4gICAgfSBlbHNlIGlmICghdGhpcy5kaXNhYmxlZCAmJiB0aGlzLnZpc2libGUpIHtcbiAgICAgIHJldHVybiB0aGlzLnRvZ2dsZUl0ZW1zKCk7XG4gICAgfVxuICB9XG5cbiAgX3Nob3coKSB7XG4gICAgaWYgKCF0aGlzLmlubGluZSkge1xuICAgICAgcmV0dXJuIHRoaXMuc2hvdygpO1xuICAgIH1cbiAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKCk7XG4gIH1cblxuICBfaGlkZSgpIHtcbiAgICByZXR1cm4gbmV3IFByb21pc2UocmVzb2x2ZSA9PiB7XG4gICAgICBpZiAoIXRoaXMuaW5saW5lKSB7XG4gICAgICAgIHNldEltbWVkaWF0ZSgoKSA9PiB0aGlzLmhpZGUoKS50aGVuKHJlc29sdmUpKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJlc29sdmUoKTtcbiAgICAgIH1cbiAgICB9KVxuICB9XG5cbiAgX3VwZGF0ZVJpcHBsZSgpIHtcbiAgICBpZiAodGhpcy5fZmFiKSB7XG4gICAgICB0aGlzLmhhc0F0dHJpYnV0ZSgncmlwcGxlJykgPyB0aGlzLl9mYWIuc2V0QXR0cmlidXRlKCdyaXBwbGUnLCAnJykgOiB0aGlzLl9mYWIucmVtb3ZlQXR0cmlidXRlKCdyaXBwbGUnKTtcbiAgICB9XG4gIH1cblxuICBfdXBkYXRlRGlyZWN0aW9uKGRpcmVjdGlvbikge1xuICAgIGNvbnN0IGNoaWxkcmVuID0gdGhpcy5pdGVtcztcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGNoaWxkcmVuLmxlbmd0aDsgaSsrKSB7XG4gICAgICBzdHlsZXIoY2hpbGRyZW5baV0sIHtcbiAgICAgICAgdHJhbnNpdGlvbkRlbGF5OiAyNSAqIGkgKyAnbXMnLFxuICAgICAgICBib3R0b206ICdhdXRvJyxcbiAgICAgICAgcmlnaHQ6ICdhdXRvJyxcbiAgICAgICAgdG9wOiAnYXV0bycsXG4gICAgICAgIGxlZnQ6ICdhdXRvJ1xuICAgICAgfSk7XG4gICAgfVxuICAgIHN3aXRjaCAoZGlyZWN0aW9uKSB7XG4gICAgICBjYXNlICd1cCc6XG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgY2hpbGRyZW4ubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICBjaGlsZHJlbltpXS5zdHlsZS5ib3R0b20gPSA3MiArIDU2ICogaSArICdweCc7XG4gICAgICAgICAgY2hpbGRyZW5baV0uc3R5bGUucmlnaHQgPSAnOHB4JztcbiAgICAgICAgfVxuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ2Rvd24nOlxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGNoaWxkcmVuLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgY2hpbGRyZW5baV0uc3R5bGUudG9wID0gNzIgKyA1NiAqIGkgKyAncHgnO1xuICAgICAgICAgIGNoaWxkcmVuW2ldLnN0eWxlLmxlZnQgPSAnOHB4JztcbiAgICAgICAgfVxuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ2xlZnQnOlxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGNoaWxkcmVuLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgY2hpbGRyZW5baV0uc3R5bGUudG9wID0gJzhweCc7XG4gICAgICAgICAgY2hpbGRyZW5baV0uc3R5bGUucmlnaHQgPSA3MiArIDU2ICogaSArICdweCc7XG4gICAgICAgIH1cbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlICdyaWdodCc6XG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgY2hpbGRyZW4ubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICBjaGlsZHJlbltpXS5zdHlsZS50b3AgPSAnOHB4JztcbiAgICAgICAgICBjaGlsZHJlbltpXS5zdHlsZS5sZWZ0ID0gNzIgKyA1NiAqIGkgKyAncHgnO1xuICAgICAgICB9XG4gICAgICAgIGJyZWFrO1xuICAgICAgZGVmYXVsdDpcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdBcmd1bWVudCBtdXN0IGJlIG9uZSBvZiB1cCwgZG93biwgbGVmdCBvciByaWdodC4nKTtcbiAgICB9XG4gIH1cblxuICBfdXBkYXRlUG9zaXRpb24oKSB7XG4gICAgY29uc3QgcG9zaXRpb24gPSB0aGlzLmdldEF0dHJpYnV0ZSgncG9zaXRpb24nKTtcbiAgICB0aGlzLmNsYXNzTGlzdC5yZW1vdmUoXG4gICAgICAnZmFiLS10b3BfX2xlZnQnLFxuICAgICAgJ2ZhYi0tYm90dG9tX19yaWdodCcsXG4gICAgICAnZmFiLS1ib3R0b21fX2xlZnQnLFxuICAgICAgJ2ZhYi0tdG9wX19yaWdodCcsXG4gICAgICAnZmFiLS10b3BfX2NlbnRlcicsXG4gICAgICAnZmFiLS1ib3R0b21fX2NlbnRlcicpO1xuICAgIHN3aXRjaChwb3NpdGlvbikge1xuICAgICAgY2FzZSAndG9wIHJpZ2h0JzpcbiAgICAgIGNhc2UgJ3JpZ2h0IHRvcCc6XG4gICAgICAgIHRoaXMuY2xhc3NMaXN0LmFkZCgnZmFiLS10b3BfX3JpZ2h0Jyk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAndG9wIGxlZnQnOlxuICAgICAgY2FzZSAnbGVmdCB0b3AnOlxuICAgICAgICB0aGlzLmNsYXNzTGlzdC5hZGQoJ2ZhYi0tdG9wX19sZWZ0Jyk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnYm90dG9tIHJpZ2h0JzpcbiAgICAgIGNhc2UgJ3JpZ2h0IGJvdHRvbSc6XG4gICAgICAgIHRoaXMuY2xhc3NMaXN0LmFkZCgnZmFiLS1ib3R0b21fX3JpZ2h0Jyk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnYm90dG9tIGxlZnQnOlxuICAgICAgY2FzZSAnbGVmdCBib3R0b20nOlxuICAgICAgICB0aGlzLmNsYXNzTGlzdC5hZGQoJ2ZhYi0tYm90dG9tX19sZWZ0Jyk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnY2VudGVyIHRvcCc6XG4gICAgICBjYXNlICd0b3AgY2VudGVyJzpcbiAgICAgICAgdGhpcy5jbGFzc0xpc3QuYWRkKCdmYWItLXRvcF9fY2VudGVyJyk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnY2VudGVyIGJvdHRvbSc6XG4gICAgICBjYXNlICdib3R0b20gY2VudGVyJzpcbiAgICAgICAgdGhpcy5jbGFzc0xpc3QuYWRkKCdmYWItLWJvdHRvbV9fY2VudGVyJyk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgZGVmYXVsdDpcbiAgICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIEBtZXRob2Qgc2hvd1xuICAgKiBAc2lnbmF0dXJlIHNob3coKVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dU2hvdyB0aGUgc3BlZWQgZGlhbC5bL2VuXVxuICAgKiAgIFtqYV1TcGVlZCBkaWFs44KS6KGo56S644GX44G+44GZ44CCWy9qYV1cbiAgICovXG4gIHNob3coKSB7XG4gICAgdGhpcy5fZmFiLnNob3coKTtcbiAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKCk7XG4gIH1cblxuICAvKipcbiAgICogQG1ldGhvZCBoaWRlXG4gICAqIEBzaWduYXR1cmUgaGlkZSgpXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1IaWRlIHRoZSBzcGVlZCBkaWFsLlsvZW5dXG4gICAqICAgW2phXVNwZWVkIGRpYWzjgpLpnZ7ooajnpLrjgavjgZfjgb7jgZnjgIJbL2phXVxuICAgKi9cbiAgaGlkZSgpIHtcbiAgICByZXR1cm4gdGhpcy5oaWRlSXRlbXMoKS50aGVuKCgpPT4gdGhpcy5fZmFiLmhpZGUoKSk7XG4gIH1cblxuICAvKipcbiAgICogQG1ldGhvZCBzaG93SXRlbXNcbiAgICogQHNpZ25hdHVyZSBzaG93SXRlbXMoKVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dU2hvdyB0aGUgc3BlZWQgZGlhbCBpdGVtcy5bL2VuXVxuICAgKiAgIFtqYV1TcGVlZCBkaWFs44Gu5a2Q6KaB57Sg44KS6KGo56S644GX44G+44GZ44CCWy9qYV1cbiAgICovXG4gIHNob3dJdGVtcygpIHtcbiAgICBpZiAodGhpcy5oYXNBdHRyaWJ1dGUoJ2RpcmVjdGlvbicpKSB7XG4gICAgICB0aGlzLl91cGRhdGVEaXJlY3Rpb24odGhpcy5nZXRBdHRyaWJ1dGUoJ2RpcmVjdGlvbicpKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5fdXBkYXRlRGlyZWN0aW9uKCd1cCcpO1xuICAgIH1cblxuICAgIGxldCB0b3RhbERlbGF5ID0gMDtcbiAgICBpZiAoIXRoaXMuX2l0ZW1TaG93bikge1xuICAgICAgY29uc3QgY2hpbGRyZW4gPSB0aGlzLml0ZW1zO1xuICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBjaGlsZHJlbi5sZW5ndGg7IGkrKykge1xuICAgICAgICBjb25zdCBkZWxheSA9IDI1ICogaTtcbiAgICAgICAgdG90YWxEZWxheSArPSBkZWxheTtcbiAgICAgICAgc3R5bGVyKGNoaWxkcmVuW2ldLCB7XG4gICAgICAgICAgdHJhbnNmb3JtOiAnc2NhbGUoMSknLFxuICAgICAgICAgIHRyYW5zaXRpb25EZWxheTogZGVsYXkgKyAnbXMnXG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgICAgdG90YWxEZWxheSArPSA1MDtcblxuICAgICAgdGhpcy5faXRlbVNob3duID0gdHJ1ZTtcbiAgICAgIHV0aWwudHJpZ2dlckVsZW1lbnRFdmVudCh0aGlzLCAnb3BlbicpO1xuICAgIH1cblxuICAgIGNvbnN0IGRlZmVycmVkID0gdXRpbC5kZWZlcigpO1xuICAgIHNldFRpbWVvdXQoZGVmZXJyZWQucmVzb2x2ZSwgdG90YWxEZWxheSk7XG4gICAgcmV0dXJuIGRlZmVycmVkLnByb21pc2U7XG4gIH1cblxuICAvKipcbiAgICogQG1ldGhvZCBoaWRlSXRlbXNcbiAgICogQHNpZ25hdHVyZSBoaWRlSXRlbXMoKVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dSGlkZSB0aGUgc3BlZWQgZGlhbCBpdGVtcy5bL2VuXVxuICAgKiAgIFtqYV1TcGVlZCBkaWFs44Gu5a2Q6KaB57Sg44KS6Z2e6KGo56S644Gr44GX44G+44GZ44CCWy9qYV1cbiAgICovXG4gIGhpZGVJdGVtcygpIHtcbiAgICBsZXQgdG90YWxEZWxheSA9IDA7XG4gICAgaWYgKHRoaXMuX2l0ZW1TaG93bikge1xuICAgICAgY29uc3QgY2hpbGRyZW4gPSB0aGlzLml0ZW1zO1xuICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBjaGlsZHJlbi5sZW5ndGg7IGkrKykge1xuICAgICAgICBjb25zdCBkZWxheSA9IDI1ICogKGNoaWxkcmVuLmxlbmd0aCAtIGkpO1xuICAgICAgICB0b3RhbERlbGF5ICs9IGRlbGF5O1xuICAgICAgICBzdHlsZXIoY2hpbGRyZW5baV0sIHtcbiAgICAgICAgICB0cmFuc2Zvcm06ICdzY2FsZSgwKScsXG4gICAgICAgICAgdHJhbnNpdGlvbkRlbGF5OiBkZWxheSArICdtcydcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgICB0b3RhbERlbGF5ICs9IDUwO1xuXG4gICAgICB0aGlzLl9pdGVtU2hvd24gPSBmYWxzZTtcbiAgICAgIHV0aWwudHJpZ2dlckVsZW1lbnRFdmVudCh0aGlzLCAnY2xvc2UnKTtcbiAgICB9XG5cbiAgICBjb25zdCBkZWZlcnJlZCA9IHV0aWwuZGVmZXIoKTtcbiAgICBzZXRUaW1lb3V0KGRlZmVycmVkLnJlc29sdmUsIHRvdGFsRGVsYXkpO1xuICAgIHJldHVybiBkZWZlcnJlZC5wcm9taXNlO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwcm9wZXJ0eSBkaXNhYmxlZFxuICAgKiBAdHlwZSB7Qm9vbGVhbn1cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXVdoZXRoZXIgdGhlIGVsZW1lbnQgaXMgZGlzYWJsZWQgb3Igbm90LlsvZW5dXG4gICAqICAgW2phXeeEoeWKueWMluOBleOCjOOBpuOBhOOCi+WgtOWQiOOBq2B0cnVlYOOAglsvamFdXG4gICAqL1xuICBzZXQgZGlzYWJsZWQodmFsdWUpIHtcbiAgICBpZiAodmFsdWUpIHtcbiAgICAgIHRoaXMuaGlkZUl0ZW1zKCk7XG4gICAgfVxuICAgIHV0aWwuYXJyYXlGcm9tKHRoaXMuY2hpbGRyZW4pLmZvckVhY2goZSA9PiB7XG4gICAgICB1dGlsLm1hdGNoKGUsICcuZmFiJykgJiYgdXRpbC50b2dnbGVBdHRyaWJ1dGUoZSwgJ2Rpc2FibGVkJywgdmFsdWUpO1xuICAgIH0pO1xuXG4gICAgcmV0dXJuIHV0aWwudG9nZ2xlQXR0cmlidXRlKHRoaXMsICdkaXNhYmxlZCcsIHZhbHVlKTtcbiAgfVxuXG4gIGdldCBkaXNhYmxlZCgpIHtcbiAgICByZXR1cm4gdGhpcy5oYXNBdHRyaWJ1dGUoJ2Rpc2FibGVkJyk7XG4gIH1cblxuICAvKipcbiAgICogQHByb3BlcnR5IGlubGluZVxuICAgKiBAcmVhZG9ubHlcbiAgICogQHR5cGUge0Jvb2xlYW59XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1XaGV0aGVyIHRoZSBlbGVtZW50IGlzIGlubGluZSBvciBub3QuWy9lbl1cbiAgICogICBbamFd44Kk44Oz44Op44Kk44Oz6KaB57Sg44Gu5aC05ZCI44GrYHRydWVg44CCWy9qYV1cbiAgICovXG4gIGdldCBpbmxpbmUoKSB7XG4gICAgcmV0dXJuIHRoaXMuaGFzQXR0cmlidXRlKCdpbmxpbmUnKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcHJvcGVydHkgdmlzaWJsZVxuICAgKiBAcmVhZG9ubHlcbiAgICogQHR5cGUge0Jvb2xlYW59XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1XaGV0aGVyIHRoZSBlbGVtZW50IGlzIHZpc2libGUgb3Igbm90LlsvZW5dXG4gICAqICAgW2phXeimgee0oOOBjOimi+OBiOOCi+WgtOWQiOOBq2B0cnVlYOOAglsvamFdXG4gICAqL1xuICBnZXQgdmlzaWJsZSgpIHtcbiAgICByZXR1cm4gdGhpcy5fZmFiLnZpc2libGUgJiYgdGhpcy5zdHlsZS5kaXNwbGF5ICE9PSAnbm9uZSc7XG4gIH1cblxuICAvKipcbiAgICogQG1ldGhvZCBpc09wZW5cbiAgICogQHNpZ25hdHVyZSBpc09wZW4oKVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dUmV0dXJucyB3aGV0aGVyIHRoZSBtZW51IGlzIG9wZW4gb3Igbm90LlsvZW5dXG4gICAqICAgW2phXVsvamFdXG4gICAqL1xuICBpc09wZW4oKSB7XG4gICAgcmV0dXJuIHRoaXMuX2l0ZW1TaG93bjtcbiAgfVxuXG4gIC8qKlxuICAgKiBAbWV0aG9kIHRvZ2dsZVxuICAgKiBAc2lnbmF0dXJlIHRvZ2dsZSgpXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1Ub2dnbGUgdmlzaWJpbGl0eS5bL2VuXVxuICAgKiAgIFtqYV1TcGVlZCBkaWFs44Gu6KGo56S66Z2e6KGo56S644KS5YiH44KK5pu/44GI44G+44GZ44CCWy9qYV1cbiAgICovXG4gIHRvZ2dsZSgpIHtcbiAgICByZXR1cm4gdGhpcy52aXNpYmxlID8gdGhpcy5oaWRlKCkgOiB0aGlzLnNob3coKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAbWV0aG9kIHRvZ2dsZUl0ZW1zXG4gICAqIEBzaWduYXR1cmUgdG9nZ2xlSXRlbXMoKVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dVG9nZ2xlIGl0ZW0gdmlzaWJpbGl0eS5bL2VuXVxuICAgKiAgIFtqYV1TcGVlZCBkaWFs44Gu5a2Q6KaB57Sg44Gu6KGo56S66Z2e6KGo56S644KS5YiH44KK5pu/44GI44G+44GZ44CCWy9qYV1cbiAgICovXG4gIHRvZ2dsZUl0ZW1zKCkge1xuICAgIHJldHVybiB0aGlzLmlzT3BlbigpID8gdGhpcy5oaWRlSXRlbXMoKSA6IHRoaXMuc2hvd0l0ZW1zKCk7XG4gIH1cblxuICBzdGF0aWMgZ2V0IGV2ZW50cygpIHtcbiAgICByZXR1cm4gWydvcGVuJywgJ2Nsb3NlJ107XG4gIH1cbn1cblxuY3VzdG9tRWxlbWVudHMuZGVmaW5lKCdvbnMtc3BlZWQtZGlhbCcsIFNwZWVkRGlhbEVsZW1lbnQpO1xuIiwiLypcbkNvcHlyaWdodCAyMDEzLTIwMTUgQVNJQUwgQ09SUE9SQVRJT05cblxuTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbnlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbllvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuXG4gICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcblxuVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG5TZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG5saW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cblxuKi9cblxuaW1wb3J0IHV0aWwgZnJvbSAnLi4vb25zL3V0aWwnO1xuaW1wb3J0IGludGVybmFsIGZyb20gJy4uL29ucy9pbnRlcm5hbCc7XG5pbXBvcnQgTW9kaWZpZXJVdGlsIGZyb20gJy4uL29ucy9pbnRlcm5hbC9tb2RpZmllci11dGlsJztcbmltcG9ydCBCYXNlRWxlbWVudCBmcm9tICcuLi9vbnMvYmFzZS1lbGVtZW50JztcbmltcG9ydCB7UGFnZUxvYWRlciwgZGVmYXVsdFBhZ2VMb2FkZXJ9IGZyb20gJy4uL29ucy9wYWdlLWxvYWRlcic7XG5pbXBvcnQgY29udGVudFJlYWR5IGZyb20gJy4uL29ucy9jb250ZW50LXJlYWR5JztcblxuY29uc3QgcmV3cml0YWJsZXMgPSB7XG4gIC8qKlxuICAgKiBAcGFyYW0ge0VsZW1lbnR9IGVsZW1lbnRcbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gY2FsbGJhY2tcbiAgICovXG4gIHJlYWR5KGVsZW1lbnQsIGNhbGxiYWNrKSB7XG4gICAgc2V0SW1tZWRpYXRlKGNhbGxiYWNrKTtcbiAgfVxufTtcblxuLyoqXG4gKiBAZWxlbWVudCBvbnMtc3BsaXR0ZXItY29udGVudFxuICogQGNhdGVnb3J5IG1lbnVcbiAqIEBkZXNjcmlwdGlvblxuICogIFtlbl1cbiAqICAgIFRoZSBgPG9ucy1zcGxpdHRlci1jb250ZW50PmAgZWxlbWVudCBpcyB1c2VkIGFzIGEgY2hpbGQgZWxlbWVudCBvZiBgPG9ucy1zcGxpdHRlcj5gLlxuICpcbiAqICAgIEl0IGNvbnRhaW5zIHRoZSBtYWluIGNvbnRlbnQgb2YgdGhlIHBhZ2Ugd2hpbGUgYDxvbnMtc3BsaXR0ZXItc2lkZT5gIGNvbnRhaW5zIHRoZSBsaXN0LlxuICogIFsvZW5dXG4gKiAgW2phXW9ucy1zcGxpdHRlci1jb250ZW506KaB57Sg44Gv44CBb25zLXNwbGl0dGVy6KaB57Sg44Gu5a2Q6KaB57Sg44Go44GX44Gm5Yip55So44GX44G+44GZ44CCWy9qYV1cbiAqIEBjb2RlcGVuIHJPUU9NTFxuICogQHR1dG9yaWFsIHZhbmlsbGEvUmVmZXJlbmNlL3NwbGl0dGVyXG4gKiBAZ3VpZGUgbXVsdGlwbGUtcGFnZS1uYXZpZ2F0aW9uXG4gKiAgW2VuXU1hbmFnaW5nIG11bHRpcGxlIHBhZ2VzLlsvZW5dXG4gKiAgW2phXU1hbmFnaW5nIG11bHRpcGxlIHBhZ2VzWy9qYV1cbiAqIEBzZWVhbHNvIG9ucy1zcGxpdHRlclxuICogIFtlbl1UaGUgYDxvbnMtc3BsaXR0ZXI+YCBjb21wb25lbnQgaXMgdGhlIHBhcmVudCBlbGVtZW50LlsvZW5dXG4gKiAgW2phXW9ucy1zcGxpdHRlcuOCs+ODs+ODneODvOODjeODs+ODiFsvamFdXG4gKiBAc2VlYWxzbyBvbnMtc3BsaXR0ZXItc2lkZVxuICogIFtlbl1UaGUgYDxvbnMtc3BsaXR0ZXItc2lkZT5gIGNvbXBvbmVudCBjb250YWlucyB0aGUgbWVudS5bL2VuXVxuICogIFtqYV1vbnMtc3BsaXR0ZXItc2lkZeOCs+ODs+ODneODvOODjeODs+ODiFsvamFdXG4gKiBAZXhhbXBsZVxuICogPG9ucy1zcGxpdHRlcj5cbiAqICAgPG9ucy1zcGxpdHRlci1jb250ZW50PlxuICogICAgIC4uLlxuICogICA8L29ucy1zcGxpdHRlci1jb250ZW50PlxuICpcbiAqICAgPG9ucy1zcGxpdHRlci1zaWRlIHNpZGU9XCJsZWZ0XCIgd2lkdGg9XCI4MCVcIiBjb2xsYXBzZT5cbiAqICAgICAuLi5cbiAqICAgPC9vbnMtc3BsaXR0ZXItc2lkZT5cbiAqIDwvb25zLXNwbGl0dGVyPlxuICovXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBTcGxpdHRlckNvbnRlbnRFbGVtZW50IGV4dGVuZHMgQmFzZUVsZW1lbnQge1xuXG4gIC8qKlxuICAgKiBAYXR0cmlidXRlIHBhZ2VcbiAgICogQHR5cGUge1N0cmluZ31cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXVxuICAgKiAgICAgVGhlIHVybCBvZiB0aGUgY29udGVudCBwYWdlLiBJZiB0aGlzIGF0dHJpYnV0ZSBpcyB1c2VkIHRoZSBjb250ZW50IHdpbGwgYmUgbG9hZGVkIGZyb20gYSBgPG9ucy10ZW1wbGF0ZT5gIHRhZyBvciBhIHJlbW90ZSBmaWxlLlxuICAgKlxuICAgKiAgICAgSXQgaXMgYWxzbyBwb3NzaWJsZSB0byBwdXQgYDxvbnMtcGFnZT5gIGVsZW1lbnQgYXMgYSBjaGlsZCBvZiB0aGUgZWxlbWVudC5cbiAgICogICBbL2VuXVxuICAgKiAgIFtqYV1vbnMtc3BsaXR0ZXItY29udGVudOimgee0oOOBq+ihqOekuuOBmeOCi+ODmuODvOOCuOOBrlVSTOOCkuaMh+WumuOBl+OBvuOBmeOAglsvamFdXG4gICAqL1xuXG4gIGluaXQoKSB7XG4gICAgdGhpcy5fcGFnZSA9IG51bGw7XG4gICAgdGhpcy5fcGFnZUxvYWRlciA9IGRlZmF1bHRQYWdlTG9hZGVyO1xuXG4gICAgY29udGVudFJlYWR5KHRoaXMsICgpID0+IHtcbiAgICAgIHJld3JpdGFibGVzLnJlYWR5KHRoaXMsICgpID0+IHtcbiAgICAgICAgY29uc3QgcGFnZSA9IHRoaXMuX2dldFBhZ2VUYXJnZXQoKTtcblxuICAgICAgICBpZiAocGFnZSkge1xuICAgICAgICAgIHRoaXMubG9hZChwYWdlKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cblxuICBjb25uZWN0ZWRDYWxsYmFjaygpIHtcbiAgICBpZiAoIXV0aWwubWF0Y2godGhpcy5wYXJlbnROb2RlLCAnb25zLXNwbGl0dGVyJykpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihgXCJvbnMtc3BsaXR0ZXItY29udGVudFwiIG11c3QgaGF2ZSBcIm9ucy1zcGxpdHRlclwiIGFzIHBhcmVudE5vZGUuYCk7XG4gICAgfVxuICB9XG5cbiAgX2dldFBhZ2VUYXJnZXQoKSB7XG4gICAgcmV0dXJuIHRoaXMuX3BhZ2UgfHwgdGhpcy5nZXRBdHRyaWJ1dGUoJ3BhZ2UnKTtcbiAgfVxuXG4gIGRpc2Nvbm5lY3RlZENhbGxiYWNrKCkge31cblxuICBzdGF0aWMgZ2V0IG9ic2VydmVkQXR0cmlidXRlcygpIHtcbiAgICByZXR1cm4gW107XG4gIH1cblxuICBhdHRyaWJ1dGVDaGFuZ2VkQ2FsbGJhY2sobmFtZSwgbGFzdCwgY3VycmVudCkge1xuICB9XG5cbiAgLyoqXG4gICAqIEBwcm9wZXJ0eSBwYWdlXG4gICAqIEB0eXBlIHtIVE1MRWxlbWVudH1cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXVRoZSBwYWdlIHRvIGxvYWQgaW4gdGhlIHNwbGl0dGVyIGNvbnRlbnQuWy9lbl1cbiAgICogICBbamFd44GT44Gu6KaB57Sg5YaF44Gr6KGo56S644GZ44KL44Oa44O844K444KS5oyH5a6a44GX44G+44GZ44CCWy9qYV1cbiAgICovXG4gIGdldCBwYWdlKCkge1xuICAgIHJldHVybiB0aGlzLl9wYWdlO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7Kn0gcGFnZVxuICAgKi9cbiAgc2V0IHBhZ2UocGFnZSkge1xuICAgIHRoaXMuX3BhZ2UgPSBwYWdlO1xuICB9XG5cbiAgZ2V0IF9jb250ZW50KCkge1xuICAgIHJldHVybiB0aGlzLmNoaWxkcmVuWzBdO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwcm9wZXJ0eSBwYWdlTG9hZGVyXG4gICAqIEB0eXBlIHtGdW5jdGlvbn1cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXVBhZ2UgZWxlbWVudCBsb2FkZWQgaW4gdGhlIHNwbGl0dGVyIGNvbnRlbnQuWy9lbl1cbiAgICogICBbamFd44GT44Gu6KaB57Sg5YaF44Gr6KGo56S644GZ44KL44Oa44O844K444KS5oyH5a6a44GX44G+44GZ44CCWy9qYV1cbiAgICovXG4gIGdldCBwYWdlTG9hZGVyKCkge1xuICAgIHJldHVybiB0aGlzLl9wYWdlTG9hZGVyO1xuICB9XG5cbiAgc2V0IHBhZ2VMb2FkZXIobG9hZGVyKSB7XG4gICAgaWYgKCEobG9hZGVyIGluc3RhbmNlb2YgUGFnZUxvYWRlcikpIHtcbiAgICAgIHRocm93IEVycm9yKCdGaXJzdCBwYXJhbWV0ZXIgbXVzdCBiZSBhbiBpbnN0YW5jZSBvZiBQYWdlTG9hZGVyJyk7XG4gICAgfVxuICAgIHRoaXMuX3BhZ2VMb2FkZXIgPSBsb2FkZXI7XG4gIH1cblxuICAvKipcbiAgICogQG1ldGhvZCBsb2FkXG4gICAqIEBzaWduYXR1cmUgbG9hZChwYWdlLCBbb3B0aW9uc10pXG4gICAqIEBwYXJhbSB7U3RyaW5nfSBwYWdlLCBbb3B0aW9uc11cbiAgICogICBbZW5dUGFnZSBVUkwuIENhbiBiZSBlaXRoZXIgYW4gSFRNTCBkb2N1bWVudCBvciBhbiBgPG9ucy10ZW1wbGF0ZT5gIGlkLlsvZW5dXG4gICAqICAgW2phXXBhZ2Xjga5VUkzjgYvjgIFvbnMtdGVtcGxhdGXjgaflrqPoqIDjgZfjgZ/jg4bjg7Pjg5fjg6zjg7zjg4jjga5pZOWxnuaAp+OBruWApOOCkuaMh+WumuOBl+OBvuOBmeOAglsvamFdXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0aW9uc11cbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gW29wdGlvbnMuY2FsbGJhY2tdXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1TaG93IHRoZSBwYWdlIHNwZWNpZmllZCBpbiBgcGFnZWAgaW4gdGhlIGNvbnRlbnQuWy9lbl1cbiAgICogICBbamFd5oyH5a6a44GX44GfVVJM44KS44Oh44Kk44Oz44Oa44O844K444KS6Kqt44G/6L6844G/44G+44GZ44CCWy9qYV1cbiAgICogQHJldHVybiB7UHJvbWlzZX1cbiAgICogICBbZW5dUmVzb2x2ZXMgdG8gdGhlIG5ldyBgPG9ucy1wYWdlPmAgZWxlbWVudFsvZW5dXG4gICAqICAgW2phXWA8b25zLXBhZ2U+YOimgee0oOOCkuino+axuuOBmeOCi1Byb21pc2Xjgqrjg5bjgrjjgqfjgq/jg4jjgpLov5TjgZfjgb7jgZnjgIJbL2phXVxuICAgKi9cbiAgbG9hZChwYWdlLCBvcHRpb25zID0ge30pIHtcbiAgICB0aGlzLl9wYWdlID0gcGFnZTtcbiAgICBjb25zdCBjYWxsYmFjayA9IG9wdGlvbnMuY2FsbGJhY2sgfHwgZnVuY3Rpb24oKSB7fTtcblxuICAgIHJldHVybiBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHtcbiAgICAgIGxldCBvbGRDb250ZW50ID0gdGhpcy5fY29udGVudCB8fCBudWxsO1xuXG4gICAgICB0aGlzLl9wYWdlTG9hZGVyLmxvYWQoe3BhZ2UsIHBhcmVudDogdGhpc30sIHBhZ2VFbGVtZW50ID0+IHtcbiAgICAgICAgaWYgKG9sZENvbnRlbnQpIHtcbiAgICAgICAgICB0aGlzLl9wYWdlTG9hZGVyLnVubG9hZChvbGRDb250ZW50KTtcbiAgICAgICAgICBvbGRDb250ZW50ID0gbnVsbDtcbiAgICAgICAgfVxuXG4gICAgICAgIHNldEltbWVkaWF0ZSgoKSA9PiB0aGlzLl9zaG93KCkpO1xuXG4gICAgICAgIGNhbGxiYWNrKHBhZ2VFbGVtZW50KTtcbiAgICAgICAgcmVzb2x2ZShwYWdlRWxlbWVudCk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxuXG4gIF9zaG93KCkge1xuICAgIGlmICh0aGlzLl9jb250ZW50KSB7XG4gICAgICB0aGlzLl9jb250ZW50Ll9zaG93KCk7XG4gICAgfVxuICB9XG5cbiAgX2hpZGUoKSB7XG4gICAgaWYgKHRoaXMuX2NvbnRlbnQpIHtcbiAgICAgIHRoaXMuX2NvbnRlbnQuX2hpZGUoKTtcbiAgICB9XG4gIH1cblxuICBfZGVzdHJveSgpIHtcbiAgICBpZiAodGhpcy5fY29udGVudCkge1xuICAgICAgdGhpcy5fcGFnZUxvYWRlci51bmxvYWQodGhpcy5fY29udGVudCk7XG4gICAgfVxuICAgIHRoaXMucmVtb3ZlKCk7XG4gIH1cblxuICBzdGF0aWMgZ2V0IHJld3JpdGFibGVzKCkge1xuICAgIHJldHVybiByZXdyaXRhYmxlcztcbiAgfVxufVxuXG5jdXN0b21FbGVtZW50cy5kZWZpbmUoJ29ucy1zcGxpdHRlci1jb250ZW50JywgU3BsaXR0ZXJDb250ZW50RWxlbWVudCk7XG4iLCIvKlxuQ29weXJpZ2h0IDIwMTMtMjAxNSBBU0lBTCBDT1JQT1JBVElPTlxuXG5MaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xueW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG5cbiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuXG5Vbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG5kaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG5XSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cblNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbmxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuXG4qL1xuXG5pbXBvcnQgQmFzZUVsZW1lbnQgZnJvbSAnLi4vb25zL2Jhc2UtZWxlbWVudCc7XG5pbXBvcnQgdXRpbCBmcm9tICcuLi9vbnMvdXRpbCc7XG5pbXBvcnQgY29udGVudFJlYWR5IGZyb20gJy4uL29ucy9jb250ZW50LXJlYWR5JztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU3BsaXR0ZXJNYXNrRWxlbWVudCBleHRlbmRzIEJhc2VFbGVtZW50IHtcblxuICBpbml0KCkge1xuICAgIHRoaXMuX2JvdW5kT25DbGljayA9IHRoaXMuX29uQ2xpY2suYmluZCh0aGlzKTtcbiAgICBjb250ZW50UmVhZHkodGhpcywgKCkgPT4ge1xuICAgICAgaWYgKHRoaXMucGFyZW50Tm9kZS5fc2lkZXMuZXZlcnkoc2lkZSA9PiBzaWRlLm1vZGUgPT09ICdzcGxpdCcpKSB7XG4gICAgICAgIHRoaXMuc2V0QXR0cmlidXRlKCdzdHlsZScsICdkaXNwbGF5OiBub25lICFpbXBvcnRhbnQnKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIF9vbkNsaWNrKGV2ZW50KSB7XG4gICAgaWYgKHRoaXMub25DbGljayBpbnN0YW5jZW9mIEZ1bmN0aW9uKSB7XG4gICAgICB0aGlzLm9uQ2xpY2soKTtcbiAgICB9IGVsc2UgaWYgKHV0aWwubWF0Y2godGhpcy5wYXJlbnROb2RlLCAnb25zLXNwbGl0dGVyJykpIHtcbiAgICAgIHRoaXMucGFyZW50Tm9kZS5fc2lkZXMuZm9yRWFjaChzaWRlID0+IHNpZGUuY2xvc2UoJ2xlZnQnKS5jYXRjaCgoKSA9PiB7fSkpO1xuICAgIH1cbiAgICBldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcbiAgfVxuXG4gIHN0YXRpYyBnZXQgb2JzZXJ2ZWRBdHRyaWJ1dGVzKCkge1xuICAgIHJldHVybiBbXTtcbiAgfVxuXG4gIGF0dHJpYnV0ZUNoYW5nZWRDYWxsYmFjayhuYW1lLCBsYXN0LCBjdXJyZW50KSB7XG4gIH1cblxuICBjb25uZWN0ZWRDYWxsYmFjaygpIHtcbiAgICB0aGlzLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdGhpcy5fYm91bmRPbkNsaWNrKTtcbiAgfVxuXG4gIGRpc2Nvbm5lY3RlZENhbGxiYWNrKCkge1xuICAgIHRoaXMucmVtb3ZlRXZlbnRMaXN0ZW5lcignY2xpY2snLCB0aGlzLl9ib3VuZE9uQ2xpY2spO1xuICB9XG59XG5cbmN1c3RvbUVsZW1lbnRzLmRlZmluZSgnb25zLXNwbGl0dGVyLW1hc2snLCBTcGxpdHRlck1hc2tFbGVtZW50KTtcbiIsIi8qXG5Db3B5cmlnaHQgMjAxMy0yMDE1IEFTSUFMIENPUlBPUkFUSU9OXG5cbkxpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG55b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG5Zb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcblxuICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG5cblVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbmRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbldJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxubGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5cbiovXG5cbmltcG9ydCB1dGlsIGZyb20gJy4uLy4uL29ucy91dGlsJztcbmltcG9ydCBjb250ZW50UmVhZHkgZnJvbSAnLi4vLi4vb25zL2NvbnRlbnQtcmVhZHknO1xuaW1wb3J0IGFuaW1pdCBmcm9tICcuLi8uLi9vbnMvYW5pbWl0JztcbmltcG9ydCBCYXNlQW5pbWF0b3IgZnJvbSAnLi4vLi4vb25zL2Jhc2UtYW5pbWF0b3InO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBTcGxpdHRlckFuaW1hdG9yIGV4dGVuZHMgQmFzZUFuaW1hdG9yIHtcblxuICBjb25zdHJ1Y3Rvcih7dGltaW5nID0gJ2N1YmljLWJlemllciguMSwgLjcsIC4xLCAxKScsIGR1cmF0aW9uID0gMC4zLCBkZWxheSA9IDB9ID0ge30pIHtcbiAgICBzdXBlcih7IHRpbWluZywgZHVyYXRpb24sIGRlbGF5IH0pO1xuICB9XG5cbiAgdXBkYXRlT3B0aW9ucyhvcHRpb25zID0ge30pIHtcbiAgICB1dGlsLmV4dGVuZCh0aGlzLCB7XG4gICAgICB0aW1pbmc6IHRoaXMudGltaW5nLCBkdXJhdGlvbjogdGhpcy5kdXJhdGlvbiwgZGVsYXk6IHRoaXMuZGVsYXlcbiAgICB9LCBvcHRpb25zKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge0VsZW1lbnR9IHNpZGVFbGVtZW50XG4gICAqL1xuICBhY3RpdmF0ZShzaWRlRWxlbWVudCkge1xuICAgIGNvbnN0IHNwbGl0dGVyID0gc2lkZUVsZW1lbnQucGFyZW50Tm9kZTtcblxuICAgIGNvbnRlbnRSZWFkeShzcGxpdHRlciwgKCkgPT4ge1xuICAgICAgdGhpcy5fc2lkZSA9IHNpZGVFbGVtZW50O1xuICAgICAgdGhpcy5fY29udGVudCA9IHNwbGl0dGVyLmNvbnRlbnQ7XG4gICAgICB0aGlzLl9tYXNrID0gc3BsaXR0ZXIubWFzaztcbiAgICB9KTtcbiAgfVxuXG4gIGluYWN0aXZhdGUoKSB7XG4gICAgdGhpcy5fY29udGVudCA9IHRoaXMuX3NpZGUgPSB0aGlzLl9tYXNrID0gbnVsbDtcbiAgfVxuXG4gIGdldCBtaW51cygpIHtcbiAgICByZXR1cm4gdGhpcy5fc2lkZS5fc2lkZSA9PT0gJ3JpZ2h0JyA/ICctJyA6ICcnO1xuICB9XG5cbiAgdHJhbnNsYXRlKGRpc3RhbmNlKSB7XG4gICAgYW5pbWl0KHRoaXMuX3NpZGUpXG4gICAgICAucXVldWUoe1xuICAgICAgICB0cmFuc2Zvcm06IGB0cmFuc2xhdGUzZCgke3RoaXMubWludXMgKyBkaXN0YW5jZX1weCwgMHB4LCAwcHgpYFxuICAgICAgfSlcbiAgICAgIC5wbGF5KCk7XG4gIH1cblxuICAvKipcbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gZG9uZVxuICAgKi9cbiAgb3Blbihkb25lKSB7XG4gICAgYW5pbWl0LnJ1bkFsbChcbiAgICAgIGFuaW1pdCh0aGlzLl9zaWRlKVxuICAgICAgICAud2FpdCh0aGlzLmRlbGF5KVxuICAgICAgICAucXVldWUoe1xuICAgICAgICAgIHRyYW5zZm9ybTogYHRyYW5zbGF0ZTNkKCR7dGhpcy5taW51c30xMDAlLCAwcHgsIDBweClgXG4gICAgICAgIH0sIHtcbiAgICAgICAgICBkdXJhdGlvbjogdGhpcy5kdXJhdGlvbixcbiAgICAgICAgICB0aW1pbmc6IHRoaXMudGltaW5nXG4gICAgICAgIH0pXG4gICAgICAgIC5xdWV1ZShjYWxsYmFjayA9PiB7XG4gICAgICAgICAgY2FsbGJhY2soKTtcbiAgICAgICAgICBkb25lICYmIGRvbmUoKTtcbiAgICAgICAgfSksXG5cbiAgICAgIGFuaW1pdCh0aGlzLl9tYXNrKVxuICAgICAgICAud2FpdCh0aGlzLmRlbGF5KVxuICAgICAgICAucXVldWUoe1xuICAgICAgICAgIGRpc3BsYXk6ICdibG9jaydcbiAgICAgICAgfSlcbiAgICAgICAgLnF1ZXVlKHtcbiAgICAgICAgICBvcGFjaXR5OiAnMSdcbiAgICAgICAgfSwge1xuICAgICAgICAgIGR1cmF0aW9uOiB0aGlzLmR1cmF0aW9uLFxuICAgICAgICAgIHRpbWluZzogJ2xpbmVhcicsXG4gICAgICAgIH0pXG4gICAgKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBkb25lXG4gICAqL1xuICBjbG9zZShkb25lKSB7XG5cbiAgICBhbmltaXQucnVuQWxsKFxuICAgICAgYW5pbWl0KHRoaXMuX3NpZGUpXG4gICAgICAgIC53YWl0KHRoaXMuZGVsYXkpXG4gICAgICAgIC5xdWV1ZSh7XG4gICAgICAgICAgdHJhbnNmb3JtOiAndHJhbnNsYXRlM2QoMHB4LCAwcHgsIDBweCknXG4gICAgICAgIH0sIHtcbiAgICAgICAgICBkdXJhdGlvbjogdGhpcy5kdXJhdGlvbixcbiAgICAgICAgICB0aW1pbmc6IHRoaXMudGltaW5nXG4gICAgICAgIH0pXG4gICAgICAgIC5xdWV1ZShjYWxsYmFjayA9PiB7XG4gICAgICAgICAgdGhpcy5fc2lkZS5zdHlsZS53ZWJraXRUcmFuc2l0aW9uID0gJyc7XG4gICAgICAgICAgZG9uZSAmJiBkb25lKCk7XG4gICAgICAgICAgY2FsbGJhY2soKTtcbiAgICAgICAgfSksXG5cbiAgICAgIGFuaW1pdCh0aGlzLl9tYXNrKVxuICAgICAgICAud2FpdCh0aGlzLmRlbGF5KVxuICAgICAgICAucXVldWUoe1xuICAgICAgICAgIG9wYWNpdHk6ICcwJ1xuICAgICAgICB9LCB7XG4gICAgICAgICAgZHVyYXRpb246IHRoaXMuZHVyYXRpb24sXG4gICAgICAgICAgdGltaW5nOiAnbGluZWFyJyxcbiAgICAgICAgfSlcbiAgICAgICAgLnF1ZXVlKHtcbiAgICAgICAgICBkaXNwbGF5OiAnbm9uZSdcbiAgICAgICAgfSlcbiAgICApO1xuICB9XG59XG4iLCIvKlxuQ29weXJpZ2h0IDIwMTMtMjAxNSBBU0lBTCBDT1JQT1JBVElPTlxuXG5MaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xueW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG5cbiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuXG5Vbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG5kaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG5XSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cblNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbmxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuXG4qL1xuXG5pbXBvcnQgdXRpbCBmcm9tICcuLi8uLi9vbnMvdXRpbCc7XG5pbXBvcnQgTW9kaWZpZXJVdGlsIGZyb20gJy4uLy4uL29ucy9pbnRlcm5hbC9tb2RpZmllci11dGlsJztcbmltcG9ydCBBbmltYXRvckZhY3RvcnkgZnJvbSAnLi4vLi4vb25zL2ludGVybmFsL2FuaW1hdG9yLWZhY3RvcnknO1xuaW1wb3J0IFNwbGl0dGVyQW5pbWF0b3IgZnJvbSAnLi9hbmltYXRvcic7XG5pbXBvcnQgQmFzZUVsZW1lbnQgZnJvbSAnLi4vLi4vb25zL2Jhc2UtZWxlbWVudCc7XG5pbXBvcnQgZGV2aWNlQmFja0J1dHRvbkRpc3BhdGNoZXIgZnJvbSAnLi4vLi4vb25zL2RldmljZS1iYWNrLWJ1dHRvbi1kaXNwYXRjaGVyJztcbmltcG9ydCBjb250ZW50UmVhZHkgZnJvbSAnLi4vLi4vb25zL2NvbnRlbnQtcmVhZHknO1xuXG5jb25zdCBfYW5pbWF0b3JEaWN0ID0ge1xuICBkZWZhdWx0OiBTcGxpdHRlckFuaW1hdG9yLFxuICBvdmVybGF5OiBTcGxpdHRlckFuaW1hdG9yXG59O1xuXG4vKipcbiAqIEBlbGVtZW50IG9ucy1zcGxpdHRlclxuICogQGNhdGVnb3J5IG1lbnVcbiAqIEBkZXNjcmlwdGlvblxuICogIFtlbl1cbiAqICAgIEEgY29tcG9uZW50IHRoYXQgZW5hYmxlcyByZXNwb25zaXZlIGxheW91dCBieSBpbXBsZW1lbnRpbmcgYm90aCBhIHR3by1jb2x1bW4gbGF5b3V0IGFuZCBhIHNsaWRpbmcgbWVudSBsYXlvdXQuXG4gKlxuICogICAgSXQgY2FuIGJlIGNvbmZpZ3VyZWQgdG8gYXV0b21hdGljYWxseSBleHBhbmQgaW50byBhIGNvbHVtbiBsYXlvdXQgb24gbGFyZ2Ugc2NyZWVucyBhbmQgY29sbGFwc2UgdGhlIG1lbnUgb24gc21hbGxlciBzY3JlZW5zLiBXaGVuIHRoZSBtZW51IGlzIGNvbGxhcHNlZCB0aGUgdXNlciBjYW4gb3BlbiBpdCBieSBzd2lwaW5nLlxuICogIFsvZW5dXG4gKiAgW2phXVsvamFdXG4gKiBAY29kZXBlbiByT1FPTUxcbiAqIEB0dXRvcmlhbCB2YW5pbGxhL1JlZmVyZW5jZS9zcGxpdHRlclxuICogQGd1aWRlIG11bHRpcGxlLXBhZ2UtbmF2aWdhdGlvblxuICogIFtlbl1NYW5hZ2luZyBtdWx0aXBsZSBwYWdlcy5bL2VuXVxuICogIFtqYV1NYW5hZ2luZyBtdWx0aXBsZSBwYWdlc1svamFdXG4gKiBAc2VlYWxzbyBvbnMtc3BsaXR0ZXItY29udGVudFxuICogIFtlbl1UaGUgYDxvbnMtc3BsaXR0ZXItY29udGVudD5gIGNvbXBvbmVudCBjb250YWlucyB0aGUgbWFpbiBjb250ZW50IG9mIHRoZSBwYWdlLlsvZW5dXG4gKiAgW2phXW9ucy1zcGxpdHRlci1jb250ZW5044Kz44Oz44Od44O844ON44Oz44OIWy9qYV1cbiAqIEBzZWVhbHNvIG9ucy1zcGxpdHRlci1zaWRlXG4gKiAgW2VuXVRoZSBgPG9ucy1zcGxpdHRlci1zaWRlPmAgY29tcG9uZW50IGNvbnRhaW5zIHRoZSBtZW51LlsvZW5dXG4gKiAgW2phXW9ucy1zcGxpdHRlci1zaWRl44Kz44Oz44Od44O844ON44Oz44OIWy9qYV1cbiAqIEBleGFtcGxlXG4gKiA8b25zLXNwbGl0dGVyIGlkPVwic3BsaXR0ZXJcIj5cbiAqICAgPG9ucy1zcGxpdHRlci1jb250ZW50PlxuICogICAgIC4uLlxuICogICA8L29ucy1zcGxpdHRlci1jb250ZW50PlxuICpcbiAqICAgPG9ucy1zcGxpdHRlci1zaWRlIHNpZGU9XCJsZWZ0XCIgd2lkdGg9XCI4MCVcIiBjb2xsYXBzZSBzd2lwZWFibGU+XG4gKiAgICAgLi4uXG4gKiAgIDwvb25zLXNwbGl0dGVyLXNpZGU+XG4gKiA8L29ucy1zcGxpdHRlcj5cbiAqXG4gKiA8c2NyaXB0PlxuICogICB2YXIgc3BsaXR0ZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnc3BsaXR0ZXInKTtcbiAqICAgc3BsaXR0ZXIubGVmdC5vcGVuKCk7XG4gKiA8L3NjcmlwdD5cbiAqL1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU3BsaXR0ZXJFbGVtZW50IGV4dGVuZHMgQmFzZUVsZW1lbnQge1xuXG4gIF9nZXRTaWRlKHNpZGUpIHtcbiAgICBjb25zdCBlbGVtZW50ID0gdXRpbC5maW5kQ2hpbGQodGhpcywgZSA9PiB7XG4gICAgICByZXR1cm4gdXRpbC5tYXRjaChlLCAnb25zLXNwbGl0dGVyLXNpZGUnKSAmJiBlLmdldEF0dHJpYnV0ZSgnc2lkZScpID09PSBzaWRlO1xuICAgIH0pO1xuICAgIHJldHVybiBlbGVtZW50O1xuICB9XG5cbiAgLyoqXG4gICAqIEBwcm9wZXJ0eSBsZWZ0XG4gICAqIEByZWFkb25seVxuICAgKiBAdHlwZSB7SFRNTEVsZW1lbnR9XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1MZWZ0IGA8b25zLXNwbGl0dGVyLXNpZGU+YCBlbGVtZW50LlsvZW5dXG4gICAqICAgW2phXVsvamFdXG4gICAqL1xuICBnZXQgbGVmdCgpIHtcbiAgICByZXR1cm4gdGhpcy5fZ2V0U2lkZSgnbGVmdCcpO1xuICB9XG4gIC8qKlxuICAgKiBAcHJvcGVydHkgcmlnaHRcbiAgICogQHJlYWRvbmx5XG4gICAqIEB0eXBlIHtIVE1MRWxlbWVudH1cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXVJpZ2h0IGA8b25zLXNwbGl0dGVyLXNpZGU+YCBlbGVtZW50LlsvZW5dXG4gICAqICAgW2phXVsvamFdXG4gICAqL1xuICBnZXQgcmlnaHQoKSB7XG4gICAgcmV0dXJuIHRoaXMuX2dldFNpZGUoJ3JpZ2h0Jyk7XG4gIH1cblxuICAvKipcbiAgICogQHByb3BlcnR5IHNpZGVcbiAgICogQHJlYWRvbmx5XG4gICAqIEB0eXBlIHtIVE1MRWxlbWVudH1cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXUZpcnN0IGA8b25zLXNwbGl0dGVyLXNpZGU+YCBlbGVtZW50IHJlZ2FyZGxlc3MgdGhlIGFjdHVhbCBzaWRlLlsvZW5dXG4gICAqICAgW2phXVsvamFdXG4gICAqL1xuICBnZXQgc2lkZSgpIHtcbiAgICByZXR1cm4gdXRpbC5maW5kQ2hpbGQodGhpcywgJ29ucy1zcGxpdHRlci1zaWRlJyk7XG4gIH1cblxuICBnZXQgX3NpZGVzKCkge1xuICAgIHJldHVybiBbdGhpcy5sZWZ0LCB0aGlzLnJpZ2h0XS5maWx0ZXIoZSA9PiBlKTtcbiAgfVxuICAvKipcbiAgICogQHByb3BlcnR5IGNvbnRlbnRcbiAgICogQHJlYWRvbmx5XG4gICAqIEB0eXBlIHtIVE1MRWxlbWVudH1cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXVRoZSBgPG9ucy1zcGxpdHRlci1jb250ZW50PmAgZWxlbWVudC5bL2VuXVxuICAgKiAgIFtqYV1bL2phXVxuICAgKi9cbiAgZ2V0IGNvbnRlbnQoKSB7XG4gICAgcmV0dXJuIHV0aWwuZmluZENoaWxkKHRoaXMsICdvbnMtc3BsaXR0ZXItY29udGVudCcpO1xuICB9XG5cbiAgZ2V0IHRvcFBhZ2UoKSB7XG4gICAgcmV0dXJuIHRoaXMuY29udGVudC5fY29udGVudDtcbiAgfVxuXG4gIGdldCBtYXNrKCkge1xuICAgIHJldHVybiB1dGlsLmZpbmRDaGlsZCh0aGlzLCAnb25zLXNwbGl0dGVyLW1hc2snKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcHJvcGVydHkgb25EZXZpY2VCYWNrQnV0dG9uXG4gICAqIEB0eXBlIHtPYmplY3R9XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1CYWNrLWJ1dHRvbiBoYW5kbGVyLlsvZW5dXG4gICAqICAgW2phXeODkOODg+OCr+ODnOOCv+ODs+ODj+ODs+ODieODqeOAglsvamFdXG4gICAqL1xuICBnZXQgb25EZXZpY2VCYWNrQnV0dG9uKCkge1xuICAgIHJldHVybiB0aGlzLl9iYWNrQnV0dG9uSGFuZGxlcjtcbiAgfVxuXG4gIHNldCBvbkRldmljZUJhY2tCdXR0b24oY2FsbGJhY2spIHtcbiAgICBpZiAodGhpcy5fYmFja0J1dHRvbkhhbmRsZXIpIHtcbiAgICAgIHRoaXMuX2JhY2tCdXR0b25IYW5kbGVyLmRlc3Ryb3koKTtcbiAgICB9XG5cbiAgICB0aGlzLl9iYWNrQnV0dG9uSGFuZGxlciA9IGRldmljZUJhY2tCdXR0b25EaXNwYXRjaGVyLmNyZWF0ZUhhbmRsZXIodGhpcywgY2FsbGJhY2spO1xuICB9XG5cbiAgX29uRGV2aWNlQmFja0J1dHRvbihldmVudCkge1xuICAgIHRoaXMuX3NpZGVzLnNvbWUocyA9PiBzLmlzT3BlbiA/IHMuY2xvc2UoKSA6IGZhbHNlKSB8fCBldmVudC5jYWxsUGFyZW50SGFuZGxlcigpO1xuICB9XG5cbiAgX29uTW9kZUNoYW5nZShlKSB7XG4gICAgaWYgKGUudGFyZ2V0LnBhcmVudE5vZGUpIHtcbiAgICAgIGNvbnRlbnRSZWFkeSh0aGlzLCAoKSA9PiB7XG4gICAgICAgIHRoaXMuX2xheW91dCgpO1xuICAgICAgfSk7XG4gICAgfVxuICB9XG5cbiAgX2xheW91dCgpIHtcbiAgICB0aGlzLl9zaWRlcy5mb3JFYWNoKHNpZGUgPT4ge1xuICAgICAgdGhpcy5jb250ZW50LnN0eWxlW3NpZGUuc2lkZV0gPSBzaWRlLm1vZGUgPT09ICdzcGxpdCcgPyBzaWRlLl93aWR0aCA6IDA7XG4gICAgfSk7XG4gIH1cblxuICBpbml0KCkge1xuICAgIHRoaXMuX2JvdW5kT25Nb2RlQ2hhbmdlID0gdGhpcy5fb25Nb2RlQ2hhbmdlLmJpbmQodGhpcyk7XG5cbiAgICBjb250ZW50UmVhZHkodGhpcywgKCkgPT4ge1xuICAgICAgdGhpcy5fY29tcGlsZSgpO1xuICAgICAgdGhpcy5fbGF5b3V0KCk7XG4gICAgfSk7XG4gIH1cblxuICBfY29tcGlsZSgpIHtcbiAgICBpZiAoIXRoaXMubWFzaykge1xuICAgICAgdGhpcy5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdvbnMtc3BsaXR0ZXItbWFzaycpKTtcbiAgICB9XG4gIH1cblxuICBjb25uZWN0ZWRDYWxsYmFjaygpIHtcbiAgICB0aGlzLm9uRGV2aWNlQmFja0J1dHRvbiA9IHRoaXMuX29uRGV2aWNlQmFja0J1dHRvbi5iaW5kKHRoaXMpO1xuICAgIHRoaXMuYWRkRXZlbnRMaXN0ZW5lcignbW9kZWNoYW5nZScsIHRoaXMuX2JvdW5kT25Nb2RlQ2hhbmdlLCBmYWxzZSk7XG4gIH1cblxuICBkaXNjb25uZWN0ZWRDYWxsYmFjaygpIHtcbiAgICB0aGlzLl9iYWNrQnV0dG9uSGFuZGxlci5kZXN0cm95KCk7XG4gICAgdGhpcy5fYmFja0J1dHRvbkhhbmRsZXIgPSBudWxsO1xuICAgIHRoaXMucmVtb3ZlRXZlbnRMaXN0ZW5lcignbW9kZWNoYW5nZScsIHRoaXMuX2JvdW5kT25Nb2RlQ2hhbmdlLCBmYWxzZSk7XG4gIH1cblxuICBhdHRyaWJ1dGVDaGFuZ2VkQ2FsbGJhY2sobmFtZSwgbGFzdCwgY3VycmVudCkge31cblxuICBfc2hvdygpIHtcbiAgICB1dGlsLnByb3BhZ2F0ZUFjdGlvbih0aGlzLCAnX3Nob3cnKTtcbiAgfVxuXG4gIF9oaWRlKCkge1xuICAgIHV0aWwucHJvcGFnYXRlQWN0aW9uKHRoaXMsICdfaGlkZScpO1xuICB9XG5cbiAgX2Rlc3Ryb3koKSB7XG4gICAgdXRpbC5wcm9wYWdhdGVBY3Rpb24odGhpcywgJ19kZXN0cm95Jyk7XG4gICAgdGhpcy5yZW1vdmUoKTtcbiAgfVxuXG4gIHN0YXRpYyByZWdpc3RlckFuaW1hdG9yKG5hbWUsIEFuaW1hdG9yKSB7XG4gICAgaWYgKCEoQW5pbWF0b3IgaW5zdGFuY2VvZiBTcGxpdHRlckFuaW1hdG9yKSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdBbmltYXRvciBwYXJhbWV0ZXIgbXVzdCBiZSBhbiBpbnN0YW5jZSBvZiBTcGxpdHRlckFuaW1hdG9yLicpO1xuICAgIH1cbiAgICBfYW5pbWF0b3JEaWN0W25hbWVdID0gQW5pbWF0b3I7XG4gIH1cblxuICBzdGF0aWMgZ2V0IFNwbGl0dGVyQW5pbWF0b3IoKSB7XG4gICAgcmV0dXJuIFNwbGl0dGVyQW5pbWF0b3I7XG4gIH1cblxuICBzdGF0aWMgZ2V0IGFuaW1hdG9ycygpIHtcbiAgICByZXR1cm4gX2FuaW1hdG9yRGljdDtcbiAgfVxufVxuXG5jdXN0b21FbGVtZW50cy5kZWZpbmUoJ29ucy1zcGxpdHRlcicsIFNwbGl0dGVyRWxlbWVudCk7XG4iLCIvKlxuQ29weXJpZ2h0IDIwMTMtMjAxNSBBU0lBTCBDT1JQT1JBVElPTlxuXG5MaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xueW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG5cbiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuXG5Vbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG5kaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG5XSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cblNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbmxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuXG4qL1xuXG5pbXBvcnQgdXRpbCBmcm9tICcuLi9vbnMvdXRpbCc7XG5pbXBvcnQgQW5pbWF0b3JGYWN0b3J5IGZyb20gJy4uL29ucy9pbnRlcm5hbC9hbmltYXRvci1mYWN0b3J5JztcbmltcG9ydCBvcmllbnRhdGlvbiBmcm9tICcuLi9vbnMvb3JpZW50YXRpb24nO1xuaW1wb3J0IGludGVybmFsIGZyb20gJy4uL29ucy9pbnRlcm5hbCc7XG5pbXBvcnQgTW9kaWZpZXJVdGlsIGZyb20gJy4uL29ucy9pbnRlcm5hbC9tb2RpZmllci11dGlsJztcbmltcG9ydCBCYXNlRWxlbWVudCBmcm9tICcuLi9vbnMvYmFzZS1lbGVtZW50JztcbmltcG9ydCBTcGxpdHRlckFuaW1hdG9yIGZyb20gJy4vb25zLXNwbGl0dGVyL2FuaW1hdG9yJztcbmltcG9ydCBHZXN0dXJlRGV0ZWN0b3IgZnJvbSAnLi4vb25zL2dlc3R1cmUtZGV0ZWN0b3InO1xuaW1wb3J0IERvb3JMb2NrIGZyb20gJy4uL29ucy9kb29ybG9jayc7XG5pbXBvcnQgY29udGVudFJlYWR5IGZyb20gJy4uL29ucy9jb250ZW50LXJlYWR5JztcbmltcG9ydCB7IFBhZ2VMb2FkZXIsIGRlZmF1bHRQYWdlTG9hZGVyfSBmcm9tICcuLi9vbnMvcGFnZS1sb2FkZXInO1xuaW1wb3J0IFNwbGl0dGVyRWxlbWVudCBmcm9tICcuL29ucy1zcGxpdHRlcic7XG5cbmNvbnN0IFNQTElUX01PREUgPSAnc3BsaXQnO1xuY29uc3QgQ09MTEFQU0VfTU9ERSA9ICdjb2xsYXBzZSc7XG5jb25zdCBDTE9TRURfU1RBVEUgPSAnY2xvc2VkJztcbmNvbnN0IE9QRU5fU1RBVEUgPSAnb3Blbic7XG5jb25zdCBDSEFOR0lOR19TVEFURSA9ICdjaGFuZ2luZyc7XG5cbmNvbnN0IFdBVENIRURfQVRUUklCVVRFUyA9IFsnYW5pbWF0aW9uJywgJ3dpZHRoJywgJ3NpZGUnLCAnY29sbGFwc2UnLCAnc3dpcGVhYmxlJywgJ3N3aXBlLXRhcmdldC13aWR0aCcsICdhbmltYXRpb24tb3B0aW9ucycsICdvcGVuLXRocmVzaG9sZCddO1xuXG5cbmNvbnN0IHJld3JpdGFibGVzID0ge1xuICAvKipcbiAgICogQHBhcmFtIHtFbGVtZW50fSBzcGxpdHRlclNpZGVFbGVtZW50XG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IGNhbGxiYWNrXG4gICAqL1xuICByZWFkeShzcGxpdHRlclNpZGVFbGVtZW50LCBjYWxsYmFjaykge1xuICAgIHNldEltbWVkaWF0ZShjYWxsYmFjayk7XG4gIH1cbn07XG5cbmNsYXNzIENvbGxhcHNlRGV0ZWN0aW9uIHtcbiAgY29uc3RydWN0b3IoZWxlbWVudCwgdGFyZ2V0KSB7XG4gICAgdGhpcy5fZWxlbWVudCA9IGVsZW1lbnQ7XG4gICAgdGhpcy5fYm91bmRPbkNoYW5nZSA9IHRoaXMuX29uQ2hhbmdlLmJpbmQodGhpcyk7XG4gICAgdGFyZ2V0ICYmIHRoaXMuY2hhbmdlVGFyZ2V0KHRhcmdldCk7XG4gIH1cblxuICBjaGFuZ2VUYXJnZXQodGFyZ2V0KSB7XG4gICAgdGhpcy5kaXNhYmxlKCk7XG4gICAgdGhpcy5fdGFyZ2V0ID0gdGFyZ2V0O1xuICAgIGlmICh0YXJnZXQpIHtcbiAgICAgIHRoaXMuX29yaWVudGF0aW9uID0gWydwb3J0cmFpdCcsICdsYW5kc2NhcGUnXS5pbmRleE9mKHRhcmdldCkgIT09IC0xO1xuICAgICAgdGhpcy5hY3RpdmF0ZSgpO1xuICAgIH1cbiAgfVxuXG4gIF9tYXRjaCh2YWx1ZSkge1xuICAgIGlmICh0aGlzLl9vcmllbnRhdGlvbikge1xuICAgICAgcmV0dXJuIHRoaXMuX3RhcmdldCA9PT0gKHZhbHVlLmlzUG9ydHJhaXQgPyAncG9ydHJhaXQnIDogJ2xhbmRzY2FwZScpO1xuICAgIH1cbiAgICByZXR1cm4gdmFsdWUubWF0Y2hlcztcbiAgfVxuXG4gIF9vbkNoYW5nZSh2YWx1ZSkge1xuICAgIHRoaXMuX2VsZW1lbnQuX3VwZGF0ZU1vZGUodGhpcy5fbWF0Y2godmFsdWUpID8gQ09MTEFQU0VfTU9ERSA6IFNQTElUX01PREUpO1xuICB9XG5cbiAgYWN0aXZhdGUoKSB7XG4gICAgaWYgKHRoaXMuX29yaWVudGF0aW9uKSB7XG4gICAgICBvcmllbnRhdGlvbi5vbignY2hhbmdlJywgdGhpcy5fYm91bmRPbkNoYW5nZSk7XG4gICAgICB0aGlzLl9vbkNoYW5nZSh7aXNQb3J0cmFpdDogb3JpZW50YXRpb24uaXNQb3J0cmFpdCgpfSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuX3F1ZXJ5UmVzdWx0ID0gd2luZG93Lm1hdGNoTWVkaWEodGhpcy5fdGFyZ2V0KTtcbiAgICAgIHRoaXMuX3F1ZXJ5UmVzdWx0LmFkZExpc3RlbmVyKHRoaXMuX2JvdW5kT25DaGFuZ2UpO1xuICAgICAgdGhpcy5fb25DaGFuZ2UodGhpcy5fcXVlcnlSZXN1bHQpO1xuICAgIH1cbiAgfVxuXG4gIGRpc2FibGUoKSB7XG4gICAgaWYgKHRoaXMuX29yaWVudGF0aW9uKSB7XG4gICAgICBvcmllbnRhdGlvbi5vZmYoJ2NoYW5nZScsIHRoaXMuX2JvdW5kT25DaGFuZ2UpO1xuICAgIH0gZWxzZSBpZiAodGhpcy5fcXVlcnlSZXN1bHQpIHtcbiAgICAgIHRoaXMuX3F1ZXJ5UmVzdWx0LnJlbW92ZUxpc3RlbmVyKHRoaXMuX2JvdW5kT25DaGFuZ2UpO1xuICAgICAgdGhpcy5fcXVlcnlSZXN1bHQgPSBudWxsO1xuICAgIH1cbiAgfVxufVxuXG5jb25zdCB3aWR0aFRvUHggPSAod2lkdGgsIHBhcmVudCkgPT4ge1xuICBjb25zdCBbdmFsdWUsIHB4XSA9IFtwYXJzZUludCh3aWR0aCwgMTApLCAvcHgvLnRlc3Qod2lkdGgpXTtcbiAgcmV0dXJuIHB4ID8gdmFsdWUgOiBNYXRoLnJvdW5kKHBhcmVudC5vZmZzZXRXaWR0aCAqIHZhbHVlIC8gMTAwKTtcbn07XG5cbmNsYXNzIENvbGxhcHNlTW9kZSB7XG4gIGdldCBfYW5pbWF0b3IoKSB7XG4gICAgcmV0dXJuIHRoaXMuX2VsZW1lbnQuX2FuaW1hdG9yO1xuICB9XG5cbiAgY29uc3RydWN0b3IoZWxlbWVudCkge1xuICAgIHRoaXMuX2FjdGl2ZSA9IGZhbHNlO1xuICAgIHRoaXMuX3N0YXRlID0gQ0xPU0VEX1NUQVRFO1xuICAgIHRoaXMuX2VsZW1lbnQgPSBlbGVtZW50O1xuICAgIHRoaXMuX2xvY2sgPSBuZXcgRG9vckxvY2soKTtcbiAgfVxuXG4gIGlzT3BlbigpIHtcbiAgICByZXR1cm4gdGhpcy5fYWN0aXZlICYmIHRoaXMuX3N0YXRlICE9PSBDTE9TRURfU1RBVEU7XG4gIH1cblxuICBoYW5kbGVHZXN0dXJlKGUpIHtcbiAgICBpZiAoIXRoaXMuX2FjdGl2ZSB8fCB0aGlzLl9sb2NrLmlzTG9ja2VkKCkgfHwgdGhpcy5faXNPcGVuT3RoZXJTaWRlTWVudSgpKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGlmIChlLnR5cGUgPT09ICdkcmFnc3RhcnQnKSB7XG4gICAgICB0aGlzLl9vbkRyYWdTdGFydChlKTtcbiAgICB9IGVsc2UgaWYgKCF0aGlzLl9pZ25vcmVEcmFnKSB7XG4gICAgICBlLnR5cGUgPT09ICdkcmFnZW5kJyA/IHRoaXMuX29uRHJhZ0VuZChlKSA6IHRoaXMuX29uRHJhZyhlKTtcbiAgICB9XG4gIH1cblxuICBfb25EcmFnU3RhcnQoZXZlbnQpIHtcbiAgICBjb25zdCBzY3JvbGxpbmcgPSAhL2xlZnR8cmlnaHQvLnRlc3QoZXZlbnQuZ2VzdHVyZS5kaXJlY3Rpb24pO1xuICAgIGNvbnN0IGRpc3RhbmNlID0gdGhpcy5fZWxlbWVudC5fc2lkZSA9PT0gJ2xlZnQnID8gZXZlbnQuZ2VzdHVyZS5jZW50ZXIuY2xpZW50WCA6IHdpbmRvdy5pbm5lcldpZHRoIC0gZXZlbnQuZ2VzdHVyZS5jZW50ZXIuY2xpZW50WDtcbiAgICBjb25zdCBhcmVhID0gdGhpcy5fZWxlbWVudC5fc3dpcGVUYXJnZXRXaWR0aDtcbiAgICBjb25zdCBpc09wZW4gPSB0aGlzLmlzT3BlbigpO1xuICAgIHRoaXMuX2lnbm9yZURyYWcgPSBzY3JvbGxpbmcgfHwgKGFyZWEgJiYgZGlzdGFuY2UgPiBhcmVhICYmICFpc09wZW4pO1xuXG4gICAgdGhpcy5fd2lkdGggPSB3aWR0aFRvUHgodGhpcy5fZWxlbWVudC5fd2lkdGgsIHRoaXMuX2VsZW1lbnQucGFyZW50Tm9kZSk7XG4gICAgdGhpcy5fc3RhcnREaXN0YW5jZSA9IHRoaXMuX2Rpc3RhbmNlID0gaXNPcGVuID8gdGhpcy5fd2lkdGggOiAwO1xuICB9XG5cbiAgX29uRHJhZyhldmVudCkge1xuICAgIGV2ZW50Lmdlc3R1cmUucHJldmVudERlZmF1bHQoKTtcbiAgICBjb25zdCBkZWx0YSA9IHRoaXMuX2VsZW1lbnQuX3NpZGUgPT09ICdsZWZ0JyA/IGV2ZW50Lmdlc3R1cmUuZGVsdGFYIDogLWV2ZW50Lmdlc3R1cmUuZGVsdGFYO1xuICAgIGNvbnN0IGRpc3RhbmNlID0gTWF0aC5tYXgoMCwgTWF0aC5taW4odGhpcy5fd2lkdGgsIHRoaXMuX3N0YXJ0RGlzdGFuY2UgKyBkZWx0YSkpO1xuICAgIGlmIChkaXN0YW5jZSAhPT0gdGhpcy5fZGlzdGFuY2UpIHtcbiAgICAgIHRoaXMuX2FuaW1hdG9yLnRyYW5zbGF0ZShkaXN0YW5jZSk7XG4gICAgICB0aGlzLl9kaXN0YW5jZSA9IGRpc3RhbmNlO1xuICAgICAgdGhpcy5fc3RhdGUgPSBDSEFOR0lOR19TVEFURTtcbiAgICB9XG4gIH1cblxuICBfb25EcmFnRW5kKGV2ZW50KSB7XG4gICAgY29uc3Qge19kaXN0YW5jZTogZGlzdGFuY2UsIF93aWR0aDogd2lkdGgsIF9lbGVtZW50OiBlbH0gPSB0aGlzO1xuICAgIGNvbnN0IGRpcmVjdGlvbiA9IGV2ZW50Lmdlc3R1cmUuaW50ZXJpbURpcmVjdGlvbjtcbiAgICBjb25zdCBzaG91bGRPcGVuID0gZWwuX3NpZGUgIT09IGRpcmVjdGlvbiAmJiBkaXN0YW5jZSA+IHdpZHRoICogZWwuX3RocmVzaG9sZDtcbiAgICB0aGlzLmV4ZWN1dGVBY3Rpb24oc2hvdWxkT3BlbiA/ICdvcGVuJyA6ICdjbG9zZScpO1xuICAgIHRoaXMuX2lnbm9yZURyYWcgPSB0cnVlO1xuICB9XG5cbiAgbGF5b3V0KCkge1xuICAgIGlmICh0aGlzLl9hY3RpdmUgJiYgdGhpcy5fc3RhdGUgPT09IE9QRU5fU1RBVEUpIHtcbiAgICAgIHRoaXMuX2FuaW1hdG9yLm9wZW4oKTtcbiAgICB9XG4gIH1cblxuICAvLyBlbnRlciBjb2xsYXBzZSBtb2RlXG4gIGVudGVyTW9kZSgpIHtcbiAgICBpZiAoIXRoaXMuX2FjdGl2ZSkge1xuICAgICAgdGhpcy5fYWN0aXZlID0gdHJ1ZTtcbiAgICAgIHRoaXMubGF5b3V0KCk7XG4gICAgfVxuICB9XG5cbiAgLy8gZXhpdCBjb2xsYXBzZSBtb2RlXG4gIGV4aXRNb2RlKCkge1xuICAgIHRoaXMuX2FjdGl2ZSA9IGZhbHNlO1xuICB9XG5cbiAgX2lzT3Blbk90aGVyU2lkZU1lbnUoKSB7XG4gICAgcmV0dXJuIHV0aWwuYXJyYXlGcm9tKHRoaXMuX2VsZW1lbnQucGFyZW50RWxlbWVudC5jaGlsZHJlbikuc29tZShlID0+IHtcbiAgICAgIHJldHVybiB1dGlsLm1hdGNoKGUsICdvbnMtc3BsaXR0ZXItc2lkZScpICYmIGUgIT09IHRoaXMuX2VsZW1lbnQgJiYgZS5pc09wZW47XG4gICAgfSk7XG4gIH1cblxuICAvKipcbiAgICogQHBhcmFtIHtTdHJpbmd9IG5hbWUgLSAnb3Blbicgb3IgJ2Nsb3NlJ1xuICAgKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnNdXG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IFtvcHRpb25zLmNhbGxiYWNrXVxuICAgKiBAcGFyYW0ge0Jvb2xlYW59IFtvcHRpb25zLndpdGhvdXRBbmltYXRpb25dXG4gICAqIEByZXR1cm4ge1Byb21pc2V9IFJlc29sdmVzIHRvIHRoZSBzcGxpdHRlciBzaWRlIGVsZW1lbnQgb3IgZmFsc2UgaWYgbm90IGluIGNvbGxhcHNlIG1vZGVcbiAgICovXG4gIGV4ZWN1dGVBY3Rpb24obmFtZSwgb3B0aW9ucyA9IHt9KSB7XG4gICAgY29uc3QgRklOQUxfU1RBVEUgPSBuYW1lID09PSAnb3BlbicgPyBPUEVOX1NUQVRFIDogQ0xPU0VEX1NUQVRFO1xuXG4gICAgaWYgKCF0aGlzLl9hY3RpdmUpIHtcbiAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoZmFsc2UpO1xuICAgIH1cblxuICAgIGlmICh0aGlzLl9zdGF0ZSA9PT0gRklOQUxfU1RBVEUpIHtcbiAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUodGhpcy5fZWxlbWVudCk7XG4gICAgfVxuICAgIGlmICh0aGlzLl9sb2NrLmlzTG9ja2VkKCkpIHtcbiAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdCgnU3BsaXR0ZXIgc2lkZSBpcyBsb2NrZWQuJyk7XG4gICAgfVxuICAgIGlmIChuYW1lID09PSAnb3BlbicgJiYgdGhpcy5faXNPcGVuT3RoZXJTaWRlTWVudSgpKSB7XG4gICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoJ0Fub3RoZXIgbWVudSBpcyBhbHJlYWR5IG9wZW4uJyk7XG4gICAgfVxuICAgIGlmICh0aGlzLl9lbGVtZW50Ll9lbWl0RXZlbnQoYHByZSR7bmFtZX1gKSkge1xuICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGBDYW5jZWxlZCBpbiBwcmUke25hbWV9IGV2ZW50LmApO1xuICAgIH1cblxuICAgIGNvbnN0IGNhbGxiYWNrID0gb3B0aW9ucy5jYWxsYmFjaztcbiAgICBjb25zdCB1bmxvY2sgPSB0aGlzLl9sb2NrLmxvY2soKTtcbiAgICBjb25zdCBkb25lID0gKCkgPT4ge1xuICAgICAgdGhpcy5fc3RhdGUgPSBGSU5BTF9TVEFURTtcbiAgICAgIHRoaXMubGF5b3V0KCk7XG4gICAgICB1bmxvY2soKTtcbiAgICAgIHRoaXMuX2VsZW1lbnQuX2VtaXRFdmVudChgcG9zdCR7bmFtZX1gKTtcbiAgICAgIGNhbGxiYWNrICYmIGNhbGxiYWNrKCk7XG4gICAgfTtcblxuICAgIGlmIChvcHRpb25zLndpdGhvdXRBbmltYXRpb24pIHtcbiAgICAgIGRvbmUoKTtcbiAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUodGhpcy5fZWxlbWVudCk7XG4gICAgfVxuICAgIHRoaXMuX3N0YXRlID0gQ0hBTkdJTkdfU1RBVEU7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKHJlc29sdmUgPT4ge1xuICAgICAgdGhpcy5fYW5pbWF0b3JbbmFtZV0oKCkgPT4ge1xuICAgICAgICBkb25lKCk7XG4gICAgICAgIHJlc29sdmUodGhpcy5fZWxlbWVudCk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxufVxuXG4vKipcbiAqIEBlbGVtZW50IG9ucy1zcGxpdHRlci1zaWRlXG4gKiBAY2F0ZWdvcnkgbWVudVxuICogQGRlc2NyaXB0aW9uXG4gKiAgW2VuXVxuICogICAgVGhlIGA8b25zLXNwbGl0dGVyLXNpZGU+YCBlbGVtZW50IGlzIHVzZWQgYXMgYSBjaGlsZCBlbGVtZW50IG9mIGA8b25zLXNwbGl0dGVyPmAuXG4gKlxuICogICAgSXQgd2lsbCBiZSBkaXNwbGF5ZWQgb24gZWl0aGVyIHRoZSBsZWZ0IG9yIHJpZ2h0IHNpZGUgb2YgdGhlIGA8b25zLXNwbGl0dGVyLWNvbnRlbnQ+YCBlbGVtZW50LlxuICpcbiAqICAgIEl0IHN1cHBvcnRzIHR3byBtb2RlczogY29sbGFwc2VkIGFuZCBzcGxpdC4gV2hlbiBpdCdzIGluIGNvbGxhcHNlZCBtb2RlIGl0IHdpbGwgYmUgaGlkZGVuIGZyb20gdmlldyBhbmQgY2FuIGJlIGRpc3BsYXllZCB3aGVuIHRoZSB1c2VyIHN3aXBlcyB0aGUgc2NyZWVuIG9yIHRhcHMgYSBidXR0b24uIEluIHNwbGl0IG1vZGUgdGhlIGVsZW1lbnQgaXMgYWx3YXlzIHNob3duLiBJdCBjYW4gYmUgY29uZmlndXJlZCB0byBhdXRvbWF0aWNhbGx5IHN3aXRjaCBiZXR3ZWVuIHRoZSB0d28gbW9kZXMgZGVwZW5kaW5nIG9uIHRoZSBzY3JlZW4gc2l6ZS5cbiAqICBbL2VuXVxuICogIFtqYV1vbnMtc3BsaXR0ZXItc2lkZeimgee0oOOBr+OAgW9ucy1zcGxpdHRlcuimgee0oOOBruWtkOimgee0oOOBqOOBl+OBpuWIqeeUqOOBl+OBvuOBmeOAglsvamFdXG4gKiBAY29kZXBlbiByT1FPTUxcbiAqIEB0dXRvcmlhbCB2YW5pbGxhL1JlZmVyZW5jZS9zcGxpdHRlclxuICogQGd1aWRlIG11bHRpcGxlLXBhZ2UtbmF2aWdhdGlvblxuICogIFtlbl1NYW5hZ2luZyBtdWx0aXBsZSBwYWdlcy5bL2VuXVxuICogIFtqYV1NYW5hZ2luZyBtdWx0aXBsZSBwYWdlc1svamFdXG4gKiBAc2VlYWxzbyBvbnMtc3BsaXR0ZXJcbiAqICBbZW5dVGhlIGA8b25zLXNwbGl0dGVyPmAgaXMgdGhlIHBhcmVudCBjb21wb25lbnQuWy9lbl1cbiAqICBbamFdb25zLXNwbGl0dGVy44Kz44Oz44Od44O844ON44Oz44OIWy9qYV1cbiAqIEBzZWVhbHNvIG9ucy1zcGxpdHRlci1jb250ZW50XG4gKiAgW2VuXVRoZSBgPG9ucy1zcGxpdHRlci1jb250ZW50PmAgY29tcG9uZW50IGNvbnRhaW5zIHRoZSBtYWluIGNvbnRlbnQgb2YgdGhlIHBhZ2UuWy9lbl1cbiAqICBbamFdb25zLXNwbGl0dGVyLWNvbnRlbnTjgrPjg7Pjg53jg7zjg43jg7Pjg4hbL2phXVxuICogQGV4YW1wbGVcbiAqIDxvbnMtc3BsaXR0ZXI+XG4gKiAgIDxvbnMtc3BsaXR0ZXItY29udGVudD5cbiAqICAgICAuLi5cbiAqICAgPC9vbnMtc3BsaXR0ZXItY29udGVudD5cbiAqXG4gKiAgIDxvbnMtc3BsaXR0ZXItc2lkZSBzaWRlPVwibGVmdFwiIHdpZHRoPVwiODAlXCIgY29sbGFwc2U+XG4gKiAgICAgLi4uXG4gKiAgIDwvb25zLXNwbGl0dGVyLXNpZGU+XG4gKiA8L29ucy1zcGxpdHRlcj5cbiAqL1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU3BsaXR0ZXJTaWRlRWxlbWVudCBleHRlbmRzIEJhc2VFbGVtZW50IHtcblxuICAvKipcbiAgICogQGV2ZW50IG1vZGVjaGFuZ2VcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXUZpcmVkIGp1c3QgYWZ0ZXIgdGhlIGNvbXBvbmVudCdzIG1vZGUgY2hhbmdlcy5bL2VuXVxuICAgKiAgIFtqYV3jgZPjga7opoHntKDjga7jg6Ljg7zjg4njgYzlpInljJbjgZfjgZ/pmpvjgavnmbrngavjgZfjgb7jgZnjgIJbL2phXVxuICAgKiBAcGFyYW0ge09iamVjdH0gZXZlbnRcbiAgICogICBbZW5dRXZlbnQgb2JqZWN0LlsvZW5dXG4gICAqICAgW2phXeOCpOODmeODs+ODiOOCquODluOCuOOCp+OCr+ODiOOBp+OBmeOAglsvamFdXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBldmVudC5zaWRlXG4gICAqICAgW2VuXUNvbXBvbmVudCBvYmplY3QuWy9lbl1cbiAgICogICBbamFd44Kz44Oz44Od44O844ON44Oz44OI44Gu44Kq44OW44K444Kn44Kv44OI44CCWy9qYV1cbiAgICogQHBhcmFtIHtTdHJpbmd9IGV2ZW50Lm1vZGVcbiAgICogICBbZW5dUmV0dXJucyB0aGUgY3VycmVudCBtb2RlLiBDYW4gYmUgZWl0aGVyIGBcImNvbGxhcHNlXCJgIG9yIGBcInNwbGl0XCJgLlsvZW5dXG4gICAqICAgW2phXeePvuWcqOOBruODouODvOODieOCkui/lOOBl+OBvuOBmeOAglsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAZXZlbnQgcHJlb3BlblxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dRmlyZWQganVzdCBiZWZvcmUgdGhlIHNsaWRpbmcgbWVudSBpcyBvcGVuZWQuWy9lbl1cbiAgICogICBbamFd44K544Op44Kk44OH44Kj44Oz44Kw44Oh44OL44Ol44O844GM6ZaL44GP5YmN44Gr55m654Gr44GX44G+44GZ44CCWy9qYV1cbiAgICogQHBhcmFtIHtPYmplY3R9IGV2ZW50XG4gICAqICAgW2VuXUV2ZW50IG9iamVjdC5bL2VuXVxuICAgKiAgIFtqYV3jgqTjg5njg7Pjg4jjgqrjg5bjgrjjgqfjgq/jg4jjgafjgZnjgIJbL2phXVxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBldmVudC5jYW5jZWxcbiAgICogICBbZW5dQ2FsbCB0byBjYW5jZWwgb3BlbmluZyBzbGlkaW5nIG1lbnUuWy9lbl1cbiAgICogICBbamFd44K544Op44Kk44OH44Kj44Oz44Kw44Oh44OL44Ol44O844GM6ZaL44GP44Gu44KS44Kt44Oj44Oz44K744Or44GX44G+44GZ44CCWy9qYV1cbiAgICogQHBhcmFtIHtPYmplY3R9IGV2ZW50LnNpZGVcbiAgICogICBbZW5dQ29tcG9uZW50IG9iamVjdC5bL2VuXVxuICAgKiAgIFtqYV3jgrPjg7Pjg53jg7zjg43jg7Pjg4jjga7jgqrjg5bjgrjjgqfjgq/jg4jjgIJbL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQGV2ZW50IHBvc3RvcGVuXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1GaXJlZCBqdXN0IGFmdGVyIHRoZSBzbGlkaW5nIG1lbnUgaXMgb3BlbmVkLlsvZW5dXG4gICAqICAgW2phXeOCueODqeOCpOODh+OCo+ODs+OCsOODoeODi+ODpeODvOOBjOmWi+OBhOOBn+W+jOOBq+eZuueBq+OBl+OBvuOBmeOAglsvamFdXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBldmVudFxuICAgKiAgIFtlbl1FdmVudCBvYmplY3QuWy9lbl1cbiAgICogICBbamFd44Kk44OZ44Oz44OI44Kq44OW44K444Kn44Kv44OI44Gn44GZ44CCWy9qYV1cbiAgICogQHBhcmFtIHtPYmplY3R9IGV2ZW50LnNpZGVcbiAgICogICBbZW5dQ29tcG9uZW50IG9iamVjdC5bL2VuXVxuICAgKiAgIFtqYV3jgrPjg7Pjg53jg7zjg43jg7Pjg4jjga7jgqrjg5bjgrjjgqfjgq/jg4jjgIJbL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQGV2ZW50IHByZWNsb3NlXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1GaXJlZCBqdXN0IGJlZm9yZSB0aGUgc2xpZGluZyBtZW51IGlzIGNsb3NlZC5bL2VuXVxuICAgKiAgIFtqYV3jgrnjg6njgqTjg4fjgqPjg7PjgrDjg6Hjg4vjg6Xjg7zjgYzplonjgZjjgovliY3jgavnmbrngavjgZfjgb7jgZnjgIJbL2phXVxuICAgKiBAcGFyYW0ge09iamVjdH0gZXZlbnRcbiAgICogICBbZW5dRXZlbnQgb2JqZWN0LlsvZW5dXG4gICAqICAgW2phXeOCpOODmeODs+ODiOOCquODluOCuOOCp+OCr+ODiOOBp+OBmeOAglsvamFdXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBldmVudC5zaWRlXG4gICAqICAgW2VuXUNvbXBvbmVudCBvYmplY3QuWy9lbl1cbiAgICogICBbamFd44Kz44Oz44Od44O844ON44Oz44OI44Gu44Kq44OW44K444Kn44Kv44OI44CCWy9qYV1cbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gZXZlbnQuY2FuY2VsXG4gICAqICAgW2VuXUNhbGwgdG8gY2FuY2VsIG9wZW5pbmcgc2xpZGluZy1tZW51LlsvZW5dXG4gICAqICAgW2phXeOCueODqeOCpOODh+OCo+ODs+OCsOODoeODi+ODpeODvOOBjOmWieOBmOOCi+OBruOCkuOCreODo+ODs+OCu+ODq+OBl+OBvuOBmeOAglsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAZXZlbnQgcG9zdGNsb3NlXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1GaXJlZCBqdXN0IGFmdGVyIHRoZSBzbGlkaW5nIG1lbnUgaXMgY2xvc2VkLlsvZW5dXG4gICAqICAgW2phXeOCueODqeOCpOODh+OCo+ODs+OCsOODoeODi+ODpeODvOOBjOmWieOBmOOBn+W+jOOBq+eZuueBq+OBl+OBvuOBmeOAglsvamFdXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBldmVudFxuICAgKiAgIFtlbl1FdmVudCBvYmplY3QuWy9lbl1cbiAgICogICBbamFd44Kk44OZ44Oz44OI44Kq44OW44K444Kn44Kv44OI44Gn44GZ44CCWy9qYV1cbiAgICogQHBhcmFtIHtPYmplY3R9IGV2ZW50LnNpZGVcbiAgICogICBbZW5dQ29tcG9uZW50IG9iamVjdC5bL2VuXVxuICAgKiAgIFtqYV3jgrPjg7Pjg53jg7zjg43jg7Pjg4jjga7jgqrjg5bjgrjjgqfjgq/jg4jjgIJbL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQGF0dHJpYnV0ZSBhbmltYXRpb25cbiAgICogQHR5cGUge1N0cmluZ31cbiAgICogQGRlZmF1bHQgIGRlZmF1bHRcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICBbZW5dU3BlY2lmeSB0aGUgYW5pbWF0aW9uLiBVc2Ugb25lIG9mIGBcIm92ZXJsYXlcImAsIGFuZCBgXCJkZWZhdWx0XCJgLlsvZW5dXG4gICAqICBbamFd44Ki44OL44Oh44O844K344On44Oz44KS5oyH5a6a44GX44G+44GZ44CCXCJvdmVybGF5XCIsIFwiZGVmYXVsdFwi44Gu44GE44Ga44KM44GL44KS5oyH5a6a44Gn44GN44G+44GZ44CCWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBhdHRyaWJ1dGUgYW5pbWF0aW9uLW9wdGlvbnNcbiAgICogQHR5cGUge0V4cHJlc3Npb259XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgW2VuXVNwZWNpZnkgdGhlIGFuaW1hdGlvbidzIGR1cmF0aW9uLCB0aW1pbmcgYW5kIGRlbGF5IHdpdGggYW4gb2JqZWN0IGxpdGVyYWwuIEUuZy4gYHtkdXJhdGlvbjogMC4yLCBkZWxheTogMSwgdGltaW5nOiAnZWFzZS1pbid9YC5bL2VuXVxuICAgKiAgW2phXeOCouODi+ODoeODvOOCt+ODp+ODs+aZguOBrmR1cmF0aW9uLCB0aW1pbmcsIGRlbGF544KS44Kq44OW44K444Kn44Kv44OI44Oq44OG44Op44Or44Gn5oyH5a6a44GX44G+44GZ44CCZS5nLiB7ZHVyYXRpb246IDAuMiwgZGVsYXk6IDEsIHRpbWluZzogJ2Vhc2UtaW4nfVsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAYXR0cmlidXRlIG9wZW4tdGhyZXNob2xkXG4gICAqIEB0eXBlIHtOdW1iZXJ9XG4gICAqIEBkZWZhdWx0ICAwLjNcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICBbZW5dU3BlY2lmeSBob3cgbXVjaCB0aGUgbWVudSBuZWVkcyB0byBiZSBzd2lwZWQgYmVmb3JlIG9wZW5pbmcuIEEgdmFsdWUgYmV0d2VlbiBgMGAgYW5kIGAxYC5bL2VuXVxuICAgKiAgW2phXeOBqeOBruOBj+OCieOBhOOCueODr+OCpOODl+OBmeOCjOOBsOOCueODqeOCpOODh+OCo+ODs+OCsOODoeODi+ODpeODvOOCkumWi+OBj+OBi+OBqeOBhuOBi+OBruWJsuWQiOOCkuaMh+WumuOBl+OBvuOBmeOAgjDjgYvjgokx44Gu6ZaT44Gu5pWw5YCk44KS5oyH5a6a44GX44G+44GZ44CC44K544Ov44Kk44OX44Gu6Led6Zui44GM44GT44GT44Gn5oyH5a6a44GX44Gf5pWw5YCk5o6b44GR44KL44GT44Gu6KaB57Sg44Gu5bmF44KI44KK44KC5aSn44GN44GR44KM44Gw44CB44K544Ov44Kk44OX44GM57WC44KP44Gj44Gf5pmC44Gr44GT44Gu6KaB57Sg44KS6ZaL44GN44G+44GZ44CC44OH44OV44Kp44Or44OI44GvMC4z44Gn44GZ44CCWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBhdHRyaWJ1dGUgY29sbGFwc2VcbiAgICogQHR5cGUge1N0cmluZ31cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXVxuICAgKiAgICAgU3BlY2lmeSB0aGUgY29sbGFwc2UgYmVoYXZpb3IuIFZhbGlkIHZhbHVlcyBhcmUgYFwicG9ydHJhaXRcImAsIGBcImxhbmRzY2FwZVwiYCBvciBhIG1lZGlhIHF1ZXJ5LlxuICAgKiAgICAgVGhlIHN0cmluZ3MgYFwicG9ydHJhaXRcImAgYW5kIGBcImxhbmRzY2FwZVwiYCBtZWFucyB0aGUgdmlldyB3aWxsIGNvbGxhcHNlIHdoZW4gZGV2aWNlIGlzIGluIGxhbmRzY2FwZSBvciBwb3J0cmFpdCBvcmllbnRhdGlvbi5cbiAgICogICAgIElmIHRoZSB2YWx1ZSBpcyBhIG1lZGlhIHF1ZXJ5LCB0aGUgdmlldyB3aWxsIGNvbGxhcHNlIHdoZW4gdGhlIG1lZGlhIHF1ZXJ5IHJlc29sdmVzIHRvIGB0cnVlYC5cbiAgICogICAgIElmIHRoZSB2YWx1ZSBpcyBub3QgZGVmaW5lZCwgdGhlIHZpZXcgYWx3YXlzIGJlIGluIGBcImNvbGxhcHNlXCJgIG1vZGUuXG4gICAqICAgWy9lbl1cbiAgICogICBbamFdXG4gICAqICAgICDlt6blgbTjga7jg5rjg7zjgrjjgpLpnZ7ooajnpLrjgavjgZnjgovmnaHku7bjgpLmjIflrprjgZfjgb7jgZnjgIJwb3J0cmFpdCwgbGFuZHNjYXBl44CBd2lkdGggI3B444KC44GX44GP44Gv44Oh44OH44Kj44Ki44Kv44Ko44Oq44Gu5oyH5a6a44GM5Y+v6IO944Gn44GZ44CCXG4gICAqICAgICBwb3J0cmFpdOOCguOBl+OBj+OBr2xhbmRzY2FwZeOCkuaMh+WumuOBmeOCi+OBqOOAgeODh+ODkOOCpOOCueOBrueUu+mdouOBjOe4puWQkeOBjeOCguOBl+OBj+OBr+aoquWQkeOBjeOBq+OBquOBo+OBn+aZguOBq+mBqeeUqOOBleOCjOOBvuOBmeOAglxuICAgKiAgICAg44Oh44OH44Kj44Ki44Kv44Ko44Oq44KS5oyH5a6a44GZ44KL44Go44CB5oyH5a6a44GX44Gf44Kv44Ko44Oq44Gr6YGp5ZCI44GX44Gm44GE44KL5aC05ZCI44Gr6YGp55So44GV44KM44G+44GZ44CCXG4gICAqICAgICDlgKTjgavkvZXjgoLmjIflrprjgZfjgarjgYTloLTlkIjjgavjga/jgIHluLjjgatjb2xsYXBzZeODouODvOODieOBq+OBquOCiuOBvuOBmeOAglxuICAgKiAgIFsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAYXR0cmlidXRlIHN3aXBlLXRhcmdldC13aWR0aFxuICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dVGhlIHdpZHRoIG9mIHN3aXBlYWJsZSBhcmVhIGNhbGN1bGF0ZWQgZnJvbSB0aGUgZWRnZSAoaW4gcGl4ZWxzKS4gVXNlIHRoaXMgdG8gZW5hYmxlIHN3aXBlIG9ubHkgd2hlbiB0aGUgZmluZ2VyIHRvdWNoIG9uIHRoZSBzY3JlZW4gZWRnZS5bL2VuXVxuICAgKiAgIFtqYV3jgrnjg6/jgqTjg5fjga7liKTlrprpoJjln5/jgpLjg5Tjgq/jgrvjg6vljZjkvY3jgafmjIflrprjgZfjgb7jgZnjgILnlLvpnaLjga7nq6/jgYvjgonmjIflrprjgZfjgZ/ot53pm6LjgavpgZTjgZnjgovjgajjg5rjg7zjgrjjgYzooajnpLrjgZXjgozjgb7jgZnjgIJbL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQGF0dHJpYnV0ZSB3aWR0aFxuICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dQ2FuIGJlIHNwZWNpZmllZCBpbiBlaXRoZXIgcGl4ZWxzIG9yIGFzIGEgcGVyY2VudGFnZSwgZS5nLiBgOTAlYCBvciBgMjAwcHhgLlsvZW5dXG4gICAqICAgW2phXeOBk+OBruimgee0oOOBruaoquW5heOCkuaMh+WumuOBl+OBvuOBmeOAgnB444GoJeOBp+OBruaMh+WumuOBjOWPr+iDveOBp+OBmeOAgmVnLiA5MCUsIDIwMHB4Wy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBhdHRyaWJ1dGUgc2lkZVxuICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgKiBAZGVmYXVsdCBsZWZ0XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1TcGVjaWZ5IHdoaWNoIHNpZGUgb2YgdGhlIHNjcmVlbiB0aGUgYDxvbnMtc3BsaXR0ZXItc2lkZT5gIGVsZW1lbnQgaXMgbG9jYXRlZC4gUG9zc2libGUgdmFsdWVzIGFyZSBgXCJsZWZ0XCJgIGFuZCBgXCJyaWdodFwiYC5bL2VuXVxuICAgKiAgIFtqYV3jgZPjga7opoHntKDjgYzlt6bjgYvlj7PjgYvjgpLmjIflrprjgZfjgb7jgZnjgILmjIflrprjgafjgY3jgovlgKTjga9cImxlZnRcIuOBi1wicmlnaHRcIuOBruOBv+OBp+OBmeOAglsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAYXR0cmlidXRlIG1vZGVcbiAgICogQHR5cGUge1N0cmluZ31cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXUN1cnJlbnQgbW9kZS4gUG9zc2libGUgdmFsdWVzIGFyZSBgXCJjb2xsYXBzZVwiYCBvciBgXCJzcGxpdFwiYC4gVGhpcyBhdHRyaWJ1dGUgaXMgcmVhZCBvbmx5LlsvZW5dXG4gICAqICAgW2phXeePvuWcqOOBruODouODvOODieOBjOioreWumuOBleOCjOOBvuOBmeOAglwiY29sbGFwc2VcIuOCguOBl+OBj+OBr1wic3BsaXRcIuOBjOaMh+WumuOBleOCjOOBvuOBmeOAguOBk+OBruWxnuaAp+OBr+iqreOBv+i+vOOBv+WwgueUqOOBp+OBmeOAglsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAYXR0cmlidXRlIHBhZ2VcbiAgICogQGluaXRvbmx5XG4gICAqIEB0eXBlIHtTdHJpbmd9XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1UaGUgVVJMIG9mIHRoZSBtZW51IHBhZ2UuWy9lbl1cbiAgICogICBbamFdb25zLXNwbGl0dGVyLXNpZGXopoHntKDjgavooajnpLrjgZnjgovjg5rjg7zjgrjjga5VUkzjgpLmjIflrprjgZfjgb7jgZnjgIJbL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQGF0dHJpYnV0ZSBzd2lwZWFibGVcbiAgICogQHR5cGUge0Jvb2xlYW59XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1XaGV0aGVyIHRvIGVuYWJsZSBzd2lwZSBpbnRlcmFjdGlvbiBvbiBjb2xsYXBzZSBtb2RlLlsvZW5dXG4gICAqICAgW2phXWNvbGxhcHNl44Oi44O844OJ5pmC44Gr44K544Ov44Kk44OX5pON5L2c44KS5pyJ5Yq544Gr44GZ44KL5aC05ZCI44Gr5oyH5a6a44GX44G+44GZ44CCWy9qYV1cbiAgICovXG5cbiAgaW5pdCgpIHtcbiAgICB0aGlzLl9wYWdlID0gbnVsbDtcbiAgICB0aGlzLl9wYWdlTG9hZGVyID0gZGVmYXVsdFBhZ2VMb2FkZXI7XG4gICAgdGhpcy5fY29sbGFwc2VNb2RlID0gbmV3IENvbGxhcHNlTW9kZSh0aGlzKTtcbiAgICB0aGlzLl9jb2xsYXBzZURldGVjdGlvbiA9IG5ldyBDb2xsYXBzZURldGVjdGlvbih0aGlzKTtcblxuICAgIHRoaXMuX2FuaW1hdG9yRmFjdG9yeSA9IG5ldyBBbmltYXRvckZhY3Rvcnkoe1xuICAgICAgYW5pbWF0b3JzOiBTcGxpdHRlckVsZW1lbnQuYW5pbWF0b3JzLFxuICAgICAgYmFzZUNsYXNzOiBTcGxpdHRlckFuaW1hdG9yLFxuICAgICAgYmFzZUNsYXNzTmFtZTogJ1NwbGl0dGVyQW5pbWF0b3InLFxuICAgICAgZGVmYXVsdEFuaW1hdGlvbjogdGhpcy5nZXRBdHRyaWJ1dGUoJ2FuaW1hdGlvbicpXG4gICAgfSk7XG4gICAgdGhpcy5fYm91bmRIYW5kbGVHZXN0dXJlID0gKGUpID0+IHRoaXMuX2NvbGxhcHNlTW9kZS5oYW5kbGVHZXN0dXJlKGUpO1xuICAgIHRoaXMuX3dhdGNoZWRBdHRyaWJ1dGVzID0gV0FUQ0hFRF9BVFRSSUJVVEVTO1xuICAgIGNvbnRlbnRSZWFkeSh0aGlzLCAoKSA9PiB7XG4gICAgICByZXdyaXRhYmxlcy5yZWFkeSh0aGlzLCAoKSA9PiB7XG4gICAgICAgIGNvbnN0IHBhZ2UgPSB0aGlzLl9nZXRQYWdlVGFyZ2V0KCk7XG5cbiAgICAgICAgaWYgKHBhZ2UpIHtcbiAgICAgICAgICB0aGlzLmxvYWQocGFnZSk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG5cbiAgY29ubmVjdGVkQ2FsbGJhY2soKSB7XG4gICAgaWYgKCF1dGlsLm1hdGNoKHRoaXMucGFyZW50Tm9kZSwgJ29ucy1zcGxpdHRlcicpKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ1BhcmVudCBtdXN0IGJlIGFuIG9ucy1zcGxpdHRlciBlbGVtZW50LicpO1xuICAgIH1cblxuICAgIHRoaXMuX2dlc3R1cmVEZXRlY3RvciA9IG5ldyBHZXN0dXJlRGV0ZWN0b3IodGhpcy5wYXJlbnRFbGVtZW50LCB7ZHJhZ01pbkRpc3RhbmNlOiAxfSk7XG5cbiAgICBjb250ZW50UmVhZHkodGhpcywgKCkgPT4ge1xuICAgICAgdGhpcy5fd2F0Y2hlZEF0dHJpYnV0ZXMuZm9yRWFjaChlID0+IHRoaXMuX3VwZGF0ZShlKSk7XG4gICAgfSk7XG5cbiAgICBpZiAoIXRoaXMuaGFzQXR0cmlidXRlKCdzaWRlJykpIHtcbiAgICAgIHRoaXMuc2V0QXR0cmlidXRlKCdzaWRlJywgJ2xlZnQnKTtcbiAgICB9XG4gIH1cblxuICBfZ2V0UGFnZVRhcmdldCgpIHtcbiAgICByZXR1cm4gdGhpcy5fcGFnZSB8fCB0aGlzLmdldEF0dHJpYnV0ZSgncGFnZScpO1xuICB9XG5cbiAgZ2V0IHNpZGUoKSB7XG4gICAgcmV0dXJuIHRoaXMuZ2V0QXR0cmlidXRlKCdzaWRlJykgPT09ICdyaWdodCcgPyAncmlnaHQnIDogJ2xlZnQnO1xuICB9XG5cbiAgZGlzY29ubmVjdGVkQ2FsbGJhY2soKSB7XG4gICAgdGhpcy5fY29sbGFwc2VEZXRlY3Rpb24uZGlzYWJsZSgpO1xuICAgIHRoaXMuX2dlc3R1cmVEZXRlY3Rvci5kaXNwb3NlKCk7XG4gICAgdGhpcy5fZ2VzdHVyZURldGVjdG9yID0gbnVsbDtcbiAgfVxuXG4gIHN0YXRpYyBnZXQgb2JzZXJ2ZWRBdHRyaWJ1dGVzKCkge1xuICAgIHJldHVybiBXQVRDSEVEX0FUVFJJQlVURVM7XG4gIH1cblxuICBhdHRyaWJ1dGVDaGFuZ2VkQ2FsbGJhY2sobmFtZSwgbGFzdCwgY3VycmVudCkge1xuICAgIHRoaXMuX3VwZGF0ZShuYW1lLCBjdXJyZW50KTtcbiAgfVxuXG4gIF91cGRhdGUobmFtZSwgdmFsdWUpIHtcbiAgICBuYW1lID0gJ191cGRhdGUnICsgbmFtZS5zcGxpdCgnLScpLm1hcChlID0+IGVbMF0udG9VcHBlckNhc2UoKSArIGUuc2xpY2UoMSkpLmpvaW4oJycpO1xuICAgIHJldHVybiB0aGlzW25hbWVdKHZhbHVlKTtcbiAgfVxuXG4gIF9lbWl0RXZlbnQobmFtZSkge1xuICAgIGlmIChuYW1lLnNsaWNlKDAsIDMpICE9PSAncHJlJykge1xuICAgICAgcmV0dXJuIHV0aWwudHJpZ2dlckVsZW1lbnRFdmVudCh0aGlzLCBuYW1lLCB7c2lkZTogdGhpc30pO1xuICAgIH1cbiAgICBsZXQgaXNDYW5jZWxlZCA9IGZhbHNlO1xuXG4gICAgdXRpbC50cmlnZ2VyRWxlbWVudEV2ZW50KHRoaXMsIG5hbWUsIHtcbiAgICAgIHNpZGU6IHRoaXMsXG4gICAgICBjYW5jZWw6ICgpID0+IGlzQ2FuY2VsZWQgPSB0cnVlXG4gICAgfSk7XG5cbiAgICByZXR1cm4gaXNDYW5jZWxlZDtcbiAgfVxuXG4gIF91cGRhdGVDb2xsYXBzZSh2YWx1ZSA9IHRoaXMuZ2V0QXR0cmlidXRlKCdjb2xsYXBzZScpKSB7XG4gICAgaWYgKHZhbHVlID09PSBudWxsIHx8IHZhbHVlID09PSAnc3BsaXQnKSB7XG4gICAgICB0aGlzLl9jb2xsYXBzZURldGVjdGlvbi5kaXNhYmxlKCk7XG4gICAgICByZXR1cm4gdGhpcy5fdXBkYXRlTW9kZShTUExJVF9NT0RFKTtcbiAgICB9XG4gICAgaWYgKHZhbHVlID09PSAnJyB8fCB2YWx1ZSA9PT0gJ2NvbGxhcHNlJykge1xuICAgICAgdGhpcy5fY29sbGFwc2VEZXRlY3Rpb24uZGlzYWJsZSgpO1xuICAgICAgcmV0dXJuIHRoaXMuX3VwZGF0ZU1vZGUoQ09MTEFQU0VfTU9ERSk7XG4gICAgfVxuXG4gICAgdGhpcy5fY29sbGFwc2VEZXRlY3Rpb24uY2hhbmdlVGFyZ2V0KHZhbHVlKTtcbiAgfVxuXG4gIC8vIHJlYWRvbmx5IGF0dHJpYnV0ZSBmb3IgdGhlIHVzZXJzXG4gIF91cGRhdGVNb2RlKG1vZGUpIHtcbiAgICBpZiAobW9kZSAhPT0gdGhpcy5fbW9kZSkge1xuICAgICAgdGhpcy5fbW9kZSA9IG1vZGU7XG4gICAgICB0aGlzLl9jb2xsYXBzZU1vZGVbbW9kZSA9PT0gQ09MTEFQU0VfTU9ERSA/ICdlbnRlck1vZGUnIDogJ2V4aXRNb2RlJ10oKTtcbiAgICAgIHRoaXMuc2V0QXR0cmlidXRlKCdtb2RlJywgbW9kZSk7XG5cbiAgICAgIHV0aWwudHJpZ2dlckVsZW1lbnRFdmVudCh0aGlzLCAnbW9kZWNoYW5nZScsIHtzaWRlOiB0aGlzLCBtb2RlOiBtb2RlfSk7XG4gICAgfVxuICB9XG5cbiAgX3VwZGF0ZU9wZW5UaHJlc2hvbGQodGhyZXNob2xkID0gdGhpcy5nZXRBdHRyaWJ1dGUoJ29wZW4tdGhyZXNob2xkJykpIHtcbiAgICB0aGlzLl90aHJlc2hvbGQgPSBNYXRoLm1heCgwLCBNYXRoLm1pbigxLCBwYXJzZUZsb2F0KHRocmVzaG9sZCkgfHwgMC4zKSk7XG4gIH1cblxuICBfdXBkYXRlU3dpcGVhYmxlKHN3aXBlYWJsZSA9IHRoaXMuZ2V0QXR0cmlidXRlKCdzd2lwZWFibGUnKSkge1xuICAgIGNvbnN0IGFjdGlvbiA9IHN3aXBlYWJsZSA9PT0gbnVsbCA/ICdvZmYnIDogJ29uJztcblxuICAgIGlmICh0aGlzLl9nZXN0dXJlRGV0ZWN0b3IpIHtcbiAgICAgIHRoaXMuX2dlc3R1cmVEZXRlY3RvclthY3Rpb25dKCdkcmFnc3RhcnQgZHJhZ2xlZnQgZHJhZ3JpZ2h0IGRyYWdlbmQnLCB0aGlzLl9ib3VuZEhhbmRsZUdlc3R1cmUpO1xuICAgIH1cbiAgfVxuXG4gIF91cGRhdGVTd2lwZVRhcmdldFdpZHRoKHZhbHVlID0gdGhpcy5nZXRBdHRyaWJ1dGUoJ3N3aXBlLXRhcmdldC13aWR0aCcpKSB7XG4gICAgdGhpcy5fc3dpcGVUYXJnZXRXaWR0aCA9IE1hdGgubWF4KDAsIHBhcnNlSW50KHZhbHVlKSB8fCAwKTtcbiAgfVxuXG4gIF91cGRhdGVXaWR0aCgpIHtcbiAgICB0aGlzLnN0eWxlLndpZHRoID0gdGhpcy5fd2lkdGg7XG4gIH1cblxuICBnZXQgX3dpZHRoKCkge1xuICAgIGNvbnN0IHdpZHRoID0gdGhpcy5nZXRBdHRyaWJ1dGUoJ3dpZHRoJyk7XG4gICAgcmV0dXJuIC9eXFxkKyhweHwlKSQvLnRlc3Qod2lkdGgpID8gd2lkdGggOiAnODAlJztcbiAgfVxuXG4gIHNldCBfd2lkdGgodmFsdWUpIHtcbiAgICB0aGlzLnNldEF0dHJpYnV0ZSgnd2lkdGgnLCB2YWx1ZSk7XG4gIH1cblxuICBfdXBkYXRlU2lkZShzaWRlID0gdGhpcy5nZXRBdHRyaWJ1dGUoJ3NpZGUnKSkge1xuICAgIHRoaXMuX3NpZGUgPSBzaWRlID09PSAncmlnaHQnID8gc2lkZSA6ICdsZWZ0JztcbiAgfVxuXG4gIF91cGRhdGVBbmltYXRpb24oYW5pbWF0aW9uID0gdGhpcy5nZXRBdHRyaWJ1dGUoJ2FuaW1hdGlvbicpKSB7XG4gICAgdGhpcy5fYW5pbWF0b3IgPSB0aGlzLl9hbmltYXRvckZhY3RvcnkubmV3QW5pbWF0b3Ioe2FuaW1hdGlvbn0pO1xuICAgIHRoaXMuX2FuaW1hdG9yLmFjdGl2YXRlKHRoaXMpO1xuICB9XG5cbiAgX3VwZGF0ZUFuaW1hdGlvbk9wdGlvbnModmFsdWUgPSB0aGlzLmdldEF0dHJpYnV0ZSgnYW5pbWF0aW9uLW9wdGlvbnMnKSkge1xuICAgIHRoaXMuX2FuaW1hdG9yLnVwZGF0ZU9wdGlvbnMoQW5pbWF0b3JGYWN0b3J5LnBhcnNlQW5pbWF0aW9uT3B0aW9uc1N0cmluZyh2YWx1ZSkpO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwcm9wZXJ0eSBwYWdlXG4gICAqIEB0eXBlIHsqfVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dUGFnZSBsb2NhdGlvbiB0byBsb2FkIGluIHRoZSBzcGxpdHRlciBzaWRlLlsvZW5dXG4gICAqICAgW2phXeOBk+OBruimgee0oOWGheOBq+ihqOekuuOBmeOCi+ODmuODvOOCuOOCkuaMh+WumuOBl+OBvuOBmeOAglsvamFdXG4gICAqL1xuICBnZXQgcGFnZSgpIHtcbiAgICByZXR1cm4gdGhpcy5fcGFnZTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcGFyYW0geyp9IHBhZ2VcbiAgICovXG4gIHNldCBwYWdlKHBhZ2UpIHtcbiAgICB0aGlzLl9wYWdlID0gcGFnZTtcbiAgfVxuXG4gIGdldCBfY29udGVudCgpIHtcbiAgICByZXR1cm4gdGhpcy5jaGlsZHJlblswXTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcHJvcGVydHkgcGFnZUxvYWRlclxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dWy9lbl1cbiAgICogICBbamFdWy9qYV1cbiAgICovXG4gIGdldCBwYWdlTG9hZGVyKCkge1xuICAgIHJldHVybiB0aGlzLl9wYWdlTG9hZGVyO1xuICB9XG5cbiAgc2V0IHBhZ2VMb2FkZXIobG9hZGVyKSB7XG4gICAgaWYgKCEobG9hZGVyIGluc3RhbmNlb2YgUGFnZUxvYWRlcikpIHtcbiAgICAgIHRocm93IEVycm9yKCdGaXJzdCBwYXJhbWV0ZXIgbXVzdCBiZSBhbiBpbnN0YW5jZSBvZiBQYWdlTG9hZGVyLicpO1xuICAgIH1cbiAgICB0aGlzLl9wYWdlTG9hZGVyID0gbG9hZGVyO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwcm9wZXJ0eSBtb2RlXG4gICAqIEByZWFkb25seVxuICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dQ3VycmVudCBtb2RlLiBQb3NzaWJsZSB2YWx1ZXMgYXJlIFwic3BsaXRcIiwgXCJjb2xsYXBzZVwiLCBcImNsb3NlZFwiLCBcIm9wZW5cIiBvciBcImNoYW5naW5nXCIuWy9lbl1cbiAgICogICBbamFdWy9qYV1cbiAgICovXG4gIGdldCBtb2RlKCkge1xuICAgIHJldHVybiB0aGlzLl9tb2RlO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwcm9wZXJ0eSBpc09wZW5cbiAgICogQHR5cGUge0Jvb2xlYW59XG4gICAqIEByZWFkb25seVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dVGhpcyB2YWx1ZSBpcyBgdHJ1ZWAgd2hlbiB0aGUgbWVudSBpcyBvcGVuLi5bL2VuXVxuICAgKiAgIFtqYV1bL2phXVxuICAgKi9cbiAgZ2V0IGlzT3BlbigpIHtcbiAgICByZXR1cm4gdGhpcy5fY29sbGFwc2VNb2RlLmlzT3BlbigpO1xuICB9XG5cbiAgLyoqXG4gICAqIEBtZXRob2Qgb3BlblxuICAgKiBAc2lnbmF0dXJlIG9wZW4oW29wdGlvbnNdKVxuICAgKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnNdXG4gICAqICAgW2VuXVBhcmFtZXRlciBvYmplY3QuWy9lbl1cbiAgICogICBbamFd44Kq44OX44K344On44Oz44KS5oyH5a6a44GZ44KL44Kq44OW44K444Kn44Kv44OI44CCWy9qYV1cbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gW29wdGlvbnMuY2FsbGJhY2tdXG4gICAqICAgW2VuXVRoaXMgZnVuY3Rpb24gd2lsbCBiZSBjYWxsZWQgYWZ0ZXIgdGhlIG1lbnUgaGFzIGJlZW4gb3BlbmVkLlsvZW5dXG4gICAqICAgW2phXeODoeODi+ODpeODvOOBjOmWi+OBhOOBn+W+jOOBq+WRvOOBs+WHuuOBleOCjOOCi+mWouaVsOOCquODluOCuOOCp+OCr+ODiOOCkuaMh+WumuOBl+OBvuOBmeOAglsvamFdXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1PcGVuIG1lbnUgaW4gY29sbGFwc2UgbW9kZS5bL2VuXVxuICAgKiAgIFtqYV1jb2xsYXBzZeODouODvOODieOBq+OBquOBo+OBpuOBhOOCi29ucy1zcGxpdHRlci1zaWRl6KaB57Sg44KS6ZaL44GN44G+44GZ44CCWy9qYV1cbiAgICogQHJldHVybiB7UHJvbWlzZX1cbiAgICogICBbZW5dUmVzb2x2ZXMgdG8gdGhlIHNwbGl0dGVyIHNpZGUgZWxlbWVudCBvciBmYWxzZSBpZiBub3QgaW4gY29sbGFwc2UgbW9kZVsvZW5dXG4gICAqICAgW2phXVsvamFdXG4gICAqL1xuICBvcGVuKG9wdGlvbnMgPSB7fSkge1xuICAgIHJldHVybiB0aGlzLl9jb2xsYXBzZU1vZGUuZXhlY3V0ZUFjdGlvbignb3BlbicsIG9wdGlvbnMpO1xuICB9XG5cbiAgLyoqXG4gICAqIEBtZXRob2QgY2xvc2VcbiAgICogQHNpZ25hdHVyZSBjbG9zZShbb3B0aW9uc10pXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0aW9uc11cbiAgICogICBbZW5dUGFyYW1ldGVyIG9iamVjdC5bL2VuXVxuICAgKiAgIFtqYV3jgqrjg5fjgrfjg6fjg7PjgpLmjIflrprjgZnjgovjgqrjg5bjgrjjgqfjgq/jg4jjgIJbL2phXVxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBbb3B0aW9ucy5jYWxsYmFja11cbiAgICogICBbZW5dVGhpcyBmdW5jdGlvbiB3aWxsIGJlIGNhbGxlZCBhZnRlciB0aGUgbWVudSBoYXMgYmVlbiBjbG9zZWQuWy9lbl1cbiAgICogICBbamFd44Oh44OL44Ol44O844GM6ZaJ44GY44Gf5b6M44Gr5ZG844Gz5Ye644GV44KM44KL6Zai5pWw44Kq44OW44K444Kn44Kv44OI44KS5oyH5a6a44GX44G+44GZ44CCWy9qYV1cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXUNsb3NlIG1lbnUgaW4gY29sbGFwc2UgbW9kZS5bL2VuXVxuICAgKiAgIFtqYV1jb2xsYXBzZeODouODvOODieOBq+OBquOBo+OBpuOBhOOCi29ucy1zcGxpdHRlci1zaWRl6KaB57Sg44KS6ZaJ44GY44G+44GZ44CCWy9qYV1cbiAgICogQHJldHVybiB7UHJvbWlzZX1cbiAgICogICBbZW5dUmVzb2x2ZXMgdG8gdGhlIHNwbGl0dGVyIHNpZGUgZWxlbWVudCBvciBmYWxzZSBpZiBub3QgaW4gY29sbGFwc2UgbW9kZVsvZW5dXG4gICAqICAgW2phXVsvamFdXG4gICAqL1xuICBjbG9zZShvcHRpb25zID0ge30pIHtcbiAgICByZXR1cm4gdGhpcy5fY29sbGFwc2VNb2RlLmV4ZWN1dGVBY3Rpb24oJ2Nsb3NlJywgb3B0aW9ucyk7XG4gIH1cblxuICAvKipcbiAgICogQG1ldGhvZCB0b2dnbGVcbiAgICogQHNpZ25hdHVyZSB0b2dnbGUoW29wdGlvbnNdKVxuICAgKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnNdXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1PcGVucyBpZiBpdCdzIGNsb3NlZC4gQ2xvc2VzIGlmIGl0J3Mgb3Blbi5bL2VuXVxuICAgKiAgIFtqYV3plovjgZHjgabjgYTjgovloLTlkIjjga/opoHntKDjgpLplonjgZjjgb7jgZnjgZ3jgZfjgabplovjgZHjgabjgYTjgovloLTlkIjjga/opoHntKDjgpLplovjgY3jgb7jgZnjgIJbL2phXVxuICAgKiBAcmV0dXJuIHtQcm9taXNlfVxuICAgKiAgIFtlbl1SZXNvbHZlcyB0byB0aGUgc3BsaXR0ZXIgc2lkZSBlbGVtZW50IG9yIGZhbHNlIGlmIG5vdCBpbiBjb2xsYXBzZSBtb2RlWy9lbl1cbiAgICogICBbamFdWy9qYV1cbiAgICovXG4gIHRvZ2dsZShvcHRpb25zID0ge30pIHtcbiAgICByZXR1cm4gdGhpcy5pc09wZW4gPyB0aGlzLmNsb3NlKG9wdGlvbnMpIDogdGhpcy5vcGVuKG9wdGlvbnMpO1xuICB9XG5cbiAgLyoqXG4gICAqIEBtZXRob2QgbG9hZFxuICAgKiBAc2lnbmF0dXJlIGxvYWQocGFnZSwgW29wdGlvbnNdKVxuICAgKiBAcGFyYW0ge1N0cmluZ30gcGFnZVxuICAgKiAgIFtlbl1QYWdlIFVSTC4gQ2FuIGJlIGVpdGhlciBhbiBIVE1MIGRvY3VtZW50IG9yIGFuIDxvbnMtdGVtcGxhdGU+LlsvZW5dXG4gICAqICAgW2phXXBhZ2Xjga5VUkzjgYvjgIFvbnMtdGVtcGxhdGXjgaflrqPoqIDjgZfjgZ/jg4bjg7Pjg5fjg6zjg7zjg4jjga5pZOWxnuaAp+OBruWApOOCkuaMh+WumuOBl+OBvuOBmeOAglsvamFdXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0aW9uc11cbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gW29wdGlvbnMuY2FsbGJhY2tdXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1TaG93IHRoZSBwYWdlIHNwZWNpZmllZCBpbiBwYWdlVXJsIGluIHRoZSByaWdodCBzZWN0aW9uWy9lbl1cbiAgICogICBbamFd5oyH5a6a44GX44GfVVJM44KS44Oh44Kk44Oz44Oa44O844K444KS6Kqt44G/6L6844G/44G+44GZ44CCWy9qYV1cbiAgICogQHJldHVybiB7UHJvbWlzZX1cbiAgICogICBbZW5dUmVzb2x2ZXMgdG8gdGhlIG5ldyBwYWdlIGVsZW1lbnRbL2VuXVxuICAgKiAgIFtqYV1bL2phXVxuICAgKi9cbiAgbG9hZChwYWdlLCBvcHRpb25zID0ge30pIHtcbiAgICB0aGlzLl9wYWdlID0gcGFnZTtcbiAgICBjb25zdCBjYWxsYmFjayA9IG9wdGlvbnMuY2FsbGJhY2sgfHwgKCgpID0+IHt9KTtcblxuICAgIHJldHVybiBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHtcbiAgICAgIGxldCBvbGRDb250ZW50ID0gdGhpcy5fY29udGVudCB8fCBudWxsO1xuXG4gICAgICB0aGlzLl9wYWdlTG9hZGVyLmxvYWQoe3BhZ2UsIHBhcmVudDogdGhpc30sIHBhZ2VFbGVtZW50ID0+IHtcbiAgICAgICAgaWYgKG9sZENvbnRlbnQpIHtcbiAgICAgICAgICB0aGlzLl9wYWdlTG9hZGVyLnVubG9hZChvbGRDb250ZW50KTtcbiAgICAgICAgICBvbGRDb250ZW50ID0gbnVsbDtcbiAgICAgICAgfVxuXG4gICAgICAgIHNldEltbWVkaWF0ZSgoKSA9PiB0aGlzLl9zaG93KCkpO1xuXG4gICAgICAgIGNhbGxiYWNrKHBhZ2VFbGVtZW50KTtcbiAgICAgICAgcmVzb2x2ZShwYWdlRWxlbWVudCk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxuXG4gIF9zaG93KCkge1xuICAgIGlmICh0aGlzLl9jb250ZW50KSB7XG4gICAgICB0aGlzLl9jb250ZW50Ll9zaG93KCk7XG4gICAgfVxuICB9XG5cbiAgX2hpZGUoKSB7XG4gICAgaWYgKHRoaXMuX2NvbnRlbnQpIHtcbiAgICAgIHRoaXMuX2NvbnRlbnQuX2hpZGUoKTtcbiAgICB9XG4gIH1cblxuICBfZGVzdHJveSgpIHtcbiAgICBpZiAodGhpcy5fY29udGVudCkge1xuICAgICAgdGhpcy5fcGFnZUxvYWRlci51bmxvYWQodGhpcy5fY29udGVudCk7XG4gICAgfVxuICAgIHRoaXMucmVtb3ZlKCk7XG4gIH1cblxuICBzdGF0aWMgZ2V0IGV2ZW50cygpIHtcbiAgICByZXR1cm4gWydwcmVvcGVuJywgJ3Bvc3RvcGVuJywgJ3ByZWNsb3NlJywgJ3Bvc3RjbG9zZScsICdtb2RlY2hhbmdlJ107XG4gIH1cblxuICBzdGF0aWMgZ2V0IHJld3JpdGFibGVzKCkge1xuICAgIHJldHVybiByZXdyaXRhYmxlcztcbiAgfVxufVxuXG5jdXN0b21FbGVtZW50cy5kZWZpbmUoJ29ucy1zcGxpdHRlci1zaWRlJywgU3BsaXR0ZXJTaWRlRWxlbWVudCk7XG4iLCIvKlxuQ29weXJpZ2h0IDIwMTMtMjAxNSBBU0lBTCBDT1JQT1JBVElPTlxuXG5MaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xueW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG5cbiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuXG5Vbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG5kaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG5XSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cblNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbmxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuXG4qL1xuXG5pbXBvcnQgdXRpbCBmcm9tICcuLi9vbnMvdXRpbCc7XG5pbXBvcnQgYXV0b1N0eWxlIGZyb20gJy4uL29ucy9hdXRvc3R5bGUnO1xuaW1wb3J0IE1vZGlmaWVyVXRpbCBmcm9tICcuLi9vbnMvaW50ZXJuYWwvbW9kaWZpZXItdXRpbCc7XG5pbXBvcnQgQmFzZUVsZW1lbnQgZnJvbSAnLi4vb25zL2Jhc2UtZWxlbWVudCc7XG5pbXBvcnQgY29udGVudFJlYWR5IGZyb20gJy4uL29ucy9jb250ZW50LXJlYWR5JztcbmltcG9ydCBHZXN0dXJlRGV0ZWN0b3IgZnJvbSAnLi4vb25zL2dlc3R1cmUtZGV0ZWN0b3InO1xuXG5jb25zdCBkZWZhdWx0Q2xhc3NOYW1lID0gJ3N3aXRjaCc7XG5cbmNvbnN0IHNjaGVtZSA9IHtcbiAgJyc6ICdzd2l0Y2gtLSonLFxuICAnLnN3aXRjaF9faW5wdXQnOiAnc3dpdGNoLS0qX19pbnB1dCcsXG4gICcuc3dpdGNoX19oYW5kbGUnOiAnc3dpdGNoLS0qX19oYW5kbGUnLFxuICAnLnN3aXRjaF9fdG9nZ2xlJzogJ3N3aXRjaC0tKl9fdG9nZ2xlJ1xufTtcblxuY29uc3QgdGVtcGxhdGUgPSB1dGlsLmNyZWF0ZUZyYWdtZW50KGBcbiAgPGlucHV0IHR5cGU9XCJjaGVja2JveFwiIGNsYXNzPVwic3dpdGNoX19pbnB1dFwiPlxuICA8ZGl2IGNsYXNzPVwic3dpdGNoX190b2dnbGVcIj5cbiAgICA8ZGl2IGNsYXNzPVwic3dpdGNoX19oYW5kbGVcIj5cbiAgICAgIDxkaXYgY2xhc3M9XCJzd2l0Y2hfX3RvdWNoXCI+PC9kaXY+XG4gICAgPC9kaXY+XG4gIDwvZGl2PlxuYCk7XG5cbmNvbnN0IGxvY2F0aW9ucyA9IHtcbiAgaW9zOiBbMSwgMjFdLFxuICBtYXRlcmlhbDogWzAsIDE2XVxufTtcblxuLyoqXG4gKiBAZWxlbWVudCBvbnMtc3dpdGNoXG4gKiBAY2F0ZWdvcnkgZm9ybVxuICogQGRlc2NyaXB0aW9uXG4gKiAgIFtlbl1cbiAqICAgICBTd2l0Y2ggY29tcG9uZW50LiBUaGUgc3dpdGNoIGNhbiBiZSB0b2dnbGVkIGJvdGggYnkgZHJhZ2dpbmcgYW5kIHRhcHBpbmcuXG4gKlxuICogICAgIFdpbGwgYXV0b21hdGljYWxseSBkaXNwbGF5cyBhIE1hdGVyaWFsIERlc2lnbiBzd2l0Y2ggb24gQW5kcm9pZCBkZXZpY2VzLlxuICogICBbL2VuXVxuICogICBbamFd44K544Kk44OD44OB44KS6KGo56S644GZ44KL44Kz44Oz44Od44O844ON44Oz44OI44Gn44GZ44CCWy9qYV1cbiAqIEBtb2RpZmllciBtYXRlcmlhbFxuICogICBbZW5dTWF0ZXJpYWwgRGVzaWduIHN3aXRjaFsvZW5dXG4gKiAgIFtqYV1bL2phXVxuICogQGNvZGVwZW4gTHBYWlFRXG4gKiBAdHV0b3JpYWwgdmFuaWxsYS9SZWZlcmVuY2Uvc3dpdGNoXG4gKiBAZ3VpZGUgYWRkaW5nLXBhZ2UtY29udGVudFxuICogICBbZW5dVXNpbmcgZm9ybSBjb21wb25lbnRzWy9lbl1cbiAqICAgW2phXeODleOCqeODvOODoOOCkuS9v+OBhlsvamFdXG4gKiBAZ3VpZGUgdXNpbmctbW9kaWZpZXIgW2VuXU1vcmUgZGV0YWlscyBhYm91dCB0aGUgYG1vZGlmaWVyYCBhdHRyaWJ1dGVbL2VuXVtqYV1tb2RpZmllcuWxnuaAp+OBruS9v+OBhOaWuVsvamFdXG4gKiBAZXhhbXBsZVxuICogPG9ucy1zd2l0Y2ggY2hlY2tlZD48L29ucy1zd2l0Y2g+XG4gKiA8b25zLXN3aXRjaCBkaXNhYmxlZD48L29ucy1zd2l0Y2g+XG4gKiA8b25zLXN3aXRjaCBtb2RpZmllcj1cIm1hdGVyaWFsXCI+PC9vbnMtc3dpdGNoPlxuICovXG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFN3aXRjaEVsZW1lbnQgZXh0ZW5kcyBCYXNlRWxlbWVudCB7XG5cbiAgLyoqXG4gICAqIEBldmVudCBjaGFuZ2VcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXUZpcmVkIHdoZW4gdGhlIHN3aXRjaCBpcyB0b2dnbGVkLlsvZW5dXG4gICAqICAgW2phXU9OL09GRuOBjOWkieOCj+OBo+OBn+aZguOBq+eZuueBq+OBl+OBvuOBmeOAglsvamFdXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBldmVudFxuICAgKiAgIFtlbl1FdmVudCBvYmplY3QuWy9lbl1cbiAgICogICBbamFd44Kk44OZ44Oz44OI44Kq44OW44K444Kn44Kv44OI44CCWy9qYV1cbiAgICogQHBhcmFtIHtPYmplY3R9IGV2ZW50LnN3aXRjaFxuICAgKiAgIFtlbl1Td2l0Y2ggb2JqZWN0LlsvZW5dXG4gICAqICAgW2phXeOCpOODmeODs+ODiOOBjOeZuueBq+OBl+OBn1N3aXRjaOOCquODluOCuOOCp+OCr+ODiOOCkui/lOOBl+OBvuOBmeOAglsvamFdXG4gICAqIEBwYXJhbSB7Qm9vbGVhbn0gZXZlbnQudmFsdWVcbiAgICogICBbZW5dQ3VycmVudCB2YWx1ZS5bL2VuXVxuICAgKiAgIFtqYV3nj77lnKjjga7lgKTjgpLov5TjgZfjgb7jgZnjgIJbL2phXVxuICAgKiBAcGFyYW0ge0Jvb2xlYW59IGV2ZW50LmlzSW50ZXJhY3RpdmVcbiAgICogICBbZW5dVHJ1ZSBpZiB0aGUgY2hhbmdlIHdhcyB0cmlnZ2VyZWQgYnkgdGhlIHVzZXIgY2xpY2tpbmcgb24gdGhlIHN3aXRjaC5bL2VuXVxuICAgKiAgIFtqYV3jgr/jg4Pjg5fjgoTjgq/jg6rjg4Pjgq/jgarjganjga7jg6bjg7zjgrbjga7mk43kvZzjgavjgojjgaPjgablpInjgo/jgaPjgZ/loLTlkIjjgavjga90cnVl44KS6L+U44GX44G+44GZ44CCWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBhdHRyaWJ1dGUgbW9kaWZpZXJcbiAgICogQHR5cGUge1N0cmluZ31cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICBbZW5dVGhlIGFwcGVhcmFuY2Ugb2YgdGhlIHN3aXRjaC5bL2VuXVxuICAgKiAgW2phXeOCueOCpOODg+ODgeOBruihqOePvuOCkuaMh+WumuOBl+OBvuOBmeOAglsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAYXR0cmlidXRlIGRpc2FibGVkXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1XaGV0aGVyIHRoZSBzd2l0Y2ggaXMgYmUgZGlzYWJsZWQuWy9lbl1cbiAgICogICBbamFd44K544Kk44OD44OB44KS54Sh5Yq544Gu54q25oWL44Gr44GZ44KL5aC05ZCI44Gr5oyH5a6a44GX44G+44GZ44CCWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBhdHRyaWJ1dGUgY2hlY2tlZFxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dV2hldGhlciB0aGUgc3dpdGNoIGlzIGNoZWNrZWQuWy9lbl1cbiAgICogICBbamFd44K544Kk44OD44OB44GMT07jga7nirbmhYvjgavjgZnjgovjgajjgY3jgavmjIflrprjgZfjgb7jgZnjgIJbL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQGF0dHJpYnV0ZSBpbnB1dC1pZFxuICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dU3BlY2lmeSB0aGUgYGlkYCBhdHRyaWJ1dGUgb2YgdGhlIGlubmVyIGA8aW5wdXQ+YCBlbGVtZW50LiBUaGlzIGlzIHVzZWZ1bCB3aGVuIHVzaW5nIGA8bGFiZWwgZm9yPVwiLi4uXCI+YCBlbGVtZW50cy5bL2VuXVxuICAgKiAgIFtqYV1bL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQHByb3BlcnR5IGNoZWNrZWRcbiAgICogQHR5cGUge0Jvb2xlYW59XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1UaGlzIHZhbHVlIGlzIGB0cnVlYCBpZiB0aGUgc3dpdGNoIGlzIGNoZWNrZWQuWy9lbl1cbiAgICogICBbamFd44K544Kk44OD44OB44GMT07jga7loLTlkIjjgatgdHJ1ZWDjgIJbL2phXVxuICAgKi9cblxuICBnZXQgY2hlY2tlZCgpIHtcbiAgICByZXR1cm4gdGhpcy5fY2hlY2tlZDtcbiAgfVxuXG4gIHNldCBjaGVja2VkKHZhbHVlKSB7XG4gICAgdGhpcy5fY2hlY2tlZCA9ICEhdmFsdWU7XG4gICAgdXRpbC50b2dnbGVBdHRyaWJ1dGUodGhpcywgJ2NoZWNrZWQnLCB0aGlzLl9jaGVja2VkKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcHJvcGVydHkgZGlzYWJsZWRcbiAgICogQHR5cGUge0Jvb2xlYW59XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1XaGV0aGVyIHRoZSBlbGVtZW50IGlzIGRpc2FibGVkIG9yIG5vdC5bL2VuXVxuICAgKiAgIFtqYV3nhKHlirnljJbjgZXjgozjgabjgYTjgovloLTlkIjjgatgdHJ1ZWDjgIJbL2phXVxuICAgKi9cbiAgZ2V0IGRpc2FibGVkKCkge1xuICAgIHJldHVybiB0aGlzLl9kaXNhYmxlZDtcbiAgfVxuXG4gIHNldCBkaXNhYmxlZCh2YWx1ZSkge1xuICAgIGNvbnRlbnRSZWFkeSh0aGlzLCAoKSA9PiB7XG4gICAgICB0aGlzLl9kaXNhYmxlZCA9ICEhdmFsdWU7XG4gICAgICB1dGlsLnRvZ2dsZUF0dHJpYnV0ZSh0aGlzLCAnZGlzYWJsZWQnLCB0aGlzLl9kaXNhYmxlZCk7XG4gICAgICB0aGlzLl9jaGVja2JveC5kaXNhYmxlZCA9IHRoaXMuX2Rpc2FibGVkO1xuICAgIH0pO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwcm9wZXJ0eSBjaGVja2JveFxuICAgKiBAcmVhZG9ubHlcbiAgICogQHR5cGUge0hUTUxFbGVtZW50fVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dVGhlIHVuZGVybHlpbmcgY2hlY2tib3ggZWxlbWVudC5bL2VuXVxuICAgKiAgIFtqYV3jgrPjg7Pjg53jg7zjg43jg7Pjg4jlhoXpg6jjga5jaGVja2JveOimgee0oOOBq+OBquOCiuOBvuOBmeOAglsvamFdXG4gICAqL1xuICBnZXQgY2hlY2tib3goKSB7XG4gICAgcmV0dXJuIHRoaXMuX2NoZWNrYm94O1xuICB9XG5cbiAgaW5pdCgpIHtcbiAgICB0aGlzLl9jaGVja2VkID0gZmFsc2U7XG4gICAgdGhpcy5fZGlzYWJsZWQgPSBmYWxzZTtcblxuICAgIHRoaXMuX2JvdW5kT25DaGFuZ2UgPSB0aGlzLl9vbkNoYW5nZS5iaW5kKHRoaXMpO1xuXG4gICAgY29udGVudFJlYWR5KHRoaXMsICgpID0+IHtcbiAgICAgIHRoaXMuX2NvbXBpbGUoKTtcbiAgICAgIFsnY2hlY2tlZCcsICdkaXNhYmxlZCcsICdtb2RpZmllcicsICduYW1lJywgJ3ZhbHVlJywgJ2lucHV0LWlkJ10uZm9yRWFjaChlID0+IHtcbiAgICAgICAgdGhpcy5hdHRyaWJ1dGVDaGFuZ2VkQ2FsbGJhY2soZSwgbnVsbCwgdGhpcy5nZXRBdHRyaWJ1dGUoZSkpO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cblxuICBfY29tcGlsZSgpIHtcbiAgICBhdXRvU3R5bGUucHJlcGFyZSh0aGlzKTtcblxuICAgIHRoaXMuY2xhc3NMaXN0LmFkZChkZWZhdWx0Q2xhc3NOYW1lKTtcblxuICAgIGlmICghKHV0aWwuZmluZENoaWxkKHRoaXMsICcuc3dpdGNoX19pbnB1dCcpICYmIHV0aWwuZmluZENoaWxkKHRoaXMsICcuc3dpdGNoX190b2dnbGUnKSkpIHtcbiAgICAgIHRoaXMuYXBwZW5kQ2hpbGQodGVtcGxhdGUuY2xvbmVOb2RlKHRydWUpKTtcbiAgICB9XG5cbiAgICBNb2RpZmllclV0aWwuaW5pdE1vZGlmaWVyKHRoaXMsIHNjaGVtZSk7XG5cbiAgICB0aGlzLl9jaGVja2JveCA9IHRoaXMucXVlcnlTZWxlY3RvcignLnN3aXRjaF9faW5wdXQnKTtcbiAgICB0aGlzLl9oYW5kbGUgPSB0aGlzLnF1ZXJ5U2VsZWN0b3IoJy5zd2l0Y2hfX2hhbmRsZScpO1xuXG4gICAgdGhpcy5fY2hlY2tib3guY2hlY2tlZCA9IHRoaXMuX2NoZWNrZWQ7XG4gICAgdGhpcy5fY2hlY2tib3guZGlzYWJsZWQgPSB0aGlzLl9kaXNhYmxlZDtcbiAgfVxuXG4gIGRpc2Nvbm5lY3RlZENhbGxiYWNrKCkge1xuICAgIGNvbnRlbnRSZWFkeSh0aGlzLCAoKSA9PiB7XG4gICAgICB0aGlzLl9jaGVja2JveC5yZW1vdmVFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCB0aGlzLl9ib3VuZE9uQ2hhbmdlKTtcbiAgICAgIHRoaXMucmVtb3ZlRXZlbnRMaXN0ZW5lcignZHJhZ3N0YXJ0JywgdGhpcy5fb25EcmFnU3RhcnQpO1xuICAgICAgdGhpcy5yZW1vdmVFdmVudExpc3RlbmVyKCdob2xkJywgdGhpcy5fb25Ib2xkKTtcbiAgICAgIHRoaXMucmVtb3ZlRXZlbnRMaXN0ZW5lcigndGFwJywgdGhpcy5jbGljayk7XG4gICAgICB0aGlzLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdGhpcy5fb25DbGljayk7XG4gICAgICBpZiAodGhpcy5fZ2VzdHVyZURldGVjdG9yKSB7XG4gICAgICAgIHRoaXMuX2dlc3R1cmVEZXRlY3Rvci5kaXNwb3NlKCk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICBjb25uZWN0ZWRDYWxsYmFjaygpIHtcbiAgICBjb250ZW50UmVhZHkodGhpcywgKCkgPT4ge1xuICAgICAgdGhpcy5fY2hlY2tib3guYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgdGhpcy5fYm91bmRPbkNoYW5nZSk7XG4gICAgICB0aGlzLmFkZEV2ZW50TGlzdGVuZXIoJ2RyYWdzdGFydCcsIHRoaXMuX29uRHJhZ1N0YXJ0KTtcbiAgICAgIHRoaXMuYWRkRXZlbnRMaXN0ZW5lcignaG9sZCcsIHRoaXMuX29uSG9sZCk7XG4gICAgICB0aGlzLmFkZEV2ZW50TGlzdGVuZXIoJ3RhcCcsIHRoaXMuY2xpY2spO1xuICAgICAgdGhpcy5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMuX29uQ2xpY2spO1xuICAgICAgdGhpcy5fZ2VzdHVyZURldGVjdG9yID0gbmV3IEdlc3R1cmVEZXRlY3Rvcih0aGlzLCB7ZHJhZ01pbkRpc3RhbmNlOiAxLCBob2xkVGltZW91dDogMjUxfSk7XG4gICAgICB0aGlzLl9ib3VuZE9uUmVsZWFzZSA9IHRoaXMuX29uUmVsZWFzZS5iaW5kKHRoaXMpO1xuICAgIH0pO1xuICB9XG5cbiAgX29uQ2hhbmdlKGV2ZW50KSB7XG4gICAgaWYgKGV2ZW50ICYmIGV2ZW50LnN0b3BQcm9wYWdhdGlvbikge1xuICAgICAgZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgfVxuICAgIHRoaXMuY2xpY2soKTtcbiAgfVxuXG4gIF9vbkNsaWNrKGV2KSB7XG4gICAgaWYgKGV2LnRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoJ3N3aXRjaF9fdG91Y2gnKSkge1xuICAgICAgZXYucHJldmVudERlZmF1bHQoKTtcbiAgICB9XG4gIH1cblxuICBjbGljaygpIHtcbiAgICBpZiAoIXRoaXMuX2Rpc2FibGVkKSB7XG4gICAgICB0aGlzLmNoZWNrZWQgPSAhdGhpcy5jaGVja2VkO1xuXG4gICAgICB1dGlsLnRyaWdnZXJFbGVtZW50RXZlbnQodGhpcywgJ2NoYW5nZScsIHtcbiAgICAgICAgdmFsdWU6IHRoaXMuY2hlY2tlZCxcbiAgICAgICAgc3dpdGNoOiB0aGlzLFxuICAgICAgICBpc0ludGVyYWN0aXZlOiB0cnVlXG4gICAgICB9KTtcbiAgICB9XG4gIH1cblxuICBfZ2V0UG9zaXRpb24oZSkge1xuICAgIGNvbnN0IGwgPSB0aGlzLl9sb2NhdGlvbnM7XG4gICAgcmV0dXJuIE1hdGgubWluKGxbMV0sIE1hdGgubWF4KGxbMF0sIHRoaXMuX3N0YXJ0WCArIGUuZ2VzdHVyZS5kZWx0YVgpKTtcbiAgfVxuXG4gIF9vbkhvbGQoZSkge1xuICAgIGlmICghdGhpcy5kaXNhYmxlZCkge1xuICAgICAgTW9kaWZpZXJVdGlsLmFkZE1vZGlmaWVyKHRoaXMsICdhY3RpdmUnKTtcbiAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ3JlbGVhc2UnLCB0aGlzLl9ib3VuZE9uUmVsZWFzZSk7XG4gICAgfVxuICB9XG5cbiAgX29uRHJhZ1N0YXJ0KGUpIHtcbiAgICBpZiAodGhpcy5kaXNhYmxlZCB8fCBbJ2xlZnQnLCAncmlnaHQnXS5pbmRleE9mKGUuZ2VzdHVyZS5kaXJlY3Rpb24pID09PSAtMSkge1xuICAgICAgTW9kaWZpZXJVdGlsLnJlbW92ZU1vZGlmaWVyKHRoaXMsICdhY3RpdmUnKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xuXG4gICAgTW9kaWZpZXJVdGlsLmFkZE1vZGlmaWVyKHRoaXMsICdhY3RpdmUnKTtcbiAgICB0aGlzLl9zdGFydFggPSB0aGlzLl9sb2NhdGlvbnNbdGhpcy5jaGVja2VkID8gMSA6IDBdOy8vIC0gZS5nZXN0dXJlLmRlbHRhWDtcblxuICAgIHRoaXMuYWRkRXZlbnRMaXN0ZW5lcignZHJhZycsIHRoaXMuX29uRHJhZyk7XG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigncmVsZWFzZScsIHRoaXMuX2JvdW5kT25SZWxlYXNlKTtcbiAgfVxuXG4gIF9vbkRyYWcoZSkge1xuICAgIGUuZ2VzdHVyZS5zcmNFdmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIHRoaXMuX2hhbmRsZS5zdHlsZS5sZWZ0ID0gdGhpcy5fZ2V0UG9zaXRpb24oZSkgKyAncHgnO1xuICB9XG5cbiAgX29uUmVsZWFzZShlKSB7XG4gICAgY29uc3QgbCA9IHRoaXMuX2xvY2F0aW9ucztcbiAgICBjb25zdCBwb3NpdGlvbiA9IHRoaXMuX2dldFBvc2l0aW9uKGUpO1xuICAgIGNvbnN0IHByZXZpb3VzVmFsdWUgPSB0aGlzLmNoZWNrZWQ7XG5cbiAgICB0aGlzLmNoZWNrZWQgPSBwb3NpdGlvbiA+PSAobFswXSArIGxbMV0pIC8gMjtcblxuICAgIGlmICh0aGlzLmNoZWNrZWQgIT09IHByZXZpb3VzVmFsdWUpIHtcbiAgICAgIHV0aWwudHJpZ2dlckVsZW1lbnRFdmVudCh0aGlzLCAnY2hhbmdlJywge1xuICAgICAgICB2YWx1ZTogdGhpcy5jaGVja2VkLFxuICAgICAgICBzd2l0Y2g6IHRoaXMsXG4gICAgICAgIGlzSW50ZXJhY3RpdmU6IHRydWVcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIHRoaXMucmVtb3ZlRXZlbnRMaXN0ZW5lcignZHJhZycsIHRoaXMuX29uRHJhZyk7XG4gICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcigncmVsZWFzZScsIHRoaXMuX2JvdW5kT25SZWxlYXNlKTtcblxuICAgIHRoaXMuX2hhbmRsZS5zdHlsZS5sZWZ0ID0gJyc7XG4gICAgTW9kaWZpZXJVdGlsLnJlbW92ZU1vZGlmaWVyKHRoaXMsICdhY3RpdmUnKTtcbiAgfVxuXG4gIHN0YXRpYyBnZXQgb2JzZXJ2ZWRBdHRyaWJ1dGVzKCkge1xuICAgIHJldHVybiBbJ21vZGlmaWVyJywgJ2lucHV0LWlkJywgJ2NoZWNrZWQnLCAndmFsdWUnLCAnZGlzYWJsZWQnLCAnY2xhc3MnXTtcbiAgfVxuXG4gIHN0YXRpYyBnZXQgZXZlbnRzKCkge1xuICAgIHJldHVybiBbJ2NoYW5nZSddO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwcm9wZXJ0eSB2YWx1ZVxuICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dVGhlIGN1cnJlbnQgdmFsdWUgb2YgdGhlIGlucHV0LlsvZW5dXG4gICAqICAgW2phXVsvamFdXG4gICAqL1xuICBnZXQgdmFsdWUoKSB7XG4gICAgcmV0dXJuICF0aGlzLmhhc093blByb3BlcnR5KCdfY2hlY2tib3gnKVxuICAgICAgPyB0aGlzLmdldEF0dHJpYnV0ZSgndmFsdWUnKVxuICAgICAgOiB0aGlzLl9jaGVja2JveC52YWx1ZTtcbiAgfVxuXG4gIHNldCB2YWx1ZSh2YWwpIHtcbiAgICBjb250ZW50UmVhZHkodGhpcywgKCkgPT4ge1xuICAgICAgdGhpcy5fY2hlY2tib3gudmFsdWUgPSB2YWw7XG4gICAgfSk7XG4gIH1cblxuICBhdHRyaWJ1dGVDaGFuZ2VkQ2FsbGJhY2sobmFtZSwgbGFzdCwgY3VycmVudCkge1xuICAgIGNvbnRlbnRSZWFkeSh0aGlzLCAoKSA9PiB7XG4gICAgICBzd2l0Y2gobmFtZSkge1xuICAgICAgICBjYXNlICdjbGFzcyc6XG4gICAgICAgICAgaWYgKCF0aGlzLmNsYXNzTGlzdC5jb250YWlucyhkZWZhdWx0Q2xhc3NOYW1lKSkge1xuICAgICAgICAgICAgdGhpcy5jbGFzc05hbWUgPSBkZWZhdWx0Q2xhc3NOYW1lICsgJyAnICsgY3VycmVudDtcbiAgICAgICAgICB9XG4gICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgY2FzZSAnbW9kaWZpZXInOlxuICAgICAgICAgIHRoaXMuX2lzTWF0ZXJpYWwgPSAoY3VycmVudCB8fCAnJykuaW5kZXhPZignbWF0ZXJpYWwnKSAhPT0gLTE7XG4gICAgICAgICAgdGhpcy5fbG9jYXRpb25zID0gbG9jYXRpb25zW3RoaXMuX2lzTWF0ZXJpYWwgPyAnbWF0ZXJpYWwnIDogJ2lvcyddO1xuICAgICAgICAgIE1vZGlmaWVyVXRpbC5vbk1vZGlmaWVyQ2hhbmdlZChsYXN0LCBjdXJyZW50LCB0aGlzLCBzY2hlbWUpO1xuICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgIGNhc2UgJ2lucHV0LWlkJzpcbiAgICAgICAgICB0aGlzLl9jaGVja2JveC5pZCA9IGN1cnJlbnQ7XG4gICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgY2FzZSAnY2hlY2tlZCc6XG4gICAgICAgICAgdGhpcy5fY2hlY2tlZCA9IGN1cnJlbnQgIT09IG51bGw7XG4gICAgICAgICAgdGhpcy5fY2hlY2tib3guY2hlY2tlZCA9IGN1cnJlbnQgIT09IG51bGw7XG4gICAgICAgICAgdXRpbC50b2dnbGVBdHRyaWJ1dGUodGhpcy5fY2hlY2tib3gsIG5hbWUsIGN1cnJlbnQgIT09IG51bGwpO1xuICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgIGNhc2UgJ2Rpc2FibGVkJzpcbiAgICAgICAgICB0aGlzLl9kaXNhYmxlZCA9IGN1cnJlbnQgIT09IG51bGw7XG4gICAgICAgICAgdGhpcy5fY2hlY2tib3guZGlzYWJsZWQgPSBjdXJyZW50ICE9PSBudWxsO1xuICAgICAgICAgIHV0aWwudG9nZ2xlQXR0cmlidXRlKHRoaXMuX2NoZWNrYm94LCBuYW1lLCBjdXJyZW50ICE9PSBudWxsKTtcbiAgICAgICAgICBicmVhaztcblxuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgIGlmIChjdXJyZW50ICE9PSBudWxsKSB7XG4gICAgICAgICAgICB0aGlzLl9jaGVja2JveC5zZXRBdHRyaWJ1dGUobmFtZSwgY3VycmVudCk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuX2NoZWNrYm94LnJlbW92ZUF0dHJpYnV0ZShuYW1lKTtcbiAgICAgICAgICB9XG4gICAgICB9XG4gICAgfSk7XG4gIH1cbn1cblxuY3VzdG9tRWxlbWVudHMuZGVmaW5lKCdvbnMtc3dpdGNoJywgU3dpdGNoRWxlbWVudCk7XG4iLCIvKlxuQ29weXJpZ2h0IDIwMTMtMjAxNSBBU0lBTCBDT1JQT1JBVElPTlxuXG5MaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xueW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG5cbiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuXG5Vbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG5kaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG5XSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cblNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbmxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuXG4qL1xuaW1wb3J0IHV0aWwgZnJvbSAnLi4vLi4vb25zL3V0aWwnO1xuaW1wb3J0IGFuaW1pdCBmcm9tICcuLi8uLi9vbnMvYW5pbWl0JztcbmltcG9ydCBCYXNlQW5pbWF0b3IgZnJvbSAnLi4vLi4vb25zL2Jhc2UtYW5pbWF0b3InXG5cbmV4cG9ydCBjbGFzcyBUYWJiYXJBbmltYXRvciBleHRlbmRzIEJhc2VBbmltYXRvciB7XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBvcHRpb25zXG4gICAqIEBwYXJhbSB7U3RyaW5nfSBvcHRpb25zLnRpbWluZ1xuICAgKiBAcGFyYW0ge051bWJlcn0gb3B0aW9ucy5kdXJhdGlvblxuICAgKiBAcGFyYW0ge051bWJlcn0gb3B0aW9ucy5kZWxheVxuICAgKi9cbiAgY29uc3RydWN0b3Ioe3RpbWluZyA9ICdsaW5lYXInLCBkdXJhdGlvbiA9IDAuNCwgZGVsYXkgPSAwfSA9IHt9KSB7XG4gICAgc3VwZXIoeyB0aW1pbmcsIGR1cmF0aW9uLCBkZWxheSB9KTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge0VsZW1lbnR9IGVudGVyUGFnZSBvbnMtcGFnZSBlbGVtZW50XG4gICAqIEBwYXJhbSB7RWxlbWVudH0gbGVhdmVQYWdlIG9ucy1wYWdlIGVsZW1lbnRcbiAgICogQHBhcmFtIHtOdW1iZXJ9IGVudGVyUGFnZUluZGV4XG4gICAqIEBwYXJhbSB7TnVtYmVyfSBsZWF2ZVBhZ2VJbmRleFxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBkb25lXG4gICAqL1xuICBhcHBseShlbnRlclBhZ2UsIGxlYXZlUGFnZSwgZW50ZXJQYWdlSW5kZXgsIGxlYXZlUGFnZUluZGV4LCBkb25lKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdUaGlzIG1ldGhvZCBtdXN0IGJlIGltcGxlbWVudGVkLicpO1xuICB9XG59XG5cblxuZXhwb3J0IGNsYXNzIFRhYmJhck5vbmVBbmltYXRvciBleHRlbmRzIFRhYmJhckFuaW1hdG9yIHtcbiAgYXBwbHkoZW50ZXJQYWdlLCBsZWF2ZVBhZ2UsIGVudGVySW5kZXgsIGxlYXZlSW5kZXgsIGRvbmUpIHtcbiAgICBzZXRUaW1lb3V0KGRvbmUsIDEwMDAgLyA2MCk7XG4gIH1cbn1cblxuZXhwb3J0IGNsYXNzIFRhYmJhckZhZGVBbmltYXRvciBleHRlbmRzIFRhYmJhckFuaW1hdG9yIHtcbiAgYXBwbHkoZW50ZXJQYWdlLCBsZWF2ZVBhZ2UsIGVudGVyUGFnZUluZGV4LCBsZWF2ZVBhZ2VJbmRleCwgZG9uZSkge1xuICAgIGFuaW1pdC5ydW5BbGwoXG4gICAgICBhbmltaXQoZW50ZXJQYWdlKVxuICAgICAgICAuc2F2ZVN0eWxlKClcbiAgICAgICAgLnF1ZXVlKHtcbiAgICAgICAgICB0cmFuc2Zvcm06ICd0cmFuc2xhdGUzRCgwLCAwLCAwKScsXG4gICAgICAgICAgb3BhY2l0eTogMFxuICAgICAgICB9KVxuICAgICAgICAud2FpdCh0aGlzLmRlbGF5KVxuICAgICAgICAucXVldWUoe1xuICAgICAgICAgIHRyYW5zZm9ybTogJ3RyYW5zbGF0ZTNEKDAsIDAsIDApJyxcbiAgICAgICAgICBvcGFjaXR5OiAxXG4gICAgICAgIH0sIHtcbiAgICAgICAgICBkdXJhdGlvbjogdGhpcy5kdXJhdGlvbixcbiAgICAgICAgICB0aW1pbmc6IHRoaXMudGltaW5nXG4gICAgICAgIH0pXG4gICAgICAgIC5yZXN0b3JlU3R5bGUoKVxuICAgICAgICAucXVldWUoZnVuY3Rpb24oY2FsbGJhY2spIHtcbiAgICAgICAgICBkb25lKCk7XG4gICAgICAgICAgY2FsbGJhY2soKTtcbiAgICAgICAgfSksXG5cbiAgICAgIGFuaW1pdChsZWF2ZVBhZ2UpXG4gICAgICAgIC5xdWV1ZSh7XG4gICAgICAgICAgdHJhbnNmb3JtOiAndHJhbnNsYXRlM0QoMCwgMCwgMCknLFxuICAgICAgICAgIG9wYWNpdHk6IDFcbiAgICAgICAgfSlcbiAgICAgICAgLndhaXQodGhpcy5kZWxheSlcbiAgICAgICAgLnF1ZXVlKHtcbiAgICAgICAgICB0cmFuc2Zvcm06ICd0cmFuc2xhdGUzRCgwLCAwLCAwKScsXG4gICAgICAgICAgb3BhY2l0eTogMFxuICAgICAgICB9LCB7XG4gICAgICAgICAgZHVyYXRpb246IHRoaXMuZHVyYXRpb24sXG4gICAgICAgICAgdGltaW5nOiB0aGlzLnRpbWluZ1xuICAgICAgICB9KVxuICAgICk7XG4gIH1cbn1cblxuZXhwb3J0IGNsYXNzIFRhYmJhclNsaWRlQW5pbWF0b3IgZXh0ZW5kcyBUYWJiYXJBbmltYXRvciB7XG4gIGNvbnN0cnVjdG9yKHt0aW1pbmcgPSAnZWFzZS1pbicsIGR1cmF0aW9uID0gMC4xNSwgZGVsYXkgPSAwfSA9IHt9KSB7XG4gICAgc3VwZXIoeyB0aW1pbmcsIGR1cmF0aW9uLCBkZWxheSB9KTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge2pxTGl0ZX0gZW50ZXJQYWdlXG4gICAqIEBwYXJhbSB7anFMaXRlfSBsZWF2ZVBhZ2VcbiAgICovXG4gIGFwcGx5KGVudGVyUGFnZSwgbGVhdmVQYWdlLCBlbnRlckluZGV4LCBsZWF2ZUluZGV4LCBkb25lKSB7XG4gICAgY29uc3Qgc2duID0gZW50ZXJJbmRleCA+IGxlYXZlSW5kZXg7XG5cbiAgICBhbmltaXQucnVuQWxsKFxuICAgICAgYW5pbWl0KGVudGVyUGFnZSlcbiAgICAgICAgLnNhdmVTdHlsZSgpXG4gICAgICAgIC5xdWV1ZSh7XG4gICAgICAgICAgdHJhbnNmb3JtOiAndHJhbnNsYXRlM0QoJyArIChzZ24gPyAnJyA6ICctJykgKyAnMTAwJSwgMCwgMCknLFxuICAgICAgICB9KVxuICAgICAgICAud2FpdCh0aGlzLmRlbGF5KVxuICAgICAgICAucXVldWUoe1xuICAgICAgICAgIHRyYW5zZm9ybTogJ3RyYW5zbGF0ZTNEKDAsIDAsIDApJyxcbiAgICAgICAgfSwge1xuICAgICAgICAgIGR1cmF0aW9uOiB0aGlzLmR1cmF0aW9uLFxuICAgICAgICAgIHRpbWluZzogdGhpcy50aW1pbmdcbiAgICAgICAgfSlcbiAgICAgICAgLnJlc3RvcmVTdHlsZSgpXG4gICAgICAgIC5xdWV1ZShmdW5jdGlvbihjYWxsYmFjaykge1xuICAgICAgICAgIGRvbmUoKTtcbiAgICAgICAgICBjYWxsYmFjaygpO1xuICAgICAgICB9KSxcbiAgICAgIGFuaW1pdChsZWF2ZVBhZ2UpXG4gICAgICAgIC5xdWV1ZSh7XG4gICAgICAgICAgdHJhbnNmb3JtOiAndHJhbnNsYXRlM0QoMCwgMCwgMCknLFxuICAgICAgICB9KVxuICAgICAgICAud2FpdCh0aGlzLmRlbGF5KVxuICAgICAgICAucXVldWUoe1xuICAgICAgICAgIHRyYW5zZm9ybTogJ3RyYW5zbGF0ZTNEKCcgKyAoc2duID8gJy0nIDogJycpICsgJzEwMCUsIDAsIDApJyxcbiAgICAgICAgfSwge1xuICAgICAgICAgIGR1cmF0aW9uOiB0aGlzLmR1cmF0aW9uLFxuICAgICAgICAgIHRpbWluZzogdGhpcy50aW1pbmdcbiAgICAgICAgfSlcbiAgICApO1xuICB9XG59XG4iLCIvKlxuQ29weXJpZ2h0IDIwMTMtMjAxNSBBU0lBTCBDT1JQT1JBVElPTlxuXG5MaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xueW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG5cbiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuXG5Vbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG5kaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG5XSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cblNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbmxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuXG4qL1xuXG5pbXBvcnQgdXRpbCBmcm9tICcuLi8uLi9vbnMvdXRpbCc7XG5pbXBvcnQgcGxhdGZvcm0gZnJvbSAnLi4vLi4vb25zL3BsYXRmb3JtJztcbmltcG9ydCBpbnRlcm5hbCBmcm9tICcuLi8uLi9vbnMvaW50ZXJuYWwnO1xuaW1wb3J0IGF1dG9TdHlsZSBmcm9tICcuLi8uLi9vbnMvYXV0b3N0eWxlJztcbmltcG9ydCBNb2RpZmllclV0aWwgZnJvbSAnLi4vLi4vb25zL2ludGVybmFsL21vZGlmaWVyLXV0aWwnO1xuaW1wb3J0IEFuaW1hdG9yRmFjdG9yeSBmcm9tICcuLi8uLi9vbnMvaW50ZXJuYWwvYW5pbWF0b3ItZmFjdG9yeSc7XG5pbXBvcnQgQmFzZUVsZW1lbnQgZnJvbSAnLi4vLi4vb25zL2Jhc2UtZWxlbWVudCc7XG5pbXBvcnQge1RhYmJhckFuaW1hdG9yLCBUYWJiYXJGYWRlQW5pbWF0b3IsIFRhYmJhck5vbmVBbmltYXRvciwgVGFiYmFyU2xpZGVBbmltYXRvcn0gZnJvbSAnLi9hbmltYXRvcic7XG5pbXBvcnQgVGFiRWxlbWVudCBmcm9tICcuLi9vbnMtdGFiJztcbmltcG9ydCBjb250ZW50UmVhZHkgZnJvbSAnLi4vLi4vb25zL2NvbnRlbnQtcmVhZHknO1xuXG5jb25zdCBzY2hlbWUgPSB7XG4gICcudGFiYmFyX19jb250ZW50JzogJ3RhYmJhci0tKl9fY29udGVudCcsXG4gICcudGFiYmFyJzogJ3RhYmJhci0tKidcbn07XG5cbmNvbnN0IF9hbmltYXRvckRpY3QgPSB7XG4gICdkZWZhdWx0JzogVGFiYmFyTm9uZUFuaW1hdG9yLFxuICAnZmFkZSc6IFRhYmJhckZhZGVBbmltYXRvcixcbiAgJ3NsaWRlJzogVGFiYmFyU2xpZGVBbmltYXRvcixcbiAgJ25vbmUnOiBUYWJiYXJOb25lQW5pbWF0b3Jcbn07XG5cbmNvbnN0IHJld3JpdGFibGVzID0ge1xuICAvKipcbiAgICogQHBhcmFtIHtFbGVtZW50fSB0YWJiYXJFbGVtZW50XG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IGNhbGxiYWNrXG4gICAqL1xuICByZWFkeSh0YWJiYXJFbGVtZW50LCBjYWxsYmFjaykge1xuICAgIGNhbGxiYWNrKCk7XG4gIH1cbn07XG5cbmNvbnN0IGdlbmVyYXRlSWQgPSAoKCkgPT4ge1xuICBsZXQgaSA9IDA7XG4gIHJldHVybiAoKSA9PiAnb25zLXRhYmJhci1nZW4tJyArIChpKyspO1xufSkoKTtcblxuLyoqXG4gKiBAZWxlbWVudCBvbnMtdGFiYmFyXG4gKiBAY2F0ZWdvcnkgdGFiYmFyXG4gKiBAZGVzY3JpcHRpb25cbiAqICAgW2VuXUEgY29tcG9uZW50IHRvIGRpc3BsYXkgYSB0YWIgYmFyIG9uIHRoZSBib3R0b20gb2YgYSBwYWdlLiBVc2VkIHdpdGggYDxvbnMtdGFiPmAgdG8gbWFuYWdlIHBhZ2VzIHVzaW5nIHRhYnMuWy9lbl1cbiAqICAgW2phXeOCv+ODluODkOODvOOCkuODmuODvOOCuOS4i+mDqOOBq+ihqOekuuOBmeOCi+OBn+OCgeOBruOCs+ODs+ODneODvOODjeODs+ODiOOBp+OBmeOAgm9ucy10YWLjgajntYTjgb/lkIjjgo/jgZvjgabkvb/jgYbjgZPjgajjgafjgIHjg5rjg7zjgrjjgpLnrqHnkIbjgafjgY3jgb7jgZnjgIJbL2phXVxuICogQGNvZGVwZW4gcEd1RExcbiAqIEB0dXRvcmlhbCB2YW5pbGxhL1JlZmVyZW5jZS90YWJiYXJcbiAqIEBndWlkZSBtdWx0aXBsZS1wYWdlLW5hdmlnYXRpb25cbiAqICBbZW5dTWFuYWdpbmcgbXVsdGlwbGUgcGFnZXMuWy9lbl1cbiAqICBbamFdTWFuYWdpbmcgbXVsdGlwbGUgcGFnZXNbL2phXVxuICogQGd1aWRlIHRlbXBsYXRlc1xuICogICBbZW5dRGVmaW5pbmcgbXVsdGlwbGUgcGFnZXMgaW4gc2luZ2xlIGh0bWxbL2VuXVxuICogICBbamFd6KSH5pWw44Gu44Oa44O844K444KSMeOBpOOBrkhUTUzjgavoqJjov7DjgZnjgotbL2phXVxuICogQHNlZWFsc28gb25zLXRhYlxuICogICBbZW5dVGhlIGA8b25zLXRhYj5gIGNvbXBvbmVudC5bL2VuXVxuICogICBbamFdb25zLXRhYuOCs+ODs+ODneODvOODjeODs+ODiFsvamFdXG4gKiBAc2VlYWxzbyBvbnMtcGFnZVxuICogICBbZW5dVGhlIGA8b25zLXBhZ2U+YCBjb21wb25lbnQuWy9lbl1cbiAqICAgW2phXW9ucy1wYWdl44Kz44Oz44Od44O844ON44Oz44OIWy9qYV1cbiAqIEBleGFtcGxlXG4gKiA8b25zLXRhYmJhcj5cbiAqICAgPG9ucy10YWJcbiAqICAgICBwYWdlPVwiaG9tZS5odG1sXCJcbiAqICAgICBsYWJlbD1cIkhvbWVcIlxuICogICAgIGFjdGl2ZT5cbiAqICAgPC9vbnMtdGFiPlxuICogICA8b25zLXRhYlxuICogICAgIHBhZ2U9XCJzZXR0aW5ncy5odG1sXCJcbiAqICAgICBsYWJlbD1cIlNldHRpbmdzXCJcbiAqICAgICBhY3RpdmU+XG4gKiAgIDwvb25zLXRhYj5cbiAqIDwvb25zLXRhYmJhcj5cbiAqXG4gKiA8b25zLXRlbXBsYXRlIGlkPVwiaG9tZS5odG1sXCI+XG4gKiAgIC4uLlxuICogPC9vbnMtdGVtcGxhdGU+XG4gKlxuICogPG9ucy10ZW1wbGF0ZSBpZD1cInNldHRpbmdzLmh0bWxcIj5cbiAqICAgLi4uXG4gKiA8L29ucy10ZW1wbGF0ZT5cbiAqL1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVGFiYmFyRWxlbWVudCBleHRlbmRzIEJhc2VFbGVtZW50IHtcblxuICAvKipcbiAgICogQGV2ZW50IHByZWNoYW5nZVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dRmlyZXMganVzdCBiZWZvcmUgdGhlIHRhYiBpcyBjaGFuZ2VkLlsvZW5dXG4gICAqICAgW2phXeOCouOCr+ODhuOCo+ODluOBquOCv+ODluOBjOWkieOCj+OCi+WJjeOBq+eZuueBq+OBl+OBvuOBmeOAglsvamFdXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBldmVudFxuICAgKiAgIFtlbl1FdmVudCBvYmplY3QuWy9lbl1cbiAgICogICBbamFd44Kk44OZ44Oz44OI44Kq44OW44K444Kn44Kv44OI44CCWy9qYV1cbiAgICogQHBhcmFtIHtOdW1iZXJ9IGV2ZW50LmluZGV4XG4gICAqICAgW2VuXUN1cnJlbnQgaW5kZXguWy9lbl1cbiAgICogICBbamFd54++5Zyo44Ki44Kv44OG44Kj44OW44Gr44Gq44Gj44Gm44GE44KLb25zLXRhYuOBruOCpOODs+ODh+ODg+OCr+OCueOCkui/lOOBl+OBvuOBmeOAglsvamFdXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBldmVudC50YWJJdGVtXG4gICAqICAgW2VuXVRhYiBpdGVtIG9iamVjdC5bL2VuXVxuICAgKiAgIFtqYV10YWJJdGVt44Kq44OW44K444Kn44Kv44OI44CCWy9qYV1cbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gZXZlbnQuY2FuY2VsXG4gICAqICAgW2VuXUNhbGwgdGhpcyBmdW5jdGlvbiB0byBjYW5jZWwgdGhlIGNoYW5nZSBldmVudC5bL2VuXVxuICAgKiAgIFtqYV3jgZPjga7plqLmlbDjgpLlkbzjgbPlh7rjgZnjgajjgIHjgqLjgq/jg4bjgqPjg5bjgarjgr/jg5bjga7lpInmm7TjgYzjgq3jg6Pjg7Pjgrvjg6vjgZXjgozjgb7jgZnjgIJbL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQGV2ZW50IHBvc3RjaGFuZ2VcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXUZpcmVzIGp1c3QgYWZ0ZXIgdGhlIHRhYiBpcyBjaGFuZ2VkLlsvZW5dXG4gICAqICAgW2phXeOCouOCr+ODhuOCo+ODluOBquOCv+ODluOBjOWkieOCj+OBo+OBn+W+jOOBq+eZuueBq+OBl+OBvuOBmeOAglsvamFdXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBldmVudFxuICAgKiAgIFtlbl1FdmVudCBvYmplY3QuWy9lbl1cbiAgICogICBbamFd44Kk44OZ44Oz44OI44Kq44OW44K444Kn44Kv44OI44CCWy9qYV1cbiAgICogQHBhcmFtIHtOdW1iZXJ9IGV2ZW50LmluZGV4XG4gICAqICAgW2VuXUN1cnJlbnQgaW5kZXguWy9lbl1cbiAgICogICBbamFd54++5Zyo44Ki44Kv44OG44Kj44OW44Gr44Gq44Gj44Gm44GE44KLb25zLXRhYuOBruOCpOODs+ODh+ODg+OCr+OCueOCkui/lOOBl+OBvuOBmeOAglsvamFdXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBldmVudC50YWJJdGVtXG4gICAqICAgW2VuXVRhYiBpdGVtIG9iamVjdC5bL2VuXVxuICAgKiAgIFtqYV10YWJJdGVt44Kq44OW44K444Kn44Kv44OI44CCWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBldmVudCByZWFjdGl2ZVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dRmlyZXMgaWYgdGhlIGFscmVhZHkgb3BlbiB0YWIgaXMgdGFwcGVkIGFnYWluLlsvZW5dXG4gICAqICAgW2phXeOBmeOBp+OBq+OCouOCr+ODhuOCo+ODluOBq+OBquOBo+OBpuOBhOOCi+OCv+ODluOBjOOCguOBhuS4gOW6puOCv+ODg+ODl+OChOOCr+ODquODg+OCr+OBleOCjOOBn+WgtOWQiOOBq+eZuueBq+OBl+OBvuOBmeOAglsvamFdXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBldmVudFxuICAgKiAgIFtlbl1FdmVudCBvYmplY3QuWy9lbl1cbiAgICogICBbamFd44Kk44OZ44Oz44OI44Kq44OW44K444Kn44Kv44OI44CCWy9qYV1cbiAgICogQHBhcmFtIHtOdW1iZXJ9IGV2ZW50LmluZGV4XG4gICAqICAgW2VuXUN1cnJlbnQgaW5kZXguWy9lbl1cbiAgICogICBbamFd54++5Zyo44Ki44Kv44OG44Kj44OW44Gr44Gq44Gj44Gm44GE44KLb25zLXRhYuOBruOCpOODs+ODh+ODg+OCr+OCueOCkui/lOOBl+OBvuOBmeOAglsvamFdXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBldmVudC50YWJJdGVtXG4gICAqICAgW2VuXVRhYiBpdGVtIG9iamVjdC5bL2VuXVxuICAgKiAgIFtqYV10YWJJdGVt44Kq44OW44K444Kn44Kv44OI44CCWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBhdHRyaWJ1dGUgYW5pbWF0aW9uXG4gICAqIEB0eXBlIHtTdHJpbmd9XG4gICAqIEBkZWZhdWx0IG5vbmVcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXUFuaW1hdGlvbiBuYW1lLiBBdmFpbGFibGUgdmFsdWVzIGFyZSBgXCJub25lXCJgLCBgXCJzbGlkZVwiYCBhbmQgYFwiZmFkZVwiYC4gRGVmYXVsdCBpcyBgXCJub25lXCJgLlsvZW5dXG4gICAqICAgW2phXeODmuODvOOCuOiqreOBv+i+vOOBv+aZguOBruOCouODi+ODoeODvOOCt+ODp+ODs+OCkuaMh+WumuOBl+OBvuOBmeOAglwibm9uZVwi44CBXCJmYWRlXCLjgIFcInNsaWRlXCLjga7jgYTjgZrjgozjgYvjgpLpgbjmip7jgafjgY3jgb7jgZnjgILjg4fjg5Xjgqnjg6vjg4jjga9cIm5vbmVcIuOBp+OBmeOAglsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAYXR0cmlidXRlIGFuaW1hdGlvbi1vcHRpb25zXG4gICAqIEB0eXBlIHtFeHByZXNzaW9ufVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogIFtlbl1TcGVjaWZ5IHRoZSBhbmltYXRpb24ncyBkdXJhdGlvbiwgdGltaW5nIGFuZCBkZWxheSB3aXRoIGFuIG9iamVjdCBsaXRlcmFsLiBFLmcuIGB7ZHVyYXRpb246IDAuMiwgZGVsYXk6IDEsIHRpbWluZzogJ2Vhc2UtaW4nfWAuWy9lbl1cbiAgICogIFtqYV3jgqLjg4vjg6Hjg7zjgrfjg6fjg7PmmYLjga5kdXJhdGlvbiwgdGltaW5nLCBkZWxheeOCkuOCquODluOCuOOCp+OCr+ODiOODquODhuODqeODq+OBp+aMh+WumuOBl+OBvuOBmeOAgmUuZy4ge2R1cmF0aW9uOiAwLjIsIGRlbGF5OiAxLCB0aW1pbmc6ICdlYXNlLWluJ31bL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQGF0dHJpYnV0ZSBwb3NpdGlvblxuICAgKiBAaW5pdG9ubHlcbiAgICogQHR5cGUge1N0cmluZ31cbiAgICogQGRlZmF1bHQgYm90dG9tXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1UYWJiYXIncyBwb3NpdGlvbi4gQXZhaWxhYmxlIHZhbHVlcyBhcmUgYFwiYm90dG9tXCJgIGFuZCBgXCJ0b3BcImAuIFVzZSBgXCJhdXRvXCJgIHRvIGNob29zZSBwb3NpdGlvbiBkZXBlbmRpbmcgb24gcGxhdGZvcm0gKGlPUyBib3R0b20sIEFuZHJvaWQgdG9wKS5bL2VuXVxuICAgKiAgIFtqYV3jgr/jg5bjg5Djg7zjga7kvY3nva7jgpLmjIflrprjgZfjgb7jgZnjgIJcImJvdHRvbVwi44KC44GX44GP44GvXCJ0b3BcIuOCkumBuOaKnuOBp+OBjeOBvuOBmeOAguODh+ODleOCqeODq+ODiOOBr1wiYm90dG9tXCLjgafjgZnjgIJbL2phXVxuICAgKi9cblxuICBpbml0KCkge1xuICAgIHRoaXMuX3RhYmJhcklkID0gZ2VuZXJhdGVJZCgpO1xuXG4gICAgY29udGVudFJlYWR5KHRoaXMsICgpID0+IHtcbiAgICAgIHRoaXMuX2NvbXBpbGUoKTtcblxuICAgICAgY29uc3QgY29udGVudCA9IHRoaXMuX2NvbnRlbnRFbGVtZW50O1xuICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBjb250ZW50LmNoaWxkcmVuLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGNvbnRlbnQuY2hpbGRyZW5baV0uc3R5bGUuZGlzcGxheSA9ICdub25lJztcbiAgICAgIH1cblxuICAgICAgY29uc3QgYWN0aXZlSW5kZXggPSB0aGlzLmdldEF0dHJpYnV0ZSgnYWN0aXZlSW5kZXgnKTtcblxuICAgICAgY29uc3QgdGFiYmFyID0gdGhpcy5fdGFiYmFyRWxlbWVudDtcbiAgICAgIGlmIChhY3RpdmVJbmRleCAmJiB0YWJiYXIuY2hpbGRyZW4ubGVuZ3RoID4gYWN0aXZlSW5kZXgpIHtcbiAgICAgICAgdGFiYmFyLmNoaWxkcmVuW2FjdGl2ZUluZGV4XS5zZXRBdHRyaWJ1dGUoJ2FjdGl2ZScsICd0cnVlJyk7XG4gICAgICB9XG5cbiAgICAgIGF1dG9TdHlsZS5wcmVwYXJlKHRoaXMpO1xuICAgICAgTW9kaWZpZXJVdGlsLmluaXRNb2RpZmllcih0aGlzLCBzY2hlbWUpO1xuXG4gICAgICB0aGlzLl9hbmltYXRvckZhY3RvcnkgPSBuZXcgQW5pbWF0b3JGYWN0b3J5KHtcbiAgICAgICAgYW5pbWF0b3JzOiBfYW5pbWF0b3JEaWN0LFxuICAgICAgICBiYXNlQ2xhc3M6IFRhYmJhckFuaW1hdG9yLFxuICAgICAgICBiYXNlQ2xhc3NOYW1lOiAnVGFiYmFyQW5pbWF0b3InLFxuICAgICAgICBkZWZhdWx0QW5pbWF0aW9uOiB0aGlzLmdldEF0dHJpYnV0ZSgnYW5pbWF0aW9uJylcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG5cbiAgY29ubmVjdGVkQ2FsbGJhY2soKSB7XG4gICAgY29udGVudFJlYWR5KHRoaXMsICgpID0+IHRoaXMuX3VwZGF0ZVBvc2l0aW9uKCkpO1xuICB9XG5cbiAgZ2V0IF9jb250ZW50RWxlbWVudCgpIHtcbiAgICByZXR1cm4gdXRpbC5maW5kQ2hpbGQodGhpcywgJy50YWJiYXJfX2NvbnRlbnQnKTtcbiAgfVxuXG4gIGdldCBfdGFiYmFyRWxlbWVudCgpIHtcbiAgICByZXR1cm4gdXRpbC5maW5kQ2hpbGQodGhpcywgJy50YWJiYXInKTtcbiAgfVxuXG4gIF9jb21waWxlKCkge1xuICAgIGlmICh0aGlzLl9jb250ZW50RWxlbWVudCAmJiB0aGlzLl90YWJiYXJFbGVtZW50KSB7XG4gICAgICBjb25zdCBjb250ZW50ID0gdXRpbC5maW5kQ2hpbGQodGhpcywgJy50YWJiYXJfX2NvbnRlbnQnKTtcbiAgICAgIGNvbnN0IGJhciA9IHV0aWwuZmluZENoaWxkKHRoaXMsICcudGFiYmFyJyk7XG5cbiAgICAgIGNvbnRlbnQuY2xhc3NMaXN0LmFkZCgnb25zLXRhYmJhcl9fY29udGVudCcpO1xuICAgICAgYmFyLmNsYXNzTGlzdC5hZGQoJ29ucy10YWJiYXJfX2Zvb3RlcicpO1xuICAgIH0gZWxzZSB7XG5cbiAgICAgIGNvbnN0IGNvbnRlbnQgPSB1dGlsLmNyZWF0ZSgnLm9ucy10YWJiYXJfX2NvbnRlbnQudGFiYmFyX19jb250ZW50Jyk7XG4gICAgICBjb25zdCB0YWJiYXIgPSB1dGlsLmNyZWF0ZSgnLnRhYmJhci5vbnMtdGFiYmFyX19mb290ZXInKTtcblxuICAgICAgd2hpbGUgKHRoaXMuZmlyc3RDaGlsZCkge1xuICAgICAgICB0YWJiYXIuYXBwZW5kQ2hpbGQodGhpcy5maXJzdENoaWxkKTtcbiAgICAgIH1cblxuICAgICAgdGhpcy5hcHBlbmRDaGlsZChjb250ZW50KTtcbiAgICAgIHRoaXMuYXBwZW5kQ2hpbGQodGFiYmFyKTtcbiAgICB9XG4gIH1cblxuICBfdXBkYXRlUG9zaXRpb24ocG9zaXRpb24gPSB0aGlzLmdldEF0dHJpYnV0ZSgncG9zaXRpb24nKSkge1xuICAgIGNvbnN0IHRvcCA9IHRoaXMuX3RvcCA9IHBvc2l0aW9uID09PSAndG9wJyB8fCAocG9zaXRpb24gPT09ICdhdXRvJyAmJiBwbGF0Zm9ybS5pc0FuZHJvaWQoKSk7XG4gICAgY29uc3QgYWN0aW9uID0gdG9wID8gdXRpbC5hZGRNb2RpZmllciA6IHV0aWwucmVtb3ZlTW9kaWZpZXI7XG5cbiAgICBhY3Rpb24odGhpcywgJ3RvcCcpO1xuXG4gICAgY29uc3QgcGFnZSA9IHV0aWwuZmluZFBhcmVudCh0aGlzLCAnb25zLXBhZ2UnKTtcbiAgICBpZiAocGFnZSkge1xuICAgICAgY29udGVudFJlYWR5KHBhZ2UsICgpID0+IHtcbiAgICAgICAgdGhpcy5zdHlsZS50b3AgPSB0b3AgPyB3aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZShwYWdlLl9nZXRDb250ZW50RWxlbWVudCgpLCBudWxsKS5nZXRQcm9wZXJ0eVZhbHVlKCdwYWRkaW5nLXRvcCcpIDogJyc7XG5cbiAgICAgICAgaWYgKHV0aWwubWF0Y2gocGFnZS5maXJzdENoaWxkLCAnb25zLXRvb2xiYXInKSkge1xuICAgICAgICAgIGFjdGlvbihwYWdlLmZpcnN0Q2hpbGQsICdub3NoYWRvdycpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBpbnRlcm5hbC5hdXRvU3RhdHVzQmFyRmlsbCgoKSA9PiB7XG4gICAgICBjb25zdCBmaWxsZWQgPSB1dGlsLmZpbmRQYXJlbnQodGhpcywgZSA9PiBlLmhhc0F0dHJpYnV0ZSgnc3RhdHVzLWJhci1maWxsJykpO1xuICAgICAgdXRpbC50b2dnbGVBdHRyaWJ1dGUodGhpcywgJ3N0YXR1cy1iYXItZmlsbCcsIHRvcCAmJiAhZmlsbGVkKTtcbiAgICB9KTtcbiAgfVxuXG4gIF9nZXRUYWJiYXJFbGVtZW50KCkge1xuICAgIHJldHVybiB1dGlsLmZpbmRDaGlsZCh0aGlzLCAnLnRhYmJhcicpO1xuICB9XG5cbiAgLyoqXG4gICAqIEByZXR1cm4ge1N0cmluZ31cbiAgICovXG4gIGdldFRhYmJhcklkKCkge1xuICAgIHJldHVybiB0aGlzLl90YWJiYXJJZDtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcmV0dXJuIHtFbGVtZW50L251bGx9XG4gICAqL1xuICBfZ2V0Q3VycmVudFBhZ2VFbGVtZW50KCkge1xuICAgIGNvbnN0IHBhZ2VzID0gdGhpcy5fY29udGVudEVsZW1lbnQuY2hpbGRyZW47XG4gICAgbGV0IHBhZ2UgPSBudWxsO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcGFnZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgIGlmIChwYWdlc1tpXS5zdHlsZS5kaXNwbGF5ICE9PSAnbm9uZScpIHtcbiAgICAgICAgcGFnZSA9IHBhZ2VzW2ldO1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAocGFnZSAmJiBwYWdlLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkgIT09ICdvbnMtcGFnZScpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignSW52YWxpZCBzdGF0ZTogcGFnZSBlbGVtZW50IG11c3QgYmUgYSBcIm9ucy1wYWdlXCIgZWxlbWVudC4nKTtcbiAgICB9XG5cbiAgICByZXR1cm4gcGFnZTtcbiAgfVxuXG4gIGdldCB0b3BQYWdlKCkge1xuICAgIHJldHVybiB0aGlzLl9nZXRDdXJyZW50UGFnZUVsZW1lbnQoKTtcbiAgfVxuXG4gIGdldCBwYWdlcygpIHtcbiAgICByZXR1cm4gdXRpbC5hcnJheUZyb20odGhpcy5fY29udGVudEVsZW1lbnQuY2hpbGRyZW4pO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7RWxlbWVudH0gZWxlbWVudFxuICAgKiBAcGFyYW0ge09iamVjdH0gb3B0aW9uc1xuICAgKiBAcGFyYW0ge1N0cmluZ30gW29wdGlvbnMuYW5pbWF0aW9uXVxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBbb3B0aW9ucy5jYWxsYmFja11cbiAgICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zLmFuaW1hdGlvbk9wdGlvbnNdXG4gICAqIEBwYXJhbSB7TnVtYmVyfSBvcHRpb25zLnNlbGVjdGVkVGFiSW5kZXhcbiAgICogQHBhcmFtIHtOdW1iZXJ9IG9wdGlvbnMucHJldmlvdXNUYWJJbmRleFxuICAgKiBAcmV0dXJuIHtQcm9taXNlfSBSZXNvbHZlcyB0byB0aGUgbmV3IHBhZ2UgZWxlbWVudC5cbiAgICovXG4gIF9zd2l0Y2hQYWdlKGVsZW1lbnQsIG9wdGlvbnMpIHtcbiAgICBjb25zdCBvbGRQYWdlRWxlbWVudCA9IHRoaXMuX29sZFBhZ2VFbGVtZW50IHx8IGludGVybmFsLm51bGxFbGVtZW50O1xuICAgIHRoaXMuX29sZFBhZ2VFbGVtZW50ID0gZWxlbWVudDtcbiAgICBjb25zdCBhbmltYXRvciA9IHRoaXMuX2FuaW1hdG9yRmFjdG9yeS5uZXdBbmltYXRvcihvcHRpb25zKTtcblxuICAgIHJldHVybiBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHtcbiAgICAgIGlmIChvbGRQYWdlRWxlbWVudCAhPT0gaW50ZXJuYWwubnVsbEVsZW1lbnQpIHtcbiAgICAgICAgb2xkUGFnZUVsZW1lbnQuX2hpZGUoKTtcbiAgICAgIH1cblxuICAgICAgYW5pbWF0b3IuYXBwbHkoZWxlbWVudCwgb2xkUGFnZUVsZW1lbnQsIG9wdGlvbnMuc2VsZWN0ZWRUYWJJbmRleCwgb3B0aW9ucy5wcmV2aW91c1RhYkluZGV4LCAoKSA9PiB7XG4gICAgICAgIGlmIChvbGRQYWdlRWxlbWVudCAhPT0gaW50ZXJuYWwubnVsbEVsZW1lbnQpIHtcbiAgICAgICAgICBvbGRQYWdlRWxlbWVudC5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xuICAgICAgICB9XG5cbiAgICAgICAgZWxlbWVudC5zdHlsZS5kaXNwbGF5ID0gJ2Jsb2NrJztcbiAgICAgICAgZWxlbWVudC5fc2hvdygpO1xuXG4gICAgICAgIGlmIChvcHRpb25zLmNhbGxiYWNrIGluc3RhbmNlb2YgRnVuY3Rpb24pIHtcbiAgICAgICAgICBvcHRpb25zLmNhbGxiYWNrKCk7XG4gICAgICAgIH1cblxuICAgICAgICByZXNvbHZlKGVsZW1lbnQpO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cblxuICAvKipcbiAgICogQG1ldGhvZCBzZXRBY3RpdmVUYWJcbiAgICogQHNpZ25hdHVyZSBzZXRBY3RpdmVUYWIoaW5kZXgsIFtvcHRpb25zXSlcbiAgICogQHBhcmFtIHtOdW1iZXJ9IGluZGV4XG4gICAqICAgW2VuXVRhYiBpbmRleC5bL2VuXVxuICAgKiAgIFtqYV3jgr/jg5bjga7jgqTjg7Pjg4fjg4Pjgq/jgrnjgpLmjIflrprjgZfjgb7jgZnjgIJbL2phXVxuICAgKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnNdXG4gICAqICAgW2VuXVBhcmFtZXRlciBvYmplY3QuWy9lbl1cbiAgICogICBbamFd44Kq44OX44K344On44Oz44KS5oyH5a6a44GZ44KL44Kq44OW44K444Kn44Kv44OI44CCWy9qYV1cbiAgICogQHBhcmFtIHtCb29sZWFufSBbb3B0aW9ucy5rZWVwUGFnZV1cbiAgICogICBbZW5dSWYgdHJ1ZSB0aGUgcGFnZSB3aWxsIG5vdCBiZSBjaGFuZ2VkLlsvZW5dXG4gICAqICAgW2phXeOCv+ODluODkOODvOOBjOePvuWcqOihqOekuuOBl+OBpuOBhOOCi3BhZ2XjgpLlpInjgYjjgarjgYTloLTlkIjjgavjga90cnVl44KS5oyH5a6a44GX44G+44GZ44CCWy9qYV1cbiAgICogQHBhcmFtIHtTdHJpbmd9IFtvcHRpb25zLmFuaW1hdGlvbl1cbiAgICogICBbZW5dQW5pbWF0aW9uIG5hbWUuIEF2YWlsYWJsZSBhbmltYXRpb25zIGFyZSBgXCJmYWRlXCJgLCBgXCJzbGlkZVwiYCBhbmQgYFwibm9uZVwiYC5bL2VuXVxuICAgKiAgIFtqYV3jgqLjg4vjg6Hjg7zjgrfjg6fjg7PlkI3jgpLmjIflrprjgZfjgb7jgZnjgIJgXCJmYWRlXCJg44CBYFwic2xpZGVcImDjgIFgXCJub25lXCJg44Gu44GE44Ga44KM44GL44KS5oyH5a6a44Gn44GN44G+44GZ44CCWy9qYV1cbiAgICogQHBhcmFtIHtTdHJpbmd9IFtvcHRpb25zLmFuaW1hdGlvbk9wdGlvbnNdXG4gICAqICAgW2VuXVNwZWNpZnkgdGhlIGFuaW1hdGlvbidzIGR1cmF0aW9uLCBkZWxheSBhbmQgdGltaW5nLiBFLmcuIGB7ZHVyYXRpb246IDAuMiwgZGVsYXk6IDAuNCwgdGltaW5nOiAnZWFzZS1pbid9YC5bL2VuXVxuICAgKiAgIFtqYV3jgqLjg4vjg6Hjg7zjgrfjg6fjg7PmmYLjga5kdXJhdGlvbiwgZGVsYXksIHRpbWluZ+OCkuaMh+WumuOBl+OBvuOBmeOAgmUuZy4ge2R1cmF0aW9uOiAwLjIsIGRlbGF5OiAwLjQsIHRpbWluZzogJ2Vhc2UtaW4nfVsvamFdXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1TaG93IHNwZWNpZmllZCB0YWIgcGFnZS4gQW5pbWF0aW9ucyBhbmQgb3RoZXIgb3B0aW9ucyBjYW4gYmUgc3BlY2lmaWVkIGJ5IHRoZSBzZWNvbmQgcGFyYW1ldGVyLlsvZW5dXG4gICAqICAgW2phXeaMh+WumuOBl+OBn+OCpOODs+ODh+ODg+OCr+OCueOBruOCv+ODluOCkuihqOekuuOBl+OBvuOBmeOAguOCouODi+ODoeODvOOCt+ODp+ODs+OBquOBqeOBruOCquODl+OCt+ODp+ODs+OCkuaMh+WumuOBp+OBjeOBvuOBmeOAglsvamFdXG4gICAqIEByZXR1cm4ge1Byb21pc2V9XG4gICAqICAgW2VuXVJlc29sdmVzIHRvIHRoZSBuZXcgcGFnZSBlbGVtZW50LlsvZW5dXG4gICAqICAgW2phXVsvamFdXG4gICAqL1xuICBzZXRBY3RpdmVUYWIoaW5kZXgsIG9wdGlvbnMgPSB7fSkge1xuICAgIGlmIChvcHRpb25zICYmIHR5cGVvZiBvcHRpb25zICE9ICdvYmplY3QnKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ29wdGlvbnMgbXVzdCBiZSBhbiBvYmplY3QuIFlvdSBzdXBwbGllZCAnICsgb3B0aW9ucyk7XG4gICAgfVxuXG4gICAgb3B0aW9ucy5hbmltYXRpb25PcHRpb25zID0gdXRpbC5leHRlbmQoXG4gICAgICBvcHRpb25zLmFuaW1hdGlvbk9wdGlvbnMgfHwge30sXG4gICAgICBBbmltYXRvckZhY3RvcnkucGFyc2VBbmltYXRpb25PcHRpb25zU3RyaW5nKHRoaXMuZ2V0QXR0cmlidXRlKCdhbmltYXRpb24tb3B0aW9ucycpKVxuICAgICk7XG5cbiAgICBpZiAoIW9wdGlvbnMuYW5pbWF0aW9uICYmIHRoaXMuaGFzQXR0cmlidXRlKCdhbmltYXRpb24nKSkge1xuICAgICAgb3B0aW9ucy5hbmltYXRpb24gPSB0aGlzLmdldEF0dHJpYnV0ZSgnYW5pbWF0aW9uJyk7XG4gICAgfVxuXG4gICAgY29uc3QgcHJldmlvdXNUYWIgPSB0aGlzLl9nZXRBY3RpdmVUYWJFbGVtZW50KCksXG4gICAgICBzZWxlY3RlZFRhYiA9IHRoaXMuX2dldFRhYkVsZW1lbnQoaW5kZXgpLFxuICAgICAgcHJldmlvdXNUYWJJbmRleCA9IHRoaXMuZ2V0QWN0aXZlVGFiSW5kZXgoKSxcbiAgICAgIHNlbGVjdGVkVGFiSW5kZXggPSBpbmRleCxcbiAgICAgIHByZXZpb3VzUGFnZUVsZW1lbnQgPSB0aGlzLl9nZXRDdXJyZW50UGFnZUVsZW1lbnQoKTtcblxuICAgIGlmICghc2VsZWN0ZWRUYWIpIHtcbiAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdCgnU3BlY2lmaWVkIGluZGV4IGRvZXMgbm90IG1hdGNoIGFueSB0YWIuJyk7XG4gICAgfVxuXG4gICAgaWYgKHNlbGVjdGVkVGFiSW5kZXggPT09IHByZXZpb3VzVGFiSW5kZXgpIHtcbiAgICAgIHV0aWwudHJpZ2dlckVsZW1lbnRFdmVudCh0aGlzLCAncmVhY3RpdmUnLCB7XG4gICAgICAgIGluZGV4OiBzZWxlY3RlZFRhYkluZGV4LFxuICAgICAgICB0YWJJdGVtOiBzZWxlY3RlZFRhYlxuICAgICAgfSk7XG5cbiAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUocHJldmlvdXNQYWdlRWxlbWVudCk7XG4gICAgfVxuXG4gICAgbGV0IGNhbmNlbGVkID0gZmFsc2U7XG5cbiAgICB1dGlsLnRyaWdnZXJFbGVtZW50RXZlbnQodGhpcywgJ3ByZWNoYW5nZScsIHtcbiAgICAgIGluZGV4OiBzZWxlY3RlZFRhYkluZGV4LFxuICAgICAgdGFiSXRlbTogc2VsZWN0ZWRUYWIsXG4gICAgICBjYW5jZWw6ICgpID0+IGNhbmNlbGVkID0gdHJ1ZVxuICAgIH0pO1xuXG4gICAgaWYgKGNhbmNlbGVkKSB7XG4gICAgICBzZWxlY3RlZFRhYi5zZXRJbmFjdGl2ZSgpO1xuICAgICAgaWYgKHByZXZpb3VzVGFiKSB7XG4gICAgICAgIHByZXZpb3VzVGFiLnNldEFjdGl2ZSgpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KCdDYW5jZWxlZCBpbiBwcmVjaGFuZ2UgZXZlbnQuJyk7XG4gICAgfVxuXG4gICAgc2VsZWN0ZWRUYWIuc2V0QWN0aXZlKCk7XG5cbiAgICBjb25zdCBwYXJhbXMgPSB7XG4gICAgICAuLi5vcHRpb25zLFxuICAgICAgcHJldmlvdXNUYWJJbmRleDogcHJldmlvdXNUYWJJbmRleCxcbiAgICAgIHNlbGVjdGVkVGFiSW5kZXg6IHNlbGVjdGVkVGFiSW5kZXhcbiAgICB9O1xuXG4gICAgaWYgKHByZXZpb3VzVGFiKSB7XG4gICAgICBwcmV2aW91c1RhYi5zZXRJbmFjdGl2ZSgpO1xuICAgIH0gZWxzZSB7XG4gICAgICBwYXJhbXMuYW5pbWF0aW9uID0gJ25vbmUnO1xuICAgIH1cblxuICAgIHJldHVybiBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHtcbiAgICAgIHNlbGVjdGVkVGFiLl9sb2FkUGFnZUVsZW1lbnQodGhpcy5fY29udGVudEVsZW1lbnQsIHBhZ2VFbGVtZW50ID0+IHtcbiAgICAgICAgcGFnZUVsZW1lbnQucmVtb3ZlQXR0cmlidXRlKCdzdHlsZScpO1xuXG4gICAgICAgIHRoaXMuX3N3aXRjaFBhZ2UocGFnZUVsZW1lbnQsIHBhcmFtcylcbiAgICAgICAgICAudGhlbihwYWdlID0+IHtcbiAgICAgICAgICAgIHV0aWwudHJpZ2dlckVsZW1lbnRFdmVudCh0aGlzLCAncG9zdGNoYW5nZScsIHtcbiAgICAgICAgICAgICAgaW5kZXg6IHNlbGVjdGVkVGFiSW5kZXgsXG4gICAgICAgICAgICAgIHRhYkl0ZW06IHNlbGVjdGVkVGFiXG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgcmV0dXJuIHJlc29sdmUocGFnZSk7XG4gICAgICAgICAgfSk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAbWV0aG9kIHNldFRhYmJhclZpc2liaWxpdHlcbiAgICogQHNpZ25hdHVyZSBzZXRUYWJiYXJWaXNpYmlsaXR5KHZpc2libGUpXG4gICAqIEBwYXJhbSB7Qm9vbGVhbn0gdmlzaWJsZVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dVXNlZCB0byBoaWRlIG9yIHNob3cgdGhlIHRhYiBiYXIuWy9lbl1cbiAgICogICBbamFdWy9qYV1cbiAgICovXG4gIHNldFRhYmJhclZpc2liaWxpdHkodmlzaWJsZSkge1xuICAgIHRoaXMuX2NvbnRlbnRFbGVtZW50LnN0eWxlW3RoaXMuX3RvcCA/ICd0b3AnIDogJ2JvdHRvbSddID0gdmlzaWJsZSA/ICcnIDogJzBweCc7XG4gICAgdGhpcy5fZ2V0VGFiYmFyRWxlbWVudCgpLnN0eWxlLmRpc3BsYXkgPSB2aXNpYmxlID8gJycgOiAnbm9uZSc7XG4gIH1cblxuICBzaG93KCkge1xuICAgIHRoaXMuc2V0VGFiYmFyVmlzaWJpbGl0eSh0cnVlKTtcbiAgfVxuXG4gIGhpZGUoKSB7XG4gICAgdGhpcy5zZXRUYWJiYXJWaXNpYmlsaXR5KGZhbHNlKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcHJvcGVydHkgdmlzaWJsZVxuICAgKiBAcmVhZG9ubHlcbiAgICogQHR5cGUge0Jvb2xlYW59XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1XaGV0aGVyIHRoZSB0YWJiYXIgaXMgdmlzaWJsZSBvciBub3QuWy9lbl1cbiAgICogICBbamFd44K/44OW44OQ44O844GM6KaL44GI44KL5aC05ZCI44GrYHRydWVg44CCWy9qYV1cbiAgICovXG4gIGdldCB2aXNpYmxlKCkge1xuICAgIHJldHVybiB0aGlzLl9nZXRUYWJiYXJFbGVtZW50KCkuc3R5bGUuZGlzcGxheSAhPT0gJ25vbmUnO1xuICB9XG5cbiAgLyoqXG4gICAqIEBtZXRob2QgZ2V0QWN0aXZlVGFiSW5kZXhcbiAgICogQHNpZ25hdHVyZSBnZXRBY3RpdmVUYWJJbmRleCgpXG4gICAqIEByZXR1cm4ge051bWJlcn1cbiAgICogICBbZW5dVGhlIGluZGV4IG9mIHRoZSBjdXJyZW50bHkgYWN0aXZlIHRhYi5bL2VuXVxuICAgKiAgIFtqYV3nj77lnKjjgqLjgq/jg4bjgqPjg5bjgavjgarjgaPjgabjgYTjgovjgr/jg5bjga7jgqTjg7Pjg4fjg4Pjgq/jgrnjgpLov5TjgZfjgb7jgZnjgIJbL2phXVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dUmV0dXJucyB0YWIgaW5kZXggb24gY3VycmVudCBhY3RpdmUgdGFiLiBJZiBhY3RpdmUgdGFiIGlzIG5vdCBmb3VuZCwgcmV0dXJucyAtMS5bL2VuXVxuICAgKiAgIFtqYV3nj77lnKjjgqLjgq/jg4bjgqPjg5bjgavjgarjgaPjgabjgYTjgovjgr/jg5bjga7jgqTjg7Pjg4fjg4Pjgq/jgrnjgpLov5TjgZfjgb7jgZnjgILnj77lnKjjgqLjgq/jg4bjgqPjg5bjgarjgr/jg5bjgYzjgarjgYTloLTlkIjjgavjga8tMeOCkui/lOOBl+OBvuOBmeOAglsvamFdXG4gICAqL1xuICBnZXRBY3RpdmVUYWJJbmRleCgpIHtcbiAgICBjb25zdCB0YWJzID0gdGhpcy5fZ2V0VGFiYmFyRWxlbWVudCgpLmNoaWxkcmVuO1xuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0YWJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICBpZiAodGFic1tpXSBpbnN0YW5jZW9mIFRhYkVsZW1lbnQgJiYgdGFic1tpXS5pc0FjdGl2ZSAmJiB0YWJzW2ldLmlzQWN0aXZlKCkpIHtcbiAgICAgICAgcmV0dXJuIGk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIC0xO1xuICB9XG5cbiAgLyoqXG4gICAqIEByZXR1cm4ge051bWJlcn0gV2hlbiBhY3RpdmUgdGFiIGlzIG5vdCBmb3VuZCwgcmV0dXJucyAtMS5cbiAgICovXG4gIF9nZXRBY3RpdmVUYWJFbGVtZW50KCkge1xuICAgIHJldHVybiB0aGlzLl9nZXRUYWJFbGVtZW50KHRoaXMuZ2V0QWN0aXZlVGFiSW5kZXgoKSk7XG4gIH1cblxuICAvKipcbiAgICogQHJldHVybiB7RWxlbWVudH1cbiAgICovXG4gIF9nZXRUYWJFbGVtZW50KGluZGV4KSB7XG4gICAgcmV0dXJuIHRoaXMuX2dldFRhYmJhckVsZW1lbnQoKS5jaGlsZHJlbltpbmRleF07XG4gIH1cblxuICBkaXNjb25uZWN0ZWRDYWxsYmFjaygpIHsgfVxuXG4gIF9zaG93KCkge1xuICAgIGNvbnN0IGN1cnJlbnRQYWdlRWxlbWVudCA9IHRoaXMuX2dldEN1cnJlbnRQYWdlRWxlbWVudCgpO1xuICAgIGlmIChjdXJyZW50UGFnZUVsZW1lbnQpIHtcbiAgICAgIGN1cnJlbnRQYWdlRWxlbWVudC5fc2hvdygpO1xuICAgIH1cbiAgfVxuXG4gIF9oaWRlKCkge1xuICAgIGNvbnN0IGN1cnJlbnRQYWdlRWxlbWVudCA9IHRoaXMuX2dldEN1cnJlbnRQYWdlRWxlbWVudCgpO1xuICAgIGlmIChjdXJyZW50UGFnZUVsZW1lbnQpIHtcbiAgICAgIGN1cnJlbnRQYWdlRWxlbWVudC5faGlkZSgpO1xuICAgIH1cbiAgfVxuXG4gIF9kZXN0cm95KCkge1xuICAgIGNvbnN0IHRhYnMgPSB0aGlzLl9nZXRUYWJiYXJFbGVtZW50KCkuY2hpbGRyZW47XG4gICAgZm9yIChsZXQgaSA9IHRhYnMubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pIHtcbiAgICAgIHRhYnNbaV0ucmVtb3ZlKCk7XG4gICAgfVxuICAgIHRoaXMucmVtb3ZlKCk7XG4gIH1cblxuICBzdGF0aWMgZ2V0IG9ic2VydmVkQXR0cmlidXRlcygpIHtcbiAgICByZXR1cm4gWydtb2RpZmllciddO1xuICB9XG5cbiAgYXR0cmlidXRlQ2hhbmdlZENhbGxiYWNrKG5hbWUsIGxhc3QsIGN1cnJlbnQpIHtcbiAgICBpZiAobmFtZSA9PT0gJ21vZGlmaWVyJykge1xuICAgICAgcmV0dXJuIE1vZGlmaWVyVXRpbC5vbk1vZGlmaWVyQ2hhbmdlZChsYXN0LCBjdXJyZW50LCB0aGlzLCBzY2hlbWUpO1xuICAgIH1cbiAgfVxuXG4gIHN0YXRpYyBnZXQgcmV3cml0YWJsZXMoKSB7XG4gICAgcmV0dXJuIHJld3JpdGFibGVzO1xuICB9XG5cbiAgc3RhdGljIGdldCBUYWJiYXJBbmltYXRvcigpIHtcbiAgICByZXR1cm4gVGFiYmFyQW5pbWF0b3I7XG4gIH1cblxuICBzdGF0aWMgZ2V0IGV2ZW50cygpIHtcbiAgICByZXR1cm4gWydwcmVjaGFuZ2UnLCAncG9zdGNoYW5nZScsICdyZWFjdGl2ZSddO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7U3RyaW5nfSBuYW1lXG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IEFuaW1hdG9yXG4gICAqL1xuICBzdGF0aWMgcmVnaXN0ZXJBbmltYXRvcihuYW1lLCBBbmltYXRvcikge1xuICAgIGlmICghKEFuaW1hdG9yLnByb3RvdHlwZSBpbnN0YW5jZW9mIFRhYmJhckFuaW1hdG9yKSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdcIkFuaW1hdG9yXCIgcGFyYW0gbXVzdCBpbmhlcml0IFRhYmJhckVsZW1lbnQuVGFiYmFyQW5pbWF0b3InKTtcbiAgICB9XG4gICAgX2FuaW1hdG9yRGljdFtuYW1lXSA9IEFuaW1hdG9yO1xuICB9XG5cbiAgc3RhdGljIGdldCBhbmltYXRvcnMoKSB7XG4gICAgcmV0dXJuIF9hbmltYXRvckRpY3Q7XG4gIH1cbn1cblxuY3VzdG9tRWxlbWVudHMuZGVmaW5lKCdvbnMtdGFiYmFyJywgVGFiYmFyRWxlbWVudCk7XG4iLCIvKlxuQ29weXJpZ2h0IDIwMTMtMjAxNSBBU0lBTCBDT1JQT1JBVElPTlxuXG5MaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xueW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG5cbiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuXG5Vbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG5kaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG5XSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cblNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbmxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuXG4qL1xuXG5pbXBvcnQgdXRpbCBmcm9tICcuLi9vbnMvdXRpbCc7XG5pbXBvcnQgYXV0b1N0eWxlIGZyb20gJy4uL29ucy9hdXRvc3R5bGUnO1xuaW1wb3J0IE1vZGlmaWVyVXRpbCBmcm9tICcuLi9vbnMvaW50ZXJuYWwvbW9kaWZpZXItdXRpbCc7XG5pbXBvcnQgQmFzZUVsZW1lbnQgZnJvbSAnLi4vb25zL2Jhc2UtZWxlbWVudCc7XG5pbXBvcnQgaW50ZXJuYWwgZnJvbSAnLi4vb25zL2ludGVybmFsJztcbmltcG9ydCBUYWJiYXJFbGVtZW50IGZyb20gJy4vb25zLXRhYmJhcic7XG5pbXBvcnQgY29udGVudFJlYWR5IGZyb20gJy4uL29ucy9jb250ZW50LXJlYWR5JztcbmltcG9ydCB7IFBhZ2VMb2FkZXIsIGRlZmF1bHRQYWdlTG9hZGVyIH0gZnJvbSAnLi4vb25zL3BhZ2UtbG9hZGVyJztcblxuY29uc3QgZGVmYXVsdENsYXNzTmFtZSA9ICd0YWJiYXJfX2l0ZW0nO1xuXG5jb25zdCBzY2hlbWUgPSB7XG4gICcnOiAndGFiYmFyLS0qX19pdGVtJyxcbiAgJy50YWJiYXJfX2J1dHRvbic6ICd0YWJiYXItLSpfX2J1dHRvbidcbn07XG5cbmNvbnN0IHRlbXBsYXRlU291cmNlID0gdXRpbC5jcmVhdGVFbGVtZW50KGBcbiAgPGRpdj5cbiAgICA8aW5wdXQgdHlwZT1cInJhZGlvXCIgc3R5bGU9XCJkaXNwbGF5OiBub25lXCI+XG4gICAgPGJ1dHRvbiBjbGFzcz1cInRhYmJhcl9fYnV0dG9uXCI+PC9idXR0b24+XG4gIDwvZGl2PlxuYCk7XG5cbmNvbnN0IGRlZmF1bHRJbm5lclRlbXBsYXRlU291cmNlID0gdXRpbC5jcmVhdGVFbGVtZW50KGBcbiAgPGRpdj5cbiAgICA8ZGl2IGNsYXNzPVwidGFiYmFyX19pY29uXCI+XG4gICAgICA8b25zLWljb24gaWNvbj1cImlvbi1jbG91ZFwiPjwvb25zLWljb24+XG4gICAgPC9kaXY+XG4gICAgPGRpdiBjbGFzcz1cInRhYmJhcl9fbGFiZWxcIj5sYWJlbDwvZGl2PlxuICAgIDxkaXYgY2xhc3M9XCJ0YWJiYXJfX2JhZGdlIG5vdGlmaWNhdGlvblwiPjE8L2Rpdj5cbiAgPC9kaXY+XG5gKTtcblxuLyoqXG4gKiBAZWxlbWVudCBvbnMtdGFiXG4gKiBAY2F0ZWdvcnkgdGFiYmFyXG4gKiBAZGVzY3JpcHRpb25cbiAqICAgW2VuXVJlcHJlc2VudHMgYSB0YWIgaW5zaWRlIHRhYiBiYXIuIEVhY2ggYDxvbnMtdGFiPmAgcmVwcmVzZW50cyBhIHBhZ2UuWy9lbl1cbiAqICAgW2phXVxuICogICAgIOOCv+ODluODkOODvOOBq+mFjee9ruOBleOCjOOCi+WQhOOCouOCpOODhuODoOOBruOCs+ODs+ODneODvOODjeODs+ODiOOBp+OBmeOAguOBneOCjOOBnuOCjOOBrm9ucy10YWLjga/jg5rjg7zjgrjjgpLooajjgZfjgb7jgZnjgIJcbiAqICAgICBvbnMtdGFi6KaB57Sg44Gu5Lit44Gr44Gv44CB44K/44OW44Gr6KGo56S644GV44KM44KL44Kz44Oz44OG44Oz44OE44KS55u05o6l6KiY6L+w44GZ44KL44GT44Go44GM5Ye65p2l44G+44GZ44CCXG4gKiAgIFsvamFdXG4gKiBAY29kZXBlbiBwR3VETFxuICogQHR1dG9yaWFsIHZhbmlsbGEvUmVmZXJlbmNlL3RhYmJhclxuICogQGd1aWRlIG11bHRpcGxlLXBhZ2UtbmF2aWdhdGlvblxuICogICBbZW5dTWFuYWdpbmcgbXVsdGlwbGUgcGFnZXMuWy9lbl1cbiAqICAgW2phXU1hbmFnaW5nIG11bHRpcGxlIHBhZ2VzWy9qYV1dXG4gKiBAZ3VpZGUgdGVtcGxhdGVzXG4gKiAgIFtlbl1EZWZpbmluZyBtdWx0aXBsZSBwYWdlcyBpbiBzaW5nbGUgaHRtbFsvZW5dXG4gKiAgIFtqYV3opIfmlbDjga7jg5rjg7zjgrjjgpIx44Gk44GuSFRNTOOBq+iomOi/sOOBmeOCi1svamFdXG4gKiBAc2VlYWxzbyBvbnMtdGFiYmFyXG4gKiAgIFtlbl1vbnMtdGFiYmFyIGNvbXBvbmVudFsvZW5dXG4gKiAgIFtqYV1vbnMtdGFiYmFy44Kz44Oz44Od44O844ON44Oz44OIWy9qYV1cbiAqIEBzZWVhbHNvIG9ucy1wYWdlXG4gKiAgIFtlbl1vbnMtcGFnZSBjb21wb25lbnRbL2VuXVxuICogICBbamFdb25zLXBhZ2XjgrPjg7Pjg53jg7zjg43jg7Pjg4hbL2phXVxuICogQHNlZWFsc28gb25zLWljb25cbiAqICAgW2VuXW9ucy1pY29uIGNvbXBvbmVudFsvZW5dXG4gKiAgIFtqYV1vbnMtaWNvbuOCs+ODs+ODneODvOODjeODs+ODiFsvamFdXG4gKiBAZXhhbXBsZVxuICogPG9ucy10YWJiYXI+XG4gKiAgIDxvbnMtdGFiXG4gKiAgICAgcGFnZT1cImhvbWUuaHRtbFwiXG4gKiAgICAgbGFiZWw9XCJIb21lXCJcbiAqICAgICBhY3RpdmU+XG4gKiAgIDwvb25zLXRhYj5cbiAqICAgPG9ucy10YWJcbiAqICAgICBwYWdlPVwic2V0dGluZ3MuaHRtbFwiXG4gKiAgICAgbGFiZWw9XCJTZXR0aW5nc1wiXG4gKiAgICAgYWN0aXZlPlxuICogICA8L29ucy10YWI+XG4gKiA8L29ucy10YWJiYXI+XG4gKlxuICogPG9ucy10ZW1wbGF0ZSBpZD1cImhvbWUuaHRtbFwiPlxuICogICAuLi5cbiAqIDwvb25zLXRlbXBsYXRlPlxuICpcbiAqIDxvbnMtdGVtcGxhdGUgaWQ9XCJzZXR0aW5ncy5odG1sXCI+XG4gKiAgIC4uLlxuICogPC9vbnMtdGVtcGxhdGU+XG5cbiAqL1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVGFiRWxlbWVudCBleHRlbmRzIEJhc2VFbGVtZW50IHtcblxuICAvKipcbiAgICogQGF0dHJpYnV0ZSBwYWdlXG4gICAqIEBpbml0b25seVxuICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dVGhlIHBhZ2UgdGhhdCBpcyBkaXNwbGF5ZWQgd2hlbiB0aGUgdGFiIGlzIHRhcHBlZC5bL2VuXVxuICAgKiAgIFtqYV1vbnMtdGFi44GM5Y+C54Wn44GZ44KL44Oa44O844K444G444GuVVJM44KS5oyH5a6a44GX44G+44GZ44CCWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBhdHRyaWJ1dGUgaWNvblxuICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dXG4gICAqICAgICBUaGUgaWNvbiBuYW1lIGZvciB0aGUgdGFiLiBDYW4gc3BlY2lmeSB0aGUgc2FtZSBpY29uIG5hbWUgYXMgYDxvbnMtaWNvbj5gLlxuICAgKiAgICAgSWYgeW91IG5lZWQgdG8gdXNlIHlvdXIgb3duIGljb24sIGNyZWF0ZSBhIENTUyBjbGFzcyB3aXRoIGBiYWNrZ3JvdW5kLWltYWdlYCBvciBhbnkgQ1NTIHByb3BlcnRpZXMgYW5kIHNwZWNpZnkgdGhlIG5hbWUgb2YgeW91ciBDU1MgY2xhc3MgaGVyZS5cbiAgICogICBbL2VuXVxuICAgKiAgIFtqYV1cbiAgICogICAgIOOCouOCpOOCs+ODs+WQjeOCkuaMh+WumuOBl+OBvuOBmeOAgm9ucy1pY29u44Go5ZCM44GY44Ki44Kk44Kz44Oz5ZCN44KS5oyH5a6a44Gn44GN44G+44GZ44CCXG4gICAqICAgICDlgIvliKXjgavjgqLjgqTjgrPjg7PjgpLjgqvjgrnjgr/jg57jgqTjgrrjgZnjgovloLTlkIjjga/jgIFiYWNrZ3JvdW5kLWltYWdl44Gq44Gp44GuQ1NT44K544K/44Kk44Or44KS55So44GE44Gm5oyH5a6a44Gn44GN44G+44GZ44CCXG4gICAqICAgWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBhdHRyaWJ1dGUgYWN0aXZlLWljb25cbiAgICogQHR5cGUge1N0cmluZ31cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXVRoZSBuYW1lIG9mIHRoZSBpY29uIHdoZW4gdGhlIHRhYiBpcyBhY3RpdmUuWy9lbl1cbiAgICogICBbamFd44Ki44Kv44OG44Kj44OW44Gu6Zqb44Gu44Ki44Kk44Kz44Oz5ZCN44KS5oyH5a6a44GX44G+44GZ44CCWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBhdHRyaWJ1dGUgbGFiZWxcbiAgICogQHR5cGUge1N0cmluZ31cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXVRoZSBsYWJlbCBvZiB0aGUgdGFiIGl0ZW0uWy9lbl1cbiAgICogICBbamFd44Ki44Kk44Kz44Oz5LiL44Gr6KGo56S644GV44KM44KL44Op44OZ44Or44KS5oyH5a6a44GX44G+44GZ44CCWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBhdHRyaWJ1dGUgYmFkZ2VcbiAgICogQHR5cGUge1N0cmluZ31cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXURpc3BsYXkgYSBub3RpZmljYXRpb24gYmFkZ2Ugb24gdG9wIG9mIHRoZSB0YWIuWy9lbl1cbiAgICogICBbamFd44OQ44OD44K444Gr6KGo56S644GZ44KL5YaF5a6544KS5oyH5a6a44GX44G+44GZ44CCWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBhdHRyaWJ1dGUgYWN0aXZlXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1UaGlzIGF0dHJpYnV0ZSBzaG91bGQgYmUgc2V0IHRvIHRoZSB0YWIgdGhhdCBpcyBhY3RpdmUgYnkgZGVmYXVsdC5bL2VuXVxuICAgKiAgIFtqYV1bL2phXVxuICAgKi9cblxuICBpbml0KCkge1xuICAgIHRoaXMuX3BhZ2VMb2FkZXIgPSBkZWZhdWx0UGFnZUxvYWRlcjtcbiAgICB0aGlzLl9wYWdlID0gbnVsbDtcblxuICAgIGlmICh0aGlzLmhhc0F0dHJpYnV0ZSgnbGFiZWwnKSB8fCB0aGlzLmhhc0F0dHJpYnV0ZSgnaWNvbicpIHx8IHRoaXMuaGFzQXR0cmlidXRlKCdiYWRnZScpKSB7XG4gICAgICB0aGlzLl9jb21waWxlKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGNvbnRlbnRSZWFkeSh0aGlzLCAoKSA9PiB7XG4gICAgICAgIHRoaXMuX2NvbXBpbGUoKTtcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIHRoaXMuX2JvdW5kT25DbGljayA9IHRoaXMuX29uQ2xpY2suYmluZCh0aGlzKTtcbiAgfVxuXG4gIF9nZXRQYWdlVGFyZ2V0KCkge1xuICAgIHJldHVybiB0aGlzLnBhZ2UgfHwgdGhpcy5nZXRBdHRyaWJ1dGUoJ3BhZ2UnKTtcbiAgfVxuXG4gIHNldCBwYWdlKHBhZ2UpIHtcbiAgICB0aGlzLl9wYWdlID0gcGFnZTtcbiAgfVxuXG4gIGdldCBwYWdlKCkge1xuICAgIHJldHVybiB0aGlzLl9wYWdlO1xuICB9XG5cbiAgc2V0IHBhZ2VMb2FkZXIobG9hZGVyKSB7XG4gICAgaWYgKCEobG9hZGVyIGluc3RhbmNlb2YgUGFnZUxvYWRlcikpIHtcbiAgICAgIHRocm93IEVycm9yKCdGaXJzdCBwYXJhbWV0ZXIgbXVzdCBiZSBhbiBpbnN0YW5jZSBvZiBQYWdlTG9hZGVyLicpO1xuICAgIH1cbiAgICB0aGlzLl9wYWdlTG9hZGVyID0gbG9hZGVyO1xuICB9XG5cbiAgZ2V0IHBhZ2VMb2FkZXIoKSB7XG4gICAgcmV0dXJuIHRoaXMuX3BhZ2VMb2FkZXI7XG4gIH1cblxuICBfdGVtcGxhdGVMb2FkZWQoKSB7XG4gICAgaWYgKHRoaXMuY2hpbGRyZW4ubGVuZ3RoID09IDApIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG5cbiAgICBjb25zdCBoYXNJbnB1dCA9IHRoaXMuX2lucHV0LmdldEF0dHJpYnV0ZSgndHlwZScpID09PSAncmFkaW8nO1xuICAgIGNvbnN0IGhhc0J1dHRvbiA9IHRoaXMuX2J1dHRvbjtcblxuICAgIHJldHVybiAhIShoYXNJbnB1dCAmJiBoYXNCdXR0b24pO1xuICB9XG5cbiAgX2NvbXBpbGUoKSB7XG4gICAgYXV0b1N0eWxlLnByZXBhcmUodGhpcyk7XG5cbiAgICB0aGlzLmNsYXNzTGlzdC5hZGQoZGVmYXVsdENsYXNzTmFtZSk7XG5cbiAgICBpZiAoIXRoaXMuX3RlbXBsYXRlTG9hZGVkKCkpIHtcbiAgICAgIGNvbnN0IGZyYWdtZW50ID0gZG9jdW1lbnQuY3JlYXRlRG9jdW1lbnRGcmFnbWVudCgpO1xuICAgICAgbGV0IGhhc0NoaWxkcmVuID0gZmFsc2U7XG5cbiAgICAgIHdoaWxlICh0aGlzLmNoaWxkTm9kZXNbMF0pIHtcbiAgICAgICAgY29uc3Qgbm9kZSA9IHRoaXMuY2hpbGROb2Rlc1swXTtcbiAgICAgICAgdGhpcy5yZW1vdmVDaGlsZChub2RlKTtcbiAgICAgICAgZnJhZ21lbnQuYXBwZW5kQ2hpbGQobm9kZSk7XG5cbiAgICAgICAgaWYgKG5vZGUubm9kZVR5cGUgPT0gTm9kZS5FTEVNRU5UX05PREUpIHtcbiAgICAgICAgICBoYXNDaGlsZHJlbiA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgY29uc3QgdGVtcGxhdGUgPSB0ZW1wbGF0ZVNvdXJjZS5jbG9uZU5vZGUodHJ1ZSk7XG4gICAgICB3aGlsZSAodGVtcGxhdGUuY2hpbGRyZW5bMF0pIHtcbiAgICAgICAgdGhpcy5hcHBlbmRDaGlsZCh0ZW1wbGF0ZS5jaGlsZHJlblswXSk7XG4gICAgICB9XG5cbiAgICAgIGlmIChoYXNDaGlsZHJlbikge1xuICAgICAgICB0aGlzLl9idXR0b24uYXBwZW5kQ2hpbGQoZnJhZ21lbnQpO1xuICAgICAgICB0aGlzLl9oYXNEZWZhdWx0VGVtcGxhdGUgPSBmYWxzZTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMuX2hhc0RlZmF1bHRUZW1wbGF0ZSA9IHRydWU7XG4gICAgICAgIHRoaXMuX3VwZGF0ZURlZmF1bHRUZW1wbGF0ZSgpO1xuICAgICAgfVxuICAgIH1cblxuICAgIE1vZGlmaWVyVXRpbC5pbml0TW9kaWZpZXIodGhpcywgc2NoZW1lKTtcbiAgICB0aGlzLl91cGRhdGVSaXBwbGUoKTtcbiAgfVxuXG4gIF91cGRhdGVSaXBwbGUoKSB7XG4gICAgdXRpbC51cGRhdGVSaXBwbGUodGhpcy5xdWVyeVNlbGVjdG9yKCcudGFiYmFyX19idXR0b24nKSwgdGhpcy5oYXNBdHRyaWJ1dGUoJ3JpcHBsZScpKTtcbiAgfVxuXG4gIF91cGRhdGVEZWZhdWx0VGVtcGxhdGUoKSB7XG4gICAgaWYgKCF0aGlzLl9oYXNEZWZhdWx0VGVtcGxhdGUpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBjb25zdCBidXR0b24gPSB0aGlzLl9idXR0b247XG4gICAgY29uc3QgdGVtcGxhdGUgPSBkZWZhdWx0SW5uZXJUZW1wbGF0ZVNvdXJjZS5jbG9uZU5vZGUodHJ1ZSk7XG4gICAgaWYgKGJ1dHRvbi5jaGlsZHJlbi5sZW5ndGggPT09IDApIHtcbiAgICAgIHdoaWxlICh0ZW1wbGF0ZS5jaGlsZHJlblswXSkge1xuICAgICAgICBidXR0b24uYXBwZW5kQ2hpbGQodGVtcGxhdGUuY2hpbGRyZW5bMF0pO1xuICAgICAgfVxuICAgIH1cblxuICAgIGlmICghYnV0dG9uLnF1ZXJ5U2VsZWN0b3IoJy50YWJiYXJfX2ljb24nKSkge1xuICAgICAgYnV0dG9uLmluc2VydEJlZm9yZSh0ZW1wbGF0ZS5xdWVyeVNlbGVjdG9yKCcudGFiYmFyX19pY29uJyksIGJ1dHRvbi5maXJzdENoaWxkKTtcbiAgICB9XG5cbiAgICBpZiAoIWJ1dHRvbi5xdWVyeVNlbGVjdG9yKCcudGFiYmFyX19sYWJlbCcpKSB7XG4gICAgICBidXR0b24uYXBwZW5kQ2hpbGQodGVtcGxhdGUucXVlcnlTZWxlY3RvcignLnRhYmJhcl9fbGFiZWwnKSk7XG4gICAgfVxuXG4gICAgaWYgKCFidXR0b24ucXVlcnlTZWxlY3RvcignLnRhYmJhcl9fYmFkZ2UnKSkge1xuICAgICAgYnV0dG9uLmFwcGVuZENoaWxkKHRlbXBsYXRlLnF1ZXJ5U2VsZWN0b3IoJy50YWJiYXJfX2JhZGdlJykpO1xuICAgIH1cblxuICAgIGNvbnN0IGljb24gPSB0aGlzLmdldEF0dHJpYnV0ZSgnaWNvbicpO1xuICAgIGNvbnN0IGxhYmVsID0gdGhpcy5nZXRBdHRyaWJ1dGUoJ2xhYmVsJyk7XG4gICAgY29uc3QgYmFkZ2UgPSB0aGlzLmdldEF0dHJpYnV0ZSgnYmFkZ2UnKTtcblxuICAgIGNvbnN0IGljb25FbGVtZW50ID0gYnV0dG9uLnF1ZXJ5U2VsZWN0b3IoJy50YWJiYXJfX2ljb24nKS5jaGlsZHJlblswXTtcbiAgICBjb25zdCBsYWJlbEVsZW1lbnQgPSBidXR0b24ucXVlcnlTZWxlY3RvcignLnRhYmJhcl9fbGFiZWwnKTtcbiAgICBjb25zdCBiYWRnZUVsZW1lbnQgPSBidXR0b24ucXVlcnlTZWxlY3RvcignLnRhYmJhcl9fYmFkZ2UnKTtcblxuICAgIGlmIChpY29uRWxlbWVudCkge1xuICAgICAgaWYgKHR5cGVvZiBpY29uID09PSAnc3RyaW5nJykge1xuICAgICAgICBjb25zdCBsYXN0ID0gaWNvbkVsZW1lbnQuZ2V0QXR0cmlidXRlKCdpY29uJyk7XG4gICAgICAgIGljb25FbGVtZW50LnNldEF0dHJpYnV0ZSgnaWNvbicsIGljb24pO1xuICAgICAgICAvLyBkaXJ0eSBmaXggZm9yIGh0dHBzOi8vZ2l0aHViLmNvbS9PbnNlblVJL09uc2VuVUkvaXNzdWVzLzE2NTRcbiAgICAgICAgaWNvbkVsZW1lbnQuYXR0cmlidXRlQ2hhbmdlZENhbGxiYWNrKCdpY29uJywgbGFzdCwgaWNvbik7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBpY29uRWxlbWVudC5wYXJlbnRFbGVtZW50LnJlbW92ZSgpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGlmIChsYWJlbEVsZW1lbnQpIHtcbiAgICAgIGlmICh0eXBlb2YgbGFiZWwgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIGxhYmVsRWxlbWVudC50ZXh0Q29udGVudCA9IGxhYmVsO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgbGFiZWxFbGVtZW50LnJlbW92ZSgpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGlmIChiYWRnZUVsZW1lbnQpIHtcbiAgICAgIGlmICh0eXBlb2YgYmFkZ2UgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIGJhZGdlRWxlbWVudC50ZXh0Q29udGVudCA9IGJhZGdlO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgYmFkZ2VFbGVtZW50LnJlbW92ZSgpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGdldCBfaW5wdXQoKSB7XG4gICAgcmV0dXJuIHRoaXMuY2hpbGRyZW5bMF07XG4gIH1cblxuICBnZXQgX2J1dHRvbigpIHtcbiAgICByZXR1cm4gdXRpbC5maW5kQ2hpbGQodGhpcywgJy50YWJiYXJfX2J1dHRvbicpO1xuICB9XG5cbiAgX29uQ2xpY2soKSB7XG4gICAgaWYgKHRoaXMub25DbGljayBpbnN0YW5jZW9mIEZ1bmN0aW9uKSB7XG4gICAgICB0aGlzLm9uQ2xpY2soKTtcbiAgICB9IGVsc2Uge1xuICAgICAgY29uc3QgdGFiYmFyID0gdGhpcy5fZmluZFRhYmJhckVsZW1lbnQoKTtcbiAgICAgIGlmICh0YWJiYXIpIHtcbiAgICAgICAgdGFiYmFyLnNldEFjdGl2ZVRhYih0aGlzLl9maW5kVGFiSW5kZXgoKSk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgc2V0QWN0aXZlKCkge1xuICAgIHRoaXMuX2lucHV0LmNoZWNrZWQgPSB0cnVlO1xuICAgIHRoaXMuY2xhc3NMaXN0LmFkZCgnYWN0aXZlJyk7XG4gICAgdGhpcy5zZXRBdHRyaWJ1dGUoJ2FjdGl2ZScsICcnKTtcblxuICAgIGlmICh0aGlzLmhhc0F0dHJpYnV0ZSgnaWNvbicpICYmIHRoaXMuaGFzQXR0cmlidXRlKCdhY3RpdmUtaWNvbicpKSB7XG4gICAgICBjb25zdCBpY29uID0gdGhpcy5nZXRBdHRyaWJ1dGUoJ2FjdGl2ZS1pY29uJyk7XG4gICAgICBjb25zdCBpY29uRWxlbWVudCA9IHRoaXMuX2J1dHRvbi5xdWVyeVNlbGVjdG9yKCcudGFiYmFyX19pY29uJykuY2hpbGRyZW5bMF07XG4gICAgICBpY29uRWxlbWVudC5zZXRBdHRyaWJ1dGUoJ2ljb24nLCBpY29uKTtcbiAgICB9XG5cbiAgICB1dGlsLmFycmF5RnJvbSh0aGlzLnF1ZXJ5U2VsZWN0b3JBbGwoJ1tvbnMtdGFiLWluYWN0aXZlXSwgb25zLXRhYi1pbmFjdGl2ZScpKVxuICAgICAgLmZvckVhY2goZWxlbWVudCA9PiBlbGVtZW50LnN0eWxlLmRpc3BsYXkgPSAnbm9uZScpO1xuICAgIHV0aWwuYXJyYXlGcm9tKHRoaXMucXVlcnlTZWxlY3RvckFsbCgnW29ucy10YWItYWN0aXZlXSwgb25zLXRhYi1hY3RpdmUnKSlcbiAgICAgIC5mb3JFYWNoKGVsZW1lbnQgPT4gZWxlbWVudC5zdHlsZS5kaXNwbGF5ID0gJ2luaGVyaXQnKTtcbiAgfVxuXG4gIHNldEluYWN0aXZlKCkge1xuICAgIHRoaXMuX2lucHV0LmNoZWNrZWQgPSBmYWxzZTtcbiAgICB0aGlzLmNsYXNzTGlzdC5yZW1vdmUoJ2FjdGl2ZScpO1xuICAgIHRoaXMucmVtb3ZlQXR0cmlidXRlKCdhY3RpdmUnKTtcblxuICAgIGlmICh0aGlzLmhhc0F0dHJpYnV0ZSgnaWNvbicpKSB7XG4gICAgICBjb25zdCBpY29uID0gdGhpcy5nZXRBdHRyaWJ1dGUoJ2ljb24nKTtcbiAgICAgIGNvbnN0IGljb25FbGVtZW50ID0gdGhpcy5fYnV0dG9uLnF1ZXJ5U2VsZWN0b3IoJy50YWJiYXJfX2ljb24nKS5jaGlsZHJlblswXTtcbiAgICAgIGljb25FbGVtZW50LnNldEF0dHJpYnV0ZSgnaWNvbicsIGljb24pO1xuICAgIH1cblxuICAgIHV0aWwuYXJyYXlGcm9tKHRoaXMucXVlcnlTZWxlY3RvckFsbCgnW29ucy10YWItaW5hY3RpdmVdLCBvbnMtdGFiLWluYWN0aXZlJykpXG4gICAgICAuZm9yRWFjaChlbGVtZW50ID0+IGVsZW1lbnQuc3R5bGUuZGlzcGxheSA9ICdpbmhlcml0Jyk7XG4gICAgdXRpbC5hcnJheUZyb20odGhpcy5xdWVyeVNlbGVjdG9yQWxsKCdbb25zLXRhYi1hY3RpdmVdLCBvbnMtdGFiLWFjdGl2ZScpKVxuICAgICAgLmZvckVhY2goZWxlbWVudCA9PiBlbGVtZW50LnN0eWxlLmRpc3BsYXkgPSAnbm9uZScpO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7RWxlbWVudH0gcGFyZW50XG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IGNhbGxiYWNrXG4gICAqL1xuICBfbG9hZFBhZ2VFbGVtZW50KHBhcmVudCwgY2FsbGJhY2spIHtcbiAgICBpZiAoIXRoaXMuX2xvYWRlZFBhZ2UgJiYgIXRoaXMuX2dldFBhZ2VUYXJnZXQoKSkge1xuICAgICAgY29uc3QgcGFnZXMgPSB0aGlzLl9maW5kVGFiYmFyRWxlbWVudCgpLnBhZ2VzO1xuICAgICAgY29uc3QgaW5kZXggPSB0aGlzLl9maW5kVGFiSW5kZXgoKTtcbiAgICAgIGlmICghcGFnZXNbaW5kZXhdKSB7XG4gICAgICAgIHRocm93IEVycm9yKCdQYWdlIHdhcyBub3QgcHJvdmlkZWQgdG8gPG9ucy10YWI+IGluZGV4ICcgKyBpbmRleCk7XG4gICAgICB9XG4gICAgICBjYWxsYmFjayhwYWdlc1tpbmRleF0pO1xuICAgIH0gZWxzZSBpZiAodGhpcy5fbG9hZGluZ1BhZ2UpIHtcbiAgICAgIHRoaXMuX2xvYWRpbmdQYWdlLnRoZW4ocGFnZUVsZW1lbnQgPT4ge1xuICAgICAgICBjYWxsYmFjayhwYWdlRWxlbWVudCk7XG4gICAgICB9KTtcbiAgICB9IGVsc2UgaWYgKCF0aGlzLl9sb2FkZWRQYWdlKSB7XG4gICAgICBjb25zdCBkZWZlcnJlZCA9IHV0aWwuZGVmZXIoKTtcbiAgICAgIHRoaXMuX2xvYWRpbmdQYWdlID0gZGVmZXJyZWQucHJvbWlzZTtcblxuICAgICAgdGhpcy5fcGFnZUxvYWRlci5sb2FkKHsgcGFnZTogdGhpcy5fZ2V0UGFnZVRhcmdldCgpLCBwYXJlbnQgfSwgcGFnZUVsZW1lbnQgPT4ge1xuICAgICAgICB0aGlzLl9sb2FkZWRQYWdlID0gcGFnZUVsZW1lbnQ7XG4gICAgICAgIGRlZmVycmVkLnJlc29sdmUocGFnZUVsZW1lbnQpO1xuICAgICAgICBkZWxldGUgdGhpcy5fbG9hZGluZ1BhZ2U7XG5cbiAgICAgICAgY2FsbGJhY2socGFnZUVsZW1lbnQpO1xuICAgICAgfSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGNhbGxiYWNrKHRoaXMuX2xvYWRlZFBhZ2UpO1xuICAgIH1cbiAgfVxuXG4gIGdldCBwYWdlRWxlbWVudCgpIHtcbiAgICBpZiAodGhpcy5fbG9hZGVkUGFnZSkge1xuICAgICAgcmV0dXJuIHRoaXMuX2xvYWRlZFBhZ2U7XG4gICAgfVxuXG4gICAgY29uc3QgdGFiYmFyID0gdGhpcy5fZmluZFRhYmJhckVsZW1lbnQoKTtcbiAgICBjb25zdCBpbmRleCA9IHRoaXMuX2ZpbmRUYWJJbmRleCgpO1xuXG4gICAgcmV0dXJuIHRhYmJhci5fY29udGVudEVsZW1lbnQuY2hpbGRyZW5baW5kZXhdO1xuICB9XG5cbiAgLyoqXG4gICAqIEByZXR1cm4ge0Jvb2xlYW59XG4gICAqL1xuICBpc0FjdGl2ZSgpIHtcbiAgICByZXR1cm4gdGhpcy5jbGFzc0xpc3QuY29udGFpbnMoJ2FjdGl2ZScpO1xuICB9XG5cbiAgZGlzY29ubmVjdGVkQ2FsbGJhY2soKSB7XG4gICAgdGhpcy5yZW1vdmVFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMuX2JvdW5kT25DbGljaywgZmFsc2UpO1xuICAgIGlmICh0aGlzLl9sb2FkZWRQYWdlKSB7XG4gICAgICB0aGlzLl9wYWdlTG9hZGVyLnVubG9hZCh0aGlzLl9sb2FkZWRQYWdlKTtcbiAgICAgIHRoaXMuX2xvYWRlZFBhZ2UgPSBudWxsO1xuICAgIH1cbiAgfVxuXG4gIGNvbm5lY3RlZENhbGxiYWNrKCkge1xuICAgIGNvbnRlbnRSZWFkeSh0aGlzLCAoKSA9PiB7XG4gICAgICB0aGlzLl9lbnN1cmVFbGVtZW50UG9zaXRpb24oKTtcblxuICAgICAgY29uc3QgdGFiYmFyID0gdGhpcy5fZmluZFRhYmJhckVsZW1lbnQoKTtcblxuICAgICAgaWYgKHRhYmJhci5oYXNBdHRyaWJ1dGUoJ21vZGlmaWVyJykpIHtcbiAgICAgICAgY29uc3QgcHJlZml4ID0gdGhpcy5oYXNBdHRyaWJ1dGUoJ21vZGlmaWVyJykgPyB0aGlzLmdldEF0dHJpYnV0ZSgnbW9kaWZpZXInKSArICcgJyA6ICcnO1xuICAgICAgICB0aGlzLnNldEF0dHJpYnV0ZSgnbW9kaWZpZXInLCBwcmVmaXggKyB0YWJiYXIuZ2V0QXR0cmlidXRlKCdtb2RpZmllcicpKTtcbiAgICAgIH1cblxuICAgICAgY29uc3Qgb25SZWFkeSA9ICgpID0+IHtcbiAgICAgICAgaWYgKHRoaXMuX2dldFBhZ2VUYXJnZXQoKSAmJiAhdGhpcy5oYXNMb2FkZWQpIHtcbiAgICAgICAgICB0aGlzLmhhc0xvYWRlZCA9IHRydWU7XG4gICAgICAgICAgdGhpcy5fbG9hZFBhZ2VFbGVtZW50KHRhYmJhci5fY29udGVudEVsZW1lbnQsIHBhZ2VFbGVtZW50ID0+IHtcbiAgICAgICAgICAgIHBhZ2VFbGVtZW50LnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XG4gICAgICAgICAgICB0YWJiYXIuX2NvbnRlbnRFbGVtZW50LmFwcGVuZENoaWxkKHBhZ2VFbGVtZW50KTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICh0aGlzLmhhc0F0dHJpYnV0ZSgnYWN0aXZlJykpIHtcbiAgICAgICAgICB0YWJiYXIuc2V0QWN0aXZlVGFiKHRoaXMuX2ZpbmRUYWJJbmRleCgpKTtcbiAgICAgICAgfVxuICAgICAgfTtcblxuICAgICAgVGFiYmFyRWxlbWVudC5yZXdyaXRhYmxlcy5yZWFkeSh0YWJiYXIsIG9uUmVhZHkpO1xuXG4gICAgICB0aGlzLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdGhpcy5fYm91bmRPbkNsaWNrLCBmYWxzZSk7XG4gICAgfSk7XG4gIH1cblxuICBfZmluZFRhYmJhckVsZW1lbnQoKSB7XG4gICAgaWYgKHRoaXMucGFyZW50Tm9kZSAmJiB0aGlzLnBhcmVudE5vZGUubm9kZU5hbWUudG9Mb3dlckNhc2UoKSA9PT0gJ29ucy10YWJiYXInKSB7XG4gICAgICByZXR1cm4gdGhpcy5wYXJlbnROb2RlO1xuICAgIH1cblxuICAgIGlmICh0aGlzLnBhcmVudE5vZGUucGFyZW50Tm9kZSAmJiB0aGlzLnBhcmVudE5vZGUucGFyZW50Tm9kZS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpID09PSAnb25zLXRhYmJhcicpIHtcbiAgICAgIHJldHVybiB0aGlzLnBhcmVudE5vZGUucGFyZW50Tm9kZTtcbiAgICB9XG5cbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuXG4gIF9maW5kVGFiSW5kZXgoKSB7XG4gICAgY29uc3QgZWxlbWVudHMgPSB0aGlzLnBhcmVudE5vZGUuY2hpbGRyZW47XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBlbGVtZW50cy5sZW5ndGg7IGkrKykge1xuICAgICAgaWYgKHRoaXMgPT09IGVsZW1lbnRzW2ldKSB7XG4gICAgICAgIHJldHVybiBpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIF9lbnN1cmVFbGVtZW50UG9zaXRpb24oKSB7XG4gICAgaWYgKCF0aGlzLl9maW5kVGFiYmFyRWxlbWVudCgpKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ1RoaXMgb25zLXRhYiBlbGVtZW50IGlzIG11c3QgYmUgY2hpbGQgb2Ygb25zLXRhYmJhciBlbGVtZW50LicpO1xuICAgIH1cbiAgfVxuXG4gIHN0YXRpYyBnZXQgb2JzZXJ2ZWRBdHRyaWJ1dGVzKCkge1xuICAgIHJldHVybiBbJ21vZGlmaWVyJywgJ3JpcHBsZScsICdpY29uJywgJ2xhYmVsJywgJ3BhZ2UnLCAnYmFkZ2UnLCAnY2xhc3MnXTtcbiAgfVxuXG4gIGF0dHJpYnV0ZUNoYW5nZWRDYWxsYmFjayhuYW1lLCBsYXN0LCBjdXJyZW50KSB7XG4gICAgc3dpdGNoIChuYW1lKSB7XG4gICAgICBjYXNlICdjbGFzcyc6XG4gICAgICAgIGlmICghdGhpcy5jbGFzc0xpc3QuY29udGFpbnMoZGVmYXVsdENsYXNzTmFtZSkpIHtcbiAgICAgICAgICB0aGlzLmNsYXNzTmFtZSA9IGRlZmF1bHRDbGFzc05hbWUgKyAnICcgKyBjdXJyZW50O1xuICAgICAgICB9XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnbW9kaWZpZXInOlxuICAgICAgICBjb250ZW50UmVhZHkodGhpcywgKCkgPT4gTW9kaWZpZXJVdGlsLm9uTW9kaWZpZXJDaGFuZ2VkKGxhc3QsIGN1cnJlbnQsIHRoaXMsIHNjaGVtZSkpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ3JpcHBsZSc6XG4gICAgICAgIHRoaXMuX3RlbXBsYXRlTG9hZGVkKCkgJiYgY29udGVudFJlYWR5KHRoaXMsICgpID0+IHRoaXMuX3VwZGF0ZVJpcHBsZSgpKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlICdpY29uJzpcbiAgICAgIGNhc2UgJ2xhYmVsJzpcbiAgICAgIGNhc2UgJ2JhZGdlJzpcbiAgICAgICAgY29udGVudFJlYWR5KHRoaXMsICgpID0+IHRoaXMuX3VwZGF0ZURlZmF1bHRUZW1wbGF0ZSgpKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlICdwYWdlJzpcbiAgICAgICAgaWYgKHR5cGVvZiBjdXJyZW50ID09PSAnc3RyaW5nJykge1xuICAgICAgICAgIHRoaXMuX3BhZ2UgPSBjdXJyZW50O1xuICAgICAgICB9XG4gICAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxufVxuXG5jdXN0b21FbGVtZW50cy5kZWZpbmUoJ29ucy10YWInLCBUYWJFbGVtZW50KTtcbiIsIi8qXG5Db3B5cmlnaHQgMjAxMy0yMDE1IEFTSUFMIENPUlBPUkFUSU9OXG5cbkxpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG55b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG5Zb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcblxuICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG5cblVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbmRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbldJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxubGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5cbiovXG5cbmltcG9ydCB1dGlsIGZyb20gJy4uL29ucy91dGlsJztcbmltcG9ydCBhdXRvU3R5bGUgZnJvbSAnLi4vb25zL2F1dG9zdHlsZSc7XG5pbXBvcnQgTW9kaWZpZXJVdGlsIGZyb20gJy4uL29ucy9pbnRlcm5hbC9tb2RpZmllci11dGlsJztcbmltcG9ydCBCYXNlRWxlbWVudCBmcm9tICcuLi9vbnMvYmFzZS1lbGVtZW50JztcblxuY29uc3QgZGVmYXVsdENsYXNzTmFtZSA9ICd0b29sYmFyLWJ1dHRvbic7XG5cbmNvbnN0IHNjaGVtZSA9IHsnJzogJ3Rvb2xiYXItYnV0dG9uLS0qJ307XG5cbi8qKlxuICogQGVsZW1lbnQgb25zLXRvb2xiYXItYnV0dG9uXG4gKiBAY2F0ZWdvcnkgcGFnZVxuICogQG1vZGlmaWVyIG1hdGVyaWFsXG4gKiAgIFtlbl1NYXRlcmlhbCBEZXNpZ24gdG9vbGJhciBidXR0b24uWy9lbl1cbiAqICAgW2phXVsvamFdXG4gKiBAbW9kaWZpZXIgb3V0bGluZVxuICogICBbZW5dQSBidXR0b24gd2l0aCBhbiBvdXRsaW5lLlsvZW5dXG4gKiAgIFtqYV3jgqLjgqbjg4jjg6njgqTjg7PjgpLjgoLjgaPjgZ/jg5zjgr/jg7PjgpLooajnpLrjgZfjgb7jgZnjgIJbL2phXVxuICogQGRlc2NyaXB0aW9uXG4gKiAgIFtlbl1CdXR0b24gY29tcG9uZW50IGZvciBvbnMtdG9vbGJhciBhbmQgb25zLWJvdHRvbS10b29sYmFyLlsvZW5dXG4gKiAgIFtqYV1vbnMtdG9vbGJhcuOBguOCi+OBhOOBr29ucy1ib3R0b20tdG9vbGJhcuOBq+ioree9ruOBp+OBjeOCi+ODnOOCv+ODs+eUqOOCs+ODs+ODneODvOODjeODs+ODiOOBp+OBmeOAglsvamFdXG4gKiBAY29kZXBlbiBhSG1HTFxuICogQHR1dG9yaWFsIHZhbmlsbGEvUmVmZXJlbmNlL3BhZ2VcbiAqIEBndWlkZSBhZGRpbmctYS10b29sYmFyXG4gKiAgIFtlbl1BZGRpbmcgYSB0b29sYmFyWy9lbl1cbiAqICAgW2phXeODhOODvOODq+ODkOODvOOBrui/veWKoFsvamFdXG4gKiBAc2VlYWxzbyBvbnMtdG9vbGJhclxuICogICBbZW5dVGhlIGA8b25zLXRvb2xiYXI+YCBjb21wb25lbnQgZGlzcGxheXMgYSBuYXZpZ2F0aW9uIGJhciBhdCB0aGUgdG9wIG9mIGEgcGFnZS5bL2VuXVxuICogICBbamFdb25zLXRvb2xiYXLjgrPjg7Pjg53jg7zjg43jg7Pjg4hbL2phXVxuICogQHNlZWFsc28gb25zLWJhY2stYnV0dG9uXG4gKiAgIFtlbl1UaGUgYDxvbnMtYmFjay1idXR0b24+YCBkaXNwbGF5cyBhIGJhY2sgYnV0dG9uIGluIHRoZSBuYXZpZ2F0aW9uIGJhci5bL2VuXVxuICogICBbamFdb25zLWJhY2stYnV0dG9u44Kz44Oz44Od44O844ON44Oz44OIWy9qYV1cbiAqIEBleGFtcGxlXG4gKiA8b25zLXRvb2xiYXI+XG4gKiAgIDxkaXYgY2xhc3M9XCJsZWZ0XCI+XG4gKiAgICAgPG9ucy10b29sYmFyLWJ1dHRvbj5cbiAqICAgICAgIEJ1dHRvblxuICogICAgIDwvb25zLXRvb2xiYXItYnV0dG9uPlxuICogICA8L2Rpdj5cbiAqICAgPGRpdiBjbGFzcz1cImNlbnRlclwiPlxuICogICAgIFRpdGxlXG4gKiAgIDwvZGl2PlxuICogICA8ZGl2IGNsYXNzPVwicmlnaHRcIj5cbiAqICAgICA8b25zLXRvb2xiYXItYnV0dG9uPlxuICogICAgICAgPG9ucy1pY29uIGljb249XCJpb24tbmF2aWNvblwiIHNpemU9XCIyOHB4XCI+PC9vbnMtaWNvbj5cbiAqICAgICA8L29ucy10b29sYmFyLWJ1dHRvbj5cbiAqICAgPC9kaXY+XG4gKiA8L29ucy10b29sYmFyPlxuICovXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBUb29sYmFyQnV0dG9uRWxlbWVudCBleHRlbmRzIEJhc2VFbGVtZW50IHtcblxuICAvKipcbiAgICogQGF0dHJpYnV0ZSBtb2RpZmllclxuICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dVGhlIGFwcGVhcmFuY2Ugb2YgdGhlIGJ1dHRvbi5bL2VuXVxuICAgKiAgIFtqYV3jg5zjgr/jg7Pjga7ooajnj77jgpLmjIflrprjgZfjgb7jgZnjgIJbL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQGF0dHJpYnV0ZSBkaXNhYmxlZFxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dU3BlY2lmeSBpZiBidXR0b24gc2hvdWxkIGJlIGRpc2FibGVkLlsvZW5dXG4gICAqICAgW2phXeODnOOCv+ODs+OCkueEoeWKueWMluOBmeOCi+WgtOWQiOOBr+aMh+WumuOBl+OBpuOBj+OBoOOBleOBhOOAglsvamFdXG4gICAqL1xuXG4gIGluaXQoKSB7XG4gICAgdGhpcy5fY29tcGlsZSgpO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwcm9wZXJ0eSBkaXNhYmxlZFxuICAgKiBAdHlwZSB7Qm9vbGVhbn1cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXVdoZXRoZXIgdGhlIGVsZW1lbnQgaXMgZGlzYWJsZWQgb3Igbm90LlsvZW5dXG4gICAqICAgW2phXeeEoeWKueWMluOBleOCjOOBpuOBhOOCi+WgtOWQiOOBq2B0cnVlYOOAglsvamFdXG4gICAqL1xuICBzZXQgZGlzYWJsZWQodmFsdWUpIHtcbiAgICByZXR1cm4gdXRpbC50b2dnbGVBdHRyaWJ1dGUodGhpcywgJ2Rpc2FibGVkJywgdmFsdWUpO1xuICB9XG5cbiAgZ2V0IGRpc2FibGVkKCkge1xuICAgIHJldHVybiB0aGlzLmhhc0F0dHJpYnV0ZSgnZGlzYWJsZWQnKTtcbiAgfVxuXG4gIF9jb21waWxlKCkge1xuICAgIGF1dG9TdHlsZS5wcmVwYXJlKHRoaXMpO1xuXG4gICAgdGhpcy5jbGFzc0xpc3QuYWRkKGRlZmF1bHRDbGFzc05hbWUpO1xuXG4gICAgTW9kaWZpZXJVdGlsLmluaXRNb2RpZmllcih0aGlzLCBzY2hlbWUpO1xuICB9XG5cbiAgc3RhdGljIGdldCBvYnNlcnZlZEF0dHJpYnV0ZXMoKSB7XG4gICAgcmV0dXJuIFsnbW9kaWZpZXInLCAnY2xhc3MnXTtcbiAgfVxuXG4gIGF0dHJpYnV0ZUNoYW5nZWRDYWxsYmFjayhuYW1lLCBsYXN0LCBjdXJyZW50KSB7XG4gICAgc3dpdGNoIChuYW1lKSB7XG4gICAgICBjYXNlICdjbGFzcyc6XG4gICAgICAgIGlmICghdGhpcy5jbGFzc0xpc3QuY29udGFpbnMoZGVmYXVsdENsYXNzTmFtZSkpIHtcbiAgICAgICAgICB0aGlzLmNsYXNzTmFtZSA9IGRlZmF1bHRDbGFzc05hbWUgKyAnICcgKyBjdXJyZW50O1xuICAgICAgICB9XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnbW9kaWZpZXInOlxuICAgICAgICBNb2RpZmllclV0aWwub25Nb2RpZmllckNoYW5nZWQobGFzdCwgY3VycmVudCwgdGhpcywgc2NoZW1lKTtcbiAgICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG59XG5cbmN1c3RvbUVsZW1lbnRzLmRlZmluZSgnb25zLXRvb2xiYXItYnV0dG9uJywgVG9vbGJhckJ1dHRvbkVsZW1lbnQpO1xuIiwiLypcbkNvcHlyaWdodCAyMDEzLTIwMTUgQVNJQUwgQ09SUE9SQVRJT05cbkxpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG55b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG5Zb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG5TZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG5saW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiovXG5cbmltcG9ydCBhdXRvU3R5bGUgZnJvbSAnLi4vb25zL2F1dG9zdHlsZSc7XG5pbXBvcnQgTW9kaWZpZXJVdGlsIGZyb20gJy4uL29ucy9pbnRlcm5hbC9tb2RpZmllci11dGlsJztcbmltcG9ydCBCYXNlRWxlbWVudCBmcm9tICcuLi9vbnMvYmFzZS1lbGVtZW50JztcbmltcG9ydCB1dGlsIGZyb20gJy4uL29ucy91dGlsJztcbmltcG9ydCBjb250ZW50UmVhZHkgZnJvbSAnLi4vb25zL2NvbnRlbnQtcmVhZHknO1xuXG5jb25zdCBkZWZhdWx0Q2xhc3NOYW1lID0gJ3JhbmdlJztcblxuY29uc3Qgc2NoZW1lID0ge1xuICAnJzogJ3JhbmdlLS0qJyxcbiAgJy5yYW5nZV9faW5wdXQnOiAncmFuZ2UtLSpfX2lucHV0J1xufTtcblxuY29uc3QgSU5QVVRfQVRUUklCVVRFUyA9IFtcbiAgJ2F1dG9mb2N1cycsXG4gICdkaXNhYmxlZCcsXG4gICdpbnB1dG1vZGUnLFxuICAnbWF4JyxcbiAgJ21pbicsXG4gICduYW1lJyxcbiAgJ3BsYWNlaG9sZGVyJyxcbiAgJ3JlYWRvbmx5JyxcbiAgJ3NpemUnLFxuICAnc3RlcCcsXG4gICd2YWxpZGF0b3InLFxuICAndmFsdWUnXG5dO1xuXG4vKipcbiAqIEBlbGVtZW50IG9ucy1yYW5nZVxuICogQGNhdGVnb3J5IGZvcm1cbiAqIEBtb2RpZmllciBtYXRlcmlhbFxuICogICBbZW5dTWF0ZXJpYWwgRGVzaWduIHNsaWRlclsvZW5dXG4gKiAgIFtqYV1bL2phXVxuICogQGRlc2NyaXB0aW9uXG4gKiAgIFtlbl1cbiAqICAgICBSYW5nZSBpbnB1dCBjb21wb25lbnQuIFVzZWQgdG8gZGlzcGxheSBhIGRyYWdnYWJsZSBzbGlkZXIuXG4gKlxuICogICAgIFdvcmtzIHZlcnkgc2ltaWxhciB0byB0aGUgYDxpbnB1dCB0eXBlPVwicmFuZ2VcIj5gIGVsZW1lbnQuXG4gKiAgIFsvZW5dXG4gKiAgIFtqYV1bL2phXVxuICogQGNvZGVwZW4geFpRb21NXG4gKiBAdHV0b3JpYWwgdmFuaWxsYS9SZWZlcmVuY2UvcmFuZ2VcbiAqIEBndWlkZSB1c2luZy1tb2RpZmllciBbZW5dTW9yZSBkZXRhaWxzIGFib3V0IHRoZSBgbW9kaWZpZXJgIGF0dHJpYnV0ZVsvZW5dW2phXW1vZGlmaWVy5bGe5oCn44Gu5L2/44GE5pa5Wy9qYV1cbiAqIEBzZWVhbHNvIG9ucy1pbnB1dFxuICogICBbZW5dVGhlIGA8b25zLWlucHV0PmAgY29tcG9uZW50IGlzIHVzZWQgdG8gZGlzcGxheSB0ZXh0IGlucHV0cywgcmFkaW8gYnV0dG9ucyBhbmQgY2hlY2tib3hlcy5bL2VuXVxuICogICBbamFdWy9qYV1cbiAqIEBleGFtcGxlXG4gKiA8b25zLXJhbmdlIHZhbHVlPVwiMjBcIj48L29ucy1yYW5nZT5cbiAqIDxvbnMtcmFuZ2UgbW9kaWZpZXI9XCJtYXRlcmlhbFwiIHZhbHVlPVwiMTBcIj48L3JhbmdlPlxuICovXG5cbi8qKlxuICogQGF0dHJpYnV0ZSBkaXNhYmxlZFxuICogQGRlc2NyaXB0aW9uXG4gKiAgIFtlbl1XaGV0aGVyIHRoZSBlbGVtZW50IGlzIGRpc2FibGVkIG9yIG5vdC5bL2VuXVxuICogICBbamFd54Sh5Yq55YyW44GV44KM44Gm44GE44KL5aC05ZCI44GrYHRydWVg44CCWy9qYV1cbiAqL1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBSYW5nZUVsZW1lbnQgZXh0ZW5kcyBCYXNlRWxlbWVudCB7XG5cbiAgaW5pdCgpIHtcbiAgICBjb250ZW50UmVhZHkodGhpcywgKCkgPT4ge1xuICAgICAgdGhpcy5fY29tcGlsZSgpO1xuICAgICAgdGhpcy5fdXBkYXRlQm91bmRBdHRyaWJ1dGVzKCk7XG4gICAgICB0aGlzLl9vbkNoYW5nZSgpO1xuICAgIH0pO1xuICB9XG5cbiAgX2NvbXBpbGUoKSB7XG4gICAgdGhpcy5jbGFzc0xpc3QuYWRkKGRlZmF1bHRDbGFzc05hbWUpO1xuXG4gICAgYXV0b1N0eWxlLnByZXBhcmUodGhpcyk7XG5cbiAgICBpZiAoIXV0aWwuZmluZENoaWxkKHRoaXMsICcucmFuZ2VfX2lucHV0JykpIHtcbiAgICAgIGNvbnN0IGlucHV0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW5wdXQnKTtcbiAgICAgIGlucHV0LnNldEF0dHJpYnV0ZSgndHlwZScsICdyYW5nZScpO1xuICAgICAgaW5wdXQuY2xhc3NMaXN0LmFkZCgncmFuZ2VfX2lucHV0Jyk7XG4gICAgICB0aGlzLmFwcGVuZENoaWxkKGlucHV0KTtcbiAgICB9XG5cbiAgICBNb2RpZmllclV0aWwuaW5pdE1vZGlmaWVyKHRoaXMsIHNjaGVtZSk7XG5cbiAgICB0aGlzLl91cGRhdGVEaXNhYmxlZCgpO1xuICB9XG5cbiAgX29uQ2hhbmdlKCkge1xuICAgIHRoaXMuX2lucHV0LnN0eWxlLmJhY2tncm91bmRTaXplID0gKDEwMCAqIHRoaXMuX3JhdGlvKSArICclIDJweCc7XG4gIH1cblxuICBfb25EcmFnc3RhcnQoZSkge1xuICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgZS5nZXN0dXJlLnN0b3BQcm9wYWdhdGlvbigpO1xuICB9XG5cbiAgZ2V0IF9yYXRpbygpIHtcbiAgICAvLyBSZXR1cm5zIHRoZSBjdXJyZW50IHJhdGlvLlxuICAgIGNvbnN0IG1pbiA9IHRoaXMuX2lucHV0Lm1pbiA9PT0gJycgPyAwIDogcGFyc2VJbnQodGhpcy5faW5wdXQubWluKTtcbiAgICBjb25zdCBtYXggPSB0aGlzLl9pbnB1dC5tYXggPT09ICcnID8gMTAwIDogcGFyc2VJbnQodGhpcy5faW5wdXQubWF4KTtcblxuICAgIHJldHVybiAodGhpcy52YWx1ZSAtIG1pbikgLyAobWF4IC0gbWluKTtcbiAgfVxuXG4gIHN0YXRpYyBnZXQgb2JzZXJ2ZWRBdHRyaWJ1dGVzKCkge1xuICAgIHJldHVybiBbJ2NsYXNzJywgJ21vZGlmaWVyJywgLi4uSU5QVVRfQVRUUklCVVRFU107XG4gIH1cblxuICBfdXBkYXRlRGlzYWJsZWQoKSB7XG4gICAgaWYgKHRoaXMuaGFzQXR0cmlidXRlKCdkaXNhYmxlZCcpKSB7XG4gICAgICBNb2RpZmllclV0aWwuYWRkTW9kaWZpZXIodGhpcywgJ2Rpc2FibGVkJyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIE1vZGlmaWVyVXRpbC5yZW1vdmVNb2RpZmllcih0aGlzLCAnZGlzYWJsZWQnKTtcbiAgICB9XG4gIH1cblxuICBhdHRyaWJ1dGVDaGFuZ2VkQ2FsbGJhY2sobmFtZSwgbGFzdCwgY3VycmVudCkge1xuICAgIGlmIChuYW1lID09PSAnbW9kaWZpZXInKSB7XG4gICAgICBNb2RpZmllclV0aWwub25Nb2RpZmllckNoYW5nZWQobGFzdCwgY3VycmVudCwgdGhpcywgc2NoZW1lKTtcbiAgICB9IGVsc2UgaWYgKG5hbWUgPT09ICdjbGFzcycpIHtcbiAgICAgIGlmICghdGhpcy5jbGFzc0xpc3QuY29udGFpbnMoZGVmYXVsdENsYXNzTmFtZSkpIHtcbiAgICAgICAgdGhpcy5jbGFzc05hbWUgPSBkZWZhdWx0Q2xhc3NOYW1lICsgJyAnICsgY3VycmVudDtcbiAgICAgIH1cbiAgICB9IGVsc2UgaWYgKG5hbWUgPT09ICdkaXNhYmxlZCcpIHtcbiAgICAgIHRoaXMuX3VwZGF0ZURpc2FibGVkKCk7XG4gICAgfVxuXG4gICAgaWYgKElOUFVUX0FUVFJJQlVURVMuaW5kZXhPZihuYW1lKSA+PSAwKSB7XG4gICAgICBjb250ZW50UmVhZHkodGhpcywgKCkgPT4ge1xuICAgICAgICB0aGlzLl91cGRhdGVCb3VuZEF0dHJpYnV0ZXMoKTtcblxuICAgICAgICBpZiAobmFtZSA9PT0gJ21pbicgfHwgbmFtZSA9PT0gJ21heCcpIHtcbiAgICAgICAgICB0aGlzLl9vbkNoYW5nZSgpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG4gIH1cblxuICBjb25uZWN0ZWRDYWxsYmFjaygpIHtcbiAgICB0aGlzLmFkZEV2ZW50TGlzdGVuZXIoJ2RyYWdzdGFydCcsIHRoaXMuX29uRHJhZ3N0YXJ0KTtcbiAgICB0aGlzLmFkZEV2ZW50TGlzdGVuZXIoJ2lucHV0JywgdGhpcy5fb25DaGFuZ2UpO1xuICB9XG5cbiAgZGlzY29ubmVjdGVkQ2FsbGJhY2soKSB7XG4gICAgdGhpcy5yZW1vdmVFdmVudExpc3RlbmVyKCdkcmFnc3RhcnQnLCB0aGlzLl9vbkRyYWdzdGFydCk7XG4gICAgdGhpcy5yZW1vdmVFdmVudExpc3RlbmVyKCdpbnB1dCcsIHRoaXMuX29uQ2hhbmdlKTtcbiAgfVxuXG4gIF91cGRhdGVCb3VuZEF0dHJpYnV0ZXMoKSB7XG4gICAgSU5QVVRfQVRUUklCVVRFUy5mb3JFYWNoKChhdHRyKSA9PiB7XG4gICAgICBpZiAodGhpcy5oYXNBdHRyaWJ1dGUoYXR0cikpIHtcbiAgICAgICAgdGhpcy5faW5wdXQuc2V0QXR0cmlidXRlKGF0dHIsIHRoaXMuZ2V0QXR0cmlidXRlKGF0dHIpKTtcbiAgICAgIH1cbiAgICAgIGVsc2Uge1xuICAgICAgICB0aGlzLl9pbnB1dC5yZW1vdmVBdHRyaWJ1dGUoYXR0cik7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICBnZXQgX2lucHV0KCkge1xuICAgIHJldHVybiB0aGlzLnF1ZXJ5U2VsZWN0b3IoJ2lucHV0LnJhbmdlX19pbnB1dCcpO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwcm9wZXJ0eSBkaXNhYmxlZFxuICAgKiBAdHlwZSB7Qm9vbGVhbn1cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXVdoZXRoZXIgdGhlIGVsZW1lbnQgaXMgZGlzYWJsZWQgb3Igbm90LlsvZW5dXG4gICAqICAgW2phXeeEoeWKueWMluOBleOCjOOBpuOBhOOCi+WgtOWQiOOBq2B0cnVlYOOAglsvamFdXG4gICAqL1xuICBzZXQgZGlzYWJsZWQodmFsdWUpIHtcbiAgICByZXR1cm4gdXRpbC50b2dnbGVBdHRyaWJ1dGUodGhpcywgJ2Rpc2FibGVkJywgdmFsdWUpO1xuICB9XG5cbiAgZ2V0IGRpc2FibGVkKCkge1xuICAgIHJldHVybiB0aGlzLmhhc0F0dHJpYnV0ZSgnZGlzYWJsZWQnKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcHJvcGVydHkgdmFsdWVcbiAgICogQHR5cGUge051bWJlcn1cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXUN1cnJlbnQgdmFsdWUuWy9lbl1cbiAgICogICBbamFdWy9qYV1cbiAgICovXG4gIGdldCB2YWx1ZSgpIHtcbiAgICByZXR1cm4gdGhpcy5faW5wdXQgPT09IG51bGxcbiAgICAgID8gdGhpcy5nZXRBdHRyaWJ1dGUoJ3ZhbHVlJylcbiAgICAgIDogdGhpcy5faW5wdXQudmFsdWU7XG4gIH1cblxuICBzZXQgdmFsdWUodmFsKSB7XG4gICAgY29udGVudFJlYWR5KHRoaXMsICgpID0+IHtcbiAgICAgIHRoaXMuX2lucHV0LnZhbHVlID0gdmFsO1xuICAgICAgdGhpcy5fb25DaGFuZ2UoKTtcbiAgICB9KTtcbiAgfVxuXG4gIHN0YXRpYyBnZXQgZXZlbnRzKCkge1xuICAgIHJldHVybiBbJ2lucHV0JywgJ2NoYW5nZSddO1xuICB9XG59XG5cbmN1c3RvbUVsZW1lbnRzLmRlZmluZSgnb25zLXJhbmdlJywgUmFuZ2VFbGVtZW50KTtcbiIsImltcG9ydCAnLi9wb2x5ZmlsbHMnO1xuXG5pbXBvcnQgb25zIGZyb20gJy4vb25zL29ucyc7XG5cbmltcG9ydCBUZW1wbGF0ZUVsZW1lbnQgZnJvbSAnLi9lbGVtZW50cy9vbnMtdGVtcGxhdGUnO1xuaW1wb3J0IElmRWxlbWVudCBmcm9tICcuL2VsZW1lbnRzL29ucy1pZic7XG5pbXBvcnQgQWxlcnREaWFsb2dFbGVtZW50IGZyb20gJy4vZWxlbWVudHMvb25zLWFsZXJ0LWRpYWxvZyc7XG5pbXBvcnQgQmFja0J1dHRvbkVsZW1lbnQgZnJvbSAnLi9lbGVtZW50cy9vbnMtYmFjay1idXR0b24nO1xuaW1wb3J0IEJvdHRvbVRvb2xiYXJFbGVtZW50IGZyb20gJy4vZWxlbWVudHMvb25zLWJvdHRvbS10b29sYmFyJztcbmltcG9ydCBCdXR0b25FbGVtZW50IGZyb20gJy4vZWxlbWVudHMvb25zLWJ1dHRvbic7XG5pbXBvcnQgQ2Fyb3VzZWxJdGVtRWxlbWVudCBmcm9tICcuL2VsZW1lbnRzL29ucy1jYXJvdXNlbC1pdGVtJztcbmltcG9ydCBDYXJvdXNlbEVsZW1lbnQgZnJvbSAnLi9lbGVtZW50cy9vbnMtY2Fyb3VzZWwnO1xuaW1wb3J0IENvbEVsZW1lbnQgZnJvbSAnLi9lbGVtZW50cy9vbnMtY29sJztcbmltcG9ydCBEaWFsb2dFbGVtZW50IGZyb20gJy4vZWxlbWVudHMvb25zLWRpYWxvZyc7XG5pbXBvcnQgRmFiRWxlbWVudCBmcm9tICcuL2VsZW1lbnRzL29ucy1mYWInO1xuaW1wb3J0IEdlc3R1cmVEZXRlY3RvckVsZW1lbnQgZnJvbSAnLi9lbGVtZW50cy9vbnMtZ2VzdHVyZS1kZXRlY3Rvcic7XG5pbXBvcnQgSWNvbkVsZW1lbnQgZnJvbSAnLi9lbGVtZW50cy9vbnMtaWNvbic7XG5pbXBvcnQgTGF6eVJlcGVhdEVsZW1lbnQgZnJvbSAnLi9lbGVtZW50cy9vbnMtbGF6eS1yZXBlYXQnO1xuaW1wb3J0IExpc3RIZWFkZXJFbGVtZW50IGZyb20gJy4vZWxlbWVudHMvb25zLWxpc3QtaGVhZGVyJztcbmltcG9ydCBMaXN0SXRlbUVsZW1lbnQgZnJvbSAnLi9lbGVtZW50cy9vbnMtbGlzdC1pdGVtJztcbmltcG9ydCBMaXN0RWxlbWVudCBmcm9tICcuL2VsZW1lbnRzL29ucy1saXN0JztcbmltcG9ydCBJbnB1dEVsZW1lbnQgZnJvbSAnLi9lbGVtZW50cy9vbnMtaW5wdXQnO1xuaW1wb3J0IE1vZGFsRWxlbWVudCBmcm9tICcuL2VsZW1lbnRzL29ucy1tb2RhbCc7XG5pbXBvcnQgTmF2aWdhdG9yRWxlbWVudCBmcm9tICcuL2VsZW1lbnRzL29ucy1uYXZpZ2F0b3InO1xuaW1wb3J0IFBhZ2VFbGVtZW50IGZyb20gJy4vZWxlbWVudHMvb25zLXBhZ2UnO1xuaW1wb3J0IFBvcG92ZXJFbGVtZW50IGZyb20gJy4vZWxlbWVudHMvb25zLXBvcG92ZXInO1xuaW1wb3J0IFByb2dyZXNzQmFyRWxlbWVudCBmcm9tICcuL2VsZW1lbnRzL29ucy1wcm9ncmVzcy1iYXInO1xuaW1wb3J0IFByb2dyZXNzQ2lyY3VsYXJFbGVtZW50IGZyb20gJy4vZWxlbWVudHMvb25zLXByb2dyZXNzLWNpcmN1bGFyJztcbmltcG9ydCBQdWxsSG9va0VsZW1lbnQgZnJvbSAnLi9lbGVtZW50cy9vbnMtcHVsbC1ob29rJztcbmltcG9ydCBSaXBwbGVFbGVtZW50IGZyb20gJy4vZWxlbWVudHMvb25zLXJpcHBsZSc7XG5pbXBvcnQgUm93RWxlbWVudCBmcm9tICcuL2VsZW1lbnRzL29ucy1yb3cnO1xuaW1wb3J0IFNlbGVjdEVsZW1lbnQgZnJvbSAnLi9lbGVtZW50cy9vbnMtc2VsZWN0JztcbmltcG9ydCBTcGVlZERpYWxJdGVtRWxlbWVudCBmcm9tICcuL2VsZW1lbnRzL29ucy1zcGVlZC1kaWFsLWl0ZW0nO1xuaW1wb3J0IFNwZWVkRGlhbEVsZW1lbnQgZnJvbSAnLi9lbGVtZW50cy9vbnMtc3BlZWQtZGlhbCc7XG5pbXBvcnQgU3BsaXR0ZXJDb250ZW50RWxlbWVudCBmcm9tICcuL2VsZW1lbnRzL29ucy1zcGxpdHRlci1jb250ZW50JztcbmltcG9ydCBTcGxpdHRlck1hc2tFbGVtZW50IGZyb20gJy4vZWxlbWVudHMvb25zLXNwbGl0dGVyLW1hc2snO1xuaW1wb3J0IFNwbGl0dGVyU2lkZUVsZW1lbnQgZnJvbSAnLi9lbGVtZW50cy9vbnMtc3BsaXR0ZXItc2lkZSc7XG5pbXBvcnQgU3BsaXR0ZXJFbGVtZW50IGZyb20gJy4vZWxlbWVudHMvb25zLXNwbGl0dGVyJztcbmltcG9ydCBTd2l0Y2hFbGVtZW50IGZyb20gJy4vZWxlbWVudHMvb25zLXN3aXRjaCc7XG5pbXBvcnQgVGFiRWxlbWVudCBmcm9tICcuL2VsZW1lbnRzL29ucy10YWInO1xuaW1wb3J0IFRhYmJhckVsZW1lbnQgZnJvbSAnLi9lbGVtZW50cy9vbnMtdGFiYmFyJztcbmltcG9ydCBUb29sYmFyQnV0dG9uRWxlbWVudCBmcm9tICcuL2VsZW1lbnRzL29ucy10b29sYmFyLWJ1dHRvbic7XG5pbXBvcnQgVG9vbGJhckVsZW1lbnQgZnJvbSAnLi9lbGVtZW50cy9vbnMtdG9vbGJhcic7XG5pbXBvcnQgUmFuZ2VFbGVtZW50IGZyb20gJy4vZWxlbWVudHMvb25zLXJhbmdlJztcblxub25zLlRlbXBsYXRlRWxlbWVudCA9IFRlbXBsYXRlRWxlbWVudDtcbm9ucy5JZkVsZW1lbnQgPSBJZkVsZW1lbnQ7XG5vbnMuQWxlcnREaWFsb2dFbGVtZW50ID0gQWxlcnREaWFsb2dFbGVtZW50O1xub25zLkJhY2tCdXR0b25FbGVtZW50ID0gQmFja0J1dHRvbkVsZW1lbnQ7XG5vbnMuQm90dG9tVG9vbGJhckVsZW1lbnQgPSBCb3R0b21Ub29sYmFyRWxlbWVudDtcbm9ucy5CdXR0b25FbGVtZW50ID0gQnV0dG9uRWxlbWVudDtcbm9ucy5DYXJvdXNlbEl0ZW1FbGVtZW50ID0gQ2Fyb3VzZWxJdGVtRWxlbWVudDtcbm9ucy5DYXJvdXNlbEVsZW1lbnQgPSBDYXJvdXNlbEVsZW1lbnQ7XG5vbnMuQ29sRWxlbWVudCA9IENvbEVsZW1lbnQ7XG5vbnMuRGlhbG9nRWxlbWVudCA9IERpYWxvZ0VsZW1lbnQ7XG5vbnMuRmFiRWxlbWVudCA9IEZhYkVsZW1lbnQ7XG5vbnMuR2VzdHVyZURldGVjdG9yRWxlbWVudCA9IEdlc3R1cmVEZXRlY3RvckVsZW1lbnQ7XG5vbnMuSWNvbkVsZW1lbnQgPSBJY29uRWxlbWVudDtcbm9ucy5MYXp5UmVwZWF0RWxlbWVudCA9IExhenlSZXBlYXRFbGVtZW50O1xub25zLkxpc3RIZWFkZXJFbGVtZW50ID0gTGlzdEhlYWRlckVsZW1lbnQ7XG5vbnMuTGlzdEl0ZW1FbGVtZW50ID0gTGlzdEl0ZW1FbGVtZW50O1xub25zLkxpc3RFbGVtZW50ID0gTGlzdEVsZW1lbnQ7XG5vbnMuSW5wdXRFbGVtZW50ID0gSW5wdXRFbGVtZW50O1xub25zLk1vZGFsRWxlbWVudCA9IE1vZGFsRWxlbWVudDtcbm9ucy5OYXZpZ2F0b3JFbGVtZW50ID0gTmF2aWdhdG9yRWxlbWVudDtcbm9ucy5QYWdlRWxlbWVudCA9IFBhZ2VFbGVtZW50O1xub25zLlBvcG92ZXJFbGVtZW50ID0gUG9wb3ZlckVsZW1lbnQ7XG5vbnMuUHJvZ3Jlc3NCYXJFbGVtZW50ID0gUHJvZ3Jlc3NCYXJFbGVtZW50O1xub25zLlByb2dyZXNzQ2lyY3VsYXJFbGVtZW50ID0gUHJvZ3Jlc3NDaXJjdWxhckVsZW1lbnQ7XG5vbnMuUHVsbEhvb2tFbGVtZW50ID0gUHVsbEhvb2tFbGVtZW50O1xub25zLlJpcHBsZUVsZW1lbnQgPSBSaXBwbGVFbGVtZW50O1xub25zLlJvd0VsZW1lbnQgPSBSb3dFbGVtZW50O1xub25zLlNlbGVjdEVsZW1lbnQgPSBTZWxlY3RFbGVtZW50O1xub25zLlNwZWVkRGlhbEl0ZW1FbGVtZW50ID0gU3BlZWREaWFsSXRlbUVsZW1lbnQ7XG5vbnMuU3BlZWREaWFsRWxlbWVudCA9IFNwZWVkRGlhbEVsZW1lbnQ7XG5vbnMuU3BsaXR0ZXJDb250ZW50RWxlbWVudCA9IFNwbGl0dGVyQ29udGVudEVsZW1lbnQ7XG5vbnMuU3BsaXR0ZXJNYXNrRWxlbWVudCA9IFNwbGl0dGVyTWFza0VsZW1lbnQ7XG5vbnMuU3BsaXR0ZXJTaWRlRWxlbWVudCA9IFNwbGl0dGVyU2lkZUVsZW1lbnQ7XG5vbnMuU3BsaXR0ZXJFbGVtZW50ID0gU3BsaXR0ZXJFbGVtZW50O1xub25zLlN3aXRjaEVsZW1lbnQgPSBTd2l0Y2hFbGVtZW50O1xub25zLlRhYkVsZW1lbnQgPSBUYWJFbGVtZW50O1xub25zLlRhYmJhckVsZW1lbnQgPSBUYWJiYXJFbGVtZW50O1xub25zLlRvb2xiYXJCdXR0b25FbGVtZW50ID0gVG9vbGJhckJ1dHRvbkVsZW1lbnQ7XG5vbnMuVG9vbGJhckVsZW1lbnQgPSBUb29sYmFyRWxlbWVudDtcbm9ucy5SYW5nZUVsZW1lbnQgPSBSYW5nZUVsZW1lbnQ7XG5cbi8vIGZhc3RjbGlja1xud2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ2xvYWQnLCAoKSA9PiB7XG4gICAgb25zLmZhc3RDbGljayA9IEZhc3RDbGljay5hdHRhY2goZG9jdW1lbnQuYm9keSk7XG59LCBmYWxzZSk7XG5cbi8vIG9ucy5fZGVmYXVsdERldmljZUJhY2tCdXR0b25IYW5kbGVyXG53aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignRE9NQ29udGVudExvYWRlZCcsICgpID0+IHtcbiAgb25zLl9kZXZpY2VCYWNrQnV0dG9uRGlzcGF0Y2hlci5lbmFibGUoKTtcbiAgb25zLl9kZWZhdWx0RGV2aWNlQmFja0J1dHRvbkhhbmRsZXIgPSBvbnMuX2RldmljZUJhY2tCdXR0b25EaXNwYXRjaGVyLmNyZWF0ZUhhbmRsZXIod2luZG93LmRvY3VtZW50LmJvZHksICgpID0+IHtcbiAgICBuYXZpZ2F0b3IuYXBwLmV4aXRBcHAoKTtcbiAgfSk7XG4gIGRvY3VtZW50LmJvZHkuX2dlc3R1cmVEZXRlY3RvciA9IG5ldyBvbnMuR2VzdHVyZURldGVjdG9yKGRvY3VtZW50LmJvZHkpO1xufSwgZmFsc2UpO1xuXG4vLyBzZXR1cCBsb2FkaW5nIHBsYWNlaG9sZGVyXG5vbnMucmVhZHkoZnVuY3Rpb24oKSB7XG4gIG9ucy5fc2V0dXBMb2FkaW5nUGxhY2VIb2xkZXJzKCk7XG59KTtcblxuLy8gdmlld3BvcnQuanNcbm5ldyBWaWV3cG9ydCgpLnNldHVwKCk7XG5cbmV4cG9ydCBkZWZhdWx0IG9ucztcbiJdfQ==\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/raw-loader!./~/onsenui/js/onsenui.js\n// module id = 664\n// module chunks = 3","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\nmodule.exports = function(src) {\r\n\tif (typeof execScript !== \"undefined\")\r\n\t\texecScript(src);\r\n\telse\r\n\t\teval.call(null, src);\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/script-loader/addScript.js\n// module id = 96\n// module chunks = 3"],"sourceRoot":""}